{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-eea-map/src/components/visualization/VisualizationEditorWidget.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Modal, Button, Grid } from 'semantic-ui-react';\nimport { FormFieldWrapper, InlineForm } from '@plone/volto/components';\nimport PanelsSchema from './panelsSchema';\nimport Webmap from '../Webmap';\nvar VisualizationEditorWidget = function VisualizationEditorWidget(props) {\n  _s();\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    open = _React$useState2[0],\n    setOpen = _React$useState2[1];\n  var _props$onChange = props.onChange,\n    onChange = _props$onChange === void 0 ? {} : _props$onChange,\n    id = props.id;\n  var block = React.useMemo(function () {\n    return props.block;\n  }, [props.block]);\n  var value = React.useMemo(function () {\n    return props.value;\n  }, [props.value]);\n  var _React$useState3 = React.useState(value),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    intValue = _React$useState4[0],\n    setIntValue = _React$useState4[1];\n  var dataForm = {\n    map_data: intValue\n  };\n  var handleApplyChanges = function handleApplyChanges() {\n    onChange(id, intValue);\n    setOpen(false);\n  };\n  var handleClose = function handleClose() {\n    setIntValue(value);\n    setOpen(false);\n  };\n  var handleChangeField = function handleChangeField(val) {\n    setIntValue(val);\n  };\n  var schema = PanelsSchema({\n    data: dataForm\n  });\n  React.useEffect(function () {\n    if (!(intValue !== null && intValue !== void 0 && intValue.general)) {\n      setIntValue(_objectSpread(_objectSpread({}, intValue), {}, {\n        general: {\n          print_position: 'top-right',\n          zoom_position: 'top-right',\n          centerOnExtent: true,\n          scalebar: 'metric'\n        }\n      }));\n    }\n    if (!(intValue !== null && intValue !== void 0 && intValue.base)) {\n      setIntValue(_objectSpread(_objectSpread({}, intValue), {}, {\n        base: {\n          base_layer: 'gray-vector'\n        }\n      }));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [intValue]);\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    floated: \"right\",\n    size: \"tiny\",\n    onClick: function onClick(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      setOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Open Map Editor\")), open && __jsx(Modal, {\n    id: \"map-editor-modal\",\n    style: {\n      width: '95% !important'\n    },\n    open: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(Modal.Content, {\n    scrolling: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    stackable: true,\n    reversed: \"mobile vertically tablet vertically\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, __jsx(Grid.Column, {\n    mobile: 12,\n    tablet: 12,\n    computer: 5,\n    className: \"map-editor-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, __jsx(InlineForm, {\n    block: block,\n    schema: schema,\n    onChangeField: function onChangeField(id, value) {\n      handleChangeField(value);\n    },\n    formData: dataForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), __jsx(Grid.Column, {\n    mobile: 12,\n    tablet: 12,\n    computer: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"webmap-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, __jsx(Webmap, {\n    data: intValue,\n    editMode: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }))))), __jsx(Modal.Actions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, __jsx(Grid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"map-edit-actions-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, \"Close\"), __jsx(Button, {\n    color: \"green\",\n    onClick: handleApplyChanges,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, \"Apply changes\")))))), __jsx(Webmap, {\n    data: value,\n    editMode: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }));\n};\n_s(VisualizationEditorWidget, \"OYEQmT3q0ROLdgKjq/nX73d2P2s=\");\n_c = VisualizationEditorWidget;\nexport default VisualizationEditorWidget;\nvar _c;\n$RefreshReg$(_c, \"VisualizationEditorWidget\");","map":{"version":3,"names":["React","Modal","Button","Grid","FormFieldWrapper","InlineForm","PanelsSchema","Webmap","VisualizationEditorWidget","props","useState","open","setOpen","onChange","id","block","useMemo","value","intValue","setIntValue","dataForm","map_data","handleApplyChanges","handleClose","handleChangeField","val","schema","data","useEffect","general","print_position","zoom_position","centerOnExtent","scalebar","base","base_layer","e","preventDefault","stopPropagation","width"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-eea-map/src/components/visualization/VisualizationEditorWidget.jsx"],"sourcesContent":["import React from 'react';\nimport { Modal, Button, Grid } from 'semantic-ui-react';\n\nimport { FormFieldWrapper, InlineForm } from '@plone/volto/components';\n\nimport PanelsSchema from './panelsSchema';\nimport Webmap from '../Webmap';\n\nconst VisualizationEditorWidget = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const { onChange = {}, id } = props;\n  const block = React.useMemo(() => props.block, [props.block]);\n  const value = React.useMemo(() => props.value, [props.value]);\n\n  const [intValue, setIntValue] = React.useState(value);\n\n  const dataForm = { map_data: intValue };\n  const handleApplyChanges = () => {\n    onChange(id, intValue);\n    setOpen(false);\n  };\n\n  const handleClose = () => {\n    setIntValue(value);\n    setOpen(false);\n  };\n\n  const handleChangeField = (val) => {\n    setIntValue(val);\n  };\n\n  let schema = PanelsSchema({ data: dataForm });\n\n  React.useEffect(() => {\n    if (!intValue?.general) {\n      setIntValue({\n        ...intValue,\n        general: {\n          print_position: 'top-right',\n          zoom_position: 'top-right',\n          centerOnExtent: true,\n          scalebar: 'metric',\n        },\n      });\n    }\n    if (!intValue?.base) {\n      setIntValue({\n        ...intValue,\n        base: {\n          base_layer: 'gray-vector',\n        },\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [intValue]);\n\n  return (\n    <FormFieldWrapper {...props}>\n      <div className=\"wrapper\">\n        <Button\n          floated=\"right\"\n          size=\"tiny\"\n          onClick={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            setOpen(true);\n          }}\n        >\n          Open Map Editor\n        </Button>\n      </div>\n\n      {open && (\n        <Modal\n          id=\"map-editor-modal\"\n          style={{ width: '95% !important' }}\n          open={true}\n        >\n          <Modal.Content scrolling>\n            <Grid stackable reversed=\"mobile vertically tablet vertically\">\n              <Grid.Column\n                mobile={12}\n                tablet={12}\n                computer={5}\n                className=\"map-editor-column\"\n              >\n                <InlineForm\n                  block={block}\n                  schema={schema}\n                  onChangeField={(id, value) => {\n                    handleChangeField(value);\n                  }}\n                  formData={dataForm}\n                />\n              </Grid.Column>\n              <Grid.Column mobile={12} tablet={12} computer={7}>\n                <div className=\"webmap-container\">\n                  <Webmap data={intValue} editMode={true} />\n                </div>\n              </Grid.Column>\n            </Grid>\n          </Modal.Content>\n          <Modal.Actions>\n            <Grid>\n              <Grid.Row>\n                <div className=\"map-edit-actions-container\">\n                  <Button onClick={handleClose}>Close</Button>\n                  <Button color=\"green\" onClick={handleApplyChanges}>\n                    Apply changes\n                  </Button>\n                </div>\n              </Grid.Row>\n            </Grid>\n          </Modal.Actions>\n        </Modal>\n      )}\n      <Webmap data={value} editMode={true} />\n    </FormFieldWrapper>\n  );\n};\n\nexport default VisualizationEditorWidget;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}