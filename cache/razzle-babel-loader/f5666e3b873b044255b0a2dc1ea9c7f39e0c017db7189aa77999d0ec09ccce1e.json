{"ast":null,"code":"import _find from \"lodash/find\";\nimport _filter from \"lodash/filter\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Toolbar/Toolbar.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Toolbar component.\n * @module components/manage/Toolbar/Toolbar\n */\n\nimport React, { Component } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport { withCookies } from 'react-cookie';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\nimport More from '@plone/volto/components/manage/Toolbar/More';\nimport PersonalTools from '@plone/volto/components/manage/Toolbar/PersonalTools';\nimport Types from '@plone/volto/components/manage/Toolbar/Types';\nimport PersonalInformation from '@plone/volto/components/manage/Preferences/PersonalInformation';\nimport PersonalPreferences from '@plone/volto/components/manage/Preferences/PersonalPreferences';\nimport StandardWrapper from '@plone/volto/components/manage/Toolbar/StandardWrapper';\nimport { getTypes, listActions, setExpandedToolbar, unlockContent } from '@plone/volto/actions';\nimport { Icon } from '@plone/volto/components';\nimport { BodyClass, getBaseUrl, getCookieOptions } from '@plone/volto/helpers';\nimport { Pluggable } from '@plone/volto/components/manage/Pluggable';\nimport penSVG from '@plone/volto/icons/pen.svg';\nimport unlockSVG from '@plone/volto/icons/unlock.svg';\nimport folderSVG from '@plone/volto/icons/folder.svg';\nimport addSVG from '@plone/volto/icons/add-document.svg';\nimport moreSVG from '@plone/volto/icons/more.svg';\nimport userSVG from '@plone/volto/icons/user.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nconst messages = defineMessages({\n  edit: {\n    \"id\": \"Edit\",\n    \"defaultMessage\": \"Edit\"\n  },\n  contents: {\n    \"id\": \"Contents\",\n    \"defaultMessage\": \"Contents\"\n  },\n  add: {\n    \"id\": \"Add\",\n    \"defaultMessage\": \"Add\"\n  },\n  more: {\n    \"id\": \"More\",\n    \"defaultMessage\": \"More\"\n  },\n  personalTools: {\n    \"id\": \"Personal tools\",\n    \"defaultMessage\": \"Personal tools\"\n  },\n  shrinkToolbar: {\n    \"id\": \"Shrink toolbar\",\n    \"defaultMessage\": \"Shrink toolbar\"\n  },\n  personalInformation: {\n    \"id\": \"Personal Information\",\n    \"defaultMessage\": \"Personal Information\"\n  },\n  personalPreferences: {\n    \"id\": \"Personal Preferences\",\n    \"defaultMessage\": \"Personal Preferences\"\n  },\n  collection: {\n    \"id\": \"Collection\",\n    \"defaultMessage\": \"Collection\"\n  },\n  file: {\n    \"id\": \"File\",\n    \"defaultMessage\": \"File\"\n  },\n  link: {\n    \"id\": \"Link\",\n    \"defaultMessage\": \"Link\"\n  },\n  newsItem: {\n    \"id\": \"News Item\",\n    \"defaultMessage\": \"News Item\"\n  },\n  page: {\n    \"id\": \"Page\",\n    \"defaultMessage\": \"Page\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  unlock: {\n    \"id\": \"Unlock\",\n    \"defaultMessage\": \"Unlock\"\n  }\n});\nconst toolbarComponents = {\n  personalTools: {\n    component: PersonalTools,\n    wrapper: null\n  },\n  more: {\n    component: More,\n    wrapper: null\n  },\n  types: {\n    component: Types,\n    wrapper: null,\n    contentAsProps: true\n  },\n  profile: {\n    component: PersonalInformation,\n    wrapper: StandardWrapper,\n    wrapperTitle: messages.personalInformation,\n    hideToolbarBody: true\n  },\n  preferences: {\n    component: PersonalPreferences,\n    wrapper: StandardWrapper,\n    wrapperTitle: messages.personalPreferences,\n    hideToolbarBody: true\n  }\n};\n\n/**\n * Toolbar container class.\n * @class Toolbar\n * @extends Component\n */\nclass Toolbar extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"toolbarWindow\", /*#__PURE__*/React.createRef());\n    _defineProperty(this, \"handleShrink\", () => {\n      const {\n        cookies\n      } = this.props;\n      cookies.set('toolbar_expanded', !this.state.expanded, getCookieOptions());\n      this.setState(state => ({\n        expanded: !state.expanded\n      }), () => this.props.setExpandedToolbar(this.state.expanded));\n    });\n    _defineProperty(this, \"closeMenu\", () => this.setState(() => ({\n      showMenu: false,\n      loadedComponents: []\n    })));\n    _defineProperty(this, \"loadComponent\", type => {\n      const {\n        loadedComponents\n      } = this.state;\n      if (!this.state.loadedComponents.includes(type)) {\n        this.setState({\n          loadedComponents: [...loadedComponents, type],\n          hideToolbarBody: toolbarComponents[type].hideToolbarBody || false\n        });\n      }\n    });\n    _defineProperty(this, \"unloadComponent\", () => {\n      this.setState(state => ({\n        loadedComponents: state.loadedComponents.slice(0, -1),\n        hideToolbarBody: toolbarComponents[state.loadedComponents[state.loadedComponents.length - 2]].hideToolbarBody || false\n      }));\n    });\n    _defineProperty(this, \"toggleMenu\", (e, selector) => {\n      if (this.state.showMenu) {\n        this.closeMenu();\n        return;\n      }\n      // PersonalTools always shows at bottom\n      if (selector === 'personalTools') {\n        this.setState(state => ({\n          showMenu: !state.showMenu,\n          menuStyle: {\n            bottom: 0\n          }\n        }));\n      } else if (selector === 'more') {\n        this.setState(state => ({\n          showMenu: !state.showMenu,\n          menuStyle: {\n            overflow: 'visible',\n            top: 0\n          }\n        }));\n      } else {\n        this.setState(state => ({\n          showMenu: !state.showMenu,\n          menuStyle: {\n            top: 0\n          }\n        }));\n      }\n      this.loadComponent(selector);\n    });\n    _defineProperty(this, \"handleClickOutside\", e => {\n      if (this.pusher && doesNodeContainClick(this.pusher, e)) return;\n      this.closeMenu();\n    });\n    _defineProperty(this, \"unlock\", e => {\n      this.props.unlockContent(getBaseUrl(this.props.pathname), true);\n    });\n    const {\n      cookies: _cookies\n    } = props;\n    this.state = {\n      expanded: _cookies.get('toolbar_expanded') !== 'false',\n      showMenu: false,\n      menuStyle: {},\n      menuComponents: [],\n      loadedComponents: [],\n      hideToolbarBody: false\n    };\n  }\n\n  /**\n   * Component will mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.listActions(getBaseUrl(this.props.pathname));\n    this.props.getTypes(getBaseUrl(this.props.pathname));\n    this.props.setExpandedToolbar(this.state.expanded);\n    document.addEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.listActions(getBaseUrl(nextProps.pathname));\n      this.props.getTypes(getBaseUrl(nextProps.pathname));\n    }\n\n    // Unlock\n    if (this.props.unlockRequest.loading && nextProps.unlockRequest.loaded) {\n      this.props.listActions(getBaseUrl(nextProps.pathname));\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillUnmount\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside, false);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$content, _this$props$content2, _this$props$content3;\n    const path = getBaseUrl(this.props.pathname);\n    const lock = (_this$props$content = this.props.content) === null || _this$props$content === void 0 ? void 0 : _this$props$content.lock;\n    const unlockAction = (lock === null || lock === void 0 ? void 0 : lock.locked) && (lock === null || lock === void 0 ? void 0 : lock.stealable) && (lock === null || lock === void 0 ? void 0 : lock.creator) !== this.props.userId;\n    const editAction = !unlockAction && _find(this.props.actions.object, {\n      id: 'edit'\n    });\n    const folderContentsAction = _find(this.props.actions.object, {\n      id: 'folderContents'\n    });\n    const {\n      expanded\n    } = this.state;\n    return this.props.token && __jsx(React.Fragment, null, __jsx(BodyClass, {\n      className: expanded ? 'has-toolbar' : 'has-toolbar-collapsed',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      style: this.state.menuStyle,\n      className: this.state.showMenu ? 'toolbar-content show' : 'toolbar-content',\n      ref: this.toolbarWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }\n    }, this.state.showMenu &&\n    // This sets the scroll locker in the body tag in mobile\n    __jsx(BodyClass, {\n      className: \"has-toolbar-menu-open\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      className: \"pusher-puller\",\n      ref: node => this.pusher = node,\n      style: {\n        transform: this.toolbarWindow.current ? `translateX(-${(this.state.loadedComponents.length - 1) * this.toolbarWindow.current.getBoundingClientRect().width}px)` : null\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 13\n      }\n    }, this.state.loadedComponents.map((component, index) => (() => {\n      const ToolbarComponent = toolbarComponents[component].component;\n      const WrapperComponent = toolbarComponents[component].wrapper;\n      const haveActions = toolbarComponents[component].hideToolbarBody;\n      const title = toolbarComponents[component].wrapperTitle && this.props.intl.formatMessage(toolbarComponents[component].wrapperTitle);\n      if (WrapperComponent) {\n        return __jsx(WrapperComponent, {\n          componentName: component,\n          componentTitle: title,\n          pathname: this.props.pathname,\n          loadComponent: this.loadComponent,\n          unloadComponent: this.unloadComponent,\n          componentIndex: index,\n          theToolbar: this.toolbarWindow,\n          key: `personalToolsComponent-${index}`,\n          closeMenu: this.closeMenu,\n          hasActions: haveActions,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 23\n          }\n        }, __jsx(ToolbarComponent, {\n          pathname: this.props.pathname,\n          loadComponent: this.loadComponent,\n          unloadComponent: this.unloadComponent,\n          componentIndex: index,\n          theToolbar: this.toolbarWindow,\n          closeMenu: this.closeMenu,\n          isToolbarEmbedded: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 25\n          }\n        }));\n      } else {\n        return __jsx(ToolbarComponent, {\n          pathname: this.props.pathname,\n          loadComponent: this.loadComponent,\n          unloadComponent: this.unloadComponent,\n          componentIndex: index,\n          theToolbar: this.toolbarWindow,\n          key: `personalToolsComponent-${index}`,\n          closeMenu: this.closeMenu,\n          content: toolbarComponents[component].contentAsProps ? this.props.content : null,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 23\n          }\n        });\n      }\n    })()))), __jsx(\"div\", {\n      className: this.state.expanded ? 'toolbar expanded' : 'toolbar',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"toolbar-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"toolbar-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    }, this.props.hideDefaultViewButtons && this.props.inner && __jsx(React.Fragment, null, this.props.inner), !this.props.hideDefaultViewButtons && __jsx(React.Fragment, null, unlockAction && __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.unlock),\n      className: \"unlock\",\n      onClick: e => this.unlock(e),\n      tabIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 23\n      }\n    }, __jsx(Icon, {\n      name: unlockSVG,\n      size: \"30px\",\n      className: \"unlock\",\n      title: this.props.intl.formatMessage(messages.unlock),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 25\n      }\n    })), editAction && __jsx(Link, {\n      \"aria-label\": this.props.intl.formatMessage(messages.edit),\n      className: \"edit\",\n      to: `${path}/edit`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 23\n      }\n    }, __jsx(Icon, {\n      name: penSVG,\n      size: \"30px\",\n      className: \"circled\",\n      title: this.props.intl.formatMessage(messages.edit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 25\n      }\n    })), this.props.content && this.props.content.is_folderish && folderContentsAction && !this.props.pathname.endsWith('/contents') && __jsx(Link, {\n      \"aria-label\": this.props.intl.formatMessage(messages.contents),\n      to: `${path}/contents`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 25\n      }\n    }, __jsx(Icon, {\n      name: folderSVG,\n      size: \"30px\",\n      title: this.props.intl.formatMessage(messages.contents),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 27\n      }\n    })), this.props.content && this.props.content.is_folderish && folderContentsAction && this.props.pathname.endsWith('/contents') && __jsx(Link, {\n      to: `${path}`,\n      \"aria-label\": this.props.intl.formatMessage(messages.back),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 25\n      }\n    }, __jsx(Icon, {\n      name: backSVG,\n      className: \"circled\",\n      size: \"30px\",\n      title: this.props.intl.formatMessage(messages.back),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 27\n      }\n    })), this.props.content && (this.props.content.is_folderish && this.props.types.length > 0 || config.settings.isMultilingual && this.props.content['@components'].translations) && __jsx(\"button\", {\n      className: \"add\",\n      \"aria-label\": this.props.intl.formatMessage(messages.add),\n      onClick: e => this.toggleMenu(e, 'types'),\n      tabIndex: 0,\n      id: \"toolbar-add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 25\n      }\n    }, __jsx(Icon, {\n      name: addSVG,\n      size: \"30px\",\n      title: this.props.intl.formatMessage(messages.add),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 27\n      }\n    })), __jsx(\"div\", {\n      className: \"toolbar-button-spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 21\n      }\n    }), __jsx(\"button\", {\n      className: \"more\",\n      \"aria-label\": this.props.intl.formatMessage(messages.more),\n      onClick: e => this.toggleMenu(e, 'more'),\n      tabIndex: 0,\n      id: \"toolbar-more\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 21\n      }\n    }, __jsx(Icon, {\n      className: \"mobile hidden\",\n      name: moreSVG,\n      size: \"30px\",\n      title: this.props.intl.formatMessage(messages.more),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 23\n      }\n    }), this.state.showMenu ? __jsx(Icon, {\n      className: \"mobile only\",\n      name: clearSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 25\n      }\n    }) : __jsx(Icon, {\n      className: \"mobile only\",\n      name: moreSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 25\n      }\n    })))), __jsx(\"div\", {\n      className: \"toolbar-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 15\n      }\n    }, __jsx(Pluggable, {\n      name: \"main.toolbar.bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 17\n      }\n    }), !this.props.hideDefaultViewButtons && __jsx(\"button\", {\n      className: \"user\",\n      \"aria-label\": this.props.intl.formatMessage(messages.personalTools),\n      onClick: e => this.toggleMenu(e, 'personalTools'),\n      tabIndex: 0,\n      id: \"toolbar-personal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 19\n      }\n    }, __jsx(Icon, {\n      name: userSVG,\n      size: \"30px\",\n      title: this.props.intl.formatMessage(messages.personalTools),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 21\n      }\n    })))), __jsx(\"div\", {\n      className: \"toolbar-handler\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.shrinkToolbar),\n      className: cx({\n        [(_this$props$content2 = this.props.content) === null || _this$props$content2 === void 0 ? void 0 : _this$props$content2.review_state]: (_this$props$content3 = this.props.content) === null || _this$props$content3 === void 0 ? void 0 : _this$props$content3.review_state\n      }),\n      onClick: this.handleShrink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 15\n      }\n    }))), __jsx(\"div\", {\n      className: \"pusher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 11\n      }\n    }));\n  }\n}\n_defineProperty(Toolbar, \"propTypes\", {\n  actions: PropTypes.shape({\n    object: PropTypes.arrayOf(PropTypes.object),\n    object_buttons: PropTypes.arrayOf(PropTypes.object),\n    user: PropTypes.arrayOf(PropTypes.object)\n  }),\n  token: PropTypes.string,\n  userId: PropTypes.string,\n  pathname: PropTypes.string.isRequired,\n  content: PropTypes.shape({\n    '@type': PropTypes.string,\n    is_folderish: PropTypes.bool,\n    review_state: PropTypes.string\n  }),\n  getTypes: PropTypes.func.isRequired,\n  types: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    addable: PropTypes.bool,\n    title: PropTypes.string\n  })),\n  listActions: PropTypes.func.isRequired,\n  unlockContent: PropTypes.func,\n  unlockRequest: PropTypes.objectOf(PropTypes.any),\n  inner: PropTypes.element.isRequired,\n  hideDefaultViewButtons: PropTypes.bool\n});\n_defineProperty(Toolbar, \"defaultProps\", {\n  actions: null,\n  token: null,\n  userId: null,\n  content: null,\n  hideDefaultViewButtons: false,\n  types: []\n});\nexport default compose(injectIntl, withCookies, connect((state, props) => ({\n  actions: state.actions.actions,\n  token: state.userSession.token,\n  userId: state.userSession.token ? jwtDecode(state.userSession.token).sub : '',\n  content: state.content.data,\n  pathname: props.pathname,\n  types: _filter(state.types.types, 'addable'),\n  unlockRequest: state.content.unlock\n}), {\n  getTypes,\n  listActions,\n  setExpandedToolbar,\n  unlockContent\n}))(Toolbar);","map":{"version":3,"names":["React","Component","defineMessages","injectIntl","PropTypes","Link","jwtDecode","connect","compose","doesNodeContainClick","withCookies","cx","config","More","PersonalTools","Types","PersonalInformation","PersonalPreferences","StandardWrapper","getTypes","listActions","setExpandedToolbar","unlockContent","Icon","BodyClass","getBaseUrl","getCookieOptions","Pluggable","penSVG","unlockSVG","folderSVG","addSVG","moreSVG","userSVG","backSVG","clearSVG","messages","edit","contents","add","more","personalTools","shrinkToolbar","personalInformation","personalPreferences","collection","file","link","newsItem","page","back","unlock","toolbarComponents","component","wrapper","types","contentAsProps","profile","wrapperTitle","hideToolbarBody","preferences","Toolbar","constructor","props","createRef","cookies","set","state","expanded","setState","showMenu","loadedComponents","type","includes","slice","length","e","selector","closeMenu","menuStyle","bottom","overflow","top","loadComponent","pusher","pathname","get","menuComponents","componentDidMount","document","addEventListener","handleClickOutside","UNSAFE_componentWillReceiveProps","nextProps","unlockRequest","loading","loaded","componentWillUnmount","removeEventListener","render","path","lock","content","unlockAction","locked","stealable","creator","userId","editAction","actions","object","id","folderContentsAction","token","toolbarWindow","node","transform","current","getBoundingClientRect","width","map","index","ToolbarComponent","WrapperComponent","haveActions","title","intl","formatMessage","unloadComponent","hideDefaultViewButtons","inner","is_folderish","endsWith","settings","isMultilingual","translations","toggleMenu","review_state","handleShrink","shape","arrayOf","object_buttons","user","string","isRequired","bool","func","addable","objectOf","any","element","userSession","sub","data"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Toolbar/Toolbar.jsx"],"sourcesContent":["/**\n * Toolbar component.\n * @module components/manage/Toolbar/Toolbar\n */\n\nimport React, { Component } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport { withCookies } from 'react-cookie';\nimport { filter, find } from 'lodash';\nimport cx from 'classnames';\nimport config from '@plone/volto/registry';\n\nimport More from '@plone/volto/components/manage/Toolbar/More';\nimport PersonalTools from '@plone/volto/components/manage/Toolbar/PersonalTools';\nimport Types from '@plone/volto/components/manage/Toolbar/Types';\nimport PersonalInformation from '@plone/volto/components/manage/Preferences/PersonalInformation';\nimport PersonalPreferences from '@plone/volto/components/manage/Preferences/PersonalPreferences';\nimport StandardWrapper from '@plone/volto/components/manage/Toolbar/StandardWrapper';\nimport {\n  getTypes,\n  listActions,\n  setExpandedToolbar,\n  unlockContent,\n} from '@plone/volto/actions';\nimport { Icon } from '@plone/volto/components';\nimport { BodyClass, getBaseUrl, getCookieOptions } from '@plone/volto/helpers';\nimport { Pluggable } from '@plone/volto/components/manage/Pluggable';\n\nimport penSVG from '@plone/volto/icons/pen.svg';\nimport unlockSVG from '@plone/volto/icons/unlock.svg';\nimport folderSVG from '@plone/volto/icons/folder.svg';\nimport addSVG from '@plone/volto/icons/add-document.svg';\nimport moreSVG from '@plone/volto/icons/more.svg';\nimport userSVG from '@plone/volto/icons/user.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  edit: {\n    id: 'Edit',\n    defaultMessage: 'Edit',\n  },\n  contents: {\n    id: 'Contents',\n    defaultMessage: 'Contents',\n  },\n  add: {\n    id: 'Add',\n    defaultMessage: 'Add',\n  },\n  more: {\n    id: 'More',\n    defaultMessage: 'More',\n  },\n  personalTools: {\n    id: 'Personal tools',\n    defaultMessage: 'Personal tools',\n  },\n  shrinkToolbar: {\n    id: 'Shrink toolbar',\n    defaultMessage: 'Shrink toolbar',\n  },\n  personalInformation: {\n    id: 'Personal Information',\n    defaultMessage: 'Personal Information',\n  },\n  personalPreferences: {\n    id: 'Personal Preferences',\n    defaultMessage: 'Personal Preferences',\n  },\n  collection: {\n    id: 'Collection',\n    defaultMessage: 'Collection',\n  },\n  file: {\n    id: 'File',\n    defaultMessage: 'File',\n  },\n  link: {\n    id: 'Link',\n    defaultMessage: 'Link',\n  },\n  newsItem: {\n    id: 'News Item',\n    defaultMessage: 'News Item',\n  },\n  page: {\n    id: 'Page',\n    defaultMessage: 'Page',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  unlock: {\n    id: 'Unlock',\n    defaultMessage: 'Unlock',\n  },\n});\n\nconst toolbarComponents = {\n  personalTools: { component: PersonalTools, wrapper: null },\n  more: { component: More, wrapper: null },\n  types: { component: Types, wrapper: null, contentAsProps: true },\n  profile: {\n    component: PersonalInformation,\n    wrapper: StandardWrapper,\n    wrapperTitle: messages.personalInformation,\n    hideToolbarBody: true,\n  },\n  preferences: {\n    component: PersonalPreferences,\n    wrapper: StandardWrapper,\n    wrapperTitle: messages.personalPreferences,\n    hideToolbarBody: true,\n  },\n};\n\n/**\n * Toolbar container class.\n * @class Toolbar\n * @extends Component\n */\nclass Toolbar extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    actions: PropTypes.shape({\n      object: PropTypes.arrayOf(PropTypes.object),\n      object_buttons: PropTypes.arrayOf(PropTypes.object),\n      user: PropTypes.arrayOf(PropTypes.object),\n    }),\n    token: PropTypes.string,\n    userId: PropTypes.string,\n    pathname: PropTypes.string.isRequired,\n    content: PropTypes.shape({\n      '@type': PropTypes.string,\n      is_folderish: PropTypes.bool,\n      review_state: PropTypes.string,\n    }),\n    getTypes: PropTypes.func.isRequired,\n    types: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        addable: PropTypes.bool,\n        title: PropTypes.string,\n      }),\n    ),\n    listActions: PropTypes.func.isRequired,\n    unlockContent: PropTypes.func,\n    unlockRequest: PropTypes.objectOf(PropTypes.any),\n    inner: PropTypes.element.isRequired,\n    hideDefaultViewButtons: PropTypes.bool,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    actions: null,\n    token: null,\n    userId: null,\n    content: null,\n    hideDefaultViewButtons: false,\n    types: [],\n  };\n\n  toolbarWindow = React.createRef();\n\n  constructor(props) {\n    super(props);\n    const { cookies } = props;\n    this.state = {\n      expanded: cookies.get('toolbar_expanded') !== 'false',\n      showMenu: false,\n      menuStyle: {},\n      menuComponents: [],\n      loadedComponents: [],\n      hideToolbarBody: false,\n    };\n  }\n\n  /**\n   * Component will mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.listActions(getBaseUrl(this.props.pathname));\n    this.props.getTypes(getBaseUrl(this.props.pathname));\n    this.props.setExpandedToolbar(this.state.expanded);\n    document.addEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.listActions(getBaseUrl(nextProps.pathname));\n      this.props.getTypes(getBaseUrl(nextProps.pathname));\n    }\n\n    // Unlock\n    if (this.props.unlockRequest.loading && nextProps.unlockRequest.loaded) {\n      this.props.listActions(getBaseUrl(nextProps.pathname));\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillUnmount\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  handleShrink = () => {\n    const { cookies } = this.props;\n    cookies.set('toolbar_expanded', !this.state.expanded, getCookieOptions());\n    this.setState(\n      (state) => ({ expanded: !state.expanded }),\n      () => this.props.setExpandedToolbar(this.state.expanded),\n    );\n  };\n\n  closeMenu = () =>\n    this.setState(() => ({ showMenu: false, loadedComponents: [] }));\n\n  loadComponent = (type) => {\n    const { loadedComponents } = this.state;\n    if (!this.state.loadedComponents.includes(type)) {\n      this.setState({\n        loadedComponents: [...loadedComponents, type],\n        hideToolbarBody: toolbarComponents[type].hideToolbarBody || false,\n      });\n    }\n  };\n\n  unloadComponent = () => {\n    this.setState((state) => ({\n      loadedComponents: state.loadedComponents.slice(0, -1),\n      hideToolbarBody:\n        toolbarComponents[\n          state.loadedComponents[state.loadedComponents.length - 2]\n        ].hideToolbarBody || false,\n    }));\n  };\n\n  toggleMenu = (e, selector) => {\n    if (this.state.showMenu) {\n      this.closeMenu();\n      return;\n    }\n    // PersonalTools always shows at bottom\n    if (selector === 'personalTools') {\n      this.setState((state) => ({\n        showMenu: !state.showMenu,\n        menuStyle: { bottom: 0 },\n      }));\n    } else if (selector === 'more') {\n      this.setState((state) => ({\n        showMenu: !state.showMenu,\n        menuStyle: {\n          overflow: 'visible',\n          top: 0,\n        },\n      }));\n    } else {\n      this.setState((state) => ({\n        showMenu: !state.showMenu,\n        menuStyle: { top: 0 },\n      }));\n    }\n    this.loadComponent(selector);\n  };\n\n  handleClickOutside = (e) => {\n    if (this.pusher && doesNodeContainClick(this.pusher, e)) return;\n    this.closeMenu();\n  };\n\n  unlock = (e) => {\n    this.props.unlockContent(getBaseUrl(this.props.pathname), true);\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const path = getBaseUrl(this.props.pathname);\n    const lock = this.props.content?.lock;\n    const unlockAction =\n      lock?.locked && lock?.stealable && lock?.creator !== this.props.userId;\n    const editAction =\n      !unlockAction && find(this.props.actions.object, { id: 'edit' });\n    const folderContentsAction = find(this.props.actions.object, {\n      id: 'folderContents',\n    });\n    const { expanded } = this.state;\n\n    return (\n      this.props.token && (\n        <>\n          <BodyClass\n            className={expanded ? 'has-toolbar' : 'has-toolbar-collapsed'}\n          />\n          <div\n            style={this.state.menuStyle}\n            className={\n              this.state.showMenu ? 'toolbar-content show' : 'toolbar-content'\n            }\n            ref={this.toolbarWindow}\n          >\n            {this.state.showMenu && (\n              // This sets the scroll locker in the body tag in mobile\n              <BodyClass className=\"has-toolbar-menu-open\" />\n            )}\n            <div\n              className=\"pusher-puller\"\n              ref={(node) => (this.pusher = node)}\n              style={{\n                transform: this.toolbarWindow.current\n                  ? `translateX(-${\n                      (this.state.loadedComponents.length - 1) *\n                      this.toolbarWindow.current.getBoundingClientRect().width\n                    }px)`\n                  : null,\n              }}\n            >\n              {this.state.loadedComponents.map((component, index) =>\n                (() => {\n                  const ToolbarComponent =\n                    toolbarComponents[component].component;\n                  const WrapperComponent = toolbarComponents[component].wrapper;\n                  const haveActions =\n                    toolbarComponents[component].hideToolbarBody;\n                  const title =\n                    toolbarComponents[component].wrapperTitle &&\n                    this.props.intl.formatMessage(\n                      toolbarComponents[component].wrapperTitle,\n                    );\n                  if (WrapperComponent) {\n                    return (\n                      <WrapperComponent\n                        componentName={component}\n                        componentTitle={title}\n                        pathname={this.props.pathname}\n                        loadComponent={this.loadComponent}\n                        unloadComponent={this.unloadComponent}\n                        componentIndex={index}\n                        theToolbar={this.toolbarWindow}\n                        key={`personalToolsComponent-${index}`}\n                        closeMenu={this.closeMenu}\n                        hasActions={haveActions}\n                      >\n                        <ToolbarComponent\n                          pathname={this.props.pathname}\n                          loadComponent={this.loadComponent}\n                          unloadComponent={this.unloadComponent}\n                          componentIndex={index}\n                          theToolbar={this.toolbarWindow}\n                          closeMenu={this.closeMenu}\n                          isToolbarEmbedded\n                        />\n                      </WrapperComponent>\n                    );\n                  } else {\n                    return (\n                      <ToolbarComponent\n                        pathname={this.props.pathname}\n                        loadComponent={this.loadComponent}\n                        unloadComponent={this.unloadComponent}\n                        componentIndex={index}\n                        theToolbar={this.toolbarWindow}\n                        key={`personalToolsComponent-${index}`}\n                        closeMenu={this.closeMenu}\n                        content={\n                          toolbarComponents[component].contentAsProps\n                            ? this.props.content\n                            : null\n                        }\n                      />\n                    );\n                  }\n                })(),\n              )}\n            </div>\n          </div>\n          <div className={this.state.expanded ? 'toolbar expanded' : 'toolbar'}>\n            <div className=\"toolbar-body\">\n              <div className=\"toolbar-actions\">\n                {this.props.hideDefaultViewButtons && this.props.inner && (\n                  <>{this.props.inner}</>\n                )}\n                {!this.props.hideDefaultViewButtons && (\n                  <>\n                    {unlockAction && (\n                      <button\n                        aria-label={this.props.intl.formatMessage(\n                          messages.unlock,\n                        )}\n                        className=\"unlock\"\n                        onClick={(e) => this.unlock(e)}\n                        tabIndex={0}\n                      >\n                        <Icon\n                          name={unlockSVG}\n                          size=\"30px\"\n                          className=\"unlock\"\n                          title={this.props.intl.formatMessage(messages.unlock)}\n                        />\n                      </button>\n                    )}\n\n                    {editAction && (\n                      <Link\n                        aria-label={this.props.intl.formatMessage(\n                          messages.edit,\n                        )}\n                        className=\"edit\"\n                        to={`${path}/edit`}\n                      >\n                        <Icon\n                          name={penSVG}\n                          size=\"30px\"\n                          className=\"circled\"\n                          title={this.props.intl.formatMessage(messages.edit)}\n                        />\n                      </Link>\n                    )}\n                    {this.props.content &&\n                      this.props.content.is_folderish &&\n                      folderContentsAction &&\n                      !this.props.pathname.endsWith('/contents') && (\n                        <Link\n                          aria-label={this.props.intl.formatMessage(\n                            messages.contents,\n                          )}\n                          to={`${path}/contents`}\n                        >\n                          <Icon\n                            name={folderSVG}\n                            size=\"30px\"\n                            title={this.props.intl.formatMessage(\n                              messages.contents,\n                            )}\n                          />\n                        </Link>\n                      )}\n                    {this.props.content &&\n                      this.props.content.is_folderish &&\n                      folderContentsAction &&\n                      this.props.pathname.endsWith('/contents') && (\n                        <Link\n                          to={`${path}`}\n                          aria-label={this.props.intl.formatMessage(\n                            messages.back,\n                          )}\n                        >\n                          <Icon\n                            name={backSVG}\n                            className=\"circled\"\n                            size=\"30px\"\n                            title={this.props.intl.formatMessage(messages.back)}\n                          />\n                        </Link>\n                      )}\n                    {this.props.content &&\n                      ((this.props.content.is_folderish &&\n                        this.props.types.length > 0) ||\n                        (config.settings.isMultilingual &&\n                          this.props.content['@components'].translations)) && (\n                        <button\n                          className=\"add\"\n                          aria-label={this.props.intl.formatMessage(\n                            messages.add,\n                          )}\n                          onClick={(e) => this.toggleMenu(e, 'types')}\n                          tabIndex={0}\n                          id=\"toolbar-add\"\n                        >\n                          <Icon\n                            name={addSVG}\n                            size=\"30px\"\n                            title={this.props.intl.formatMessage(messages.add)}\n                          />\n                        </button>\n                      )}\n                    <div className=\"toolbar-button-spacer\" />\n                    <button\n                      className=\"more\"\n                      aria-label={this.props.intl.formatMessage(messages.more)}\n                      onClick={(e) => this.toggleMenu(e, 'more')}\n                      tabIndex={0}\n                      id=\"toolbar-more\"\n                    >\n                      <Icon\n                        className=\"mobile hidden\"\n                        name={moreSVG}\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.more)}\n                      />\n                      {this.state.showMenu ? (\n                        <Icon\n                          className=\"mobile only\"\n                          name={clearSVG}\n                          size=\"30px\"\n                        />\n                      ) : (\n                        <Icon\n                          className=\"mobile only\"\n                          name={moreSVG}\n                          size=\"30px\"\n                        />\n                      )}\n                    </button>\n                  </>\n                )}\n              </div>\n              <div className=\"toolbar-bottom\">\n                <Pluggable name=\"main.toolbar.bottom\" />\n                {!this.props.hideDefaultViewButtons && (\n                  <button\n                    className=\"user\"\n                    aria-label={this.props.intl.formatMessage(\n                      messages.personalTools,\n                    )}\n                    onClick={(e) => this.toggleMenu(e, 'personalTools')}\n                    tabIndex={0}\n                    id=\"toolbar-personal\"\n                  >\n                    <Icon\n                      name={userSVG}\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(\n                        messages.personalTools,\n                      )}\n                    />\n                  </button>\n                )}\n              </div>\n            </div>\n            <div className=\"toolbar-handler\">\n              <button\n                aria-label={this.props.intl.formatMessage(\n                  messages.shrinkToolbar,\n                )}\n                className={cx({\n                  [this.props.content?.review_state]: this.props.content\n                    ?.review_state,\n                })}\n                onClick={this.handleShrink}\n              />\n            </div>\n          </div>\n          <div className=\"pusher\" />\n        </>\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  withCookies,\n  connect(\n    (state, props) => ({\n      actions: state.actions.actions,\n      token: state.userSession.token,\n      userId: state.userSession.token\n        ? jwtDecode(state.userSession.token).sub\n        : '',\n      content: state.content.data,\n      pathname: props.pathname,\n      types: filter(state.types.types, 'addable'),\n      unlockRequest: state.content.unlock,\n    }),\n    { getTypes, listActions, setExpandedToolbar, unlockContent },\n  ),\n)(Toolbar);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Edit","defaultMessage":"Edit"},{"id":"Contents","defaultMessage":"Contents"},{"id":"Add","defaultMessage":"Add"},{"id":"More","defaultMessage":"More"},{"id":"Personal tools","defaultMessage":"Personal tools"},{"id":"Shrink toolbar","defaultMessage":"Shrink toolbar"},{"id":"Personal Information","defaultMessage":"Personal Information"},{"id":"Personal Preferences","defaultMessage":"Personal Preferences"},{"id":"Collection","defaultMessage":"Collection"},{"id":"File","defaultMessage":"File"},{"id":"Link","defaultMessage":"Link"},{"id":"News Item","defaultMessage":"News Item"},{"id":"Page","defaultMessage":"Page"},{"id":"Back","defaultMessage":"Back"},{"id":"Unlock","defaultMessage":"Unlock"}]}},"sourceType":"module","externalDependencies":[]}