{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/hocs/connectToMultipleProvidersUnfiltered.js\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect, useDispatch } from 'react-redux';\nimport { getDataFromProvider } from '../actions';\nimport { getProviderUrl, getConnectorPath } from '../helpers';\n\n/**\n * connectToMultipleProvidersUnfiltered.\n *\n * @param {} WrappedComponent\n */\nexport function connectToMultipleProvidersUnfiltered(getConfig = () => ({})) {\n  return WrappedComponent => {\n    return connect(state => ({\n      connected_data_parameters: state.connected_data_parameters,\n      data_providers: state.data_providers\n    }))(withRouter(props => {\n      var _props$data_providers4, _props$data_providers8, _props$data_providers16, _props$data_providers17, _props$data_providers18;\n      const dispatch = useDispatch();\n      const config = useMemo(() => getConfig(props), [props]);\n      const {\n        0: mounted,\n        1: setMounted\n      } = useState(false);\n      const providers = useMemo(() => {\n        return config.providers || [];\n      }, [config]);\n      const providers_data = useMemo(() => {\n        const data = {};\n        providers.forEach(provider => {\n          var _props$data_providers, _props$data_providers2, _props$data_providers3;\n          const provider_url = getProviderUrl(provider.provider_url || provider.url);\n          if (!provider_url) return;\n          const title = provider.name || provider.title || provider_url;\n          data[title] = (_props$data_providers = props.data_providers) === null || _props$data_providers === void 0 ? void 0 : (_props$data_providers2 = _props$data_providers.data) === null || _props$data_providers2 === void 0 ? void 0 : (_props$data_providers3 = _props$data_providers2[provider_url]) === null || _props$data_providers3 === void 0 ? void 0 : _props$data_providers3._default;\n        });\n        return data;\n      }, [providers, (_props$data_providers4 = props.data_providers) === null || _props$data_providers4 === void 0 ? void 0 : _props$data_providers4.data]);\n      const providers_metadata = useMemo(() => {\n        const data = {};\n        providers.forEach(provider => {\n          var _props$data_providers5, _props$data_providers6, _props$data_providers7;\n          const provider_url = getProviderUrl(provider.provider_url || provider.url);\n          if (!provider_url) return;\n          const title = provider.name || provider.title || provider_url;\n          data[title] = (_props$data_providers5 = props.data_providers) === null || _props$data_providers5 === void 0 ? void 0 : (_props$data_providers6 = _props$data_providers5.metadata) === null || _props$data_providers6 === void 0 ? void 0 : (_props$data_providers7 = _props$data_providers6[provider_url]) === null || _props$data_providers7 === void 0 ? void 0 : _props$data_providers7._default;\n        });\n        return data;\n      }, [providers, (_props$data_providers8 = props.data_providers) === null || _props$data_providers8 === void 0 ? void 0 : _props$data_providers8.metadata]);\n      useEffect(() => {\n        if (!mounted && __CLIENT__) {\n          setMounted(true);\n          return;\n        }\n        providers.forEach((provider, index) => {\n          var _props$data_providers9, _props$data_providers10, _props$data_providers11, _props$data_providers12, _props$data_providers13, _props$data_providers14, _props$data_providers15;\n          const provider_url = getProviderUrl(provider.provider_url || provider.url);\n          const connectorPath = getConnectorPath(provider_url);\n          const provider_data = provider_url ? (_props$data_providers9 = props.data_providers) === null || _props$data_providers9 === void 0 ? void 0 : (_props$data_providers10 = _props$data_providers9.data) === null || _props$data_providers10 === void 0 ? void 0 : (_props$data_providers11 = _props$data_providers10[provider_url]) === null || _props$data_providers11 === void 0 ? void 0 : _props$data_providers11._default : null;\n          const isPending = provider_url ? (_props$data_providers12 = props.data_providers) === null || _props$data_providers12 === void 0 ? void 0 : (_props$data_providers13 = _props$data_providers12.pendingConnectors) === null || _props$data_providers13 === void 0 ? void 0 : _props$data_providers13[connectorPath] : false;\n          const isFailed = provider_url ? (_props$data_providers14 = props.data_providers) === null || _props$data_providers14 === void 0 ? void 0 : (_props$data_providers15 = _props$data_providers14.failedConnectors) === null || _props$data_providers15 === void 0 ? void 0 : _props$data_providers15[connectorPath] : false;\n          const readyToDispatch = provider_url && connectorPath && !provider_data && !isPending && !isFailed;\n          if (readyToDispatch) {\n            dispatch(getDataFromProvider(provider_url));\n          }\n        });\n      }, [dispatch, mounted, props.location, props.data_providers, (_props$data_providers16 = props.data_providers) === null || _props$data_providers16 === void 0 ? void 0 : _props$data_providers16.pendingConnectors, (_props$data_providers17 = props.data_providers) === null || _props$data_providers17 === void 0 ? void 0 : _props$data_providers17.failedConnectors, (_props$data_providers18 = props.data_providers) === null || _props$data_providers18 === void 0 ? void 0 : _props$data_providers18.data, providers]);\n      return __jsx(WrappedComponent, _extends({}, props, {\n        providers_data: providers_data,\n        providers_metadata: providers_metadata,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }));\n    }));\n  };\n}\nexport default connectToMultipleProvidersUnfiltered;","map":{"version":3,"names":["React","useEffect","useMemo","useState","withRouter","connect","useDispatch","getDataFromProvider","getProviderUrl","getConnectorPath","connectToMultipleProvidersUnfiltered","getConfig","WrappedComponent","state","connected_data_parameters","data_providers","props","dispatch","config","mounted","setMounted","providers","providers_data","data","forEach","provider","provider_url","url","title","name","_default","providers_metadata","metadata","__CLIENT__","index","connectorPath","provider_data","isPending","pendingConnectors","isFailed","failedConnectors","readyToDispatch","location"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/hocs/connectToMultipleProvidersUnfiltered.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect, useDispatch } from 'react-redux';\nimport { getDataFromProvider } from '../actions';\nimport { getProviderUrl, getConnectorPath } from '../helpers';\n\n/**\n * connectToMultipleProvidersUnfiltered.\n *\n * @param {} WrappedComponent\n */\nexport function connectToMultipleProvidersUnfiltered(getConfig = () => ({})) {\n  return (WrappedComponent) => {\n    return connect((state) => ({\n      connected_data_parameters: state.connected_data_parameters,\n      data_providers: state.data_providers,\n    }))(\n      withRouter((props) => {\n        const dispatch = useDispatch();\n        const config = useMemo(() => getConfig(props), [props]);\n        const [mounted, setMounted] = useState(false);\n\n        const providers = useMemo(() => {\n          return config.providers || [];\n        }, [config]);\n\n        const providers_data = useMemo(() => {\n          const data = {};\n          providers.forEach((provider) => {\n            const provider_url = getProviderUrl(\n              provider.provider_url || provider.url,\n            );\n            if (!provider_url) return;\n            const title = provider.name || provider.title || provider_url;\n            data[title] = props.data_providers?.data?.[provider_url]?._default;\n          });\n          return data;\n        }, [providers, props.data_providers?.data]);\n\n        const providers_metadata = useMemo(() => {\n          const data = {};\n          providers.forEach((provider) => {\n            const provider_url = getProviderUrl(\n              provider.provider_url || provider.url,\n            );\n            if (!provider_url) return;\n            const title = provider.name || provider.title || provider_url;\n            data[title] =\n              props.data_providers?.metadata?.[provider_url]?._default;\n          });\n          return data;\n        }, [providers, props.data_providers?.metadata]);\n\n        useEffect(() => {\n          if (!mounted && __CLIENT__) {\n            setMounted(true);\n            return;\n          }\n          providers.forEach((provider, index) => {\n            const provider_url = getProviderUrl(\n              provider.provider_url || provider.url,\n            );\n            const connectorPath = getConnectorPath(provider_url);\n\n            const provider_data = provider_url\n              ? props.data_providers?.data?.[provider_url]?._default\n              : null;\n\n            const isPending = provider_url\n              ? props.data_providers?.pendingConnectors?.[connectorPath]\n              : false;\n\n            const isFailed = provider_url\n              ? props.data_providers?.failedConnectors?.[connectorPath]\n              : false;\n\n            const readyToDispatch =\n              provider_url &&\n              connectorPath &&\n              !provider_data &&\n              !isPending &&\n              !isFailed;\n\n            if (readyToDispatch) {\n              dispatch(getDataFromProvider(provider_url));\n            }\n          });\n        }, [\n          dispatch,\n          mounted,\n          props.location,\n          props.data_providers,\n          props.data_providers?.pendingConnectors,\n          props.data_providers?.failedConnectors,\n          props.data_providers?.data,\n          providers,\n        ]);\n\n        return (\n          <WrappedComponent\n            {...props}\n            providers_data={providers_data}\n            providers_metadata={providers_metadata}\n          />\n        );\n      }),\n    );\n  };\n}\n\nexport default connectToMultipleProvidersUnfiltered;\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,OAAO,EAAEC,WAAW,QAAQ,aAAa;AAClD,SAASC,mBAAmB,QAAQ,YAAY;AAChD,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,YAAY;;AAE7D;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,oCAAoC,CAACC,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE;EAC3E,OAAQC,gBAAgB,IAAK;IAC3B,OAAOP,OAAO,CAAEQ,KAAK,KAAM;MACzBC,yBAAyB,EAAED,KAAK,CAACC,yBAAyB;MAC1DC,cAAc,EAAEF,KAAK,CAACE;IACxB,CAAC,CAAC,CAAC,CACDX,UAAU,CAAEY,KAAK,IAAK;MAAA;MACpB,MAAMC,QAAQ,GAAGX,WAAW,EAAE;MAC9B,MAAMY,MAAM,GAAGhB,OAAO,CAAC,MAAMS,SAAS,CAACK,KAAK,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;MACvD,MAAM;QAAA,GAACG,OAAO;QAAA,GAAEC;MAAU,IAAIjB,QAAQ,CAAC,KAAK,CAAC;MAE7C,MAAMkB,SAAS,GAAGnB,OAAO,CAAC,MAAM;QAC9B,OAAOgB,MAAM,CAACG,SAAS,IAAI,EAAE;MAC/B,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;MAEZ,MAAMI,cAAc,GAAGpB,OAAO,CAAC,MAAM;QACnC,MAAMqB,IAAI,GAAG,CAAC,CAAC;QACfF,SAAS,CAACG,OAAO,CAAEC,QAAQ,IAAK;UAAA;UAC9B,MAAMC,YAAY,GAAGlB,cAAc,CACjCiB,QAAQ,CAACC,YAAY,IAAID,QAAQ,CAACE,GAAG,CACtC;UACD,IAAI,CAACD,YAAY,EAAE;UACnB,MAAME,KAAK,GAAGH,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACG,KAAK,IAAIF,YAAY;UAC7DH,IAAI,CAACK,KAAK,CAAC,4BAAGZ,KAAK,CAACD,cAAc,oFAApB,sBAAsBQ,IAAI,qFAA1B,uBAA6BG,YAAY,CAAC,2DAA1C,uBAA4CI,QAAQ;QACpE,CAAC,CAAC;QACF,OAAOP,IAAI;MACb,CAAC,EAAE,CAACF,SAAS,4BAAEL,KAAK,CAACD,cAAc,2DAApB,uBAAsBQ,IAAI,CAAC,CAAC;MAE3C,MAAMQ,kBAAkB,GAAG7B,OAAO,CAAC,MAAM;QACvC,MAAMqB,IAAI,GAAG,CAAC,CAAC;QACfF,SAAS,CAACG,OAAO,CAAEC,QAAQ,IAAK;UAAA;UAC9B,MAAMC,YAAY,GAAGlB,cAAc,CACjCiB,QAAQ,CAACC,YAAY,IAAID,QAAQ,CAACE,GAAG,CACtC;UACD,IAAI,CAACD,YAAY,EAAE;UACnB,MAAME,KAAK,GAAGH,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACG,KAAK,IAAIF,YAAY;UAC7DH,IAAI,CAACK,KAAK,CAAC,6BACTZ,KAAK,CAACD,cAAc,qFAApB,uBAAsBiB,QAAQ,qFAA9B,uBAAiCN,YAAY,CAAC,2DAA9C,uBAAgDI,QAAQ;QAC5D,CAAC,CAAC;QACF,OAAOP,IAAI;MACb,CAAC,EAAE,CAACF,SAAS,4BAAEL,KAAK,CAACD,cAAc,2DAApB,uBAAsBiB,QAAQ,CAAC,CAAC;MAE/C/B,SAAS,CAAC,MAAM;QACd,IAAI,CAACkB,OAAO,IAAIc,UAAU,EAAE;UAC1Bb,UAAU,CAAC,IAAI,CAAC;UAChB;QACF;QACAC,SAAS,CAACG,OAAO,CAAC,CAACC,QAAQ,EAAES,KAAK,KAAK;UAAA;UACrC,MAAMR,YAAY,GAAGlB,cAAc,CACjCiB,QAAQ,CAACC,YAAY,IAAID,QAAQ,CAACE,GAAG,CACtC;UACD,MAAMQ,aAAa,GAAG1B,gBAAgB,CAACiB,YAAY,CAAC;UAEpD,MAAMU,aAAa,GAAGV,YAAY,6BAC9BV,KAAK,CAACD,cAAc,sFAApB,uBAAsBQ,IAAI,uFAA1B,wBAA6BG,YAAY,CAAC,4DAA1C,wBAA4CI,QAAQ,GACpD,IAAI;UAER,MAAMO,SAAS,GAAGX,YAAY,8BAC1BV,KAAK,CAACD,cAAc,uFAApB,wBAAsBuB,iBAAiB,4DAAvC,wBAA0CH,aAAa,CAAC,GACxD,KAAK;UAET,MAAMI,QAAQ,GAAGb,YAAY,8BACzBV,KAAK,CAACD,cAAc,uFAApB,wBAAsByB,gBAAgB,4DAAtC,wBAAyCL,aAAa,CAAC,GACvD,KAAK;UAET,MAAMM,eAAe,GACnBf,YAAY,IACZS,aAAa,IACb,CAACC,aAAa,IACd,CAACC,SAAS,IACV,CAACE,QAAQ;UAEX,IAAIE,eAAe,EAAE;YACnBxB,QAAQ,CAACV,mBAAmB,CAACmB,YAAY,CAAC,CAAC;UAC7C;QACF,CAAC,CAAC;MACJ,CAAC,EAAE,CACDT,QAAQ,EACRE,OAAO,EACPH,KAAK,CAAC0B,QAAQ,EACd1B,KAAK,CAACD,cAAc,6BACpBC,KAAK,CAACD,cAAc,4DAApB,wBAAsBuB,iBAAiB,6BACvCtB,KAAK,CAACD,cAAc,4DAApB,wBAAsByB,gBAAgB,6BACtCxB,KAAK,CAACD,cAAc,4DAApB,wBAAsBQ,IAAI,EAC1BF,SAAS,CACV,CAAC;MAEF,OACE,MAAC,gBAAgB,eACXL,KAAK;QACT,cAAc,EAAEM,cAAe;QAC/B,kBAAkB,EAAES,kBAAmB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACvC;IAEN,CAAC,CAAC,CACH;EACH,CAAC;AACH;AAEA,eAAerB,oCAAoC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}