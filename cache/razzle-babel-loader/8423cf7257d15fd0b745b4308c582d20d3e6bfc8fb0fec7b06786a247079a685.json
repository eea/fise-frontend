{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/components/manage/Widgets/ObjectListInlineWidget.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport { Accordion, Button, Segment, Modal } from 'semantic-ui-react';\nimport React, { useState } from 'react';\nimport { Icon as VoltoIcon, FormFieldWrapper } from '@plone/volto/components';\nimport { DragDropList } from '@plone/volto/components';\nimport ObjectWidget from './ObjectWidget';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport addSVG from '@plone/volto/icons/add.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport pencilSVG from '@plone/volto/icons/pencil.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport { v4 as uuid } from 'uuid';\nvar ObjectListInlineWidget = function ObjectListInlineWidget(props) {\n  _s();\n  var _useState = useState(false),\n    open = _useState[0],\n    setOpen = _useState[1];\n  var _useState2 = useState(null),\n    active = _useState2[0],\n    setActive = _useState2[1];\n  var id = props.id,\n    schema = props.schema,\n    _props$value = props.value,\n    value = _props$value === void 0 ? [] : _props$value,\n    _onChange = props.onChange,\n    schemaExtender = props.schemaExtender,\n    _props$defaultData = props.defaultData,\n    defaultData = _props$defaultData === void 0 ? {} : _props$defaultData;\n  var openModal = function openModal(index) {\n    setOpen(true);\n    setActive(index);\n  };\n  var closeModal = function closeModal() {\n    setOpen(false);\n    setActive(null);\n  };\n  return __jsx(React.Fragment, null, __jsx(FormFieldWrapper, _extends({}, props, {\n    className: \"objectlist-inline-widget\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    compact: true,\n    onClick: function onClick() {\n      return _onChange(id, [].concat(_toConsumableArray(value), [_objectSpread({\n        '@id': uuid()\n      }, defaultData)]));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, __jsx(VoltoIcon, {\n    name: addSVG,\n    size: \"12px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), \"Add \".concat(schema.title)))), __jsx(DragDropList, {\n    childList: value.map(function (o) {\n      return [o['@id'], o];\n    }),\n    onMoveItem: function onMoveItem(result) {\n      var source = result.source,\n        destination = result.destination;\n      if (!destination) {\n        return;\n      }\n      var first = value[source.index];\n      var second = value[destination.index];\n      value[destination.index] = first;\n      value[source.index] = second;\n      _onChange(id, value);\n      return true;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, function (_ref) {\n    var child = _ref.child,\n      childId = _ref.childId,\n      index = _ref.index,\n      draginfo = _ref.draginfo;\n    return __jsx(\"div\", _extends({\n      ref: draginfo.innerRef\n    }, draginfo.draggableProps, {\n      key: childId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), __jsx(Segment.Group, {\n      raised: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, __jsx(Accordion, {\n      key: index,\n      fluid: true,\n      styled: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, __jsx(Accordion.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, __jsx(\"button\", _extends({\n      style: {\n        visibility: 'visible',\n        display: 'inline-block'\n      }\n    }, draginfo.dragHandleProps, {\n      className: \"drag handle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }), __jsx(VoltoIcon, {\n      name: dragSVG,\n      size: \"18px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }\n    })), \"\".concat(schema.title, \" #\").concat(index + 1), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, __jsx(\"button\", {\n      style: {\n        cursor: 'pointer',\n        marginRight: '10px'\n      },\n      onClick: function onClick() {\n        openModal(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }\n    }, __jsx(VoltoIcon, {\n      name: pencilSVG,\n      size: \"16px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    })), __jsx(\"button\", {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: function onClick() {\n        _onChange(id, value.filter(function (v, i) {\n          return i !== index;\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 23\n      }\n    }, __jsx(VoltoIcon, {\n      name: deleteSVG,\n      size: \"16px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    })))), child.title ? __jsx(Accordion.Content, {\n      active: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, __jsx(Segment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, child.title))) : '')));\n  }), __jsx(Modal, {\n    open: open,\n    onClose: closeModal,\n    className: \"object-list-modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      setOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, __jsx(VoltoIcon, {\n    name: clearSVG,\n    size: \"16px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }))), __jsx(Modal.Content, {\n    scrolling: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, __jsx(ObjectWidget, {\n    id: \"\".concat(id, \"-\").concat(active),\n    key: \"ow-\".concat(id, \"-\").concat(active),\n    schema: schemaExtender ? schemaExtender(schema, value[active]) : schema,\n    value: value[active],\n    onChange: function onChange(fi, fv) {\n      var newvalue = value.map(function (v, i) {\n        return i !== active ? v : fv;\n      });\n      _onChange(id, newvalue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  })), __jsx(Modal.Actions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  })));\n};\n_s(ObjectListInlineWidget, \"b7jhgSPd6y0VWi8sbH7TDwE9q4k=\");\n_c = ObjectListInlineWidget;\nexport default ObjectListInlineWidget;\nvar _c;\n$RefreshReg$(_c, \"ObjectListInlineWidget\");","map":{"version":3,"names":["Accordion","Button","Segment","Modal","React","useState","Icon","VoltoIcon","FormFieldWrapper","DragDropList","ObjectWidget","deleteSVG","addSVG","dragSVG","pencilSVG","clearSVG","v4","uuid","ObjectListInlineWidget","props","open","setOpen","active","setActive","id","schema","value","onChange","schemaExtender","defaultData","openModal","index","closeModal","title","map","o","result","source","destination","first","second","child","childId","draginfo","innerRef","draggableProps","visibility","display","dragHandleProps","cursor","marginRight","filter","v","i","fi","fv","newvalue"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/components/manage/Widgets/ObjectListInlineWidget.jsx"],"sourcesContent":["import { Accordion, Button, Segment, Modal } from 'semantic-ui-react';\n\nimport React, { useState } from 'react';\nimport { Icon as VoltoIcon, FormFieldWrapper } from '@plone/volto/components';\nimport { DragDropList } from '@plone/volto/components';\nimport ObjectWidget from './ObjectWidget';\n\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport addSVG from '@plone/volto/icons/add.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport pencilSVG from '@plone/volto/icons/pencil.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport { v4 as uuid } from 'uuid';\n\nconst ObjectListInlineWidget = (props) => {\n  const [open, setOpen] = useState(false);\n  const [active, setActive] = useState(null);\n  const {\n    id,\n    schema,\n    value = [],\n    onChange,\n    schemaExtender,\n    defaultData = {},\n  } = props;\n\n  const openModal = (index) => {\n    setOpen(true);\n    setActive(index);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setActive(null);\n  };\n\n  return (\n    <>\n      <FormFieldWrapper {...props} className=\"objectlist-inline-widget\">\n        <div>\n          <Button\n            compact\n            onClick={() =>\n              onChange(id, [\n                ...value,\n                {\n                  '@id': uuid(),\n                  ...defaultData,\n                },\n              ])\n            }\n          >\n            <VoltoIcon name={addSVG} size=\"12px\" />\n            {`Add ${schema.title}`}\n          </Button>\n        </div>\n      </FormFieldWrapper>\n      <DragDropList\n        childList={value.map((o) => [o['@id'], o])}\n        onMoveItem={(result) => {\n          const { source, destination } = result;\n          if (!destination) {\n            return;\n          }\n          const first = value[source.index];\n          const second = value[destination.index];\n          value[destination.index] = first;\n          value[source.index] = second;\n          onChange(id, value);\n          return true;\n        }}\n      >\n        {({ child, childId, index, draginfo }) => {\n          return (\n            <div\n              ref={draginfo.innerRef}\n              {...draginfo.draggableProps}\n              key={childId}\n            >\n              <Segment.Group raised>\n                <Accordion key={index} fluid styled>\n                  <Accordion.Title>\n                    <button\n                      style={{\n                        visibility: 'visible',\n                        display: 'inline-block',\n                      }}\n                      {...draginfo.dragHandleProps}\n                      className=\"drag handle\"\n                    >\n                      <VoltoIcon name={dragSVG} size=\"18px\" />\n                    </button>\n\n                    {`${schema.title} #${index + 1}`}\n                    <div>\n                      <button\n                        style={{ cursor: 'pointer', marginRight: '10px' }}\n                        onClick={() => {\n                          openModal(index);\n                        }}\n                      >\n                        <VoltoIcon name={pencilSVG} size=\"16px\" />\n                      </button>\n                      <button\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => {\n                          onChange(\n                            id,\n                            value.filter((v, i) => i !== index),\n                          );\n                        }}\n                      >\n                        <VoltoIcon name={deleteSVG} size=\"16px\" />\n                      </button>\n                    </div>\n                  </Accordion.Title>\n                  {child.title ? (\n                    <Accordion.Content active>\n                      <Segment>\n                        <p>{child.title}</p>\n                      </Segment>\n                    </Accordion.Content>\n                  ) : (\n                    ''\n                  )}\n                </Accordion>\n              </Segment.Group>\n            </div>\n          );\n        }}\n      </DragDropList>\n      <Modal open={open} onClose={closeModal} className=\"object-list-modal\">\n        <Modal.Header>\n          <button\n            onClick={() => {\n              setOpen(false);\n            }}\n          >\n            <VoltoIcon name={clearSVG} size=\"16px\" />\n          </button>\n        </Modal.Header>\n        <Modal.Content scrolling>\n          <ObjectWidget\n            id={`${id}-${active}`}\n            key={`ow-${id}-${active}`}\n            schema={\n              schemaExtender ? schemaExtender(schema, value[active]) : schema\n            }\n            value={value[active]}\n            onChange={(fi, fv) => {\n              const newvalue = value.map((v, i) => (i !== active ? v : fv));\n              onChange(id, newvalue);\n            }}\n          />\n        </Modal.Content>\n        <Modal.Actions></Modal.Actions>\n      </Modal>\n    </>\n  );\n};\nexport default ObjectListInlineWidget;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}