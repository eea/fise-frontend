{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Sidebar/ObjectBrowser.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React from 'react';\nimport ObjectBrowserBody from '@plone/volto/components/manage/Sidebar/ObjectBrowserBody';\nimport SidebarPopup from '@plone/volto/components/manage/Sidebar/SidebarPopup';\nimport { getBaseUrl } from '@plone/volto/helpers';\nconst withObjectBrowser = WrappedComponent => {\n  var _class;\n  return _class = class extends React.Component {\n    /**\n     * Default properties\n     * @property {Object} defaultProps Default properties.\n     * @static\n     */\n\n    constructor() {\n      super();\n      _defineProperty(this, \"openObjectBrowser\", ({\n        mode = 'image',\n        onSelectItem = null,\n        dataName = null,\n        overlay = null,\n        propDataName = null,\n        searchableTypes,\n        selectableTypes,\n        maximumSelectionSize,\n        currentPath\n      } = {}) => this.setState(() => ({\n        isObjectBrowserOpen: true,\n        mode,\n        onSelectItem,\n        dataName,\n        overlay,\n        propDataName,\n        searchableTypes,\n        selectableTypes,\n        maximumSelectionSize,\n        currentPath\n      })));\n      _defineProperty(this, \"closeObjectBrowser\", () => this.setState({\n        isObjectBrowserOpen: false\n      }));\n      this.state = {\n        isObjectBrowserOpen: false\n      };\n    }\n\n    /**\n     * openObjectBrowser\n     * @function openObjectBrowser\n     * @param {Object} object ObjectBrowser configuration.\n     * @param {string} object.mode Quick mode, defaults to `image`. Values: link, image, multiple\n     * @param {string} object.dataName Name of the block data property to write the selected item.\n     * @param {string} object.onSelectItem Function that will be called on item selection.\n     * @param {string} object.overlay Boolean to show overlay background on content when opening objectBrowser.\n     *\n     * Usage:\n     *\n     * this.props.openObjectBrowser();\n     *\n     * this.props.openObjectBrowser({mode: 'link'});\n     *\n     * this.props.openObjectBrowser({\n     *   dataName: 'myfancydatafield'\n     *   });\n     *\n     * this.props.openObjectBrowser({\n     *   onSelectItem: url =>\n     *     this.props.onChangeBlock(this.props.block, {\n     *       ...this.props.data,\n     *       myfancydatafield: url,\n     *     }),\n     *   });\n     */\n\n    render() {\n      var _this$props$location, _this$state;\n      let contextURL = this.props.pathname || ((_this$props$location = this.props.location) === null || _this$props$location === void 0 ? void 0 : _this$props$location.pathname) || ((_this$state = this.state) === null || _this$state === void 0 ? void 0 : _this$state.currentPath);\n      return __jsx(React.Fragment, null, __jsx(WrappedComponent, _extends({}, this.props, {\n        isObjectBrowserOpen: this.state.isObjectBrowserOpen,\n        openObjectBrowser: this.openObjectBrowser,\n        closeObjectBrowser: this.closeObjectBrowser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      })), __jsx(React.Fragment, null, __jsx(SidebarPopup, {\n        open: this.state.isObjectBrowserOpen,\n        onClose: this.closeObjectBrowser,\n        overlay: this.state.overlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, __jsx(ObjectBrowserBody, _extends({}, this.props, {\n        data: this.state.propDataName ? this.props[this.state.propDataName] : this.props.data,\n        contextURL: getBaseUrl(contextURL),\n        closeObjectBrowser: this.closeObjectBrowser,\n        mode: this.state.mode,\n        onSelectItem: this.state.onSelectItem,\n        dataName: this.state.dataName,\n        searchableTypes: this.state.searchableTypes,\n        selectableTypes: this.state.selectableTypes,\n        maximumSelectionSize: this.state.maximumSelectionSize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }, _defineProperty(_class, \"defaultProps\", {\n    onChangeBlock: () => {},\n    data: {},\n    block: new Date().getTime() + ''\n  }), _class;\n};\nexport default withObjectBrowser;","map":{"version":3,"names":["React","ObjectBrowserBody","SidebarPopup","getBaseUrl","withObjectBrowser","WrappedComponent","Component","constructor","mode","onSelectItem","dataName","overlay","propDataName","searchableTypes","selectableTypes","maximumSelectionSize","currentPath","setState","isObjectBrowserOpen","state","render","contextURL","props","pathname","location","openObjectBrowser","closeObjectBrowser","data","onChangeBlock","block","Date","getTime"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Sidebar/ObjectBrowser.jsx"],"sourcesContent":["import React from 'react';\nimport ObjectBrowserBody from '@plone/volto/components/manage/Sidebar/ObjectBrowserBody';\nimport SidebarPopup from '@plone/volto/components/manage/Sidebar/SidebarPopup';\nimport { getBaseUrl } from '@plone/volto/helpers';\n\nconst withObjectBrowser = (WrappedComponent) =>\n  class extends React.Component {\n    /**\n     * Default properties\n     * @property {Object} defaultProps Default properties.\n     * @static\n     */\n    static defaultProps = {\n      onChangeBlock: () => {},\n      data: {},\n      block: new Date().getTime() + '',\n    };\n\n    constructor() {\n      super();\n      this.state = { isObjectBrowserOpen: false };\n    }\n\n    /**\n     * openObjectBrowser\n     * @function openObjectBrowser\n     * @param {Object} object ObjectBrowser configuration.\n     * @param {string} object.mode Quick mode, defaults to `image`. Values: link, image, multiple\n     * @param {string} object.dataName Name of the block data property to write the selected item.\n     * @param {string} object.onSelectItem Function that will be called on item selection.\n     * @param {string} object.overlay Boolean to show overlay background on content when opening objectBrowser.\n     *\n     * Usage:\n     *\n     * this.props.openObjectBrowser();\n     *\n     * this.props.openObjectBrowser({mode: 'link'});\n     *\n     * this.props.openObjectBrowser({\n     *   dataName: 'myfancydatafield'\n     *   });\n     *\n     * this.props.openObjectBrowser({\n     *   onSelectItem: url =>\n     *     this.props.onChangeBlock(this.props.block, {\n     *       ...this.props.data,\n     *       myfancydatafield: url,\n     *     }),\n     *   });\n     */\n    openObjectBrowser = ({\n      mode = 'image',\n      onSelectItem = null,\n      dataName = null,\n      overlay = null,\n      propDataName = null,\n      searchableTypes,\n      selectableTypes,\n      maximumSelectionSize,\n      currentPath,\n    } = {}) =>\n      this.setState(() => ({\n        isObjectBrowserOpen: true,\n        mode,\n        onSelectItem,\n        dataName,\n        overlay,\n        propDataName,\n        searchableTypes,\n        selectableTypes,\n        maximumSelectionSize,\n        currentPath,\n      }));\n\n    closeObjectBrowser = () => this.setState({ isObjectBrowserOpen: false });\n\n    render() {\n      let contextURL =\n        this.props.pathname ||\n        this.props.location?.pathname ||\n        this.state?.currentPath;\n\n      return (\n        <>\n          <WrappedComponent\n            {...this.props}\n            isObjectBrowserOpen={this.state.isObjectBrowserOpen}\n            openObjectBrowser={this.openObjectBrowser}\n            closeObjectBrowser={this.closeObjectBrowser}\n          />\n\n          <>\n            <SidebarPopup\n              open={this.state.isObjectBrowserOpen}\n              onClose={this.closeObjectBrowser}\n              overlay={this.state.overlay}\n            >\n              <ObjectBrowserBody\n                {...this.props}\n                data={\n                  this.state.propDataName\n                    ? this.props[this.state.propDataName]\n                    : this.props.data\n                }\n                contextURL={getBaseUrl(contextURL)}\n                closeObjectBrowser={this.closeObjectBrowser}\n                mode={this.state.mode}\n                onSelectItem={this.state.onSelectItem}\n                dataName={this.state.dataName}\n                searchableTypes={this.state.searchableTypes}\n                selectableTypes={this.state.selectableTypes}\n                maximumSelectionSize={this.state.maximumSelectionSize}\n              />\n            </SidebarPopup>\n          </>\n        </>\n      );\n    }\n  };\n\nexport default withObjectBrowser;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}