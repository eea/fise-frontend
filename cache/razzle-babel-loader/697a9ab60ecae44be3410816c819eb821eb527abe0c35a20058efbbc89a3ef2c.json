{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/blocks/Text/index.js\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport iconSVG from '@plone/volto/icons/subtext.svg';\nimport TextBlockView from './TextBlockView';\nimport TextBlockEdit from './TextBlockEdit';\nimport TextBlockSchema from './TextBlockSchema';\nimport { goDown, goUp, backspaceInList, indentListItems, joinWithNextBlock, joinWithPreviousBlock, softBreak, moveListItemDown, moveListItemUp, traverseBlocks, unwrapEmptyString, slashMenu, cancelEsc } from './keyboard';\nimport { withDeleteSelectionOnEnter } from 'volto-slate/editor/extensions';\nimport { breakList, withDeserializers, withLists, withSplitBlocksOnBreak, withIsSelected } from './extensions';\nimport { extractImages } from 'volto-slate/editor/plugins/Image/deconstruct';\nimport { extractTables } from 'volto-slate/blocks/Table/deconstruct';\nimport _TextBlockView from './TextBlockView';\nexport { _TextBlockView as TextBlockView };\nimport _TextBlockEdit from './TextBlockEdit';\nexport { _TextBlockEdit as TextBlockEdit };\nimport _TextBlockSchema from './TextBlockSchema';\nexport { _TextBlockSchema as TextBlockSchema };\nexport default (function (config) {\n  config.settings.slate = _objectSpread({\n    // TODO: should we inverse order? First here gets executed last\n    textblockExtensions: [withLists, withSplitBlocksOnBreak,\n    // TODO: do we still need this one?\n    withDeleteSelectionOnEnter, withDeserializers, withIsSelected, breakList],\n    // Pluggable handlers for the onKeyDown event of <Editable />\n    // Order matters here. A handler can return `true` to stop executing any\n    // following handler\n    textblockKeyboardHandlers: {\n      Backspace: [unwrapEmptyString, backspaceInList,\n      // Backspace in list item lifts node and breaks Volto blocks\n      joinWithPreviousBlock // Backspace at beginning of block joins with previous block\n      ],\n\n      Delete: [unwrapEmptyString, joinWithNextBlock // Delete at end of block joins with next block\n      ],\n\n      Enter: [slashMenu, unwrapEmptyString, softBreak // Handles shift+Enter as a newline (<br/>)\n      ],\n\n      ArrowUp: [slashMenu, moveListItemUp,\n      // Move up a list with with Ctrl+up\n      goUp // Select previous block\n      ],\n\n      ArrowDown: [slashMenu, moveListItemDown,\n      // Move down a list item with Ctrl+down\n      goDown // Select next block\n      ],\n\n      Tab: [indentListItems,\n      // <tab> and <c-tab> behaviour for list items\n      traverseBlocks],\n      Escape: [cancelEsc]\n    },\n    textblockDetachedKeyboardHandlers: {\n      Enter: [softBreak // Handles shift+Enter as a newline (<br/>)\n      ]\n    },\n\n    // Used by deconstructToVoltoBlocks to transform tags such as <img> to a Volto image block\n    // These emiters receive (editor, pathRef), emit [blockid, blockoptions] and\n    // are allowed to change the editor contents (for the given path)\n    voltoBlockEmiters: [].concat(_toConsumableArray(config.settings.slate.voltoBlockEmiters || []), [extractImages, extractTables]),\n    // These elements will get an id, to make them targets in TOC\n    topLevelTargetElements: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n  }, config.settings.slate);\n  config.settings.integratesBlockStyles = [].concat(_toConsumableArray(config.settings.integratesBlockStyles || []), ['slate']);\n  config.blocks.blocksConfig.slate = {\n    id: 'slate',\n    title: 'Slate',\n    icon: iconSVG,\n    group: 'text',\n    view: TextBlockView,\n    edit: TextBlockEdit,\n    schema: TextBlockSchema,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: []\n    },\n    blockHasValue: function blockHasValue(data) {\n      var _data$plaintext;\n      // TODO: this should be handled better\n      return data && !!((_data$plaintext = data.plaintext) !== null && _data$plaintext !== void 0 && _data$plaintext.trim());\n    },\n    tocEntry: function tocEntry() {\n      var _value$;\n      var block = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var tocData = arguments.length > 1 ? arguments[1] : undefined;\n      // integration with volto-block-toc\n      var value = block.value,\n        override_toc = block.override_toc,\n        entry_text = block.entry_text,\n        level = block.level,\n        plaintext = block.plaintext;\n      var type = value === null || value === void 0 ? void 0 : (_value$ = value[0]) === null || _value$ === void 0 ? void 0 : _value$.type;\n      return override_toc && level ? [parseInt(level.slice(1)), entry_text] : config.settings.slate.topLevelTargetElements.includes(type) ? [parseInt(type.slice(1)), plaintext] : null;\n    }\n  };\n  config.blocks.blocksConfig.detachedSlate = _objectSpread(_objectSpread({}, config.blocks.blocksConfig.slate), {}, {\n    id: 'detachedSlate',\n    title: 'Detached Slate',\n    edit: function edit(props) {\n      return __jsx(TextBlockEdit, _extends({}, props, {\n        detached: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 22\n        }\n      }));\n    },\n    restricted: true\n  });\n  return config;\n});","map":{"version":3,"names":["React","iconSVG","TextBlockView","TextBlockEdit","TextBlockSchema","goDown","goUp","backspaceInList","indentListItems","joinWithNextBlock","joinWithPreviousBlock","softBreak","moveListItemDown","moveListItemUp","traverseBlocks","unwrapEmptyString","slashMenu","cancelEsc","withDeleteSelectionOnEnter","breakList","withDeserializers","withLists","withSplitBlocksOnBreak","withIsSelected","extractImages","extractTables","config","settings","slate","textblockExtensions","textblockKeyboardHandlers","Backspace","Delete","Enter","ArrowUp","ArrowDown","Tab","Escape","textblockDetachedKeyboardHandlers","voltoBlockEmiters","topLevelTargetElements","integratesBlockStyles","blocks","blocksConfig","id","title","icon","group","view","edit","schema","restricted","mostUsed","blockHasOwnFocusManagement","sidebarTab","security","addPermission","blockHasValue","data","plaintext","trim","tocEntry","block","tocData","value","override_toc","entry_text","level","type","parseInt","slice","includes","detachedSlate","props"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/blocks/Text/index.js"],"sourcesContent":["import React from 'react';\nimport iconSVG from '@plone/volto/icons/subtext.svg';\nimport TextBlockView from './TextBlockView';\nimport TextBlockEdit from './TextBlockEdit';\nimport TextBlockSchema from './TextBlockSchema';\n\nimport {\n  goDown,\n  goUp,\n  backspaceInList,\n  indentListItems,\n  joinWithNextBlock,\n  joinWithPreviousBlock,\n  softBreak,\n  moveListItemDown,\n  moveListItemUp,\n  traverseBlocks,\n  unwrapEmptyString,\n  slashMenu,\n  cancelEsc,\n} from './keyboard';\nimport { withDeleteSelectionOnEnter } from 'volto-slate/editor/extensions';\nimport {\n  breakList,\n  withDeserializers,\n  withLists,\n  withSplitBlocksOnBreak,\n  withIsSelected,\n} from './extensions';\nimport { extractImages } from 'volto-slate/editor/plugins/Image/deconstruct';\nimport { extractTables } from 'volto-slate/blocks/Table/deconstruct';\n\nexport TextBlockView from './TextBlockView';\nexport TextBlockEdit from './TextBlockEdit';\nexport TextBlockSchema from './TextBlockSchema';\n\nexport default (config) => {\n  config.settings.slate = {\n    // TODO: should we inverse order? First here gets executed last\n    textblockExtensions: [\n      withLists,\n      withSplitBlocksOnBreak, // TODO: do we still need this one?\n      withDeleteSelectionOnEnter,\n      withDeserializers,\n      withIsSelected,\n      breakList,\n    ],\n\n    // Pluggable handlers for the onKeyDown event of <Editable />\n    // Order matters here. A handler can return `true` to stop executing any\n    // following handler\n    textblockKeyboardHandlers: {\n      Backspace: [\n        unwrapEmptyString,\n        backspaceInList, // Backspace in list item lifts node and breaks Volto blocks\n        joinWithPreviousBlock, // Backspace at beginning of block joins with previous block\n      ],\n      Delete: [\n        unwrapEmptyString,\n        joinWithNextBlock, // Delete at end of block joins with next block\n      ],\n      Enter: [\n        slashMenu,\n        unwrapEmptyString,\n        softBreak, // Handles shift+Enter as a newline (<br/>)\n      ],\n      ArrowUp: [\n        slashMenu,\n        moveListItemUp, // Move up a list with with Ctrl+up\n        goUp, // Select previous block\n      ],\n      ArrowDown: [\n        slashMenu,\n        moveListItemDown, // Move down a list item with Ctrl+down\n        goDown, // Select next block\n      ],\n      Tab: [\n        indentListItems, // <tab> and <c-tab> behaviour for list items\n        traverseBlocks,\n      ],\n      Escape: [cancelEsc],\n    },\n    textblockDetachedKeyboardHandlers: {\n      Enter: [\n        softBreak, // Handles shift+Enter as a newline (<br/>)\n      ],\n    },\n    // Used by deconstructToVoltoBlocks to transform tags such as <img> to a Volto image block\n    // These emiters receive (editor, pathRef), emit [blockid, blockoptions] and\n    // are allowed to change the editor contents (for the given path)\n    voltoBlockEmiters: [\n      ...(config.settings.slate.voltoBlockEmiters || []),\n      extractImages,\n      extractTables,\n    ],\n\n    // These elements will get an id, to make them targets in TOC\n    topLevelTargetElements: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n    ...config.settings.slate, // TODO: is this correct for volto-slate addons?\n  };\n\n  config.settings.integratesBlockStyles = [\n    ...(config.settings.integratesBlockStyles || []),\n    'slate',\n  ];\n\n  config.blocks.blocksConfig.slate = {\n    id: 'slate',\n    title: 'Slate',\n    icon: iconSVG,\n    group: 'text',\n    view: TextBlockView,\n    edit: TextBlockEdit,\n    schema: TextBlockSchema,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n    blockHasValue: (data) => {\n      // TODO: this should be handled better\n      return data && !!data.plaintext?.trim();\n    },\n    tocEntry: (block = {}, tocData) => {\n      // integration with volto-block-toc\n      const { value, override_toc, entry_text, level, plaintext } = block;\n      const type = value?.[0]?.type;\n      return override_toc && level\n        ? [parseInt(level.slice(1)), entry_text]\n        : config.settings.slate.topLevelTargetElements.includes(type)\n        ? [parseInt(type.slice(1)), plaintext]\n        : null;\n    },\n  };\n\n  config.blocks.blocksConfig.detachedSlate = {\n    ...config.blocks.blocksConfig.slate,\n    id: 'detachedSlate',\n    title: 'Detached Slate',\n    edit: (props) => <TextBlockEdit {...props} detached />,\n    restricted: true,\n  };\n  return config;\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}