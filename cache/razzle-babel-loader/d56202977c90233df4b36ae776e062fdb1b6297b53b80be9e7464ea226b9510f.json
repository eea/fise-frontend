{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Listing/ImageGallery.jsx\",\n  _this2 = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport loadable from '@loadable/component';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport { Button } from 'semantic-ui-react';\nimport { Icon } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport galleryLeftSVG from '@plone/volto/icons/left-key.svg';\nimport galleryRightSVG from '@plone/volto/icons/right-key.svg';\nimport galleryPlaySVG from '@plone/volto/icons/play.svg';\nimport galleryPauseSVG from '@plone/volto/icons/pause.svg';\nimport galleryFullScreenSVG from '@plone/volto/icons/fullscreen.svg';\nimport galleryBackDownSVG from '@plone/volto/icons/back-down.svg';\nvar ImageGallery = loadable({\n  resolved: {},\n  chunkName: function chunkName() {\n    return \"react-image-gallery\";\n  },\n  isReady: function isReady(props) {\n    var key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: function importAsync() {\n    return import( /* webpackChunkName: \"react-image-gallery\" */'react-image-gallery');\n  },\n  requireAsync: function requireAsync(props) {\n    var _this = this;\n    var key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(function (resolved) {\n      _this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync: function requireSync(props) {\n    var id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve: function resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-image-gallery\");\n    }\n    return eval('require.resolve')(\"react-image-gallery\");\n  }\n});\n_c = ImageGallery;\nvar renderLeftNav = function renderLeftNav(onClick, disabled) {\n  return __jsx(Button, {\n    className: \"image-gallery-icon image-gallery-left-nav primary basic\",\n    disabled: disabled,\n    onClick: onClick,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Icon, {\n    name: galleryLeftSVG,\n    size: \"48px\",\n    fill: \"black\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n};\nvar renderRightNav = function renderRightNav(onClick, disabled) {\n  return __jsx(Button, {\n    className: \"image-gallery-icon image-gallery-right-nav primary basic\",\n    disabled: disabled,\n    onClick: onClick,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Icon, {\n    name: galleryRightSVG,\n    size: \"48px\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n};\nvar renderPlayPauseButton = function renderPlayPauseButton(onClick, isPlaying) {\n  return __jsx(Button, {\n    type: \"button\",\n    className: \"image-gallery-icon image-gallery-play-button basic primary\",\n    onClick: onClick,\n    \"aria-label\": \"Play or Pause Slideshow\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }\n  }, isPlaying ? __jsx(Icon, {\n    name: galleryPauseSVG,\n    size: \"48px\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }) : __jsx(Icon, {\n    name: galleryPlaySVG,\n    size: \"48px\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n};\nvar renderFullscreenButton = function renderFullscreenButton(onClick, isFullscreen) {\n  return __jsx(Button, {\n    type: \"button\",\n    className: \"image-gallery-icon image-gallery-fullscreen-button primary basic\",\n    onClick: onClick,\n    \"aria-label\": \"Open Fullscreen\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, isFullscreen ? __jsx(Icon, {\n    name: galleryBackDownSVG,\n    size: \"48px\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }) : __jsx(Icon, {\n    name: galleryFullScreenSVG,\n    size: \"48px\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }));\n};\nvar ImageGalleryTemplate = function ImageGalleryTemplate(_ref) {\n  var items = _ref.items;\n  var settings = config.settings;\n  var renderItems = items.filter(function (content) {\n    return settings.imageObjects.includes(content['@type']) && content.image_field;\n  });\n  var imagesInfo = renderItems.map(function (item) {\n    return {\n      original: \"\".concat(flattenToAppURL(item['@id']), \"/@@images/\").concat(item.image_field, \"/large\"),\n      thumbnail: \"\".concat(flattenToAppURL(item['@id']), \"/@@images/\").concat(item.image_field, \"/thumb\")\n    };\n  });\n  return renderItems.length > 0 && __jsx(ImageGallery, {\n    items: imagesInfo,\n    renderLeftNav: renderLeftNav,\n    renderRightNav: renderRightNav,\n    renderPlayPauseButton: renderPlayPauseButton,\n    renderFullscreenButton: renderFullscreenButton,\n    lazyLoad: true,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  });\n};\n_c2 = ImageGalleryTemplate;\nImageGalleryTemplate.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired\n};\nexport default ImageGalleryTemplate;\nvar _c, _c2;\n$RefreshReg$(_c, \"ImageGallery\");\n$RefreshReg$(_c2, \"ImageGalleryTemplate\");","map":{"version":3,"names":["React","PropTypes","loadable","Button","Icon","flattenToAppURL","config","galleryLeftSVG","galleryRightSVG","galleryPlaySVG","galleryPauseSVG","galleryFullScreenSVG","galleryBackDownSVG","ImageGallery","renderLeftNav","onClick","disabled","renderRightNav","renderPlayPauseButton","isPlaying","renderFullscreenButton","isFullscreen","ImageGalleryTemplate","items","settings","renderItems","filter","content","imageObjects","includes","image_field","imagesInfo","map","item","original","thumbnail","length","propTypes","arrayOf","any","isRequired"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Listing/ImageGallery.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport loadable from '@loadable/component';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport { Button } from 'semantic-ui-react';\nimport { Icon } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nimport galleryLeftSVG from '@plone/volto/icons/left-key.svg';\nimport galleryRightSVG from '@plone/volto/icons/right-key.svg';\nimport galleryPlaySVG from '@plone/volto/icons/play.svg';\nimport galleryPauseSVG from '@plone/volto/icons/pause.svg';\nimport galleryFullScreenSVG from '@plone/volto/icons/fullscreen.svg';\nimport galleryBackDownSVG from '@plone/volto/icons/back-down.svg';\n\nconst ImageGallery = loadable(() => import('react-image-gallery'));\n\nconst renderLeftNav = (onClick, disabled) => {\n  return (\n    <Button\n      className=\"image-gallery-icon image-gallery-left-nav primary basic\"\n      disabled={disabled}\n      onClick={onClick}\n    >\n      <Icon name={galleryLeftSVG} size=\"48px\" fill=\"black\" />\n    </Button>\n  );\n};\nconst renderRightNav = (onClick, disabled) => {\n  return (\n    <Button\n      className=\"image-gallery-icon image-gallery-right-nav primary basic\"\n      disabled={disabled}\n      onClick={onClick}\n    >\n      <Icon name={galleryRightSVG} size=\"48px\" />\n    </Button>\n  );\n};\n\nconst renderPlayPauseButton = (onClick, isPlaying) => (\n  <Button\n    type=\"button\"\n    className=\"image-gallery-icon image-gallery-play-button basic primary\"\n    onClick={onClick}\n    aria-label=\"Play or Pause Slideshow\"\n  >\n    {isPlaying ? (\n      <Icon name={galleryPauseSVG} size=\"48px\" />\n    ) : (\n      <Icon name={galleryPlaySVG} size=\"48px\" />\n    )}\n  </Button>\n);\n\nconst renderFullscreenButton = (onClick, isFullscreen) => {\n  return (\n    <Button\n      type=\"button\"\n      className=\"image-gallery-icon image-gallery-fullscreen-button primary basic\"\n      onClick={onClick}\n      aria-label=\"Open Fullscreen\"\n    >\n      {isFullscreen ? (\n        <Icon name={galleryBackDownSVG} size=\"48px\" />\n      ) : (\n        <Icon name={galleryFullScreenSVG} size=\"48px\" />\n      )}\n    </Button>\n  );\n};\n\nconst ImageGalleryTemplate = ({ items }) => {\n  const { settings } = config;\n  const renderItems = items.filter(\n    (content) =>\n      settings.imageObjects.includes(content['@type']) && content.image_field,\n  );\n  const imagesInfo = renderItems.map((item) => {\n    return {\n      original: `${flattenToAppURL(item['@id'])}/@@images/${\n        item.image_field\n      }/large`,\n      thumbnail: `${flattenToAppURL(item['@id'])}/@@images/${\n        item.image_field\n      }/thumb`,\n    };\n  });\n\n  return (\n    renderItems.length > 0 && (\n      <ImageGallery\n        items={imagesInfo}\n        renderLeftNav={renderLeftNav}\n        renderRightNav={renderRightNav}\n        renderPlayPauseButton={renderPlayPauseButton}\n        renderFullscreenButton={renderFullscreenButton}\n        lazyLoad={true}\n      />\n    )\n  );\n};\n\nImageGalleryTemplate.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default ImageGalleryTemplate;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}