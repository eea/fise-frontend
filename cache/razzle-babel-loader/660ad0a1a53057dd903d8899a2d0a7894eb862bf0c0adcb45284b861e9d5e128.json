{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-taxonomy/src/ControlPanel/Taxonomies.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport { Container, Header, Segment, Table } from 'semantic-ui-react';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport { getContent } from '@plone/volto/actions';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\n\n// import circleBottomSVG from '@plone/volto/icons/circle-bottom.svg';\n// import circleTopSVG from '@plone/volto/icons/circle-top.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nexport default _s(function (props) {\n  var _request$data, _request$data$items;\n  _s();\n  var url = '/@taxonomy';\n  var request = useSelector(function (state) {\n    return state.content.subrequests[url];\n  });\n  var dispatch = useDispatch();\n  React.useEffect(function () {\n    if (!request) {\n      dispatch(getContent(url, null, url));\n    }\n  }, [request, dispatch]);\n  return __jsx(Container, {\n    id: \"page-taxonomies\",\n    className: \"controlpanel-taxonomies\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(Helmet, {\n    title: \"Taxonomies\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), __jsx(Segment.Group, {\n    raised: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(Segment, {\n    className: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Taxonomy settings\"), __jsx(Segment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Header, {\n    as: \"h3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Existing taxonomies\")), __jsx(Segment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    compact: true,\n    singleLine: true,\n    striped: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, __jsx(Table.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(Table.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, __jsx(Table.HeaderCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Type\",\n    defaultMessage: \"Type\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  })), __jsx(Table.HeaderCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Items\",\n    defaultMessage: \"Items\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  })), __jsx(Table.HeaderCell, {\n    textAlign: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Actions\",\n    defaultMessage: \"Actions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  })))), __jsx(Table.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, request === null || request === void 0 ? void 0 : (_request$data = request.data) === null || _request$data === void 0 ? void 0 : (_request$data$items = _request$data.items) === null || _request$data$items === void 0 ? void 0 : _request$data$items.map(function (item) {\n    var _item$count;\n    return __jsx(Table.Row, {\n      key: item['name'],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, __jsx(Link, {\n      to: \"\".concat(props.location.pathname, \"/\").concat(item['name']),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, item.title)), __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }, item === null || item === void 0 ? void 0 : (_item$count = item.count) === null || _item$count === void 0 ? void 0 : _item$count.en), __jsx(Table.Cell, {\n      textAlign: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }));\n  }))))), __CLIENT__ && __jsx(Portal, {\n    node: document.getElementById('toolbar'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(Toolbar, {\n    pathname: props.location.pathname,\n    hideDefaultViewButtons: true,\n    inner: __jsx(React.Fragment, null, __jsx(Link, {\n      to: \"/controlpanel\",\n      className: \"item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      name: backSVG,\n      \"aria-label\": \"Back\",\n      className: \"contents circled\",\n      size: \"30px\",\n      title: \"Back\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })));\n}, \"mmqTSVP/luWckJL90/XqdcPtghA=\", false, function () {\n  return [useSelector, useDispatch];\n});","map":{"version":3,"names":["React","useDispatch","useSelector","FormattedMessage","Container","Header","Segment","Table","Helmet","Icon","Toolbar","getContent","Link","Portal","backSVG","props","url","request","state","content","subrequests","dispatch","useEffect","data","items","map","item","location","pathname","title","count","en","__CLIENT__","document","getElementById"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-taxonomy/src/ControlPanel/Taxonomies.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport { Container, Header, Segment, Table } from 'semantic-ui-react';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport { getContent } from '@plone/volto/actions';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\n\n// import circleBottomSVG from '@plone/volto/icons/circle-bottom.svg';\n// import circleTopSVG from '@plone/volto/icons/circle-top.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nexport default (props) => {\n  const url = '/@taxonomy';\n  const request = useSelector((state) => state.content.subrequests[url]);\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (!request) {\n      dispatch(getContent(url, null, url));\n    }\n  }, [request, dispatch]);\n\n  return (\n    <Container id=\"page-taxonomies\" className=\"controlpanel-taxonomies\">\n      <Helmet title=\"Taxonomies\" />\n      <Segment.Group raised>\n        <Segment className=\"primary\">Taxonomy settings</Segment>\n        <Segment>\n          <Header as=\"h3\">Existing taxonomies</Header>\n        </Segment>\n\n        <Segment>\n          <Table compact singleLine striped>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>\n                  <FormattedMessage id=\"Type\" defaultMessage=\"Type\" />\n                </Table.HeaderCell>\n                <Table.HeaderCell>\n                  <FormattedMessage id=\"Items\" defaultMessage=\"Items\" />\n                </Table.HeaderCell>\n                <Table.HeaderCell textAlign=\"right\">\n                  <FormattedMessage id=\"Actions\" defaultMessage=\"Actions\" />\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {request?.data?.items?.map((item) => (\n                <Table.Row key={item['name']}>\n                  <Table.Cell>\n                    <Link to={`${props.location.pathname}/${item['name']}`}>\n                      {item.title}\n                    </Link>\n                  </Table.Cell>\n                  <Table.Cell>{item?.count?.en}</Table.Cell>\n                  <Table.Cell textAlign=\"right\"></Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        </Segment>\n      </Segment.Group>\n\n      {__CLIENT__ && (\n        <Portal node={document.getElementById('toolbar')}>\n          <Toolbar\n            pathname={props.location.pathname}\n            hideDefaultViewButtons\n            inner={\n              <>\n                <Link to=\"/controlpanel\" className=\"item\">\n                  <Icon\n                    name={backSVG}\n                    aria-label=\"Back\"\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title=\"Back\"\n                  />\n                </Link>\n              </>\n            }\n          />\n        </Portal>\n      )}\n    </Container>\n  );\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Type","defaultMessage":"Type"},{"id":"Items","defaultMessage":"Items"},{"id":"Actions","defaultMessage":"Actions"}]}},"sourceType":"module","externalDependencies":[]}