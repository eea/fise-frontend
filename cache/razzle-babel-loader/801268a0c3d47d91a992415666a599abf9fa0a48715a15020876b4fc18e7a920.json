{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _regeneratorRuntime from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _map from \"lodash/map\";\nimport _filter from \"lodash/filter\";\nimport _concat from \"lodash/concat\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Contents/ContentsUploadModal.jsx\";\nvar __jsx = React.createElement;\n/**\n * Contents upload modal.\n * @module components/manage/Contents/ContentsUploadModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Button, Dimmer, Header, Icon, Image, Loader, Modal, Table, Segment } from 'semantic-ui-react';\nimport loadable from '@loadable/component';\nimport filesize from 'filesize';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { FormattedRelativeDate } from '@plone/volto/components';\nimport { createContent } from '@plone/volto/actions';\nvar Dropzone = loadable({\n  resolved: {},\n  chunkName: function chunkName() {\n    return \"react-dropzone\";\n  },\n  isReady: function isReady(props) {\n    var key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: function importAsync() {\n    return import( /* webpackChunkName: \"react-dropzone\" */'react-dropzone');\n  },\n  requireAsync: function requireAsync(props) {\n    var _this = this;\n    var key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(function (resolved) {\n      _this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync: function requireSync(props) {\n    var id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve: function resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-dropzone\");\n    }\n    return eval('require.resolve')(\"react-dropzone\");\n  }\n});\n_c = Dropzone;\nvar messages = defineMessages({\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  upload: {\n    \"id\": \"{count, plural, one {Upload {count} file} other {Upload {count} files}}\",\n    \"defaultMessage\": \"{count, plural, one {Upload {count} file} other {Upload {count} files}}\"\n  }\n});\nvar SUBREQUEST = 'batch-upload';\n\n/**\n * ContentsUploadModal class.\n * @class ContentsUploadModal\n * @extends Component\n */\nvar ContentsUploadModal = /*#__PURE__*/function (_Component) {\n  _inherits(ContentsUploadModal, _Component);\n  var _super = _createSuper(ContentsUploadModal);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  function ContentsUploadModal(props) {\n    var _this2;\n    _classCallCheck(this, ContentsUploadModal);\n    _this2 = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this2), \"onDrop\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(files) {\n        var _loop, i;\n        return _regeneratorRuntime().wrap(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop(i) {\n                  return _regeneratorRuntime().wrap(function _loop$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return readAsDataURL(files[i]).then(function (data) {\n                            var fields = data.match(/^data:(.*);(.*),(.*)$/);\n                            files[i].preview = fields[0];\n                          });\n                        case 2:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _loop);\n                });\n                i = 0;\n              case 2:\n                if (!(i < files.length)) {\n                  _context2.next = 7;\n                  break;\n                }\n                return _context2.delegateYield(_loop(i), \"t0\", 4);\n              case 4:\n                i++;\n                _context2.next = 2;\n                break;\n              case 7:\n                _this2.setState({\n                  files: _concat(_this2.state.files, files)\n                });\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    _this2.onRemoveFile = _this2.onRemoveFile.bind(_assertThisInitialized(_this2));\n    _this2.onDrop = _this2.onDrop.bind(_assertThisInitialized(_this2));\n    _this2.onCancel = _this2.onCancel.bind(_assertThisInitialized(_this2));\n    _this2.onSubmit = _this2.onSubmit.bind(_assertThisInitialized(_this2));\n    _this2.state = {\n      files: []\n    };\n    return _this2;\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  _createClass(ContentsUploadModal, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.request.loading && nextProps.request.loaded) {\n        this.props.onOk();\n        this.setState({\n          files: []\n        });\n      }\n    }\n\n    /**\n     * Remove file handler\n     * @method onRemoveFile\n     * @param {Object} event Event object\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onRemoveFile\",\n    value: function onRemoveFile(event) {\n      this.setState({\n        files: _filter(this.state.files, function (file, index) {\n          return index !== parseInt(event.target.getAttribute('value'), 10);\n        })\n      });\n    }\n\n    /**\n     * Drop handler\n     * @method onDrop\n     * @param {array} files File objects\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onCancel\",\n    value:\n    /**\n     * Cancel handler\n     * @method onCancel\n     * @returns {undefined}\n     */\n    function onCancel() {\n      this.props.onCancel();\n      this.setState({\n        files: []\n      });\n    }\n\n    /**\n     * Submit handler\n     * @method onSubmit\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      var _this3 = this;\n      Promise.all(_map(this.state.files, function (file) {\n        return readAsDataURL(file);\n      })).then(function (files) {\n        _this3.props.createContent(_this3.props.pathname, _map(_this3.state.files, function (file, index) {\n          var fields = files[index].match(/^data:(.*);(.*),(.*)$/);\n          var image = fields[1].split('/')[0] === 'image';\n          return _defineProperty({\n            '@type': image ? 'Image' : 'File',\n            title: file.name\n          }, image ? 'image' : 'file', {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file.name\n          });\n        }), SUBREQUEST);\n      });\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      return this.props.open && __jsx(Modal, {\n        open: this.props.open,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }, __jsx(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Upload files\",\n        defaultMessage: \"Upload files\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      })), __jsx(Dimmer, {\n        active: this.props.request.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }, __jsx(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Uploading files\",\n        defaultMessage: \"Uploading files\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      }))), __jsx(Modal.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, __jsx(Dropzone, {\n        onDrop: this.onDrop,\n        className: \"dropzone\",\n        noDragEventsBubbling: true,\n        multiple: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }, function (_ref3) {\n        var getRootProps = _ref3.getRootProps,\n          getInputProps = _ref3.getInputProps;\n        return __jsx(\"div\", _extends({}, getRootProps({\n          className: 'dashed'\n        }), {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }\n        }), __jsx(Segment, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 19\n          }\n        }, __jsx(Table, {\n          basic: \"very\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 21\n          }\n        }, __jsx(Table.Body, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 23\n          }\n        }, __jsx(Table.Row, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }\n        }, __jsx(Table.Cell, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 27\n          }\n        }, __jsx(FormattedMessage, {\n          id: \"Drag and drop files from your computer onto this area or click the \\u201CBrowse\\u201D button.\",\n          defaultMessage: \"Drag and drop files from your computer onto this area or click the \\u201CBrowse\\u201D button.\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }\n        })), __jsx(Table.Cell, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 27\n          }\n        }, __jsx(Button, {\n          className: \"ui button primary\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }\n        }, __jsx(FormattedMessage, {\n          id: \"Browse\",\n          defaultMessage: \"Browse\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 31\n          }\n        })), __jsx(\"input\", _extends({}, getInputProps({\n          type: 'file',\n          style: {\n            display: 'none'\n          }\n        }), {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }\n        }))))))));\n      }), this.state.files.length > 0 && __jsx(Table, {\n        compact: true,\n        singleLine: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }\n      }, __jsx(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 19\n        }\n      }, __jsx(Table.HeaderCell, {\n        width: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Filename\",\n        defaultMessage: \"Filename\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 23\n        }\n      })), __jsx(Table.HeaderCell, {\n        width: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Last modified\",\n        defaultMessage: \"Last modified\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 23\n        }\n      })), __jsx(Table.HeaderCell, {\n        width: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"File size\",\n        defaultMessage: \"File size\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 23\n        }\n      })), __jsx(Table.HeaderCell, {\n        width: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Preview\",\n        defaultMessage: \"Preview\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 23\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }\n      }))), __jsx(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, _map(this.state.files, function (file, index) {\n        return __jsx(Table.Row, {\n          className: \"upload-row\",\n          key: file.name,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 21\n          }\n        }, __jsx(Table.Cell, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 23\n          }\n        }, file.name), __jsx(Table.Cell, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 23\n          }\n        }, file.lastModifiedDate && __jsx(FormattedRelativeDate, {\n          date: file.lastModifiedDate,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 27\n          }\n        })), __jsx(Table.Cell, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 23\n          }\n        }, filesize(file.size, {\n          round: 0\n        })), __jsx(Table.Cell, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 23\n          }\n        }, file.type.split('/')[0] === 'image' && __jsx(Image, {\n          src: file.preview,\n          height: 60,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 27\n          }\n        })), __jsx(Table.Cell, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 23\n          }\n        }, __jsx(Icon, {\n          name: \"close\",\n          value: index,\n          link: true,\n          onClick: _this4.onRemoveFile,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }\n        })));\n      })))), __jsx(Modal.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }\n      }, this.state.files.length > 0 && __jsx(Button, {\n        basic: true,\n        circular: true,\n        primary: true,\n        floated: \"right\",\n        icon: \"arrow right\",\n        \"aria-label\": this.props.intl.formatMessage(messages.upload, {\n          count: this.state.files.length\n        }),\n        onClick: this.onSubmit,\n        title: this.props.intl.formatMessage(messages.upload, {\n          count: this.state.files.length\n        }),\n        size: \"big\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }\n      }), __jsx(Button, {\n        basic: true,\n        circular: true,\n        secondary: true,\n        icon: \"remove\",\n        \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n        title: this.props.intl.formatMessage(messages.cancel),\n        floated: \"right\",\n        size: \"big\",\n        onClick: this.onCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return ContentsUploadModal;\n}(Component);\n_defineProperty(ContentsUploadModal, \"propTypes\", {\n  createContent: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  request: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  onOk: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect(function (state) {\n  var _state$content$subreq;\n  return {\n    request: ((_state$content$subreq = state.content.subrequests) === null || _state$content$subreq === void 0 ? void 0 : _state$content$subreq[SUBREQUEST]) || {}\n  };\n}, {\n  createContent: createContent\n}))(ContentsUploadModal);\nvar _c;\n$RefreshReg$(_c, \"Dropzone\");","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Button","Dimmer","Header","Icon","Image","Loader","Modal","Table","Segment","loadable","filesize","readAsDataURL","FormattedMessage","defineMessages","injectIntl","FormattedRelativeDate","createContent","Dropzone","messages","cancel","upload","SUBREQUEST","ContentsUploadModal","props","files","i","then","data","fields","match","preview","length","setState","state","onRemoveFile","bind","onDrop","onCancel","onSubmit","nextProps","request","loading","loaded","onOk","event","file","index","parseInt","target","getAttribute","Promise","all","pathname","image","split","title","name","encoding","filename","open","getRootProps","getInputProps","className","type","style","display","lastModifiedDate","size","round","intl","formatMessage","count","func","isRequired","string","shape","bool","content","subrequests"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Contents/ContentsUploadModal.jsx"],"sourcesContent":["/**\n * Contents upload modal.\n * @module components/manage/Contents/ContentsUploadModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport {\n  Button,\n  Dimmer,\n  Header,\n  Icon,\n  Image,\n  Loader,\n  Modal,\n  Table,\n  Segment,\n} from 'semantic-ui-react';\nimport loadable from '@loadable/component';\nimport { concat, filter, map } from 'lodash';\nimport filesize from 'filesize';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { FormattedRelativeDate } from '@plone/volto/components';\nimport { createContent } from '@plone/volto/actions';\n\nconst Dropzone = loadable(() => import('react-dropzone'));\n\nconst messages = defineMessages({\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  upload: {\n    id:\n      '{count, plural, one {Upload {count} file} other {Upload {count} files}}',\n    defaultMessage:\n      '{count, plural, one {Upload {count} file} other {Upload {count} files}}',\n  },\n});\n\nconst SUBREQUEST = 'batch-upload';\n\n/**\n * ContentsUploadModal class.\n * @class ContentsUploadModal\n * @extends Component\n */\nclass ContentsUploadModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    createContent: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    open: PropTypes.bool.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  constructor(props) {\n    super(props);\n    this.onRemoveFile = this.onRemoveFile.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      files: [],\n    };\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n      this.setState({\n        files: [],\n      });\n    }\n  }\n\n  /**\n   * Remove file handler\n   * @method onRemoveFile\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  onRemoveFile(event) {\n    this.setState({\n      files: filter(\n        this.state.files,\n        (file, index) =>\n          index !== parseInt(event.target.getAttribute('value'), 10),\n      ),\n    });\n  }\n\n  /**\n   * Drop handler\n   * @method onDrop\n   * @param {array} files File objects\n   * @returns {undefined}\n   */\n  onDrop = async (files) => {\n    for (let i = 0; i < files.length; i++) {\n      await readAsDataURL(files[i]).then((data) => {\n        const fields = data.match(/^data:(.*);(.*),(.*)$/);\n        files[i].preview = fields[0];\n      });\n    }\n    this.setState({\n      files: concat(this.state.files, files),\n    });\n  };\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.onCancel();\n    this.setState({\n      files: [],\n    });\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @returns {undefined}\n   */\n  onSubmit() {\n    Promise.all(map(this.state.files, (file) => readAsDataURL(file))).then(\n      (files) => {\n        this.props.createContent(\n          this.props.pathname,\n          map(this.state.files, (file, index) => {\n            const fields = files[index].match(/^data:(.*);(.*),(.*)$/);\n            const image = fields[1].split('/')[0] === 'image';\n            return {\n              '@type': image ? 'Image' : 'File',\n              title: file.name,\n              [image ? 'image' : 'file']: {\n                data: fields[3],\n                encoding: fields[2],\n                'content-type': fields[1],\n                filename: file.name,\n              },\n            };\n          }),\n          SUBREQUEST,\n        );\n      },\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      this.props.open && (\n        <Modal open={this.props.open}>\n          <Header>\n            <FormattedMessage id=\"Upload files\" defaultMessage=\"Upload files\" />\n          </Header>\n          <Dimmer active={this.props.request.loading}>\n            <Loader>\n              <FormattedMessage\n                id=\"Uploading files\"\n                defaultMessage=\"Uploading files\"\n              />\n            </Loader>\n          </Dimmer>\n          <Modal.Content>\n            <Dropzone\n              onDrop={this.onDrop}\n              className=\"dropzone\"\n              noDragEventsBubbling={true}\n              multiple={true}\n            >\n              {({ getRootProps, getInputProps }) => (\n                <div {...getRootProps({ className: 'dashed' })}>\n                  <Segment>\n                    <Table basic=\"very\">\n                      <Table.Body>\n                        <Table.Row>\n                          <Table.Cell>\n                            <FormattedMessage\n                              id=\"Drag and drop files from your computer onto this area or click the “Browse” button.\"\n                              defaultMessage=\"Drag and drop files from your computer onto this area or click the “Browse” button.\"\n                            />\n                          </Table.Cell>\n                          <Table.Cell>\n                            <Button className=\"ui button primary\">\n                              <FormattedMessage\n                                id=\"Browse\"\n                                defaultMessage=\"Browse\"\n                              />\n                            </Button>\n                            <input\n                              {...getInputProps({\n                                type: 'file',\n                                style: { display: 'none' },\n                              })}\n                            />\n                          </Table.Cell>\n                        </Table.Row>\n                      </Table.Body>\n                    </Table>\n                  </Segment>\n                </div>\n              )}\n            </Dropzone>\n            {this.state.files.length > 0 && (\n              <Table compact singleLine>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell width={8}>\n                      <FormattedMessage\n                        id=\"Filename\"\n                        defaultMessage=\"Filename\"\n                      />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell width={4}>\n                      <FormattedMessage\n                        id=\"Last modified\"\n                        defaultMessage=\"Last modified\"\n                      />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell width={4}>\n                      <FormattedMessage\n                        id=\"File size\"\n                        defaultMessage=\"File size\"\n                      />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell width={4}>\n                      <FormattedMessage id=\"Preview\" defaultMessage=\"Preview\" />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell />\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {map(this.state.files, (file, index) => (\n                    <Table.Row className=\"upload-row\" key={file.name}>\n                      <Table.Cell>{file.name}</Table.Cell>\n                      <Table.Cell>\n                        {file.lastModifiedDate && (\n                          <FormattedRelativeDate date={file.lastModifiedDate} />\n                        )}\n                      </Table.Cell>\n                      <Table.Cell>\n                        {filesize(file.size, { round: 0 })}\n                      </Table.Cell>\n                      <Table.Cell>\n                        {file.type.split('/')[0] === 'image' && (\n                          <Image src={file.preview} height={60} />\n                        )}\n                      </Table.Cell>\n                      <Table.Cell>\n                        <Icon\n                          name=\"close\"\n                          value={index}\n                          link\n                          onClick={this.onRemoveFile}\n                        />\n                      </Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            )}\n          </Modal.Content>\n          <Modal.Actions>\n            {this.state.files.length > 0 && (\n              <Button\n                basic\n                circular\n                primary\n                floated=\"right\"\n                icon=\"arrow right\"\n                aria-label={this.props.intl.formatMessage(messages.upload, {\n                  count: this.state.files.length,\n                })}\n                onClick={this.onSubmit}\n                title={this.props.intl.formatMessage(messages.upload, {\n                  count: this.state.files.length,\n                })}\n                size=\"big\"\n              />\n            )}\n            <Button\n              basic\n              circular\n              secondary\n              icon=\"remove\"\n              aria-label={this.props.intl.formatMessage(messages.cancel)}\n              title={this.props.intl.formatMessage(messages.cancel)}\n              floated=\"right\"\n              size=\"big\"\n              onClick={this.onCancel}\n            />\n          </Modal.Actions>\n        </Modal>\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      request: state.content.subrequests?.[SUBREQUEST] || {},\n    }),\n    { createContent },\n  ),\n)(ContentsUploadModal);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Cancel","defaultMessage":"Cancel"},{"id":"{count, plural, one {Upload {count} file} other {Upload {count} files}}","defaultMessage":"{count, plural, one {Upload {count} file} other {Upload {count} files}}"},{"id":"Upload files","defaultMessage":"Upload files"},{"id":"Uploading files","defaultMessage":"Uploading files"},{"id":"Drag and drop files from your computer onto this area or click the “Browse” button.","defaultMessage":"Drag and drop files from your computer onto this area or click the “Browse” button."},{"id":"Browse","defaultMessage":"Browse"},{"id":"Filename","defaultMessage":"Filename"},{"id":"Last modified","defaultMessage":"Last modified"},{"id":"File size","defaultMessage":"File size"},{"id":"Preview","defaultMessage":"Preview"}]}},"sourceType":"module","externalDependencies":[]}