{"ast":null,"code":"/* eslint no-console: 0 */\nimport http from 'http';\nimport app from './server';\nimport debug from 'debug';\nimport * as Sentry from '@sentry/node';\nimport * as SentryIntegrations from '@sentry/integrations';\nimport initSentry from '@plone/volto/sentry';\ninitSentry({\n  Sentry,\n  SentryIntegrations\n});\nexport default (() => {\n  const server = http.createServer(app);\n  // const host = process.env.HOST || 'localhost';\n  const port = process.env.PORT || 3000;\n  const bind_address = process.env.RAZZLE_BIND_ADDRESS || '0.0.0.0';\n  let currentApp = app;\n  server.listen(port, bind_address, () => {\n    if (app.apiPath === app.publicURL || !app.apiPath) {\n      console.log(`Volto is running in SEAMLESS mode`);\n    } else {\n      console.log(`API server (API_PATH) is set to: ${app.apiPath}`);\n    }\n    if (__DEVELOPMENT__ && app.devProxyToApiPath) console.log(`Using internal proxy: ${app.publicURL} -> ${app.devProxyToApiPath}`);\n    console.log(`üé≠ Volto started at ${bind_address}:${port} üöÄ`);\n    if (!process.env.RAZZLE_PUBLIC_URL) debug('config')(`Current public URL: ${app.publicURL}`);\n  }).on('error', e => {\n    console.error(e.message);\n    throw e;\n  });\n  return () => {\n    console.log('‚úÖ  Server-side HMR Enabled!');\n    module.hot.accept('./server', () => {\n      console.log('üîÅ  HMR Reloading `./server`...');\n      server.removeListener('request', currentApp);\n      const newApp = require('./server').default; // eslint-disable-line global-require\n      server.on('request', newApp);\n      currentApp = newApp;\n    });\n  };\n});","map":{"version":3,"names":["http","app","debug","Sentry","SentryIntegrations","initSentry","server","createServer","port","process","env","PORT","bind_address","RAZZLE_BIND_ADDRESS","currentApp","listen","apiPath","publicURL","console","log","__DEVELOPMENT__","devProxyToApiPath","RAZZLE_PUBLIC_URL","on","e","error","message","module","hot","accept","removeListener","newApp","require","default"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/start-server.js"],"sourcesContent":["/* eslint no-console: 0 */\nimport http from 'http';\n\nimport app from './server';\nimport debug from 'debug';\n\nimport * as Sentry from '@sentry/node';\nimport * as SentryIntegrations from '@sentry/integrations';\n\nimport initSentry from '@plone/volto/sentry';\n\ninitSentry({ Sentry, SentryIntegrations });\n\nexport default () => {\n  const server = http.createServer(app);\n  // const host = process.env.HOST || 'localhost';\n  const port = process.env.PORT || 3000;\n  const bind_address = process.env.RAZZLE_BIND_ADDRESS || '0.0.0.0';\n\n  let currentApp = app;\n\n  server\n    .listen(port, bind_address, () => {\n      if (app.apiPath === app.publicURL || !app.apiPath) {\n        console.log(`Volto is running in SEAMLESS mode`);\n      } else {\n        console.log(`API server (API_PATH) is set to: ${app.apiPath}`);\n      }\n      if (__DEVELOPMENT__ && app.devProxyToApiPath)\n        console.log(\n          `Using internal proxy: ${app.publicURL} -> ${app.devProxyToApiPath}`,\n        );\n      console.log(`üé≠ Volto started at ${bind_address}:${port} üöÄ`);\n\n      if (!process.env.RAZZLE_PUBLIC_URL)\n        debug('config')(`Current public URL: ${app.publicURL}`);\n    })\n    .on('error', (e) => {\n      console.error(e.message);\n      throw e;\n    });\n\n  return () => {\n    console.log('‚úÖ  Server-side HMR Enabled!');\n\n    module.hot.accept('./server', () => {\n      console.log('üîÅ  HMR Reloading `./server`...');\n      server.removeListener('request', currentApp);\n      const newApp = require('./server').default; // eslint-disable-line global-require\n      server.on('request', newApp);\n      currentApp = newApp;\n    });\n  };\n};\n"],"mappings":"AAAA;AACA,OAAOA,IAAI,MAAM,MAAM;AAEvB,OAAOC,GAAG,MAAM,UAAU;AAC1B,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,KAAKC,MAAM,MAAM,cAAc;AACtC,OAAO,KAAKC,kBAAkB,MAAM,sBAAsB;AAE1D,OAAOC,UAAU,MAAM,qBAAqB;AAE5CA,UAAU,CAAC;EAAEF,MAAM;EAAEC;AAAmB,CAAC,CAAC;AAE1C,gBAAe,MAAM;EACnB,MAAME,MAAM,GAAGN,IAAI,CAACO,YAAY,CAACN,GAAG,CAAC;EACrC;EACA,MAAMO,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;EACrC,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAG,CAACG,mBAAmB,IAAI,SAAS;EAEjE,IAAIC,UAAU,GAAGb,GAAG;EAEpBK,MAAM,CACHS,MAAM,CAACP,IAAI,EAAEI,YAAY,EAAE,MAAM;IAChC,IAAIX,GAAG,CAACe,OAAO,KAAKf,GAAG,CAACgB,SAAS,IAAI,CAAChB,GAAG,CAACe,OAAO,EAAE;MACjDE,OAAO,CAACC,GAAG,CAAE,mCAAkC,CAAC;IAClD,CAAC,MAAM;MACLD,OAAO,CAACC,GAAG,CAAE,oCAAmClB,GAAG,CAACe,OAAQ,EAAC,CAAC;IAChE;IACA,IAAII,eAAe,IAAInB,GAAG,CAACoB,iBAAiB,EAC1CH,OAAO,CAACC,GAAG,CACR,yBAAwBlB,GAAG,CAACgB,SAAU,OAAMhB,GAAG,CAACoB,iBAAkB,EAAC,CACrE;IACHH,OAAO,CAACC,GAAG,CAAE,uBAAsBP,YAAa,IAAGJ,IAAK,KAAI,CAAC;IAE7D,IAAI,CAACC,OAAO,CAACC,GAAG,CAACY,iBAAiB,EAChCpB,KAAK,CAAC,QAAQ,CAAC,CAAE,uBAAsBD,GAAG,CAACgB,SAAU,EAAC,CAAC;EAC3D,CAAC,CAAC,CACDM,EAAE,CAAC,OAAO,EAAGC,CAAC,IAAK;IAClBN,OAAO,CAACO,KAAK,CAACD,CAAC,CAACE,OAAO,CAAC;IACxB,MAAMF,CAAC;EACT,CAAC,CAAC;EAEJ,OAAO,MAAM;IACXN,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAE1CQ,MAAM,CAACC,GAAG,CAACC,MAAM,CAAC,UAAU,EAAE,MAAM;MAClCX,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9Cb,MAAM,CAACwB,cAAc,CAAC,SAAS,EAAEhB,UAAU,CAAC;MAC5C,MAAMiB,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC,CAACC,OAAO,CAAC,CAAC;MAC5C3B,MAAM,CAACiB,EAAE,CAAC,SAAS,EAAEQ,MAAM,CAAC;MAC5BjB,UAAU,GAAGiB,MAAM;IACrB,CAAC,CAAC;EACJ,CAAC;AACH,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}