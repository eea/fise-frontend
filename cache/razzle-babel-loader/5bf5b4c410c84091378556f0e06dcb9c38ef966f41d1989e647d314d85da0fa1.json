{"ast":null,"code":"import _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { Editor, Range } from 'slate'; // Range,\nimport { MENTION } from './constants';\nexport var getMentionWidget = function getMentionWidget(id, schema) {\n  if (id === 'subjects') {\n    return 'tags';\n  }\n  if ((schema === null || schema === void 0 ? void 0 : schema.factory) === 'Choice') {\n    return 'choices';\n  }\n  if ((schema === null || schema === void 0 ? void 0 : schema.factory) === 'Relation Choice') {\n    return 'relation';\n  }\n  if ((schema === null || schema === void 0 ? void 0 : schema.factory) === 'Relation List') {\n    return 'relations';\n  }\n  if ((schema === null || schema === void 0 ? void 0 : schema.factory) === 'Image') {\n    return 'image';\n  }\n  if ((schema === null || schema === void 0 ? void 0 : schema.factory) === 'File') {\n    return 'file';\n  }\n  return (schema === null || schema === void 0 ? void 0 : schema.widget) || (schema === null || schema === void 0 ? void 0 : schema.type) || id;\n};\nexport function isCursorInMention(editor) {\n  // TODO: this function is not that great. Better use getActiveMention instead\n  var result = Editor.above(editor, {\n    match: function match(n) {\n      return n.type === MENTION;\n    }\n  });\n  if (!result) {\n    return false;\n  }\n  var _result = _slicedToArray(result, 1),\n    mentionWithSelection = _result[0];\n\n  // whether the selection is inside a mention\n  var mentionCase = Range.isCollapsed(editor.selection) && mentionWithSelection;\n  return mentionCase;\n}","map":{"version":3,"names":["Editor","Range","MENTION","getMentionWidget","id","schema","factory","widget","type","isCursorInMention","editor","result","above","match","n","mentionWithSelection","mentionCase","isCollapsed","selection"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate-metadata-mentions/src/plugins/Mentions/utils.js"],"sourcesContent":["import { Editor, Range } from 'slate'; // Range,\nimport { MENTION } from './constants';\n\nexport const getMentionWidget = (id, schema) => {\n  if (id === 'subjects') {\n    return 'tags';\n  }\n  if (schema?.factory === 'Choice') {\n    return 'choices';\n  }\n  if (schema?.factory === 'Relation Choice') {\n    return 'relation';\n  }\n  if (schema?.factory === 'Relation List') {\n    return 'relations';\n  }\n  if (schema?.factory === 'Image') {\n    return 'image';\n  }\n  if (schema?.factory === 'File') {\n    return 'file';\n  }\n  return schema?.widget || schema?.type || id;\n};\n\nexport function isCursorInMention(editor) {\n  // TODO: this function is not that great. Better use getActiveMention instead\n  const result = Editor.above(editor, {\n    match: (n) => n.type === MENTION,\n  });\n\n  if (!result) {\n    return false;\n  }\n\n  const [mentionWithSelection] = result;\n\n  // whether the selection is inside a mention\n  const mentionCase =\n    Range.isCollapsed(editor.selection) && mentionWithSelection;\n\n  return mentionCase;\n}\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,KAAK,QAAQ,OAAO,CAAC,CAAC;AACvC,SAASC,OAAO,QAAQ,aAAa;AAErC,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,EAAE,EAAEC,MAAM,EAAK;EAC9C,IAAID,EAAE,KAAK,UAAU,EAAE;IACrB,OAAO,MAAM;EACf;EACA,IAAI,CAAAC,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,OAAO,MAAK,QAAQ,EAAE;IAChC,OAAO,SAAS;EAClB;EACA,IAAI,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,OAAO,MAAK,iBAAiB,EAAE;IACzC,OAAO,UAAU;EACnB;EACA,IAAI,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,OAAO,MAAK,eAAe,EAAE;IACvC,OAAO,WAAW;EACpB;EACA,IAAI,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,OAAO,MAAK,OAAO,EAAE;IAC/B,OAAO,OAAO;EAChB;EACA,IAAI,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,OAAO,MAAK,MAAM,EAAE;IAC9B,OAAO,MAAM;EACf;EACA,OAAO,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,MAAM,MAAIF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,IAAI,KAAIJ,EAAE;AAC7C,CAAC;AAED,OAAO,SAASK,iBAAiB,CAACC,MAAM,EAAE;EACxC;EACA,IAAMC,MAAM,GAAGX,MAAM,CAACY,KAAK,CAACF,MAAM,EAAE;IAClCG,KAAK,EAAE,eAACC,CAAC;MAAA,OAAKA,CAAC,CAACN,IAAI,KAAKN,OAAO;IAAA;EAClC,CAAC,CAAC;EAEF,IAAI,CAACS,MAAM,EAAE;IACX,OAAO,KAAK;EACd;EAEA,6BAA+BA,MAAM;IAA9BI,oBAAoB;;EAE3B;EACA,IAAMC,WAAW,GACff,KAAK,CAACgB,WAAW,CAACP,MAAM,CAACQ,SAAS,CAAC,IAAIH,oBAAoB;EAE7D,OAAOC,WAAW;AACpB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}