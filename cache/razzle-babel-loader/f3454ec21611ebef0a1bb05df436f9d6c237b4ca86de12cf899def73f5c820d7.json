{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _isEqual from \"lodash/isEqual\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-slate-metadata-mentions/src/plugins/Mentions/MentionEditor.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\n// import { useFormStateContext } from '@plone/volto/components/manage/Form/FormContext';\nimport { Icon as VoltoIcon, InlineForm } from '@plone/volto/components';\nimport briefcaseSVG from '@plone/volto/icons/briefcase.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ReactEditor } from 'slate-react';\nimport { setPluginOptions } from '@plone/volto-slate/actions';\nimport { MentionSchema } from './schema';\nimport { getMentionWidget } from './utils';\nexport default _s(function (props) {\n  var _elementNode$data, _elementNode$data2;\n  _s();\n  var editor = props.editor,\n    pluginId = props.pluginId,\n    getActiveElement = props.getActiveElement,\n    isActiveElement = props.isActiveElement,\n    insertElement = props.insertElement,\n    unwrapElement = props.unwrapElement,\n    hasValue = props.hasValue;\n\n  // Get Object metadata from global state\n  var properties = useSelector(function (state) {\n    var _state$schema, _state$schema$schema;\n    return (state === null || state === void 0 ? void 0 : (_state$schema = state.schema) === null || _state$schema === void 0 ? void 0 : (_state$schema$schema = _state$schema.schema) === null || _state$schema$schema === void 0 ? void 0 : _state$schema$schema.properties) || {};\n  });\n  var pid = \"\".concat(editor.uid, \"-\").concat(pluginId);\n\n  // Get formData\n  // const context = useFormStateContext();\n  // const { contextData, setContextData } = context;\n  // const metaData = contextData.formData;\n  var metaData = editor.getBlockProps ? editor.getBlockProps().metadata || editor.getBlockProps().properties : {};\n  var dispatch = useDispatch();\n  var _React$useState = React.useState({}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    formData = _React$useState2[0],\n    setFormData = _React$useState2[1];\n  var _React$useState3 = React.useState(MentionSchema),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    editSchema = _React$useState4[0],\n    setEditSchema = _React$useState4[1];\n  var active = getActiveElement(editor);\n  var _active = _slicedToArray(active, 1),\n    elementNode = _active[0];\n  var isElement = isActiveElement(editor);\n  var id = (elementNode === null || elementNode === void 0 ? void 0 : (_elementNode$data = elementNode.data) === null || _elementNode$data === void 0 ? void 0 : _elementNode$data.metadata) || (elementNode === null || elementNode === void 0 ? void 0 : (_elementNode$data2 = elementNode.data) === null || _elementNode$data2 === void 0 ? void 0 : _elementNode$data2.id);\n\n  // Update the form data based on the current footnote\n  var elRef = React.useRef(null);\n  if (isElement && !_isEqual(elementNode, elRef.current)) {\n    elRef.current = elementNode;\n    var data = elementNode.data ? _objectSpread(_objectSpread({}, elementNode.data), {}, _defineProperty({}, id, metaData === null || metaData === void 0 ? void 0 : metaData[id])) : {};\n    setFormData(data);\n  } else if (!isElement) {\n    elRef.current = null;\n  }\n  var saveDataToEditor = React.useCallback(function (formData) {\n    var _ref = editor.getBlockProps ? editor.getBlockProps() : {},\n      onChangeField = _ref.onChangeField; // TODO: provide fake block props in volto-slate. onChangeField is onChange\n    if (hasValue(formData)) {\n      // hasValue(formData) = !!formData.footnote\n      insertElement(editor, {\n        metadata: formData === null || formData === void 0 ? void 0 : formData.metadata,\n        widget: formData === null || formData === void 0 ? void 0 : formData.widget\n      });\n\n      // Update document metadata\n      onChangeField && onChangeField(formData === null || formData === void 0 ? void 0 : formData.metadata, formData === null || formData === void 0 ? void 0 : formData[formData === null || formData === void 0 ? void 0 : formData.metadata]);\n    } else {\n      unwrapElement(editor);\n    }\n  }, [editor, insertElement, unwrapElement, hasValue\n  // setContextData,\n  // contextData,\n  // metaData,\n  ]);\n\n  var updateSchema = React.useCallback(function (metaId) {\n    var extendedFields = metaId ? [metaId] : [];\n    var extendedProperties = metaId ? _defineProperty({}, metaId, properties[metaId]) : {};\n    setEditSchema(_objectSpread(_objectSpread({}, MentionSchema), {}, {\n      fieldsets: [].concat(_toConsumableArray(MentionSchema.fieldsets), [{\n        id: 'metadata',\n        title: 'Metadata value',\n        fields: extendedFields\n      }]),\n      properties: _objectSpread(_objectSpread({}, MentionSchema.properties), {}, {\n        metadata: _objectSpread(_objectSpread({}, MentionSchema.properties.metadata), {}, {\n          choices: Object.keys(properties).map(function (key) {\n            var val = properties[key];\n            return [key, (val === null || val === void 0 ? void 0 : val.title) || key];\n          }).filter(function (val) {\n            return !!val;\n          })\n        })\n      }, extendedProperties)\n    }));\n  }, [properties]);\n  React.useEffect(function () {\n    var metaId = id;\n    updateSchema(metaId);\n  }, [updateSchema, id]);\n  var onChangeValues = React.useCallback(function (id, value) {\n    var metaData = editor.getBlockProps ? editor.getBlockProps().metadata || editor.getBlockProps().properties : {};\n    if (id === 'metadata') {\n      var _objectSpread3;\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, id, value), _defineProperty(_objectSpread3, \"widget\", getMentionWidget(value, properties[value])), _defineProperty(_objectSpread3, value, metaData === null || metaData === void 0 ? void 0 : metaData[value]), _objectSpread3)));\n      updateSchema(value);\n    } else {\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, id, value)));\n    }\n  }, [editor, properties, updateSchema, formData]);\n  var checkForCancel = function checkForCancel() {\n    if (!id) {\n      unwrapElement(editor);\n    }\n  };\n  return __jsx(InlineForm, {\n    schema: editSchema,\n    title: editSchema.title,\n    icon: __jsx(VoltoIcon, {\n      size: \"24px\",\n      name: briefcaseSVG,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }),\n    onChangeField: function onChangeField(id, value) {\n      onChangeValues(id, value);\n    },\n    formData: formData,\n    headerActions: __jsx(React.Fragment, null, __jsx(\"button\", {\n      onClick: function onClick() {\n        saveDataToEditor(formData);\n        dispatch(setPluginOptions(pid, {\n          show_sidebar_editor: false\n        }));\n        ReactEditor.focus(editor);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, __jsx(VoltoIcon, {\n      size: \"24px\",\n      name: checkSVG,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    })), __jsx(\"button\", {\n      onClick: function onClick() {\n        checkForCancel();\n        dispatch(setPluginOptions(pid, {\n          show_sidebar_editor: false\n        }));\n        setFormData({});\n        ReactEditor.focus(editor);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, __jsx(VoltoIcon, {\n      size: \"24px\",\n      name: clearSVG,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  });\n}, \"DH6569MR/LfHmXfjOoHieRvrBeA=\", false, function () {\n  return [useSelector, useDispatch];\n});","map":{"version":3,"names":["Icon","VoltoIcon","InlineForm","briefcaseSVG","checkSVG","clearSVG","React","useDispatch","useSelector","ReactEditor","setPluginOptions","MentionSchema","getMentionWidget","props","editor","pluginId","getActiveElement","isActiveElement","insertElement","unwrapElement","hasValue","properties","state","schema","pid","uid","metaData","getBlockProps","metadata","dispatch","useState","formData","setFormData","editSchema","setEditSchema","active","elementNode","isElement","id","data","elRef","useRef","current","saveDataToEditor","useCallback","onChangeField","widget","updateSchema","metaId","extendedFields","extendedProperties","fieldsets","title","fields","choices","Object","keys","map","key","val","filter","useEffect","onChangeValues","value","checkForCancel","show_sidebar_editor","focus"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate-metadata-mentions/src/plugins/Mentions/MentionEditor.jsx"],"sourcesContent":["// import { useFormStateContext } from '@plone/volto/components/manage/Form/FormContext';\nimport { Icon as VoltoIcon, InlineForm } from '@plone/volto/components';\nimport briefcaseSVG from '@plone/volto/icons/briefcase.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport { isEqual } from 'lodash';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ReactEditor } from 'slate-react';\nimport { setPluginOptions } from '@plone/volto-slate/actions';\nimport { MentionSchema } from './schema';\nimport { getMentionWidget } from './utils';\n\nexport default (props) => {\n  const {\n    editor,\n    pluginId,\n    getActiveElement,\n    isActiveElement,\n    insertElement,\n    unwrapElement,\n    hasValue,\n  } = props;\n\n  // Get Object metadata from global state\n  const properties = useSelector(\n    (state) => state?.schema?.schema?.properties || {},\n  );\n\n  const pid = `${editor.uid}-${pluginId}`;\n\n  // Get formData\n  // const context = useFormStateContext();\n  // const { contextData, setContextData } = context;\n  // const metaData = contextData.formData;\n  const metaData = editor.getBlockProps\n    ? editor.getBlockProps().metadata || editor.getBlockProps().properties\n    : {};\n\n  const dispatch = useDispatch();\n  const [formData, setFormData] = React.useState({});\n  const [editSchema, setEditSchema] = React.useState(MentionSchema);\n\n  const active = getActiveElement(editor);\n  const [elementNode] = active;\n  const isElement = isActiveElement(editor);\n  const id = elementNode?.data?.metadata || elementNode?.data?.id;\n\n  // Update the form data based on the current footnote\n  const elRef = React.useRef(null);\n\n  if (isElement && !isEqual(elementNode, elRef.current)) {\n    elRef.current = elementNode;\n    const data = elementNode.data\n      ? {\n          ...elementNode.data,\n          [id]: metaData?.[id],\n        }\n      : {};\n    setFormData(data);\n  } else if (!isElement) {\n    elRef.current = null;\n  }\n\n  const saveDataToEditor = React.useCallback(\n    (formData) => {\n      const { onChangeField } = editor.getBlockProps\n        ? editor.getBlockProps()\n        : {}; // TODO: provide fake block props in volto-slate. onChangeField is onChange\n      if (hasValue(formData)) {\n        // hasValue(formData) = !!formData.footnote\n        insertElement(editor, {\n          metadata: formData?.metadata,\n          widget: formData?.widget,\n        });\n\n        // Update document metadata\n        onChangeField &&\n          onChangeField(formData?.metadata, formData?.[formData?.metadata]);\n      } else {\n        unwrapElement(editor);\n      }\n    },\n    [\n      editor,\n      insertElement,\n      unwrapElement,\n      hasValue,\n      // setContextData,\n      // contextData,\n      // metaData,\n    ],\n  );\n\n  const updateSchema = React.useCallback(\n    (metaId) => {\n      const extendedFields = metaId ? [metaId] : [];\n      const extendedProperties = metaId ? { [metaId]: properties[metaId] } : {};\n\n      setEditSchema({\n        ...MentionSchema,\n        fieldsets: [\n          ...MentionSchema.fieldsets,\n          {\n            id: 'metadata',\n            title: 'Metadata value',\n            fields: extendedFields,\n          },\n        ],\n        properties: {\n          ...MentionSchema.properties,\n          metadata: {\n            ...MentionSchema.properties.metadata,\n            choices: Object.keys(properties)\n              .map((key) => {\n                const val = properties[key];\n                return [key, val?.title || key];\n              })\n              .filter((val) => !!val),\n          },\n          ...extendedProperties,\n        },\n      });\n    },\n    [properties],\n  );\n\n  React.useEffect(() => {\n    const metaId = id;\n    updateSchema(metaId);\n  }, [updateSchema, id]);\n\n  const onChangeValues = React.useCallback(\n    (id, value) => {\n      const metaData = editor.getBlockProps\n        ? editor.getBlockProps().metadata || editor.getBlockProps().properties\n        : {};\n      if (id === 'metadata') {\n        setFormData({\n          ...formData,\n          [id]: value,\n          widget: getMentionWidget(value, properties[value]),\n          [value]: metaData?.[value],\n        });\n        updateSchema(value);\n      } else {\n        setFormData({\n          ...formData,\n          [id]: value,\n        });\n      }\n    },\n    [editor, properties, updateSchema, formData],\n  );\n\n  const checkForCancel = () => {\n    if (!id) {\n      unwrapElement(editor);\n    }\n  };\n\n  return (\n    <InlineForm\n      schema={editSchema}\n      title={editSchema.title}\n      icon={<VoltoIcon size=\"24px\" name={briefcaseSVG} />}\n      onChangeField={(id, value) => {\n        onChangeValues(id, value);\n      }}\n      formData={formData}\n      headerActions={\n        <>\n          <button\n            onClick={() => {\n              saveDataToEditor(formData);\n              dispatch(setPluginOptions(pid, { show_sidebar_editor: false }));\n              ReactEditor.focus(editor);\n            }}\n          >\n            <VoltoIcon size=\"24px\" name={checkSVG} />\n          </button>\n          <button\n            onClick={() => {\n              checkForCancel();\n              dispatch(setPluginOptions(pid, { show_sidebar_editor: false }));\n              setFormData({});\n              ReactEditor.focus(editor);\n            }}\n          >\n            <VoltoIcon size=\"24px\" name={clearSVG} />\n          </button>\n        </>\n      }\n    />\n  );\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}