{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport codeSVG from '@plone/volto/icons/blog-entry.svg';\nimport FootnotesBlockView from './Blocks/Footnote/FootnotesBlockView';\nimport FootnotesBlockEdit from './Blocks/Footnote/FootnotesBlockEdit';\nimport FootnotesBlockSchema from './Blocks/Footnote/FootnotesBlockSchema';\nimport { FOOTNOTE } from './constants';\nimport installFootnoteEditor from './editor';\nimport SearchWidget from '@eeacms/volto-slate-footnote/editor/MultiSelectSearchWidget';\n\n/**\n * @summary Called from Volto to configure new or existing Volto block types.\n * @param {object} config The object received from Volto containing the\n * configuration for all the blocks.\n */\nexport default function install(config) {\n  config.blocks.blocksConfig.slateFootnotes = {\n    id: 'slateFootnotes',\n    title: 'Footnotes',\n    icon: codeSVG,\n    group: 'text',\n    view: FootnotesBlockView,\n    edit: FootnotesBlockEdit,\n    schema: FootnotesBlockSchema,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: false,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: []\n    },\n    autoAdd: false\n  };\n  config.settings.footnotes = [...(config.settings.footnotes || []), FOOTNOTE];\n  config.widgets.widget.searchInput = SearchWidget;\n  config = installFootnoteEditor(config);\n\n  // Some blocks may have multiple slate fields,\n  // thus provide these fields per block type in order to lookup for footnotes:\n  //\n  //      'my-custom-block-type': ['value', 'field1', 'field2']\n  //\n  config.settings.blocksWithFootnotesSupport = _objectSpread(_objectSpread({}, config.settings.blocksWithFootnotesSupport || {}), {}, {\n    slate: ['value']\n  });\n  return config;\n}","map":{"version":3,"names":["codeSVG","FootnotesBlockView","FootnotesBlockEdit","FootnotesBlockSchema","FOOTNOTE","installFootnoteEditor","SearchWidget","install","config","blocks","blocksConfig","slateFootnotes","id","title","icon","group","view","edit","schema","restricted","mostUsed","blockHasOwnFocusManagement","sidebarTab","security","addPermission","autoAdd","settings","footnotes","widgets","widget","searchInput","blocksWithFootnotesSupport","slate"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate-footnote/src/index.js"],"sourcesContent":["import codeSVG from '@plone/volto/icons/blog-entry.svg';\n\nimport FootnotesBlockView from './Blocks/Footnote/FootnotesBlockView';\nimport FootnotesBlockEdit from './Blocks/Footnote/FootnotesBlockEdit';\nimport FootnotesBlockSchema from './Blocks/Footnote/FootnotesBlockSchema';\nimport { FOOTNOTE } from './constants';\nimport installFootnoteEditor from './editor';\nimport SearchWidget from '@eeacms/volto-slate-footnote/editor/MultiSelectSearchWidget';\n\n/**\n * @summary Called from Volto to configure new or existing Volto block types.\n * @param {object} config The object received from Volto containing the\n * configuration for all the blocks.\n */\nexport default function install(config) {\n  config.blocks.blocksConfig.slateFootnotes = {\n    id: 'slateFootnotes',\n    title: 'Footnotes',\n    icon: codeSVG,\n    group: 'text',\n    view: FootnotesBlockView,\n    edit: FootnotesBlockEdit,\n    schema: FootnotesBlockSchema,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: false,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n    autoAdd: false,\n  };\n\n  config.settings.footnotes = [...(config.settings.footnotes || []), FOOTNOTE];\n  config.widgets.widget.searchInput = SearchWidget;\n  config = installFootnoteEditor(config);\n\n  // Some blocks may have multiple slate fields,\n  // thus provide these fields per block type in order to lookup for footnotes:\n  //\n  //      'my-custom-block-type': ['value', 'field1', 'field2']\n  //\n  config.settings.blocksWithFootnotesSupport = {\n    ...(config.settings.blocksWithFootnotesSupport || {}),\n    slate: ['value'],\n  };\n\n  return config;\n}\n"],"mappings":";;;AAAA,OAAOA,OAAO,MAAM,mCAAmC;AAEvD,OAAOC,kBAAkB,MAAM,sCAAsC;AACrE,OAAOC,kBAAkB,MAAM,sCAAsC;AACrE,OAAOC,oBAAoB,MAAM,wCAAwC;AACzE,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,qBAAqB,MAAM,UAAU;AAC5C,OAAOC,YAAY,MAAM,6DAA6D;;AAEtF;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,OAAO,CAACC,MAAM,EAAE;EACtCA,MAAM,CAACC,MAAM,CAACC,YAAY,CAACC,cAAc,GAAG;IAC1CC,EAAE,EAAE,gBAAgB;IACpBC,KAAK,EAAE,WAAW;IAClBC,IAAI,EAAEd,OAAO;IACbe,KAAK,EAAE,MAAM;IACbC,IAAI,EAAEf,kBAAkB;IACxBgB,IAAI,EAAEf,kBAAkB;IACxBgB,MAAM,EAAEf,oBAAoB;IAC5BgB,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,KAAK;IACfC,0BAA0B,EAAE,KAAK;IACjCC,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE;MACRC,aAAa,EAAE,EAAE;MACjBR,IAAI,EAAE;IACR,CAAC;IACDS,OAAO,EAAE;EACX,CAAC;EAEDjB,MAAM,CAACkB,QAAQ,CAACC,SAAS,GAAG,CAAC,IAAInB,MAAM,CAACkB,QAAQ,CAACC,SAAS,IAAI,EAAE,CAAC,EAAEvB,QAAQ,CAAC;EAC5EI,MAAM,CAACoB,OAAO,CAACC,MAAM,CAACC,WAAW,GAAGxB,YAAY;EAChDE,MAAM,GAAGH,qBAAqB,CAACG,MAAM,CAAC;;EAEtC;EACA;EACA;EACA;EACA;EACAA,MAAM,CAACkB,QAAQ,CAACK,0BAA0B,mCACpCvB,MAAM,CAACkB,QAAQ,CAACK,0BAA0B,IAAI,CAAC,CAAC;IACpDC,KAAK,EAAE,CAAC,OAAO;EAAC,EACjB;EAED,OAAOxB,MAAM;AACf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}