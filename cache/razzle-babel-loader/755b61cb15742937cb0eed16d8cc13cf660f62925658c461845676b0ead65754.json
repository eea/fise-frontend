{"ast":null,"code":"import _map from \"lodash/map\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport { GET_BREADCRUMBS } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  error: null,\n  items: [],\n  root: null,\n  loaded: false,\n  loading: false\n};\n\n/**\n * Breadcrumbs reducer.\n * @function breadcrumbs\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function breadcrumbs(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_BREADCRUMBS}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case `${GET_BREADCRUMBS}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        items: _map(action.result.items, item => ({\n          title: item.title,\n          url: flattenToAppURL(item['@id'])\n        })),\n        root: flattenToAppURL(action.result.root),\n        loaded: true,\n        loading: false\n      });\n    case `${GET_BREADCRUMBS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        items: [],\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["flattenToAppURL","GET_BREADCRUMBS","initialState","error","items","root","loaded","loading","breadcrumbs","state","action","type","result","item","title","url"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/breadcrumbs/breadcrumbs.js"],"sourcesContent":["/**\n * Breadcrumbs reducer.\n * @module reducers/breadcrumbs/breadcrumbs\n */\n\nimport { map } from 'lodash';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport { GET_BREADCRUMBS } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  items: [],\n  root: null,\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Breadcrumbs reducer.\n * @function breadcrumbs\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function breadcrumbs(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_BREADCRUMBS}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${GET_BREADCRUMBS}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        items: map(action.result.items, (item) => ({\n          title: item.title,\n          url: flattenToAppURL(item['@id']),\n        })),\n        root: flattenToAppURL(action.result.root),\n        loaded: true,\n        loading: false,\n      };\n    case `${GET_BREADCRUMBS}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        items: [],\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;;AAMA,SAASA,eAAe,QAAQ,sBAAsB;AAEtD,SAASC,eAAe,QAAQ,oCAAoC;AAEpE,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,IAAI;EACVC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,WAAW,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,GAAG,CAAC,CAAC,EAAE;EACrE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAM,GAAEV,eAAgB,UAAS;MAC/B,uCACKQ,KAAK;QACRN,KAAK,EAAE,IAAI;QACXG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAEjB,KAAM,GAAEN,eAAgB,UAAS;MAC/B,uCACKQ,KAAK;QACRN,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE,KAAIM,MAAM,CAACE,MAAM,CAACR,KAAK,EAAGS,IAAI,KAAM;UACzCC,KAAK,EAAED,IAAI,CAACC,KAAK;UACjBC,GAAG,EAAEf,eAAe,CAACa,IAAI,CAAC,KAAK,CAAC;QAClC,CAAC,CAAC,CAAC;QACHR,IAAI,EAAEL,eAAe,CAACU,MAAM,CAACE,MAAM,CAACP,IAAI,CAAC;QACzCC,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MAAK;IAElB,KAAM,GAAEN,eAAgB,OAAM;MAC5B,uCACKQ,KAAK;QACRN,KAAK,EAAEO,MAAM,CAACP,KAAK;QACnBC,KAAK,EAAE,EAAE;QACTE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAK;IAElB;MACE,OAAOE,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}