{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/manage/Blocks/DataQueryFilter/Edit.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { compose } from 'redux';\nimport { SidebarPortal } from '@plone/volto/components'; // EditBlock\n\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport View from './View';\nimport schema from './schema';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { connectToProviderDataUnfiltered } from '@eeacms/volto-datablocks/hocs';\nvar Edit = function Edit(props) {\n  _s();\n  var selected = props.selected,\n    data = props.data,\n    block = props.block,\n    onChangeBlock = props.onChangeBlock,\n    provider_data = props.provider_data;\n  var provider_url = data.provider_url,\n    select_field = data.select_field;\n  var getSchema = React.useCallback(function (schema) {\n    var newSchema = cloneDeep(schema);\n    if (provider_data) {\n      newSchema.properties.select_field.choices = Object.keys(provider_data).map(function (name) {\n        return [name, name];\n      });\n    }\n    return newSchema;\n  }, [provider_data]);\n  React.useEffect(function () {\n    onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n      options: provider_url && select_field && provider_data ? _toConsumableArray(new Set(provider_data[select_field])).map(function (value) {\n        return {\n          value: value,\n          label: value\n        };\n      }) : null\n    }));\n\n    /* eslint-disable-next-line */\n  }, [provider_data, provider_url, select_field]);\n  return __jsx(React.Fragment, null, __jsx(View, _extends({}, props, {\n    mode: \"edit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  })), __jsx(SidebarPortal, {\n    selected: selected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(InlineForm, {\n    schema: getSchema(schema),\n    title: schema.title,\n    onChangeField: function onChangeField(id, value) {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, _defineProperty({}, id, value)));\n    },\n    formData: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })));\n};\n_s(Edit, \"tdlfrU0f40KComsD1e0HjRVfYts=\");\n_c = Edit;\nexport default compose(connectToProviderDataUnfiltered(function (props) {\n  return {\n    provider_url: props.data.provider_url\n  };\n}))(Edit);\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","compose","SidebarPortal","InlineForm","View","schema","cloneDeep","connectToProviderDataUnfiltered","Edit","props","selected","data","block","onChangeBlock","provider_data","provider_url","select_field","getSchema","useCallback","newSchema","properties","choices","Object","keys","map","name","useEffect","options","Set","value","label","title","id"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/manage/Blocks/DataQueryFilter/Edit.jsx"],"sourcesContent":["import React from 'react';\nimport { compose } from 'redux';\nimport { SidebarPortal } from '@plone/volto/components'; // EditBlock\n\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport View from './View';\n\nimport schema from './schema';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { connectToProviderDataUnfiltered } from '@eeacms/volto-datablocks/hocs';\n\nconst Edit = (props) => {\n  const { selected, data, block, onChangeBlock, provider_data } = props;\n  const { provider_url, select_field } = data;\n\n  const getSchema = React.useCallback(\n    (schema) => {\n      const newSchema = cloneDeep(schema);\n      if (provider_data) {\n        newSchema.properties.select_field.choices = Object.keys(\n          provider_data,\n        ).map((name) => [name, name]);\n      }\n      return newSchema;\n    },\n    [provider_data],\n  );\n\n  React.useEffect(() => {\n    onChangeBlock(block, {\n      ...data,\n      options:\n        provider_url && select_field && provider_data\n          ? [...new Set(provider_data[select_field])].map((value) => ({\n              value,\n              label: value,\n            }))\n          : null,\n    });\n\n    /* eslint-disable-next-line */\n  }, [provider_data, provider_url, select_field]);\n\n  return (\n    <>\n      <View {...props} mode=\"edit\" />\n\n      <SidebarPortal selected={selected}>\n        <InlineForm\n          schema={getSchema(schema)}\n          title={schema.title}\n          onChangeField={(id, value) => {\n            onChangeBlock(block, {\n              ...data,\n              [id]: value,\n            });\n          }}\n          formData={data}\n        />\n      </SidebarPortal>\n    </>\n  );\n};\n\nexport default compose(\n  connectToProviderDataUnfiltered((props) => ({\n    provider_url: props.data.provider_url,\n  })),\n)(Edit);\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,aAAa,QAAQ,yBAAyB,CAAC,CAAC;;AAEzD,OAAOC,UAAU,MAAM,gDAAgD;AACvE,OAAOC,IAAI,MAAM,QAAQ;AAEzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,SAAS,MAAM,kBAAkB;AACxC,SAASC,+BAA+B,QAAQ,+BAA+B;AAE/E,IAAMC,IAAI,GAAG,SAAPA,IAAI,CAAIC,KAAK,EAAK;EAAA;EACtB,IAAQC,QAAQ,GAAgDD,KAAK,CAA7DC,QAAQ;IAAEC,IAAI,GAA0CF,KAAK,CAAnDE,IAAI;IAAEC,KAAK,GAAmCH,KAAK,CAA7CG,KAAK;IAAEC,aAAa,GAAoBJ,KAAK,CAAtCI,aAAa;IAAEC,aAAa,GAAKL,KAAK,CAAvBK,aAAa;EAC3D,IAAQC,YAAY,GAAmBJ,IAAI,CAAnCI,YAAY;IAAEC,YAAY,GAAKL,IAAI,CAArBK,YAAY;EAElC,IAAMC,SAAS,GAAGjB,KAAK,CAACkB,WAAW,CACjC,UAACb,MAAM,EAAK;IACV,IAAMc,SAAS,GAAGb,SAAS,CAACD,MAAM,CAAC;IACnC,IAAIS,aAAa,EAAE;MACjBK,SAAS,CAACC,UAAU,CAACJ,YAAY,CAACK,OAAO,GAAGC,MAAM,CAACC,IAAI,CACrDT,aAAa,CACd,CAACU,GAAG,CAAC,UAACC,IAAI;QAAA,OAAK,CAACA,IAAI,EAAEA,IAAI,CAAC;MAAA,EAAC;IAC/B;IACA,OAAON,SAAS;EAClB,CAAC,EACD,CAACL,aAAa,CAAC,CAChB;EAEDd,KAAK,CAAC0B,SAAS,CAAC,YAAM;IACpBb,aAAa,CAACD,KAAK,kCACdD,IAAI;MACPgB,OAAO,EACLZ,YAAY,IAAIC,YAAY,IAAIF,aAAa,GACzC,mBAAI,IAAIc,GAAG,CAACd,aAAa,CAACE,YAAY,CAAC,CAAC,EAAEQ,GAAG,CAAC,UAACK,KAAK;QAAA,OAAM;UACxDA,KAAK,EAALA,KAAK;UACLC,KAAK,EAAED;QACT,CAAC;MAAA,CAAC,CAAC,GACH;IAAI,GACV;;IAEF;EACF,CAAC,EAAE,CAACf,aAAa,EAAEC,YAAY,EAAEC,YAAY,CAAC,CAAC;EAE/C,OACE,4BACE,MAAC,IAAI,eAAKP,KAAK;IAAE,IAAI,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,EAE/B,MAAC,aAAa;IAAC,QAAQ,EAAEC,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAChC,MAAC,UAAU;IACT,MAAM,EAAEO,SAAS,CAACZ,MAAM,CAAE;IAC1B,KAAK,EAAEA,MAAM,CAAC0B,KAAM;IACpB,aAAa,EAAE,uBAACC,EAAE,EAAEH,KAAK,EAAK;MAC5BhB,aAAa,CAACD,KAAK,kCACdD,IAAI,2BACNqB,EAAE,EAAGH,KAAK,GACX;IACJ,CAAE;IACF,QAAQ,EAAElB,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACf,CACY,CACf;AAEP,CAAC;AAAC,GAnDIH,IAAI;AAAA,KAAJA,IAAI;AAqDV,eAAeP,OAAO,CACpBM,+BAA+B,CAAC,UAACE,KAAK;EAAA,OAAM;IAC1CM,YAAY,EAAEN,KAAK,CAACE,IAAI,CAACI;EAC3B,CAAC;AAAA,CAAC,CAAC,CACJ,CAACP,IAAI,CAAC;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}