{"ast":null,"code":"import _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _map from \"lodash/map\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/WysiwygWidget.jsx\",\n  _this4 = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\n/**\n * WysiwygWidget container.\n * @module components/manage/WysiwygWidget/WysiwygWidget\n */\n\nimport React, { Component } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport PropTypes from 'prop-types';\nimport { connect, Provider } from 'react-redux';\nimport { compose } from 'redux';\nimport redraft from 'redraft';\nimport { Form, Label, TextArea } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport configureStore from 'redux-mock-store';\nimport { MemoryRouter } from 'react-router-dom';\nimport config from '@plone/volto/registry';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport loadable from '@loadable/component';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nvar Editor = loadable({\n  resolved: {},\n  chunkName: function chunkName() {\n    return \"draft-js-plugins-editor\";\n  },\n  isReady: function isReady(props) {\n    var key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: function importAsync() {\n    return import( /* webpackChunkName: \"draft-js-plugins-editor\" */'draft-js-plugins-editor');\n  },\n  requireAsync: function requireAsync(props) {\n    var _this = this;\n    var key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(function (resolved) {\n      _this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync: function requireSync(props) {\n    var id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve: function resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"draft-js-plugins-editor\");\n    }\n    return eval('require.resolve')(\"draft-js-plugins-editor\");\n  }\n});\n_c = Editor;\nvar messages = defineMessages({\n  \"default\": {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  idTitle: {\n    \"id\": \"Short Name\",\n    \"defaultMessage\": \"Short Name\"\n  },\n  idDescription: {\n    \"id\": \"Used for programmatic access to the fieldset.\",\n    \"defaultMessage\": \"Used for programmatic access to the fieldset.\"\n  },\n  title: {\n    \"id\": \"Title\",\n    \"defaultMessage\": \"Title\"\n  },\n  description: {\n    \"id\": \"Description\",\n    \"defaultMessage\": \"Description\"\n  },\n  required: {\n    \"id\": \"Required\",\n    \"defaultMessage\": \"Required\"\n  },\n  \"delete\": {\n    \"id\": \"Delete\",\n    \"defaultMessage\": \"Delete\"\n  }\n});\n\n/**\n * WysiwygWidget HTML richtext editing widget\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Rich text\",\n *  widget: 'richtext',\n * }\n * ```\n *\n */\nvar WysiwygWidgetComponent = /*#__PURE__*/function (_Component) {\n  _inherits(WysiwygWidgetComponent, _Component);\n  var _super = _createSuper(WysiwygWidgetComponent);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygWidget\n   */\n  function WysiwygWidgetComponent(props) {\n    var _this2;\n    _classCallCheck(this, WysiwygWidgetComponent);\n    _this2 = _super.call(this, props);\n    var stateFromHTML = props.draftJsImportHtml.stateFromHTML;\n    var EditorState = props.draftJs.EditorState;\n    var createInlineToolbarPlugin = props.draftJsInlineToolbarPlugin[\"default\"];\n    _this2.draftConfig = config.settings.richtextEditorSettings(props);\n    if (!__SERVER__) {\n      var editorState;\n      if (props.value && props.value.data) {\n        var contentState = stateFromHTML(props.value.data, {\n          customBlockFn: _this2.draftConfig.FromHTMLCustomBlockFn\n        });\n        editorState = EditorState.createWithContent(contentState);\n      } else {\n        editorState = EditorState.createEmpty();\n      }\n      var inlineToolbarPlugin = createInlineToolbarPlugin({\n        structure: _this2.draftConfig.richTextEditorInlineToolbarButtons\n      });\n      _this2.state = {\n        editorState: editorState,\n        inlineToolbarPlugin: inlineToolbarPlugin\n      };\n    }\n    _this2.schema = {\n      fieldsets: [{\n        id: 'default',\n        title: props.intl.formatMessage(messages[\"default\"]),\n        fields: ['title', 'id', 'description', 'required']\n      }],\n      properties: {\n        id: {\n          type: 'string',\n          title: props.intl.formatMessage(messages.idTitle),\n          description: props.intl.formatMessage(messages.idDescription)\n        },\n        title: {\n          type: 'string',\n          title: props.intl.formatMessage(messages.title)\n        },\n        description: {\n          type: 'string',\n          widget: 'textarea',\n          title: props.intl.formatMessage(messages.description)\n        },\n        required: {\n          type: 'boolean',\n          title: props.intl.formatMessage(messages.required)\n        }\n      },\n      required: ['id', 'title']\n    };\n    _this2.onChange = _this2.onChange.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  /**\n   * Change handler\n   * @method onChange\n   * @param {object} editorState Editor state.\n   * @returns {undefined}\n   */\n  _createClass(WysiwygWidgetComponent, [{\n    key: \"onChange\",\n    value: function onChange(editorState) {\n      var convertToRaw = this.props.draftJs.convertToRaw;\n      this.setState({\n        editorState: editorState\n      });\n      var mockStore = configureStore();\n      this.props.onChange(this.props.id, {\n        'content-type': this.props.value ? this.props.value['content-type'] : 'text/html',\n        encoding: this.props.value ? this.props.value.encoding : 'utf8',\n        data: ReactDOMServer.renderToStaticMarkup(__jsx(Provider, {\n          store: mockStore({\n            userSession: {\n              token: this.props.token\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 9\n          }\n        }, __jsx(MemoryRouter, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 11\n          }\n        }, redraft(convertToRaw(editorState.getCurrentContent()), config.settings.richtextViewSettings.ToHTMLRenderers, config.settings.richtextViewSettings.ToHTMLOptions))))\n      });\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _this$props = this.props,\n        id = _this$props.id,\n        title = _this$props.title,\n        description = _this$props.description,\n        required = _this$props.required,\n        value = _this$props.value,\n        error = _this$props.error,\n        fieldSet = _this$props.fieldSet;\n      if (__SERVER__) {\n        return __jsx(Form.Field, {\n          inline: true,\n          required: required,\n          error: error.length > 0,\n          className: description ? 'help' : '',\n          id: \"\".concat(fieldSet || 'field', \"-\").concat(id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 9\n          }\n        }, __jsx(\"div\", {\n          className: \"wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 11\n          }\n        }, __jsx(\"label\", {\n          htmlFor: \"field-\".concat(id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }\n        }, title), __jsx(TextArea, {\n          id: id,\n          name: id,\n          value: value ? value.data : '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }\n        }), description && __jsx(\"p\", {\n          className: \"help\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }\n        }, description), _map(error, function (message) {\n          return __jsx(Label, {\n            key: message,\n            basic: true,\n            color: \"red\",\n            pointing: true,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }\n          }, message);\n        })));\n      }\n      var InlineToolbar = this.state.inlineToolbarPlugin.InlineToolbar;\n      return __jsx(FormFieldWrapper, _extends({}, this.props, {\n        className: \"wysiwyg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 7\n        }\n      }), __jsx(\"div\", {\n        style: {\n          boxSizing: 'initial'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 9\n        }\n      }, this.props.onChange ? __jsx(React.Fragment, null, __jsx(Editor, {\n        id: \"field-\".concat(id),\n        readOnly: this.props.isDisabled,\n        onChange: this.onChange,\n        editorState: this.state.editorState,\n        plugins: [this.state.inlineToolbarPlugin].concat(_toConsumableArray(this.draftConfig.richTextEditorPlugins)),\n        placeholder: this.props.placeholder,\n        blockRenderMap: this.draftConfig.extendedBlockRenderMap,\n        blockStyleFn: this.draftConfig.blockStyleFn,\n        customStyleMap: this.draftConfig.customStyleMap,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }\n      }), this.props.onChange && __jsx(InlineToolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 39\n        }\n      })) : __jsx(\"div\", {\n        className: \"DraftEditor-root\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return WysiwygWidgetComponent;\n}(Component);\n_defineProperty(WysiwygWidgetComponent, \"propTypes\", {\n  /**\n   * Id of the field\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Title of the field\n   */\n  title: PropTypes.string.isRequired,\n  /**\n   * Description of the field\n   */\n  description: PropTypes.string,\n  /**\n   * True if field is required\n   */\n  required: PropTypes.bool,\n  /**\n   * Value of the field\n   */\n  value: PropTypes.shape({\n    /**\n     * Content type of the value\n     */\n    'content-type': PropTypes.string,\n    /**\n     * Data of the value\n     */\n    data: PropTypes.string,\n    /**\n     * Encoding of the value\n     */\n    encoding: PropTypes.string\n  }),\n  /**\n   * Placeholder for the editor\n   */\n  placeholder: PropTypes.string,\n  /**\n   * List of error messages\n   */\n  error: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * On change handler\n   */\n  onChange: PropTypes.func,\n  /**\n   * On delete handler\n   */\n  onDelete: PropTypes.func,\n  /**\n   * On edit handler\n   */\n  onEdit: PropTypes.func,\n  /**\n   * Wrapped form component\n   */\n  wrapped: PropTypes.bool\n});\n_defineProperty(WysiwygWidgetComponent, \"defaultProps\", {\n  description: null,\n  required: false,\n  value: {\n    'content-type': 'text/html',\n    data: '',\n    encoding: 'utf8'\n  },\n  error: [],\n  onEdit: null,\n  onDelete: null,\n  onChange: null\n});\nexport var WysiwygWidget = compose(injectIntl, injectLazyLibs(['draftJs', 'draftJsBlockBreakoutPlugin', 'draftJsCreateBlockStyleButton', 'draftJsCreateInlineStyleButton', 'draftJsFilters', 'draftJsImportHtml', 'draftJsInlineToolbarPlugin', 'draftJsLibIsSoftNewlineEvent', 'immutableLib']), connect(function (state, props) {\n  return {\n    token: state.userSession.token\n  };\n}, {}))(WysiwygWidgetComponent);\n_c2 = WysiwygWidget;\nvar Preloader = function Preloader(props) {\n  _s();\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    loaded = _React$useState2[0],\n    setLoaded = _React$useState2[1];\n  React.useEffect(function () {\n    Editor.load().then(function () {\n      return setLoaded(true);\n    });\n  }, []);\n  return loaded ? __jsx(WysiwygWidget, _extends({}, props, {\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 19\n    }\n  })) : null;\n};\n_s(Preloader, \"I8RUn14npbk54TheiKdNt4wCpsU=\");\n_c3 = Preloader;\nexport default Preloader;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Editor\");\n$RefreshReg$(_c2, \"WysiwygWidget\");\n$RefreshReg$(_c3, \"Preloader\");","map":{"version":3,"names":["React","Component","ReactDOMServer","PropTypes","connect","Provider","compose","redraft","Form","Label","TextArea","defineMessages","injectIntl","configureStore","MemoryRouter","config","FormFieldWrapper","loadable","injectLazyLibs","Editor","messages","idTitle","idDescription","title","description","required","WysiwygWidgetComponent","props","stateFromHTML","draftJsImportHtml","EditorState","draftJs","createInlineToolbarPlugin","draftJsInlineToolbarPlugin","draftConfig","settings","richtextEditorSettings","__SERVER__","editorState","value","data","contentState","customBlockFn","FromHTMLCustomBlockFn","createWithContent","createEmpty","inlineToolbarPlugin","structure","richTextEditorInlineToolbarButtons","state","schema","fieldsets","id","intl","formatMessage","fields","properties","type","widget","onChange","bind","convertToRaw","setState","mockStore","encoding","renderToStaticMarkup","userSession","token","getCurrentContent","richtextViewSettings","ToHTMLRenderers","ToHTMLOptions","error","fieldSet","length","message","InlineToolbar","boxSizing","isDisabled","richTextEditorPlugins","placeholder","extendedBlockRenderMap","blockStyleFn","customStyleMap","string","isRequired","bool","shape","arrayOf","func","onDelete","onEdit","wrapped","WysiwygWidget","Preloader","useState","loaded","setLoaded","useEffect","load","then"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/WysiwygWidget.jsx"],"sourcesContent":["/**\n * WysiwygWidget container.\n * @module components/manage/WysiwygWidget/WysiwygWidget\n */\n\nimport React, { Component } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport PropTypes from 'prop-types';\nimport { connect, Provider } from 'react-redux';\nimport { compose } from 'redux';\nimport redraft from 'redraft';\nimport { Form, Label, TextArea } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport configureStore from 'redux-mock-store';\nimport { MemoryRouter } from 'react-router-dom';\nimport config from '@plone/volto/registry';\n\nimport { FormFieldWrapper } from '@plone/volto/components';\n\nimport loadable from '@loadable/component';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nconst Editor = loadable(() => import('draft-js-plugins-editor'));\n\nconst messages = defineMessages({\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  idTitle: {\n    id: 'Short Name',\n    defaultMessage: 'Short Name',\n  },\n  idDescription: {\n    id: 'Used for programmatic access to the fieldset.',\n    defaultMessage: 'Used for programmatic access to the fieldset.',\n  },\n  title: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  description: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  required: {\n    id: 'Required',\n    defaultMessage: 'Required',\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n});\n\n/**\n * WysiwygWidget HTML richtext editing widget\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Rich text\",\n *  widget: 'richtext',\n * }\n * ```\n *\n */\nclass WysiwygWidgetComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    /**\n     * Id of the field\n     */\n    id: PropTypes.string.isRequired,\n    /**\n     * Title of the field\n     */\n    title: PropTypes.string.isRequired,\n    /**\n     * Description of the field\n     */\n    description: PropTypes.string,\n    /**\n     * True if field is required\n     */\n    required: PropTypes.bool,\n    /**\n     * Value of the field\n     */\n    value: PropTypes.shape({\n      /**\n       * Content type of the value\n       */\n      'content-type': PropTypes.string,\n      /**\n       * Data of the value\n       */\n      data: PropTypes.string,\n      /**\n       * Encoding of the value\n       */\n      encoding: PropTypes.string,\n    }),\n    /**\n     * Placeholder for the editor\n     */\n    placeholder: PropTypes.string,\n    /**\n     * List of error messages\n     */\n    error: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * On change handler\n     */\n    onChange: PropTypes.func,\n    /**\n     * On delete handler\n     */\n    onDelete: PropTypes.func,\n    /**\n     * On edit handler\n     */\n    onEdit: PropTypes.func,\n    /**\n     * Wrapped form component\n     */\n    wrapped: PropTypes.bool,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    value: {\n      'content-type': 'text/html',\n      data: '',\n      encoding: 'utf8',\n    },\n    error: [],\n    onEdit: null,\n    onDelete: null,\n    onChange: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygWidget\n   */\n  constructor(props) {\n    super(props);\n\n    const { stateFromHTML } = props.draftJsImportHtml;\n    const { EditorState } = props.draftJs;\n    const createInlineToolbarPlugin = props.draftJsInlineToolbarPlugin.default;\n\n    this.draftConfig = config.settings.richtextEditorSettings(props);\n\n    if (!__SERVER__) {\n      let editorState;\n      if (props.value && props.value.data) {\n        const contentState = stateFromHTML(props.value.data, {\n          customBlockFn: this.draftConfig.FromHTMLCustomBlockFn,\n        });\n        editorState = EditorState.createWithContent(contentState);\n      } else {\n        editorState = EditorState.createEmpty();\n      }\n\n      const inlineToolbarPlugin = createInlineToolbarPlugin({\n        structure: this.draftConfig.richTextEditorInlineToolbarButtons,\n      });\n\n      this.state = { editorState, inlineToolbarPlugin };\n    }\n\n    this.schema = {\n      fieldsets: [\n        {\n          id: 'default',\n          title: props.intl.formatMessage(messages.default),\n          fields: ['title', 'id', 'description', 'required'],\n        },\n      ],\n      properties: {\n        id: {\n          type: 'string',\n          title: props.intl.formatMessage(messages.idTitle),\n          description: props.intl.formatMessage(messages.idDescription),\n        },\n        title: {\n          type: 'string',\n          title: props.intl.formatMessage(messages.title),\n        },\n        description: {\n          type: 'string',\n          widget: 'textarea',\n          title: props.intl.formatMessage(messages.description),\n        },\n        required: {\n          type: 'boolean',\n          title: props.intl.formatMessage(messages.required),\n        },\n      },\n      required: ['id', 'title'],\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /**\n   * Change handler\n   * @method onChange\n   * @param {object} editorState Editor state.\n   * @returns {undefined}\n   */\n  onChange(editorState) {\n    const { convertToRaw } = this.props.draftJs;\n    this.setState({ editorState });\n    const mockStore = configureStore();\n\n    this.props.onChange(this.props.id, {\n      'content-type': this.props.value\n        ? this.props.value['content-type']\n        : 'text/html',\n      encoding: this.props.value ? this.props.value.encoding : 'utf8',\n      data: ReactDOMServer.renderToStaticMarkup(\n        <Provider\n          store={mockStore({\n            userSession: {\n              token: this.props.token,\n            },\n          })}\n        >\n          <MemoryRouter>\n            {redraft(\n              convertToRaw(editorState.getCurrentContent()),\n              config.settings.richtextViewSettings.ToHTMLRenderers,\n              config.settings.richtextViewSettings.ToHTMLOptions,\n            )}\n          </MemoryRouter>\n        </Provider>,\n      ),\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      title,\n      description,\n      required,\n      value,\n      error,\n      fieldSet,\n    } = this.props;\n\n    if (__SERVER__) {\n      return (\n        <Form.Field\n          inline\n          required={required}\n          error={error.length > 0}\n          className={description ? 'help' : ''}\n          id={`${fieldSet || 'field'}-${id}`}\n        >\n          <div className=\"wrapper\">\n            <label htmlFor={`field-${id}`}>{title}</label>\n            <TextArea id={id} name={id} value={value ? value.data : ''} />\n            {description && <p className=\"help\">{description}</p>}\n            {map(error, (message) => (\n              <Label key={message} basic color=\"red\" pointing>\n                {message}\n              </Label>\n            ))}\n          </div>\n        </Form.Field>\n      );\n    }\n    const { InlineToolbar } = this.state.inlineToolbarPlugin;\n\n    return (\n      <FormFieldWrapper {...this.props} className=\"wysiwyg\">\n        <div style={{ boxSizing: 'initial' }}>\n          {this.props.onChange ? (\n            <>\n              <Editor\n                id={`field-${id}`}\n                readOnly={this.props.isDisabled}\n                onChange={this.onChange}\n                editorState={this.state.editorState}\n                plugins={[\n                  this.state.inlineToolbarPlugin,\n                  ...this.draftConfig.richTextEditorPlugins,\n                ]}\n                placeholder={this.props.placeholder}\n                blockRenderMap={this.draftConfig.extendedBlockRenderMap}\n                blockStyleFn={this.draftConfig.blockStyleFn}\n                customStyleMap={this.draftConfig.customStyleMap}\n              />\n              {this.props.onChange && <InlineToolbar />}\n            </>\n          ) : (\n            <div className=\"DraftEditor-root\" />\n          )}\n        </div>\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport const WysiwygWidget = compose(\n  injectIntl,\n  injectLazyLibs([\n    'draftJs',\n    'draftJsBlockBreakoutPlugin',\n    'draftJsCreateBlockStyleButton',\n    'draftJsCreateInlineStyleButton',\n    'draftJsFilters',\n    'draftJsImportHtml',\n    'draftJsInlineToolbarPlugin',\n    'draftJsLibIsSoftNewlineEvent',\n    'immutableLib',\n  ]),\n  connect(\n    (state, props) => ({\n      token: state.userSession.token,\n    }),\n    {},\n  ),\n)(WysiwygWidgetComponent);\n\nconst Preloader = (props) => {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    Editor.load().then(() => setLoaded(true));\n  }, []);\n  return loaded ? <WysiwygWidget {...props} /> : null;\n};\n\nexport default Preloader;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Default","defaultMessage":"Default"},{"id":"Short Name","defaultMessage":"Short Name"},{"id":"Used for programmatic access to the fieldset.","defaultMessage":"Used for programmatic access to the fieldset."},{"id":"Title","defaultMessage":"Title"},{"id":"Description","defaultMessage":"Description"},{"id":"Required","defaultMessage":"Required"},{"id":"Delete","defaultMessage":"Delete"}]}},"sourceType":"module","externalDependencies":[]}