{"ast":null,"code":"import { eeaCountries } from './eeaCountries';\nexport var GeoSearchSchema = function GeoSearchSchema(props) {\n  return {\n    title: 'GeoGraphical Search',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['search', 'countries', 'featureClass', 'continents']\n    }],\n    properties: {\n      search: {\n        title: 'Search',\n        description: 'Search for geo Tags',\n        widget: 'searchGeotags'\n      },\n      countries: {\n        description: 'Select countries',\n        title: 'Countries',\n        choices: eeaCountries.map(function (item) {\n          return [item.value, item.label];\n        })\n      },\n      featureClass: {\n        description: 'Select feature regions for eg: lakes,parks etc',\n        title: 'Feature class',\n        choices: [['all', 'all'], ['country,state,region...', 'country,state,region...'], ['stream,lake...', 'stream,lake...'], ['parks,area...', 'parks,area...'], ['city,village...', 'city,village...'], ['road,railroad', 'road,railroad'], ['spot,building,farm', 'spot,building,farm'], ['mountain,hill,rock...', 'mountain,hill,rock...'], ['undersea', 'undersea'], ['forest,health...', 'forest,health...']]\n      },\n      continents: {\n        description: 'Select continents',\n        title: 'Continents',\n        choices: [['all', 'all'], ['EU', 'Europe'], ['AF', 'Africa'], ['AS', 'Asia'], ['OC', 'Oceania'], ['NA', 'North America'], ['SA', 'South America']]\n      }\n    },\n    required: []\n  };\n};\n_c = GeoSearchSchema;\nvar _c;\n$RefreshReg$(_c, \"GeoSearchSchema\");","map":{"version":3,"names":["eeaCountries","GeoSearchSchema","props","title","fieldsets","id","fields","properties","search","description","widget","countries","choices","map","item","value","label","featureClass","continents","required"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-widget-geolocation/src/components/manage/Widgets/schema.js"],"sourcesContent":["import { eeaCountries } from './eeaCountries';\n\nexport const GeoSearchSchema = (props) => ({\n  title: 'GeoGraphical Search',\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: ['search', 'countries', 'featureClass', 'continents'],\n    },\n  ],\n  properties: {\n    search: {\n      title: 'Search',\n      description: 'Search for geo Tags',\n      widget: 'searchGeotags',\n    },\n    countries: {\n      description: 'Select countries',\n      title: 'Countries',\n      choices: eeaCountries.map((item) => [item.value, item.label]),\n    },\n    featureClass: {\n      description: 'Select feature regions for eg: lakes,parks etc',\n      title: 'Feature class',\n      choices: [\n        ['all', 'all'],\n        ['country,state,region...', 'country,state,region...'],\n        ['stream,lake...', 'stream,lake...'],\n        ['parks,area...', 'parks,area...'],\n        ['city,village...', 'city,village...'],\n        ['road,railroad', 'road,railroad'],\n        ['spot,building,farm', 'spot,building,farm'],\n        ['mountain,hill,rock...', 'mountain,hill,rock...'],\n        ['undersea', 'undersea'],\n        ['forest,health...', 'forest,health...'],\n      ],\n    },\n    continents: {\n      description: 'Select continents',\n      title: 'Continents',\n      choices: [\n        ['all', 'all'],\n        ['EU', 'Europe'],\n        ['AF', 'Africa'],\n        ['AS', 'Asia'],\n        ['OC', 'Oceania'],\n        ['NA', 'North America'],\n        ['SA', 'South America'],\n      ],\n    },\n  },\n  required: [],\n});\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAE7C,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAIC,KAAK;EAAA,OAAM;IACzCC,KAAK,EAAE,qBAAqB;IAC5BC,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbF,KAAK,EAAE,SAAS;MAChBG,MAAM,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAE,cAAc,EAAE,YAAY;IAC9D,CAAC,CACF;IACDC,UAAU,EAAE;MACVC,MAAM,EAAE;QACNL,KAAK,EAAE,QAAQ;QACfM,WAAW,EAAE,qBAAqB;QAClCC,MAAM,EAAE;MACV,CAAC;MACDC,SAAS,EAAE;QACTF,WAAW,EAAE,kBAAkB;QAC/BN,KAAK,EAAE,WAAW;QAClBS,OAAO,EAAEZ,YAAY,CAACa,GAAG,CAAC,UAACC,IAAI;UAAA,OAAK,CAACA,IAAI,CAACC,KAAK,EAAED,IAAI,CAACE,KAAK,CAAC;QAAA;MAC9D,CAAC;MACDC,YAAY,EAAE;QACZR,WAAW,EAAE,gDAAgD;QAC7DN,KAAK,EAAE,eAAe;QACtBS,OAAO,EAAE,CACP,CAAC,KAAK,EAAE,KAAK,CAAC,EACd,CAAC,yBAAyB,EAAE,yBAAyB,CAAC,EACtD,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,EACpC,CAAC,eAAe,EAAE,eAAe,CAAC,EAClC,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,EACtC,CAAC,eAAe,EAAE,eAAe,CAAC,EAClC,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,EAC5C,CAAC,uBAAuB,EAAE,uBAAuB,CAAC,EAClD,CAAC,UAAU,EAAE,UAAU,CAAC,EACxB,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;MAE5C,CAAC;MACDM,UAAU,EAAE;QACVT,WAAW,EAAE,mBAAmB;QAChCN,KAAK,EAAE,YAAY;QACnBS,OAAO,EAAE,CACP,CAAC,KAAK,EAAE,KAAK,CAAC,EACd,CAAC,IAAI,EAAE,QAAQ,CAAC,EAChB,CAAC,IAAI,EAAE,QAAQ,CAAC,EAChB,CAAC,IAAI,EAAE,MAAM,CAAC,EACd,CAAC,IAAI,EAAE,SAAS,CAAC,EACjB,CAAC,IAAI,EAAE,eAAe,CAAC,EACvB,CAAC,IAAI,EAAE,eAAe,CAAC;MAE3B;IACF,CAAC;IACDO,QAAQ,EAAE;EACZ,CAAC;AAAA,CAAC;AAAC,KAnDUlB,eAAe;AAAA;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}