{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-metadata-block/src/components/manage/Blocks/MetadataSection/ViewMetadataSection.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React from 'react';\nimport config from '@plone/volto/registry';\nimport { useSelector } from 'react-redux';\nimport { Table } from 'semantic-ui-react';\nimport { ErrorBoundary } from '@eeacms/volto-metadata-block/widgets';\nimport { withBlockExtensions } from '@plone/volto/helpers';\nimport '@eeacms/volto-metadata-block/less/public.less';\nconst Field = props => {\n  const {\n    data,\n    properties = {},\n    metadata = {},\n    showLabel\n  } = props;\n  const {\n    views\n  } = config.widgets;\n  const initialFormData = useSelector(state => {\n    var _state$content;\n    return (state === null || state === void 0 ? void 0 : (_state$content = state.content) === null || _state$content === void 0 ? void 0 : _state$content.data) || {};\n  });\n  let metadata_element = _objectSpread(_objectSpread(_objectSpread({}, initialFormData), properties), metadata);\n  if (!(data !== null && data !== void 0 && data.id)) {\n    return '';\n  }\n  let output = metadata_element[data.id];\n  let Widget = views === null || views === void 0 ? void 0 : views.getWidget(data);\n  if (!output && props.data.placeholder) {\n    Widget = views === null || views === void 0 ? void 0 : views.default;\n    output = props.data.placeholder;\n  }\n  if (!Widget) {\n    return '';\n  }\n  let className = 'block metadata ' + data.id;\n  return __jsx(ErrorBoundary, {\n    name: data.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, showLabel ? __jsx(\"label\", {\n    htmlFor: `metadata-${data.id}`,\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, data === null || data === void 0 ? void 0 : data.title) : '', __jsx(Widget, {\n    value: output,\n    className: className,\n    id: `metadata-${data.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\nconst ViewMetadataSectionBlock = withBlockExtensions(props => {\n  const {\n    variation\n  } = props;\n  const ViewComponent = variation.view;\n  return __jsx(ViewComponent, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  }));\n});\nexport const MetadataSectionListingView = props => {\n  const {\n    data\n  } = props;\n  const {\n    fields = []\n  } = data;\n  const showFields = fields.filter(({\n    hideInView\n  }) => !hideInView);\n  return showFields !== null && showFields !== void 0 && showFields.length ? showFields.map(({\n    field,\n    showLabel\n  }, i) => __jsx(Field, _extends({\n    key: i\n  }, props, {\n    showLabel: showLabel,\n    data: field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }))) : '';\n};\nexport const MetadataSectionTableView = props => {\n  const {\n    data = {},\n    properties = {},\n    metadata = {}\n  } = props;\n  const {\n    table = {},\n    fields = []\n  } = data;\n  const initialFormData = useSelector(state => {\n    var _state$content2;\n    return (state === null || state === void 0 ? void 0 : (_state$content2 = state.content) === null || _state$content2 === void 0 ? void 0 : _state$content2.data) || {};\n  });\n  let metadata_element = _objectSpread(_objectSpread(_objectSpread({}, initialFormData), properties), metadata);\n  const showFields = fields.filter(({\n    hideInView\n  }) => !hideInView);\n  return showFields.length ? __jsx(Table, {\n    fixed: table.fixed,\n    compact: table.compact,\n    basic: table.basic ? 'very' : false,\n    celled: table.celled,\n    inverted: table.inverted,\n    striped: table.striped,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, showFields.map(({\n    field,\n    showLabel\n  }, i) => {\n    const hasValue = !_isEmpty(metadata_element[field === null || field === void 0 ? void 0 : field.id]);\n    return hasValue ? __jsx(Table.Row, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, __jsx(Table.HeaderCell, {\n      width: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, field.title), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, __jsx(Field, _extends({\n      key: i\n    }, props, {\n      showLabel: false,\n      data: field,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    })))) : '';\n  }))) : '';\n};\nexport default ViewMetadataSectionBlock;","map":{"version":3,"names":["React","config","useSelector","Table","ErrorBoundary","withBlockExtensions","Field","props","data","properties","metadata","showLabel","views","widgets","initialFormData","state","content","metadata_element","id","output","Widget","getWidget","placeholder","default","className","title","ViewMetadataSectionBlock","variation","ViewComponent","view","MetadataSectionListingView","fields","showFields","filter","hideInView","length","map","field","i","MetadataSectionTableView","table","fixed","compact","basic","celled","inverted","striped","hasValue"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-metadata-block/src/components/manage/Blocks/MetadataSection/ViewMetadataSection.jsx"],"sourcesContent":["import React from 'react';\nimport config from '@plone/volto/registry';\nimport { useSelector } from 'react-redux';\nimport { Table } from 'semantic-ui-react';\nimport { ErrorBoundary } from '@eeacms/volto-metadata-block/widgets';\nimport { isEmpty } from 'lodash';\nimport { withBlockExtensions } from '@plone/volto/helpers';\nimport '@eeacms/volto-metadata-block/less/public.less';\n\nconst Field = (props) => {\n  const { data, properties = {}, metadata = {}, showLabel } = props;\n  const { views } = config.widgets;\n  const initialFormData = useSelector((state) => state?.content?.data || {});\n  let metadata_element = { ...initialFormData, ...properties, ...metadata };\n\n  if (!data?.id) {\n    return '';\n  }\n\n  let output = metadata_element[data.id];\n  let Widget = views?.getWidget(data);\n  if (!output && props.data.placeholder) {\n    Widget = views?.default;\n    output = props.data.placeholder;\n  }\n\n  if (!Widget) {\n    return '';\n  }\n\n  let className = 'block metadata ' + data.id;\n  return (\n    <ErrorBoundary name={data.id}>\n      {showLabel ? (\n        <label htmlFor={`metadata-${data.id}`} className={className}>\n          {data?.title}\n        </label>\n      ) : (\n        ''\n      )}\n      <Widget value={output} className={className} id={`metadata-${data.id}`} />\n    </ErrorBoundary>\n  );\n};\n\nconst ViewMetadataSectionBlock = withBlockExtensions((props) => {\n  const { variation } = props;\n  const ViewComponent = variation.view;\n\n  return <ViewComponent {...props} />;\n});\n\nexport const MetadataSectionListingView = (props) => {\n  const { data } = props;\n  const { fields = [] } = data;\n  const showFields = fields.filter(({ hideInView }) => !hideInView);\n\n  return showFields?.length\n    ? showFields.map(({ field, showLabel }, i) => (\n        <Field key={i} {...props} showLabel={showLabel} data={field} />\n      ))\n    : '';\n};\n\nexport const MetadataSectionTableView = (props) => {\n  const { data = {}, properties = {}, metadata = {} } = props;\n  const { table = {}, fields = [] } = data;\n\n  const initialFormData = useSelector((state) => state?.content?.data || {});\n  let metadata_element = { ...initialFormData, ...properties, ...metadata };\n  const showFields = fields.filter(({ hideInView }) => !hideInView);\n\n  return showFields.length ? (\n    <Table\n      fixed={table.fixed}\n      compact={table.compact}\n      basic={table.basic ? 'very' : false}\n      celled={table.celled}\n      inverted={table.inverted}\n      striped={table.striped}\n    >\n      <Table.Body>\n        {showFields.map(({ field, showLabel }, i) => {\n          const hasValue = !isEmpty(metadata_element[field?.id]);\n\n          return hasValue ? (\n            <Table.Row key={i}>\n              <Table.HeaderCell width={1}>{field.title}</Table.HeaderCell>\n              <Table.Cell>\n                <Field key={i} {...props} showLabel={false} data={field} />\n              </Table.Cell>\n            </Table.Row>\n          ) : (\n            ''\n          );\n        })}\n      </Table.Body>\n    </Table>\n  ) : (\n    ''\n  );\n};\n\nexport default ViewMetadataSectionBlock;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}