{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectWithoutProperties from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"children\"];\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/helpers/Helmet/Helmet.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withSideEffect from 'react-side-effect';\nimport isEqual from 'react-fast-compare';\nimport { convertReactPropstoHtmlAttributes, handleClientStateChange, mapStateOnServer, reducePropsToState, warn } from './HelmetUtils.js';\nimport { TAG_NAMES, VALID_TAG_NAMES } from './HelmetConstants.js';\nvar Helmet = function Helmet(Component) {\n  var _class;\n  return _class = /*#__PURE__*/function (_React$Component) {\n    _inherits(HelmetWrapper, _React$Component);\n    var _super = _createSuper(HelmetWrapper);\n    function HelmetWrapper() {\n      _classCallCheck(this, HelmetWrapper);\n      return _super.apply(this, arguments);\n    }\n    _createClass(HelmetWrapper, [{\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate(nextProps) {\n        return !isEqual(this.props, nextProps);\n      }\n    }, {\n      key: \"mapNestedChildrenToProps\",\n      value: function mapNestedChildrenToProps(child, nestedChildren) {\n        if (!nestedChildren) {\n          return null;\n        }\n\n        // eslint-disable-next-line default-case\n        switch (child.type) {\n          case TAG_NAMES.SCRIPT:\n          case TAG_NAMES.NOSCRIPT:\n            return {\n              innerHTML: nestedChildren\n            };\n          case TAG_NAMES.STYLE:\n            return {\n              cssText: nestedChildren\n            };\n        }\n        throw new Error(\"<\".concat(child.type, \" /> elements are self-closing and can not contain children. Refer to our API for more information.\"));\n      }\n    }, {\n      key: \"flattenArrayTypeChildren\",\n      value: function flattenArrayTypeChildren(_ref) {\n        var child = _ref.child,\n          arrayTypeChildren = _ref.arrayTypeChildren,\n          newChildProps = _ref.newChildProps,\n          nestedChildren = _ref.nestedChildren;\n        return _objectSpread(_objectSpread({}, arrayTypeChildren), {}, _defineProperty({}, child.type, [].concat(_toConsumableArray(arrayTypeChildren[child.type] || []), [_objectSpread(_objectSpread({}, newChildProps), this.mapNestedChildrenToProps(child, nestedChildren))])));\n      }\n    }, {\n      key: \"mapObjectTypeChildren\",\n      value: function mapObjectTypeChildren(_ref2) {\n        var _objectSpread3;\n        var child = _ref2.child,\n          newProps = _ref2.newProps,\n          newChildProps = _ref2.newChildProps,\n          nestedChildren = _ref2.nestedChildren;\n        // eslint-disable-next-line default-case\n        switch (child.type) {\n          case TAG_NAMES.TITLE:\n            return _objectSpread(_objectSpread({}, newProps), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, child.type, nestedChildren), _defineProperty(_objectSpread3, \"titleAttributes\", _objectSpread({}, newChildProps)), _objectSpread3));\n          case TAG_NAMES.BODY:\n            return _objectSpread(_objectSpread({}, newProps), {}, {\n              bodyAttributes: _objectSpread({}, newChildProps)\n            });\n          case TAG_NAMES.HTML:\n            return _objectSpread(_objectSpread({}, newProps), {}, {\n              htmlAttributes: _objectSpread({}, newChildProps)\n            });\n        }\n        return _objectSpread(_objectSpread({}, newProps), {}, _defineProperty({}, child.type, _objectSpread({}, newChildProps)));\n      }\n    }, {\n      key: \"mapArrayTypeChildrenToProps\",\n      value: function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n        var newFlattenedProps = _objectSpread({}, newProps);\n        Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {\n          newFlattenedProps = _objectSpread(_objectSpread({}, newFlattenedProps), {}, _defineProperty({}, arrayChildName, arrayTypeChildren[arrayChildName]));\n        });\n        return newFlattenedProps;\n      }\n    }, {\n      key: \"warnOnInvalidChildren\",\n      value: function warnOnInvalidChildren(child, nestedChildren) {\n        if (true) {\n          if (!VALID_TAG_NAMES.some(function (name) {\n            return child.type === name;\n          })) {\n            if (typeof child.type === 'function') {\n              return warn(\"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.\");\n            }\n            return warn(\"Only elements types \".concat(VALID_TAG_NAMES.join(', '), \" are allowed. Helmet does not support rendering <\").concat(child.type, \"> elements. Refer to our API for more information.\"));\n          }\n          if (nestedChildren && typeof nestedChildren !== 'string' && (!Array.isArray(nestedChildren) || nestedChildren.some(function (nestedChild) {\n            return typeof nestedChild !== 'string';\n          }))) {\n            throw new Error(\"Helmet expects a string as a child of <\".concat(child.type, \">. Did you forget to wrap your children in braces? ( <\").concat(child.type, \">{``}</\").concat(child.type, \"> ) Refer to our API for more information.\"));\n          }\n        }\n        return true;\n      }\n    }, {\n      key: \"mapChildrenToProps\",\n      value: function mapChildrenToProps(children, newProps) {\n        var _this = this;\n        var arrayTypeChildren = {};\n        React.Children.forEach(children, function (child) {\n          if (!child || !child.props) {\n            return;\n          }\n          var _child$props = child.props,\n            nestedChildren = _child$props.children,\n            childProps = _objectWithoutProperties(_child$props, _excluded);\n          var newChildProps = convertReactPropstoHtmlAttributes(childProps);\n          _this.warnOnInvalidChildren(child, nestedChildren);\n          switch (child.type) {\n            case TAG_NAMES.LINK:\n            case TAG_NAMES.META:\n            case TAG_NAMES.NOSCRIPT:\n            case TAG_NAMES.SCRIPT:\n            case TAG_NAMES.STYLE:\n              arrayTypeChildren = _this.flattenArrayTypeChildren({\n                child: child,\n                arrayTypeChildren: arrayTypeChildren,\n                newChildProps: newChildProps,\n                nestedChildren: nestedChildren\n              });\n              break;\n            default:\n              newProps = _this.mapObjectTypeChildren({\n                child: child,\n                newProps: newProps,\n                newChildProps: newChildProps,\n                nestedChildren: nestedChildren\n              });\n              break;\n          }\n        });\n        newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n        return newProps;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n          children = _this$props.children,\n          props = _objectWithoutProperties(_this$props, _excluded2);\n        var newProps = _objectSpread({}, props);\n        if (children) {\n          newProps = this.mapChildrenToProps(children, newProps);\n        }\n        return __jsx(Component, _extends({}, newProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 14\n          }\n        }));\n      }\n    }], [{\n      key: \"canUseDOM\",\n      set:\n      /**\n       * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n       * @param {Object} bodyAttributes: {\"className\": \"root\"}\n       * @param {String} defaultTitle: \"Default Title\"\n       * @param {Boolean} defer: true\n       * @param {Boolean} encodeSpecialCharacters: true\n       * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n       * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n       * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n       * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n       * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n       * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n       * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n       * @param {String} title: \"Title\"\n       * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n       * @param {String} titleTemplate: \"MySite.com - %s\"\n       */\n\n      // Component.peek comes from react-side-effect:\n      // For testing, you may use a static peek() method available on the returned component.\n      // It lets you get the current state without resetting the mounted instance stack.\n      // Don’t use it for anything other than testing.\n\n      function set(canUseDOM) {\n        Component.canUseDOM = canUseDOM;\n      }\n    }]);\n    return HelmetWrapper;\n  }(React.Component), _defineProperty(_class, \"propTypes\", {\n    base: PropTypes.object,\n    bodyAttributes: PropTypes.object,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    defaultTitle: PropTypes.string,\n    defer: PropTypes.bool,\n    encodeSpecialCharacters: PropTypes.bool,\n    htmlAttributes: PropTypes.object,\n    link: PropTypes.arrayOf(PropTypes.object),\n    meta: PropTypes.arrayOf(PropTypes.object),\n    noscript: PropTypes.arrayOf(PropTypes.object),\n    onChangeClientState: PropTypes.func,\n    script: PropTypes.arrayOf(PropTypes.object),\n    style: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string,\n    titleAttributes: PropTypes.object,\n    titleTemplate: PropTypes.string\n  }), _defineProperty(_class, \"defaultProps\", {\n    defer: true,\n    encodeSpecialCharacters: true\n  }), _defineProperty(_class, \"peek\", Component.peek), _defineProperty(_class, \"rewind\", function () {\n    var mappedState = Component.rewind();\n    if (!mappedState) {\n      // provide fallback if mappedState is undefined\n      mappedState = mapStateOnServer({\n        baseTag: [],\n        bodyAttributes: {},\n        encodeSpecialCharacters: true,\n        htmlAttributes: {},\n        linkTags: [],\n        metaTags: [],\n        noscriptTags: [],\n        scriptTags: [],\n        styleTags: [],\n        title: '',\n        titleAttributes: {}\n      });\n    }\n    return mappedState;\n  }), _class;\n};\n_c = Helmet;\nvar NullComponent = function NullComponent() {\n  return null;\n};\n_c2 = NullComponent;\nvar HelmetSideEffects = withSideEffect(reducePropsToState, handleClientStateChange, mapStateOnServer)(NullComponent);\nvar HelmetExport = Helmet(HelmetSideEffects);\n_c3 = HelmetExport;\nHelmetExport.renderStatic = HelmetExport.rewind;\nexport { HelmetExport as Helmet };\nexport default HelmetExport;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Helmet\");\n$RefreshReg$(_c2, \"NullComponent\");\n$RefreshReg$(_c3, \"HelmetExport\");","map":{"version":3,"names":["React","PropTypes","withSideEffect","isEqual","convertReactPropstoHtmlAttributes","handleClientStateChange","mapStateOnServer","reducePropsToState","warn","TAG_NAMES","VALID_TAG_NAMES","Helmet","Component","nextProps","props","child","nestedChildren","type","SCRIPT","NOSCRIPT","innerHTML","STYLE","cssText","Error","arrayTypeChildren","newChildProps","mapNestedChildrenToProps","newProps","TITLE","BODY","bodyAttributes","HTML","htmlAttributes","newFlattenedProps","Object","keys","forEach","arrayChildName","some","name","join","Array","isArray","nestedChild","children","Children","childProps","warnOnInvalidChildren","LINK","META","flattenArrayTypeChildren","mapObjectTypeChildren","mapArrayTypeChildrenToProps","mapChildrenToProps","canUseDOM","base","object","oneOfType","arrayOf","node","defaultTitle","string","defer","bool","encodeSpecialCharacters","link","meta","noscript","onChangeClientState","func","script","style","title","titleAttributes","titleTemplate","peek","mappedState","rewind","baseTag","linkTags","metaTags","noscriptTags","scriptTags","styleTags","NullComponent","HelmetSideEffects","HelmetExport","renderStatic"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/helpers/Helmet/Helmet.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport withSideEffect from 'react-side-effect';\nimport isEqual from 'react-fast-compare';\nimport {\n  convertReactPropstoHtmlAttributes,\n  handleClientStateChange,\n  mapStateOnServer,\n  reducePropsToState,\n  warn,\n} from './HelmetUtils.js';\nimport { TAG_NAMES, VALID_TAG_NAMES } from './HelmetConstants.js';\n\nconst Helmet = (Component) =>\n  class HelmetWrapper extends React.Component {\n    /**\n     * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n     * @param {Object} bodyAttributes: {\"className\": \"root\"}\n     * @param {String} defaultTitle: \"Default Title\"\n     * @param {Boolean} defer: true\n     * @param {Boolean} encodeSpecialCharacters: true\n     * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n     * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n     * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n     * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n     * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n     * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n     * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n     * @param {String} title: \"Title\"\n     * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n     * @param {String} titleTemplate: \"MySite.com - %s\"\n     */\n    static propTypes = {\n      base: PropTypes.object,\n      bodyAttributes: PropTypes.object,\n      children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n      ]),\n      defaultTitle: PropTypes.string,\n      defer: PropTypes.bool,\n      encodeSpecialCharacters: PropTypes.bool,\n      htmlAttributes: PropTypes.object,\n      link: PropTypes.arrayOf(PropTypes.object),\n      meta: PropTypes.arrayOf(PropTypes.object),\n      noscript: PropTypes.arrayOf(PropTypes.object),\n      onChangeClientState: PropTypes.func,\n      script: PropTypes.arrayOf(PropTypes.object),\n      style: PropTypes.arrayOf(PropTypes.object),\n      title: PropTypes.string,\n      titleAttributes: PropTypes.object,\n      titleTemplate: PropTypes.string,\n    };\n\n    static defaultProps = {\n      defer: true,\n      encodeSpecialCharacters: true,\n    };\n\n    // Component.peek comes from react-side-effect:\n    // For testing, you may use a static peek() method available on the returned component.\n    // It lets you get the current state without resetting the mounted instance stack.\n    // Don’t use it for anything other than testing.\n    static peek = Component.peek;\n\n    static rewind = () => {\n      let mappedState = Component.rewind();\n      if (!mappedState) {\n        // provide fallback if mappedState is undefined\n        mappedState = mapStateOnServer({\n          baseTag: [],\n          bodyAttributes: {},\n          encodeSpecialCharacters: true,\n          htmlAttributes: {},\n          linkTags: [],\n          metaTags: [],\n          noscriptTags: [],\n          scriptTags: [],\n          styleTags: [],\n          title: '',\n          titleAttributes: {},\n        });\n      }\n\n      return mappedState;\n    };\n\n    static set canUseDOM(canUseDOM) {\n      Component.canUseDOM = canUseDOM;\n    }\n\n    shouldComponentUpdate(nextProps) {\n      return !isEqual(this.props, nextProps);\n    }\n\n    mapNestedChildrenToProps(child, nestedChildren) {\n      if (!nestedChildren) {\n        return null;\n      }\n\n      // eslint-disable-next-line default-case\n      switch (child.type) {\n        case TAG_NAMES.SCRIPT:\n        case TAG_NAMES.NOSCRIPT:\n          return {\n            innerHTML: nestedChildren,\n          };\n\n        case TAG_NAMES.STYLE:\n          return {\n            cssText: nestedChildren,\n          };\n      }\n\n      throw new Error(\n        `<${child.type} /> elements are self-closing and can not contain children. Refer to our API for more information.`,\n      );\n    }\n\n    flattenArrayTypeChildren({\n      child,\n      arrayTypeChildren,\n      newChildProps,\n      nestedChildren,\n    }) {\n      return {\n        ...arrayTypeChildren,\n        [child.type]: [\n          ...(arrayTypeChildren[child.type] || []),\n          {\n            ...newChildProps,\n            ...this.mapNestedChildrenToProps(child, nestedChildren),\n          },\n        ],\n      };\n    }\n\n    mapObjectTypeChildren({ child, newProps, newChildProps, nestedChildren }) {\n      // eslint-disable-next-line default-case\n      switch (child.type) {\n        case TAG_NAMES.TITLE:\n          return {\n            ...newProps,\n            [child.type]: nestedChildren,\n            titleAttributes: { ...newChildProps },\n          };\n\n        case TAG_NAMES.BODY:\n          return {\n            ...newProps,\n            bodyAttributes: { ...newChildProps },\n          };\n\n        case TAG_NAMES.HTML:\n          return {\n            ...newProps,\n            htmlAttributes: { ...newChildProps },\n          };\n      }\n\n      return {\n        ...newProps,\n        [child.type]: { ...newChildProps },\n      };\n    }\n\n    mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n      let newFlattenedProps = { ...newProps };\n\n      Object.keys(arrayTypeChildren).forEach((arrayChildName) => {\n        newFlattenedProps = {\n          ...newFlattenedProps,\n          [arrayChildName]: arrayTypeChildren[arrayChildName],\n        };\n      });\n\n      return newFlattenedProps;\n    }\n\n    warnOnInvalidChildren(child, nestedChildren) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!VALID_TAG_NAMES.some((name) => child.type === name)) {\n          if (typeof child.type === 'function') {\n            return warn(\n              `You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.`,\n            );\n          }\n\n          return warn(\n            `Only elements types ${VALID_TAG_NAMES.join(\n              ', ',\n            )} are allowed. Helmet does not support rendering <${\n              child.type\n            }> elements. Refer to our API for more information.`,\n          );\n        }\n\n        if (\n          nestedChildren &&\n          typeof nestedChildren !== 'string' &&\n          (!Array.isArray(nestedChildren) ||\n            nestedChildren.some(\n              (nestedChild) => typeof nestedChild !== 'string',\n            ))\n        ) {\n          throw new Error(\n            `Helmet expects a string as a child of <${child.type}>. Did you forget to wrap your children in braces? ( <${child.type}>{\\`\\`}</${child.type}> ) Refer to our API for more information.`,\n          );\n        }\n      }\n\n      return true;\n    }\n\n    mapChildrenToProps(children, newProps) {\n      let arrayTypeChildren = {};\n\n      React.Children.forEach(children, (child) => {\n        if (!child || !child.props) {\n          return;\n        }\n\n        const { children: nestedChildren, ...childProps } = child.props;\n        const newChildProps = convertReactPropstoHtmlAttributes(childProps);\n\n        this.warnOnInvalidChildren(child, nestedChildren);\n\n        switch (child.type) {\n          case TAG_NAMES.LINK:\n          case TAG_NAMES.META:\n          case TAG_NAMES.NOSCRIPT:\n          case TAG_NAMES.SCRIPT:\n          case TAG_NAMES.STYLE:\n            arrayTypeChildren = this.flattenArrayTypeChildren({\n              child,\n              arrayTypeChildren,\n              newChildProps,\n              nestedChildren,\n            });\n            break;\n\n          default:\n            newProps = this.mapObjectTypeChildren({\n              child,\n              newProps,\n              newChildProps,\n              nestedChildren,\n            });\n            break;\n        }\n      });\n\n      newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n      return newProps;\n    }\n\n    render() {\n      const { children, ...props } = this.props;\n      let newProps = { ...props };\n\n      if (children) {\n        newProps = this.mapChildrenToProps(children, newProps);\n      }\n\n      return <Component {...newProps} />;\n    }\n  };\n\nconst NullComponent = () => null;\n\nconst HelmetSideEffects = withSideEffect(\n  reducePropsToState,\n  handleClientStateChange,\n  mapStateOnServer,\n)(NullComponent);\n\nconst HelmetExport = Helmet(HelmetSideEffects);\nHelmetExport.renderStatic = HelmetExport.rewind;\n\nexport { HelmetExport as Helmet };\n\nexport default HelmetExport;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}