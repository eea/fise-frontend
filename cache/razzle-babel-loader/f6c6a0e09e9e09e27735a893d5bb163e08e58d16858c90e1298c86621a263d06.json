{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/customizations/volto/components/theme/Login/Login.jsx\";\nvar __jsx = React.createElement;\n/**\n * Login container.\n * @module components/theme/Login/Login\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Button, Form, Input, Segment, Grid } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { withRouter } from 'react-router-dom';\nimport { Icon } from '@plone/volto/components';\nimport { getNavigation, login } from '@plone/volto/actions';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport config from '@plone/volto/registry';\nvar messages = defineMessages({\n  login: {\n    \"id\": \"Log in\",\n    \"defaultMessage\": \"Log in\"\n  },\n  loginName: {\n    \"id\": \"Login Name\",\n    \"defaultMessage\": \"Login Name\"\n  },\n  Login: {\n    \"id\": \"Login\",\n    \"defaultMessage\": \"Login\"\n  },\n  password: {\n    \"id\": \"Password\",\n    \"defaultMessage\": \"Password\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  loginFailed: {\n    \"id\": \"Login Failed\",\n    \"defaultMessage\": \"Login Failed\"\n  },\n  loginFailedContent: {\n    \"id\": \"Both email address and password are case sensitive, check that caps lock is not enabled.\",\n    \"defaultMessage\": \"Both email address and password are case sensitive, check that caps lock is not enabled.\"\n  },\n  register: {\n    \"id\": \"Register\",\n    \"defaultMessage\": \"Register\"\n  },\n  forgotPassword: {\n    \"id\": \"box_forgot_password_option\",\n    \"defaultMessage\": \"Forgot your password?\"\n  }\n});\n\n/**\n * Login class.\n * @class Login\n * @extends Component\n */\nvar Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n  var _super = _createSuper(Login);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  function Login(props) {\n    var _this;\n    _classCallCheck(this, Login);\n    _this = _super.call(this, props);\n    _this.onLogin = _this.onLogin.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  _createClass(Login, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.token) {\n        var returnUrl = this.props.returnUrl !== '/logout' ? this.props.returnUrl || '/' : '/';\n        this.props.history.push(returnUrl, {\n          isFromLogin: true\n        });\n        if (toast.isActive('loginFailed')) {\n          toast.dismiss('loginFailed');\n        }\n      } else {\n        if (this.props.location.pathname === '/logout') {\n          this.props.history.push('/', {\n            isFromLogin: true\n          });\n        }\n      }\n      if (nextProps.error) {\n        if (!toast.isActive('loginFailed')) {\n          toast.error(__jsx(Toast, {\n            error: true,\n            title: this.props.intl.formatMessage(messages.loginFailed),\n            content: this.props.intl.formatMessage(messages.loginFailedContent),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 11\n            }\n          }), {\n            autoClose: false,\n            toastId: 'loginFailed'\n          });\n        }\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      if (config.settings.isMultilingual) {\n        this.props.getNavigation(\"/\".concat(this.props.lang), config.settings.navDepth);\n      } else {\n        this.props.getNavigation('/', config.settings.navDepth);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (config.settings.isMultilingual) {\n        this.props.getNavigation(\"/\".concat(this.props.lang), config.settings.navDepth);\n      } else {\n        this.props.getNavigation('/', config.settings.navDepth);\n      }\n      if (toast.isActive('loginFailed')) {\n        toast.dismiss('loginFailed');\n      }\n    }\n\n    /**\n     * On login handler\n     * @method onLogin\n     * @param {Object} event Event object.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onLogin\",\n    value: function onLogin(event) {\n      this.props.login(document.getElementsByName('login')[0].value, document.getElementsByName('password')[0].value);\n      event.preventDefault();\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"page-login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 7\n        }\n      }, __jsx(Helmet, {\n        title: this.props.intl.formatMessage(messages.Login),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }), __jsx(Container, {\n        text: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }\n      }, __jsx(Form, {\n        method: \"post\",\n        onSubmit: this.onLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      }, __jsx(Segment.Group, {\n        raised: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, __jsx(Segment, {\n        className: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Log In\",\n        defaultMessage: \"Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      })), __jsx(Segment, {\n        secondary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Sign in to start session\",\n        defaultMessage: \"Sign in to start session\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      })), __jsx(Segment, {\n        className: \"form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }\n      }, __jsx(Form.Field, {\n        inline: true,\n        className: \"help\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }, __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 19\n        }\n      }, __jsx(Grid.Row, {\n        stretched: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }\n      }, __jsx(Grid.Column, {\n        width: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 23\n        }\n      }, __jsx(\"div\", {\n        className: \"wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 27\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Login Name\",\n        defaultMessage: \"Login Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }\n      })))), __jsx(Grid.Column, {\n        width: \"8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 23\n        }\n      }, __jsx(Input, {\n        id: \"login\",\n        name: \"login\",\n        placeholder: this.props.intl.formatMessage(messages.loginName),\n        autoFocus: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }\n      }))), __jsx(Grid.Row, {\n        stretched: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }\n      }, __jsx(Grid.Column, {\n        stretched: true,\n        width: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 23\n        }\n      }, __jsx(\"p\", {\n        className: \"help\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"If you you do not have an account here, head over to the {registrationform}.\",\n        defaultMessage: \"If you you do not have an account here, head over to the {registrationform}.\",\n        values: {\n          registrationform: /* eslint-disable jsx-a11y/tabindex-no-positive */\n          __jsx(Link, {\n            to: \"/register\",\n            tabIndex: 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }\n          }, __jsx(FormattedMessage, {\n            id: \"registration form\",\n            defaultMessage: \"registration form\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 35\n            }\n          }))\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 27\n        }\n      })))))), __jsx(Form.Field, {\n        inline: true,\n        className: \"help\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 17\n        }\n      }, __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 19\n        }\n      }, __jsx(Grid.Row, {\n        stretched: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }\n      }, __jsx(Grid.Column, {\n        stretched: true,\n        width: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 23\n        }\n      }, __jsx(\"div\", {\n        className: \"wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 27\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Password\",\n        defaultMessage: \"Password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 29\n        }\n      })))), __jsx(Grid.Column, {\n        stretched: true,\n        width: \"8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 23\n        }\n      }, __jsx(Input, {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        placeholder: this.props.intl.formatMessage(messages.password),\n        tabIndex: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }\n      }))), __jsx(Grid.Row, {\n        stretched: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }\n      }, __jsx(Grid.Column, {\n        stretched: true,\n        width: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 23\n        }\n      }, __jsx(\"p\", {\n        className: \"help\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"If you have forgotten your password, {forgotpassword}\",\n        defaultMessage: \"If you have forgotten your password, {forgotpassword}\",\n        values: {\n          forgotpassword: __jsx(Link, {\n            to: \"/password-reset\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }\n          }, this.props.intl.formatMessage(messages.forgotPassword))\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 27\n        }\n      }))))))), __jsx(Segment, {\n        className: \"actions\",\n        clearing: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }\n      }, __jsx(Button, {\n        basic: true,\n        primary: true,\n        floated: \"right\",\n        type: \"submit\",\n        id: \"login-form-submit\",\n        \"aria-label\": this.props.intl.formatMessage(messages.login),\n        title: this.props.intl.formatMessage(messages.login),\n        loading: this.props.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        className: \"circled\",\n        name: aheadSVG,\n        size: \"30px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 19\n        }\n      })), __jsx(Button, {\n        basic: true,\n        secondary: true,\n        id: \"login-form-cancel\",\n        as: Link,\n        to: \"/\",\n        \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n        title: this.props.intl.formatMessage(messages.cancel),\n        floated: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        className: \"circled\",\n        name: clearSVG,\n        size: \"30px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 19\n        }\n      })))))));\n    }\n  }]);\n  return Login;\n}(Component);\n_defineProperty(Login, \"propTypes\", {\n  login: PropTypes.func.isRequired,\n  error: PropTypes.shape({\n    message: PropTypes.string\n  }),\n  loading: PropTypes.bool,\n  token: PropTypes.string,\n  // eslint-disable-line react/no-unused-prop-types\n  returnUrl: PropTypes.string\n});\n_defineProperty(Login, \"defaultProps\", {\n  error: null,\n  loading: null,\n  token: null,\n  returnUrl: null\n});\nexport default compose(withRouter, injectIntl, connect(function (state, props) {\n  return {\n    lang: state.intl.locale,\n    error: state.userSession.login.error,\n    loading: state.userSession.login.loading,\n    token: state.userSession.token,\n    returnUrl: qs.parse(props.location.search).return_url || props.location.pathname.replace(/\\/login$/, '').replace(/\\/logout$/, '') || '/'\n  };\n}, {\n  login: login,\n  getNavigation: getNavigation\n}))(Login);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","connect","compose","Link","Container","Button","Form","Input","Segment","Grid","FormattedMessage","defineMessages","injectIntl","qs","withRouter","Icon","getNavigation","login","toast","Toast","aheadSVG","clearSVG","config","messages","loginName","Login","password","cancel","error","loginFailed","loginFailedContent","register","forgotPassword","props","onLogin","bind","nextProps","token","returnUrl","history","push","isFromLogin","isActive","dismiss","location","pathname","intl","formatMessage","autoClose","toastId","settings","isMultilingual","lang","navDepth","event","document","getElementsByName","value","preventDefault","registrationform","forgotpassword","loading","func","isRequired","shape","message","string","bool","state","locale","userSession","parse","search","return_url","replace"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/customizations/volto/components/theme/Login/Login.jsx"],"sourcesContent":["/**\n * Login container.\n * @module components/theme/Login/Login\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n  Button,\n  Form,\n  Input,\n  Segment,\n  Grid,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { withRouter } from 'react-router-dom';\n\nimport { Icon } from '@plone/volto/components';\nimport { getNavigation, login } from '@plone/volto/actions';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\n\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  login: {\n    id: 'Log in',\n    defaultMessage: 'Log in',\n  },\n  loginName: {\n    id: 'Login Name',\n    defaultMessage: 'Login Name',\n  },\n  Login: {\n    id: 'Login',\n    defaultMessage: 'Login',\n  },\n  password: {\n    id: 'Password',\n    defaultMessage: 'Password',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  loginFailed: {\n    id: 'Login Failed',\n    defaultMessage: 'Login Failed',\n  },\n  loginFailedContent: {\n    id:\n      'Both email address and password are case sensitive, check that caps lock is not enabled.',\n    defaultMessage:\n      'Both email address and password are case sensitive, check that caps lock is not enabled.',\n  },\n  register: {\n    id: 'Register',\n    defaultMessage: 'Register',\n  },\n  forgotPassword: {\n    id: 'box_forgot_password_option',\n    defaultMessage: 'Forgot your password?',\n  },\n});\n\n/**\n * Login class.\n * @class Login\n * @extends Component\n */\nclass Login extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    login: PropTypes.func.isRequired,\n    error: PropTypes.shape({\n      message: PropTypes.string,\n    }),\n    loading: PropTypes.bool,\n    token: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n    returnUrl: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    error: null,\n    loading: null,\n    token: null,\n    returnUrl: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onLogin = this.onLogin.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.token) {\n      const returnUrl =\n        this.props.returnUrl !== '/logout' ? this.props.returnUrl || '/' : '/';\n      this.props.history.push(returnUrl, {\n        isFromLogin: true,\n      });\n      if (toast.isActive('loginFailed')) {\n        toast.dismiss('loginFailed');\n      }\n    } else {\n      if (this.props.location.pathname === '/logout') {\n        this.props.history.push('/', {\n          isFromLogin: true,\n        });\n      }\n    }\n    if (nextProps.error) {\n      if (!toast.isActive('loginFailed')) {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.loginFailed)}\n            content={this.props.intl.formatMessage(messages.loginFailedContent)}\n          />,\n          { autoClose: false, toastId: 'loginFailed' },\n        );\n      }\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    if (config.settings.isMultilingual) {\n      this.props.getNavigation(`/${this.props.lang}`, config.settings.navDepth);\n    } else {\n      this.props.getNavigation('/', config.settings.navDepth);\n    }\n  }\n\n  componentWillUnmount() {\n    if (config.settings.isMultilingual) {\n      this.props.getNavigation(`/${this.props.lang}`, config.settings.navDepth);\n    } else {\n      this.props.getNavigation('/', config.settings.navDepth);\n    }\n\n    if (toast.isActive('loginFailed')) {\n      toast.dismiss('loginFailed');\n    }\n  }\n\n  /**\n   * On login handler\n   * @method onLogin\n   * @param {Object} event Event object.\n   * @returns {undefined}\n   */\n  onLogin(event) {\n    this.props.login(\n      document.getElementsByName('login')[0].value,\n      document.getElementsByName('password')[0].value,\n    );\n    event.preventDefault();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <div id=\"page-login\">\n        <Helmet title={this.props.intl.formatMessage(messages.Login)} />\n        <Container text>\n          <Form method=\"post\" onSubmit={this.onLogin}>\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage id=\"Log In\" defaultMessage=\"Login\" />\n              </Segment>\n              <Segment secondary>\n                <FormattedMessage\n                  id=\"Sign in to start session\"\n                  defaultMessage=\"Sign in to start session\"\n                />\n              </Segment>\n              <Segment className=\"form\">\n                <Form.Field inline className=\"help\">\n                  <Grid>\n                    <Grid.Row stretched>\n                      <Grid.Column width=\"4\">\n                        <div className=\"wrapper\">\n                          <label htmlFor=\"login\">\n                            <FormattedMessage\n                              id=\"Login Name\"\n                              defaultMessage=\"Login Name\"\n                            />\n                          </label>\n                        </div>\n                      </Grid.Column>\n                      <Grid.Column width=\"8\">\n                        {/* eslint-disable jsx-a11y/no-autofocus */}\n                        <Input\n                          id=\"login\"\n                          name=\"login\"\n                          placeholder={this.props.intl.formatMessage(\n                            messages.loginName,\n                          )}\n                          autoFocus\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row stretched>\n                      <Grid.Column stretched width=\"12\">\n                        <p className=\"help\">\n                          <FormattedMessage\n                            id=\"If you you do not have an account here, head over to the {registrationform}.\"\n                            defaultMessage=\"If you you do not have an account here, head over to the {registrationform}.\"\n                            values={{\n                              registrationform: (\n                                /* eslint-disable jsx-a11y/tabindex-no-positive */\n                                <Link to=\"/register\" tabIndex={1}>\n                                  <FormattedMessage\n                                    id=\"registration form\"\n                                    defaultMessage=\"registration form\"\n                                  />\n                                </Link>\n                              ),\n                            }}\n                          />\n                        </p>\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form.Field>\n                <Form.Field inline className=\"help\">\n                  <Grid>\n                    <Grid.Row stretched>\n                      <Grid.Column stretched width=\"4\">\n                        <div className=\"wrapper\">\n                          <label htmlFor=\"password\">\n                            <FormattedMessage\n                              id=\"Password\"\n                              defaultMessage=\"Password\"\n                            />\n                          </label>\n                        </div>\n                      </Grid.Column>\n                      <Grid.Column stretched width=\"8\">\n                        <Input\n                          type=\"password\"\n                          id=\"password\"\n                          name=\"password\"\n                          placeholder={this.props.intl.formatMessage(\n                            messages.password,\n                          )}\n                          tabIndex={0}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row stretched>\n                      <Grid.Column stretched width=\"12\">\n                        <p className=\"help\">\n                          <FormattedMessage\n                            id=\"If you have forgotten your password, {forgotpassword}\"\n                            defaultMessage=\"If you have forgotten your password, {forgotpassword}\"\n                            values={{\n                              forgotpassword: (\n                                <Link to=\"/password-reset\">\n                                  {this.props.intl.formatMessage(\n                                    messages.forgotPassword,\n                                  )}\n                                </Link>\n                              ),\n                            }}\n                          />\n                        </p>\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form.Field>\n              </Segment>\n              <Segment className=\"actions\" clearing>\n                <Button\n                  basic\n                  primary\n                  floated=\"right\"\n                  type=\"submit\"\n                  id=\"login-form-submit\"\n                  aria-label={this.props.intl.formatMessage(messages.login)}\n                  title={this.props.intl.formatMessage(messages.login)}\n                  loading={this.props.loading}\n                >\n                  <Icon className=\"circled\" name={aheadSVG} size=\"30px\" />\n                </Button>\n\n                <Button\n                  basic\n                  secondary\n                  id=\"login-form-cancel\"\n                  as={Link}\n                  to=\"/\"\n                  aria-label={this.props.intl.formatMessage(messages.cancel)}\n                  title={this.props.intl.formatMessage(messages.cancel)}\n                  floated=\"right\"\n                >\n                  <Icon className=\"circled\" name={clearSVG} size=\"30px\" />\n                </Button>\n              </Segment>\n            </Segment.Group>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      lang: state.intl.locale,\n      error: state.userSession.login.error,\n      loading: state.userSession.login.loading,\n      token: state.userSession.token,\n      returnUrl:\n        qs.parse(props.location.search).return_url ||\n        props.location.pathname\n          .replace(/\\/login$/, '')\n          .replace(/\\/logout$/, '') ||\n        '/',\n    }),\n    { login, getNavigation },\n  ),\n)(Login);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Log in","defaultMessage":"Log in"},{"id":"Login Name","defaultMessage":"Login Name"},{"id":"Login","defaultMessage":"Login"},{"id":"Password","defaultMessage":"Password"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Error","defaultMessage":"Error"},{"id":"Login Failed","defaultMessage":"Login Failed"},{"id":"Both email address and password are case sensitive, check that caps lock is not enabled.","defaultMessage":"Both email address and password are case sensitive, check that caps lock is not enabled."},{"id":"Register","defaultMessage":"Register"},{"id":"box_forgot_password_option","defaultMessage":"Forgot your password?"},{"id":"Log In","defaultMessage":"Login"},{"id":"Sign in to start session","defaultMessage":"Sign in to start session"},{"id":"If you you do not have an account here, head over to the {registrationform}.","defaultMessage":"If you you do not have an account here, head over to the {registrationform}."},{"id":"registration form","defaultMessage":"registration form"},{"id":"If you have forgotten your password, {forgotpassword}","defaultMessage":"If you have forgotten your password, {forgotpassword}"}]}},"sourceType":"module","externalDependencies":[]}