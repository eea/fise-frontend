{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { v4 as uuid } from 'uuid';\nimport { getBlocksFieldname, getBlocksLayoutFieldname, getBlocks } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nvar columnConfig = {\n  cloneData: function cloneData(blockData) {\n    // console.log('column', blockData);\n    return cloneFormData(blockData);\n  }\n};\nfunction cloneFormData(formData) {\n  var _newBlockData;\n  var formBlocks = getBlocks(formData);\n  var cloneWithIds = formBlocks.filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      id = _ref2[0],\n      blockData = _ref2[1];\n    return blockData.blocks ? true : !!blockData['@type']; // support \"columns\"\n  }).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      id = _ref4[0],\n      blockData = _ref4[1];\n    var blockConfig = config.blocks.blocksConfig[blockData['@type']] || columnConfig;\n    return blockConfig.cloneData ? blockConfig.cloneData(blockData) : [uuid(), blockData];\n  }).filter(function (info) {\n    return !!info;\n  }); // some blocks may refuse to be copied\n\n  var blocksFieldname = getBlocksFieldname(formData);\n  var blocksLayoutFieldname = getBlocksLayoutFieldname(formData);\n  var newBlockData = (_newBlockData = {}, _defineProperty(_newBlockData, blocksFieldname, _objectSpread(_objectSpread({}, formData[blocksFieldname]), Object.assign.apply(Object, [{}].concat(_toConsumableArray(cloneWithIds.map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n      id = _ref6[0],\n      data = _ref6[1];\n    return _defineProperty({}, id, data);\n  })))))), _defineProperty(_newBlockData, blocksLayoutFieldname, _objectSpread(_objectSpread({}, formData[blocksLayoutFieldname]), {}, {\n    items: _toConsumableArray(cloneWithIds.map(function (_ref8) {\n      var _ref9 = _slicedToArray(_ref8, 1),\n        id = _ref9[0];\n      return id;\n    }))\n  })), _newBlockData);\n  return [uuid(), newBlockData];\n}\nexport function cloneColumnsBlockData(blockData) {\n  var columnsData = blockData.data;\n  var cloneWithIds = cloneFormData(columnsData);\n  var _cloneWithIds = _slicedToArray(cloneWithIds, 2),\n    id = _cloneWithIds[0],\n    newBlockData = _cloneWithIds[1];\n  return [id, _objectSpread(_objectSpread({}, blockData), {}, {\n    data: newBlockData\n  })];\n}","map":{"version":3,"names":["v4","uuid","getBlocksFieldname","getBlocksLayoutFieldname","getBlocks","config","columnConfig","cloneData","blockData","cloneFormData","formData","formBlocks","cloneWithIds","filter","id","blocks","map","blockConfig","blocksConfig","info","blocksFieldname","blocksLayoutFieldname","newBlockData","Object","assign","data","items","cloneColumnsBlockData","columnsData"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-columns-block/src/utils.js"],"sourcesContent":["import { v4 as uuid } from 'uuid';\nimport {\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  getBlocks,\n} from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nconst columnConfig = {\n  cloneData(blockData) {\n    // console.log('column', blockData);\n    return cloneFormData(blockData);\n  },\n};\n\nfunction cloneFormData(formData) {\n  const formBlocks = getBlocks(formData);\n\n  const cloneWithIds = formBlocks\n    .filter(([id, blockData]) => {\n      return blockData.blocks ? true : !!blockData['@type']; // support \"columns\"\n    })\n    .map(([id, blockData]) => {\n      const blockConfig =\n        config.blocks.blocksConfig[blockData['@type']] || columnConfig;\n      return blockConfig.cloneData\n        ? blockConfig.cloneData(blockData)\n        : [uuid(), blockData];\n    })\n    .filter((info) => !!info); // some blocks may refuse to be copied\n\n  const blocksFieldname = getBlocksFieldname(formData);\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(formData);\n\n  const newBlockData = {\n    [blocksFieldname]: {\n      ...formData[blocksFieldname],\n      ...Object.assign(\n        {},\n        ...cloneWithIds.map(([id, data]) => ({ [id]: data })),\n      ),\n    },\n    [blocksLayoutFieldname]: {\n      ...formData[blocksLayoutFieldname],\n      items: [...cloneWithIds.map(([id]) => id)],\n    },\n  };\n  return [uuid(), newBlockData];\n}\n\nexport function cloneColumnsBlockData(blockData) {\n  const columnsData = blockData.data;\n  const cloneWithIds = cloneFormData(columnsData);\n\n  const [id, newBlockData] = cloneWithIds;\n  return [\n    id,\n    {\n      ...blockData,\n      data: newBlockData,\n    },\n  ];\n}\n"],"mappings":";;;;AAAA,SAASA,EAAE,IAAIC,IAAI,QAAQ,MAAM;AACjC,SACEC,kBAAkB,EAClBC,wBAAwB,EACxBC,SAAS,QACJ,sBAAsB;AAC7B,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,IAAMC,YAAY,GAAG;EACnBC,SAAS,qBAACC,SAAS,EAAE;IACnB;IACA,OAAOC,aAAa,CAACD,SAAS,CAAC;EACjC;AACF,CAAC;AAED,SAASC,aAAa,CAACC,QAAQ,EAAE;EAAA;EAC/B,IAAMC,UAAU,GAAGP,SAAS,CAACM,QAAQ,CAAC;EAEtC,IAAME,YAAY,GAAGD,UAAU,CAC5BE,MAAM,CAAC,gBAAqB;IAAA;MAAnBC,EAAE;MAAEN,SAAS;IACrB,OAAOA,SAAS,CAACO,MAAM,GAAG,IAAI,GAAG,CAAC,CAACP,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;EACzD,CAAC,CAAC,CACDQ,GAAG,CAAC,iBAAqB;IAAA;MAAnBF,EAAE;MAAEN,SAAS;IAClB,IAAMS,WAAW,GACfZ,MAAM,CAACU,MAAM,CAACG,YAAY,CAACV,SAAS,CAAC,OAAO,CAAC,CAAC,IAAIF,YAAY;IAChE,OAAOW,WAAW,CAACV,SAAS,GACxBU,WAAW,CAACV,SAAS,CAACC,SAAS,CAAC,GAChC,CAACP,IAAI,EAAE,EAAEO,SAAS,CAAC;EACzB,CAAC,CAAC,CACDK,MAAM,CAAC,UAACM,IAAI;IAAA,OAAK,CAAC,CAACA,IAAI;EAAA,EAAC,CAAC,CAAC;;EAE7B,IAAMC,eAAe,GAAGlB,kBAAkB,CAACQ,QAAQ,CAAC;EACpD,IAAMW,qBAAqB,GAAGlB,wBAAwB,CAACO,QAAQ,CAAC;EAEhE,IAAMY,YAAY,uDACfF,eAAe,kCACXV,QAAQ,CAACU,eAAe,CAAC,GACzBG,MAAM,CAACC,MAAM,OAAbD,MAAM,GACP,CAAC,CAAC,4BACCX,YAAY,CAACI,GAAG,CAAC;IAAA;MAAEF,EAAE;MAAEW,IAAI;IAAA,2BAAUX,EAAE,EAAGW,IAAI;EAAA,CAAG,CAAC,GACtD,mCAEFJ,qBAAqB,kCACjBX,QAAQ,CAACW,qBAAqB,CAAC;IAClCK,KAAK,qBAAMd,YAAY,CAACI,GAAG,CAAC;MAAA;QAAEF,EAAE;MAAA,OAAMA,EAAE;IAAA,EAAC;EAAC,mBAE7C;EACD,OAAO,CAACb,IAAI,EAAE,EAAEqB,YAAY,CAAC;AAC/B;AAEA,OAAO,SAASK,qBAAqB,CAACnB,SAAS,EAAE;EAC/C,IAAMoB,WAAW,GAAGpB,SAAS,CAACiB,IAAI;EAClC,IAAMb,YAAY,GAAGH,aAAa,CAACmB,WAAW,CAAC;EAE/C,mCAA2BhB,YAAY;IAAhCE,EAAE;IAAEQ,YAAY;EACvB,OAAO,CACLR,EAAE,kCAEGN,SAAS;IACZiB,IAAI,EAAEH;EAAY,GAErB;AACH"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}