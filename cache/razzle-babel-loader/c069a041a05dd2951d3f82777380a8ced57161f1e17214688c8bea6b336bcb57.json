{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/widgets/BlocksBrowser/BlocksBrowserBody.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Segment } from 'semantic-ui-react';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\n\n// These absolute imports (without using the corresponding centralized index.js) are required\n// to cut circular import problems, this file should never use them. This is because of\n// the very nature of the functionality of the component and its relationship with others\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport BlocksBrowserNav from './BlocksBrowserNav';\n\n/**\n * BlocksBrowserBody container class.\n * @class BlocksBrowserBody\n * @extends Component\n */\nclass BlocksBrowserBody extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    var _this$props$data;\n    super(props);\n    _defineProperty(this, \"handleClickOutside\", e => {\n      if (this.objectBrowser && doesNodeContainClick(this.objectBrowser.current, e)) return;\n      this.props.closeObjectBrowser();\n    });\n    _defineProperty(this, \"objectBrowser\", /*#__PURE__*/React.createRef());\n    _defineProperty(this, \"onSelectItem\", item => {\n      const {\n        block,\n        data,\n        onChangeBlock\n      } = this.props;\n      const id = item['id'];\n      if (this.props.onSelectItem) {\n        this.props.onSelectItem(item);\n      } else {\n        onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n          href: id\n        }));\n      }\n      this.setState({\n        selectedHref: id\n      });\n    });\n    _defineProperty(this, \"onChangeBlockData\", (key, value) => {\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        [key]: value\n      }));\n    });\n    _defineProperty(this, \"handleClickOnItem\", item => {\n      if (!this.props.maximumSelectionSize || !this.props.data || this.props.data.length < this.props.maximumSelectionSize) {\n        this.onSelectItem(item);\n        let length = this.props.data ? this.props.data.length : 0;\n        if (length + 1 >= this.props.maximumSelectionSize) {\n          this.props.closeObjectBrowser();\n        }\n      } else {\n        this.props.closeObjectBrowser();\n      }\n    });\n    _defineProperty(this, \"handleDoubleClickOnItem\", item => {\n      if (this.props.data.length < this.props.maximumSelectionSize) {\n        this.onSelectItem(item);\n      }\n      this.props.closeObjectBrowser();\n    });\n    this.state = {\n      selectedHref: ((_this$props$data = this.props.data) === null || _this$props$data === void 0 ? void 0 : _this$props$data.href) || ''\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillUnmount\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside, false);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return /*#__PURE__*/ReactDOM.createPortal(__jsx(\"aside\", {\n      role: \"presentation\",\n      onClick: e => {\n        e.stopPropagation();\n      },\n      ref: this.objectBrowser,\n      key: \"objectbrowsercontainerkey\",\n      className: \"sidebar-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, __jsx(\"header\", {\n      className: \"header pulled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"vertical divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Choose Target\",\n      defaultMessage: \"Choose Target\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    })), __jsx(\"button\", {\n      className: \"clearSVG\",\n      onClick: this.props.closeObjectBrowser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, __jsx(Icon, {\n      name: clearSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }))), __jsx(BlocksBrowserNav, {\n      selected: false,\n      handleClickOnItem: this.handleClickOnItem,\n      handleDoubleClickOnItem: this.handleDoubleClickOnItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }))), document.body);\n  }\n}\n_defineProperty(BlocksBrowserBody, \"propTypes\", {\n  block: PropTypes.string.isRequired,\n  data: PropTypes.any.isRequired,\n  closeObjectBrowser: PropTypes.func.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  onSelectItem: PropTypes.func,\n  dataName: PropTypes.string,\n  maximumSelectionSize: PropTypes.number\n});\n_defineProperty(BlocksBrowserBody, \"defaultProps\", {\n  image: '',\n  href: '',\n  onSelectItem: null,\n  dataName: null,\n  selectableTypes: [],\n  maximumSelectionSize: null\n});\nexport default compose(injectIntl)(BlocksBrowserBody);","map":{"version":3,"names":["React","Component","ReactDOM","PropTypes","compose","FormattedMessage","injectIntl","Segment","doesNodeContainClick","Icon","clearSVG","BlocksBrowserNav","BlocksBrowserBody","constructor","props","e","objectBrowser","current","closeObjectBrowser","createRef","item","block","data","onChangeBlock","id","onSelectItem","href","setState","selectedHref","key","value","maximumSelectionSize","length","state","componentDidMount","document","addEventListener","handleClickOutside","componentWillUnmount","removeEventListener","render","createPortal","stopPropagation","handleClickOnItem","handleDoubleClickOnItem","body","string","isRequired","any","func","dataName","number","image","selectableTypes"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/widgets/BlocksBrowser/BlocksBrowserBody.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Segment } from 'semantic-ui-react';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\n\n// These absolute imports (without using the corresponding centralized index.js) are required\n// to cut circular import problems, this file should never use them. This is because of\n// the very nature of the functionality of the component and its relationship with others\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\n\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport BlocksBrowserNav from './BlocksBrowserNav';\n\n/**\n * BlocksBrowserBody container class.\n * @class BlocksBrowserBody\n * @extends Component\n */\nclass BlocksBrowserBody extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    block: PropTypes.string.isRequired,\n    data: PropTypes.any.isRequired,\n    closeObjectBrowser: PropTypes.func.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onSelectItem: PropTypes.func,\n    dataName: PropTypes.string,\n    maximumSelectionSize: PropTypes.number,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    image: '',\n    href: '',\n    onSelectItem: null,\n    dataName: null,\n    selectableTypes: [],\n    maximumSelectionSize: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedHref: this.props.data?.href || '',\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillUnmount\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  handleClickOutside = (e) => {\n    if (\n      this.objectBrowser &&\n      doesNodeContainClick(this.objectBrowser.current, e)\n    )\n      return;\n    this.props.closeObjectBrowser();\n  };\n\n  objectBrowser = React.createRef();\n\n  onSelectItem = (item) => {\n    const { block, data, onChangeBlock } = this.props;\n    const id = item['id'];\n    if (this.props.onSelectItem) {\n      this.props.onSelectItem(item);\n    } else {\n      onChangeBlock(block, {\n        ...data,\n        href: id,\n      });\n    }\n\n    this.setState({\n      selectedHref: id,\n    });\n  };\n\n  onChangeBlockData = (key, value) => {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      [key]: value,\n    });\n  };\n\n  handleClickOnItem = (item) => {\n    if (\n      !this.props.maximumSelectionSize ||\n      !this.props.data ||\n      this.props.data.length < this.props.maximumSelectionSize\n    ) {\n      this.onSelectItem(item);\n      let length = this.props.data ? this.props.data.length : 0;\n      if (length + 1 >= this.props.maximumSelectionSize) {\n        this.props.closeObjectBrowser();\n      }\n    } else {\n      this.props.closeObjectBrowser();\n    }\n  };\n\n  handleDoubleClickOnItem = (item) => {\n    if (this.props.data.length < this.props.maximumSelectionSize) {\n      this.onSelectItem(item);\n    }\n    this.props.closeObjectBrowser();\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return ReactDOM.createPortal(\n      <aside\n        role=\"presentation\"\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n        ref={this.objectBrowser}\n        key=\"objectbrowsercontainerkey\"\n        className=\"sidebar-container\"\n      >\n        <Segment.Group raised>\n          <header className=\"header pulled\">\n            <div className=\"vertical divider\" />\n            <h2>\n              <FormattedMessage\n                id=\"Choose Target\"\n                defaultMessage=\"Choose Target\"\n              />\n            </h2>\n            <button\n              className=\"clearSVG\"\n              onClick={this.props.closeObjectBrowser}\n            >\n              <Icon name={clearSVG} size=\"24px\" />\n            </button>\n          </header>\n          <BlocksBrowserNav\n            selected={false}\n            handleClickOnItem={this.handleClickOnItem}\n            handleDoubleClickOnItem={this.handleDoubleClickOnItem}\n          />\n        </Segment.Group>\n      </aside>,\n      document.body,\n    );\n  }\n}\n\nexport default compose(injectIntl)(BlocksBrowserBody);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Choose Target","defaultMessage":"Choose Target"}]}},"sourceType":"module","externalDependencies":[]}