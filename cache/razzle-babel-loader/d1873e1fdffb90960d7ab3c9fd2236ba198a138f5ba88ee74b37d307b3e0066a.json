{"ast":null,"code":"const _excluded = [\"data\", \"children\"];\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-block-style/src/BlockStyleWrapper/BlockStyleWrapperView.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport { StyleWrapperView } from '../StyleWrapper';\nconst BlockStyleWrapperView = _ref => {\n  let {\n      data,\n      children\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return __jsx(StyleWrapperView, _extends({}, props, {\n    data: data,\n    styleData: data.styles || {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 3\n    }\n  }), children);\n};\nexport default BlockStyleWrapperView;","map":{"version":3,"names":["React","StyleWrapperView","BlockStyleWrapperView","data","children","props","styles"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-block-style/src/BlockStyleWrapper/BlockStyleWrapperView.jsx"],"sourcesContent":["import React from 'react';\nimport { StyleWrapperView } from '../StyleWrapper';\n\nconst BlockStyleWrapperView = ({ data, children, ...props }) => (\n  <StyleWrapperView {...props} data={data} styleData={data.styles || {}}>\n    {children}\n  </StyleWrapperView>\n);\nexport default BlockStyleWrapperView;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,iBAAiB;AAElD,MAAMC,qBAAqB,GAAG;EAAA,IAAC;MAAEC,IAAI;MAAEC;IAAmB,CAAC;IAAPC,KAAK;EAAA,OACvD,MAAC,gBAAgB,eAAKA,KAAK;IAAE,IAAI,EAAEF,IAAK;IAAC,SAAS,EAAEA,IAAI,CAACG,MAAM,IAAI,CAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACnEF,QAAQ,CACQ;AAAA,CACpB;AACD,eAAeF,qBAAqB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}