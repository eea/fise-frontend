{"ast":null,"code":"import _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _isEqual from \"lodash/isEqual\";\nvar _s = $RefreshSig$();\nimport React from 'react';\nimport { usePrevious } from './usePrevious';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\n/**\n * A pagination helper that tracks the query and resets pagination in case the\n * query changes.\n */\nexport var usePagination = function usePagination(query) {\n  _s();\n  var defaultPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var previousQuery = usePrevious(query);\n  var _React$useState = React.useState(defaultPage),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    currentPage = _React$useState2[0],\n    setCurrentPage = _React$useState2[1];\n  useDeepCompareEffect(function () {\n    setCurrentPage(defaultPage);\n  }, [query, previousQuery, defaultPage]);\n  return {\n    currentPage: previousQuery && !_isEqual(previousQuery, query) ? defaultPage : currentPage,\n    setCurrentPage: setCurrentPage\n  };\n};\n_s(usePagination, \"KOOtdjwB21HJB6ULCuuyVygSRKE=\", false, function () {\n  return [usePrevious, useDeepCompareEffect];\n});","map":{"version":3,"names":["React","usePrevious","useDeepCompareEffect","usePagination","query","defaultPage","previousQuery","useState","currentPage","setCurrentPage"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/helpers/Utils/usePagination.js"],"sourcesContent":["import React from 'react';\nimport { isEqual } from 'lodash';\nimport { usePrevious } from './usePrevious';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\n/**\n * A pagination helper that tracks the query and resets pagination in case the\n * query changes.\n */\nexport const usePagination = (query, defaultPage = 1) => {\n  const previousQuery = usePrevious(query);\n  const [currentPage, setCurrentPage] = React.useState(defaultPage);\n\n  useDeepCompareEffect(() => {\n    setCurrentPage(defaultPage);\n  }, [query, previousQuery, defaultPage]);\n\n  return {\n    currentPage:\n      previousQuery && !isEqual(previousQuery, query)\n        ? defaultPage\n        : currentPage,\n    setCurrentPage,\n  };\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,oBAAoB,MAAM,yBAAyB;;AAE1D;AACA;AACA;AACA;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,KAAK,EAAsB;EAAA;EAAA,IAApBC,WAAW,uEAAG,CAAC;EAClD,IAAMC,aAAa,GAAGL,WAAW,CAACG,KAAK,CAAC;EACxC,sBAAsCJ,KAAK,CAACO,QAAQ,CAACF,WAAW,CAAC;IAAA;IAA1DG,WAAW;IAAEC,cAAc;EAElCP,oBAAoB,CAAC,YAAM;IACzBO,cAAc,CAACJ,WAAW,CAAC;EAC7B,CAAC,EAAE,CAACD,KAAK,EAAEE,aAAa,EAAED,WAAW,CAAC,CAAC;EAEvC,OAAO;IACLG,WAAW,EACTF,aAAa,IAAI,CAAC,SAAQA,aAAa,EAAEF,KAAK,CAAC,GAC3CC,WAAW,GACXG,WAAW;IACjBC,cAAc,EAAdA;EACF,CAAC;AACH,CAAC;AAAC,GAfWN,aAAa;EAAA,QACFF,WAAW,EAGjCC,oBAAoB;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}