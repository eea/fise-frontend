{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/DatabaseInformation.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/DatabaseInformation\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { Container, Divider, Message, Segment, Table } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { getDatabaseInformation } from '@plone/volto/actions';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  databaseInformation: {\n    \"id\": \"Database Information\",\n    \"defaultMessage\": \"Database Information\"\n  }\n});\n\n/**\n * DatabaseInformation class.\n * @class DatabaseInformation\n * @extends Component\n */\nclass DatabaseInformation extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClient: false\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getDatabaseInformation();\n    this.setState({\n      isClient: true\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return this.props.databaseInformation ? __jsx(Container, {\n      id: \"database-page\",\n      className: \"controlpanel-database\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.databaseInformation),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Database Information\",\n      defaultMessage: \"Database Information\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    })), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, __jsx(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"The Database Manager allow you to view database status information\",\n      defaultMessage: \"The Database Manager allow you to view database status information\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, __jsx(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, __jsx(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Database main\",\n      defaultMessage: \"Database main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }))), __jsx(Table, {\n      celled: true,\n      padded: true,\n      columns: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Database Location\",\n      defaultMessage: \"Database Location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, this.props.databaseInformation.db_name)), __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Database Size\",\n      defaultMessage: \"Database Size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, this.props.databaseInformation.database_size)), __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Total number of objects in the database\",\n      defaultMessage: \"Total number of objects in the database\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, this.props.databaseInformation.db_size)), __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Total number of objects in memory from all caches\",\n      defaultMessage: \"Total number of objects in memory from all caches\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, this.props.databaseInformation.cache_size)), __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Target number of objects in memory per cache\",\n      defaultMessage: \"Target number of objects in memory per cache\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, this.props.databaseInformation.cache_length)), __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Target memory size per cache in bytes\",\n      defaultMessage: \"Target memory size per cache in bytes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, this.props.databaseInformation.cache_length_bytes))))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }), __jsx(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, __jsx(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Total number of objects in each cache\",\n      defaultMessage: \"Total number of objects in each cache\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }))), __jsx(Table, {\n      celled: true,\n      padded: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Cache Name\",\n      defaultMessage: \"Cache Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Number of active objects\",\n      defaultMessage: \"Number of active objects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Total active and non-active objects\",\n      defaultMessage: \"Total active and non-active objects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    })))), this.props.databaseInformation.cache_detail_length.map(item => __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, item.connection), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, item.ngsize), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, item.size)))))), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(React.Fragment, null, __jsx(Link, {\n        to: \"/controlpanel\",\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        \"aria-label\": this.props.intl.formatMessage(messages.back),\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }))) : null;\n  }\n}\n_defineProperty(DatabaseInformation, \"propTypes\", {\n  getDatabaseInformation: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  databaseInformation: state.controlpanels.databaseinformation,\n  pathname: props.location.pathname\n}), {\n  getDatabaseInformation\n}))(DatabaseInformation);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","Portal","Container","Divider","Message","Segment","Table","FormattedMessage","defineMessages","injectIntl","getDatabaseInformation","Helmet","Icon","Toolbar","backSVG","messages","back","databaseInformation","DatabaseInformation","constructor","props","state","isClient","componentDidMount","setState","render","intl","formatMessage","db_name","database_size","db_size","cache_size","cache_length","cache_length_bytes","cache_detail_length","map","item","connection","ngsize","size","document","getElementById","pathname","func","isRequired","controlpanels","databaseinformation","location"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/DatabaseInformation.jsx"],"sourcesContent":["/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/DatabaseInformation\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { Container, Divider, Message, Segment, Table } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { getDatabaseInformation } from '@plone/volto/actions';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  databaseInformation: {\n    id: 'Database Information',\n    defaultMessage: 'Database Information',\n  },\n});\n\n/**\n * DatabaseInformation class.\n * @class DatabaseInformation\n * @extends Component\n */\nclass DatabaseInformation extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getDatabaseInformation: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getDatabaseInformation();\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return this.props.databaseInformation ? (\n      <Container id=\"database-page\" className=\"controlpanel-database\">\n        <Helmet\n          title={this.props.intl.formatMessage(messages.databaseInformation)}\n        />\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage\n              id=\"Database Information\"\n              defaultMessage=\"Database Information\"\n            />\n          </Segment>\n          <Segment>\n            <Message>\n              <FormattedMessage\n                id=\"The Database Manager allow you to view database status information\"\n                defaultMessage=\"The Database Manager allow you to view database status information\"\n              />\n            </Message>\n          </Segment>\n          <Segment>\n            <Message>\n              <Message.Header>\n                <FormattedMessage\n                  id=\"Database main\"\n                  defaultMessage=\"Database main\"\n                />\n              </Message.Header>\n            </Message>\n            <Table celled padded columns=\"2\">\n              <Table.Body>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Database Location\"\n                      defaultMessage=\"Database Location\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.db_name}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Database Size\"\n                      defaultMessage=\"Database Size\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.database_size}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Total number of objects in the database\"\n                      defaultMessage=\"Total number of objects in the database\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.db_size}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Total number of objects in memory from all caches\"\n                      defaultMessage=\"Total number of objects in memory from all caches\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.cache_size}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Target number of objects in memory per cache\"\n                      defaultMessage=\"Target number of objects in memory per cache\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.cache_length}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Target memory size per cache in bytes\"\n                      defaultMessage=\"Target memory size per cache in bytes\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.cache_length_bytes}\n                  </Table.Cell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </Segment>\n          <Segment>\n            <Divider />\n\n            <Message>\n              <Message.Header>\n                <FormattedMessage\n                  id=\"Total number of objects in each cache\"\n                  defaultMessage=\"Total number of objects in each cache\"\n                />\n              </Message.Header>\n            </Message>\n            <Table celled padded>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>\n                    <FormattedMessage\n                      id=\"Cache Name\"\n                      defaultMessage=\"Cache Name\"\n                    />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <FormattedMessage\n                      id=\"Number of active objects\"\n                      defaultMessage=\"Number of active objects\"\n                    />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <FormattedMessage\n                      id=\"Total active and non-active objects\"\n                      defaultMessage=\"Total active and non-active objects\"\n                    />\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              {this.props.databaseInformation.cache_detail_length.map(\n                (item) => (\n                  <Table.Row>\n                    <Table.Cell>{item.connection}</Table.Cell>\n                    <Table.Cell>{item.ngsize}</Table.Cell>\n                    <Table.Cell>{item.size}</Table.Cell>\n                  </Table.Row>\n                ),\n              )}\n            </Table>\n          </Segment>\n        </Segment.Group>\n\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Link to=\"/controlpanel\" className=\"item\">\n                    <Icon\n                      name={backSVG}\n                      aria-label={this.props.intl.formatMessage(messages.back)}\n                      className=\"contents circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.back)}\n                    />\n                  </Link>\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    ) : null;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      databaseInformation: state.controlpanels.databaseinformation,\n      pathname: props.location.pathname,\n    }),\n    { getDatabaseInformation },\n  ),\n)(DatabaseInformation);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"Database Information","defaultMessage":"Database Information"},{"id":"The Database Manager allow you to view database status information","defaultMessage":"The Database Manager allow you to view database status information"},{"id":"Database main","defaultMessage":"Database main"},{"id":"Database Location","defaultMessage":"Database Location"},{"id":"Database Size","defaultMessage":"Database Size"},{"id":"Total number of objects in the database","defaultMessage":"Total number of objects in the database"},{"id":"Total number of objects in memory from all caches","defaultMessage":"Total number of objects in memory from all caches"},{"id":"Target number of objects in memory per cache","defaultMessage":"Target number of objects in memory per cache"},{"id":"Target memory size per cache in bytes","defaultMessage":"Target memory size per cache in bytes"},{"id":"Total number of objects in each cache","defaultMessage":"Total number of objects in each cache"},{"id":"Cache Name","defaultMessage":"Cache Name"},{"id":"Number of active objects","defaultMessage":"Number of active objects"},{"id":"Total active and non-active objects","defaultMessage":"Total active and non-active objects"}]}},"sourceType":"module","externalDependencies":[]}