{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-plotlycharts/src/Blocks/Treemap/Edit.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { SidebarPortal } from '@plone/volto/components';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport schema from './schema';\nimport TreemapView from './View';\nvar Edit = /*#__PURE__*/function (_Component) {\n  _inherits(Edit, _Component);\n  var _super = _createSuper(Edit);\n  function Edit() {\n    var _this;\n    _classCallCheck(this, Edit);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"getSchema\", function (schema) {\n      if (!_this.props.provider_data) return schema;\n      var provider_data = _this.props.provider_data || {};\n      var choices = Object.keys(provider_data).map(function (n) {\n        return [n, n];\n      });\n      var newSchema = JSON.parse(JSON.stringify(schema));\n      newSchema.properties.size_column.choices = choices;\n      newSchema.properties.label_column.choices = choices;\n      newSchema.properties.parent_column.choices = choices;\n      return newSchema;\n    });\n    return _this;\n  }\n  _createClass(Edit, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return __jsx(React.Fragment, null, __jsx(TreemapView, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      })), __jsx(SidebarPortal, {\n        selected: this.props.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, __jsx(InlineForm, {\n        schema: this.getSchema(schema),\n        title: schema.title,\n        onChangeField: function onChangeField(id, value) {\n          _this2.props.onChangeBlock(_this2.props.block, _objectSpread(_objectSpread({}, _this2.props.data), {}, _defineProperty({}, id, value)));\n        },\n        formData: this.props.data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n  return Edit;\n}(Component);\nexport default compose(connectToProviderData(function (props) {\n  return {\n    provider_url: props.data.url || props.data.provider_url\n  };\n}))(Edit);","map":{"version":3,"names":["React","Component","compose","SidebarPortal","InlineForm","connectToProviderData","schema","TreemapView","Edit","props","provider_data","choices","Object","keys","map","n","newSchema","JSON","parse","stringify","properties","size_column","label_column","parent_column","selected","getSchema","title","id","value","onChangeBlock","block","data","provider_url","url"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-plotlycharts/src/Blocks/Treemap/Edit.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { compose } from 'redux';\n\nimport { SidebarPortal } from '@plone/volto/components';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\n\nimport schema from './schema';\nimport TreemapView from './View';\n\nclass Edit extends Component {\n  getSchema = (schema) => {\n    if (!this.props.provider_data) return schema;\n    const provider_data = this.props.provider_data || {};\n\n    const choices = Object.keys(provider_data).map((n) => [n, n]);\n\n    const newSchema = JSON.parse(JSON.stringify(schema));\n    newSchema.properties.size_column.choices = choices;\n    newSchema.properties.label_column.choices = choices;\n    newSchema.properties.parent_column.choices = choices;\n    return newSchema;\n  };\n\n  render() {\n    return (\n      <>\n        <TreemapView {...this.props} />\n\n        <SidebarPortal selected={this.props.selected}>\n          <InlineForm\n            schema={this.getSchema(schema)}\n            title={schema.title}\n            onChangeField={(id, value) => {\n              this.props.onChangeBlock(this.props.block, {\n                ...this.props.data,\n                [id]: value,\n              });\n            }}\n            formData={this.props.data}\n          />\n        </SidebarPortal>\n      </>\n    );\n  }\n}\n\nexport default compose(\n  connectToProviderData((props) => ({\n    provider_url: props.data.url || props.data.provider_url,\n  })),\n)(Edit);\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,OAAO;AAE/B,SAASC,aAAa,QAAQ,yBAAyB;AACvD,OAAOC,UAAU,MAAM,gDAAgD;AACvE,SAASC,qBAAqB,QAAQ,+BAA+B;AAErE,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,WAAW,MAAM,QAAQ;AAAC,IAE3BC,IAAI;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,4DACI,UAACF,MAAM,EAAK;MACtB,IAAI,CAAC,MAAKG,KAAK,CAACC,aAAa,EAAE,OAAOJ,MAAM;MAC5C,IAAMI,aAAa,GAAG,MAAKD,KAAK,CAACC,aAAa,IAAI,CAAC,CAAC;MAEpD,IAAMC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACH,aAAa,CAAC,CAACI,GAAG,CAAC,UAACC,CAAC;QAAA,OAAK,CAACA,CAAC,EAAEA,CAAC,CAAC;MAAA,EAAC;MAE7D,IAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACb,MAAM,CAAC,CAAC;MACpDU,SAAS,CAACI,UAAU,CAACC,WAAW,CAACV,OAAO,GAAGA,OAAO;MAClDK,SAAS,CAACI,UAAU,CAACE,YAAY,CAACX,OAAO,GAAGA,OAAO;MACnDK,SAAS,CAACI,UAAU,CAACG,aAAa,CAACZ,OAAO,GAAGA,OAAO;MACpD,OAAOK,SAAS;IAClB,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA,OAED,kBAAS;MAAA;MACP,OACE,4BACE,MAAC,WAAW,eAAK,IAAI,CAACP,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAI,EAE/B,MAAC,aAAa;QAAC,QAAQ,EAAE,IAAI,CAACA,KAAK,CAACe,QAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC3C,MAAC,UAAU;QACT,MAAM,EAAE,IAAI,CAACC,SAAS,CAACnB,MAAM,CAAE;QAC/B,KAAK,EAAEA,MAAM,CAACoB,KAAM;QACpB,aAAa,EAAE,uBAACC,EAAE,EAAEC,KAAK,EAAK;UAC5B,MAAI,CAACnB,KAAK,CAACoB,aAAa,CAAC,MAAI,CAACpB,KAAK,CAACqB,KAAK,kCACpC,MAAI,CAACrB,KAAK,CAACsB,IAAI,2BACjBJ,EAAE,EAAGC,KAAK,GACX;QACJ,CAAE;QACF,QAAQ,EAAE,IAAI,CAACnB,KAAK,CAACsB,IAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAC1B,CACY,CACf;IAEP;EAAC;EAAA;AAAA,EAlCgB9B,SAAS;AAqC5B,eAAeC,OAAO,CACpBG,qBAAqB,CAAC,UAACI,KAAK;EAAA,OAAM;IAChCuB,YAAY,EAAEvB,KAAK,CAACsB,IAAI,CAACE,GAAG,IAAIxB,KAAK,CAACsB,IAAI,CAACC;EAC7C,CAAC;AAAA,CAAC,CAAC,CACJ,CAACxB,IAAI,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}