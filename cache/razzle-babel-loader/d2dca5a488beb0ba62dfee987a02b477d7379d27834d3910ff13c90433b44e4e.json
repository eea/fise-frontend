{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-block-style/src/Widgets/TextAlign.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport alignLeftSVG from '@plone/volto/icons/align-left.svg';\nimport alignRightSVG from '@plone/volto/icons/align-right.svg';\nimport alignJustifySVG from '@plone/volto/icons/align-justify.svg';\nimport alignCenterSVG from '@plone/volto/icons/align-center.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport { defineMessages, useIntl } from 'react-intl';\nexport var messages = defineMessages({\n  left: {\n    \"id\": \"Left\",\n    \"defaultMessage\": \"Left\"\n  },\n  right: {\n    \"id\": \"Right\",\n    \"defaultMessage\": \"Right\"\n  },\n  center: {\n    \"id\": \"Center\",\n    \"defaultMessage\": \"Center\"\n  },\n  justify: {\n    \"id\": \"Justify\",\n    \"defaultMessage\": \"Justify\"\n  },\n  '': {\n    \"id\": \"Clear selection\",\n    \"defaultMessage\": \"Clear selection\"\n  }\n});\nvar defaultActionsInfo = function defaultActionsInfo(_ref) {\n  var intl = _ref.intl;\n  return {\n    left: [alignLeftSVG, intl.formatMessage(messages.left)],\n    right: [alignRightSVG, intl.formatMessage(messages.right)],\n    center: [alignCenterSVG, intl.formatMessage(messages.center)],\n    justify: [alignJustifySVG, intl.formatMessage(messages.justify)],\n    '': [clearSVG, intl.formatMessage(messages[''])]\n  };\n};\nexport default _s(function (props) {\n  _s();\n  var intl = useIntl();\n  var onChange = props.onChange,\n    id = props.id,\n    _props$actions = props.actions,\n    actions = _props$actions === void 0 ? ['left', 'right', 'center', 'justify'] : _props$actions,\n    _props$actionsInfoMap = props.actionsInfoMap,\n    actionsInfoMap = _props$actionsInfoMap === void 0 ? {} : _props$actionsInfoMap,\n    value = props.value;\n  // add clear selection button to the actions mapping if it's not already present\n  if (actions[actions.length - 1] !== '') {\n    actions.push('');\n  }\n  var actionsInfo = _objectSpread(_objectSpread({}, defaultActionsInfo({\n    intl: intl\n  })), actionsInfoMap);\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"align-tools\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, actions.map(function (action, index) {\n    return __jsx(Button.Group, {\n      key: \"button-group-\".concat(action, \"-\").concat(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      compact: true,\n      active: value === action,\n      \"aria-label\": actionsInfo[action][1],\n      onClick: function onClick() {\n        onChange(id, action);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, __jsx(Icon, {\n      name: actionsInfo[action][0],\n      title: actionsInfo[action][1] || action,\n      size: \"24px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    })));\n  })));\n}, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});","map":{"version":3,"names":["React","Button","FormFieldWrapper","Icon","alignLeftSVG","alignRightSVG","alignJustifySVG","alignCenterSVG","clearSVG","defineMessages","useIntl","messages","left","right","center","justify","defaultActionsInfo","intl","formatMessage","props","onChange","id","actions","actionsInfoMap","value","length","push","actionsInfo","map","action","index"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-block-style/src/Widgets/TextAlign.jsx"],"sourcesContent":["import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\n\nimport alignLeftSVG from '@plone/volto/icons/align-left.svg';\nimport alignRightSVG from '@plone/volto/icons/align-right.svg';\nimport alignJustifySVG from '@plone/volto/icons/align-justify.svg';\nimport alignCenterSVG from '@plone/volto/icons/align-center.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport { defineMessages, useIntl } from 'react-intl';\n\nexport const messages = defineMessages({\n  left: {\n    id: 'Left',\n    defaultMessage: 'Left',\n  },\n  right: {\n    id: 'Right',\n    defaultMessage: 'Right',\n  },\n  center: {\n    id: 'Center',\n    defaultMessage: 'Center',\n  },\n  justify: {\n    id: 'Justify',\n    defaultMessage: 'Justify',\n  },\n  '': {\n    id: 'Clear selection',\n    defaultMessage: 'Clear selection',\n  },\n});\nconst defaultActionsInfo = ({ intl }) => ({\n  left: [alignLeftSVG, intl.formatMessage(messages.left)],\n  right: [alignRightSVG, intl.formatMessage(messages.right)],\n  center: [alignCenterSVG, intl.formatMessage(messages.center)],\n  justify: [alignJustifySVG, intl.formatMessage(messages.justify)],\n  '': [clearSVG, intl.formatMessage(messages[''])],\n});\n\nexport default (props) => {\n  const intl = useIntl();\n  const {\n    onChange,\n    id,\n    actions = ['left', 'right', 'center', 'justify'],\n    actionsInfoMap = {},\n    value,\n  } = props;\n  // add clear selection button to the actions mapping if it's not already present\n  if (actions[actions.length - 1] !== '') {\n    actions.push('');\n  }\n\n  const actionsInfo = {\n    ...defaultActionsInfo({ intl }),\n    ...actionsInfoMap,\n  };\n\n  return (\n    <FormFieldWrapper {...props}>\n      <div className=\"align-tools\">\n        {actions.map((action, index) => (\n          <Button.Group key={`button-group-${action}-${index}`}>\n            <Button\n              icon\n              basic\n              compact\n              active={value === action}\n              aria-label={actionsInfo[action][1]}\n              onClick={() => {\n                onChange(id, action);\n              }}\n            >\n              <Icon\n                name={actionsInfo[action][0]}\n                title={actionsInfo[action][1] || action}\n                size=\"24px\"\n              />\n            </Button>\n          </Button.Group>\n        ))}\n      </div>\n    </FormFieldWrapper>\n  );\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Left","defaultMessage":"Left"},{"id":"Right","defaultMessage":"Right"},{"id":"Center","defaultMessage":"Center"},{"id":"Justify","defaultMessage":"Justify"},{"id":"Clear selection","defaultMessage":"Clear selection"}]}},"sourceType":"module","externalDependencies":[]}