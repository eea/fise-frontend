{"ast":null,"code":"import _find from \"lodash/find\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Toolbar/More.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * More component.\n * @module components/manage/Toolbar/More\n */\n\nimport React, { Component } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nimport { Pluggable, Plug } from '@plone/volto/components/manage/Pluggable';\nimport { FormattedDate, Icon, Display, Workflow } from '@plone/volto/components';\nimport { applyWorkingCopy, createWorkingCopy, removeWorkingCopy } from '@plone/volto/actions';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport rightArrowSVG from '@plone/volto/icons/right-key.svg';\nimport userSVG from '@plone/volto/icons/user.svg';\nimport applySVG from '@plone/volto/icons/ready.svg';\nimport removeSVG from '@plone/volto/icons/circle-dismiss.svg';\nconst messages = defineMessages({\n  personalTools: {\n    \"id\": \"Personal tools\",\n    \"defaultMessage\": \"Personal tools\"\n  },\n  history: {\n    \"id\": \"History\",\n    \"defaultMessage\": \"History\"\n  },\n  sharing: {\n    \"id\": \"Sharing\",\n    \"defaultMessage\": \"Sharing\"\n  },\n  aliases: {\n    \"id\": \"URL Management\",\n    \"defaultMessage\": \"URL Management\"\n  },\n  ManageTranslations: {\n    \"id\": \"Manage Translations\",\n    \"defaultMessage\": \"Manage Translations\"\n  },\n  manageContent: {\n    \"id\": \"Manage content\\u2026\",\n    \"defaultMessage\": \"Manage content\\u2026\"\n  },\n  CreateWorkingCopy: {\n    \"id\": \"Create working copy\",\n    \"defaultMessage\": \"Create working copy\"\n  },\n  applyWorkingCopy: {\n    \"id\": \"Apply working copy\",\n    \"defaultMessage\": \"Apply working copy\"\n  },\n  removeWorkingCopy: {\n    \"id\": \"Remove working copy\",\n    \"defaultMessage\": \"Remove working copy\"\n  },\n  viewWorkingCopy: {\n    \"id\": \"View working copy\",\n    \"defaultMessage\": \"View working copy\"\n  },\n  workingAppliedTitle: {\n    \"id\": \"Changes applied.\",\n    \"defaultMessage\": \"Changes applied\"\n  },\n  workingCopyAppliedBy: {\n    \"id\": \"Made by {creator} on {date}. This is not a working copy anymore, but the main content.\",\n    \"defaultMessage\": \"Made by {creator} on {date}. This is not a working copy anymore, but the main content.\"\n  },\n  workingCopyRemovedTitle: {\n    \"id\": \"The working copy was discarded\",\n    \"defaultMessage\": \"The working copy was discarded\"\n  },\n  Unauthorized: {\n    \"id\": \"Unauthorized\",\n    \"defaultMessage\": \"Unauthorized\"\n  },\n  workingCopyErrorUnauthorized: {\n    \"id\": \"workingCopyErrorUnauthorized\",\n    \"defaultMessage\": \"You are not authorized to perform this operation.\"\n  },\n  Error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  workingCopyGenericError: {\n    \"id\": \"workingCopyGenericError\",\n    \"defaultMessage\": \"An error occurred while performing this operation.\"\n  }\n});\n\n/**\n * More container class.\n * @class More\n * @extends Component\n */\nclass More extends Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"state\", {\n      openManageTranslations: false,\n      pushed: false\n    });\n    _defineProperty(this, \"push\", selector => {\n      this.setState(() => ({\n        pushed: true\n      }));\n      this.props.loadComponent(selector);\n      document.removeEventListener('mousedown', this.handleClickOutside, false);\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    let erroredAction = '';\n    if (prevProps.workingCopy.apply.loading && this.props.workingCopy.apply.error) {\n      erroredAction = 'apply';\n    } else if (prevProps.workingCopy.create.loading && this.props.workingCopy.create.error) {\n      erroredAction = 'create';\n    } else if (prevProps.workingCopy.remove.loading && this.props.workingCopy.remove.error) {\n      erroredAction = 'remove';\n    }\n    if (erroredAction) {\n      const errorStatus = this.props.workingCopy[erroredAction].error.status;\n      if (errorStatus === 401 || errorStatus === 403) {\n        toast.error(__jsx(Toast, {\n          error: true,\n          title: this.props.intl.formatMessage(messages.Unauthorized),\n          content: this.props.intl.formatMessage(messages.workingCopyErrorUnauthorized),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }\n        }), {\n          toastId: 'workingCopyErrorUnauthorized',\n          autoClose: 10000\n        });\n      } else {\n        toast.error(__jsx(Toast, {\n          error: true,\n          title: this.props.intl.formatMessage(messages.Error),\n          content: this.props.intl.formatMessage(messages.workingCopyGenericError),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 11\n          }\n        }), {\n          toastId: 'workingCopyGenericError',\n          autoClose: 10000\n        });\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const path = getBaseUrl(this.props.pathname);\n    const editAction = _find(this.props.actions.object, {\n      id: 'edit'\n    });\n    const historyAction = _find(this.props.actions.object, {\n      id: 'history'\n    });\n    const sharingAction = _find(this.props.actions.object, {\n      id: 'local_roles'\n    });\n    const aliasesAction = _find(this.props.actions.object_buttons, {\n      id: 'redirection'\n    });\n    const {\n      content,\n      intl\n    } = this.props;\n    const dateOptions = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return __jsx(\"div\", {\n      className: \"menu-more pastanaga-menu\",\n      style: {\n        flex: this.props.theToolbar.current ? `0 0 ${this.props.theToolbar.current.getBoundingClientRect().width}px` : null\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }\n    }, __jsx(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, this.props.content.title), __jsx(\"button\", {\n      className: \"more-user\",\n      \"aria-label\": this.props.intl.formatMessage(messages.personalTools),\n      onClick: () => this.push('personalTools'),\n      tabIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, __jsx(Icon, {\n      name: userSVG,\n      size: \"30px\",\n      title: this.props.intl.formatMessage(messages.personalTools),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }))), __jsx(\"div\", {\n      className: \"pastanaga-menu-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }\n    }, __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }, __jsx(Pluggable, {\n      name: \"toolbar-more-menu-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }), __jsx(Plug, {\n      pluggable: \"toolbar-more-menu-list\",\n      id: \"state\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, this.props.content['@type'] !== 'Plone Site' &&\n    // Plone Site does not have workflow\n    __jsx(\"li\", {\n      className: \"state-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, __jsx(Workflow, {\n      pathname: path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }\n    }))), __jsx(Plug, {\n      pluggable: \"toolbar-more-menu-list\",\n      id: \"view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, this.props.content['@type'] !== 'Plone Site' &&\n    // Plone Site does not have view (yet)\n    __jsx(\"li\", {\n      className: \"display-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, editAction && __jsx(Display, {\n      pathname: path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 34\n      }\n    }))), __jsx(Plug, {\n      pluggable: \"toolbar-more-menu-list\",\n      id: \"history\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, this.props.content['@type'] !== 'Plone Site' &&\n    // Plone Site does not have history (yet)\n    __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      to: `${path}/historyview`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, __jsx(\"span\", {\n      className: \"pastanaga-menu-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 23\n      }\n    }, (historyAction === null || historyAction === void 0 ? void 0 : historyAction.title) || this.props.intl.formatMessage(messages.history)), __jsx(\"span\", {\n      className: \"pastanaga-menu-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 23\n      }\n    })), __jsx(Icon, {\n      name: rightArrowSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }\n    })))), __jsx(Plug, {\n      pluggable: \"toolbar-more-menu-list\",\n      id: \"sharing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }\n    }, sharingAction && __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      to: `${path}/sharing`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 19\n      }\n    }, this.props.intl.formatMessage(messages.sharing), __jsx(Icon, {\n      name: rightArrowSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }\n    })))), __jsx(Plug, {\n      pluggable: \"toolbar-more-menu-list\",\n      id: \"aliases\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }, aliasesAction && __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      to: `${path}/aliases`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 19\n      }\n    }, this.props.intl.formatMessage(messages.aliases), __jsx(Icon, {\n      name: rightArrowSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 21\n      }\n    })))))), __jsx(Pluggable, {\n      name: \"toolbar-more-manage-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }\n    }, pluggables => __jsx(React.Fragment, null, pluggables.length > 0 && __jsx(React.Fragment, null, __jsx(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 19\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }\n    }, this.props.intl.formatMessage(messages.manageContent))), __jsx(\"div\", {\n      className: \"pastanaga-menu-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 19\n      }\n    }, __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }\n    }, pluggables.map(p => __jsx(React.Fragment, null, p()))))))), config.settings.hasWorkingCopySupport && this.props.content['@type'] !== 'Plone Site' && __jsx(React.Fragment, null, !this.props.content.working_copy && __jsx(Plug, {\n      pluggable: \"toolbar-more-manage-content\",\n      id: \"workingcopy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 19\n      }\n    }, __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.CreateWorkingCopy),\n      onClick: () => {\n        this.props.createWorkingCopy(path).then(response => {\n          this.props.history.push(flattenToAppURL(response['@id']));\n          this.props.closeMenu();\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }\n    }, this.props.intl.formatMessage(messages.CreateWorkingCopy), __jsx(Icon, {\n      name: rightArrowSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 23\n      }\n    })))), this.props.content.working_copy && this.props.content.working_copy_of && __jsx(Plug, {\n      pluggable: \"toolbar-more-manage-content\",\n      id: \"workingcopy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 19\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 21\n      }\n    }, __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.applyWorkingCopy),\n      onClick: () => {\n        this.props.applyWorkingCopy(path).then(response => {\n          var _content$working_copy, _content$working_copy2;\n          this.props.history.push(flattenToAppURL(this.props.content.working_copy_of['@id']));\n          this.props.closeMenu();\n          toast.info(__jsx(Toast, {\n            info: true,\n            title: intl.formatMessage(messages.workingAppliedTitle),\n            content: intl.formatMessage(messages.workingCopyAppliedBy, {\n              creator: (_content$working_copy = content.working_copy) === null || _content$working_copy === void 0 ? void 0 : _content$working_copy.creator_name,\n              date: __jsx(FormattedDate, {\n                date: (_content$working_copy2 = content.working_copy) === null || _content$working_copy2 === void 0 ? void 0 : _content$working_copy2.created,\n                format: dateOptions,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 39\n                }\n              })\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 31\n            }\n          }), {\n            toastId: 'workingcopyapplyinfo',\n            autoClose: 10000\n          });\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 23\n      }\n    }, this.props.intl.formatMessage(messages.applyWorkingCopy), __jsx(Icon, {\n      name: applySVG,\n      size: \"24px\",\n      title: this.props.intl.formatMessage(messages.applyWorkingCopy),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 25\n      }\n    }))), __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 21\n      }\n    }, __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.removeWorkingCopy),\n      onClick: () => {\n        this.props.removeWorkingCopy(path).then(response => {\n          this.props.history.push(flattenToAppURL(this.props.content.working_copy_of['@id']));\n          this.props.closeMenu();\n          toast.info(__jsx(Toast, {\n            info: true,\n            title: intl.formatMessage(messages.workingCopyRemovedTitle),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 33\n            }\n          }), {\n            toastId: 'workingcopyremovednotice',\n            autoClose: 10000\n          });\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 23\n      }\n    }, this.props.intl.formatMessage(messages.removeWorkingCopy), __jsx(Icon, {\n      name: removeSVG,\n      size: \"24px\",\n      color: \"#e40166\",\n      title: this.props.intl.formatMessage(messages.removeWorkingCopy),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 25\n      }\n    })))), this.props.content.working_copy && !this.props.content.working_copy_of && __jsx(Plug, {\n      pluggable: \"toolbar-more-manage-content\",\n      id: \"workingcopy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 19\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 21\n      }\n    }, __jsx(Link, {\n      to: flattenToAppURL(this.props.content.working_copy['@id']),\n      onClick: () => this.props.closeMenu(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 23\n      }\n    }, this.props.intl.formatMessage(messages.viewWorkingCopy), __jsx(Icon, {\n      name: rightArrowSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 25\n      }\n    }))))), editAction && config.settings.isMultilingual && __jsx(Plug, {\n      pluggable: \"toolbar-more-manage-content\",\n      id: \"multilingual\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      to: `${path}/manage-translations`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 15\n      }\n    }, this.props.intl.formatMessage(messages.ManageTranslations), __jsx(Icon, {\n      name: rightArrowSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 17\n      }\n    })))));\n  }\n}\n_defineProperty(More, \"propTypes\", {\n  actions: PropTypes.shape({\n    object: PropTypes.arrayOf(PropTypes.object),\n    object_buttons: PropTypes.arrayOf(PropTypes.object),\n    user: PropTypes.arrayOf(PropTypes.object)\n  }),\n  pathname: PropTypes.string.isRequired,\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    '@type': PropTypes.string,\n    is_folderish: PropTypes.bool,\n    review_state: PropTypes.string\n  }),\n  loadComponent: PropTypes.func.isRequired,\n  closeMenu: PropTypes.func.isRequired\n});\n_defineProperty(More, \"defaultProps\", {\n  actions: null,\n  content: null\n});\nexport default compose(injectIntl, withRouter, connect((state, props) => ({\n  actions: state.actions.actions,\n  pathname: props.pathname,\n  content: state.content.data,\n  lang: state.intl.locale,\n  workingCopy: state.workingCopy\n}), {\n  applyWorkingCopy,\n  createWorkingCopy,\n  removeWorkingCopy\n}))(More);","map":{"version":3,"names":["React","Component","defineMessages","injectIntl","PropTypes","connect","compose","Link","withRouter","toast","Toast","Pluggable","Plug","FormattedDate","Icon","Display","Workflow","applyWorkingCopy","createWorkingCopy","removeWorkingCopy","flattenToAppURL","getBaseUrl","config","rightArrowSVG","userSVG","applySVG","removeSVG","messages","personalTools","history","sharing","aliases","ManageTranslations","manageContent","CreateWorkingCopy","viewWorkingCopy","workingAppliedTitle","workingCopyAppliedBy","workingCopyRemovedTitle","Unauthorized","workingCopyErrorUnauthorized","Error","workingCopyGenericError","More","openManageTranslations","pushed","selector","setState","props","loadComponent","document","removeEventListener","handleClickOutside","componentDidUpdate","prevProps","prevState","erroredAction","workingCopy","apply","loading","error","create","remove","errorStatus","status","intl","formatMessage","toastId","autoClose","render","path","pathname","editAction","actions","object","id","historyAction","sharingAction","aliasesAction","object_buttons","content","dateOptions","year","month","day","flex","theToolbar","current","getBoundingClientRect","width","title","push","pluggables","length","map","p","settings","hasWorkingCopySupport","working_copy","then","response","closeMenu","working_copy_of","info","creator","creator_name","date","created","isMultilingual","shape","arrayOf","user","string","isRequired","is_folderish","bool","review_state","func","state","data","lang","locale"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Toolbar/More.jsx"],"sourcesContent":["/**\n * More component.\n * @module components/manage/Toolbar/More\n */\n\nimport React, { Component } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { find } from 'lodash';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nimport { Pluggable, Plug } from '@plone/volto/components/manage/Pluggable';\nimport {\n  FormattedDate,\n  Icon,\n  Display,\n  Workflow,\n} from '@plone/volto/components';\nimport {\n  applyWorkingCopy,\n  createWorkingCopy,\n  removeWorkingCopy,\n} from '@plone/volto/actions';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nimport rightArrowSVG from '@plone/volto/icons/right-key.svg';\nimport userSVG from '@plone/volto/icons/user.svg';\nimport applySVG from '@plone/volto/icons/ready.svg';\nimport removeSVG from '@plone/volto/icons/circle-dismiss.svg';\n\nconst messages = defineMessages({\n  personalTools: {\n    id: 'Personal tools',\n    defaultMessage: 'Personal tools',\n  },\n  history: {\n    id: 'History',\n    defaultMessage: 'History',\n  },\n  sharing: {\n    id: 'Sharing',\n    defaultMessage: 'Sharing',\n  },\n  aliases: {\n    id: 'URL Management',\n    defaultMessage: 'URL Management',\n  },\n  ManageTranslations: {\n    id: 'Manage Translations',\n    defaultMessage: 'Manage Translations',\n  },\n  manageContent: {\n    id: 'Manage content…',\n    defaultMessage: 'Manage content…',\n  },\n  CreateWorkingCopy: {\n    id: 'Create working copy',\n    defaultMessage: 'Create working copy',\n  },\n  applyWorkingCopy: {\n    id: 'Apply working copy',\n    defaultMessage: 'Apply working copy',\n  },\n  removeWorkingCopy: {\n    id: 'Remove working copy',\n    defaultMessage: 'Remove working copy',\n  },\n  viewWorkingCopy: {\n    id: 'View working copy',\n    defaultMessage: 'View working copy',\n  },\n  workingAppliedTitle: {\n    id: 'Changes applied.',\n    defaultMessage: 'Changes applied',\n  },\n  workingCopyAppliedBy: {\n    id:\n      'Made by {creator} on {date}. This is not a working copy anymore, but the main content.',\n    defaultMessage:\n      'Made by {creator} on {date}. This is not a working copy anymore, but the main content.',\n  },\n  workingCopyRemovedTitle: {\n    id: 'The working copy was discarded',\n    defaultMessage: 'The working copy was discarded',\n  },\n  Unauthorized: {\n    id: 'Unauthorized',\n    defaultMessage: 'Unauthorized',\n  },\n  workingCopyErrorUnauthorized: {\n    id: 'workingCopyErrorUnauthorized',\n    defaultMessage: 'You are not authorized to perform this operation.',\n  },\n  Error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  workingCopyGenericError: {\n    id: 'workingCopyGenericError',\n    defaultMessage: 'An error occurred while performing this operation.',\n  },\n});\n\n/**\n * More container class.\n * @class More\n * @extends Component\n */\nclass More extends Component {\n  static propTypes = {\n    actions: PropTypes.shape({\n      object: PropTypes.arrayOf(PropTypes.object),\n      object_buttons: PropTypes.arrayOf(PropTypes.object),\n      user: PropTypes.arrayOf(PropTypes.object),\n    }),\n    pathname: PropTypes.string.isRequired,\n    content: PropTypes.shape({\n      title: PropTypes.string,\n      '@type': PropTypes.string,\n      is_folderish: PropTypes.bool,\n      review_state: PropTypes.string,\n    }),\n    loadComponent: PropTypes.func.isRequired,\n    closeMenu: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    actions: null,\n    content: null,\n  };\n  state = {\n    openManageTranslations: false,\n    pushed: false,\n  };\n\n  push = (selector) => {\n    this.setState(() => ({\n      pushed: true,\n    }));\n    this.props.loadComponent(selector);\n    document.removeEventListener('mousedown', this.handleClickOutside, false);\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    let erroredAction = '';\n    if (\n      prevProps.workingCopy.apply.loading &&\n      this.props.workingCopy.apply.error\n    ) {\n      erroredAction = 'apply';\n    } else if (\n      prevProps.workingCopy.create.loading &&\n      this.props.workingCopy.create.error\n    ) {\n      erroredAction = 'create';\n    } else if (\n      prevProps.workingCopy.remove.loading &&\n      this.props.workingCopy.remove.error\n    ) {\n      erroredAction = 'remove';\n    }\n\n    if (erroredAction) {\n      const errorStatus = this.props.workingCopy[erroredAction].error.status;\n      if (errorStatus === 401 || errorStatus === 403) {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.Unauthorized)}\n            content={this.props.intl.formatMessage(\n              messages.workingCopyErrorUnauthorized,\n            )}\n          />,\n          {\n            toastId: 'workingCopyErrorUnauthorized',\n            autoClose: 10000,\n          },\n        );\n      } else {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.Error)}\n            content={this.props.intl.formatMessage(\n              messages.workingCopyGenericError,\n            )}\n          />,\n          {\n            toastId: 'workingCopyGenericError',\n            autoClose: 10000,\n          },\n        );\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const path = getBaseUrl(this.props.pathname);\n    const editAction = find(this.props.actions.object, { id: 'edit' });\n    const historyAction = find(this.props.actions.object, { id: 'history' });\n    const sharingAction = find(this.props.actions.object, {\n      id: 'local_roles',\n    });\n\n    const aliasesAction = find(this.props.actions.object_buttons, {\n      id: 'redirection',\n    });\n    const { content, intl } = this.props;\n\n    const dateOptions = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    };\n\n    return (\n      <div\n        className=\"menu-more pastanaga-menu\"\n        style={{\n          flex: this.props.theToolbar.current\n            ? `0 0 ${\n                this.props.theToolbar.current.getBoundingClientRect().width\n              }px`\n            : null,\n        }}\n      >\n        <header>\n          <h2>{this.props.content.title}</h2>\n          <button\n            className=\"more-user\"\n            aria-label={this.props.intl.formatMessage(messages.personalTools)}\n            onClick={() => this.push('personalTools')}\n            tabIndex={0}\n          >\n            <Icon\n              name={userSVG}\n              size=\"30px\"\n              title={this.props.intl.formatMessage(messages.personalTools)}\n            />\n          </button>\n        </header>\n        <div className=\"pastanaga-menu-list\">\n          <ul>\n            <Pluggable name=\"toolbar-more-menu-list\" />\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"state\">\n              {this.props.content['@type'] !== 'Plone Site' && (\n                // Plone Site does not have workflow\n                <li className=\"state-select\">\n                  <Workflow pathname={path} />\n                </li>\n              )}\n            </Plug>\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"view\">\n              {this.props.content['@type'] !== 'Plone Site' && (\n                // Plone Site does not have view (yet)\n                <li className=\"display-select\">\n                  {editAction && <Display pathname={path} />}\n                </li>\n              )}\n            </Plug>\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"history\">\n              {this.props.content['@type'] !== 'Plone Site' && (\n                // Plone Site does not have history (yet)\n                <li>\n                  <Link to={`${path}/historyview`}>\n                    <div>\n                      <span className=\"pastanaga-menu-label\">\n                        {historyAction?.title ||\n                          this.props.intl.formatMessage(messages.history)}\n                      </span>\n                      <span className=\"pastanaga-menu-value\" />\n                    </div>\n                    <Icon name={rightArrowSVG} size=\"24px\" />\n                  </Link>\n                </li>\n              )}\n            </Plug>\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"sharing\">\n              {sharingAction && (\n                <li>\n                  <Link to={`${path}/sharing`}>\n                    {this.props.intl.formatMessage(messages.sharing)}\n                    <Icon name={rightArrowSVG} size=\"24px\" />\n                  </Link>\n                </li>\n              )}\n            </Plug>\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"aliases\">\n              {aliasesAction && (\n                <li>\n                  <Link to={`${path}/aliases`}>\n                    {this.props.intl.formatMessage(messages.aliases)}\n                    <Icon name={rightArrowSVG} size=\"24px\" />\n                  </Link>\n                </li>\n              )}\n            </Plug>\n          </ul>\n        </div>\n        <Pluggable name=\"toolbar-more-manage-content\">\n          {(pluggables) => (\n            <>\n              {pluggables.length > 0 && (\n                <>\n                  <header>\n                    <h2>\n                      {this.props.intl.formatMessage(messages.manageContent)}\n                    </h2>\n                  </header>\n                  <div className=\"pastanaga-menu-list\">\n                    <ul>\n                      {pluggables.map((p) => (\n                        <>{p()}</>\n                      ))}\n                    </ul>\n                  </div>\n                </>\n              )}\n            </>\n          )}\n        </Pluggable>\n        {config.settings.hasWorkingCopySupport &&\n          this.props.content['@type'] !== 'Plone Site' && (\n            <>\n              {!this.props.content.working_copy && (\n                <Plug pluggable=\"toolbar-more-manage-content\" id=\"workingcopy\">\n                  <li>\n                    <button\n                      aria-label={this.props.intl.formatMessage(\n                        messages.CreateWorkingCopy,\n                      )}\n                      onClick={() => {\n                        this.props.createWorkingCopy(path).then((response) => {\n                          this.props.history.push(\n                            flattenToAppURL(response['@id']),\n                          );\n                          this.props.closeMenu();\n                        });\n                      }}\n                    >\n                      {this.props.intl.formatMessage(\n                        messages.CreateWorkingCopy,\n                      )}\n\n                      <Icon name={rightArrowSVG} size=\"24px\" />\n                    </button>\n                  </li>\n                </Plug>\n              )}\n              {this.props.content.working_copy &&\n                this.props.content.working_copy_of && (\n                  <Plug\n                    pluggable=\"toolbar-more-manage-content\"\n                    id=\"workingcopy\"\n                  >\n                    <li>\n                      <button\n                        aria-label={this.props.intl.formatMessage(\n                          messages.applyWorkingCopy,\n                        )}\n                        onClick={() => {\n                          this.props.applyWorkingCopy(path).then((response) => {\n                            this.props.history.push(\n                              flattenToAppURL(\n                                this.props.content.working_copy_of['@id'],\n                              ),\n                            );\n                            this.props.closeMenu();\n                            toast.info(\n                              <Toast\n                                info\n                                title={intl.formatMessage(\n                                  messages.workingAppliedTitle,\n                                )}\n                                content={intl.formatMessage(\n                                  messages.workingCopyAppliedBy,\n                                  {\n                                    creator: content.working_copy?.creator_name,\n                                    date: (\n                                      <FormattedDate\n                                        date={content.working_copy?.created}\n                                        format={dateOptions}\n                                      />\n                                    ),\n                                  },\n                                )}\n                              />,\n                              {\n                                toastId: 'workingcopyapplyinfo',\n                                autoClose: 10000,\n                              },\n                            );\n                          });\n                        }}\n                      >\n                        {this.props.intl.formatMessage(\n                          messages.applyWorkingCopy,\n                        )}\n\n                        <Icon\n                          name={applySVG}\n                          size=\"24px\"\n                          title={this.props.intl.formatMessage(\n                            messages.applyWorkingCopy,\n                          )}\n                        />\n                      </button>\n                    </li>\n                    <li>\n                      <button\n                        aria-label={this.props.intl.formatMessage(\n                          messages.removeWorkingCopy,\n                        )}\n                        onClick={() => {\n                          this.props\n                            .removeWorkingCopy(path)\n                            .then((response) => {\n                              this.props.history.push(\n                                flattenToAppURL(\n                                  this.props.content.working_copy_of['@id'],\n                                ),\n                              );\n                              this.props.closeMenu();\n                              toast.info(\n                                <Toast\n                                  info\n                                  title={intl.formatMessage(\n                                    messages.workingCopyRemovedTitle,\n                                  )}\n                                />,\n                                {\n                                  toastId: 'workingcopyremovednotice',\n                                  autoClose: 10000,\n                                },\n                              );\n                            });\n                        }}\n                      >\n                        {this.props.intl.formatMessage(\n                          messages.removeWorkingCopy,\n                        )}\n\n                        <Icon\n                          name={removeSVG}\n                          size=\"24px\"\n                          color=\"#e40166\"\n                          title={this.props.intl.formatMessage(\n                            messages.removeWorkingCopy,\n                          )}\n                        />\n                      </button>\n                    </li>\n                  </Plug>\n                )}\n              {this.props.content.working_copy &&\n                !this.props.content.working_copy_of && (\n                  <Plug\n                    pluggable=\"toolbar-more-manage-content\"\n                    id=\"workingcopy\"\n                  >\n                    <li>\n                      <Link\n                        to={flattenToAppURL(\n                          this.props.content.working_copy['@id'],\n                        )}\n                        onClick={() => this.props.closeMenu()}\n                      >\n                        {this.props.intl.formatMessage(\n                          messages.viewWorkingCopy,\n                        )}\n                        <Icon name={rightArrowSVG} size=\"24px\" />\n                      </Link>\n                    </li>\n                  </Plug>\n                )}\n            </>\n          )}\n        {editAction && config.settings.isMultilingual && (\n          <Plug pluggable=\"toolbar-more-manage-content\" id=\"multilingual\">\n            <li>\n              <Link to={`${path}/manage-translations`}>\n                {this.props.intl.formatMessage(messages.ManageTranslations)}\n\n                <Icon name={rightArrowSVG} size=\"24px\" />\n              </Link>\n            </li>\n          </Plug>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  withRouter,\n  connect(\n    (state, props) => ({\n      actions: state.actions.actions,\n      pathname: props.pathname,\n      content: state.content.data,\n      lang: state.intl.locale,\n      workingCopy: state.workingCopy,\n    }),\n    { applyWorkingCopy, createWorkingCopy, removeWorkingCopy },\n  ),\n)(More);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Personal tools","defaultMessage":"Personal tools"},{"id":"History","defaultMessage":"History"},{"id":"Sharing","defaultMessage":"Sharing"},{"id":"URL Management","defaultMessage":"URL Management"},{"id":"Manage Translations","defaultMessage":"Manage Translations"},{"id":"Manage content…","defaultMessage":"Manage content…"},{"id":"Create working copy","defaultMessage":"Create working copy"},{"id":"Apply working copy","defaultMessage":"Apply working copy"},{"id":"Remove working copy","defaultMessage":"Remove working copy"},{"id":"View working copy","defaultMessage":"View working copy"},{"id":"Changes applied.","defaultMessage":"Changes applied"},{"id":"Made by {creator} on {date}. This is not a working copy anymore, but the main content.","defaultMessage":"Made by {creator} on {date}. This is not a working copy anymore, but the main content."},{"id":"The working copy was discarded","defaultMessage":"The working copy was discarded"},{"id":"Unauthorized","defaultMessage":"Unauthorized"},{"id":"workingCopyErrorUnauthorized","defaultMessage":"You are not authorized to perform this operation."},{"id":"Error","defaultMessage":"Error"},{"id":"workingCopyGenericError","defaultMessage":"An error occurred while performing this operation."}]}},"sourceType":"module","externalDependencies":[]}