{"ast":null,"code":"/**\n * Types actions.\n * @module actions/types/types\n */\n\nimport { GET_TYPES } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Get types function.\n * @function getTypes\n * @param {string} url Content url.\n * @returns {Object} Get types action.\n */\nexport function getTypes(url) {\n  return function (dispatch, getState) {\n    if (getState().userSession.token) {\n      dispatch({\n        type: GET_TYPES,\n        request: {\n          op: 'get',\n          path: \"\".concat(url, \"/@types\")\n        }\n      });\n    }\n  };\n}","map":{"version":3,"names":["GET_TYPES","getTypes","url","dispatch","getState","userSession","token","type","request","op","path"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/actions/types/types.js"],"sourcesContent":["/**\n * Types actions.\n * @module actions/types/types\n */\n\nimport { GET_TYPES } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Get types function.\n * @function getTypes\n * @param {string} url Content url.\n * @returns {Object} Get types action.\n */\nexport function getTypes(url) {\n  return (dispatch, getState) => {\n    if (getState().userSession.token) {\n      dispatch({\n        type: GET_TYPES,\n        request: {\n          op: 'get',\n          path: `${url}/@types`,\n        },\n      });\n    }\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,QAAQ,oCAAoC;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQ,CAACC,GAAG,EAAE;EAC5B,OAAO,UAACC,QAAQ,EAAEC,QAAQ,EAAK;IAC7B,IAAIA,QAAQ,EAAE,CAACC,WAAW,CAACC,KAAK,EAAE;MAChCH,QAAQ,CAAC;QACPI,IAAI,EAAEP,SAAS;QACfQ,OAAO,EAAE;UACPC,EAAE,EAAE,KAAK;UACTC,IAAI,YAAKR,GAAG;QACd;MACF,CAAC,CAAC;IACJ;EACF,CAAC;AACH"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}