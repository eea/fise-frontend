{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/packages/volto-slate/src/editor/ui/Toolbar.jsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\nimport { Portal } from 'react-portal';\nimport { useSlate } from 'slate-react';\nimport Separator from './Separator';\nimport BasicToolbar from './BasicToolbar';\nimport { Editor } from 'slate';\nimport { ReactEditor } from 'slate-react';\nconst Toolbar = ({\n  elementType,\n  enableExpando = false,\n  toggleButton,\n  className,\n  children,\n  show = true\n}) => {\n  const ref = useRef();\n  const editor = useSlate();\n  useEffect(() => {\n    const el = ref.current;\n    if ((children || []).length === 0) {\n      el.removeAttribute('style');\n      return;\n    }\n    if (!show) {\n      el.removeAttribute('style');\n      return;\n    }\n    const {\n      selection\n    } = editor;\n    // const savedSelection = editor.getSavedSelection();\n    if (!selection) {\n      el.removeAttribute('style');\n      return;\n    }\n    if (editor.isSidebarOpen) {\n      el.removeAttribute('style');\n      return;\n    }\n    let rect;\n    if (elementType) {\n      const [element] = Editor.nodes(editor, {\n        at: editor.selection || editor.getSavedSelection(),\n        match: n => n.type === elementType\n      });\n      if (!element) {\n        el.removeAttribute('style');\n        return;\n      }\n      const [n] = element;\n      const domEl = ReactEditor.toDOMNode(editor, n);\n      rect = domEl.getBoundingClientRect();\n    } else {\n      const domSelection = window.getSelection();\n      if (domSelection.rangeCount < 1) {\n        // don't do anything here, this happens when opening a focus-stealing\n        // component, in which case we actually want to keep the toolbar open\n        // See\n        // https://stackoverflow.com/questions/22935320/uncaught-indexsizeerror-failed-to-execute-getrangeat-on-selection-0-is-not\n        return;\n      }\n      const domRange = domSelection.getRangeAt(0);\n      rect = domRange.getBoundingClientRect();\n    }\n    el.style.opacity = 1;\n    el.style.top = `${rect.top + window.pageYOffset - el.offsetHeight - 6}px`;\n    el.style.left = `${Math.max(rect.left + window.pageXOffset - el.offsetWidth / 2 + rect.width / 2, 0 // if the left edge of the toolbar should be otherwise offscreen\n    )}px`;\n  });\n  return __jsx(Portal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(BasicToolbar, {\n    className: `slate-inline-toolbar ${className}`,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, children, enableExpando && toggleButton && __jsx(React.Fragment, null, __jsx(Separator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), toggleButton)));\n};\nexport default Toolbar;","map":{"version":3,"names":["React","useRef","useEffect","Portal","useSlate","Separator","BasicToolbar","Editor","ReactEditor","Toolbar","elementType","enableExpando","toggleButton","className","children","show","ref","editor","el","current","length","removeAttribute","selection","isSidebarOpen","rect","element","nodes","at","getSavedSelection","match","n","type","domEl","toDOMNode","getBoundingClientRect","domSelection","window","getSelection","rangeCount","domRange","getRangeAt","style","opacity","top","pageYOffset","offsetHeight","left","Math","max","pageXOffset","offsetWidth","width"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/packages/volto-slate/src/editor/ui/Toolbar.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Portal } from 'react-portal';\nimport { useSlate } from 'slate-react';\nimport Separator from './Separator';\nimport BasicToolbar from './BasicToolbar';\nimport { Editor } from 'slate';\nimport { ReactEditor } from 'slate-react';\n\nconst Toolbar = ({\n  elementType,\n  enableExpando = false,\n  toggleButton,\n  className,\n  children,\n  show = true,\n}) => {\n  const ref = useRef();\n  const editor = useSlate();\n\n  useEffect(() => {\n    const el = ref.current;\n\n    if ((children || []).length === 0) {\n      el.removeAttribute('style');\n      return;\n    }\n\n    if (!show) {\n      el.removeAttribute('style');\n      return;\n    }\n\n    const { selection } = editor;\n    // const savedSelection = editor.getSavedSelection();\n    if (!selection) {\n      el.removeAttribute('style');\n      return;\n    }\n\n    if (editor.isSidebarOpen) {\n      el.removeAttribute('style');\n      return;\n    }\n\n    let rect;\n    if (elementType) {\n      const [element] = Editor.nodes(editor, {\n        at: editor.selection || editor.getSavedSelection(),\n        match: (n) => n.type === elementType,\n      });\n\n      if (!element) {\n        el.removeAttribute('style');\n        return;\n      }\n\n      const [n] = element;\n      const domEl = ReactEditor.toDOMNode(editor, n);\n\n      rect = domEl.getBoundingClientRect();\n    } else {\n      const domSelection = window.getSelection();\n      if (domSelection.rangeCount < 1) {\n        // don't do anything here, this happens when opening a focus-stealing\n        // component, in which case we actually want to keep the toolbar open\n        // See\n        // https://stackoverflow.com/questions/22935320/uncaught-indexsizeerror-failed-to-execute-getrangeat-on-selection-0-is-not\n        return;\n      }\n      const domRange = domSelection.getRangeAt(0);\n      rect = domRange.getBoundingClientRect();\n    }\n\n    el.style.opacity = 1;\n    el.style.top = `${rect.top + window.pageYOffset - el.offsetHeight - 6}px`;\n    el.style.left = `${Math.max(\n      rect.left + window.pageXOffset - el.offsetWidth / 2 + rect.width / 2,\n      0, // if the left edge of the toolbar should be otherwise offscreen\n    )}px`;\n  });\n\n  return (\n    <Portal>\n      <BasicToolbar className={`slate-inline-toolbar ${className}`} ref={ref}>\n        {children}\n        {enableExpando && toggleButton && (\n          <>\n            <Separator />\n            {toggleButton}\n          </>\n        )}\n      </BasicToolbar>\n    </Portal>\n  );\n};\n\nexport default Toolbar;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}