{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";\nimport { jsx } from 'slate-hyperscript';\nimport { LINK } from 'volto-slate/constants';\nimport { deserialize } from 'volto-slate/editor/deserialize';\n// import { Editor } from 'slate';\n\n/**\n * @param {HTMLAnchorElement} aEl\n */\nconst hasValidTarget = aEl => {\n  return aEl.hasAttribute('target') && ['_blank', '_self', '_parent', '_top'].includes(aEl.getAttribute('target'));\n};\n\n/**\n * This is almost the inverse function of LinkElement render function at\n * src/editor/plugins/Link/render.jsx\n * @param {Editor} editor\n * @param {HTMLElement} el\n */\nexport const linkDeserializer = (editor, el) => {\n  var _attrs$url, _attrs$url2;\n  let parent = el;\n  let children = Array.from(parent.childNodes).map(el => deserialize(editor, el)).flat();\n  if (_isEmpty(children)) {\n    //nodes must contain at least one Text descendant\n    children = [{\n      text: ''\n    }];\n  }\n  const attrs = {\n    type: LINK,\n    url: el.getAttribute('href'),\n    data: {}\n  };\n  if (el.hasAttribute('title')) attrs.data.title = el.getAttribute('title');\n  const targetSet = hasValidTarget(el);\n\n  // We don't use this isExternalLink because links can come w/o a target from\n  // outside of Volto Slate blocks and still be external.\n  // let isExternalLink;\n  if (targetSet) {\n    attrs.data = attrs.data || {};\n    attrs.data.link = attrs.data.link || {};\n    attrs.data.link.external = {\n      target: el.getAttribute('target')\n    };\n    // isExternalLink = true;\n  } else {\n    // isExternalLink = false;\n  }\n  if ((_attrs$url = attrs.url) !== null && _attrs$url !== void 0 && _attrs$url.startsWith('mailto:')) {\n    // TODO: improve security because we are using regex-es\n    attrs.data = attrs.data || {};\n    attrs.data.link = attrs.data.link || {};\n    attrs.data.link.email = {\n      email_address: attrs.url.replace(/^mailto:/g, '').replace(/\\?subject=.+$/g, '')\n    };\n    const subject = attrs.url.match(/\\?subject=(.*)$/);\n    if (subject && subject[1]) {\n      attrs.data.link.email.email_subject = subject[1];\n    }\n  } else if ( /* !isExternalLink &&  */(_attrs$url2 = attrs.url) !== null && _attrs$url2 !== void 0 && _attrs$url2.startsWith('/')) {\n    // TODO: improve this condition if it is not very good\n    attrs.data = attrs.data || {};\n    attrs.data.link = attrs.data.link || {};\n    attrs.data.link.internal = {\n      internal_link: [{\n        '@id': attrs.url\n      }]\n    };\n  } else {\n    // the general condition: if it is external link\n    attrs.data = attrs.data || {};\n    attrs.data.link = attrs.data.link || {};\n    attrs.data.link.external = attrs.data.link.external || {};\n    attrs.data.link.external.external_link = attrs.url;\n    if (!targetSet) {\n      attrs.data.link.external.target = '_self';\n    }\n  }\n  return jsx('element', attrs, children);\n};\nlinkDeserializer.id = 'linkDeserializer';","map":{"version":3,"names":["jsx","LINK","deserialize","hasValidTarget","aEl","hasAttribute","includes","getAttribute","linkDeserializer","editor","el","parent","children","Array","from","childNodes","map","flat","text","attrs","type","url","data","title","targetSet","link","external","target","startsWith","email","email_address","replace","subject","match","email_subject","internal","internal_link","external_link","id"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/editor/plugins/Link/deserialize.js"],"sourcesContent":["import { jsx } from 'slate-hyperscript';\nimport { LINK } from 'volto-slate/constants';\nimport { deserialize } from 'volto-slate/editor/deserialize';\nimport { isEmpty } from 'lodash';\n// import { Editor } from 'slate';\n\n/**\n * @param {HTMLAnchorElement} aEl\n */\nconst hasValidTarget = (aEl) => {\n  return (\n    aEl.hasAttribute('target') &&\n    ['_blank', '_self', '_parent', '_top'].includes(aEl.getAttribute('target'))\n  );\n};\n\n/**\n * This is almost the inverse function of LinkElement render function at\n * src/editor/plugins/Link/render.jsx\n * @param {Editor} editor\n * @param {HTMLElement} el\n */\nexport const linkDeserializer = (editor, el) => {\n  let parent = el;\n\n  let children = Array.from(parent.childNodes)\n    .map((el) => deserialize(editor, el))\n    .flat();\n\n  if (isEmpty(children)) {\n    //nodes must contain at least one Text descendant\n    children = [{ text: '' }];\n  }\n\n  const attrs = {\n    type: LINK,\n    url: el.getAttribute('href'),\n    data: {},\n  };\n\n  if (el.hasAttribute('title')) attrs.data.title = el.getAttribute('title');\n\n  const targetSet = hasValidTarget(el);\n\n  // We don't use this isExternalLink because links can come w/o a target from\n  // outside of Volto Slate blocks and still be external.\n  // let isExternalLink;\n  if (targetSet) {\n    attrs.data = attrs.data || {};\n    attrs.data.link = attrs.data.link || {};\n    attrs.data.link.external = { target: el.getAttribute('target') };\n    // isExternalLink = true;\n  } else {\n    // isExternalLink = false;\n  }\n\n  if (attrs.url?.startsWith('mailto:')) {\n    // TODO: improve security because we are using regex-es\n    attrs.data = attrs.data || {};\n    attrs.data.link = attrs.data.link || {};\n    attrs.data.link.email = {\n      email_address: attrs.url\n        .replace(/^mailto:/g, '')\n        .replace(/\\?subject=.+$/g, ''),\n    };\n\n    const subject = attrs.url.match(/\\?subject=(.*)$/);\n    if (subject && subject[1]) {\n      attrs.data.link.email.email_subject = subject[1];\n    }\n  } else if (/* !isExternalLink &&  */ attrs.url?.startsWith('/')) {\n    // TODO: improve this condition if it is not very good\n    attrs.data = attrs.data || {};\n    attrs.data.link = attrs.data.link || {};\n    attrs.data.link.internal = { internal_link: [{ '@id': attrs.url }] };\n  } else {\n    // the general condition: if it is external link\n    attrs.data = attrs.data || {};\n    attrs.data.link = attrs.data.link || {};\n    attrs.data.link.external = attrs.data.link.external || {};\n    attrs.data.link.external.external_link = attrs.url;\n    if (!targetSet) {\n      attrs.data.link.external.target = '_self';\n    }\n  }\n\n  return jsx('element', attrs, children);\n};\n\nlinkDeserializer.id = 'linkDeserializer';\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}