{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-plotlycharts/src/Blocks/PlotlyChart/Edit.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Modal, Grid } from 'semantic-ui-react';\nimport { SidebarPortal } from '@plone/volto/components';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport { PickObjectWidget } from '@eeacms/volto-datablocks/components';\nimport ChartEditor from '@eeacms/volto-plotlycharts/ChartEditor';\nimport schema from './schema';\nimport View from './View';\nimport '@eeacms/volto-plotlycharts/less/plotly.less';\nvar PlotlyEditorModal = /*#__PURE__*/function (_Component) {\n  _inherits(PlotlyEditorModal, _Component);\n  var _super = _createSuper(PlotlyEditorModal);\n  function PlotlyEditorModal(props) {\n    var _this;\n    _classCallCheck(this, PlotlyEditorModal);\n    _this = _super.call(this, props);\n    _this.state = {\n      value: props.value\n    };\n    return _this;\n  }\n  _createClass(PlotlyEditorModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n        _this$state$value;\n      return __jsx(Modal, {\n        open: true,\n        size: \"fullscreen\",\n        className: \"chart-editor-modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, __jsx(Modal.Content, {\n        scrolling: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, __jsx(ChartEditor, {\n        value: this.state.value,\n        onChangeValue: function onChangeValue(value) {\n          _this2.setState({\n            value: value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      })), __jsx(Modal.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, __jsx(Grid.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, __jsx(Grid.Column, {\n        computer: 8,\n        tablet: 12,\n        verticalAlign: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }\n      }, __jsx(PickObjectWidget, {\n        title: \"Select data source\",\n        id: \"provider-data\",\n        onChange: function onChange(_, provider_url) {\n          _this2.setState({\n            value: _objectSpread(_objectSpread({}, _this2.state.value), {}, {\n              provider_url: provider_url\n            })\n          });\n        },\n        value: (_this$state$value = this.state.value) === null || _this$state$value === void 0 ? void 0 : _this$state$value.provider_url,\n        showReload: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      })), __jsx(Grid.Column, {\n        computer: 4,\n        tablet: 12,\n        verticalAlign: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, __jsx(Button, {\n        primary: true,\n        floated: \"right\",\n        onClick: function onClick() {\n          return _this2.props.onChange(_this2.state.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, \"Apply changes\"), __jsx(Button, {\n        floated: \"right\",\n        onClick: this.props.onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, \"Close\"))))));\n    }\n  }]);\n  return PlotlyEditorModal;\n}(Component);\nvar Edit = /*#__PURE__*/function (_Component2) {\n  _inherits(Edit, _Component2);\n  var _super2 = _createSuper(Edit);\n  function Edit(props) {\n    var _this3;\n    _classCallCheck(this, Edit);\n    _this3 = _super2.call(this, props);\n    _this3.state = {\n      showChartEditor: false\n    };\n    return _this3;\n  }\n  _createClass(Edit, [{\n    key: \"handleModalChange\",\n    value: function handleModalChange(value) {\n      var chartData = _objectSpread(_objectSpread({}, value.chartData), {}, {\n        provider_url: value.provider_url\n      });\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        visualization: {\n          chartData: chartData,\n          provider_url: value.provider_url\n        }\n      }));\n      this.setState({\n        showChartEditor: false\n      });\n    }\n\n    // This is the structure of value\n    // value = {\n    //   chartData: {\n    //     data: data || [],\n    //     layout: layout || {},\n    //     frames: frames || [],\n    //     provider_url: provider_url || undefined\n    //   }\n    //   provider_url: provider_url\n    // }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      var _this$props$data = this.props.data,\n        data = _this$props$data === void 0 ? {} : _this$props$data;\n      var _data$visualization = data.visualization,\n        visualization = _data$visualization === void 0 ? {} : _data$visualization;\n      if (__SERVER__) return '';\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, __jsx(Button, {\n        onClick: function onClick(e) {\n          e.preventDefault();\n          e.stopPropagation();\n          _this4.setState({\n            showChartEditor: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, \"Open Chart Editor\")), __jsx(View, _extends({}, this.props, {\n        mode: \"edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      })), this.state.showChartEditor ? __jsx(PlotlyEditorModal, {\n        value: visualization,\n        onChange: function onChange(changedValue) {\n          return _this4.handleModalChange(changedValue);\n        },\n        onClose: function onClose() {\n          return _this4.setState({\n            showChartEditor: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }) : '', __jsx(SidebarPortal, {\n        selected: this.props.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, __jsx(InlineForm, {\n        schema: schema,\n        title: schema.title,\n        onChangeField: function onChangeField(id, value) {\n          _this4.props.onChangeBlock(_this4.props.block, _objectSpread(_objectSpread({}, _this4.props.data), {}, _defineProperty({}, id, value)));\n        },\n        formData: this.props.data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n  return Edit;\n}(Component);\nexport default Edit;","map":{"version":3,"names":["React","Component","Button","Modal","Grid","SidebarPortal","InlineForm","PickObjectWidget","ChartEditor","schema","View","PlotlyEditorModal","props","state","value","setState","_","provider_url","onChange","onClose","Edit","showChartEditor","chartData","onChangeBlock","block","data","visualization","__SERVER__","e","preventDefault","stopPropagation","changedValue","handleModalChange","selected","title","id"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-plotlycharts/src/Blocks/PlotlyChart/Edit.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { Button, Modal, Grid } from 'semantic-ui-react';\nimport { SidebarPortal } from '@plone/volto/components';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport { PickObjectWidget } from '@eeacms/volto-datablocks/components';\nimport ChartEditor from '@eeacms/volto-plotlycharts/ChartEditor';\n\nimport schema from './schema';\nimport View from './View';\n\nimport '@eeacms/volto-plotlycharts/less/plotly.less';\nclass PlotlyEditorModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value,\n    };\n  }\n\n  render() {\n    return (\n      <Modal open={true} size=\"fullscreen\" className=\"chart-editor-modal\">\n        <Modal.Content scrolling>\n          <ChartEditor\n            value={this.state.value}\n            onChangeValue={(value) => {\n              this.setState({ value });\n            }}\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column computer={8} tablet={12} verticalAlign=\"middle\">\n                <PickObjectWidget\n                  title=\"Select data source\"\n                  id=\"provider-data\"\n                  onChange={(_, provider_url) => {\n                    this.setState({\n                      value: { ...this.state.value, provider_url },\n                    });\n                  }}\n                  value={this.state.value?.provider_url}\n                  showReload={true}\n                />\n              </Grid.Column>\n              <Grid.Column computer={4} tablet={12} verticalAlign=\"middle\">\n                <Button\n                  primary\n                  floated=\"right\"\n                  onClick={() => this.props.onChange(this.state.value)}\n                >\n                  Apply changes\n                </Button>\n                <Button floated=\"right\" onClick={this.props.onClose}>\n                  Close\n                </Button>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showChartEditor: false,\n    };\n  }\n\n  handleModalChange(value) {\n    const chartData = {\n      ...value.chartData,\n      provider_url: value.provider_url,\n    };\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      visualization: {\n        chartData,\n        provider_url: value.provider_url,\n      },\n    });\n    this.setState({\n      showChartEditor: false,\n    });\n  }\n\n  // This is the structure of value\n  // value = {\n  //   chartData: {\n  //     data: data || [],\n  //     layout: layout || {},\n  //     frames: frames || [],\n  //     provider_url: provider_url || undefined\n  //   }\n  //   provider_url: provider_url\n  // }\n\n  render() {\n    const { data = {} } = this.props;\n    const { visualization = {} } = data;\n\n    if (__SERVER__) return '';\n\n    return (\n      <>\n        <div className=\"wrapper\">\n          <Button\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              this.setState({ showChartEditor: true });\n            }}\n          >\n            Open Chart Editor\n          </Button>\n        </div>\n        <View {...this.props} mode=\"edit\" />\n        {this.state.showChartEditor ? (\n          <PlotlyEditorModal\n            value={visualization}\n            onChange={(changedValue) => this.handleModalChange(changedValue)}\n            onClose={() =>\n              this.setState({\n                showChartEditor: false,\n              })\n            }\n          />\n        ) : (\n          ''\n        )}\n\n        <SidebarPortal selected={this.props.selected}>\n          <InlineForm\n            schema={schema}\n            title={schema.title}\n            onChangeField={(id, value) => {\n              this.props.onChangeBlock(this.props.block, {\n                ...this.props.data,\n                [id]: value,\n              });\n            }}\n            formData={this.props.data}\n          />\n        </SidebarPortal>\n      </>\n    );\n  }\n}\n\nexport default Edit;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}