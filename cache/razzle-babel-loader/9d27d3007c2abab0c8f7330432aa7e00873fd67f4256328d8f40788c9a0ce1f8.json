{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/ImageSizeWidget.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Button, Grid } from 'semantic-ui-react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nvar messages = defineMessages({\n  small: {\n    \"id\": \"Small\",\n    \"defaultMessage\": \"Small\"\n  },\n  medium: {\n    \"id\": \"Medium\",\n    \"defaultMessage\": \"Medium\"\n  },\n  large: {\n    \"id\": \"Large\",\n    \"defaultMessage\": \"Large\"\n  }\n});\nvar ImageSizeWidget = function ImageSizeWidget(props) {\n  var onChange = props.onChange,\n    id = props.id,\n    disabled = props.disabled,\n    intl = props.intl,\n    value = props.value;\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), __jsx(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Grid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(Grid.Column, {\n    width: \"8\",\n    className: \"field-image_size\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, __jsx(Button.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    icon: true,\n    basic: true,\n    \"aria-label\": intl.formatMessage(messages.small),\n    onClick: function onClick() {\n      return onChange(id, 's');\n    },\n    active: value === 's',\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"image-sizes-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"S\"))), __jsx(Button.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    icon: true,\n    basic: true,\n    \"aria-label\": intl.formatMessage(messages.medium),\n    onClick: function onClick() {\n      return onChange(id, 'm');\n    },\n    active: value === 'm',\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"image-sizes-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"M\"))), __jsx(Button.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    icon: true,\n    basic: true,\n    \"aria-label\": intl.formatMessage(messages.large),\n    onClick: function onClick() {\n      return onChange(id, 'l');\n    },\n    active: value === 'l' || value === undefined,\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"image-sizes-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"L\")))))));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = ImageSizeWidget;\nImageSizeWidget.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  id: PropTypes.string.isRequired\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nImageSizeWidget.defaultProps = {\n  onChange: function onChange() {}\n};\nexport default _c2 = injectIntl(ImageSizeWidget);\nvar _c, _c2;\n$RefreshReg$(_c, \"ImageSizeWidget\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","defineMessages","injectIntl","PropTypes","Button","Grid","FormFieldWrapper","messages","small","medium","large","ImageSizeWidget","props","onChange","id","disabled","intl","value","formatMessage","undefined","propTypes","func","isRequired","string","defaultProps"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/ImageSizeWidget.jsx"],"sourcesContent":["import React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Button, Grid } from 'semantic-ui-react';\nimport { FormFieldWrapper } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  small: {\n    id: 'Small',\n    defaultMessage: 'Small',\n  },\n  medium: {\n    id: 'Medium',\n    defaultMessage: 'Medium',\n  },\n  large: {\n    id: 'Large',\n    defaultMessage: 'Large',\n  },\n});\n\nconst ImageSizeWidget = (props) => {\n  const { onChange, id, disabled, intl, value } = props;\n\n  return (\n    <FormFieldWrapper {...props}>\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width=\"8\" className=\"field-image_size\">\n            <Button.Group>\n              <Button\n                icon\n                basic\n                aria-label={intl.formatMessage(messages.small)}\n                onClick={() => onChange(id, 's')}\n                active={value === 's'}\n                disabled={disabled}\n              >\n                <div className=\"image-sizes-text\">S</div>\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                aria-label={intl.formatMessage(messages.medium)}\n                onClick={() => onChange(id, 'm')}\n                active={value === 'm'}\n                disabled={disabled}\n              >\n                <div className=\"image-sizes-text\">M</div>\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                aria-label={intl.formatMessage(messages.large)}\n                onClick={() => onChange(id, 'l')}\n                active={value === 'l' || value === undefined}\n                disabled={disabled}\n              >\n                <div className=\"image-sizes-text\">L</div>\n              </Button>\n            </Button.Group>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nImageSizeWidget.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  id: PropTypes.string.isRequired,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nImageSizeWidget.defaultProps = {\n  onChange: () => {},\n};\n\nexport default injectIntl(ImageSizeWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Small","defaultMessage":"Small"},{"id":"Medium","defaultMessage":"Medium"},{"id":"Large","defaultMessage":"Large"}]}},"sourceType":"module","externalDependencies":[]}