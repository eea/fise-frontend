{"ast":null,"code":"import ReactDOM from 'react-dom';\nimport { Editor } from 'slate';\n// import { ReactEditor } from 'slate-react';\nimport { splitEditorInTwoFragments, setEditorContent, createAndSelectNewBlockAfter, rangeIsInSplittableNode\n// deconstructToVoltoBlocks,\n} from 'volto-slate/utils';\n\n/**\n * @param {Editor} editor The Slate editor object to extend.\n * @description If the selection exists and touches with one of its edges a\n * closest-to-root `Text` node (`Path` with length `2`)\n *\n *   - if the parent node of the selection exists, split editor into two\n *     fragments put inside separate Volto Slate Text blocks;\n *   - if the parent node of the selection does not exist, do nothing;\n *\n * and if the selection does not exist or does not touch with one of its edges a\n * closest-to-root `Text` node, call the default behavior.\n */\nexport const withSplitBlocksOnBreak = editor => {\n  const {\n    insertBreak\n  } = editor;\n  editor.insertBreak = () => {\n    // if selection is expanded, delete it\n    if (rangeIsInSplittableNode(editor, editor.selection)) {\n      const block = Editor.parent(editor, editor.selection);\n      if (block) {\n        const blockProps = editor.getBlockProps();\n        const {\n          data\n        } = blockProps;\n\n        // Don't add new block if not allowed\n        if (data !== null && data !== void 0 && data.disableNewBlocks) {\n          return insertBreak();\n        }\n\n        // TODO: another method would be to simply insert a break and call\n        // deconstructToVoltoBlocks\n        ReactDOM.unstable_batchedUpdates(() => {\n          const [top, bottom] = splitEditorInTwoFragments(editor);\n          setEditorContent(editor, top);\n          // ReactEditor.blur(editor);\n          createAndSelectNewBlockAfter(editor, bottom);\n        });\n      }\n      return;\n    }\n    return insertBreak();\n  };\n  return editor;\n};","map":{"version":3,"names":["ReactDOM","Editor","splitEditorInTwoFragments","setEditorContent","createAndSelectNewBlockAfter","rangeIsInSplittableNode","withSplitBlocksOnBreak","editor","insertBreak","selection","block","parent","blockProps","getBlockProps","data","disableNewBlocks","unstable_batchedUpdates","top","bottom"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/blocks/Text/extensions/insertBreak.js"],"sourcesContent":["import ReactDOM from 'react-dom';\nimport { Editor } from 'slate';\n// import { ReactEditor } from 'slate-react';\nimport {\n  splitEditorInTwoFragments,\n  setEditorContent,\n  createAndSelectNewBlockAfter,\n  rangeIsInSplittableNode,\n  // deconstructToVoltoBlocks,\n} from 'volto-slate/utils';\n\n/**\n * @param {Editor} editor The Slate editor object to extend.\n * @description If the selection exists and touches with one of its edges a\n * closest-to-root `Text` node (`Path` with length `2`)\n *\n *   - if the parent node of the selection exists, split editor into two\n *     fragments put inside separate Volto Slate Text blocks;\n *   - if the parent node of the selection does not exist, do nothing;\n *\n * and if the selection does not exist or does not touch with one of its edges a\n * closest-to-root `Text` node, call the default behavior.\n */\nexport const withSplitBlocksOnBreak = (editor) => {\n  const { insertBreak } = editor;\n\n  editor.insertBreak = () => {\n    // if selection is expanded, delete it\n    if (rangeIsInSplittableNode(editor, editor.selection)) {\n      const block = Editor.parent(editor, editor.selection);\n\n      if (block) {\n        const blockProps = editor.getBlockProps();\n        const { data } = blockProps;\n\n        // Don't add new block if not allowed\n        if (data?.disableNewBlocks) {\n          return insertBreak();\n        }\n\n        // TODO: another method would be to simply insert a break and call\n        // deconstructToVoltoBlocks\n        ReactDOM.unstable_batchedUpdates(() => {\n          const [top, bottom] = splitEditorInTwoFragments(editor);\n          setEditorContent(editor, top);\n          // ReactEditor.blur(editor);\n          createAndSelectNewBlockAfter(editor, bottom);\n        });\n      }\n      return;\n    }\n\n    return insertBreak();\n  };\n\n  return editor;\n};\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,WAAW;AAChC,SAASC,MAAM,QAAQ,OAAO;AAC9B;AACA,SACEC,yBAAyB,EACzBC,gBAAgB,EAChBC,4BAA4B,EAC5BC;AACA;AAAA,OACK,mBAAmB;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,sBAAsB,GAAIC,MAAM,IAAK;EAChD,MAAM;IAAEC;EAAY,CAAC,GAAGD,MAAM;EAE9BA,MAAM,CAACC,WAAW,GAAG,MAAM;IACzB;IACA,IAAIH,uBAAuB,CAACE,MAAM,EAAEA,MAAM,CAACE,SAAS,CAAC,EAAE;MACrD,MAAMC,KAAK,GAAGT,MAAM,CAACU,MAAM,CAACJ,MAAM,EAAEA,MAAM,CAACE,SAAS,CAAC;MAErD,IAAIC,KAAK,EAAE;QACT,MAAME,UAAU,GAAGL,MAAM,CAACM,aAAa,EAAE;QACzC,MAAM;UAAEC;QAAK,CAAC,GAAGF,UAAU;;QAE3B;QACA,IAAIE,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEC,gBAAgB,EAAE;UAC1B,OAAOP,WAAW,EAAE;QACtB;;QAEA;QACA;QACAR,QAAQ,CAACgB,uBAAuB,CAAC,MAAM;UACrC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGhB,yBAAyB,CAACK,MAAM,CAAC;UACvDJ,gBAAgB,CAACI,MAAM,EAAEU,GAAG,CAAC;UAC7B;UACAb,4BAA4B,CAACG,MAAM,EAAEW,MAAM,CAAC;QAC9C,CAAC,CAAC;MACJ;MACA;IACF;IAEA,OAAOV,WAAW,EAAE;EACtB,CAAC;EAED,OAAOD,MAAM;AACf,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}