{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-eea-map/src/components/widgets/LayerSelectWidget.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Icon } from '@plone/volto/components';\nimport { Input, Select, Button, Grid, Checkbox } from 'semantic-ui-react';\nimport { QueryBuilder } from 'react-querybuilder';\nimport 'react-querybuilder/dist/query-builder.css';\nimport RichTextWidget from 'volto-slate/widgets/RichTextWidget';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getContent } from '@plone/volto/actions';\nimport checkSVG from '@plone/volto/icons/check.svg';\nimport closeSVG from '@plone/volto/icons/clear.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport resetSVG from '@plone/volto/icons/reset.svg';\nimport { fetchArcGISData } from '../../utils';\nvar LayerSelectWidget = function LayerSelectWidget(props) {\n  _s();\n  var onChange = props.onChange,\n    id = props.id,\n    data_query = props.data_query;\n  var value = React.useMemo(function () {\n    return props.value || {};\n  }, [props.value]);\n  var available_layers = value.available_layers,\n    map_data = value.map_data,\n    map_service_url = value.map_service_url,\n    layer = value.layer,\n    _value$fields = value.fields,\n    fields = _value$fields === void 0 ? [] : _value$fields,\n    _value$query = value.query,\n    query = _value$query === void 0 ? '' : _value$query,\n    _value$description = value.description,\n    description = _value$description === void 0 ? '' : _value$description,\n    _value$hide = value.hide,\n    hide = _value$hide === void 0 ? false : _value$hide;\n  var _React$useState = React.useState(map_data),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mapData = _React$useState2[0],\n    setMapData = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    checkColor = _React$useState4[0],\n    setCheckColor = _React$useState4[1];\n  var _React$useState5 = React.useState(''),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    serviceUrlError = _React$useState6[0],\n    setServiceUrlError = _React$useState6[1];\n  var _React$useState7 = React.useState(map_service_url),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    serviceUrl = _React$useState8[0],\n    setServiceUrl = _React$useState8[1];\n  var _React$useState9 = React.useState(layer),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    selectedLayer = _React$useState10[0],\n    setSelectedLayer = _React$useState10[1];\n  var _React$useState11 = React.useState(available_layers),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    availableLayers = _React$useState12[0],\n    setAvailableLayers = _React$useState12[1];\n  var _React$useState13 = React.useState(query),\n    _React$useState14 = _slicedToArray(_React$useState13, 2),\n    builtQuery = _React$useState14[0],\n    setBuiltQuery = _React$useState14[1];\n  var handleServiceUrlCheck = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _mapData, mappedLayers;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetchArcGISData(serviceUrl);\n            case 3:\n              _mapData = _context.sent;\n              setCheckColor('green');\n              setMapData(_mapData);\n              setServiceUrlError('');\n              if (_mapData.layers && _mapData.layers.length > 0) {\n                mappedLayers = _mapData.layers.filter(function (layer) {\n                  return layer && layer.type && layer.type !== 'Group Layer';\n                }).map(function (layer, i) {\n                  return {\n                    key: layer.id,\n                    value: layer,\n                    text: \"\".concat(layer.name, \" (\").concat(layer.type, \")\")\n                  };\n                });\n                setAvailableLayers(mappedLayers);\n              }\n              onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n                layer: selectedLayer,\n                map_service_url: serviceUrl,\n                available_layers: availableLayers,\n                map_data: _mapData,\n                description: description,\n                hide: hide\n              }));\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              setCheckColor('youtube');\n              setServiceUrlError({\n                error: _context.t0.message,\n                status: _context.t0.status\n              });\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n    return function handleServiceUrlCheck() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  React.useEffect(function () {\n    props.getContent('', null, id);\n    //    eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(function () {\n    if (query && !builtQuery) {\n      setBuiltQuery(query);\n    }\n  }, [query, builtQuery]);\n  React.useEffect(function () {\n    //detect existing queries in block content. If it exists. Apply matching queries to layer on fresh layer load\n    if (map_service_url && layer && !query && data_query && data_query.length > 0) {\n      var autoQuery = {\n        combinator: 'or',\n        rules: []\n      };\n      data_query.forEach(function (param, i) {\n        if (fields && fields.length > 0 && fields.filter(function (field, j) {\n          return field.name === param.alias || field.name === param.i;\n        }).length > 0) {\n          autoQuery.rules = [].concat(_toConsumableArray(autoQuery.rules), [{\n            field: param.alias || param.i,\n            operator: '=',\n            value: param.v[0]\n          }]);\n        }\n      });\n      if (autoQuery.rules.length > 0) {\n        onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n          query: autoQuery\n        }));\n        setBuiltQuery(autoQuery);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map_service_url, layer, query, data_query, fields]);\n  var handleLayerFetch = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(service_url, id) {\n      var fullLayer;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetchArcGISData(\"\".concat(service_url, \"/\").concat(id));\n            case 3:\n              fullLayer = _context2.sent;\n              return _context2.abrupt(\"return\", fullLayer);\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n    return function handleLayerFetch(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleSelectLayer = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(layer) {\n      var fullLayer;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return handleLayerFetch(serviceUrl, layer.id);\n            case 2:\n              fullLayer = _context3.sent;\n              setSelectedLayer(layer);\n              onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n                layer: layer,\n                fullLayer: fullLayer,\n                fields: fullLayer.fields,\n                map_service_url: serviceUrl,\n                available_layers: availableLayers,\n                map_data: mapData,\n                query: ''\n              }));\n              setBuiltQuery('');\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return function handleSelectLayer(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleQueryLayer = function handleQueryLayer() {\n    if (builtQuery) {\n      onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n        query: builtQuery\n      }));\n    }\n  };\n  var handleChangeDescription = function handleChangeDescription(val) {\n    if (val) {\n      onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n        description: val\n      }));\n    }\n  };\n  var handleOpacityChange = function handleOpacityChange(val) {\n    onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n      opacity: val\n    }));\n  };\n  var handleChangeServiceUrl = function handleChangeServiceUrl(value) {\n    setServiceUrlError('');\n    setCheckColor('');\n    setAvailableLayers('');\n    setBuiltQuery('');\n    setSelectedLayer('');\n    setMapData('');\n    setServiceUrl(value);\n  };\n  var handleReset = function handleReset() {\n    setServiceUrlError('');\n    setServiceUrl(map_service_url);\n    setCheckColor('');\n    setAvailableLayers(available_layers);\n    setBuiltQuery('');\n    setSelectedLayer(layer);\n    setMapData(map_data);\n  };\n  var handleHideInLegend = function handleHideInLegend(v) {\n    onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n      hide: v\n    }));\n  };\n  return __jsx(\"div\", {\n    style: {\n      padding: '0 5px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"spaced-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, __jsx(Grid.Row, {\n    stretched: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, __jsx(\"h5\", {\n    style: {\n      padding: '0',\n      margin: '15px 0px 5px 0px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, \"Service URL\")), __jsx(Grid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    onChange: function onChange(e, _ref4) {\n      var value = _ref4.value;\n      return handleChangeServiceUrl(value);\n    },\n    style: {\n      width: '100%'\n    },\n    error: serviceUrlError,\n    value: serviceUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    style: {\n      fontSize: '12px',\n      color: 'darkred'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, serviceUrlError.error)), serviceUrl && __jsx(Grid.Row, {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, serviceUrl !== map_service_url && __jsx(Button, {\n    size: \"small\",\n    compact: true,\n    className: \"layer-reset-button\",\n    onClick: handleReset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, __jsx(Icon, {\n    name: resetSVG,\n    title: \"Reset\",\n    size: \"20px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 19\n    }\n  })), __jsx(Button, {\n    size: \"small\",\n    color: checkColor,\n    compact: true,\n    className: \"layer-check-button\",\n    onClick: handleServiceUrlCheck,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: serviceUrlError ? closeSVG : checkSVG,\n    title: \"Submit\",\n    size: \"20px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  })))), mapData && mapData.mapName && __jsx(\"div\", {\n    className: \"spaced-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, __jsx(Grid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, __jsx(\"h5\", {\n    style: {\n      padding: '0',\n      margin: '15px 0px 5px 0px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }, \"Map name:\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }, mapData.mapName))), availableLayers && availableLayers.length > 0 && __jsx(\"div\", {\n    className: \"spaced-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, __jsx(Grid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, __jsx(\"h5\", {\n    style: {\n      padding: '0',\n      margin: '15px 0px 5px 0px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }, \"Layer\")), __jsx(Grid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, __jsx(Select, {\n    onChange: function onChange(e, _ref5) {\n      var value = _ref5.value;\n      return handleSelectLayer(value);\n    },\n    options: availableLayers,\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Select layer\",\n    value: selectedLayer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }))), availableLayers && availableLayers.length > 0 && selectedLayer && __jsx(\"div\", {\n    className: \"spaced-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, __jsx(Grid.Row, {\n    stretched: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }\n  }, \"Opacity:\"), __jsx(\"input\", {\n    className: \"map-number-input\",\n    type: \"number\",\n    min: 0,\n    max: 1,\n    step: 0.1,\n    value: value !== null && value !== void 0 && value.opacity ? value === null || value === void 0 ? void 0 : value.opacity : 1,\n    onChange: function onChange(e) {\n      return handleOpacityChange(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }), __jsx(\"input\", {\n    className: \"map-range-input\",\n    type: \"range\",\n    min: 0,\n    max: 1,\n    step: 0.1,\n    value: value !== null && value !== void 0 && value.opacity ? value === null || value === void 0 ? void 0 : value.opacity : 1,\n    onChange: function onChange(e) {\n      return handleOpacityChange(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  })), __jsx(Grid.Row, {\n    stretched: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, __jsx(\"h5\", {\n    style: {\n      padding: '0',\n      margin: '15px 0px 5px 0px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, \"Description\")), __jsx(Grid.Row, {\n    stretched: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"map-layer-description-field\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 15\n    }\n  }, __jsx(RichTextWidget, {\n    title: \"description\",\n    onChange: function onChange(name, value) {\n      handleChangeDescription(value);\n    },\n    value: value.description,\n    placeholder: \"Set Description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }\n  }))), __jsx(Grid.Row, {\n    stretched: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 15\n    }\n  }, \"Hide in legend:\"), ' ', __jsx(Checkbox, {\n    label: \"Layer will be hidden in legend\",\n    checked: hide,\n    onChange: function onChange(e, _ref6) {\n      var checked = _ref6.checked;\n      return handleHideInLegend(checked);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 15\n    }\n  }))), availableLayers && fields && fields.length > 0 && __jsx(\"div\", {\n    className: \"spaced-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 11\n    }\n  }, __jsx(\"h5\", {\n    style: {\n      padding: '0',\n      margin: '15px 0px 5px 0px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }, \"Query Layer\"), __jsx(Grid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }, __jsx(QueryBuilder, {\n    fields: fields.map(function (fi, i) {\n      return {\n        name: fi.name,\n        label: fi.name\n      };\n    }),\n    query: builtQuery,\n    onQueryChange: function onQueryChange(q) {\n      return setBuiltQuery(q);\n    },\n    enableDragAndDrop: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  })), builtQuery && __jsx(Grid.Row, {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    type: \"submit\",\n    size: \"tiny\",\n    compact: true,\n    className: \"layer-submit-button \",\n    color: 'green',\n    onClick: handleQueryLayer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 17\n    }\n  }, __jsx(Icon, {\n    name: aheadSVG,\n    title: \"Check Url\",\n    size: \"20px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 19\n    }\n  }))), __jsx(Grid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: '13px',\n      fontWeight: 'bold',\n      color: 'darkgray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 15\n    }\n  }, \"Available Fields:\")), fields.map(function (field, id) {\n    return __jsx(\"p\", {\n      style: {\n        fontSize: '12px',\n        padding: '0 5px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 15\n      }\n    }, __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }\n    }, field.alias), \" (\", field.type, \")\");\n  }))));\n};\n_s(LayerSelectWidget, \"urdqM/A7io+zwrvbmSLz4oJEK/c=\");\n_c = LayerSelectWidget;\nexport default compose(connect(function (state, props) {\n  return {\n    content: state.content.data,\n    data_query: state.content.data.data_query\n  };\n}, {\n  getContent: getContent\n}))(LayerSelectWidget);\nvar _c;\n$RefreshReg$(_c, \"LayerSelectWidget\");","map":{"version":3,"names":["React","Icon","Input","Select","Button","Grid","Checkbox","QueryBuilder","RichTextWidget","connect","compose","getContent","checkSVG","closeSVG","aheadSVG","resetSVG","fetchArcGISData","LayerSelectWidget","props","onChange","id","data_query","value","useMemo","available_layers","map_data","map_service_url","layer","fields","query","description","hide","useState","mapData","setMapData","checkColor","setCheckColor","serviceUrlError","setServiceUrlError","serviceUrl","setServiceUrl","selectedLayer","setSelectedLayer","availableLayers","setAvailableLayers","builtQuery","setBuiltQuery","handleServiceUrlCheck","layers","length","mappedLayers","filter","type","map","i","key","text","name","error","message","status","useEffect","autoQuery","combinator","rules","forEach","param","field","j","alias","operator","v","handleLayerFetch","service_url","fullLayer","handleSelectLayer","handleQueryLayer","handleChangeDescription","val","handleOpacityChange","opacity","handleChangeServiceUrl","handleReset","handleHideInLegend","padding","margin","e","width","fontSize","color","display","mapName","target","checked","fi","label","q","fontWeight","state","content","data"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-eea-map/src/components/widgets/LayerSelectWidget.jsx"],"sourcesContent":["import React from 'react';\nimport { Icon } from '@plone/volto/components';\nimport { Input, Select, Button, Grid, Checkbox } from 'semantic-ui-react';\nimport { QueryBuilder } from 'react-querybuilder';\nimport 'react-querybuilder/dist/query-builder.css';\n\nimport RichTextWidget from 'volto-slate/widgets/RichTextWidget';\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport { getContent } from '@plone/volto/actions';\n\nimport checkSVG from '@plone/volto/icons/check.svg';\nimport closeSVG from '@plone/volto/icons/clear.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport resetSVG from '@plone/volto/icons/reset.svg';\n\nimport { fetchArcGISData } from '../../utils';\n\nconst LayerSelectWidget = (props) => {\n  const { onChange, id, data_query } = props;\n\n  const value = React.useMemo(() => props.value || {}, [props.value]);\n\n  const {\n    available_layers,\n    map_data,\n    map_service_url,\n    layer,\n    fields = [],\n    query = '',\n    description = '',\n    hide = false,\n  } = value;\n\n  const [mapData, setMapData] = React.useState(map_data);\n  const [checkColor, setCheckColor] = React.useState('');\n  const [serviceUrlError, setServiceUrlError] = React.useState('');\n  const [serviceUrl, setServiceUrl] = React.useState(map_service_url);\n  const [selectedLayer, setSelectedLayer] = React.useState(layer);\n\n  const [availableLayers, setAvailableLayers] = React.useState(\n    available_layers,\n  );\n\n  const [builtQuery, setBuiltQuery] = React.useState(query);\n\n  const handleServiceUrlCheck = async () => {\n    // fetch url, save it, populate layers options\n    try {\n      let mapData = await fetchArcGISData(serviceUrl);\n      setCheckColor('green');\n      setMapData(mapData);\n      setServiceUrlError('');\n      if (mapData.layers && mapData.layers.length > 0) {\n        const mappedLayers = mapData.layers\n          .filter(\n            (layer) => layer && layer.type && layer.type !== 'Group Layer',\n          )\n          .map((layer, i) => {\n            return {\n              key: layer.id,\n              value: layer,\n              text: `${layer.name} (${layer.type})`,\n            };\n          });\n        setAvailableLayers(mappedLayers);\n      }\n      onChange(id, {\n        ...value,\n        layer: selectedLayer,\n        map_service_url: serviceUrl,\n        available_layers: availableLayers,\n        map_data: mapData,\n        description,\n        hide,\n      });\n    } catch (e) {\n      setCheckColor('youtube');\n      setServiceUrlError({ error: e.message, status: e.status });\n    }\n  };\n\n  React.useEffect(() => {\n    props.getContent('', null, id);\n    //    eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    if (query && !builtQuery) {\n      setBuiltQuery(query);\n    }\n  }, [query, builtQuery]);\n\n  React.useEffect(() => {\n    //detect existing queries in block content. If it exists. Apply matching queries to layer on fresh layer load\n    if (\n      map_service_url &&\n      layer &&\n      !query &&\n      data_query &&\n      data_query.length > 0\n    ) {\n      let autoQuery = {\n        combinator: 'or',\n        rules: [],\n      };\n      data_query.forEach((param, i) => {\n        if (\n          fields &&\n          fields.length > 0 &&\n          fields.filter(\n            (field, j) => field.name === param.alias || field.name === param.i,\n          ).length > 0\n        ) {\n          autoQuery.rules = [\n            ...autoQuery.rules,\n            { field: param.alias || param.i, operator: '=', value: param.v[0] },\n          ];\n        }\n      });\n      if (autoQuery.rules.length > 0) {\n        onChange(id, {\n          ...value,\n          query: autoQuery,\n        });\n        setBuiltQuery(autoQuery);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map_service_url, layer, query, data_query, fields]);\n\n  const handleLayerFetch = async (service_url, id) => {\n    try {\n      let fullLayer = await fetchArcGISData(`${service_url}/${id}`);\n      return fullLayer;\n    } catch (e) {}\n  };\n\n  const handleSelectLayer = async (layer) => {\n    const fullLayer = await handleLayerFetch(serviceUrl, layer.id);\n    setSelectedLayer(layer);\n    onChange(id, {\n      ...value,\n      layer,\n      fullLayer,\n      fields: fullLayer.fields,\n      map_service_url: serviceUrl,\n      available_layers: availableLayers,\n      map_data: mapData,\n      query: '',\n    });\n    setBuiltQuery('');\n  };\n\n  const handleQueryLayer = () => {\n    if (builtQuery) {\n      onChange(id, {\n        ...value,\n        query: builtQuery,\n      });\n    }\n  };\n\n  const handleChangeDescription = (val) => {\n    if (val) {\n      onChange(id, {\n        ...value,\n        description: val,\n      });\n    }\n  };\n\n  const handleOpacityChange = (val) => {\n    onChange(id, {\n      ...value,\n      opacity: val,\n    });\n  };\n\n  const handleChangeServiceUrl = (value) => {\n    setServiceUrlError('');\n    setCheckColor('');\n    setAvailableLayers('');\n    setBuiltQuery('');\n    setSelectedLayer('');\n    setMapData('');\n\n    setServiceUrl(value);\n  };\n\n  const handleReset = () => {\n    setServiceUrlError('');\n    setServiceUrl(map_service_url);\n    setCheckColor('');\n    setAvailableLayers(available_layers);\n    setBuiltQuery('');\n    setSelectedLayer(layer);\n    setMapData(map_data);\n  };\n\n  const handleHideInLegend = (v) => {\n    onChange(id, {\n      ...value,\n      hide: v,\n    });\n  };\n\n  return (\n    <div\n      style={{\n        padding: '0 5px',\n      }}\n    >\n      <Grid>\n        <div className=\"spaced-row\">\n          <Grid.Row stretched>\n            <h5 style={{ padding: '0', margin: '15px 0px 5px 0px' }}>\n              Service URL\n            </h5>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Input\n              type=\"text\"\n              onChange={(e, { value }) => handleChangeServiceUrl(value)}\n              style={{ width: '100%' }}\n              error={serviceUrlError}\n              value={serviceUrl}\n            ></Input>\n\n            <span style={{ fontSize: '12px', color: 'darkred' }}>\n              {serviceUrlError.error}\n            </span>\n          </Grid.Row>\n          {serviceUrl && (\n            <Grid.Row style={{ display: 'flex' }}>\n              {serviceUrl !== map_service_url && (\n                <Button\n                  size=\"small\"\n                  compact\n                  className=\"layer-reset-button\"\n                  onClick={handleReset}\n                >\n                  <Icon name={resetSVG} title=\"Reset\" size=\"20px\" />\n                </Button>\n              )}\n              <Button\n                size=\"small\"\n                color={checkColor}\n                compact\n                className=\"layer-check-button\"\n                onClick={handleServiceUrlCheck}\n              >\n                <Icon\n                  name={serviceUrlError ? closeSVG : checkSVG}\n                  title=\"Submit\"\n                  size=\"20px\"\n                />\n              </Button>\n            </Grid.Row>\n          )}\n        </div>\n        {mapData && mapData.mapName && (\n          <div className=\"spaced-row\">\n            <Grid.Row>\n              <h5 style={{ padding: '0', margin: '15px 0px 5px 0px' }}>\n                Map name:\n              </h5>\n              <p>{mapData.mapName}</p>\n            </Grid.Row>\n          </div>\n        )}\n        {availableLayers && availableLayers.length > 0 && (\n          <div className=\"spaced-row\">\n            <Grid.Row>\n              <h5 style={{ padding: '0', margin: '15px 0px 5px 0px' }}>\n                Layer\n              </h5>\n            </Grid.Row>\n            <Grid.Row>\n              <Select\n                onChange={(e, { value }) => handleSelectLayer(value)}\n                options={availableLayers}\n                style={{ width: '100%' }}\n                placeholder=\"Select layer\"\n                value={selectedLayer}\n              />\n            </Grid.Row>\n          </div>\n        )}\n        {availableLayers && availableLayers.length > 0 && selectedLayer && (\n          <div className=\"spaced-row\">\n            <Grid.Row stretched>\n              <h5>Opacity:</h5>\n              <input\n                className=\"map-number-input\"\n                type=\"number\"\n                min={0}\n                max={1}\n                step={0.1}\n                value={value?.opacity ? value?.opacity : 1}\n                onChange={(e) => handleOpacityChange(e.target.value)}\n              />\n              <input\n                className=\"map-range-input\"\n                type=\"range\"\n                min={0}\n                max={1}\n                step={0.1}\n                value={value?.opacity ? value?.opacity : 1}\n                onChange={(e) => handleOpacityChange(e.target.value)}\n              />\n            </Grid.Row>\n            <Grid.Row stretched>\n              <h5 style={{ padding: '0', margin: '15px 0px 5px 0px' }}>\n                Description\n              </h5>\n            </Grid.Row>\n            <Grid.Row stretched>\n              <div className=\"map-layer-description-field\">\n                <RichTextWidget\n                  title=\"description\"\n                  onChange={(name, value) => {\n                    handleChangeDescription(value);\n                  }}\n                  value={value.description}\n                  placeholder=\"Set Description\"\n                />\n              </div>\n            </Grid.Row>\n            <Grid.Row stretched>\n              <h5>Hide in legend:</h5>{' '}\n              <Checkbox\n                label=\"Layer will be hidden in legend\"\n                checked={hide}\n                onChange={(e, { checked }) => handleHideInLegend(checked)}\n              />\n            </Grid.Row>\n          </div>\n        )}\n        {availableLayers && fields && fields.length > 0 && (\n          <div className=\"spaced-row\">\n            <h5 style={{ padding: '0', margin: '15px 0px 5px 0px' }}>\n              Query Layer\n            </h5>\n            <Grid.Row>\n              <QueryBuilder\n                fields={fields.map((fi, i) => {\n                  return { name: fi.name, label: fi.name };\n                })}\n                query={builtQuery}\n                onQueryChange={(q) => setBuiltQuery(q)}\n                enableDragAndDrop={false}\n              />\n            </Grid.Row>\n            {builtQuery && (\n              <Grid.Row style={{ display: 'flex' }}>\n                <Button\n                  type=\"submit\"\n                  size=\"tiny\"\n                  compact\n                  className=\"layer-submit-button \"\n                  color={'green'}\n                  onClick={handleQueryLayer}\n                >\n                  <Icon name={aheadSVG} title=\"Check Url\" size=\"20px\" />\n                </Button>\n              </Grid.Row>\n            )}\n            <Grid.Row>\n              <p\n                style={{\n                  fontSize: '13px',\n                  fontWeight: 'bold',\n                  color: 'darkgray',\n                }}\n              >\n                Available Fields:\n              </p>\n            </Grid.Row>\n            {fields.map((field, id) => (\n              <p style={{ fontSize: '12px', padding: '0 5px' }}>\n                <strong>{field.alias}</strong> ({field.type})\n              </p>\n            ))}\n          </div>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default compose(\n  connect(\n    (state, props) => ({\n      content: state.content.data,\n      data_query: state.content.data.data_query,\n    }),\n    {\n      getContent,\n    },\n  ),\n)(LayerSelectWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}