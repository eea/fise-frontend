{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-banner/src/StagingBanner.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Portal } from 'react-portal';\nimport cx from 'classnames';\nimport { Message, Container } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport { Icon } from '@plone/volto/components';\nimport { BodyClass } from '@plone/volto/helpers';\nimport { getBannerConfig } from '@eeacms/volto-banner/actions';\nimport './less/stagingBanner.less';\nconst types = {\n  upgrading: 'warning',\n  upgraded: 'warning',\n  degraded: 'error',\n  stopped: 'error',\n  error: 'error',\n  inactive: 'error'\n};\nconst bannerIsVisible = (token, enabled, visible_to_all) => {\n  if (!enabled) return false;\n  if (token || visible_to_all) return true;\n  return false;\n};\nconst StagingBanner = ({\n  banner,\n  token,\n  dispatch\n}) => {\n  const bannerConfig = _objectSpread(_objectSpread({}, config.settings.stagingBanner || {}), banner.config || {});\n  const staticBanner = bannerConfig.static_banner || {};\n  const dynamicBanner = bannerConfig.dynamic_banner || {};\n  React.useEffect(() => {\n    dispatch(getBannerConfig());\n    /* eslint-disable-next-line */\n  }, []);\n  const [node, setNode] = React.useState(''),\n    [staticBannerVisible, setStaticBannerVisible] = React.useState(true),\n    [dynamicBannerVisible, setDynamicBannerVisible] = React.useState(true),\n    hideStaticBanner = React.useCallback(() => {\n      setStaticBannerVisible(false);\n    }, [setStaticBannerVisible]),\n    hideDynamicBanner = React.useCallback(() => {\n      setDynamicBannerVisible(false);\n    }, [setDynamicBannerVisible]);\n  React.useEffect(() => {\n    setNode(document.querySelector(bannerConfig.parentNodeSelector));\n  }, [bannerConfig.parentNodeSelector]);\n  if (!node) return '';\n  return __jsx(Portal, {\n    node: node,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, bannerIsVisible(token, staticBannerVisible && staticBanner.enabled, staticBanner.visible_to_all) && __jsx(Message, {\n    className: cx('stagingBanner static-banner', staticBanner.type),\n    icon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(BodyClass, {\n    className: \"has-banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(Message.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(Message.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, staticBanner.title), __jsx(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: staticBanner.message\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, bannerConfig.bannerIcon && __jsx(Icon, {\n    name: bannerConfig.bannerIcon,\n    color: bannerConfig.bannerIconColor || 'black',\n    size: \"32px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), bannerConfig.bannerCloseIcon && __jsx(Icon, {\n    name: bannerConfig.bannerCloseIcon,\n    color: bannerConfig.bannerCloseIconColor || 'black',\n    className: \"close-button\",\n    size: \"32px\",\n    onClick: hideStaticBanner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })))), bannerIsVisible(token, dynamicBannerVisible && dynamicBanner.enabled, dynamicBanner.visible_to_all) && dynamicBanner.rancher_stacks_status && __jsx(Message, {\n    className: cx('stagingBanner static-banner', types[dynamicBanner.rancher_stacks_status]),\n    icon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, __jsx(BodyClass, {\n    className: \"has-banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, __jsx(Message.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, __jsx(Message.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, dynamicBanner.title), __jsx(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: (dynamicBanner.message || '').replace('{}', dynamicBanner.rancher_stacks_status)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, bannerConfig.bannerIcon && __jsx(Icon, {\n    name: bannerConfig.bannerIcon,\n    color: bannerConfig.bannerIconColor || 'black',\n    size: \"32px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }), bannerConfig.bannerCloseIcon && __jsx(Icon, {\n    name: bannerConfig.bannerCloseIcon,\n    color: bannerConfig.bannerCloseIconColor || 'black',\n    className: \"close-button\",\n    size: \"32px\",\n    onClick: hideDynamicBanner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  })))));\n};\nexport default connect(state => ({\n  banner: state.banner,\n  objectActions: state.actions.actions.object,\n  token: state.userSession.token\n}))(StagingBanner);","map":{"version":3,"names":["React","connect","Portal","cx","Message","Container","config","Icon","BodyClass","getBannerConfig","types","upgrading","upgraded","degraded","stopped","error","inactive","bannerIsVisible","token","enabled","visible_to_all","StagingBanner","banner","dispatch","bannerConfig","settings","stagingBanner","staticBanner","static_banner","dynamicBanner","dynamic_banner","useEffect","node","setNode","useState","staticBannerVisible","setStaticBannerVisible","dynamicBannerVisible","setDynamicBannerVisible","hideStaticBanner","useCallback","hideDynamicBanner","document","querySelector","parentNodeSelector","type","title","__html","message","bannerIcon","bannerIconColor","bannerCloseIcon","bannerCloseIconColor","rancher_stacks_status","replace","state","objectActions","actions","object","userSession"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-banner/src/StagingBanner.jsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Portal } from 'react-portal';\nimport cx from 'classnames';\nimport { Message, Container } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport { Icon } from '@plone/volto/components';\nimport { BodyClass } from '@plone/volto/helpers';\n\nimport { getBannerConfig } from '@eeacms/volto-banner/actions';\n\nimport './less/stagingBanner.less';\n\nconst types = {\n  upgrading: 'warning',\n  upgraded: 'warning',\n  degraded: 'error',\n  stopped: 'error',\n  error: 'error',\n  inactive: 'error',\n};\n\nconst bannerIsVisible = (token, enabled, visible_to_all) => {\n  if (!enabled) return false;\n  if (token || visible_to_all) return true;\n  return false;\n};\n\nconst StagingBanner = ({ banner, token, dispatch }) => {\n  const bannerConfig = {\n    ...(config.settings.stagingBanner || {}),\n    ...(banner.config || {}),\n  };\n  const staticBanner = bannerConfig.static_banner || {};\n  const dynamicBanner = bannerConfig.dynamic_banner || {};\n\n  React.useEffect(() => {\n    dispatch(getBannerConfig());\n    /* eslint-disable-next-line */\n  }, []);\n\n  const [node, setNode] = React.useState(''),\n    [staticBannerVisible, setStaticBannerVisible] = React.useState(true),\n    [dynamicBannerVisible, setDynamicBannerVisible] = React.useState(true),\n    hideStaticBanner = React.useCallback(() => {\n      setStaticBannerVisible(false);\n    }, [setStaticBannerVisible]),\n    hideDynamicBanner = React.useCallback(() => {\n      setDynamicBannerVisible(false);\n    }, [setDynamicBannerVisible]);\n\n  React.useEffect(() => {\n    setNode(document.querySelector(bannerConfig.parentNodeSelector));\n  }, [bannerConfig.parentNodeSelector]);\n\n  if (!node) return '';\n\n  return (\n    <Portal node={node}>\n      {bannerIsVisible(\n        token,\n        staticBannerVisible && staticBanner.enabled,\n        staticBanner.visible_to_all,\n      ) && (\n        <Message\n          className={cx('stagingBanner static-banner', staticBanner.type)}\n          icon\n        >\n          <BodyClass className=\"has-banner\" />\n          <Container>\n            <Message.Content>\n              <Message.Header>{staticBanner.title}</Message.Header>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: staticBanner.message,\n                }}\n              />\n            </Message.Content>\n            <div>\n              {bannerConfig.bannerIcon && (\n                <Icon\n                  name={bannerConfig.bannerIcon}\n                  color={bannerConfig.bannerIconColor || 'black'}\n                  size=\"32px\"\n                />\n              )}\n              {bannerConfig.bannerCloseIcon && (\n                <Icon\n                  name={bannerConfig.bannerCloseIcon}\n                  color={bannerConfig.bannerCloseIconColor || 'black'}\n                  className=\"close-button\"\n                  size=\"32px\"\n                  onClick={hideStaticBanner}\n                />\n              )}\n            </div>\n          </Container>\n        </Message>\n      )}\n      {bannerIsVisible(\n        token,\n        dynamicBannerVisible && dynamicBanner.enabled,\n        dynamicBanner.visible_to_all,\n      ) &&\n        dynamicBanner.rancher_stacks_status && (\n          <Message\n            className={cx(\n              'stagingBanner static-banner',\n              types[dynamicBanner.rancher_stacks_status],\n            )}\n            icon\n          >\n            <BodyClass className=\"has-banner\" />\n            <Container>\n              <Message.Content>\n                <Message.Header>{dynamicBanner.title}</Message.Header>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: (dynamicBanner.message || '').replace(\n                      '{}',\n                      dynamicBanner.rancher_stacks_status,\n                    ),\n                  }}\n                />\n              </Message.Content>\n              <div>\n                {bannerConfig.bannerIcon && (\n                  <Icon\n                    name={bannerConfig.bannerIcon}\n                    color={bannerConfig.bannerIconColor || 'black'}\n                    size=\"32px\"\n                  />\n                )}\n                {bannerConfig.bannerCloseIcon && (\n                  <Icon\n                    name={bannerConfig.bannerCloseIcon}\n                    color={bannerConfig.bannerCloseIconColor || 'black'}\n                    className=\"close-button\"\n                    size=\"32px\"\n                    onClick={hideDynamicBanner}\n                  />\n                )}\n              </div>\n            </Container>\n          </Message>\n        )}\n    </Portal>\n  );\n};\n\nexport default connect((state) => ({\n  banner: state.banner,\n  objectActions: state.actions.actions.object,\n  token: state.userSession.token,\n}))(StagingBanner);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}