{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/customizations/volto/components/manage/Blocks/Block/Edit.jsx\";\nvar __jsx = React.createElement;\n/**\n * Edit block.\n * @module components/manage/Blocks/Block/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { setSidebarTab } from '@plone/volto/actions';\nimport config from '@plone/volto/registry';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport { SidebarPortal, BlockSettingsSidebar, BlockSettingsSchema } from '@plone/volto/components';\nvar messages = defineMessages({\n  unknownBlock: {\n    \"id\": \"Unknown Block\",\n    \"defaultMessage\": \"Unknown Block {block}\"\n  }\n});\n\n/**\n * Edit block class.\n * @class Edit\n * @extends Component\n */\nexport var Edit = /*#__PURE__*/function (_Component) {\n  _inherits(Edit, _Component);\n  var _super = _createSuper(Edit);\n  function Edit() {\n    var _this;\n    _classCallCheck(this, Edit);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"blockNode\", /*#__PURE__*/React.createRef());\n    return _this;\n  }\n  _createClass(Edit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _blocksConfig$type, _blocksConfig$type2;\n      var type = this.props.type;\n      var _this$props$blocksCon = this.props.blocksConfig,\n        blocksConfig = _this$props$blocksCon === void 0 ? config.blocks.blocksConfig : _this$props$blocksCon;\n      var blockHasOwnFocusManagement = (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$type = blocksConfig[type]) === null || _blocksConfig$type === void 0 ? void 0 : _blocksConfig$type['blockHasOwnFocusManagement']) || null;\n      if (!blockHasOwnFocusManagement && this.props.selected && this.blockNode.current) {\n        this.blockNode.current.focus();\n      }\n      var tab = this.props.manage ? 1 : (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$type2 = blocksConfig[type]) === null || _blocksConfig$type2 === void 0 ? void 0 : _blocksConfig$type2.sidebarTab) || 0;\n      if (this.props.selected && this.props.editable) {\n        this.props.setSidebarTab(tab);\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _blocksConfig$type3;\n      var _this$props$blocksCon2 = this.props.blocksConfig,\n        blocksConfig = _this$props$blocksCon2 === void 0 ? config.blocks.blocksConfig : _this$props$blocksCon2;\n      var _this$props = this.props,\n        selected = _this$props.selected,\n        type = _this$props.type;\n      var blockHasOwnFocusManagement = (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$type3 = blocksConfig[type]) === null || _blocksConfig$type3 === void 0 ? void 0 : _blocksConfig$type3['blockHasOwnFocusManagement']) || null;\n      if (!blockHasOwnFocusManagement && nextProps.selected && selected !== nextProps.selected && this.blockNode.current) {\n        this.blockNode.current.focus();\n      }\n      if ((!this.props.selected && nextProps.selected || type !== nextProps.type) && this.props.editable) {\n        var _blocksConfig$nextPro;\n        var tab = this.props.manage ? 1 : (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$nextPro = blocksConfig[nextProps.type]) === null || _blocksConfig$nextPro === void 0 ? void 0 : _blocksConfig$nextPro.sidebarTab) || 0;\n        this.props.setSidebarTab(tab);\n      }\n    }\n  }, {\n    key: \"render\",\n    value:\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n    function render() {\n      var _this$props$data,\n        _blocksConfig$type4,\n        _this$props$data2,\n        _blocksConfig$type6,\n        _blocksConfig$type7,\n        _this2 = this;\n      var _this$props$blocksCon3 = this.props.blocksConfig,\n        blocksConfig = _this$props$blocksCon3 === void 0 ? config.blocks.blocksConfig : _this$props$blocksCon3;\n      var _this$props2 = this.props,\n        editable = _this$props2.editable,\n        type = _this$props2.type;\n      var disableNewBlocks = (_this$props$data = this.props.data) === null || _this$props$data === void 0 ? void 0 : _this$props$data.disableNewBlocks;\n      var Block = (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$type4 = blocksConfig[type]) === null || _blocksConfig$type4 === void 0 ? void 0 : _blocksConfig$type4['edit']) || null;\n      if ((_this$props$data2 = this.props.data) !== null && _this$props$data2 !== void 0 && _this$props$data2.readOnly || !editable && !config.blocks.showEditBlocksInBabelView) {\n        var _blocksConfig$type5;\n        Block = (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$type5 = blocksConfig[type]) === null || _blocksConfig$type5 === void 0 ? void 0 : _blocksConfig$type5['view']) || null;\n      }\n      var schema = (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$type6 = blocksConfig[type]) === null || _blocksConfig$type6 === void 0 ? void 0 : _blocksConfig$type6['schema']) || BlockSettingsSchema;\n      var blockHasOwnFocusManagement = (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$type7 = blocksConfig[type]) === null || _blocksConfig$type7 === void 0 ? void 0 : _blocksConfig$type7['blockHasOwnFocusManagement']) || null;\n      return __jsx(React.Fragment, null, Block !== null ? __jsx(\"div\", {\n        role: \"presentation\",\n        onClick: function onClick(e) {\n          var isMultipleSelection = e.shiftKey || e.ctrlKey || e.metaKey;\n          !_this2.props.selected && _this2.props.onSelectBlock(_this2.props.id, _this2.props.selected ? false : isMultipleSelection, e);\n        },\n        onKeyDown: !(blockHasOwnFocusManagement || disableNewBlocks) ? function (e) {\n          return _this2.props.handleKeyDown(e, _this2.props.index, _this2.props.id, _this2.blockNode.current);\n        } : null,\n        className: cx(\"block \".concat(type), {\n          //TODO: add stretched group trigger for block border\n          'stretched-group': this.props.data.styles && this.props.type === 'group' && this.props.data.styles.stretch && this.props.data.styles.stretch === 'stretch',\n          selected: this.props.selected || this.props.multiSelected,\n          multiSelected: this.props.multiSelected\n        }),\n        style: {\n          outline: 'none'\n        },\n        ref: this.blockNode\n        // The tabIndex is required for the keyboard navigation\n        /* eslint-disable jsx-a11y/no-noninteractive-tabindex */,\n        tabIndex: !blockHasOwnFocusManagement ? -1 : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, __jsx(Block, _extends({}, this.props, {\n        blockNode: this.blockNode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }\n      })), this.props.manage && __jsx(SidebarPortal, {\n        selected: this.props.selected,\n        tab: \"sidebar-settings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      }, __jsx(BlockSettingsSidebar, _extends({}, this.props, {\n        schema: schema,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }\n      })))) : __jsx(\"div\", {\n        role: \"presentation\",\n        onClick: function onClick() {\n          return !_this2.props.selected && _this2.props.onSelectBlock(_this2.props.id);\n        },\n        onKeyDown: !(blockHasOwnFocusManagement || disableNewBlocks) ? function (e) {\n          return _this2.props.handleKeyDown(e, _this2.props.index, _this2.props.id, _this2.blockNode.current);\n        } : null,\n        className: cx(\"block \".concat(type), {\n          selected: this.props.selected\n        }),\n        style: {\n          outline: 'none'\n        },\n        ref: this.blockNode\n        // The tabIndex is required for the keyboard navigation\n        ,\n        tabIndex: -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, this.props.intl.formatMessage(messages.unknownBlock, {\n        block: type\n      })));\n    }\n  }]);\n  return Edit;\n}(Component);\n_defineProperty(Edit, \"propTypes\", {\n  type: PropTypes.string.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  // properties is mapped to formData, so it's not connected to changes of the object\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  selected: PropTypes.bool.isRequired,\n  multiSelected: PropTypes.bool,\n  index: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  manage: PropTypes.bool,\n  onMoveBlock: PropTypes.func.isRequired,\n  onDeleteBlock: PropTypes.func.isRequired,\n  editable: PropTypes.bool\n});\n_defineProperty(Edit, \"defaultProps\", {\n  manage: false,\n  editable: true\n});\nexport default compose(injectIntl, withObjectBrowser, connect(null, {\n  setSidebarTab: setSidebarTab\n}))(Edit);","map":{"version":3,"names":["React","Component","PropTypes","compose","connect","defineMessages","injectIntl","cx","setSidebarTab","config","withObjectBrowser","SidebarPortal","BlockSettingsSidebar","BlockSettingsSchema","messages","unknownBlock","Edit","createRef","type","props","blocksConfig","blocks","blockHasOwnFocusManagement","selected","blockNode","current","focus","tab","manage","sidebarTab","editable","nextProps","disableNewBlocks","data","Block","readOnly","showEditBlocksInBabelView","schema","e","isMultipleSelection","shiftKey","ctrlKey","metaKey","onSelectBlock","id","handleKeyDown","index","styles","stretch","multiSelected","outline","intl","formatMessage","block","string","isRequired","objectOf","any","properties","bool","number","onMoveBlock","func","onDeleteBlock"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/customizations/volto/components/manage/Blocks/Block/Edit.jsx"],"sourcesContent":["/**\n * Edit block.\n * @module components/manage/Blocks/Block/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { setSidebarTab } from '@plone/volto/actions';\nimport config from '@plone/volto/registry';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\n\nimport {\n  SidebarPortal,\n  BlockSettingsSidebar,\n  BlockSettingsSchema,\n} from '@plone/volto/components';\n\nconst messages = defineMessages({\n  unknownBlock: {\n    id: 'Unknown Block',\n    defaultMessage: 'Unknown Block {block}',\n  },\n});\n\n/**\n * Edit block class.\n * @class Edit\n * @extends Component\n */\nexport class Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    type: PropTypes.string.isRequired,\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    // properties is mapped to formData, so it's not connected to changes of the object\n    properties: PropTypes.objectOf(PropTypes.any).isRequired,\n    selected: PropTypes.bool.isRequired,\n    multiSelected: PropTypes.bool,\n    index: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n    manage: PropTypes.bool,\n    onMoveBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    editable: PropTypes.bool,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    manage: false,\n    editable: true,\n  };\n\n  componentDidMount() {\n    const { type } = this.props;\n    const { blocksConfig = config.blocks.blocksConfig } = this.props;\n\n    const blockHasOwnFocusManagement =\n      blocksConfig?.[type]?.['blockHasOwnFocusManagement'] || null;\n    if (\n      !blockHasOwnFocusManagement &&\n      this.props.selected &&\n      this.blockNode.current\n    ) {\n      this.blockNode.current.focus();\n    }\n    const tab = this.props.manage ? 1 : blocksConfig?.[type]?.sidebarTab || 0;\n    if (this.props.selected && this.props.editable) {\n      this.props.setSidebarTab(tab);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { blocksConfig = config.blocks.blocksConfig } = this.props;\n    const { selected, type } = this.props;\n    const blockHasOwnFocusManagement =\n      blocksConfig?.[type]?.['blockHasOwnFocusManagement'] || null;\n    if (\n      !blockHasOwnFocusManagement &&\n      nextProps.selected &&\n      selected !== nextProps.selected &&\n      this.blockNode.current\n    ) {\n      this.blockNode.current.focus();\n    }\n    if (\n      ((!this.props.selected && nextProps.selected) ||\n        type !== nextProps.type) &&\n      this.props.editable\n    ) {\n      const tab = this.props.manage\n        ? 1\n        : blocksConfig?.[nextProps.type]?.sidebarTab || 0;\n      this.props.setSidebarTab(tab);\n    }\n  }\n\n  blockNode = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { blocksConfig = config.blocks.blocksConfig } = this.props;\n    const { editable, type } = this.props;\n\n    const disableNewBlocks = this.props.data?.disableNewBlocks;\n\n    let Block = blocksConfig?.[type]?.['edit'] || null;\n    if (\n      this.props.data?.readOnly ||\n      (!editable && !config.blocks.showEditBlocksInBabelView)\n    ) {\n      Block = blocksConfig?.[type]?.['view'] || null;\n    }\n    const schema = blocksConfig?.[type]?.['schema'] || BlockSettingsSchema;\n    const blockHasOwnFocusManagement =\n      blocksConfig?.[type]?.['blockHasOwnFocusManagement'] || null;\n\n    return (\n      <>\n        {Block !== null ? (\n          <div\n            role=\"presentation\"\n            onClick={(e) => {\n              const isMultipleSelection = e.shiftKey || e.ctrlKey || e.metaKey;\n              !this.props.selected &&\n                this.props.onSelectBlock(\n                  this.props.id,\n                  this.props.selected ? false : isMultipleSelection,\n                  e,\n                );\n            }}\n            onKeyDown={\n              !(blockHasOwnFocusManagement || disableNewBlocks)\n                ? (e) =>\n                    this.props.handleKeyDown(\n                      e,\n                      this.props.index,\n                      this.props.id,\n                      this.blockNode.current,\n                    )\n                : null\n            }\n            className={cx(`block ${type}`, {\n              //TODO: add stretched group trigger for block border\n              'stretched-group':\n                this.props.data.styles &&\n                this.props.type === 'group' &&\n                this.props.data.styles.stretch &&\n                this.props.data.styles.stretch === 'stretch',\n              selected: this.props.selected || this.props.multiSelected,\n              multiSelected: this.props.multiSelected,\n            })}\n            style={{ outline: 'none' }}\n            ref={this.blockNode}\n            // The tabIndex is required for the keyboard navigation\n            /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n            tabIndex={!blockHasOwnFocusManagement ? -1 : null}\n          >\n            <Block {...this.props} blockNode={this.blockNode} />\n            {this.props.manage && (\n              <SidebarPortal\n                selected={this.props.selected}\n                tab=\"sidebar-settings\"\n              >\n                <BlockSettingsSidebar {...this.props} schema={schema} />\n              </SidebarPortal>\n            )}\n          </div>\n        ) : (\n          <div\n            role=\"presentation\"\n            onClick={() =>\n              !this.props.selected && this.props.onSelectBlock(this.props.id)\n            }\n            onKeyDown={\n              !(blockHasOwnFocusManagement || disableNewBlocks)\n                ? (e) =>\n                    this.props.handleKeyDown(\n                      e,\n                      this.props.index,\n                      this.props.id,\n                      this.blockNode.current,\n                    )\n                : null\n            }\n            className={cx(`block ${type}`, {\n              selected: this.props.selected,\n            })}\n            style={{ outline: 'none' }}\n            ref={this.blockNode}\n            // The tabIndex is required for the keyboard navigation\n            tabIndex={-1}\n          >\n            {this.props.intl.formatMessage(messages.unknownBlock, {\n              block: type,\n            })}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  withObjectBrowser,\n  connect(null, { setSidebarTab }),\n)(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Unknown Block","defaultMessage":"Unknown Block {block}"}]}},"sourceType":"module","externalDependencies":[]}