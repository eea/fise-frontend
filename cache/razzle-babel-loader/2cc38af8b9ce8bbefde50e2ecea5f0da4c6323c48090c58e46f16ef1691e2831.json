{"ast":null,"code":"import _omit from \"lodash/omit\";\nimport _isEqual from \"lodash/isEqual\";\nimport _isEmpty from \"lodash/isEmpty\";\nconst _excluded = [\"element\", \"attributes\", \"extras\"],\n  _excluded2 = [\"children\"];\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/serialize.js\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport cx from 'classnames';\nimport { Node, Text } from 'slate';\nimport config from '@plone/volto/registry';\nconst OMITTED = ['editor', 'path'];\n\n// TODO: read, see if relevant\n// https://reactjs.org/docs/higher-order-components.html#dont-use-hocs-inside-the-render-method\nexport const Element = _ref => {\n  let {\n      element,\n      attributes = {},\n      extras\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  const {\n    slate\n  } = config.settings;\n  const {\n    elements\n  } = slate;\n  const El = elements[element.type] || elements['default'];\n  const out = Object.assign({}, ...Object.keys(attributes || {}).map(k => !_isEmpty(attributes[k]) ? {\n    [k]: attributes[k]\n  } : {}));\n  return __jsx(El, _extends({\n    element: element\n  }, _omit(rest, OMITTED), {\n    attributes: out,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  }));\n};\nexport const Leaf = _ref2 => {\n  let {\n      children\n    } = _ref2,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  const {\n    attributes,\n    leaf,\n    mode\n  } = rest;\n  let {\n    leafs\n  } = config.settings.slate;\n  children = Object.keys(leafs).reduce((acc, name) => {\n    return Object.keys(leaf).includes(name) ? leafs[name]({\n      children: acc\n    }) : acc;\n  }, children);\n  const obj = {\n    [`highlight-${leaf.highlightType}`]: mode !== 'view' && leaf.highlight,\n    'highlight-selection': mode !== 'view' && leaf.isSelection\n  };\n\n  // stylemenu support\n  for (const prop in leaf) {\n    if (prop.startsWith('style-')) {\n      obj[prop.substring(6)] = true;\n    }\n  }\n  const klass = cx(obj);\n  return mode === 'view' ? typeof children === 'string' ? children.split('\\n').map((t, i) => {\n    // Softbreak support. Should do a plugin?\n    return __jsx(React.Fragment, {\n      key: `${i}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, children.indexOf('\\n') > -1 && children.split('\\n').length - 1 > i ? __jsx(React.Fragment, null, klass ? __jsx(\"span\", {\n      className: klass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 26\n      }\n    }, t) : t, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    })) : klass ? __jsx(\"span\", {\n      className: klass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, t) : t);\n  }) : __jsx(\"span\", {\n    className: klass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, children) : __jsx(\"span\", _extends({}, attributes, {\n    className: klass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }), children);\n};\nconst serializeData = node => {\n  return JSON.stringify({\n    type: node.type,\n    data: node.data\n  });\n};\nexport const serializeNodes = (nodes, getAttributes) => {\n  const editor = {\n    children: nodes || []\n  };\n  const _serializeNodes = nodes => {\n    return (nodes || []).map(([node, path], i) => {\n      return Text.isText(node) ? __jsx(Leaf, {\n        path: path,\n        leaf: node,\n        text: node,\n        mode: \"view\",\n        key: path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, node.text) : __jsx(Element, {\n        path: path,\n        element: node,\n        mode: \"view\",\n        key: path,\n        \"data-slate-data\": node.data ? serializeData(node) : null,\n        attributes: _isEqual(path, [0]) ? getAttributes ? getAttributes(node, path) : null : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, _serializeNodes(Array.from(Node.children(editor, path))));\n    });\n  };\n  return _serializeNodes(Array.from(Node.children(editor, [])));\n};\nexport const serializeNodesToText = nodes => {\n  return nodes.map(n => Node.string(n)).join('\\n');\n};\nexport const serializeNodesToHtml = nodes => renderToStaticMarkup(serializeNodes(nodes));","map":{"version":3,"names":["React","renderToStaticMarkup","cx","Node","Text","config","OMITTED","Element","element","attributes","extras","rest","slate","settings","elements","El","type","out","Object","assign","keys","map","k","Leaf","children","leaf","mode","leafs","reduce","acc","name","includes","obj","highlightType","highlight","isSelection","prop","startsWith","substring","klass","split","t","i","indexOf","length","serializeData","node","JSON","stringify","data","serializeNodes","nodes","getAttributes","editor","_serializeNodes","path","isText","text","Array","from","serializeNodesToText","n","string","join","serializeNodesToHtml"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/serialize.js"],"sourcesContent":["import React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport cx from 'classnames';\nimport { isEmpty, isEqual, omit } from 'lodash';\nimport { Node, Text } from 'slate';\nimport config from '@plone/volto/registry';\n\nconst OMITTED = ['editor', 'path'];\n\n// TODO: read, see if relevant\n// https://reactjs.org/docs/higher-order-components.html#dont-use-hocs-inside-the-render-method\nexport const Element = ({ element, attributes = {}, extras, ...rest }) => {\n  const { slate } = config.settings;\n  const { elements } = slate;\n  const El = elements[element.type] || elements['default'];\n\n  const out = Object.assign(\n    {},\n    ...Object.keys(attributes || {}).map((k) =>\n      !isEmpty(attributes[k]) ? { [k]: attributes[k] } : {},\n    ),\n  );\n  return <El element={element} {...omit(rest, OMITTED)} attributes={out} />;\n};\n\nexport const Leaf = ({ children, ...rest }) => {\n  const { attributes, leaf, mode } = rest;\n  let { leafs } = config.settings.slate;\n\n  children = Object.keys(leafs).reduce((acc, name) => {\n    return Object.keys(leaf).includes(name)\n      ? leafs[name]({ children: acc })\n      : acc;\n  }, children);\n\n  const obj = {\n    [`highlight-${leaf.highlightType}`]: mode !== 'view' && leaf.highlight,\n    'highlight-selection': mode !== 'view' && leaf.isSelection,\n  };\n\n  // stylemenu support\n  for (const prop in leaf) {\n    if (prop.startsWith('style-')) {\n      obj[prop.substring(6)] = true;\n    }\n  }\n\n  const klass = cx(obj);\n\n  return mode === 'view' ? (\n    typeof children === 'string' ? (\n      children.split('\\n').map((t, i) => {\n        // Softbreak support. Should do a plugin?\n        return (\n          <React.Fragment key={`${i}`}>\n            {children.indexOf('\\n') > -1 &&\n            children.split('\\n').length - 1 > i ? (\n              <>\n                {klass ? <span className={klass}>{t}</span> : t}\n                <br />\n              </>\n            ) : klass ? (\n              <span className={klass}>{t}</span>\n            ) : (\n              t\n            )}\n          </React.Fragment>\n        );\n      })\n    ) : (\n      <span className={klass}>{children}</span>\n    )\n  ) : (\n    <span {...attributes} className={klass}>\n      {children}\n    </span>\n  );\n};\n\nconst serializeData = (node) => {\n  return JSON.stringify({ type: node.type, data: node.data });\n};\n\nexport const serializeNodes = (nodes, getAttributes) => {\n  const editor = { children: nodes || [] };\n\n  const _serializeNodes = (nodes) => {\n    return (nodes || []).map(([node, path], i) => {\n      return Text.isText(node) ? (\n        <Leaf path={path} leaf={node} text={node} mode=\"view\" key={path}>\n          {node.text}\n        </Leaf>\n      ) : (\n        <Element\n          path={path}\n          element={node}\n          mode=\"view\"\n          key={path}\n          data-slate-data={node.data ? serializeData(node) : null}\n          attributes={\n            isEqual(path, [0])\n              ? getAttributes\n                ? getAttributes(node, path)\n                : null\n              : null\n          }\n        >\n          {_serializeNodes(Array.from(Node.children(editor, path)))}\n        </Element>\n      );\n    });\n  };\n\n  return _serializeNodes(Array.from(Node.children(editor, [])));\n};\n\nexport const serializeNodesToText = (nodes) => {\n  return nodes.map((n) => Node.string(n)).join('\\n');\n};\n\nexport const serializeNodesToHtml = (nodes) =>\n  renderToStaticMarkup(serializeNodes(nodes));\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}