{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Addons reducer.\n * @module reducers/addons/addons\n */\n\nimport { INSTALL_ADDON, LIST_ADDONS, UNINSTALL_ADDON } from '../../constants/ActionTypes';\nvar initialState = {\n  error: null,\n  installedAddons: [],\n  availableAddons: [],\n  upgradableAddons: [],\n  loaded: false,\n  loading: false\n};\n\n/**\n * Case-insensitive sorting method for Addons names.\n * @function addonsSorter\n * @param {String} a Add-on name.\n * @param {String} b Add-on name.\n * @returns {Number} Comparison result.\n */\nfunction addonsSorter(a, b) {\n  var titleA = a.title.toUpperCase();\n  var titleB = b.title.toUpperCase();\n  if (titleA < titleB) {\n    return -1;\n  } else if (titleA > titleB) {\n    return 1;\n  }\n  return 0;\n}\n\n/**\n * Addons reducer.\n * @function addons\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function addons() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case \"\".concat(INSTALL_ADDON, \"_PENDING\"):\n    case \"\".concat(LIST_ADDONS, \"_PENDING\"):\n    case \"\".concat(UNINSTALL_ADDON, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case \"\".concat(LIST_ADDONS, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        installedAddons: action.result.items.filter(function (elem) {\n          return elem.is_installed === true;\n        }).sort(addonsSorter),\n        availableAddons: action.result.items.filter(function (elem) {\n          return elem.is_installed === false;\n        }).sort(addonsSorter),\n        upgradableAddons: action.result.items.filter(function (elem) {\n          return elem.upgrade_info.available === true;\n        }).sort(addonsSorter),\n        loaded: true,\n        loading: false\n      });\n    case \"\".concat(INSTALL_ADDON, \"_SUCCESS\"):\n    case \"\".concat(UNINSTALL_ADDON, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: true,\n        loading: false\n      });\n    case \"\".concat(INSTALL_ADDON, \"_FAIL\"):\n    case \"\".concat(LIST_ADDONS, \"_FAIL\"):\n    case \"\".concat(UNINSTALL_ADDON, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        installedAddons: [],\n        availableAddons: [],\n        upgradableAddons: [],\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["INSTALL_ADDON","LIST_ADDONS","UNINSTALL_ADDON","initialState","error","installedAddons","availableAddons","upgradableAddons","loaded","loading","addonsSorter","a","b","titleA","title","toUpperCase","titleB","addons","state","action","type","result","items","filter","elem","is_installed","sort","upgrade_info","available"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/addons/addons.js"],"sourcesContent":["/**\n * Addons reducer.\n * @module reducers/addons/addons\n */\n\nimport {\n  INSTALL_ADDON,\n  LIST_ADDONS,\n  UNINSTALL_ADDON,\n} from '../../constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  installedAddons: [],\n  availableAddons: [],\n  upgradableAddons: [],\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Case-insensitive sorting method for Addons names.\n * @function addonsSorter\n * @param {String} a Add-on name.\n * @param {String} b Add-on name.\n * @returns {Number} Comparison result.\n */\nfunction addonsSorter(a, b) {\n  const titleA = a.title.toUpperCase();\n  const titleB = b.title.toUpperCase();\n  if (titleA < titleB) {\n    return -1;\n  } else if (titleA > titleB) {\n    return 1;\n  }\n  return 0;\n}\n\n/**\n * Addons reducer.\n * @function addons\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function addons(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${INSTALL_ADDON}_PENDING`:\n    case `${LIST_ADDONS}_PENDING`:\n    case `${UNINSTALL_ADDON}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${LIST_ADDONS}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        installedAddons: action.result.items\n          .filter((elem) => elem.is_installed === true)\n          .sort(addonsSorter),\n        availableAddons: action.result.items\n          .filter((elem) => elem.is_installed === false)\n          .sort(addonsSorter),\n        upgradableAddons: action.result.items\n          .filter((elem) => elem.upgrade_info.available === true)\n          .sort(addonsSorter),\n        loaded: true,\n        loading: false,\n      };\n    case `${INSTALL_ADDON}_SUCCESS`:\n    case `${UNINSTALL_ADDON}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        loaded: true,\n        loading: false,\n      };\n    case `${INSTALL_ADDON}_FAIL`:\n    case `${LIST_ADDONS}_FAIL`:\n    case `${UNINSTALL_ADDON}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        installedAddons: [],\n        availableAddons: [],\n        upgradableAddons: [],\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA,SACEA,aAAa,EACbC,WAAW,EACXC,eAAe,QACV,6BAA6B;AAEpC,IAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,eAAe,EAAE,EAAE;EACnBC,eAAe,EAAE,EAAE;EACnBC,gBAAgB,EAAE,EAAE;EACpBC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAY,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC1B,IAAMC,MAAM,GAAGF,CAAC,CAACG,KAAK,CAACC,WAAW,EAAE;EACpC,IAAMC,MAAM,GAAGJ,CAAC,CAACE,KAAK,CAACC,WAAW,EAAE;EACpC,IAAIF,MAAM,GAAGG,MAAM,EAAE;IACnB,OAAO,CAAC,CAAC;EACX,CAAC,MAAM,IAAIH,MAAM,GAAGG,MAAM,EAAE;IAC1B,OAAO,CAAC;EACV;EACA,OAAO,CAAC;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,MAAM,GAAoC;EAAA,IAAnCC,KAAK,uEAAGf,YAAY;EAAA,IAAEgB,MAAM,uEAAG,CAAC,CAAC;EAC9D,QAAQA,MAAM,CAACC,IAAI;IACjB,eAAQpB,aAAa;IACrB,eAAQC,WAAW;IACnB,eAAQC,eAAe;MACrB,uCACKgB,KAAK;QACRd,KAAK,EAAE,IAAI;QACXI,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAEjB,eAAQR,WAAW;MACjB,uCACKiB,KAAK;QACRd,KAAK,EAAE,IAAI;QACXC,eAAe,EAAEc,MAAM,CAACE,MAAM,CAACC,KAAK,CACjCC,MAAM,CAAC,UAACC,IAAI;UAAA,OAAKA,IAAI,CAACC,YAAY,KAAK,IAAI;QAAA,EAAC,CAC5CC,IAAI,CAAChB,YAAY,CAAC;QACrBJ,eAAe,EAAEa,MAAM,CAACE,MAAM,CAACC,KAAK,CACjCC,MAAM,CAAC,UAACC,IAAI;UAAA,OAAKA,IAAI,CAACC,YAAY,KAAK,KAAK;QAAA,EAAC,CAC7CC,IAAI,CAAChB,YAAY,CAAC;QACrBH,gBAAgB,EAAEY,MAAM,CAACE,MAAM,CAACC,KAAK,CAClCC,MAAM,CAAC,UAACC,IAAI;UAAA,OAAKA,IAAI,CAACG,YAAY,CAACC,SAAS,KAAK,IAAI;QAAA,EAAC,CACtDF,IAAI,CAAChB,YAAY,CAAC;QACrBF,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MAAK;IAElB,eAAQT,aAAa;IACrB,eAAQE,eAAe;MACrB,uCACKgB,KAAK;QACRd,KAAK,EAAE,IAAI;QACXI,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MAAK;IAElB,eAAQT,aAAa;IACrB,eAAQC,WAAW;IACnB,eAAQC,eAAe;MACrB,uCACKgB,KAAK;QACRd,KAAK,EAAEe,MAAM,CAACf,KAAK;QACnBC,eAAe,EAAE,EAAE;QACnBC,eAAe,EAAE,EAAE;QACnBC,gBAAgB,EAAE,EAAE;QACpBC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAK;IAElB;MACE,OAAOS,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}