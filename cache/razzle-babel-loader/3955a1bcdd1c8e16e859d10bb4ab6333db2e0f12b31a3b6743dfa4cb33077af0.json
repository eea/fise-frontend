{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Listing/View.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { withBlockExtensions } from '@plone/volto/helpers';\nimport { ListingBlockBody as ListingBody } from '@plone/volto/components';\nvar View = function View(props) {\n  var data = props.data,\n    path = props.path,\n    pathname = props.pathname,\n    className = props.className;\n  var HeadlineTag = data.headlineTag || 'h2';\n  return __jsx(\"div\", {\n    className: cx('block listing', data.variation || 'default', className),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, data.headline && __jsx(HeadlineTag, {\n    className: \"headline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, data.headline), __jsx(ListingBody, _extends({}, props, {\n    path: path !== null && path !== void 0 ? path : pathname,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  })));\n};\n_c = View;\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string\n};\nexport default _c2 = withBlockExtensions(View);\nvar _c, _c2;\n$RefreshReg$(_c, \"View\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","PropTypes","cx","withBlockExtensions","ListingBlockBody","ListingBody","View","props","data","path","pathname","className","HeadlineTag","headlineTag","variation","headline","propTypes","objectOf","any","isRequired","properties","block","string"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Listing/View.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { withBlockExtensions } from '@plone/volto/helpers';\n\nimport { ListingBlockBody as ListingBody } from '@plone/volto/components';\n\nconst View = (props) => {\n  const { data, path, pathname, className } = props;\n  const HeadlineTag = data.headlineTag || 'h2';\n\n  return (\n    <div\n      className={cx('block listing', data.variation || 'default', className)}\n    >\n      {data.headline && (\n        <HeadlineTag className=\"headline\">{data.headline}</HeadlineTag>\n      )}\n      <ListingBody {...props} path={path ?? pathname} />\n    </div>\n  );\n};\n\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string,\n};\n\nexport default withBlockExtensions(View);\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,mBAAmB,QAAQ,sBAAsB;AAE1D,SAASC,gBAAgB,IAAIC,WAAW,QAAQ,yBAAyB;AAEzE,IAAMC,IAAI,GAAG,SAAPA,IAAI,CAAIC,KAAK,EAAK;EACtB,IAAQC,IAAI,GAAgCD,KAAK,CAAzCC,IAAI;IAAEC,IAAI,GAA0BF,KAAK,CAAnCE,IAAI;IAAEC,QAAQ,GAAgBH,KAAK,CAA7BG,QAAQ;IAAEC,SAAS,GAAKJ,KAAK,CAAnBI,SAAS;EACvC,IAAMC,WAAW,GAAGJ,IAAI,CAACK,WAAW,IAAI,IAAI;EAE5C,OACE;IACE,SAAS,EAAEX,EAAE,CAAC,eAAe,EAAEM,IAAI,CAACM,SAAS,IAAI,SAAS,EAAEH,SAAS,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEtEH,IAAI,CAACO,QAAQ,IACZ,MAAC,WAAW;IAAC,SAAS,EAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEP,IAAI,CAACO,QAAQ,CACjD,EACD,MAAC,WAAW,eAAKR,KAAK;IAAE,IAAI,EAAEE,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAIC,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,CAC9C;AAEV,CAAC;AAAC,KAdIJ,IAAI;AAgBVA,IAAI,CAACU,SAAS,GAAG;EACfR,IAAI,EAAEP,SAAS,CAACgB,QAAQ,CAAChB,SAAS,CAACiB,GAAG,CAAC,CAACC,UAAU;EAClDC,UAAU,EAAEnB,SAAS,CAACgB,QAAQ,CAAChB,SAAS,CAACiB,GAAG,CAAC,CAACC,UAAU;EACxDE,KAAK,EAAEpB,SAAS,CAACqB;AACnB,CAAC;AAED,qBAAenB,mBAAmB,CAACG,IAAI,CAAC;AAAC;AAAA;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}