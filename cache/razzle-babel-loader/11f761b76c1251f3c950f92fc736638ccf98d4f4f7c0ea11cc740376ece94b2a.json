{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Actions reducer.\n * @module reducers/actions/actions\n */\n\nimport { LIST_ACTIONS } from '@plone/volto/constants/ActionTypes';\nvar initialState = {\n  error: null,\n  actions: {\n    object: [],\n    object_buttons: [],\n    site_actions: [],\n    user: [],\n    document_actions: [],\n    portal_tabs: []\n  },\n  loaded: false,\n  loading: false\n};\n\n/**\n * Actions reducer.\n * @function actions\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function actions() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case \"\".concat(LIST_ACTIONS, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case \"\".concat(LIST_ACTIONS, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        actions: action.result,\n        loaded: true,\n        loading: false\n      });\n    case \"\".concat(LIST_ACTIONS, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        actions: {},\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["LIST_ACTIONS","initialState","error","actions","object","object_buttons","site_actions","user","document_actions","portal_tabs","loaded","loading","state","action","type","result"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/actions/actions.js"],"sourcesContent":["/**\n * Actions reducer.\n * @module reducers/actions/actions\n */\n\nimport { LIST_ACTIONS } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  actions: {\n    object: [],\n    object_buttons: [],\n    site_actions: [],\n    user: [],\n    document_actions: [],\n    portal_tabs: [],\n  },\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Actions reducer.\n * @function actions\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function actions(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${LIST_ACTIONS}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${LIST_ACTIONS}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        actions: action.result,\n        loaded: true,\n        loading: false,\n      };\n    case `${LIST_ACTIONS}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        actions: {},\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA,SAASA,YAAY,QAAQ,oCAAoC;AAEjE,IAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;IACPC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE,EAAE;IAChBC,IAAI,EAAE,EAAE;IACRC,gBAAgB,EAAE,EAAE;IACpBC,WAAW,EAAE;EACf,CAAC;EACDC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASR,OAAO,GAAoC;EAAA,IAAnCS,KAAK,uEAAGX,YAAY;EAAA,IAAEY,MAAM,uEAAG,CAAC,CAAC;EAC/D,QAAQA,MAAM,CAACC,IAAI;IACjB,eAAQd,YAAY;MAClB,uCACKY,KAAK;QACRV,KAAK,EAAE,IAAI;QACXQ,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAEjB,eAAQX,YAAY;MAClB,uCACKY,KAAK;QACRV,KAAK,EAAE,IAAI;QACXC,OAAO,EAAEU,MAAM,CAACE,MAAM;QACtBL,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MAAK;IAElB,eAAQX,YAAY;MAClB,uCACKY,KAAK;QACRV,KAAK,EAAEW,MAAM,CAACX,KAAK;QACnBC,OAAO,EAAE,CAAC,CAAC;QACXO,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAK;IAElB;MACE,OAAOC,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}