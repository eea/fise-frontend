{"ast":null,"code":"import _map from \"lodash/map\";\nimport _filter from \"lodash/filter\";\nimport _concat from \"lodash/concat\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Contents/ContentsUploadModal.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Contents upload modal.\n * @module components/manage/Contents/ContentsUploadModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Button, Dimmer, Header, Icon, Image, Loader, Modal, Table, Segment } from 'semantic-ui-react';\nimport loadable from '@loadable/component';\nimport filesize from 'filesize';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { FormattedRelativeDate } from '@plone/volto/components';\nimport { createContent } from '@plone/volto/actions';\nconst Dropzone = loadable({\n  resolved: {},\n  chunkName() {\n    return \"react-dropzone\";\n  },\n  isReady(props) {\n    var key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: () => import( /* webpackChunkName: \"react-dropzone\" */'react-dropzone'),\n  requireAsync(props) {\n    var _this = this;\n    var key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(function (resolved) {\n      _this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync(props) {\n    var id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-dropzone\");\n    }\n    return eval('require.resolve')(\"react-dropzone\");\n  }\n});\nconst messages = defineMessages({\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  upload: {\n    \"id\": \"{count, plural, one {Upload {count} file} other {Upload {count} files}}\",\n    \"defaultMessage\": \"{count, plural, one {Upload {count} file} other {Upload {count} files}}\"\n  }\n});\nconst SUBREQUEST = 'batch-upload';\n\n/**\n * ContentsUploadModal class.\n * @class ContentsUploadModal\n * @extends Component\n */\nclass ContentsUploadModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"onDrop\", async files => {\n      for (let i = 0; i < files.length; i++) {\n        await readAsDataURL(files[i]).then(data => {\n          const fields = data.match(/^data:(.*);(.*),(.*)$/);\n          files[i].preview = fields[0];\n        });\n      }\n      this.setState({\n        files: _concat(this.state.files, files)\n      });\n    });\n    this.onRemoveFile = this.onRemoveFile.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      files: []\n    };\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n      this.setState({\n        files: []\n      });\n    }\n  }\n\n  /**\n   * Remove file handler\n   * @method onRemoveFile\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  onRemoveFile(event) {\n    this.setState({\n      files: _filter(this.state.files, (file, index) => index !== parseInt(event.target.getAttribute('value'), 10))\n    });\n  }\n\n  /**\n   * Drop handler\n   * @method onDrop\n   * @param {array} files File objects\n   * @returns {undefined}\n   */\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.onCancel();\n    this.setState({\n      files: []\n    });\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @returns {undefined}\n   */\n  onSubmit() {\n    Promise.all(_map(this.state.files, file => readAsDataURL(file))).then(files => {\n      this.props.createContent(this.props.pathname, _map(this.state.files, (file, index) => {\n        const fields = files[index].match(/^data:(.*);(.*),(.*)$/);\n        const image = fields[1].split('/')[0] === 'image';\n        return {\n          '@type': image ? 'Image' : 'File',\n          title: file.name,\n          [image ? 'image' : 'file']: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file.name\n          }\n        };\n      }), SUBREQUEST);\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return this.props.open && __jsx(Modal, {\n      open: this.props.open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, __jsx(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Upload files\",\n      defaultMessage: \"Upload files\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    })), __jsx(Dimmer, {\n      active: this.props.request.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Uploading files\",\n      defaultMessage: \"Uploading files\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }))), __jsx(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, __jsx(Dropzone, {\n      onDrop: this.onDrop,\n      className: \"dropzone\",\n      noDragEventsBubbling: true,\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => __jsx(\"div\", _extends({}, getRootProps({\n      className: 'dashed'\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }, __jsx(Table, {\n      basic: \"very\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 23\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 27\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Drag and drop files from your computer onto this area or click the \\u201CBrowse\\u201D button.\",\n      defaultMessage: \"Drag and drop files from your computer onto this area or click the \\u201CBrowse\\u201D button.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 27\n      }\n    }, __jsx(Button, {\n      className: \"ui button primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Browse\",\n      defaultMessage: \"Browse\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 31\n      }\n    })), __jsx(\"input\", _extends({}, getInputProps({\n      type: 'file',\n      style: {\n        display: 'none'\n      }\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 29\n      }\n    }))))))))), this.state.files.length > 0 && __jsx(Table, {\n      compact: true,\n      singleLine: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 19\n      }\n    }, __jsx(Table.HeaderCell, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Filename\",\n      defaultMessage: \"Filename\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 23\n      }\n    })), __jsx(Table.HeaderCell, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Last modified\",\n      defaultMessage: \"Last modified\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 23\n      }\n    })), __jsx(Table.HeaderCell, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"File size\",\n      defaultMessage: \"File size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 23\n      }\n    })), __jsx(Table.HeaderCell, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Preview\",\n      defaultMessage: \"Preview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 23\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }))), __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, _map(this.state.files, (file, index) => __jsx(Table.Row, {\n      className: \"upload-row\",\n      key: file.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 23\n      }\n    }, file.name), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 23\n      }\n    }, file.lastModifiedDate && __jsx(FormattedRelativeDate, {\n      date: file.lastModifiedDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 27\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 23\n      }\n    }, filesize(file.size, {\n      round: 0\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 23\n      }\n    }, file.type.split('/')[0] === 'image' && __jsx(Image, {\n      src: file.preview,\n      height: 60,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 27\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 23\n      }\n    }, __jsx(Icon, {\n      name: \"close\",\n      value: index,\n      link: true,\n      onClick: this.onRemoveFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 25\n      }\n    }))))))), __jsx(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }\n    }, this.state.files.length > 0 && __jsx(Button, {\n      basic: true,\n      circular: true,\n      primary: true,\n      floated: \"right\",\n      icon: \"arrow right\",\n      \"aria-label\": this.props.intl.formatMessage(messages.upload, {\n        count: this.state.files.length\n      }),\n      onClick: this.onSubmit,\n      title: this.props.intl.formatMessage(messages.upload, {\n        count: this.state.files.length\n      }),\n      size: \"big\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 15\n      }\n    }), __jsx(Button, {\n      basic: true,\n      circular: true,\n      secondary: true,\n      icon: \"remove\",\n      \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n      title: this.props.intl.formatMessage(messages.cancel),\n      floated: \"right\",\n      size: \"big\",\n      onClick: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n_defineProperty(ContentsUploadModal, \"propTypes\", {\n  createContent: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  request: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  onOk: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect(state => {\n  var _state$content$subreq;\n  return {\n    request: ((_state$content$subreq = state.content.subrequests) === null || _state$content$subreq === void 0 ? void 0 : _state$content$subreq[SUBREQUEST]) || {}\n  };\n}, {\n  createContent\n}))(ContentsUploadModal);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Button","Dimmer","Header","Icon","Image","Loader","Modal","Table","Segment","loadable","filesize","readAsDataURL","FormattedMessage","defineMessages","injectIntl","FormattedRelativeDate","createContent","Dropzone","messages","cancel","upload","SUBREQUEST","ContentsUploadModal","constructor","props","files","i","length","then","data","fields","match","preview","setState","state","onRemoveFile","bind","onDrop","onCancel","onSubmit","UNSAFE_componentWillReceiveProps","nextProps","request","loading","loaded","onOk","event","file","index","parseInt","target","getAttribute","Promise","all","pathname","image","split","title","name","encoding","filename","render","open","getRootProps","getInputProps","className","type","style","display","lastModifiedDate","size","round","intl","formatMessage","count","func","isRequired","string","shape","bool","content","subrequests"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Contents/ContentsUploadModal.jsx"],"sourcesContent":["/**\n * Contents upload modal.\n * @module components/manage/Contents/ContentsUploadModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport {\n  Button,\n  Dimmer,\n  Header,\n  Icon,\n  Image,\n  Loader,\n  Modal,\n  Table,\n  Segment,\n} from 'semantic-ui-react';\nimport loadable from '@loadable/component';\nimport { concat, filter, map } from 'lodash';\nimport filesize from 'filesize';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { FormattedRelativeDate } from '@plone/volto/components';\nimport { createContent } from '@plone/volto/actions';\n\nconst Dropzone = loadable(() => import('react-dropzone'));\n\nconst messages = defineMessages({\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  upload: {\n    id:\n      '{count, plural, one {Upload {count} file} other {Upload {count} files}}',\n    defaultMessage:\n      '{count, plural, one {Upload {count} file} other {Upload {count} files}}',\n  },\n});\n\nconst SUBREQUEST = 'batch-upload';\n\n/**\n * ContentsUploadModal class.\n * @class ContentsUploadModal\n * @extends Component\n */\nclass ContentsUploadModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    createContent: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    open: PropTypes.bool.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  constructor(props) {\n    super(props);\n    this.onRemoveFile = this.onRemoveFile.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      files: [],\n    };\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n      this.setState({\n        files: [],\n      });\n    }\n  }\n\n  /**\n   * Remove file handler\n   * @method onRemoveFile\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  onRemoveFile(event) {\n    this.setState({\n      files: filter(\n        this.state.files,\n        (file, index) =>\n          index !== parseInt(event.target.getAttribute('value'), 10),\n      ),\n    });\n  }\n\n  /**\n   * Drop handler\n   * @method onDrop\n   * @param {array} files File objects\n   * @returns {undefined}\n   */\n  onDrop = async (files) => {\n    for (let i = 0; i < files.length; i++) {\n      await readAsDataURL(files[i]).then((data) => {\n        const fields = data.match(/^data:(.*);(.*),(.*)$/);\n        files[i].preview = fields[0];\n      });\n    }\n    this.setState({\n      files: concat(this.state.files, files),\n    });\n  };\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.onCancel();\n    this.setState({\n      files: [],\n    });\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @returns {undefined}\n   */\n  onSubmit() {\n    Promise.all(map(this.state.files, (file) => readAsDataURL(file))).then(\n      (files) => {\n        this.props.createContent(\n          this.props.pathname,\n          map(this.state.files, (file, index) => {\n            const fields = files[index].match(/^data:(.*);(.*),(.*)$/);\n            const image = fields[1].split('/')[0] === 'image';\n            return {\n              '@type': image ? 'Image' : 'File',\n              title: file.name,\n              [image ? 'image' : 'file']: {\n                data: fields[3],\n                encoding: fields[2],\n                'content-type': fields[1],\n                filename: file.name,\n              },\n            };\n          }),\n          SUBREQUEST,\n        );\n      },\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      this.props.open && (\n        <Modal open={this.props.open}>\n          <Header>\n            <FormattedMessage id=\"Upload files\" defaultMessage=\"Upload files\" />\n          </Header>\n          <Dimmer active={this.props.request.loading}>\n            <Loader>\n              <FormattedMessage\n                id=\"Uploading files\"\n                defaultMessage=\"Uploading files\"\n              />\n            </Loader>\n          </Dimmer>\n          <Modal.Content>\n            <Dropzone\n              onDrop={this.onDrop}\n              className=\"dropzone\"\n              noDragEventsBubbling={true}\n              multiple={true}\n            >\n              {({ getRootProps, getInputProps }) => (\n                <div {...getRootProps({ className: 'dashed' })}>\n                  <Segment>\n                    <Table basic=\"very\">\n                      <Table.Body>\n                        <Table.Row>\n                          <Table.Cell>\n                            <FormattedMessage\n                              id=\"Drag and drop files from your computer onto this area or click the “Browse” button.\"\n                              defaultMessage=\"Drag and drop files from your computer onto this area or click the “Browse” button.\"\n                            />\n                          </Table.Cell>\n                          <Table.Cell>\n                            <Button className=\"ui button primary\">\n                              <FormattedMessage\n                                id=\"Browse\"\n                                defaultMessage=\"Browse\"\n                              />\n                            </Button>\n                            <input\n                              {...getInputProps({\n                                type: 'file',\n                                style: { display: 'none' },\n                              })}\n                            />\n                          </Table.Cell>\n                        </Table.Row>\n                      </Table.Body>\n                    </Table>\n                  </Segment>\n                </div>\n              )}\n            </Dropzone>\n            {this.state.files.length > 0 && (\n              <Table compact singleLine>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell width={8}>\n                      <FormattedMessage\n                        id=\"Filename\"\n                        defaultMessage=\"Filename\"\n                      />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell width={4}>\n                      <FormattedMessage\n                        id=\"Last modified\"\n                        defaultMessage=\"Last modified\"\n                      />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell width={4}>\n                      <FormattedMessage\n                        id=\"File size\"\n                        defaultMessage=\"File size\"\n                      />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell width={4}>\n                      <FormattedMessage id=\"Preview\" defaultMessage=\"Preview\" />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell />\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {map(this.state.files, (file, index) => (\n                    <Table.Row className=\"upload-row\" key={file.name}>\n                      <Table.Cell>{file.name}</Table.Cell>\n                      <Table.Cell>\n                        {file.lastModifiedDate && (\n                          <FormattedRelativeDate date={file.lastModifiedDate} />\n                        )}\n                      </Table.Cell>\n                      <Table.Cell>\n                        {filesize(file.size, { round: 0 })}\n                      </Table.Cell>\n                      <Table.Cell>\n                        {file.type.split('/')[0] === 'image' && (\n                          <Image src={file.preview} height={60} />\n                        )}\n                      </Table.Cell>\n                      <Table.Cell>\n                        <Icon\n                          name=\"close\"\n                          value={index}\n                          link\n                          onClick={this.onRemoveFile}\n                        />\n                      </Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            )}\n          </Modal.Content>\n          <Modal.Actions>\n            {this.state.files.length > 0 && (\n              <Button\n                basic\n                circular\n                primary\n                floated=\"right\"\n                icon=\"arrow right\"\n                aria-label={this.props.intl.formatMessage(messages.upload, {\n                  count: this.state.files.length,\n                })}\n                onClick={this.onSubmit}\n                title={this.props.intl.formatMessage(messages.upload, {\n                  count: this.state.files.length,\n                })}\n                size=\"big\"\n              />\n            )}\n            <Button\n              basic\n              circular\n              secondary\n              icon=\"remove\"\n              aria-label={this.props.intl.formatMessage(messages.cancel)}\n              title={this.props.intl.formatMessage(messages.cancel)}\n              floated=\"right\"\n              size=\"big\"\n              onClick={this.onCancel}\n            />\n          </Modal.Actions>\n        </Modal>\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      request: state.content.subrequests?.[SUBREQUEST] || {},\n    }),\n    { createContent },\n  ),\n)(ContentsUploadModal);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Cancel","defaultMessage":"Cancel"},{"id":"{count, plural, one {Upload {count} file} other {Upload {count} files}}","defaultMessage":"{count, plural, one {Upload {count} file} other {Upload {count} files}}"},{"id":"Upload files","defaultMessage":"Upload files"},{"id":"Uploading files","defaultMessage":"Uploading files"},{"id":"Drag and drop files from your computer onto this area or click the “Browse” button.","defaultMessage":"Drag and drop files from your computer onto this area or click the “Browse” button."},{"id":"Browse","defaultMessage":"Browse"},{"id":"Filename","defaultMessage":"Filename"},{"id":"Last modified","defaultMessage":"Last modified"},{"id":"File size","defaultMessage":"File size"},{"id":"Preview","defaultMessage":"Preview"}]}},"sourceType":"module","externalDependencies":[]}