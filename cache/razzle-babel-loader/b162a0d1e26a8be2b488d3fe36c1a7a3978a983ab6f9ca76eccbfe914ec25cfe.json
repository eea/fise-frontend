{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-taxonomy/src/ControlPanel/EditTaxonomy.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Container, Header, Segment, Tab } from 'semantic-ui-react';\nimport { Helmet } from '@plone/volto/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport { Portal } from 'react-portal';\nimport { Link } from 'react-router-dom';\nimport { getContent } from '@plone/volto/actions';\nimport backSVG from '@plone/volto/icons/back.svg';\n\n// import TaxonomySettings from './TaxonomySettings';\nimport TaxonomyData from './TaxonomyData';\nexport default (props => {\n  var _request$data;\n  const {\n    id\n  } = props.match.params;\n  const url = `/@taxonomy/${id}`;\n  const dispatch = useDispatch();\n  const request = useSelector(state => state.content.subrequests[url]);\n  React.useEffect(() => {\n    if (!request) {\n      dispatch(getContent(url, null, url));\n    }\n  }, [request, dispatch, url]);\n  return __jsx(React.Fragment, null, __jsx(Container, {\n    id: \"page-taxonomies\",\n    className: \"controlpanel-taxonomies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(Helmet, {\n    title: \"Taxonomies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), __jsx(Segment.Group, {\n    raised: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Segment, {\n    className: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, __jsx(Header, {\n    as: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Taxonomy: \", (request === null || request === void 0 ? void 0 : (_request$data = request.data) === null || _request$data === void 0 ? void 0 : _request$data.title) || 'loading...')), __jsx(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(Tab, {\n    menu: {\n      secondary: true,\n      pointing: true,\n      attached: true,\n      tabular: true,\n      className: 'formtabs'\n    },\n    grid: {\n      paneWidth: 9,\n      tabWidth: 3,\n      stackable: true\n    },\n    onTabChange: () => {},\n    panes: [{\n      menuItem: 'Edit taxonomy data',\n      render: () => {\n        var _props$match, _props$match$params;\n        return __jsx(Tab.Pane, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }\n        }, __jsx(TaxonomyData, {\n          id: props === null || props === void 0 ? void 0 : (_props$match = props.match) === null || _props$match === void 0 ? void 0 : (_props$match$params = _props$match.params) === null || _props$match$params === void 0 ? void 0 : _props$match$params.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 23\n          }\n        }));\n      }\n    }\n    // {\n    //   menuItem: 'Edit taxonomy',\n    //   render: () => (\n    //     <Tab.Pane>\n    //       <TaxonomySettings />\n    //     </Tab.Pane>\n    //   ),\n    // },\n    ],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })))), __CLIENT__ && __jsx(Portal, {\n    node: document.getElementById('toolbar'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(Toolbar, {\n    pathname: props.location.pathname,\n    hideDefaultViewButtons: true,\n    inner: __jsx(React.Fragment, null, __jsx(Link, {\n      to: \"/controlpanel/taxonomies\",\n      className: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      name: backSVG,\n      \"aria-label\": \"Back\",\n      className: \"contents circled\",\n      size: \"30px\",\n      title: \"Back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })));\n});","map":{"version":3,"names":["React","Container","Header","Segment","Tab","Helmet","useDispatch","useSelector","Icon","Toolbar","Portal","Link","getContent","backSVG","TaxonomyData","props","id","match","params","url","dispatch","request","state","content","subrequests","useEffect","data","title","secondary","pointing","attached","tabular","className","paneWidth","tabWidth","stackable","menuItem","render","__CLIENT__","document","getElementById","location","pathname"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-taxonomy/src/ControlPanel/EditTaxonomy.jsx"],"sourcesContent":["import React from 'react';\nimport { Container, Header, Segment, Tab } from 'semantic-ui-react';\nimport { Helmet } from '@plone/volto/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport { Portal } from 'react-portal';\nimport { Link } from 'react-router-dom';\nimport { getContent } from '@plone/volto/actions';\nimport backSVG from '@plone/volto/icons/back.svg';\n\n// import TaxonomySettings from './TaxonomySettings';\nimport TaxonomyData from './TaxonomyData';\n\nexport default (props) => {\n  const { id } = props.match.params;\n  const url = `/@taxonomy/${id}`;\n  const dispatch = useDispatch();\n  const request = useSelector((state) => state.content.subrequests[url]);\n\n  React.useEffect(() => {\n    if (!request) {\n      dispatch(getContent(url, null, url));\n    }\n  }, [request, dispatch, url]);\n\n  return (\n    <>\n      <Container id=\"page-taxonomies\" className=\"controlpanel-taxonomies\">\n        <Helmet title=\"Taxonomies\" />\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <Header as=\"h3\">\n              Taxonomy: {request?.data?.title || 'loading...'}\n            </Header>\n          </Segment>\n\n          <Segment>\n            <Tab\n              menu={{\n                secondary: true,\n                pointing: true,\n                attached: true,\n                tabular: true,\n                className: 'formtabs',\n              }}\n              grid={{ paneWidth: 9, tabWidth: 3, stackable: true }}\n              onTabChange={() => {}}\n              panes={[\n                {\n                  menuItem: 'Edit taxonomy data',\n                  render: () => (\n                    <Tab.Pane>\n                      <TaxonomyData id={props?.match?.params?.id} />\n                    </Tab.Pane>\n                  ),\n                },\n                // {\n                //   menuItem: 'Edit taxonomy',\n                //   render: () => (\n                //     <Tab.Pane>\n                //       <TaxonomySettings />\n                //     </Tab.Pane>\n                //   ),\n                // },\n              ]}\n            />\n          </Segment>\n        </Segment.Group>\n      </Container>\n\n      {__CLIENT__ && (\n        <Portal node={document.getElementById('toolbar')}>\n          <Toolbar\n            pathname={props.location.pathname}\n            hideDefaultViewButtons\n            inner={\n              <>\n                <Link to=\"/controlpanel/taxonomies\" className=\"item\">\n                  <Icon\n                    name={backSVG}\n                    aria-label=\"Back\"\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title=\"Back\"\n                  />\n                </Link>\n              </>\n            }\n          />\n        </Portal>\n      )}\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}