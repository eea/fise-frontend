{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SearchInput.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Input } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport loupeSVG from '@plone/volto/icons/zoom.svg';\nconst messages = defineMessages({\n  search: {\n    \"id\": \"Search\",\n    \"defaultMessage\": \"Search\"\n  }\n});\nconst SearchInput = props => {\n  const {\n    data,\n    searchText,\n    setSearchText,\n    isLive,\n    onTriggerSearch\n  } = props;\n  const intl = useIntl();\n  return __jsx(\"div\", {\n    className: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Input, {\n    id: `${props.id}-searchtext`,\n    value: searchText,\n    placeholder: data.searchInputPrompt || intl.formatMessage(messages.search),\n    fluid: true,\n    onKeyPress: event => {\n      if (isLive || event.key === 'Enter') onTriggerSearch(searchText);\n    },\n    onChange: (event, {\n      value\n    }) => {\n      setSearchText(value);\n      if (isLive) {\n        onTriggerSearch(value);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), isLive && __jsx(Button, {\n    basic: true,\n    icon: true,\n    className: \"search-input-live-icon-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: loupeSVG,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })));\n};\nexport default SearchInput;","map":{"version":3,"names":["React","Button","Input","defineMessages","useIntl","Icon","loupeSVG","messages","search","SearchInput","props","data","searchText","setSearchText","isLive","onTriggerSearch","intl","id","searchInputPrompt","formatMessage","event","key","value"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SearchInput.jsx"],"sourcesContent":["import React from 'react';\nimport { Button, Input } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport loupeSVG from '@plone/volto/icons/zoom.svg';\n\nconst messages = defineMessages({\n  search: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n});\n\nconst SearchInput = (props) => {\n  const { data, searchText, setSearchText, isLive, onTriggerSearch } = props;\n  const intl = useIntl();\n\n  return (\n    <div className=\"search-input\">\n      <Input\n        id={`${props.id}-searchtext`}\n        value={searchText}\n        placeholder={\n          data.searchInputPrompt || intl.formatMessage(messages.search)\n        }\n        fluid\n        onKeyPress={(event) => {\n          if (isLive || event.key === 'Enter') onTriggerSearch(searchText);\n        }}\n        onChange={(event, { value }) => {\n          setSearchText(value);\n          if (isLive) {\n            onTriggerSearch(value);\n          }\n        }}\n      />\n      {isLive && (\n        <Button basic icon className=\"search-input-live-icon-button\">\n          <Icon name={loupeSVG} />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default SearchInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,QAAQ,mBAAmB;AACjD,SAASC,cAAc,EAAEC,OAAO,QAAQ,YAAY;AACpD,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,OAAOC,QAAQ,MAAM,6BAA6B;AAElD,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;EAC9BK,MAAM;IAAA;IAAA;EAAA;AAIR,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B,MAAM;IAAEC,IAAI;IAAEC,UAAU;IAAEC,aAAa;IAAEC,MAAM;IAAEC;EAAgB,CAAC,GAAGL,KAAK;EAC1E,MAAMM,IAAI,GAAGZ,OAAO,EAAE;EAEtB,OACE;IAAK,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC3B,MAAC,KAAK;IACJ,EAAE,EAAG,GAAEM,KAAK,CAACO,EAAG,aAAa;IAC7B,KAAK,EAAEL,UAAW;IAClB,WAAW,EACTD,IAAI,CAACO,iBAAiB,IAAIF,IAAI,CAACG,aAAa,CAACZ,QAAQ,CAACC,MAAM,CAC7D;IACD,KAAK;IACL,UAAU,EAAGY,KAAK,IAAK;MACrB,IAAIN,MAAM,IAAIM,KAAK,CAACC,GAAG,KAAK,OAAO,EAAEN,eAAe,CAACH,UAAU,CAAC;IAClE,CAAE;IACF,QAAQ,EAAE,CAACQ,KAAK,EAAE;MAAEE;IAAM,CAAC,KAAK;MAC9BT,aAAa,CAACS,KAAK,CAAC;MACpB,IAAIR,MAAM,EAAE;QACVC,eAAe,CAACO,KAAK,CAAC;MACxB;IACF,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF,EACDR,MAAM,IACL,MAAC,MAAM;IAAC,KAAK;IAAC,IAAI;IAAC,SAAS,EAAC,+BAA+B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC1D,MAAC,IAAI;IAAC,IAAI,EAAER,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAE3B,CACG;AAEV,CAAC;AAED,eAAeG,WAAW"},"metadata":{"react-intl":{"messages":[{"id":"Search","defaultMessage":"Search"}]}},"sourceType":"module","externalDependencies":[]}