{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Icon/Icon.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\n/**\n * Icon component.\n * @module components/theme/Icon/Icon\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar defaultSize = '36px';\n\n/**\n * Component to display an SVG as Icon.\n * @function Field\n * @param {Object} props Component properties.\n * @param {string} props.name Name source object.\n * @param {string} props.size Size of the Icon (in px).\n * @param {string} props.color Color of the Icon.\n * @param {string} props.className className to add to the component.\n * @param {string} props.title Title (a11y).\n * @returns {string} Markup of the component.\n *\n * Use:\n * drop icon to the icons folder (\"src/icons\")\n * import svg into the file\n * import this Icon component\n * add icon component with name = your imported svg\n *\n * Reasoning:\n * add a11y title to SVGs\n * load svg via webpack for optimization\n * Zero conf Inlined SVGs, as it is the best option when working with SVG\n * see razzle.config.js\n *\n * for further reference see {@link https://kitconcept.com/blog/pastanaga-icon-system/ | here}\n */\nvar Icon = function Icon(_ref) {\n  var name = _ref.name,\n    size = _ref.size,\n    color = _ref.color,\n    className = _ref.className,\n    title = _ref.title,\n    onClick = _ref.onClick;\n  return __jsx(\"svg\", {\n    xmlns: name.attributes && name.attributes.xmlns,\n    viewBox: name.attributes && name.attributes.viewBox,\n    style: {\n      height: size,\n      width: 'auto',\n      fill: color || 'currentColor'\n    },\n    className: className ? \"icon \".concat(className) : 'icon',\n    onClick: onClick,\n    dangerouslySetInnerHTML: {\n      __html: title ? \"<title>\".concat(title, \"</title>\").concat(name.content) : name.content\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  });\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = Icon;\nIcon.propTypes = {\n  name: PropTypes.shape({\n    xmlns: PropTypes.string,\n    viewBox: PropTypes.string,\n    content: PropTypes.string\n  }).isRequired,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  title: PropTypes.string,\n  onClick: PropTypes.func\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nIcon.defaultProps = {\n  size: defaultSize,\n  color: null,\n  className: null,\n  title: null,\n  onClick: null\n};\nexport default Icon;\nvar _c;\n$RefreshReg$(_c, \"Icon\");","map":{"version":3,"names":["React","PropTypes","defaultSize","Icon","name","size","color","className","title","onClick","attributes","xmlns","viewBox","height","width","fill","__html","content","propTypes","shape","string","isRequired","func","defaultProps"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Icon/Icon.jsx"],"sourcesContent":["/**\n * Icon component.\n * @module components/theme/Icon/Icon\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst defaultSize = '36px';\n\n/**\n * Component to display an SVG as Icon.\n * @function Field\n * @param {Object} props Component properties.\n * @param {string} props.name Name source object.\n * @param {string} props.size Size of the Icon (in px).\n * @param {string} props.color Color of the Icon.\n * @param {string} props.className className to add to the component.\n * @param {string} props.title Title (a11y).\n * @returns {string} Markup of the component.\n *\n * Use:\n * drop icon to the icons folder (\"src/icons\")\n * import svg into the file\n * import this Icon component\n * add icon component with name = your imported svg\n *\n * Reasoning:\n * add a11y title to SVGs\n * load svg via webpack for optimization\n * Zero conf Inlined SVGs, as it is the best option when working with SVG\n * see razzle.config.js\n *\n * for further reference see {@link https://kitconcept.com/blog/pastanaga-icon-system/ | here}\n */\nconst Icon = ({ name, size, color, className, title, onClick }) => (\n  <svg\n    xmlns={name.attributes && name.attributes.xmlns}\n    viewBox={name.attributes && name.attributes.viewBox}\n    style={{ height: size, width: 'auto', fill: color || 'currentColor' }}\n    className={className ? `icon ${className}` : 'icon'}\n    onClick={onClick}\n    dangerouslySetInnerHTML={{\n      __html: title ? `<title>${title}</title>${name.content}` : name.content,\n    }}\n  />\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nIcon.propTypes = {\n  name: PropTypes.shape({\n    xmlns: PropTypes.string,\n    viewBox: PropTypes.string,\n    content: PropTypes.string,\n  }).isRequired,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  title: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nIcon.defaultProps = {\n  size: defaultSize,\n  color: null,\n  className: null,\n  title: null,\n  onClick: null,\n};\n\nexport default Icon;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElC,IAAMC,WAAW,GAAG,MAAM;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAI;EAAA,IAAMC,IAAI,QAAJA,IAAI;IAAEC,IAAI,QAAJA,IAAI;IAAEC,KAAK,QAALA,KAAK;IAAEC,SAAS,QAATA,SAAS;IAAEC,KAAK,QAALA,KAAK;IAAEC,OAAO,QAAPA,OAAO;EAAA,OAC1D;IACE,KAAK,EAAEL,IAAI,CAACM,UAAU,IAAIN,IAAI,CAACM,UAAU,CAACC,KAAM;IAChD,OAAO,EAAEP,IAAI,CAACM,UAAU,IAAIN,IAAI,CAACM,UAAU,CAACE,OAAQ;IACpD,KAAK,EAAE;MAAEC,MAAM,EAAER,IAAI;MAAES,KAAK,EAAE,MAAM;MAAEC,IAAI,EAAET,KAAK,IAAI;IAAe,CAAE;IACtE,SAAS,EAAEC,SAAS,kBAAWA,SAAS,IAAK,MAAO;IACpD,OAAO,EAAEE,OAAQ;IACjB,uBAAuB,EAAE;MACvBO,MAAM,EAAER,KAAK,oBAAaA,KAAK,qBAAWJ,IAAI,CAACa,OAAO,IAAKb,IAAI,CAACa;IAClE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF;AAAA,CACH;;AAED;AACA;AACA;AACA;AACA;AAJA,KAbMd,IAAI;AAkBVA,IAAI,CAACe,SAAS,GAAG;EACfd,IAAI,EAAEH,SAAS,CAACkB,KAAK,CAAC;IACpBR,KAAK,EAAEV,SAAS,CAACmB,MAAM;IACvBR,OAAO,EAAEX,SAAS,CAACmB,MAAM;IACzBH,OAAO,EAAEhB,SAAS,CAACmB;EACrB,CAAC,CAAC,CAACC,UAAU;EACbhB,IAAI,EAAEJ,SAAS,CAACmB,MAAM;EACtBd,KAAK,EAAEL,SAAS,CAACmB,MAAM;EACvBb,SAAS,EAAEN,SAAS,CAACmB,MAAM;EAC3BZ,KAAK,EAAEP,SAAS,CAACmB,MAAM;EACvBX,OAAO,EAAER,SAAS,CAACqB;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAnB,IAAI,CAACoB,YAAY,GAAG;EAClBlB,IAAI,EAAEH,WAAW;EACjBI,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACX,CAAC;AAED,eAAeN,IAAI;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}