{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _last from \"lodash/last\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/ContentTypes.jsx\";\nvar __jsx = React.createElement;\n/**\n * Content Types component.\n * @module components/manage/Controlpanels/ContentTypes\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getParentUrl } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Confirm, Container, Table, Button, Header } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { Error, Icon, ModalForm, Toolbar, Toast, ContentTypesActions } from '@plone/volto/components';\nimport { getControlpanel, postControlpanel, deleteControlpanel } from '@plone/volto/actions';\nimport { getId } from '@plone/volto/helpers';\nimport addSVG from '@plone/volto/icons/add-document.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nvar messages = defineMessages({\n  add: {\n    \"id\": \"Add\",\n    \"defaultMessage\": \"Add\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  yes: {\n    \"id\": \"Yes\",\n    \"defaultMessage\": \"Yes\"\n  },\n  no: {\n    \"id\": \"No\",\n    \"defaultMessage\": \"No\"\n  },\n  addTypeFormTitle: {\n    \"id\": \"Add new content type\",\n    \"defaultMessage\": \"Add new content type\"\n  },\n  addTypeButtonTitle: {\n    \"id\": \"Add new content type\",\n    \"defaultMessage\": \"Add new content type\"\n  },\n  addTypeFormTitleTitle: {\n    \"id\": \"Title\",\n    \"defaultMessage\": \"Title\"\n  },\n  addTypeFormDescriptionTitle: {\n    \"id\": \"Description\",\n    \"defaultMessage\": \"Description\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  typeCreated: {\n    \"id\": \"Content type created\",\n    \"defaultMessage\": \"Content type created\"\n  },\n  deleteConfirmTitle: {\n    \"id\": \"Delete Type\",\n    \"defaultMessage\": \"Delete Type\"\n  },\n  typeDeleted: {\n    \"id\": \"Content type deleted\",\n    \"defaultMessage\": \"Content type deleted\"\n  }\n});\n\n/**\n * ContentTypes class.\n * @class ContentTypes\n * @extends Component\n */\nvar ContentTypes = /*#__PURE__*/function (_Component) {\n  _inherits(ContentTypes, _Component);\n  var _super = _createSuper(ContentTypes);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Types\n   */\n  function ContentTypes(props) {\n    var _this;\n    _classCallCheck(this, ContentTypes);\n    _this = _super.call(this, props);\n    _this.onAddTypeSubmit = _this.onAddTypeSubmit.bind(_assertThisInitialized(_this));\n    _this.onAddTypeError = _this.onAddTypeError.bind(_assertThisInitialized(_this));\n    _this.onAddTypeSuccess = _this.onAddTypeSuccess.bind(_assertThisInitialized(_this));\n    _this.onEdit = _this.onEdit.bind(_assertThisInitialized(_this));\n    _this.onLayout = _this.onLayout.bind(_assertThisInitialized(_this));\n    _this.onSchema = _this.onSchema.bind(_assertThisInitialized(_this));\n    _this.onDelete = _this.onDelete.bind(_assertThisInitialized(_this));\n    _this.onDeleteCancel = _this.onDeleteCancel.bind(_assertThisInitialized(_this));\n    _this.onDeleteOk = _this.onDeleteOk.bind(_assertThisInitialized(_this));\n    _this.onDeleteTypeSuccess = _this.onDeleteTypeSuccess.bind(_assertThisInitialized(_this));\n    _this.state = {\n      showAddType: false,\n      addTypeError: '',\n      showDelete: false,\n      typeToDelete: undefined,\n      error: null,\n      isClient: false\n    };\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(ContentTypes, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getControlpanel(this.props.id);\n      this.setState({\n        isClient: true\n      });\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      // Get\n      if (this.props.cpanelRequest.get.loading && nextProps.cpanelRequest.get.error) {\n        this.setState({\n          error: nextProps.cpanelRequest.get.error\n        });\n      }\n\n      // Create\n      if (this.props.cpanelRequest.post.loading && nextProps.cpanelRequest.post.loaded) {\n        this.props.getControlpanel(this.props.id);\n        this.onAddTypeSuccess();\n      }\n      if (this.props.cpanelRequest.post.loading && nextProps.cpanelRequest.post.error) {\n        this.onAddTypeError(nextProps.cpanelRequest.post.error);\n      }\n\n      // Delete\n      if (this.props.cpanelRequest[\"delete\"].loading && nextProps.cpanelRequest[\"delete\"].loaded) {\n        this.props.getControlpanel(this.props.id);\n        this.onDeleteTypeSuccess();\n      }\n    }\n\n    /** Add  */\n\n    /**\n     * @param {object} data Form data from the ModalForm.\n     * @param {func} callback to set new form data in the ModalForm\n     * @memberof ContentTypes\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onAddTypeSubmit\",\n    value: function onAddTypeSubmit(data, callback) {\n      this.props.postControlpanel(this.props.id, data);\n      this.setState({\n        addTypeSetFormDataCallback: callback\n      });\n    }\n\n    /**\n     * Handle Errors after postControlpanel()\n     *\n     * @param {*} error object. Requires the property .message\n     * @memberof ContentTypes\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onAddTypeError\",\n    value: function onAddTypeError(error) {\n      this.setState({\n        addTypeError: error.message\n      });\n    }\n\n    /**\n     * Handle Success after postControlpanel()\n     *\n     * @memberof ContentTypes\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onAddTypeSuccess\",\n    value: function onAddTypeSuccess() {\n      this.state.addTypeSetFormDataCallback({});\n      this.setState({\n        showAddType: false,\n        addTypeError: undefined,\n        addTypeSetFormDataCallback: undefined\n      });\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.typeCreated),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 7\n        }\n      }));\n    }\n\n    /** Edit  */\n    /**\n     * @param {*} event Event object.\n     * @param {*} { value }\n     * @memberof ContentTypes\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onEdit\",\n    value: function onEdit(event, _ref) {\n      var value = _ref.value;\n      this.props.history.push(value);\n    }\n\n    /**\n     * Layout button click\n     * @param {*} event\n     * @param {string} value\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onLayout\",\n    value: function onLayout(event, _ref2) {\n      var value = _ref2.value;\n      this.props.history.push(value);\n    }\n\n    /** Delete */\n    /**\n     * @param {*} event Event object.\n     * @param {*} { value }\n     * @memberof ContentTypes\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onDelete\",\n    value: function onDelete(event, _ref3) {\n      var value = _ref3.value;\n      if (value) {\n        this.setState({\n          showDelete: true,\n          typeToDelete: value\n        });\n      }\n    }\n\n    /** Folder\n     * @param {Object} event Event object.\n     * @param {string} { value }\n     * @memberof ContentTypes\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSchema\",\n    value: function onSchema(event, _ref4) {\n      var value = _ref4.value;\n      if (value) {\n        this.props.history.push(\"\".concat(this.props.pathname, \"/\").concat(value, \"/schema\"));\n      }\n    }\n\n    /**\n     * On delete ok\n     * @method onDeleteOk\n     * @memberof ContentTypes\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onDeleteOk\",\n    value: function onDeleteOk() {\n      var item = getId(this.state.typeToDelete);\n      this.props.deleteControlpanel(this.props.id, item);\n      this.setState({\n        showDelete: false,\n        typeToDelete: undefined\n      });\n    }\n\n    /**\n     * On delete cancel\n     * @method onDeleteCancel\n     * @memberof ContentTypes\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onDeleteCancel\",\n    value: function onDeleteCancel() {\n      this.setState({\n        showDelete: false,\n        typeToDelete: undefined\n      });\n    }\n\n    /**\n     * Handle Success after deleteControlpanel()\n     *\n     * @method onDeleteTypeSuccess\n     * @memberof ContentTypes\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onDeleteTypeSuccess\",\n    value: function onDeleteTypeSuccess() {\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.typeDeleted),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 7\n        }\n      }));\n    }\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      // Error\n      if (this.state.error) {\n        return __jsx(Error, {\n          error: this.state.error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 14\n          }\n        });\n      }\n      if (!this.props.controlpanel) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 14\n          }\n        });\n      }\n      return __jsx(Container, {\n        className: \"types-control-panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 9\n        }\n      }, __jsx(Confirm, {\n        open: this.state.showDelete,\n        header: this.props.intl.formatMessage(messages.deleteConfirmTitle),\n        cancelButton: this.props.intl.formatMessage(messages.no),\n        confirmButton: this.props.intl.formatMessage(messages.yes),\n        content: __jsx(\"div\", {\n          className: \"content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }\n        }, __jsx(\"ul\", {\n          className: \"content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }\n        }, __jsx(FormattedMessage, {\n          id: \"Do you really want to delete the type {typename}?\",\n          defaultMessage: \"Do you really want to delete type {typename}?\",\n          values: {\n            typename: __jsx(\"b\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 33\n              }\n            }, getId(this.state.typeToDelete || ''))\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 19\n          }\n        }))),\n        onCancel: this.onDeleteCancel,\n        onConfirm: this.onDeleteOk,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }\n      }), __jsx(ModalForm, {\n        open: this.state.showAddType,\n        className: \"modal\",\n        onSubmit: this.onAddTypeSubmit,\n        submitError: this.state.addTypeError,\n        onCancel: function onCancel() {\n          return _this2.setState({\n            showAddType: false\n          });\n        },\n        title: this.props.intl.formatMessage(messages.addTypeFormTitle),\n        loading: this.props.cpanelRequest.post.loading,\n        schema: {\n          fieldsets: [{\n            id: 'default',\n            title: 'Content type',\n            fields: ['title', 'description']\n          }],\n          properties: {\n            title: {\n              title: this.props.intl.formatMessage(messages.addTypeFormTitleTitle),\n              type: 'string',\n              description: ''\n            },\n            description: {\n              title: this.props.intl.formatMessage(messages.addTypeFormDescriptionTitle),\n              type: 'string',\n              description: ''\n            }\n          },\n          required: ['title']\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }\n      })), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 9\n        }\n      }, __jsx(\"article\", {\n        id: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }\n      }, __jsx(Header, {\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }\n      }, this.props.controlpanel.title), __jsx(\"section\", {\n        id: \"content-core\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }\n      }, __jsx(Table, {\n        compact: true,\n        singleLine: true,\n        striped: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 15\n        }\n      }, __jsx(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 17\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 19\n        }\n      }, __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Type\",\n        defaultMessage: \"Type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 23\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Description\",\n        defaultMessage: \"Description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 23\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 21\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Items\",\n        defaultMessage: \"Items\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 23\n        }\n      })), __jsx(Table.HeaderCell, {\n        textAlign: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 21\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Actions\",\n        defaultMessage: \"Actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 23\n        }\n      })))), __jsx(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 17\n        }\n      }, this.props.controlpanel.items.map(function (item) {\n        return __jsx(Table.Row, {\n          key: item['@id'],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 21\n          }\n        }, __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 23\n          }\n        }, __jsx(Link, {\n          to: \"\".concat(_this2.props.pathname, \"/\").concat(item['id']),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 25\n          }\n        }, item.title)), __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 23\n          }\n        }, item.description), __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 23\n          }\n        }, item.count), __jsx(Table.Cell, {\n          textAlign: \"right\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 23\n          }\n        }, __jsx(ContentTypesActions, {\n          item: item,\n          path: _this2.props.pathname,\n          onEdit: _this2.onEdit,\n          onDelete: _this2.onDelete,\n          onSchema: _this2.onSchema,\n          onLayout: _this2.onLayout,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 25\n          }\n        })));\n      })))))), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(React.Fragment, null, __jsx(Link, {\n          to: getParentUrl(this.props.pathname),\n          className: \"item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 19\n          }\n        }, __jsx(Icon, {\n          name: backSVG,\n          size: \"30px\",\n          className: \"contents circled\",\n          title: this.props.intl.formatMessage(messages.back),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 21\n          }\n        })), __jsx(Button, {\n          className: \"add\",\n          \"aria-label\": this.props.intl.formatMessage(messages.add),\n          tabIndex: 0,\n          id: \"toolbar-add\",\n          onClick: function onClick() {\n            _this2.setState({\n              showAddType: true\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 19\n          }\n        }, __jsx(Icon, {\n          name: addSVG,\n          title: this.props.intl.formatMessage(messages.addTypeButtonTitle),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 21\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return ContentTypes;\n}(Component);\n_defineProperty(ContentTypes, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  getControlpanel: PropTypes.func.isRequired,\n  postControlpanel: PropTypes.func.isRequired,\n  deleteControlpanel: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  cpanelRequest: PropTypes.objectOf(PropTypes.any).isRequired,\n  controlpanel: PropTypes.shape({\n    '@id': PropTypes.string,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      '@id': PropTypes.string,\n      title: PropTypes.string,\n      description: PropTypes.string,\n      count: PropTypes.integer\n    }))\n  })\n});\nexport default compose(injectIntl, connect(function (state, props) {\n  return {\n    controlpanel: state.controlpanels.controlpanel,\n    cpanelRequest: state.controlpanels,\n    pathname: props.location.pathname,\n    id: _last(props.location.pathname.split('/'))\n  };\n}, {\n  getControlpanel: getControlpanel,\n  postControlpanel: postControlpanel,\n  deleteControlpanel: deleteControlpanel\n}))(ContentTypes);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","getParentUrl","Portal","Confirm","Container","Table","Button","Header","toast","FormattedMessage","defineMessages","injectIntl","Error","Icon","ModalForm","Toolbar","Toast","ContentTypesActions","getControlpanel","postControlpanel","deleteControlpanel","getId","addSVG","backSVG","messages","add","back","yes","no","addTypeFormTitle","addTypeButtonTitle","addTypeFormTitleTitle","addTypeFormDescriptionTitle","success","typeCreated","deleteConfirmTitle","typeDeleted","ContentTypes","props","onAddTypeSubmit","bind","onAddTypeError","onAddTypeSuccess","onEdit","onLayout","onSchema","onDelete","onDeleteCancel","onDeleteOk","onDeleteTypeSuccess","state","showAddType","addTypeError","showDelete","typeToDelete","undefined","error","isClient","id","setState","nextProps","cpanelRequest","get","loading","post","loaded","data","callback","addTypeSetFormDataCallback","message","intl","formatMessage","event","value","history","push","pathname","item","controlpanel","typename","fieldsets","title","fields","properties","type","description","required","items","map","count","document","getElementById","string","isRequired","func","objectOf","any","shape","arrayOf","integer","controlpanels","location","split"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/ContentTypes.jsx"],"sourcesContent":["/**\n * Content Types component.\n * @module components/manage/Controlpanels/ContentTypes\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getParentUrl } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { last } from 'lodash';\nimport { Confirm, Container, Table, Button, Header } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport {\n  Error,\n  Icon,\n  ModalForm,\n  Toolbar,\n  Toast,\n  ContentTypesActions,\n} from '@plone/volto/components';\nimport {\n  getControlpanel,\n  postControlpanel,\n  deleteControlpanel,\n} from '@plone/volto/actions';\nimport { getId } from '@plone/volto/helpers';\n\nimport addSVG from '@plone/volto/icons/add-document.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  add: {\n    id: 'Add',\n    defaultMessage: 'Add',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  yes: {\n    id: 'Yes',\n    defaultMessage: 'Yes',\n  },\n  no: {\n    id: 'No',\n    defaultMessage: 'No',\n  },\n  addTypeFormTitle: {\n    id: 'Add new content type',\n    defaultMessage: 'Add new content type',\n  },\n  addTypeButtonTitle: {\n    id: 'Add new content type',\n    defaultMessage: 'Add new content type',\n  },\n  addTypeFormTitleTitle: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  addTypeFormDescriptionTitle: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  typeCreated: {\n    id: 'Content type created',\n    defaultMessage: 'Content type created',\n  },\n  deleteConfirmTitle: {\n    id: 'Delete Type',\n    defaultMessage: 'Delete Type',\n  },\n  typeDeleted: {\n    id: 'Content type deleted',\n    defaultMessage: 'Content type deleted',\n  },\n});\n\n/**\n * ContentTypes class.\n * @class ContentTypes\n * @extends Component\n */\nclass ContentTypes extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    getControlpanel: PropTypes.func.isRequired,\n    postControlpanel: PropTypes.func.isRequired,\n    deleteControlpanel: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    cpanelRequest: PropTypes.objectOf(PropTypes.any).isRequired,\n    controlpanel: PropTypes.shape({\n      '@id': PropTypes.string,\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          '@id': PropTypes.string,\n          title: PropTypes.string,\n          description: PropTypes.string,\n          count: PropTypes.integer,\n        }),\n      ),\n    }),\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Types\n   */\n  constructor(props) {\n    super(props);\n    this.onAddTypeSubmit = this.onAddTypeSubmit.bind(this);\n    this.onAddTypeError = this.onAddTypeError.bind(this);\n    this.onAddTypeSuccess = this.onAddTypeSuccess.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onLayout = this.onLayout.bind(this);\n    this.onSchema = this.onSchema.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteTypeSuccess = this.onDeleteTypeSuccess.bind(this);\n\n    this.state = {\n      showAddType: false,\n      addTypeError: '',\n      showDelete: false,\n      typeToDelete: undefined,\n      error: null,\n      isClient: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlpanel(this.props.id);\n    this.setState({ isClient: true });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Get\n    if (\n      this.props.cpanelRequest.get.loading &&\n      nextProps.cpanelRequest.get.error\n    ) {\n      this.setState({\n        error: nextProps.cpanelRequest.get.error,\n      });\n    }\n\n    // Create\n    if (\n      this.props.cpanelRequest.post.loading &&\n      nextProps.cpanelRequest.post.loaded\n    ) {\n      this.props.getControlpanel(this.props.id);\n      this.onAddTypeSuccess();\n    }\n    if (\n      this.props.cpanelRequest.post.loading &&\n      nextProps.cpanelRequest.post.error\n    ) {\n      this.onAddTypeError(nextProps.cpanelRequest.post.error);\n    }\n\n    // Delete\n    if (\n      this.props.cpanelRequest.delete.loading &&\n      nextProps.cpanelRequest.delete.loaded\n    ) {\n      this.props.getControlpanel(this.props.id);\n      this.onDeleteTypeSuccess();\n    }\n  }\n\n  /** Add  */\n\n  /**\n   * @param {object} data Form data from the ModalForm.\n   * @param {func} callback to set new form data in the ModalForm\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onAddTypeSubmit(data, callback) {\n    this.props.postControlpanel(this.props.id, data);\n    this.setState({\n      addTypeSetFormDataCallback: callback,\n    });\n  }\n\n  /**\n   * Handle Errors after postControlpanel()\n   *\n   * @param {*} error object. Requires the property .message\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onAddTypeError(error) {\n    this.setState({\n      addTypeError: error.message,\n    });\n  }\n\n  /**\n   * Handle Success after postControlpanel()\n   *\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onAddTypeSuccess() {\n    this.state.addTypeSetFormDataCallback({});\n    this.setState({\n      showAddType: false,\n      addTypeError: undefined,\n      addTypeSetFormDataCallback: undefined,\n    });\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.typeCreated)}\n      />,\n    );\n  }\n\n  /** Edit  */\n  /**\n   * @param {*} event Event object.\n   * @param {*} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onEdit(event, { value }) {\n    this.props.history.push(value);\n  }\n\n  /**\n   * Layout button click\n   * @param {*} event\n   * @param {string} value\n   * @returns {undefined}\n   */\n  onLayout(event, { value }) {\n    this.props.history.push(value);\n  }\n\n  /** Delete */\n  /**\n   * @param {*} event Event object.\n   * @param {*} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDelete(event, { value }) {\n    if (value) {\n      this.setState({\n        showDelete: true,\n        typeToDelete: value,\n      });\n    }\n  }\n\n  /** Folder\n   * @param {Object} event Event object.\n   * @param {string} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onSchema(event, { value }) {\n    if (value) {\n      this.props.history.push(`${this.props.pathname}/${value}/schema`);\n    }\n  }\n\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDeleteOk() {\n    const item = getId(this.state.typeToDelete);\n    this.props.deleteControlpanel(this.props.id, item);\n    this.setState({\n      showDelete: false,\n      typeToDelete: undefined,\n    });\n  }\n\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      typeToDelete: undefined,\n    });\n  }\n\n  /**\n   * Handle Success after deleteControlpanel()\n   *\n   * @method onDeleteTypeSuccess\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDeleteTypeSuccess() {\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.typeDeleted)}\n      />,\n    );\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    // Error\n    if (this.state.error) {\n      return <Error error={this.state.error} />;\n    }\n\n    if (!this.props.controlpanel) {\n      return <div />;\n    }\n    return (\n      <Container className=\"types-control-panel\">\n        <div className=\"container\">\n          <Confirm\n            open={this.state.showDelete}\n            header={this.props.intl.formatMessage(messages.deleteConfirmTitle)}\n            cancelButton={this.props.intl.formatMessage(messages.no)}\n            confirmButton={this.props.intl.formatMessage(messages.yes)}\n            content={\n              <div className=\"content\">\n                <ul className=\"content\">\n                  <FormattedMessage\n                    id=\"Do you really want to delete the type {typename}?\"\n                    defaultMessage=\"Do you really want to delete type {typename}?\"\n                    values={{\n                      typename: <b>{getId(this.state.typeToDelete || '')}</b>,\n                    }}\n                  />\n                </ul>\n              </div>\n            }\n            onCancel={this.onDeleteCancel}\n            onConfirm={this.onDeleteOk}\n          />\n          <ModalForm\n            open={this.state.showAddType}\n            className=\"modal\"\n            onSubmit={this.onAddTypeSubmit}\n            submitError={this.state.addTypeError}\n            onCancel={() => this.setState({ showAddType: false })}\n            title={this.props.intl.formatMessage(messages.addTypeFormTitle)}\n            loading={this.props.cpanelRequest.post.loading}\n            schema={{\n              fieldsets: [\n                {\n                  id: 'default',\n                  title: 'Content type',\n                  fields: ['title', 'description'],\n                },\n              ],\n              properties: {\n                title: {\n                  title: this.props.intl.formatMessage(\n                    messages.addTypeFormTitleTitle,\n                  ),\n                  type: 'string',\n                  description: '',\n                },\n                description: {\n                  title: this.props.intl.formatMessage(\n                    messages.addTypeFormDescriptionTitle,\n                  ),\n                  type: 'string',\n                  description: '',\n                },\n              },\n              required: ['title'],\n            }}\n          />\n        </div>\n        <Container>\n          <article id=\"content\">\n            <Header disabled>{this.props.controlpanel.title}</Header>\n            <section id=\"content-core\">\n              <Table compact singleLine striped>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Type\" defaultMessage=\"Type\" />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>\n                      <FormattedMessage\n                        id=\"Description\"\n                        defaultMessage=\"Description\"\n                      />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Items\" defaultMessage=\"Items\" />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell textAlign=\"right\">\n                      <FormattedMessage id=\"Actions\" defaultMessage=\"Actions\" />\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {this.props.controlpanel.items.map((item) => (\n                    <Table.Row key={item['@id']}>\n                      <Table.Cell>\n                        <Link to={`${this.props.pathname}/${item['id']}`}>\n                          {item.title}\n                        </Link>\n                      </Table.Cell>\n                      <Table.Cell>{item.description}</Table.Cell>\n                      <Table.Cell>{item.count}</Table.Cell>\n                      <Table.Cell textAlign=\"right\">\n                        <ContentTypesActions\n                          item={item}\n                          path={this.props.pathname}\n                          onEdit={this.onEdit}\n                          onDelete={this.onDelete}\n                          onSchema={this.onSchema}\n                          onLayout={this.onLayout}\n                        />\n                      </Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </section>\n          </article>\n        </Container>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Link to={getParentUrl(this.props.pathname)} className=\"item\">\n                    <Icon\n                      name={backSVG}\n                      size=\"30px\"\n                      className=\"contents circled\"\n                      title={this.props.intl.formatMessage(messages.back)}\n                    />\n                  </Link>\n                  <Button\n                    className=\"add\"\n                    aria-label={this.props.intl.formatMessage(messages.add)}\n                    tabIndex={0}\n                    id=\"toolbar-add\"\n                    onClick={() => {\n                      this.setState({ showAddType: true });\n                    }}\n                  >\n                    <Icon\n                      name={addSVG}\n                      title={this.props.intl.formatMessage(\n                        messages.addTypeButtonTitle,\n                      )}\n                    />\n                  </Button>\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      controlpanel: state.controlpanels.controlpanel,\n      cpanelRequest: state.controlpanels,\n      pathname: props.location.pathname,\n      id: last(props.location.pathname.split('/')),\n    }),\n    {\n      getControlpanel,\n      postControlpanel,\n      deleteControlpanel,\n    },\n  ),\n)(ContentTypes);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Add","defaultMessage":"Add"},{"id":"Back","defaultMessage":"Back"},{"id":"Yes","defaultMessage":"Yes"},{"id":"No","defaultMessage":"No"},{"id":"Add new content type","defaultMessage":"Add new content type"},{"id":"Title","defaultMessage":"Title"},{"id":"Description","defaultMessage":"Description"},{"id":"Success","defaultMessage":"Success"},{"id":"Content type created","defaultMessage":"Content type created"},{"id":"Delete Type","defaultMessage":"Delete Type"},{"id":"Content type deleted","defaultMessage":"Content type deleted"},{"id":"Do you really want to delete the type {typename}?","defaultMessage":"Do you really want to delete type {typename}?"},{"id":"Type","defaultMessage":"Type"},{"id":"Items","defaultMessage":"Items"},{"id":"Actions","defaultMessage":"Actions"}]}},"sourceType":"module","externalDependencies":[]}