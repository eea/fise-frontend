{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectWithoutProperties from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _union from \"lodash/union\";\nimport _flatten from \"lodash/flatten\";\nimport _compact from \"lodash/compact\";\nvar _excluded = [\"expand\"],\n  _excluded2 = [\"request\", \"type\", \"mode\"];\n/**\n * Api middleware.\n * @module middleware/api\n */\n\nimport Cookies from 'universal-cookie';\nimport jwtDecode from 'jwt-decode';\nimport { matchPath } from 'react-router';\nimport qs from 'query-string';\nimport config from '@plone/volto/registry';\nimport { GET_CONTENT, LOGIN, RESET_APIERROR, SET_APIERROR } from '@plone/volto/constants/ActionTypes';\nimport { changeLanguage } from '@plone/volto/actions';\nimport { normalizeLanguageName, getCookieOptions } from '@plone/volto/helpers';\nvar socket = null;\n\n/**\n *\n * Add configured expanders to an api call for an action\n * Requirements:\n *\n * - It should add the expanders set in the config settings\n * - It should preserve any query if present\n * - It should preserve (and add) any expand parameter (if present) e.g. translations\n * - It should take use the correct codification for arrays in querystring (repeated parameter for each member of the array)\n *\n * @function addExpandersToPath\n * @param {string} path The url/path including the querystring\n * @param {*} type The action type\n * @returns {string} The url/path with the configured expanders added to the query string\n */\nexport function addExpandersToPath(path, type) {\n  var settings = config.settings;\n  var _settings$apiExpander = settings.apiExpanders,\n    apiExpanders = _settings$apiExpander === void 0 ? [] : _settings$apiExpander;\n  var _qs$parseUrl = qs.parseUrl(path),\n    url = _qs$parseUrl.url,\n    _qs$parseUrl$query = _qs$parseUrl.query,\n    expand = _qs$parseUrl$query.expand,\n    query = _objectWithoutProperties(_qs$parseUrl$query, _excluded);\n  var expandersFromConfig = apiExpanders.filter(function (expand) {\n    return matchPath(url, expand.match) && expand[type];\n  }).map(function (expand) {\n    return expand[type];\n  });\n  var expandMerge = _compact(_union([expand].concat(_toConsumableArray(_flatten(expandersFromConfig)))));\n  var stringifiedExpand = qs.stringify({\n    expand: expandMerge\n  }, {\n    arrayFormat: 'comma',\n    encode: false\n  });\n  var querystringFromConfig = apiExpanders.filter(function (expand) {\n    return matchPath(url, expand.match) && expand[type];\n  }).reduce(function (acc, expand) {\n    return _objectSpread(_objectSpread({}, acc), expand === null || expand === void 0 ? void 0 : expand['querystring']);\n  }, {});\n  var queryMerge = _objectSpread(_objectSpread({}, query), querystringFromConfig);\n  var stringifiedQuery = qs.stringify(queryMerge, {\n    encode: false\n  });\n  if (stringifiedQuery && stringifiedExpand) {\n    return \"\".concat(url, \"?\").concat(stringifiedExpand, \"&\").concat(stringifiedQuery);\n  } else if (!stringifiedQuery && stringifiedExpand) {\n    return \"\".concat(url, \"?\").concat(stringifiedExpand);\n  } else if (stringifiedQuery && !stringifiedExpand) {\n    return \"\".concat(url, \"?\").concat(stringifiedQuery);\n  } else {\n    return url;\n  }\n}\n\n/**\n * Send a message on a websocket.\n * @function sendOnSocket\n * @param {Object} request Request object.\n * @returns {Promise} message is send\n */\nfunction sendOnSocket(request) {\n  return new Promise(function (resolve, reject) {\n    switch (socket.readyState) {\n      case socket.CONNECTING:\n        socket.addEventListener('open', function () {\n          return resolve(socket);\n        });\n        socket.addEventListener('error', reject);\n        break;\n      case socket.OPEN:\n        resolve(socket);\n        break;\n      default:\n        reject();\n        break;\n    }\n  }).then(function () {\n    socket.send(JSON.stringify(request));\n  });\n}\n\n/**\n * Api middleware.\n * @function\n * @param {Object} api Api object.\n * @returns {Promise} Action promise.\n */\nexport default (function (api) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        var settings = config.settings;\n        if (typeof action === 'function') {\n          return action(dispatch, getState);\n        }\n        var request = action.request,\n          type = action.type,\n          _action$mode = action.mode,\n          mode = _action$mode === void 0 ? 'parallel' : _action$mode,\n          rest = _objectWithoutProperties(action, _excluded2);\n        var subrequest = action.subrequest; // We want subrequest remains in `...rest` above\n\n        var actionPromise;\n        if (!request) {\n          return next(action);\n        }\n        next(_objectSpread(_objectSpread({}, rest), {}, {\n          type: \"\".concat(type, \"_PENDING\")\n        }));\n        if (socket) {\n          actionPromise = Array.isArray(request) ? Promise.all(request.map(function (item) {\n            return sendOnSocket(_objectSpread(_objectSpread({}, item), {}, {\n              path: addExpandersToPath(item.path, type),\n              id: type\n            }));\n          })) : sendOnSocket(_objectSpread(_objectSpread({}, request), {}, {\n            path: addExpandersToPath(request.path, type),\n            id: type\n          }));\n        } else {\n          actionPromise = Array.isArray(request) ? mode === 'serial' ? request.reduce(function (prevPromise, item) {\n            return prevPromise.then(function (acc) {\n              return api[item.op](addExpandersToPath(item.path, type), {\n                data: item.data,\n                type: item.type,\n                headers: item.headers,\n                params: request.params,\n                checkUrl: settings.actions_raising_api_errors.includes(action.type)\n              }).then(function (reqres) {\n                return [].concat(_toConsumableArray(acc), [reqres]);\n              });\n            });\n          }, Promise.resolve([])) : Promise.all(request.map(function (item) {\n            return api[item.op](addExpandersToPath(item.path, type), {\n              data: item.data,\n              type: item.type,\n              headers: item.headers,\n              params: request.params,\n              checkUrl: settings.actions_raising_api_errors.includes(action.type)\n            });\n          })) : api[request.op](addExpandersToPath(request.path, type), {\n            data: request.data,\n            type: request.type,\n            headers: request.headers,\n            params: request.params,\n            checkUrl: settings.actions_raising_api_errors.includes(action.type)\n          });\n          actionPromise.then(function (result) {\n            var settings = config.settings;\n            if (getState().apierror.connectionRefused) {\n              next(_objectSpread(_objectSpread({}, rest), {}, {\n                type: RESET_APIERROR\n              }));\n            }\n            if (type === GET_CONTENT) {\n              var _result$language;\n              var lang = result === null || result === void 0 ? void 0 : (_result$language = result.language) === null || _result$language === void 0 ? void 0 : _result$language.token;\n              if (lang && getState().intl.language !== lang && !subrequest && config.settings.supportedLanguages.includes(lang)) {\n                var langFileName = normalizeLanguageName(lang);\n                import(\"../../../../../locales/\" + langFileName + '.json').then(function (locale) {\n                  dispatch(changeLanguage(lang, locale[\"default\"]));\n                });\n              }\n            }\n            if (type === LOGIN && settings.websockets) {\n              var cookies = new Cookies();\n              cookies.set('auth_token', result.token, getCookieOptions({\n                expires: new Date(jwtDecode(result.token).exp * 1000)\n              }));\n              api.get('/@wstoken').then(function (res) {\n                socket = new WebSocket(\"\".concat(settings.apiPath.replace('http', 'ws'), \"/@ws?ws_token=\").concat(res.token));\n                socket.onmessage = function (message) {\n                  var packet = JSON.parse(message.data);\n                  if (packet.error) {\n                    dispatch({\n                      type: \"\".concat(packet.id, \"_FAIL\"),\n                      error: packet.error\n                    });\n                  } else {\n                    dispatch({\n                      type: \"\".concat(packet.id, \"_SUCCESS\"),\n                      result: JSON.parse(packet.data)\n                    });\n                  }\n                };\n              });\n            }\n            return next(_objectSpread(_objectSpread({}, rest), {}, {\n              result: result,\n              type: \"\".concat(type, \"_SUCCESS\")\n            }));\n          }, function (error) {\n            // Only SRR can set ECONNREFUSED\n            if (error.code === 'ECONNREFUSED') {\n              next(_objectSpread(_objectSpread({}, rest), {}, {\n                error: error,\n                statusCode: error.code,\n                connectionRefused: true,\n                type: SET_APIERROR\n              }));\n            }\n\n            // Response error is marked crossDomain if CORS error happen\n            else if (error.crossDomain) {\n              next(_objectSpread(_objectSpread({}, rest), {}, {\n                error: error,\n                statusCode: 'CORSERROR',\n                connectionRefused: false,\n                type: SET_APIERROR\n              }));\n            }\n\n            // Check for actions who can raise api errors\n            if (settings.actions_raising_api_errors.includes(action.type)) {\n              var _error$response, _error$response2;\n              // Gateway timeout\n              if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.statusCode) === 504) {\n                next(_objectSpread(_objectSpread({}, rest), {}, {\n                  error: error,\n                  statusCode: error.code,\n                  connectionRefused: true,\n                  type: SET_APIERROR\n                }));\n              }\n\n              // Redirect\n              else if ((error === null || error === void 0 ? void 0 : error.code) === 301) {\n                next(_objectSpread(_objectSpread({}, rest), {}, {\n                  error: error,\n                  statusCode: error.code,\n                  connectionRefused: false,\n                  type: SET_APIERROR\n                }));\n              }\n\n              // Redirect\n              else if ((error === null || error === void 0 ? void 0 : error.code) === 408) {\n                next(_objectSpread(_objectSpread({}, rest), {}, {\n                  error: error,\n                  statusCode: error.code,\n                  connectionRefused: false,\n                  type: SET_APIERROR\n                }));\n              }\n\n              // Unauthorized\n              else if ((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusCode) === 401) {\n                next(_objectSpread(_objectSpread({}, rest), {}, {\n                  error: error,\n                  statusCode: error.response,\n                  message: error.response.body.message,\n                  connectionRefused: false,\n                  type: SET_APIERROR\n                }));\n              }\n            }\n            return next(_objectSpread(_objectSpread({}, rest), {}, {\n              error: error,\n              type: \"\".concat(type, \"_FAIL\")\n            }));\n          });\n        }\n        return actionPromise;\n      };\n    };\n  };\n});","map":{"version":3,"names":["Cookies","jwtDecode","matchPath","qs","config","GET_CONTENT","LOGIN","RESET_APIERROR","SET_APIERROR","changeLanguage","normalizeLanguageName","getCookieOptions","socket","addExpandersToPath","path","type","settings","apiExpanders","parseUrl","url","query","expand","expandersFromConfig","filter","match","map","expandMerge","stringifiedExpand","stringify","arrayFormat","encode","querystringFromConfig","reduce","acc","queryMerge","stringifiedQuery","sendOnSocket","request","Promise","resolve","reject","readyState","CONNECTING","addEventListener","OPEN","then","send","JSON","api","dispatch","getState","next","action","mode","rest","subrequest","actionPromise","Array","isArray","all","item","id","prevPromise","op","data","headers","params","checkUrl","actions_raising_api_errors","includes","reqres","result","apierror","connectionRefused","lang","language","token","intl","supportedLanguages","langFileName","locale","websockets","cookies","set","expires","Date","exp","get","res","WebSocket","apiPath","replace","onmessage","message","packet","parse","error","code","statusCode","crossDomain","response","body"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/middleware/api.js"],"sourcesContent":["/**\n * Api middleware.\n * @module middleware/api\n */\n\nimport Cookies from 'universal-cookie';\nimport jwtDecode from 'jwt-decode';\nimport { compact, flatten, union } from 'lodash';\nimport { matchPath } from 'react-router';\nimport qs from 'query-string';\n\nimport config from '@plone/volto/registry';\n\nimport {\n  GET_CONTENT,\n  LOGIN,\n  RESET_APIERROR,\n  SET_APIERROR,\n} from '@plone/volto/constants/ActionTypes';\nimport { changeLanguage } from '@plone/volto/actions';\nimport { normalizeLanguageName, getCookieOptions } from '@plone/volto/helpers';\nlet socket = null;\n\n/**\n *\n * Add configured expanders to an api call for an action\n * Requirements:\n *\n * - It should add the expanders set in the config settings\n * - It should preserve any query if present\n * - It should preserve (and add) any expand parameter (if present) e.g. translations\n * - It should take use the correct codification for arrays in querystring (repeated parameter for each member of the array)\n *\n * @function addExpandersToPath\n * @param {string} path The url/path including the querystring\n * @param {*} type The action type\n * @returns {string} The url/path with the configured expanders added to the query string\n */\nexport function addExpandersToPath(path, type) {\n  const { settings } = config;\n  const { apiExpanders = [] } = settings;\n\n  const {\n    url,\n    query: { expand, ...query },\n  } = qs.parseUrl(path);\n\n  const expandersFromConfig = apiExpanders\n    .filter((expand) => matchPath(url, expand.match) && expand[type])\n    .map((expand) => expand[type]);\n\n  const expandMerge = compact(union([expand, ...flatten(expandersFromConfig)]));\n\n  const stringifiedExpand = qs.stringify(\n    { expand: expandMerge },\n    {\n      arrayFormat: 'comma',\n      encode: false,\n    },\n  );\n\n  const querystringFromConfig = apiExpanders\n    .filter((expand) => matchPath(url, expand.match) && expand[type])\n    .reduce((acc, expand) => ({ ...acc, ...expand?.['querystring'] }), {});\n\n  const queryMerge = { ...query, ...querystringFromConfig };\n\n  const stringifiedQuery = qs.stringify(queryMerge, {\n    encode: false,\n  });\n\n  if (stringifiedQuery && stringifiedExpand) {\n    return `${url}?${stringifiedExpand}&${stringifiedQuery}`;\n  } else if (!stringifiedQuery && stringifiedExpand) {\n    return `${url}?${stringifiedExpand}`;\n  } else if (stringifiedQuery && !stringifiedExpand) {\n    return `${url}?${stringifiedQuery}`;\n  } else {\n    return url;\n  }\n}\n\n/**\n * Send a message on a websocket.\n * @function sendOnSocket\n * @param {Object} request Request object.\n * @returns {Promise} message is send\n */\nfunction sendOnSocket(request) {\n  return new Promise((resolve, reject) => {\n    switch (socket.readyState) {\n      case socket.CONNECTING:\n        socket.addEventListener('open', () => resolve(socket));\n        socket.addEventListener('error', reject);\n        break;\n      case socket.OPEN:\n        resolve(socket);\n        break;\n      default:\n        reject();\n        break;\n    }\n  }).then(() => {\n    socket.send(JSON.stringify(request));\n  });\n}\n\n/**\n * Api middleware.\n * @function\n * @param {Object} api Api object.\n * @returns {Promise} Action promise.\n */\nexport default (api) => ({ dispatch, getState }) => (next) => (action) => {\n  const { settings } = config;\n\n  if (typeof action === 'function') {\n    return action(dispatch, getState);\n  }\n\n  const { request, type, mode = 'parallel', ...rest } = action;\n  const { subrequest } = action; // We want subrequest remains in `...rest` above\n\n  let actionPromise;\n\n  if (!request) {\n    return next(action);\n  }\n\n  next({ ...rest, type: `${type}_PENDING` });\n\n  if (socket) {\n    actionPromise = Array.isArray(request)\n      ? Promise.all(\n          request.map((item) =>\n            sendOnSocket({\n              ...item,\n              path: addExpandersToPath(item.path, type),\n              id: type,\n            }),\n          ),\n        )\n      : sendOnSocket({\n          ...request,\n          path: addExpandersToPath(request.path, type),\n          id: type,\n        });\n  } else {\n    actionPromise = Array.isArray(request)\n      ? mode === 'serial'\n        ? request.reduce((prevPromise, item) => {\n            return prevPromise.then((acc) => {\n              return api[item.op](addExpandersToPath(item.path, type), {\n                data: item.data,\n                type: item.type,\n                headers: item.headers,\n                params: request.params,\n                checkUrl: settings.actions_raising_api_errors.includes(\n                  action.type,\n                ),\n              }).then((reqres) => {\n                return [...acc, reqres];\n              });\n            });\n          }, Promise.resolve([]))\n        : Promise.all(\n            request.map((item) =>\n              api[item.op](addExpandersToPath(item.path, type), {\n                data: item.data,\n                type: item.type,\n                headers: item.headers,\n                params: request.params,\n                checkUrl: settings.actions_raising_api_errors.includes(\n                  action.type,\n                ),\n              }),\n            ),\n          )\n      : api[request.op](addExpandersToPath(request.path, type), {\n          data: request.data,\n          type: request.type,\n          headers: request.headers,\n          params: request.params,\n          checkUrl: settings.actions_raising_api_errors.includes(action.type),\n        });\n    actionPromise.then(\n      (result) => {\n        const { settings } = config;\n        if (getState().apierror.connectionRefused) {\n          next({\n            ...rest,\n            type: RESET_APIERROR,\n          });\n        }\n        if (type === GET_CONTENT) {\n          const lang = result?.language?.token;\n          if (\n            lang &&\n            getState().intl.language !== lang &&\n            !subrequest &&\n            config.settings.supportedLanguages.includes(lang)\n          ) {\n            const langFileName = normalizeLanguageName(lang);\n            import('~/../locales/' + langFileName + '.json').then((locale) => {\n              dispatch(changeLanguage(lang, locale.default));\n            });\n          }\n        }\n        if (type === LOGIN && settings.websockets) {\n          const cookies = new Cookies();\n          cookies.set(\n            'auth_token',\n            result.token,\n            getCookieOptions({\n              expires: new Date(jwtDecode(result.token).exp * 1000),\n            }),\n          );\n          api.get('/@wstoken').then((res) => {\n            socket = new WebSocket(\n              `${settings.apiPath.replace('http', 'ws')}/@ws?ws_token=${\n                res.token\n              }`,\n            );\n            socket.onmessage = (message) => {\n              const packet = JSON.parse(message.data);\n              if (packet.error) {\n                dispatch({\n                  type: `${packet.id}_FAIL`,\n                  error: packet.error,\n                });\n              } else {\n                dispatch({\n                  type: `${packet.id}_SUCCESS`,\n                  result: JSON.parse(packet.data),\n                });\n              }\n            };\n          });\n        }\n        return next({ ...rest, result, type: `${type}_SUCCESS` });\n      },\n      (error) => {\n        // Only SRR can set ECONNREFUSED\n        if (error.code === 'ECONNREFUSED') {\n          next({\n            ...rest,\n            error,\n            statusCode: error.code,\n            connectionRefused: true,\n            type: SET_APIERROR,\n          });\n        }\n\n        // Response error is marked crossDomain if CORS error happen\n        else if (error.crossDomain) {\n          next({\n            ...rest,\n            error,\n            statusCode: 'CORSERROR',\n            connectionRefused: false,\n            type: SET_APIERROR,\n          });\n        }\n\n        // Check for actions who can raise api errors\n        if (settings.actions_raising_api_errors.includes(action.type)) {\n          // Gateway timeout\n          if (error?.response?.statusCode === 504) {\n            next({\n              ...rest,\n              error,\n              statusCode: error.code,\n              connectionRefused: true,\n              type: SET_APIERROR,\n            });\n          }\n\n          // Redirect\n          else if (error?.code === 301) {\n            next({\n              ...rest,\n              error,\n              statusCode: error.code,\n              connectionRefused: false,\n              type: SET_APIERROR,\n            });\n          }\n\n          // Redirect\n          else if (error?.code === 408) {\n            next({\n              ...rest,\n              error,\n              statusCode: error.code,\n              connectionRefused: false,\n              type: SET_APIERROR,\n            });\n          }\n\n          // Unauthorized\n          else if (error?.response?.statusCode === 401) {\n            next({\n              ...rest,\n              error,\n              statusCode: error.response,\n              message: error.response.body.message,\n              connectionRefused: false,\n              type: SET_APIERROR,\n            });\n          }\n        }\n        return next({ ...rest, error, type: `${type}_FAIL` });\n      },\n    );\n  }\n\n  return actionPromise;\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}