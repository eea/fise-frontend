{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _isEmpty from \"lodash/isEmpty\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/DragDropList/DragDropList.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { v4 as uuid } from 'uuid';\nvar getPlaceholder = function getPlaceholder(draggedDOM, sourceIndex, destinationIndex) {\n  // Because of the margin rendering rules, there is no easy\n  // way to calculate the offset of the placeholder.\n  //\n  // (Note that this is the reason we cannot use the solutions\n  // published on the net, because they assume that we are in control\n  // of the content and there are no additional margins involved.)\n  //\n  // To get a placeholder that looks good in all cases, we\n  // fill up the space between the previous and the next element.\n  var childrenArray = _toConsumableArray(draggedDOM.parentNode.children);\n  // Remove the source element\n  childrenArray.splice(sourceIndex, 1);\n  // Also remove the placeholder that the library always inserts at the end\n  childrenArray.splice(-1, 1);\n  var parentRect = draggedDOM.parentNode.getBoundingClientRect();\n  var prevNode = childrenArray[destinationIndex - 1];\n  var nextNode = childrenArray[destinationIndex];\n  var top, bottom;\n  if (prevNode) {\n    var prevRect = prevNode.getBoundingClientRect();\n    top = prevRect.top + prevRect.height - parentRect.top;\n  } else {\n    top = 0;\n  }\n  if (nextNode) {\n    var nextRect = nextNode.getBoundingClientRect();\n    bottom = nextRect.top - parentRect.top;\n  } else {\n    bottom = parentRect.bottom + draggedDOM.getBoundingClientRect().height - parentRect.top;\n  }\n  return {\n    clientY: top,\n    clientHeight: bottom - top,\n    clientX: parseFloat(window.getComputedStyle(draggedDOM.parentNode).paddingLeft),\n    clientWidth: draggedDOM.clientWidth\n  };\n};\nvar DragDropList = function DragDropList(props) {\n  _s();\n  var childList = props.childList,\n    children = props.children,\n    onMoveItem = props.onMoveItem,\n    _props$as = props.as,\n    as = _props$as === void 0 ? 'div' : _props$as,\n    style = props.style,\n    forwardedAriaLabelledBy = props.forwardedAriaLabelledBy,\n    reactBeautifulDnd = props.reactBeautifulDnd; //renderChild\n  var DragDropContext = reactBeautifulDnd.DragDropContext,\n    Draggable = reactBeautifulDnd.Draggable,\n    Droppable = reactBeautifulDnd.Droppable;\n  var _React$useState = React.useState({}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    placeholderProps = _React$useState2[0],\n    setPlaceholderProps = _React$useState2[1];\n  var _React$useState3 = React.useState(uuid()),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    uid = _React$useState4[0];\n  // queueing timed action\n  var timer = useRef(null);\n  var onDragStart = React.useCallback(function (event) {\n    clearTimeout(timer.current);\n    var queryAttr = 'data-rbd-draggable-id';\n    var domQuery = \"[\".concat(queryAttr, \"='\").concat(event.draggableId, \"']\");\n    var draggedDOM = document.querySelector(domQuery);\n    if (!draggedDOM) {\n      return;\n    }\n    var sourceIndex = event.source.index;\n    setPlaceholderProps(getPlaceholder(draggedDOM, sourceIndex, sourceIndex));\n  }, []);\n  var onDragEnd = React.useCallback(function (result) {\n    clearTimeout(timer.current);\n    onMoveItem(result);\n    setPlaceholderProps({});\n  }, [onMoveItem]);\n  var onDragUpdate = React.useCallback(function (update) {\n    clearTimeout(timer.current);\n    setPlaceholderProps({});\n    if (!update.destination) {\n      return;\n    }\n    var draggableId = update.draggableId;\n    var queryAttr = 'data-rbd-draggable-id';\n    var domQuery = \"[\".concat(queryAttr, \"='\").concat(draggableId, \"']\");\n    var draggedDOM = document.querySelector(domQuery);\n    if (!draggedDOM) {\n      return;\n    }\n    var sourceIndex = update.source.index;\n    var destinationIndex = update.destination.index;\n    // Wait until the animations have finished, to make it look good.\n    timer.current = setTimeout(function () {\n      return setPlaceholderProps(getPlaceholder(draggedDOM, sourceIndex, destinationIndex));\n    }, 250);\n  }, []);\n  var AsDomComponent = as;\n  return __jsx(DragDropContext, {\n    onDragStart: onDragStart,\n    onDragUpdate: onDragUpdate,\n    onDragEnd: onDragEnd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, __jsx(Droppable, {\n    droppableId: uid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, function (provided, snapshot) {\n    return __jsx(AsDomComponent, _extends({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      style: _objectSpread(_objectSpread({}, style), {}, {\n        position: 'relative'\n      }),\n      \"aria-labelledby\": forwardedAriaLabelledBy,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }), childList.filter(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        id = _ref2[0],\n        child = _ref2[1];\n      return id && child;\n    }) // beware numbers!\n    .map(function (_ref3, index) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        childId = _ref4[0],\n        child = _ref4[1];\n      return __jsx(Draggable, {\n        draggableId: childId.toString(),\n        index: index,\n        key: childId,\n        style: {\n          userSelect: 'none'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, function (draginfo) {\n        return children({\n          child: child,\n          childId: childId,\n          index: index,\n          draginfo: draginfo\n        });\n      });\n    }), provided.placeholder, !_isEmpty(placeholderProps) && snapshot.isDraggingOver && __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        top: placeholderProps.clientY,\n        left: placeholderProps.clientX,\n        height: placeholderProps.clientHeight,\n        background: '#eee',\n        width: placeholderProps.clientWidth,\n        borderRadius: '3px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }));\n  }));\n};\n_s(DragDropList, \"ZxmNt5j2kjaxFUFhOneqNnc+22M=\");\n_c = DragDropList;\nexport default injectLazyLibs(['reactBeautifulDnd'])(DragDropList);\nvar _c;\n$RefreshReg$(_c, \"DragDropList\");","map":{"version":3,"names":["React","useRef","injectLazyLibs","v4","uuid","getPlaceholder","draggedDOM","sourceIndex","destinationIndex","childrenArray","parentNode","children","splice","parentRect","getBoundingClientRect","prevNode","nextNode","top","bottom","prevRect","height","nextRect","clientY","clientHeight","clientX","parseFloat","window","getComputedStyle","paddingLeft","clientWidth","DragDropList","props","childList","onMoveItem","as","style","forwardedAriaLabelledBy","reactBeautifulDnd","DragDropContext","Draggable","Droppable","useState","placeholderProps","setPlaceholderProps","uid","timer","onDragStart","useCallback","event","clearTimeout","current","queryAttr","domQuery","draggableId","document","querySelector","source","index","onDragEnd","result","onDragUpdate","update","destination","setTimeout","AsDomComponent","provided","snapshot","innerRef","droppableProps","position","filter","id","child","map","childId","toString","userSelect","draginfo","placeholder","isDraggingOver","left","background","width","borderRadius"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/DragDropList/DragDropList.jsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { isEmpty } from 'lodash';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { v4 as uuid } from 'uuid';\n\nconst getPlaceholder = (draggedDOM, sourceIndex, destinationIndex) => {\n  // Because of the margin rendering rules, there is no easy\n  // way to calculate the offset of the placeholder.\n  //\n  // (Note that this is the reason we cannot use the solutions\n  // published on the net, because they assume that we are in control\n  // of the content and there are no additional margins involved.)\n  //\n  // To get a placeholder that looks good in all cases, we\n  // fill up the space between the previous and the next element.\n  const childrenArray = [...draggedDOM.parentNode.children];\n  // Remove the source element\n  childrenArray.splice(sourceIndex, 1);\n  // Also remove the placeholder that the library always inserts at the end\n  childrenArray.splice(-1, 1);\n  const parentRect = draggedDOM.parentNode.getBoundingClientRect();\n  const prevNode = childrenArray[destinationIndex - 1];\n  const nextNode = childrenArray[destinationIndex];\n  let top, bottom;\n  if (prevNode) {\n    const prevRect = prevNode.getBoundingClientRect();\n    top = prevRect.top + prevRect.height - parentRect.top;\n  } else {\n    top = 0;\n  }\n  if (nextNode) {\n    const nextRect = nextNode.getBoundingClientRect();\n    bottom = nextRect.top - parentRect.top;\n  } else {\n    bottom =\n      parentRect.bottom +\n      draggedDOM.getBoundingClientRect().height -\n      parentRect.top;\n  }\n  return {\n    clientY: top,\n    clientHeight: bottom - top,\n    clientX: parseFloat(\n      window.getComputedStyle(draggedDOM.parentNode).paddingLeft,\n    ),\n    clientWidth: draggedDOM.clientWidth,\n  };\n};\n\nconst DragDropList = (props) => {\n  const {\n    childList,\n    children,\n    onMoveItem,\n    as = 'div',\n    style,\n    forwardedAriaLabelledBy,\n    reactBeautifulDnd,\n  } = props; //renderChild\n  const { DragDropContext, Draggable, Droppable } = reactBeautifulDnd;\n  const [placeholderProps, setPlaceholderProps] = React.useState({});\n  const [uid] = React.useState(uuid());\n  // queueing timed action\n  const timer = useRef(null);\n\n  const onDragStart = React.useCallback((event) => {\n    clearTimeout(timer.current);\n    const queryAttr = 'data-rbd-draggable-id';\n    const domQuery = `[${queryAttr}='${event.draggableId}']`;\n    const draggedDOM = document.querySelector(domQuery);\n    if (!draggedDOM) {\n      return;\n    }\n    const sourceIndex = event.source.index;\n    setPlaceholderProps(getPlaceholder(draggedDOM, sourceIndex, sourceIndex));\n  }, []);\n\n  const onDragEnd = React.useCallback(\n    (result) => {\n      clearTimeout(timer.current);\n      onMoveItem(result);\n      setPlaceholderProps({});\n    },\n    [onMoveItem],\n  );\n\n  const onDragUpdate = React.useCallback((update) => {\n    clearTimeout(timer.current);\n    setPlaceholderProps({});\n    if (!update.destination) {\n      return;\n    }\n    const draggableId = update.draggableId;\n    const queryAttr = 'data-rbd-draggable-id';\n    const domQuery = `[${queryAttr}='${draggableId}']`;\n    const draggedDOM = document.querySelector(domQuery);\n    if (!draggedDOM) {\n      return;\n    }\n    const sourceIndex = update.source.index;\n    const destinationIndex = update.destination.index;\n    // Wait until the animations have finished, to make it look good.\n    timer.current = setTimeout(\n      () =>\n        setPlaceholderProps(\n          getPlaceholder(draggedDOM, sourceIndex, destinationIndex),\n        ),\n      250,\n    );\n  }, []);\n\n  const AsDomComponent = as;\n  return (\n    <DragDropContext\n      onDragStart={onDragStart}\n      onDragUpdate={onDragUpdate}\n      onDragEnd={onDragEnd}\n    >\n      <Droppable droppableId={uid}>\n        {(provided, snapshot) => (\n          <AsDomComponent\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            style={{ ...style, position: 'relative' }}\n            aria-labelledby={forwardedAriaLabelledBy}\n          >\n            {childList\n              .filter(([id, child]) => id && child) // beware numbers!\n              .map(([childId, child], index) => (\n                <Draggable\n                  draggableId={childId.toString()}\n                  index={index}\n                  key={childId}\n                  style={{\n                    userSelect: 'none',\n                  }}\n                >\n                  {(draginfo) => children({ child, childId, index, draginfo })}\n                </Draggable>\n              ))}\n            {provided.placeholder}\n            {!isEmpty(placeholderProps) && snapshot.isDraggingOver && (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: placeholderProps.clientY,\n                  left: placeholderProps.clientX,\n                  height: placeholderProps.clientHeight,\n                  background: '#eee',\n                  width: placeholderProps.clientWidth,\n                  borderRadius: '3px',\n                }}\n              />\n            )}\n          </AsDomComponent>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default injectLazyLibs(['reactBeautifulDnd'])(DragDropList);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}