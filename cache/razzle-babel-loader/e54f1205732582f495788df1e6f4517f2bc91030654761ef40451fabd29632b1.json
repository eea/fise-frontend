{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SearchDetails.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { FormattedMessage, defineMessages, useIntl } from 'react-intl';\nconst messages = defineMessages({\n  searchResults: {\n    \"id\": \"Search results\",\n    \"defaultMessage\": \"Search results\"\n  }\n});\nconst SearchDetails = ({\n  total,\n  text,\n  as = 'h4',\n  data\n}) => {\n  const El = as;\n  const intl = useIntl();\n  return __jsx(El, {\n    className: \"search-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, text && __jsx(React.Fragment, null, __jsx(FormattedMessage, {\n    id: \"Searched for: <em>{searchedtext}</em>.\",\n    defaultMessage: \"Searched for: <em>{searchedtext}</em>.\",\n    values: {\n      em: (...chunks) => __jsx(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 36\n        }\n      }, chunks),\n      searchedtext: text\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  })), data.showTotalResults && __jsx(React.Fragment, null, ' ', intl.formatMessage(messages.searchResults), \": \", total)));\n};\nexport default SearchDetails;","map":{"version":3,"names":["React","FormattedMessage","defineMessages","useIntl","messages","searchResults","SearchDetails","total","text","as","data","El","intl","em","chunks","searchedtext","showTotalResults","formatMessage"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SearchDetails.jsx"],"sourcesContent":["import React from 'react';\nimport { FormattedMessage, defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  searchResults: {\n    id: 'Search results',\n    defaultMessage: 'Search results',\n  },\n});\n\nconst SearchDetails = ({ total, text, as = 'h4', data }) => {\n  const El = as;\n  const intl = useIntl();\n  return (\n    <El className=\"search-details\">\n      <>\n        {text && (\n          <>\n            <FormattedMessage\n              id=\"Searched for: <em>{searchedtext}</em>.\"\n              defaultMessage=\"Searched for: <em>{searchedtext}</em>.\"\n              values={{\n                em: (...chunks) => <em>{chunks}</em>,\n                searchedtext: text,\n              }}\n            />\n          </>\n        )}\n        {data.showTotalResults && (\n          <>\n            {' '}\n            {intl.formatMessage(messages.searchResults)}: {total}\n          </>\n        )}\n      </>\n    </El>\n  );\n};\n\nexport default SearchDetails;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,cAAc,EAAEC,OAAO,QAAQ,YAAY;AAEtE,MAAMC,QAAQ,GAAGF,cAAc,CAAC;EAC9BG,aAAa;IAAA;IAAA;EAAA;AAIf,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAG,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC,EAAE,GAAG,IAAI;EAAEC;AAAK,CAAC,KAAK;EAC1D,MAAMC,EAAE,GAAGF,EAAE;EACb,MAAMG,IAAI,GAAGT,OAAO,EAAE;EACtB,OACE,MAAC,EAAE;IAAC,SAAS,EAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC5B,4BACGK,IAAI,IACH,4BACE,MAAC,gBAAgB;IACf,EAAE,EAAC,wCAAwC;IAC3C,cAAc,EAAC,wCAAwC;IACvD,MAAM,EAAE;MACNK,EAAE,EAAE,CAAC,GAAGC,MAAM,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAKA,MAAM,CAAM;MACpCC,YAAY,EAAEP;IAChB,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF,CAEL,EACAE,IAAI,CAACM,gBAAgB,IACpB,4BACG,GAAG,EACHJ,IAAI,CAACK,aAAa,CAACb,QAAQ,CAACC,aAAa,CAAC,QAAIE,KAAK,CAEvD,CACA,CACA;AAET,CAAC;AAED,eAAeD,aAAa"},"metadata":{"react-intl":{"messages":[{"id":"Search results","defaultMessage":"Search results"},{"id":"Searched for: <em>{searchedtext}</em>.","defaultMessage":"Searched for: <em>{searchedtext}</em>."}]}},"sourceType":"module","externalDependencies":[]}