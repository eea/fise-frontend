{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/blocks/Item/Item.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport cx from 'classnames';\nimport { Item as UiItem, Icon } from 'semantic-ui-react';\nfunction Item({\n  assetType,\n  children,\n  description,\n  extra,\n  header,\n  icon,\n  iconSize = 'huge',\n  iconTheme,\n  image,\n  imageSize = 'tile',\n  meta,\n  mode = 'view',\n  styles = {}\n}) {\n  const {\n    verticalAlign\n  } = styles;\n  return __jsx(UiItem.Group, {\n    unstackable: true,\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(UiItem, {\n    className: cx(styles === null || styles === void 0 ? void 0 : styles.theme),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, assetType === 'image' && image && __jsx(UiItem.Image, {\n    src: `${image}/@@images/image/preview`,\n    className: cx('ui', imageSize),\n    alt: header || 'Item image',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }), assetType === 'icon' && icon && __jsx(Icon, {\n    className: cx(icon, iconTheme),\n    size: iconSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), __jsx(UiItem.Content, {\n    verticalAlign: verticalAlign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, header && __jsx(UiItem.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }\n  }, header), meta && __jsx(UiItem.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }\n  }, meta), description && mode === 'view' && __jsx(UiItem.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, description), mode === 'edit' && children, extra && __jsx(UiItem.Extra, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, extra))));\n}\nexport default Item;","map":{"version":3,"names":["cx","Item","UiItem","Icon","assetType","children","description","extra","header","icon","iconSize","iconTheme","image","imageSize","meta","mode","styles","verticalAlign","theme"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/blocks/Item/Item.jsx"],"sourcesContent":["import cx from 'classnames';\nimport { Item as UiItem, Icon } from 'semantic-ui-react';\n\nfunction Item({\n  assetType,\n  children,\n  description,\n  extra,\n  header,\n  icon,\n  iconSize = 'huge',\n  iconTheme,\n  image,\n  imageSize = 'tile',\n  meta,\n  mode = 'view',\n  styles = {},\n}) {\n  const { verticalAlign } = styles;\n  return (\n    <UiItem.Group unstackable className=\"row\">\n      <UiItem className={cx(styles?.theme)}>\n        {assetType === 'image' && image && (\n          <UiItem.Image\n            src={`${image}/@@images/image/preview`}\n            className={cx('ui', imageSize)}\n            alt={header || 'Item image'}\n          />\n        )}\n        {assetType === 'icon' && icon && (\n          <Icon className={cx(icon, iconTheme)} size={iconSize} />\n        )}\n        <UiItem.Content verticalAlign={verticalAlign}>\n          {header && <UiItem.Header>{header}</UiItem.Header>}\n          {meta && <UiItem.Meta>{meta}</UiItem.Meta>}\n          {description && mode === 'view' && (\n            <UiItem.Description>{description}</UiItem.Description>\n          )}\n          {mode === 'edit' && children}\n          {extra && <UiItem.Extra>{extra}</UiItem.Extra>}\n        </UiItem.Content>\n      </UiItem>\n    </UiItem.Group>\n  );\n}\n\nexport default Item;\n"],"mappings":";;;AAAA,OAAOA,EAAE,MAAM,YAAY;AAC3B,SAASC,IAAI,IAAIC,MAAM,EAAEC,IAAI,QAAQ,mBAAmB;AAExD,SAASF,IAAI,CAAC;EACZG,SAAS;EACTC,QAAQ;EACRC,WAAW;EACXC,KAAK;EACLC,MAAM;EACNC,IAAI;EACJC,QAAQ,GAAG,MAAM;EACjBC,SAAS;EACTC,KAAK;EACLC,SAAS,GAAG,MAAM;EAClBC,IAAI;EACJC,IAAI,GAAG,MAAM;EACbC,MAAM,GAAG,CAAC;AACZ,CAAC,EAAE;EACD,MAAM;IAAEC;EAAc,CAAC,GAAGD,MAAM;EAChC,OACE,MAAC,MAAM,CAAC,KAAK;IAAC,WAAW;IAAC,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACvC,MAAC,MAAM;IAAC,SAAS,EAAEhB,EAAE,CAACgB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,KAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAClCd,SAAS,KAAK,OAAO,IAAIQ,KAAK,IAC7B,MAAC,MAAM,CAAC,KAAK;IACX,GAAG,EAAG,GAAEA,KAAM,yBAAyB;IACvC,SAAS,EAAEZ,EAAE,CAAC,IAAI,EAAEa,SAAS,CAAE;IAC/B,GAAG,EAAEL,MAAM,IAAI,YAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAE/B,EACAJ,SAAS,KAAK,MAAM,IAAIK,IAAI,IAC3B,MAAC,IAAI;IAAC,SAAS,EAAET,EAAE,CAACS,IAAI,EAAEE,SAAS,CAAE;IAAC,IAAI,EAAED,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACtD,EACD,MAAC,MAAM,CAAC,OAAO;IAAC,aAAa,EAAEO,aAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC1CT,MAAM,IAAI,MAAC,MAAM,CAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEA,MAAM,CAAiB,EACjDM,IAAI,IAAI,MAAC,MAAM,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEA,IAAI,CAAe,EACzCR,WAAW,IAAIS,IAAI,KAAK,MAAM,IAC7B,MAAC,MAAM,CAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAET,WAAW,CACjC,EACAS,IAAI,KAAK,MAAM,IAAIV,QAAQ,EAC3BE,KAAK,IAAI,MAAC,MAAM,CAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEA,KAAK,CAAgB,CAC/B,CACV,CACI;AAEnB;AAEA,eAAeN,IAAI"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}