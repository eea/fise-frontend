{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { Node, Range } from 'slate';\nimport config from '@plone/volto/registry';\n\n/**\n * highlightByType.\n *\n * @param {} editor\n * @param {} node, path\n * @param {} ranges\n */\nexport var highlightByType = function highlightByType(editor, _ref, ranges) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    node = _ref2[0],\n    path = _ref2[1];\n  var slate = config.settings.slate;\n  var nodeTypesToHighlight = slate.nodeTypesToHighlight;\n  if (nodeTypesToHighlight.includes(node.type)) {\n    var _Node$texts = Node.texts(editor, {\n        from: path,\n        to: path\n      }),\n      _Node$texts2 = _slicedToArray(_Node$texts, 1),\n      found = _Node$texts2[0];\n    var visualSelectionRanges = highlightSelection(editor, found, ranges);\n    var text = Node.string(node) || '';\n    var range = {\n      anchor: {\n        path: path,\n        offset: 0\n      },\n      focus: {\n        path: path,\n        offset: text.length\n      },\n      highlight: true,\n      highlightType: visualSelectionRanges.length === 0 ? node.type : null,\n      isSelection: visualSelectionRanges.length > 0\n    };\n    return [range];\n  }\n  return ranges;\n};\n\n/**\n * @function highlightSelection\n *\n * @summary A runtime decorator that decorates the saved selection, when the editor is\n * is no longer active.\n *\n * @param {Editor} editor The editor on which to apply the decorator.\n * @param {Node} node\n * @param {Path} path\n * @param {Array} ranges\n */\nexport function highlightSelection(editor, _ref3, ranges) {\n  var _ref4 = _slicedToArray(_ref3, 2),\n    node = _ref4[0],\n    path = _ref4[1];\n  var selected = editor.isSelected();\n  if (selected && !editor.selection && editor.getSavedSelection()) {\n    var newSelection = editor.getSavedSelection();\n    if (JSON.stringify(path) === JSON.stringify(newSelection.anchor.path)) {\n      var range = _objectSpread(_objectSpread({}, newSelection), {}, {\n        highlight: true,\n        isSelection: true\n      });\n      if (Range.isExpanded(range)) {\n        ranges.push(range);\n      }\n    }\n  }\n  // if (ranges.length) console.log('RANGES!', ranges, editor.children);\n  // console.log(node, path, editor.savedSelection);\n  return ranges;\n}","map":{"version":3,"names":["Node","Range","config","highlightByType","editor","ranges","node","path","slate","settings","nodeTypesToHighlight","includes","type","texts","from","to","found","visualSelectionRanges","highlightSelection","text","string","range","anchor","offset","focus","length","highlight","highlightType","isSelection","selected","isSelected","selection","getSavedSelection","newSelection","JSON","stringify","isExpanded","push"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/editor/decorate.js"],"sourcesContent":["import { Node, Range } from 'slate';\n\nimport config from '@plone/volto/registry';\n\n/**\n * highlightByType.\n *\n * @param {} editor\n * @param {} node, path\n * @param {} ranges\n */\nexport const highlightByType = (editor, [node, path], ranges) => {\n  const { slate } = config.settings;\n  const { nodeTypesToHighlight } = slate;\n\n  if (nodeTypesToHighlight.includes(node.type)) {\n    const [found] = Node.texts(editor, { from: path, to: path });\n    const visualSelectionRanges = highlightSelection(editor, found, ranges);\n    const text = Node.string(node) || '';\n    const range = {\n      anchor: { path, offset: 0 },\n      focus: { path, offset: text.length },\n      highlight: true,\n      highlightType: visualSelectionRanges.length === 0 ? node.type : null,\n      isSelection: visualSelectionRanges.length > 0,\n    };\n    return [range];\n  }\n\n  return ranges;\n};\n\n/**\n * @function highlightSelection\n *\n * @summary A runtime decorator that decorates the saved selection, when the editor is\n * is no longer active.\n *\n * @param {Editor} editor The editor on which to apply the decorator.\n * @param {Node} node\n * @param {Path} path\n * @param {Array} ranges\n */\nexport function highlightSelection(editor, [node, path], ranges) {\n  let selected = editor.isSelected();\n\n  if (selected && !editor.selection && editor.getSavedSelection()) {\n    const newSelection = editor.getSavedSelection();\n    if (JSON.stringify(path) === JSON.stringify(newSelection.anchor.path)) {\n      const range = {\n        ...newSelection,\n        highlight: true,\n        isSelection: true,\n      };\n      if (Range.isExpanded(range)) {\n        ranges.push(range);\n      }\n    }\n  }\n  // if (ranges.length) console.log('RANGES!', ranges, editor.children);\n  // console.log(node, path, editor.savedSelection);\n  return ranges;\n}\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,KAAK,QAAQ,OAAO;AAEnC,OAAOC,MAAM,MAAM,uBAAuB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAIC,MAAM,QAAgBC,MAAM,EAAK;EAAA;IAAxBC,IAAI;IAAEC,IAAI;EACjD,IAAQC,KAAK,GAAKN,MAAM,CAACO,QAAQ,CAAzBD,KAAK;EACb,IAAQE,oBAAoB,GAAKF,KAAK,CAA9BE,oBAAoB;EAE5B,IAAIA,oBAAoB,CAACC,QAAQ,CAACL,IAAI,CAACM,IAAI,CAAC,EAAE;IAC5C,kBAAgBZ,IAAI,CAACa,KAAK,CAACT,MAAM,EAAE;QAAEU,IAAI,EAAEP,IAAI;QAAEQ,EAAE,EAAER;MAAK,CAAC,CAAC;MAAA;MAArDS,KAAK;IACZ,IAAMC,qBAAqB,GAAGC,kBAAkB,CAACd,MAAM,EAAEY,KAAK,EAAEX,MAAM,CAAC;IACvE,IAAMc,IAAI,GAAGnB,IAAI,CAACoB,MAAM,CAACd,IAAI,CAAC,IAAI,EAAE;IACpC,IAAMe,KAAK,GAAG;MACZC,MAAM,EAAE;QAAEf,IAAI,EAAJA,IAAI;QAAEgB,MAAM,EAAE;MAAE,CAAC;MAC3BC,KAAK,EAAE;QAAEjB,IAAI,EAAJA,IAAI;QAAEgB,MAAM,EAAEJ,IAAI,CAACM;MAAO,CAAC;MACpCC,SAAS,EAAE,IAAI;MACfC,aAAa,EAAEV,qBAAqB,CAACQ,MAAM,KAAK,CAAC,GAAGnB,IAAI,CAACM,IAAI,GAAG,IAAI;MACpEgB,WAAW,EAAEX,qBAAqB,CAACQ,MAAM,GAAG;IAC9C,CAAC;IACD,OAAO,CAACJ,KAAK,CAAC;EAChB;EAEA,OAAOhB,MAAM;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASa,kBAAkB,CAACd,MAAM,SAAgBC,MAAM,EAAE;EAAA;IAArBC,IAAI;IAAEC,IAAI;EACpD,IAAIsB,QAAQ,GAAGzB,MAAM,CAAC0B,UAAU,EAAE;EAElC,IAAID,QAAQ,IAAI,CAACzB,MAAM,CAAC2B,SAAS,IAAI3B,MAAM,CAAC4B,iBAAiB,EAAE,EAAE;IAC/D,IAAMC,YAAY,GAAG7B,MAAM,CAAC4B,iBAAiB,EAAE;IAC/C,IAAIE,IAAI,CAACC,SAAS,CAAC5B,IAAI,CAAC,KAAK2B,IAAI,CAACC,SAAS,CAACF,YAAY,CAACX,MAAM,CAACf,IAAI,CAAC,EAAE;MACrE,IAAMc,KAAK,mCACNY,YAAY;QACfP,SAAS,EAAE,IAAI;QACfE,WAAW,EAAE;MAAI,EAClB;MACD,IAAI3B,KAAK,CAACmC,UAAU,CAACf,KAAK,CAAC,EAAE;QAC3BhB,MAAM,CAACgC,IAAI,CAAChB,KAAK,CAAC;MACpB;IACF;EACF;EACA;EACA;EACA,OAAOhB,MAAM;AACf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}