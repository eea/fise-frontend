{"ast":null,"code":"import _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-banner/src/StagingBanner.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Portal } from 'react-portal';\nimport cx from 'classnames';\nimport { Message, Container } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport { Icon } from '@plone/volto/components';\nimport { BodyClass } from '@plone/volto/helpers';\nimport { getBannerConfig } from '@eeacms/volto-banner/actions';\nimport './less/stagingBanner.less';\nvar types = {\n  upgrading: 'warning',\n  upgraded: 'warning',\n  degraded: 'error',\n  stopped: 'error',\n  error: 'error',\n  inactive: 'error'\n};\nvar bannerIsVisible = function bannerIsVisible(token, enabled, visible_to_all) {\n  if (!enabled) return false;\n  if (token || visible_to_all) return true;\n  return false;\n};\nvar StagingBanner = function StagingBanner(_ref) {\n  _s();\n  var banner = _ref.banner,\n    token = _ref.token,\n    dispatch = _ref.dispatch;\n  var bannerConfig = _objectSpread(_objectSpread({}, config.settings.stagingBanner || {}), banner.config || {});\n  var staticBanner = bannerConfig.static_banner || {};\n  var dynamicBanner = bannerConfig.dynamic_banner || {};\n  React.useEffect(function () {\n    dispatch(getBannerConfig());\n    /* eslint-disable-next-line */\n  }, []);\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    node = _React$useState2[0],\n    setNode = _React$useState2[1],\n    _React$useState3 = React.useState(true),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    staticBannerVisible = _React$useState4[0],\n    setStaticBannerVisible = _React$useState4[1],\n    _React$useState5 = React.useState(true),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    dynamicBannerVisible = _React$useState6[0],\n    setDynamicBannerVisible = _React$useState6[1],\n    hideStaticBanner = React.useCallback(function () {\n      setStaticBannerVisible(false);\n    }, [setStaticBannerVisible]),\n    hideDynamicBanner = React.useCallback(function () {\n      setDynamicBannerVisible(false);\n    }, [setDynamicBannerVisible]);\n  React.useEffect(function () {\n    setNode(document.querySelector(bannerConfig.parentNodeSelector));\n  }, [bannerConfig.parentNodeSelector]);\n  if (!node) return '';\n  return __jsx(Portal, {\n    node: node,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, bannerIsVisible(token, staticBannerVisible && staticBanner.enabled, staticBanner.visible_to_all) && __jsx(Message, {\n    className: cx('stagingBanner static-banner', staticBanner.type),\n    icon: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(BodyClass, {\n    className: \"has-banner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(Message.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(Message.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, staticBanner.title), __jsx(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: staticBanner.message\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, bannerConfig.bannerIcon && __jsx(Icon, {\n    name: bannerConfig.bannerIcon,\n    color: bannerConfig.bannerIconColor || 'black',\n    size: \"32px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), bannerConfig.bannerCloseIcon && __jsx(Icon, {\n    name: bannerConfig.bannerCloseIcon,\n    color: bannerConfig.bannerCloseIconColor || 'black',\n    className: \"close-button\",\n    size: \"32px\",\n    onClick: hideStaticBanner,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })))), bannerIsVisible(token, dynamicBannerVisible && dynamicBanner.enabled, dynamicBanner.visible_to_all) && dynamicBanner.rancher_stacks_status && __jsx(Message, {\n    className: cx('stagingBanner static-banner', types[dynamicBanner.rancher_stacks_status]),\n    icon: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, __jsx(BodyClass, {\n    className: \"has-banner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, __jsx(Message.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, __jsx(Message.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, dynamicBanner.title), __jsx(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: (dynamicBanner.message || '').replace('{}', dynamicBanner.rancher_stacks_status)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, bannerConfig.bannerIcon && __jsx(Icon, {\n    name: bannerConfig.bannerIcon,\n    color: bannerConfig.bannerIconColor || 'black',\n    size: \"32px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }), bannerConfig.bannerCloseIcon && __jsx(Icon, {\n    name: bannerConfig.bannerCloseIcon,\n    color: bannerConfig.bannerCloseIconColor || 'black',\n    className: \"close-button\",\n    size: \"32px\",\n    onClick: hideDynamicBanner,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  })))));\n};\n_s(StagingBanner, \"Bp8Hj+sBma2xITAhMOthBeff++g=\");\n_c = StagingBanner;\nexport default connect(function (state) {\n  return {\n    banner: state.banner,\n    objectActions: state.actions.actions.object,\n    token: state.userSession.token\n  };\n})(StagingBanner);\nvar _c;\n$RefreshReg$(_c, \"StagingBanner\");","map":{"version":3,"names":["React","connect","Portal","cx","Message","Container","config","Icon","BodyClass","getBannerConfig","types","upgrading","upgraded","degraded","stopped","error","inactive","bannerIsVisible","token","enabled","visible_to_all","StagingBanner","banner","dispatch","bannerConfig","settings","stagingBanner","staticBanner","static_banner","dynamicBanner","dynamic_banner","useEffect","useState","node","setNode","staticBannerVisible","setStaticBannerVisible","dynamicBannerVisible","setDynamicBannerVisible","hideStaticBanner","useCallback","hideDynamicBanner","document","querySelector","parentNodeSelector","type","title","__html","message","bannerIcon","bannerIconColor","bannerCloseIcon","bannerCloseIconColor","rancher_stacks_status","replace","state","objectActions","actions","object","userSession"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-banner/src/StagingBanner.jsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Portal } from 'react-portal';\nimport cx from 'classnames';\nimport { Message, Container } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport { Icon } from '@plone/volto/components';\nimport { BodyClass } from '@plone/volto/helpers';\n\nimport { getBannerConfig } from '@eeacms/volto-banner/actions';\n\nimport './less/stagingBanner.less';\n\nconst types = {\n  upgrading: 'warning',\n  upgraded: 'warning',\n  degraded: 'error',\n  stopped: 'error',\n  error: 'error',\n  inactive: 'error',\n};\n\nconst bannerIsVisible = (token, enabled, visible_to_all) => {\n  if (!enabled) return false;\n  if (token || visible_to_all) return true;\n  return false;\n};\n\nconst StagingBanner = ({ banner, token, dispatch }) => {\n  const bannerConfig = {\n    ...(config.settings.stagingBanner || {}),\n    ...(banner.config || {}),\n  };\n  const staticBanner = bannerConfig.static_banner || {};\n  const dynamicBanner = bannerConfig.dynamic_banner || {};\n\n  React.useEffect(() => {\n    dispatch(getBannerConfig());\n    /* eslint-disable-next-line */\n  }, []);\n\n  const [node, setNode] = React.useState(''),\n    [staticBannerVisible, setStaticBannerVisible] = React.useState(true),\n    [dynamicBannerVisible, setDynamicBannerVisible] = React.useState(true),\n    hideStaticBanner = React.useCallback(() => {\n      setStaticBannerVisible(false);\n    }, [setStaticBannerVisible]),\n    hideDynamicBanner = React.useCallback(() => {\n      setDynamicBannerVisible(false);\n    }, [setDynamicBannerVisible]);\n\n  React.useEffect(() => {\n    setNode(document.querySelector(bannerConfig.parentNodeSelector));\n  }, [bannerConfig.parentNodeSelector]);\n\n  if (!node) return '';\n\n  return (\n    <Portal node={node}>\n      {bannerIsVisible(\n        token,\n        staticBannerVisible && staticBanner.enabled,\n        staticBanner.visible_to_all,\n      ) && (\n        <Message\n          className={cx('stagingBanner static-banner', staticBanner.type)}\n          icon\n        >\n          <BodyClass className=\"has-banner\" />\n          <Container>\n            <Message.Content>\n              <Message.Header>{staticBanner.title}</Message.Header>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: staticBanner.message,\n                }}\n              />\n            </Message.Content>\n            <div>\n              {bannerConfig.bannerIcon && (\n                <Icon\n                  name={bannerConfig.bannerIcon}\n                  color={bannerConfig.bannerIconColor || 'black'}\n                  size=\"32px\"\n                />\n              )}\n              {bannerConfig.bannerCloseIcon && (\n                <Icon\n                  name={bannerConfig.bannerCloseIcon}\n                  color={bannerConfig.bannerCloseIconColor || 'black'}\n                  className=\"close-button\"\n                  size=\"32px\"\n                  onClick={hideStaticBanner}\n                />\n              )}\n            </div>\n          </Container>\n        </Message>\n      )}\n      {bannerIsVisible(\n        token,\n        dynamicBannerVisible && dynamicBanner.enabled,\n        dynamicBanner.visible_to_all,\n      ) &&\n        dynamicBanner.rancher_stacks_status && (\n          <Message\n            className={cx(\n              'stagingBanner static-banner',\n              types[dynamicBanner.rancher_stacks_status],\n            )}\n            icon\n          >\n            <BodyClass className=\"has-banner\" />\n            <Container>\n              <Message.Content>\n                <Message.Header>{dynamicBanner.title}</Message.Header>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: (dynamicBanner.message || '').replace(\n                      '{}',\n                      dynamicBanner.rancher_stacks_status,\n                    ),\n                  }}\n                />\n              </Message.Content>\n              <div>\n                {bannerConfig.bannerIcon && (\n                  <Icon\n                    name={bannerConfig.bannerIcon}\n                    color={bannerConfig.bannerIconColor || 'black'}\n                    size=\"32px\"\n                  />\n                )}\n                {bannerConfig.bannerCloseIcon && (\n                  <Icon\n                    name={bannerConfig.bannerCloseIcon}\n                    color={bannerConfig.bannerCloseIconColor || 'black'}\n                    className=\"close-button\"\n                    size=\"32px\"\n                    onClick={hideDynamicBanner}\n                  />\n                )}\n              </div>\n            </Container>\n          </Message>\n        )}\n    </Portal>\n  );\n};\n\nexport default connect((state) => ({\n  banner: state.banner,\n  objectActions: state.actions.actions.object,\n  token: state.userSession.token,\n}))(StagingBanner);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}