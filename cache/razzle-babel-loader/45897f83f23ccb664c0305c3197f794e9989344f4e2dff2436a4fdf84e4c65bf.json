{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/TextWidget.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * TextWidget component.\n * @module components/manage/Widgets/TextWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\nimport { injectIntl } from 'react-intl';\nimport { Icon, FormFieldWrapper } from '@plone/volto/components';\n\n/**\n * The simple text widget.\n *\n * It is the default fallback widget, so if no other widget is found based on\n * passed field properties, it will be used.\n */\nclass TextWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      value,\n      onChange,\n      onBlur,\n      onClick,\n      icon,\n      iconAction,\n      minLength,\n      maxLength,\n      placeholder\n    } = this.props;\n    return __jsx(FormFieldWrapper, _extends({}, this.props, {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }), __jsx(Input, {\n      id: `field-${id}`,\n      name: id,\n      value: value || '',\n      disabled: this.props.isDisabled,\n      icon: icon || null,\n      placeholder: placeholder,\n      onChange: ({\n        target\n      }) => onChange(id, target.value === '' ? undefined : target.value),\n      ref: node => {\n        this.node = node;\n      },\n      onBlur: ({\n        target\n      }) => onBlur(id, target.value === '' ? undefined : target.value),\n      onClick: () => onClick(),\n      minLength: minLength || null,\n      maxLength: maxLength || null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }), icon && iconAction && __jsx(\"button\", {\n      className: `field-${id}-action-button`,\n      onClick: iconAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, __jsx(Icon, {\n      name: icon,\n      size: \"18px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n_defineProperty(TextWidget, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  focus: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  icon: PropTypes.shape({\n    xmlns: PropTypes.string,\n    viewBox: PropTypes.string,\n    content: PropTypes.string\n  }),\n  iconAction: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string\n});\n_defineProperty(TextWidget, \"defaultProps\", {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  onEdit: null,\n  onDelete: null,\n  focus: false,\n  icon: null,\n  iconAction: null,\n  minLength: null,\n  maxLength: null\n});\nexport default injectIntl(TextWidget);","map":{"version":3,"names":["React","Component","PropTypes","Input","injectIntl","Icon","FormFieldWrapper","TextWidget","componentDidMount","props","focus","node","render","id","value","onChange","onBlur","onClick","icon","iconAction","minLength","maxLength","placeholder","isDisabled","target","undefined","string","isRequired","title","description","required","bool","error","arrayOf","func","onEdit","onDelete","shape","xmlns","viewBox","content","number","wrapped"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/TextWidget.jsx"],"sourcesContent":["/**\n * TextWidget component.\n * @module components/manage/Widgets/TextWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\n\nimport { injectIntl } from 'react-intl';\nimport { Icon, FormFieldWrapper } from '@plone/volto/components';\n\n/**\n * The simple text widget.\n *\n * It is the default fallback widget, so if no other widget is found based on\n * passed field properties, it will be used.\n */\nclass TextWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.string,\n    focus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    onClick: PropTypes.func,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n    icon: PropTypes.shape({\n      xmlns: PropTypes.string,\n      viewBox: PropTypes.string,\n      content: PropTypes.string,\n    }),\n    iconAction: PropTypes.func,\n    minLength: PropTypes.number,\n    maxLength: PropTypes.number,\n    wrapped: PropTypes.bool,\n    placeholder: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: null,\n    onChange: () => {},\n    onBlur: () => {},\n    onClick: () => {},\n    onEdit: null,\n    onDelete: null,\n    focus: false,\n    icon: null,\n    iconAction: null,\n    minLength: null,\n    maxLength: null,\n  };\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      value,\n      onChange,\n      onBlur,\n      onClick,\n      icon,\n      iconAction,\n      minLength,\n      maxLength,\n      placeholder,\n    } = this.props;\n\n    return (\n      <FormFieldWrapper {...this.props} className=\"text\">\n        <Input\n          id={`field-${id}`}\n          name={id}\n          value={value || ''}\n          disabled={this.props.isDisabled}\n          icon={icon || null}\n          placeholder={placeholder}\n          onChange={({ target }) =>\n            onChange(id, target.value === '' ? undefined : target.value)\n          }\n          ref={(node) => {\n            this.node = node;\n          }}\n          onBlur={({ target }) =>\n            onBlur(id, target.value === '' ? undefined : target.value)\n          }\n          onClick={() => onClick()}\n          minLength={minLength || null}\n          maxLength={maxLength || null}\n        />\n        {icon && iconAction && (\n          <button className={`field-${id}-action-button`} onClick={iconAction}>\n            <Icon name={icon} size=\"18px\" />\n          </button>\n        )}\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default injectIntl(TextWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}