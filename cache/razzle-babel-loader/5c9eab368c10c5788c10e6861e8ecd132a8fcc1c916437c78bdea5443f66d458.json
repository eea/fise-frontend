{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/AlignWidget.jsx\",\n  _this = this;\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport AlignBlock from '@plone/volto/components/manage/Sidebar/AlignBlock';\n\n/**\n * AlignWidget component.\n * To benefit from styling integration, use with a field named 'align'\n *\n * Example how this field would look in schema:\n *\n * ```jsx\n * {\n *  title: 'Align',\n *  description: 'Layout align',\n *  widget: 'align',\n * }\n * ```\n */\nvar AlignWidget = function AlignWidget(props) {\n  var id = props.id,\n    onChange = props.onChange,\n    value = props.value,\n    actions = props.actions;\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    className: \"align-widget\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }), __jsx(AlignBlock, {\n    align: value,\n    onChangeBlock: function onChangeBlock(block, _ref) {\n      var align = _ref.align;\n      return onChange(id, align);\n    },\n    data: {\n      align: value\n    },\n    block: id,\n    actions: actions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n};\n_c = AlignWidget;\nexport default AlignWidget;\nvar _c;\n$RefreshReg$(_c, \"AlignWidget\");","map":{"version":3,"names":["FormFieldWrapper","AlignBlock","AlignWidget","props","id","onChange","value","actions","block","align"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/AlignWidget.jsx"],"sourcesContent":["import { FormFieldWrapper } from '@plone/volto/components';\nimport AlignBlock from '@plone/volto/components/manage/Sidebar/AlignBlock';\n\n/**\n * AlignWidget component.\n * To benefit from styling integration, use with a field named 'align'\n *\n * Example how this field would look in schema:\n *\n * ```jsx\n * {\n *  title: 'Align',\n *  description: 'Layout align',\n *  widget: 'align',\n * }\n * ```\n */\nconst AlignWidget = (props) => {\n  const { id, onChange, value, actions } = props;\n  return (\n    <FormFieldWrapper {...props} className=\"align-widget\">\n      <AlignBlock\n        align={value}\n        onChangeBlock={(block, { align }) => onChange(id, align)}\n        data={{ align: value }}\n        block={id}\n        actions={actions}\n      />\n    </FormFieldWrapper>\n  );\n};\n\nexport default AlignWidget;\n"],"mappings":";;;;;AAAA,SAASA,gBAAgB,QAAQ,yBAAyB;AAC1D,OAAOC,UAAU,MAAM,mDAAmD;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,KAAK,EAAK;EAC7B,IAAQC,EAAE,GAA+BD,KAAK,CAAtCC,EAAE;IAAEC,QAAQ,GAAqBF,KAAK,CAAlCE,QAAQ;IAAEC,KAAK,GAAcH,KAAK,CAAxBG,KAAK;IAAEC,OAAO,GAAKJ,KAAK,CAAjBI,OAAO;EACpC,OACE,MAAC,gBAAgB,eAAKJ,KAAK;IAAE,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACnD,MAAC,UAAU;IACT,KAAK,EAAEG,KAAM;IACb,aAAa,EAAE,uBAACE,KAAK;MAAA,IAAIC,KAAK,QAALA,KAAK;MAAA,OAAOJ,QAAQ,CAACD,EAAE,EAAEK,KAAK,CAAC;IAAA,CAAC;IACzD,IAAI,EAAE;MAAEA,KAAK,EAAEH;IAAM,CAAE;IACvB,KAAK,EAAEF,EAAG;IACV,OAAO,EAAEG,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACjB,CACe;AAEvB,CAAC;AAAC,KAbIL,WAAW;AAejB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}