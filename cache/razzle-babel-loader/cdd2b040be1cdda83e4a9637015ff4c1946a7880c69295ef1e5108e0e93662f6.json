{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _isEqual from \"lodash/isEqual\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/HeroImageLeft/Edit.jsx\";\nvar __jsx = React.createElement;\n/**\n * Edit Hero block.\n * @module components/manage/Blocks/Image/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { Button, Dimmer, Loader, Message } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers';\nimport { createContent } from '@plone/volto/actions';\nimport { Icon, SidebarPortal, LinkMore } from '@plone/volto/components';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport Data from './Data';\nvar messages = defineMessages({\n  title: {\n    \"id\": \"Title\",\n    \"defaultMessage\": \"Title\"\n  },\n  description: {\n    \"id\": \"Description\",\n    \"defaultMessage\": \"Description\"\n  },\n  placeholder: {\n    \"id\": \"Upload a new image\",\n    \"defaultMessage\": \"Upload a new image\"\n  },\n  image: {\n    \"id\": \"Image\",\n    \"defaultMessage\": \"Image\"\n  },\n  browse: {\n    \"id\": \"Browse\",\n    \"defaultMessage\": \"Browse\"\n  },\n  uploading: {\n    \"id\": \"Uploading image\",\n    \"defaultMessage\": \"Uploading image\"\n  }\n});\n\n/**\n * Edit image block class.\n * @class Edit\n * @extends Component\n */\nvar EditComponent = /*#__PURE__*/function (_Component) {\n  _inherits(EditComponent, _Component);\n  var _super = _createSuper(EditComponent);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  function EditComponent(props) {\n    var _this;\n    _classCallCheck(this, EditComponent);\n    _this = _super.call(this, props);\n    _this.onUploadImage = _this.onUploadImage.bind(_assertThisInitialized(_this));\n    _this.state = {\n      uploading: false\n    };\n    var Map = _this.props.immutableLib.Map;\n    if (!__SERVER__) {\n      var _props$draftJs = props.draftJs,\n        DefaultDraftBlockRenderMap = _props$draftJs.DefaultDraftBlockRenderMap,\n        EditorState = _props$draftJs.EditorState;\n      var stateFromHTML = props.draftJsImportHtml.stateFromHTML;\n      var blockTitleRenderMap = Map({\n        unstyled: {\n          element: 'h1'\n        }\n      });\n      var blockDescriptionRenderMap = Map({\n        unstyled: {\n          element: 'div'\n        }\n      });\n      _this.extendedBlockRenderMap = DefaultDraftBlockRenderMap.merge(blockTitleRenderMap);\n      _this.extendedDescripBlockRenderMap = DefaultDraftBlockRenderMap.merge(blockDescriptionRenderMap);\n      var titleEditorState;\n      var descriptionEditorState;\n      if (props.data && props.data.title) {\n        titleEditorState = EditorState.createWithContent(stateFromHTML(props.data.title));\n      } else {\n        titleEditorState = EditorState.createEmpty();\n      }\n      if (props.data && props.data.description) {\n        descriptionEditorState = EditorState.createWithContent(stateFromHTML(props.data.description));\n      } else {\n        descriptionEditorState = EditorState.createEmpty();\n      }\n      _this.state = {\n        uploading: false,\n        titleEditorState: titleEditorState,\n        descriptionEditorState: descriptionEditorState,\n        currentFocused: 'title'\n      };\n    }\n    _this.onChangeTitle = _this.onChangeTitle.bind(_assertThisInitialized(_this));\n    _this.onChangeDescription = _this.onChangeDescription.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(EditComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.selected) {\n        this.titleEditor.focus();\n      }\n    }\n\n    /**\n     * Component will receive props\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Next properties\n     * @returns {undefined}\n     */\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.request.loading && nextProps.request.loaded && this.state.uploading) {\n        this.setState({\n          uploading: false\n        });\n        this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n          url: nextProps.content['@id']\n        }));\n      }\n      var EditorState = this.props.draftJs.EditorState;\n      var stateFromHTML = this.props.draftJsImportHtml.stateFromHTML;\n      if (nextProps.data.title && this.props.data.title !== nextProps.data.title && !this.props.selected) {\n        var contentState = stateFromHTML(nextProps.data.title);\n        this.setState({\n          titleEditorState: nextProps.data.title ? EditorState.createWithContent(contentState) : EditorState.createEmpty()\n        });\n      }\n      if (nextProps.data.description && this.props.data.description !== nextProps.data.description && !this.props.selected) {\n        var _contentState = stateFromHTML(nextProps.data.description);\n        this.setState({\n          descriptionEditorState: nextProps.data.description ? EditorState.createWithContent(_contentState) : EditorState.createEmpty()\n        });\n      }\n      if (nextProps.selected !== this.props.selected) {\n        if (this.state.currentFocused === 'title') {\n          this.titleEditor.focus();\n        } else {\n          this.descriptionEditor.focus();\n        }\n      }\n    }\n\n    /**\n     * @param {*} nextProps\n     * @param {*} nextState\n     * @returns {boolean}\n     * @memberof Edit\n     */\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.selected || !_isEqual(this.props.data, nextProps.data);\n    }\n\n    /**\n     * Change Title handler\n     * @method onChangeTitle\n     * @param {object} titleEditorState Editor state.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onChangeTitle\",\n    value: function onChangeTitle(titleEditorState) {\n      var _this2 = this;\n      this.setState({\n        titleEditorState: titleEditorState\n      }, function () {\n        _this2.props.onChangeBlock(_this2.props.block, _objectSpread(_objectSpread({}, _this2.props.data), {}, {\n          title: titleEditorState.getCurrentContent().getPlainText()\n        }));\n      });\n    }\n\n    /**\n     * Change Description handler\n     * @method onChangeDescription\n     * @param {object} descriptionEditorState Editor state.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onChangeDescription\",\n    value: function onChangeDescription(descriptionEditorState) {\n      var _this3 = this;\n      this.setState({\n        descriptionEditorState: descriptionEditorState\n      }, function () {\n        _this3.props.onChangeBlock(_this3.props.block, _objectSpread(_objectSpread({}, _this3.props.data), {}, {\n          description: descriptionEditorState.getCurrentContent().getPlainText()\n        }));\n      });\n    }\n\n    /**\n     * Upload image handler\n     * @method onUploadImage\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onUploadImage\",\n    value: function onUploadImage(_ref) {\n      var _this4 = this;\n      var target = _ref.target;\n      var file = target.files[0];\n      this.setState({\n        uploading: true\n      });\n      readAsDataURL(file).then(function (data) {\n        var fields = data.match(/^data:(.*);(.*),(.*)$/);\n        _this4.props.createContent(getBaseUrl(_this4.props.pathname), {\n          '@type': 'Image',\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file.name\n          }\n        }, _this4.props.block);\n      });\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n      if (__SERVER__) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 14\n          }\n        });\n      }\n      var Editor = this.props.draftJs.Editor;\n      var placeholder = this.props.data.placeholder || this.props.intl.formatMessage(messages.placeholder);\n      return __jsx(\"div\", {\n        className: cx('block hero', {\n          selected: this.props.selected\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 7\n        }\n      }, this.props.selected && this.props.editable && !!this.props.data.url && __jsx(\"div\", {\n        className: \"toolbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }\n      }, __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        icon: true,\n        basic: true,\n        onClick: function onClick() {\n          return _this5.props.onChangeBlock(_this5.props.block, _objectSpread(_objectSpread({}, _this5.props.data), {}, {\n            url: ''\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }\n      }, __jsx(Icon, {\n        name: clearSVG,\n        size: \"24px\",\n        color: \"#e40166\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 17\n        }\n      })))), __jsx(\"div\", {\n        className: \"block-inner-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 9\n        }\n      }, this.props.data.url ? __jsx(\"img\", {\n        className: \"hero-image\",\n        src: \"\".concat(flattenToAppURL(this.props.data.url), \"/@@images/image\"),\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }\n      }) : __jsx(\"div\", {\n        className: \"image-add\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }\n      }, __jsx(Message, {\n        className: \"image-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }\n      }, this.state.uploading && __jsx(Dimmer, {\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 19\n        }\n      }, __jsx(Loader, {\n        indeterminate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }\n      }, this.props.intl.formatMessage(messages.uploading))), __jsx(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 17\n        }\n      }, __jsx(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 19\n        }\n      }, this.props.intl.formatMessage(messages.image)), this.props.editable && __jsx(React.Fragment, null, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 23\n        }\n      }, placeholder), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 23\n        }\n      }, __jsx(\"label\", {\n        className: \"ui button file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 25\n        }\n      }, this.props.intl.formatMessage(messages.browse), __jsx(\"input\", {\n        type: \"file\",\n        onChange: this.onUploadImage,\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 27\n        }\n      }))))))), __jsx(\"div\", {\n        className: \"hero-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"hero-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }\n      }, __jsx(Editor, {\n        ref: function ref(node) {\n          _this5.titleEditor = node;\n        },\n        readOnly: !this.props.editable,\n        onChange: this.onChangeTitle,\n        editorState: this.state.titleEditorState,\n        blockRenderMap: this.extendedBlockRenderMap,\n        handleReturn: function handleReturn() {\n          return true;\n        },\n        placeholder: this.props.intl.formatMessage(messages.title),\n        blockStyleFn: function blockStyleFn() {\n          return 'title-editor';\n        },\n        onUpArrow: function onUpArrow() {\n          var selectionState = _this5.state.titleEditorState.getSelection();\n          var titleEditorState = _this5.state.titleEditorState;\n          if (titleEditorState.getCurrentContent().getBlockMap().first().getKey() === selectionState.getFocusKey()) {\n            _this5.props.onFocusPreviousBlock(_this5.props.block, _this5.props.blockNode.current);\n          }\n        },\n        onDownArrow: function onDownArrow() {\n          var selectionState = _this5.state.titleEditorState.getSelection();\n          var titleEditorState = _this5.state.titleEditorState;\n          if (titleEditorState.getCurrentContent().getBlockMap().last().getKey() === selectionState.getFocusKey()) {\n            _this5.setState(function () {\n              return {\n                currentFocused: 'description'\n              };\n            });\n            _this5.descriptionEditor.focus();\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 15\n        }\n      }), __jsx(Editor, {\n        ref: function ref(node) {\n          _this5.descriptionEditor = node;\n        },\n        readOnly: !this.props.editable,\n        onChange: this.onChangeDescription,\n        editorState: this.state.descriptionEditorState,\n        blockRenderMap: this.extendedDescripBlockRenderMap,\n        handleReturn: function handleReturn() {\n          return true;\n        },\n        placeholder: this.props.intl.formatMessage(messages.description),\n        blockStyleFn: function blockStyleFn() {\n          return 'description-editor';\n        },\n        onUpArrow: function onUpArrow() {\n          var selectionState = _this5.state.descriptionEditorState.getSelection();\n          var currentCursorPosition = selectionState.getStartOffset();\n          if (currentCursorPosition === 0) {\n            _this5.setState(function () {\n              return {\n                currentFocused: 'title'\n              };\n            });\n            _this5.titleEditor.focus();\n          }\n        },\n        onDownArrow: function onDownArrow() {\n          var selectionState = _this5.state.descriptionEditorState.getSelection();\n          var descriptionEditorState = _this5.state.descriptionEditorState;\n          var currentCursorPosition = selectionState.getStartOffset();\n          var blockLength = descriptionEditorState.getCurrentContent().getFirstBlock().getLength();\n          if (currentCursorPosition === blockLength) {\n            _this5.props.onFocusNextBlock(_this5.props.block, _this5.props.blockNode.current);\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 15\n        }\n      })), __jsx(LinkMore, {\n        data: this.props.data,\n        isEditMode: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }\n      }))), __jsx(SidebarPortal, {\n        selected: this.props.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 9\n        }\n      }, __jsx(Data, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n  return EditComponent;\n}(Component);\n_defineProperty(EditComponent, \"propTypes\", {\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  content: PropTypes.objectOf(PropTypes.any),\n  request: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  pathname: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  onSelectBlock: PropTypes.func.isRequired,\n  onDeleteBlock: PropTypes.func.isRequired,\n  onFocusPreviousBlock: PropTypes.func.isRequired,\n  onFocusNextBlock: PropTypes.func.isRequired,\n  handleKeyDown: PropTypes.func.isRequired,\n  createContent: PropTypes.func.isRequired,\n  editable: PropTypes.bool\n});\n_defineProperty(EditComponent, \"defaultProps\", {\n  editable: true\n});\nvar Edit = injectLazyLibs(['draftJs', 'immutableLib', 'draftJsImportHtml'])(EditComponent);\nexport default compose(injectIntl, connect(function (state, ownProps) {\n  var _state$content$subreq;\n  return {\n    request: state.content.subrequests[ownProps.block] || {},\n    content: (_state$content$subreq = state.content.subrequests[ownProps.block]) === null || _state$content$subreq === void 0 ? void 0 : _state$content$subreq.data\n  };\n}, {\n  createContent: createContent\n}))(Edit);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","readAsDataURL","Button","Dimmer","Loader","Message","defineMessages","injectIntl","cx","injectLazyLibs","flattenToAppURL","getBaseUrl","createContent","Icon","SidebarPortal","LinkMore","clearSVG","Data","messages","title","description","placeholder","image","browse","uploading","EditComponent","props","onUploadImage","bind","state","Map","immutableLib","__SERVER__","draftJs","DefaultDraftBlockRenderMap","EditorState","stateFromHTML","draftJsImportHtml","blockTitleRenderMap","unstyled","element","blockDescriptionRenderMap","extendedBlockRenderMap","merge","extendedDescripBlockRenderMap","titleEditorState","descriptionEditorState","data","createWithContent","createEmpty","currentFocused","onChangeTitle","onChangeDescription","selected","titleEditor","focus","nextProps","request","loading","loaded","setState","onChangeBlock","block","url","content","contentState","descriptionEditor","getCurrentContent","getPlainText","target","file","files","then","fields","match","pathname","encoding","filename","name","Editor","intl","formatMessage","editable","display","node","selectionState","getSelection","getBlockMap","first","getKey","getFocusKey","onFocusPreviousBlock","blockNode","current","last","currentCursorPosition","getStartOffset","blockLength","getFirstBlock","getLength","onFocusNextBlock","bool","isRequired","string","index","number","objectOf","any","shape","func","onSelectBlock","onDeleteBlock","handleKeyDown","Edit","ownProps","subrequests"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/HeroImageLeft/Edit.jsx"],"sourcesContent":["/**\n * Edit Hero block.\n * @module components/manage/Blocks/Image/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { Button, Dimmer, Loader, Message } from 'semantic-ui-react';\nimport { isEqual } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers';\nimport { createContent } from '@plone/volto/actions';\nimport { Icon, SidebarPortal, LinkMore } from '@plone/volto/components';\n\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport Data from './Data';\n\nconst messages = defineMessages({\n  title: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  description: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  placeholder: {\n    id: 'Upload a new image',\n    defaultMessage: 'Upload a new image',\n  },\n  image: {\n    id: 'Image',\n    defaultMessage: 'Image',\n  },\n  browse: {\n    id: 'Browse',\n    defaultMessage: 'Browse',\n  },\n  uploading: {\n    id: 'Uploading image',\n    defaultMessage: 'Uploading image',\n  },\n});\n\n/**\n * Edit image block class.\n * @class Edit\n * @extends Component\n */\nclass EditComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    content: PropTypes.objectOf(PropTypes.any),\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    onFocusPreviousBlock: PropTypes.func.isRequired,\n    onFocusNextBlock: PropTypes.func.isRequired,\n    handleKeyDown: PropTypes.func.isRequired,\n    createContent: PropTypes.func.isRequired,\n    editable: PropTypes.bool,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    editable: true,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n\n    this.onUploadImage = this.onUploadImage.bind(this);\n    this.state = {\n      uploading: false,\n    };\n\n    const { Map } = this.props.immutableLib;\n\n    if (!__SERVER__) {\n      const { DefaultDraftBlockRenderMap, EditorState } = props.draftJs;\n      const { stateFromHTML } = props.draftJsImportHtml;\n\n      const blockTitleRenderMap = Map({\n        unstyled: {\n          element: 'h1',\n        },\n      });\n\n      const blockDescriptionRenderMap = Map({\n        unstyled: {\n          element: 'div',\n        },\n      });\n\n      this.extendedBlockRenderMap = DefaultDraftBlockRenderMap.merge(\n        blockTitleRenderMap,\n      );\n\n      this.extendedDescripBlockRenderMap = DefaultDraftBlockRenderMap.merge(\n        blockDescriptionRenderMap,\n      );\n\n      let titleEditorState;\n      let descriptionEditorState;\n      if (props.data && props.data.title) {\n        titleEditorState = EditorState.createWithContent(\n          stateFromHTML(props.data.title),\n        );\n      } else {\n        titleEditorState = EditorState.createEmpty();\n      }\n      if (props.data && props.data.description) {\n        descriptionEditorState = EditorState.createWithContent(\n          stateFromHTML(props.data.description),\n        );\n      } else {\n        descriptionEditorState = EditorState.createEmpty();\n      }\n      this.state = {\n        uploading: false,\n        titleEditorState,\n        descriptionEditorState,\n        currentFocused: 'title',\n      };\n    }\n\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.selected) {\n      this.titleEditor.focus();\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.request.loading &&\n      nextProps.request.loaded &&\n      this.state.uploading\n    ) {\n      this.setState({\n        uploading: false,\n      });\n      this.props.onChangeBlock(this.props.block, {\n        ...this.props.data,\n        url: nextProps.content['@id'],\n      });\n    }\n\n    const { EditorState } = this.props.draftJs;\n    const { stateFromHTML } = this.props.draftJsImportHtml;\n\n    if (\n      nextProps.data.title &&\n      this.props.data.title !== nextProps.data.title &&\n      !this.props.selected\n    ) {\n      const contentState = stateFromHTML(nextProps.data.title);\n      this.setState({\n        titleEditorState: nextProps.data.title\n          ? EditorState.createWithContent(contentState)\n          : EditorState.createEmpty(),\n      });\n    }\n\n    if (\n      nextProps.data.description &&\n      this.props.data.description !== nextProps.data.description &&\n      !this.props.selected\n    ) {\n      const contentState = stateFromHTML(nextProps.data.description);\n      this.setState({\n        descriptionEditorState: nextProps.data.description\n          ? EditorState.createWithContent(contentState)\n          : EditorState.createEmpty(),\n      });\n    }\n\n    if (nextProps.selected !== this.props.selected) {\n      if (this.state.currentFocused === 'title') {\n        this.titleEditor.focus();\n      } else {\n        this.descriptionEditor.focus();\n      }\n    }\n  }\n\n  /**\n   * @param {*} nextProps\n   * @param {*} nextState\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selected || !isEqual(this.props.data, nextProps.data);\n  }\n\n  /**\n   * Change Title handler\n   * @method onChangeTitle\n   * @param {object} titleEditorState Editor state.\n   * @returns {undefined}\n   */\n  onChangeTitle(titleEditorState) {\n    this.setState({ titleEditorState }, () => {\n      this.props.onChangeBlock(this.props.block, {\n        ...this.props.data,\n        title: titleEditorState.getCurrentContent().getPlainText(),\n      });\n    });\n  }\n\n  /**\n   * Change Description handler\n   * @method onChangeDescription\n   * @param {object} descriptionEditorState Editor state.\n   * @returns {undefined}\n   */\n  onChangeDescription(descriptionEditorState) {\n    this.setState({ descriptionEditorState }, () => {\n      this.props.onChangeBlock(this.props.block, {\n        ...this.props.data,\n        description: descriptionEditorState.getCurrentContent().getPlainText(),\n      });\n    });\n  }\n\n  /**\n   * Upload image handler\n   * @method onUploadImage\n   * @returns {undefined}\n   */\n  onUploadImage({ target }) {\n    const file = target.files[0];\n    this.setState({\n      uploading: true,\n    });\n    readAsDataURL(file).then((data) => {\n      const fields = data.match(/^data:(.*);(.*),(.*)$/);\n      this.props.createContent(\n        getBaseUrl(this.props.pathname),\n        {\n          '@type': 'Image',\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file.name,\n          },\n        },\n        this.props.block,\n      );\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (__SERVER__) {\n      return <div />;\n    }\n    const { Editor } = this.props.draftJs;\n    const placeholder =\n      this.props.data.placeholder ||\n      this.props.intl.formatMessage(messages.placeholder);\n\n    return (\n      <div\n        className={cx('block hero', {\n          selected: this.props.selected,\n        })}\n      >\n        {this.props.selected && this.props.editable && !!this.props.data.url && (\n          <div className=\"toolbar\">\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={() =>\n                  this.props.onChangeBlock(this.props.block, {\n                    ...this.props.data,\n                    url: '',\n                  })\n                }\n              >\n                <Icon name={clearSVG} size=\"24px\" color=\"#e40166\" />\n              </Button>\n            </Button.Group>\n          </div>\n        )}\n        <div className=\"block-inner-wrapper\">\n          {this.props.data.url ? (\n            <img\n              className=\"hero-image\"\n              src={`${flattenToAppURL(this.props.data.url)}/@@images/image`}\n              alt=\"\"\n            />\n          ) : (\n            <div className=\"image-add\">\n              <Message className=\"image-message\">\n                {this.state.uploading && (\n                  <Dimmer active>\n                    <Loader indeterminate>\n                      {this.props.intl.formatMessage(messages.uploading)}\n                    </Loader>\n                  </Dimmer>\n                )}\n                <center>\n                  <h4>{this.props.intl.formatMessage(messages.image)}</h4>\n                  {this.props.editable && (\n                    <>\n                      <p>{placeholder}</p>\n                      <p>\n                        <label className=\"ui button file\">\n                          {this.props.intl.formatMessage(messages.browse)}\n                          <input\n                            type=\"file\"\n                            onChange={this.onUploadImage}\n                            style={{ display: 'none' }}\n                          />\n                        </label>\n                      </p>\n                    </>\n                  )}\n                </center>\n              </Message>\n            </div>\n          )}\n          <div className=\"hero-body\">\n            <div className=\"hero-text\">\n              <Editor\n                ref={(node) => {\n                  this.titleEditor = node;\n                }}\n                readOnly={!this.props.editable}\n                onChange={this.onChangeTitle}\n                editorState={this.state.titleEditorState}\n                blockRenderMap={this.extendedBlockRenderMap}\n                handleReturn={() => true}\n                placeholder={this.props.intl.formatMessage(messages.title)}\n                blockStyleFn={() => 'title-editor'}\n                onUpArrow={() => {\n                  const selectionState = this.state.titleEditorState.getSelection();\n                  const { titleEditorState } = this.state;\n                  if (\n                    titleEditorState\n                      .getCurrentContent()\n                      .getBlockMap()\n                      .first()\n                      .getKey() === selectionState.getFocusKey()\n                  ) {\n                    this.props.onFocusPreviousBlock(\n                      this.props.block,\n                      this.props.blockNode.current,\n                    );\n                  }\n                }}\n                onDownArrow={() => {\n                  const selectionState = this.state.titleEditorState.getSelection();\n                  const { titleEditorState } = this.state;\n                  if (\n                    titleEditorState\n                      .getCurrentContent()\n                      .getBlockMap()\n                      .last()\n                      .getKey() === selectionState.getFocusKey()\n                  ) {\n                    this.setState(() => ({ currentFocused: 'description' }));\n                    this.descriptionEditor.focus();\n                  }\n                }}\n              />\n              <Editor\n                ref={(node) => {\n                  this.descriptionEditor = node;\n                }}\n                readOnly={!this.props.editable}\n                onChange={this.onChangeDescription}\n                editorState={this.state.descriptionEditorState}\n                blockRenderMap={this.extendedDescripBlockRenderMap}\n                handleReturn={() => true}\n                placeholder={this.props.intl.formatMessage(\n                  messages.description,\n                )}\n                blockStyleFn={() => 'description-editor'}\n                onUpArrow={() => {\n                  const selectionState = this.state.descriptionEditorState.getSelection();\n                  const currentCursorPosition = selectionState.getStartOffset();\n\n                  if (currentCursorPosition === 0) {\n                    this.setState(() => ({ currentFocused: 'title' }));\n                    this.titleEditor.focus();\n                  }\n                }}\n                onDownArrow={() => {\n                  const selectionState = this.state.descriptionEditorState.getSelection();\n                  const { descriptionEditorState } = this.state;\n                  const currentCursorPosition = selectionState.getStartOffset();\n                  const blockLength = descriptionEditorState\n                    .getCurrentContent()\n                    .getFirstBlock()\n                    .getLength();\n\n                  if (currentCursorPosition === blockLength) {\n                    this.props.onFocusNextBlock(\n                      this.props.block,\n                      this.props.blockNode.current,\n                    );\n                  }\n                }}\n              />\n            </div>\n            <LinkMore data={this.props.data} isEditMode={true} />\n          </div>\n        </div>\n        <SidebarPortal selected={this.props.selected}>\n          <Data {...this.props} />\n        </SidebarPortal>\n      </div>\n    );\n  }\n}\n\nconst Edit = injectLazyLibs(['draftJs', 'immutableLib', 'draftJsImportHtml'])(\n  EditComponent,\n);\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, ownProps) => ({\n      request: state.content.subrequests[ownProps.block] || {},\n      content: state.content.subrequests[ownProps.block]?.data,\n    }),\n    { createContent },\n  ),\n)(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Title","defaultMessage":"Title"},{"id":"Description","defaultMessage":"Description"},{"id":"Upload a new image","defaultMessage":"Upload a new image"},{"id":"Image","defaultMessage":"Image"},{"id":"Browse","defaultMessage":"Browse"},{"id":"Uploading image","defaultMessage":"Uploading image"}]}},"sourceType":"module","externalDependencies":[]}