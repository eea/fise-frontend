{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport columnSVG from './ColumnsBlock/icons/three-columns.svg';\nimport { ColumnsBlockView, ColumnsBlockEdit, ColumnsLayoutSchema } from './ColumnsBlock';\nimport { ColumnsWidget, LayoutSelectWidget, SliderWidget, QuadSizeWidget } from './Widgets';\nimport ColorPickerWidget from './Widgets/SimpleColorPickerWidget.jsx';\nimport { gridSizes, variants } from './grid';\nimport { COLUMNSBLOCK } from './constants';\nimport { cloneColumnsBlockData } from './utils';\nimport { getBlocks } from '@plone/volto/helpers';\nconst extendedSchema = config => {\n  const choices = Object.keys(config.blocks.blocksConfig).map(key => {\n    var _config$blocks$blocks;\n    if ((_config$blocks$blocks = config.blocks.blocksConfig[key]) !== null && _config$blocks$blocks !== void 0 && _config$blocks$blocks.restricted) {\n      return false;\n    } else {\n      var _config$blocks$blocks2;\n      const title = ((_config$blocks$blocks2 = config.blocks.blocksConfig[key]) === null || _config$blocks$blocks2 === void 0 ? void 0 : _config$blocks$blocks2.title) || key;\n      return [key, title];\n    }\n  }).filter(val => !!val);\n  choices.push(['accordion', 'Accordion']);\n  return _objectSpread(_objectSpread({}, ColumnsLayoutSchema), {}, {\n    properties: _objectSpread(_objectSpread({}, ColumnsLayoutSchema.properties), {}, {\n      allowedBlocks: _objectSpread(_objectSpread({}, ColumnsLayoutSchema.properties.allowedBlocks), {}, {\n        items: {\n          choices: choices\n        }\n      })\n    })\n  });\n};\nexport default function install(config) {\n  config.blocks.blocksConfig[COLUMNSBLOCK] = {\n    id: 'columnsBlock',\n    title: 'Columns',\n    icon: columnSVG,\n    group: 'common',\n    view: ColumnsBlockView,\n    edit: ColumnsBlockEdit,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    schema: extendedSchema(config),\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: []\n    },\n    gridSizes,\n    variants,\n    available_colors: [\n    // '#B80000',\n    // '#DB3E00',\n    // '#FCCB00',\n    // '#008B02',\n    // '#006B76',\n    // '#1273DE',\n    // '#004DCF',\n    // '#5300EB',\n    '#EFEFEF', '#EB9694', '#FAD0C3', '#FEF3BD', '#C1E1C5', '#BEDADC', '#C4DEF6', '#BED3F3', '#D4C4FB'],\n    tocEntry: (block = {}, tocData) => {\n      // integration with volto-block-toc\n      const headlines = tocData.levels || ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n      // const column_blocks = block?.data?.blocks || {};\n      let entries = [];\n      const sorted_column_blocks = getBlocks((block === null || block === void 0 ? void 0 : block.data) || {});\n      sorted_column_blocks.forEach(column_block => {\n        const sorted_blocks = getBlocks(column_block[1]);\n        sorted_blocks.forEach(block => {\n          var _value$;\n          const {\n            value,\n            plaintext\n          } = block[1];\n          const type = value === null || value === void 0 ? void 0 : (_value$ = value[0]) === null || _value$ === void 0 ? void 0 : _value$.type;\n          if (headlines.includes(type)) {\n            entries.push([parseInt(type.slice(1)), plaintext, block[0]]);\n          }\n        });\n      });\n      return entries;\n    },\n    cloneData: cloneColumnsBlockData\n  };\n  config.widgets.type.columns = ColumnsWidget;\n  config.widgets.widget.simple_color_picker = ColorPickerWidget;\n  config.widgets.widget.layout_select = LayoutSelectWidget;\n  config.widgets.widget.slider = SliderWidget;\n  config.widgets.widget.quad_size = QuadSizeWidget;\n  return config;\n}","map":{"version":3,"names":["columnSVG","ColumnsBlockView","ColumnsBlockEdit","ColumnsLayoutSchema","ColumnsWidget","LayoutSelectWidget","SliderWidget","QuadSizeWidget","ColorPickerWidget","gridSizes","variants","COLUMNSBLOCK","cloneColumnsBlockData","getBlocks","extendedSchema","config","choices","Object","keys","blocks","blocksConfig","map","key","restricted","title","filter","val","push","properties","allowedBlocks","items","install","id","icon","group","view","edit","mostUsed","blockHasOwnFocusManagement","schema","sidebarTab","security","addPermission","available_colors","tocEntry","block","tocData","headlines","levels","entries","sorted_column_blocks","data","forEach","column_block","sorted_blocks","value","plaintext","type","includes","parseInt","slice","cloneData","widgets","columns","widget","simple_color_picker","layout_select","slider","quad_size"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-columns-block/src/index.js"],"sourcesContent":["import columnSVG from './ColumnsBlock/icons/three-columns.svg';\n\nimport {\n  ColumnsBlockView,\n  ColumnsBlockEdit,\n  ColumnsLayoutSchema,\n} from './ColumnsBlock';\nimport {\n  ColumnsWidget,\n  LayoutSelectWidget,\n  SliderWidget,\n  QuadSizeWidget,\n} from './Widgets';\nimport ColorPickerWidget from './Widgets/SimpleColorPickerWidget.jsx';\nimport { gridSizes, variants } from './grid';\nimport { COLUMNSBLOCK } from './constants';\nimport { cloneColumnsBlockData } from './utils';\n\nimport { getBlocks } from '@plone/volto/helpers';\n\nconst extendedSchema = (config) => {\n  const choices = Object.keys(config.blocks.blocksConfig)\n    .map((key) => {\n      if (config.blocks.blocksConfig[key]?.restricted) {\n        return false;\n      } else {\n        const title = config.blocks.blocksConfig[key]?.title || key;\n        return [key, title];\n      }\n    })\n    .filter((val) => !!val);\n\n  choices.push(['accordion', 'Accordion']);\n\n  return {\n    ...ColumnsLayoutSchema,\n    properties: {\n      ...ColumnsLayoutSchema.properties,\n      allowedBlocks: {\n        ...ColumnsLayoutSchema.properties.allowedBlocks,\n        items: {\n          choices: choices,\n        },\n      },\n    },\n  };\n};\n\nexport default function install(config) {\n  config.blocks.blocksConfig[COLUMNSBLOCK] = {\n    id: 'columnsBlock',\n    title: 'Columns',\n    icon: columnSVG,\n    group: 'common',\n    view: ColumnsBlockView,\n    edit: ColumnsBlockEdit,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    schema: extendedSchema(config),\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n    gridSizes,\n    variants,\n    available_colors: [\n      // '#B80000',\n      // '#DB3E00',\n      // '#FCCB00',\n      // '#008B02',\n      // '#006B76',\n      // '#1273DE',\n      // '#004DCF',\n      // '#5300EB',\n      '#EFEFEF',\n      '#EB9694',\n      '#FAD0C3',\n      '#FEF3BD',\n      '#C1E1C5',\n      '#BEDADC',\n      '#C4DEF6',\n      '#BED3F3',\n      '#D4C4FB',\n    ],\n    tocEntry: (block = {}, tocData) => {\n      // integration with volto-block-toc\n      const headlines = tocData.levels || ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n      // const column_blocks = block?.data?.blocks || {};\n      let entries = [];\n      const sorted_column_blocks = getBlocks(block?.data || {});\n      sorted_column_blocks.forEach((column_block) => {\n        const sorted_blocks = getBlocks(column_block[1]);\n        sorted_blocks.forEach((block) => {\n          const { value, plaintext } = block[1];\n          const type = value?.[0]?.type;\n          if (headlines.includes(type)) {\n            entries.push([parseInt(type.slice(1)), plaintext, block[0]]);\n          }\n        });\n      });\n      return entries;\n    },\n    cloneData: cloneColumnsBlockData,\n  };\n\n  config.widgets.type.columns = ColumnsWidget;\n  config.widgets.widget.simple_color_picker = ColorPickerWidget;\n  config.widgets.widget.layout_select = LayoutSelectWidget;\n  config.widgets.widget.slider = SliderWidget;\n  config.widgets.widget.quad_size = QuadSizeWidget;\n\n  return config;\n}\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}