{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/components/theme/SiteMap/SiteMap.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { asyncConnect } from 'redux-connect';\nimport { Link } from 'react-router-dom';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { getNavSiteMap } from '@eeacms/volto-forests-theme/actions';\n\n/**\n * @export\n * @class SiteMap\n * @extends {Component}\n */\nvar SiteMap = /*#__PURE__*/function (_Component) {\n  _inherits(SiteMap, _Component);\n  var _super = _createSuper(SiteMap);\n  function SiteMap() {\n    _classCallCheck(this, SiteMap);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SiteMap, [{\n    key: \"componentDidMount\",\n    value:\n    /**\n     * Property types.\n     * @property {Object} propTypes Property types.\n     * @static\n     */\n\n    function componentDidMount() {\n      this.props.getNavSiteMap(getBaseUrl(this.props.location.pathname), 100);\n    }\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      var navigation = this.props.navigation;\n      var TreeMap = function TreeMap(_ref) {\n        var data = _ref.data;\n        return __jsx(\"ul\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }\n        }, data.map(function (m, i) {\n          return __jsx(\"li\", {\n            key: i,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }\n          }, __jsx(Link, {\n            to: \"/\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }\n          }, m.title), m.items && !!m.items.length && __jsx(TreeMap, {\n            data: m.items,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 49\n            }\n          }));\n        }));\n      };\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, __jsx(TreeMap, {\n        data: navigation.items,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return SiteMap;\n}(Component);\n_defineProperty(SiteMap, \"propTypes\", {\n  pathname: PropTypes.string.isRequired,\n  getNavSiteMap: PropTypes.func.isRequired\n});\nexport var __test__ = connect(function (state, props) {\n  return {\n    pathname: props.location.pathname,\n    content: state.content.data\n  };\n}, {})(SiteMap);\nexport default compose(asyncConnect([{\n  key: 'navigation',\n  promise: function promise(_ref2) {\n    var location = _ref2.location,\n      dispatch = _ref2.store.dispatch;\n    return dispatch(getNavSiteMap(getBaseUrl(location.pathname), 100));\n  }\n}]), connect(function (state, props) {\n  return {\n    pathname: props.location.pathname\n  };\n}, {\n  getNavSiteMap: getNavSiteMap\n}))(SiteMap);","map":{"version":3,"names":["React","Component","Fragment","PropTypes","connect","compose","asyncConnect","Link","getBaseUrl","getNavSiteMap","SiteMap","props","location","pathname","navigation","TreeMap","data","map","m","i","title","items","length","string","isRequired","func","__test__","state","content","key","promise","dispatch","store"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/components/theme/SiteMap/SiteMap.jsx"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { asyncConnect } from 'redux-connect';\nimport { Link } from 'react-router-dom';\n\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { getNavSiteMap } from '@eeacms/volto-forests-theme/actions';\n\n/**\n * @export\n * @class SiteMap\n * @extends {Component}\n */\nclass SiteMap extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    pathname: PropTypes.string.isRequired,\n    getNavSiteMap: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.getNavSiteMap(getBaseUrl(this.props.location.pathname), 100);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { navigation } = this.props;\n\n    const TreeMap = ({ data }) => {\n      return (\n        <ul>\n          {data.map((m, i) => {\n            return (\n              <li key={i}>\n                <Link to=\"/\">{m.title}</Link>\n                {m.items && !!m.items.length && <TreeMap data={m.items} />}\n              </li>\n            );\n          })}\n        </ul>\n      );\n    };\n\n    return (\n      <Fragment>\n        <TreeMap data={navigation.items} />\n      </Fragment>\n    );\n  }\n}\n\nexport const __test__ = connect(\n  (state, props) => ({\n    pathname: props.location.pathname,\n    content: state.content.data,\n  }),\n  {},\n)(SiteMap);\n\nexport default compose(\n  asyncConnect([\n    {\n      key: 'navigation',\n      promise: ({ location, store: { dispatch } }) =>\n        dispatch(getNavSiteMap(getBaseUrl(location.pathname), 100)),\n    },\n  ]),\n  connect((state, props) => ({ pathname: props.location.pathname }), {\n    getNavSiteMap,\n  }),\n)(SiteMap);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}