{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _map from \"lodash/map\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Aliases.jsx\";\nvar __jsx = React.createElement;\n/**\n * Moderate comments component.\n * @module components/manage/Controlpanels/Aliases\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getBaseUrl, getParentUrl, Helmet } from '@plone/volto/helpers';\nimport { removeAliases, addAliases, getAliases } from '@plone/volto/actions';\nimport { Portal } from 'react-portal';\nimport { Container, Button, Segment, Form, Checkbox, Header, Input, Radio, Message, Table, Pagination, Menu } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport DatetimeWidget from '@plone/volto/components/manage/Widgets/DatetimeWidget';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nvar messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  aliases: {\n    \"id\": \"URL Management\",\n    \"defaultMessage\": \"URL Management\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  successAdd: {\n    \"id\": \"Alias has been added\",\n    \"defaultMessage\": \"Alias has been added\"\n  }\n});\nvar filterChoices = [{\n  label: 'Both',\n  value: ''\n}, {\n  label: 'Automatically',\n  value: 'no'\n}, {\n  label: 'Manually',\n  value: 'yes'\n}];\nvar itemsPerPageChoices = [10, 25, 50, 'All'];\n\n/**\n * Aliases class.\n * @class Aliases\n * @extends Component\n */\nvar Aliases = /*#__PURE__*/function (_Component) {\n  _inherits(Aliases, _Component);\n  var _super = _createSuper(Aliases);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Aliases\n   */\n  function Aliases(props) {\n    var _this;\n    _classCallCheck(this, Aliases);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"handleRemoveAliases\", function () {\n      var items = _this.state.aliasesToRemove.map(function (a) {\n        return {\n          path: a\n        };\n      });\n      _this.props.removeAliases('', {\n        items: items\n      });\n      _this.setState({\n        aliasesToRemove: []\n      });\n    });\n    _this.state = {\n      isClient: false,\n      filterType: filterChoices[0],\n      createdBefore: null,\n      altUrlPath: '',\n      isAltUrlCorrect: false,\n      targetUrlPath: '',\n      isTargetUrlCorrect: false,\n      aliasesToRemove: [],\n      errorMessageAdd: '',\n      filterQuery: '',\n      aliases: [],\n      activePage: 1,\n      pages: '',\n      itemsPerPage: 10\n    };\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(Aliases, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$state = this.state,\n        filterQuery = _this$state.filterQuery,\n        filterType = _this$state.filterType,\n        createdBefore = _this$state.createdBefore,\n        itemsPerPage = _this$state.itemsPerPage;\n      this.setState({\n        isClient: true\n      });\n      this.props.getAliases(getBaseUrl(this.props.pathname), {\n        query: filterQuery,\n        manual: filterType.value,\n        datetime: createdBefore,\n        batchSize: itemsPerPage\n      });\n    }\n\n    /**\n     * Component did mount\n     * @method componentDidUpdate\n     * @returns {undefined}\n     */\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$state2 = this.state,\n        filterQuery = _this$state2.filterQuery,\n        filterType = _this$state2.filterType,\n        createdBefore = _this$state2.createdBefore,\n        itemsPerPage = _this$state2.itemsPerPage;\n      if (prevProps.aliases.items_total !== this.props.aliases.items_total || prevState.itemsPerPage !== this.state.itemsPerPage) {\n        var pages = Math.ceil(this.props.aliases.items_total / this.state.itemsPerPage);\n        if (pages === 0 || isNaN(pages)) {\n          this.setState({\n            pages: ''\n          });\n        } else {\n          this.setState({\n            pages: pages\n          });\n        }\n      }\n      if (prevState.activePage !== this.state.activePage || prevState.itemsPerPage !== this.state.itemsPerPage) {\n        this.props.getAliases(getBaseUrl(this.props.pathname), {\n          query: filterQuery,\n          manual: filterType.value,\n          datetime: createdBefore,\n          batchSize: itemsPerPage === 'All' ? 999999999999 : itemsPerPage,\n          batchStart: (this.state.activePage - 1) * this.state.itemsPerPage\n        });\n      }\n      if (prevState.altUrlPath !== this.state.altUrlPath) {\n        if (this.state.altUrlPath.charAt(0) === '/') {\n          this.setState({\n            isAltUrlCorrect: true\n          });\n        } else {\n          this.setState({\n            isAltUrlCorrect: false\n          });\n        }\n      }\n      if (prevState.targetUrlPath !== this.state.targetUrlPath) {\n        if (this.state.targetUrlPath.charAt(0) === '/') {\n          this.setState({\n            isTargetUrlCorrect: true\n          });\n        } else {\n          this.setState({\n            isTargetUrlCorrect: false\n          });\n        }\n      }\n    }\n\n    /**\n     * Component will receive props\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Next properties\n     * @returns {undefined}\n     */\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.aliases.add.loading && !nextProps.aliases.add.loaded) {\n        if (nextProps.aliases.add.error) {\n          this.setState({\n            errorMessageAdd: nextProps.aliases.add.error.response.body.message\n          });\n        }\n      }\n      if (this.props.aliases.add.loading && nextProps.aliases.add.loaded) {\n        var _this$state3 = this.state,\n          filterQuery = _this$state3.filterQuery,\n          filterType = _this$state3.filterType,\n          createdBefore = _this$state3.createdBefore,\n          itemsPerPage = _this$state3.itemsPerPage;\n        this.props.getAliases(getBaseUrl(this.props.pathname), {\n          query: filterQuery,\n          manual: filterType.value,\n          datetime: createdBefore,\n          batchSize: itemsPerPage\n        });\n        toast.success(__jsx(Toast, {\n          success: true,\n          title: this.props.intl.formatMessage(messages.success),\n          content: this.props.intl.formatMessage(messages.successAdd),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 9\n          }\n        }));\n        if (!nextProps.aliases.add.error) {\n          this.setState({\n            errorMessageAdd: ''\n          });\n        }\n      }\n      if (this.props.aliases.remove.loading && nextProps.aliases.remove.loaded) {\n        var _this$state4 = this.state,\n          _filterQuery = _this$state4.filterQuery,\n          _filterType = _this$state4.filterType,\n          _createdBefore = _this$state4.createdBefore,\n          _itemsPerPage = _this$state4.itemsPerPage;\n        this.props.getAliases(getBaseUrl(this.props.pathname), {\n          query: _filterQuery,\n          manual: _filterType.value,\n          datetime: _createdBefore,\n          batchSize: _itemsPerPage\n        });\n      }\n    }\n\n    /**\n     * Back/Cancel handler\n     * @method onCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.props.history.push(getParentUrl(this.props.pathname));\n    }\n\n    /**\n     * Select filter type handler\n     * @method handleSelectFilterType\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleSelectFilterType\",\n    value: function handleSelectFilterType(type) {\n      this.setState({\n        filterType: type\n      });\n    }\n\n    /**\n     * Select filter type handler\n     * @method handleFilterQueryChange\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleFilterQueryChange\",\n    value: function handleFilterQueryChange(query) {\n      this.setState({\n        filterQuery: query\n      });\n    }\n\n    /**\n     * Select Creation date handler\n     * @method handleCreateDate\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleCreateDate\",\n    value: function handleCreateDate(date) {\n      this.setState({\n        createdBefore: date\n      });\n    }\n\n    /**\n     * Select Creation date handler\n     * @method handleSubmitFilter\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleSubmitFilter\",\n    value: function handleSubmitFilter() {\n      var _this$state5 = this.state,\n        filterQuery = _this$state5.filterQuery,\n        filterType = _this$state5.filterType,\n        createdBefore = _this$state5.createdBefore,\n        itemsPerPage = _this$state5.itemsPerPage;\n      this.props.getAliases(getBaseUrl(this.props.pathname), {\n        query: filterQuery,\n        manual: filterType.value,\n        datetime: createdBefore,\n        batchSize: itemsPerPage\n      });\n    }\n\n    /**\n     * Alternative url handler\n     * @method handleAltUrlChange\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleAltUrlChange\",\n    value: function handleAltUrlChange(url) {\n      this.setState({\n        altUrlPath: url\n      });\n    }\n\n    /**\n     * Target url handler\n     * @method handleTargetUrlChange\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleTargetUrlChange\",\n    value: function handleTargetUrlChange(url) {\n      this.setState({\n        targetUrlPath: url\n      });\n    }\n\n    /**\n     * New alias submit handler\n     * @method handleSubmitAlias\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleSubmitAlias\",\n    value: function handleSubmitAlias() {\n      if (this.state.isAltUrlCorrect && this.state.isTargetUrlCorrect) {\n        this.props.addAliases('', {\n          items: [{\n            path: this.state.altUrlPath,\n            'redirect-to': this.state.targetUrlPath\n          }]\n        });\n        this.setState({\n          altUrlPath: '',\n          targetUrlPath: ''\n        });\n      }\n    }\n\n    /**\n     * Check to-remove aliases handler\n     * @method handleSubmitAlias\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleCheckAlias\",\n    value: function handleCheckAlias(alias) {\n      var aliases = this.state.aliasesToRemove;\n      if (aliases.includes(alias)) {\n        var index = aliases.indexOf(alias);\n        if (index > -1) {\n          var newAliasesArr = aliases;\n          newAliasesArr.splice(index, 1);\n          this.setState({\n            aliasesToRemove: newAliasesArr\n          });\n        }\n      } else {\n        this.setState({\n          aliasesToRemove: [].concat(_toConsumableArray(this.state.aliasesToRemove), [alias])\n        });\n      }\n    }\n\n    /**\n     * Remove aliases handler\n     * @method handleRemoveAliases\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handlePageChange\",\n    value:\n    /**\n     * Pagination change handler\n     * @method handlePageChange\n     * @returns {undefined}\n     */\n    function handlePageChange(e, _ref) {\n      var activePage = _ref.activePage;\n      this.setState({\n        activePage: activePage\n      });\n    }\n\n    /**\n     * Items per page change handler\n     * @method handleItemsPerPage\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleItemsPerPage\",\n    value: function handleItemsPerPage(e, _ref2) {\n      var value = _ref2.value;\n      this.setState({\n        itemsPerPage: value,\n        activePage: 1\n      });\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return __jsx(\"div\", {\n        id: \"page-aliases\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 7\n        }\n      }, __jsx(Helmet, {\n        title: this.props.intl.formatMessage(messages.aliases),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 9\n        }\n      }), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 9\n        }\n      }, __jsx(\"article\", {\n        id: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }\n      }, __jsx(Segment.Group, {\n        raised: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }\n      }, __jsx(Segment, {\n        className: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 15\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"URL Management\",\n        defaultMessage: \"URL Management\",\n        values: {\n          title: __jsx(\"q\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 36\n            }\n          }, this.props.title)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 17\n        }\n      })), __jsx(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 15\n        }\n      }, __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 17\n        }\n      }, __jsx(Header, {\n        size: \"medium\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Alternative url path (Required)\",\n        defaultMessage: \"Alternative url path (Required)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }\n      })), __jsx(\"p\", {\n        className: \"help\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Enter the absolute path where the alternative url should exist. The path must start with '/'. Only urls that result in a 404 not found page will result in a redirect occurring.\",\n        defaultMessage: \"Enter the absolute path where the alternative url should exist. The path must start with '/'. Only urls that result in a 404 not found page will result in a redirect occurring.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }\n      })), __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 19\n        }\n      }, __jsx(Input, {\n        id: \"alternative-url-input\",\n        name: \"alternative-url-path\",\n        placeholder: \"/example\",\n        value: this.state.altUrlPath,\n        onChange: function onChange(e) {\n          return _this2.handleAltUrlChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 21\n        }\n      }), !this.state.isAltUrlCorrect && this.state.altUrlPath !== '' && __jsx(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 25\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Alternative url path must start with a slash.\",\n        defaultMessage: \"Alternative url path must start with a slash.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 27\n        }\n      }))), __jsx(Header, {\n        size: \"medium\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Target Path (Required)\",\n        defaultMessage: \"Target Path (Required)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 21\n        }\n      })), __jsx(\"p\", {\n        className: \"help\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Enter the absolute path of the target. The path must start with '/'. Target must exist or be an existing alternative url path to the target.\",\n        defaultMessage: \"Enter the absolute path of the target. The path must start with '/'. Target must exist or be an existing alternative url path to the target.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 21\n        }\n      })), __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 19\n        }\n      }, __jsx(Input, {\n        id: \"target-url-input\",\n        name: \"target-url-path\",\n        placeholder: \"/example\",\n        value: this.state.targetUrlPath,\n        onChange: function onChange(e) {\n          return _this2.handleTargetUrlChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 21\n        }\n      }), !this.state.isTargetUrlCorrect && this.state.targetUrlPath !== '' && __jsx(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 25\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Target url path must start with a slash.\",\n        defaultMessage: \"Target url path must start with a slash.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 27\n        }\n      }))), __jsx(Button, {\n        id: \"submit-alias\",\n        primary: true,\n        onClick: function onClick() {\n          return _this2.handleSubmitAlias();\n        },\n        disabled: !this.state.isAltUrlCorrect || !this.state.isTargetUrlCorrect || this.state.altUrlPath === '' || this.state.targetUrlPath === '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Add\",\n        defaultMessage: \"Add\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 21\n        }\n      })), this.state.errorMessageAdd && __jsx(Message, {\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 21\n        }\n      }, __jsx(Message.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 23\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"ErrorHeader\",\n        defaultMessage: \"Error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 25\n        }\n      })), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 23\n        }\n      }, this.state.errorMessageAdd)))), __jsx(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 15\n        }\n      }, __jsx(Segment, {\n        className: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 17\n        }\n      }, __jsx(Header, {\n        size: \"medium\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"All existing alternative urls for this site\",\n        defaultMessage: \"All existing alternative urls for this site\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 21\n        }\n      })), __jsx(Header, {\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Filter by prefix\",\n        defaultMessage: \"Filter by prefix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }\n      })), __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 19\n        }\n      }, __jsx(Input, {\n        name: \"filter\",\n        placeholder: \"/example\",\n        value: this.state.filterQuery,\n        onChange: function onChange(e) {\n          return _this2.handleFilterQueryChange(e.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 21\n        }\n      })), __jsx(Header, {\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Manually or automatically added?\",\n        defaultMessage: \"Manually or automatically added?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 21\n        }\n      })), filterChoices.map(function (o, i) {\n        return __jsx(Form.Field, {\n          key: i,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 21\n          }\n        }, __jsx(Radio, {\n          label: o.label,\n          name: \"radioGroup\",\n          value: o.value,\n          checked: _this2.state.filterType === o,\n          onChange: function onChange() {\n            return _this2.handleSelectFilterType(o);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 23\n          }\n        }));\n      }), __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 19\n        }\n      }, __jsx(DatetimeWidget, {\n        id: \"created-before-date\",\n        title: 'Created before',\n        dateOnly: true,\n        value: this.state.createdBefore,\n        onChange: function onChange(id, value) {\n          _this2.handleCreateDate(value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 21\n        }\n      })), __jsx(Button, {\n        onClick: function onClick() {\n          return _this2.handleSubmitFilter();\n        },\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 19\n        }\n      }, \"Filter\"), __jsx(Header, {\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Alternative url path \\u2192 target url path (date and time of creation, manually created yes/no)\",\n        defaultMessage: \"Alternative url path \\u2192 target url path (date and time of creation, manually created yes/no)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 21\n        }\n      })), __jsx(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 19\n        }\n      }, __jsx(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 21\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 23\n        }\n      }, __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 25\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Select\",\n        defaultMessage: \"Select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 27\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 25\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Alias\",\n        defaultMessage: \"Alias\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 27\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 25\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Target\",\n        defaultMessage: \"Target\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 27\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 25\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Date\",\n        defaultMessage: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 27\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 25\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Manual\",\n        defaultMessage: \"Manual\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 27\n        }\n      }))), this.props.aliases.items.length > 0 && this.props.aliases.items.map(function (alias, i) {\n        return __jsx(Table.Row, {\n          key: i,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 27\n          }\n        }, __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 29\n          }\n        }, __jsx(Checkbox, {\n          onChange: function onChange(e, _ref3) {\n            var value = _ref3.value;\n            return _this2.handleCheckAlias(value);\n          },\n          checked: _this2.state.aliasesToRemove.includes(alias.path),\n          value: alias.path,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 31\n          }\n        })), __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 29\n          }\n        }, __jsx(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 31\n          }\n        }, alias.path)), __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 29\n          }\n        }, __jsx(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 31\n          }\n        }, alias['redirect-to'])), __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 29\n          }\n        }, __jsx(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 31\n          }\n        }, alias.datetime)), __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 29\n          }\n        }, __jsx(\"p\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 31\n          }\n        }, \"\".concat(alias.manual))));\n      }))), __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          alignItems: 'center',\n          marginBottom: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 19\n        }\n      }, this.state.pages && __jsx(Pagination, {\n        boundaryRange: 0,\n        activePage: this.state.activePage,\n        ellipsisItem: null,\n        firstItem: null,\n        lastItem: null,\n        siblingRange: 1,\n        totalPages: this.state.pages,\n        onPageChange: function onPageChange(e, o) {\n          return _this2.handlePageChange(e, o);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 23\n        }\n      }), __jsx(Menu.Menu, {\n        position: \"right\",\n        style: {\n          display: 'flex',\n          marginLeft: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 21\n        }\n      }, __jsx(Menu.Item, {\n        style: {\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 23\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Show\",\n        defaultMessage: \"Show\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 25\n        }\n      }), \":\"), _map(itemsPerPageChoices, function (size) {\n        return __jsx(Menu.Item, {\n          style: {\n            padding: '0 0.4em',\n            margin: '0em 0.357em',\n            cursor: 'pointer'\n          },\n          key: size,\n          value: size,\n          active: size === _this2.state.itemsPerPage,\n          onClick: function onClick(e, o) {\n            return _this2.handleItemsPerPage(e, o);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 25\n          }\n        }, size);\n      }))), __jsx(Button, {\n        disabled: this.state.aliasesToRemove.length === 0,\n        onClick: this.handleRemoveAliases,\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Remove selected\",\n        defaultMessage: \"Remove selected\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 21\n        }\n      }))))))), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(Link, {\n          className: \"item\",\n          to: \"#\",\n          onClick: function onClick() {\n            return _this2.onCancel();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 17\n          }\n        }, __jsx(Icon, {\n          name: backSVG,\n          className: \"contents circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.back),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 19\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return Aliases;\n}(Component);\n_defineProperty(Aliases, \"propTypes\", {\n  addAliases: PropTypes.func.isRequired,\n  getAliases: PropTypes.func.isRequired,\n  removeAliases: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect(function (state, props) {\n  return {\n    aliases: state.aliases,\n    pathname: props.location.pathname\n  };\n}, {\n  addAliases: addAliases,\n  getAliases: getAliases,\n  removeAliases: removeAliases\n}))(Aliases);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","getBaseUrl","getParentUrl","Helmet","removeAliases","addAliases","getAliases","Portal","Container","Button","Segment","Form","Checkbox","Header","Input","Radio","Message","Table","Pagination","Menu","FormattedMessage","defineMessages","injectIntl","DatetimeWidget","Icon","Toolbar","backSVG","toast","Toast","messages","back","aliases","success","successAdd","filterChoices","label","value","itemsPerPageChoices","Aliases","props","items","state","aliasesToRemove","map","a","path","setState","isClient","filterType","createdBefore","altUrlPath","isAltUrlCorrect","targetUrlPath","isTargetUrlCorrect","errorMessageAdd","filterQuery","activePage","pages","itemsPerPage","pathname","query","manual","datetime","batchSize","prevProps","prevState","items_total","Math","ceil","isNaN","batchStart","charAt","nextProps","add","loading","loaded","error","response","body","message","intl","formatMessage","remove","history","push","type","date","url","alias","includes","index","indexOf","newAliasesArr","splice","e","title","handleAltUrlChange","target","color","handleTargetUrlChange","handleSubmitAlias","handleFilterQueryChange","o","i","handleSelectFilterType","id","handleCreateDate","handleSubmitFilter","length","handleCheckAlias","display","flexWrap","alignItems","marginBottom","handlePageChange","marginLeft","size","padding","margin","cursor","handleItemsPerPage","handleRemoveAliases","document","getElementById","onCancel","func","isRequired","location"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Aliases.jsx"],"sourcesContent":["/**\n * Moderate comments component.\n * @module components/manage/Controlpanels/Aliases\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getBaseUrl, getParentUrl, Helmet } from '@plone/volto/helpers';\nimport { removeAliases, addAliases, getAliases } from '@plone/volto/actions';\nimport { Portal } from 'react-portal';\nimport {\n  Container,\n  Button,\n  Segment,\n  Form,\n  Checkbox,\n  Header,\n  Input,\n  Radio,\n  Message,\n  Table,\n  Pagination,\n  Menu,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport DatetimeWidget from '@plone/volto/components/manage/Widgets/DatetimeWidget';\nimport { Icon, Toolbar } from '@plone/volto/components';\n\nimport backSVG from '@plone/volto/icons/back.svg';\nimport { map } from 'lodash';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  aliases: {\n    id: 'URL Management',\n    defaultMessage: 'URL Management',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  successAdd: {\n    id: 'Alias has been added',\n    defaultMessage: 'Alias has been added',\n  },\n});\n\nconst filterChoices = [\n  { label: 'Both', value: '' },\n  { label: 'Automatically', value: 'no' },\n  { label: 'Manually', value: 'yes' },\n];\n\nconst itemsPerPageChoices = [10, 25, 50, 'All'];\n\n/**\n * Aliases class.\n * @class Aliases\n * @extends Component\n */\nclass Aliases extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    addAliases: PropTypes.func.isRequired,\n    getAliases: PropTypes.func.isRequired,\n    removeAliases: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Aliases\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClient: false,\n      filterType: filterChoices[0],\n      createdBefore: null,\n      altUrlPath: '',\n      isAltUrlCorrect: false,\n      targetUrlPath: '',\n      isTargetUrlCorrect: false,\n      aliasesToRemove: [],\n      errorMessageAdd: '',\n      filterQuery: '',\n      aliases: [],\n      activePage: 1,\n      pages: '',\n      itemsPerPage: 10,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    const { filterQuery, filterType, createdBefore, itemsPerPage } = this.state;\n    this.setState({ isClient: true });\n    this.props.getAliases(getBaseUrl(this.props.pathname), {\n      query: filterQuery,\n      manual: filterType.value,\n      datetime: createdBefore,\n      batchSize: itemsPerPage,\n    });\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    const { filterQuery, filterType, createdBefore, itemsPerPage } = this.state;\n    if (\n      prevProps.aliases.items_total !== this.props.aliases.items_total ||\n      prevState.itemsPerPage !== this.state.itemsPerPage\n    ) {\n      const pages = Math.ceil(\n        this.props.aliases.items_total / this.state.itemsPerPage,\n      );\n\n      if (pages === 0 || isNaN(pages)) {\n        this.setState({ pages: '' });\n      } else {\n        this.setState({ pages });\n      }\n    }\n    if (\n      prevState.activePage !== this.state.activePage ||\n      prevState.itemsPerPage !== this.state.itemsPerPage\n    ) {\n      this.props.getAliases(getBaseUrl(this.props.pathname), {\n        query: filterQuery,\n        manual: filterType.value,\n        datetime: createdBefore,\n        batchSize: itemsPerPage === 'All' ? 999999999999 : itemsPerPage,\n        batchStart: (this.state.activePage - 1) * this.state.itemsPerPage,\n      });\n    }\n    if (prevState.altUrlPath !== this.state.altUrlPath) {\n      if (this.state.altUrlPath.charAt(0) === '/') {\n        this.setState({ isAltUrlCorrect: true });\n      } else {\n        this.setState({ isAltUrlCorrect: false });\n      }\n    }\n\n    if (prevState.targetUrlPath !== this.state.targetUrlPath) {\n      if (this.state.targetUrlPath.charAt(0) === '/') {\n        this.setState({ isTargetUrlCorrect: true });\n      } else {\n        this.setState({ isTargetUrlCorrect: false });\n      }\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.aliases.add.loading && !nextProps.aliases.add.loaded) {\n      if (nextProps.aliases.add.error) {\n        this.setState({\n          errorMessageAdd: nextProps.aliases.add.error.response.body.message,\n        });\n      }\n    }\n    if (this.props.aliases.add.loading && nextProps.aliases.add.loaded) {\n      const {\n        filterQuery,\n        filterType,\n        createdBefore,\n        itemsPerPage,\n      } = this.state;\n\n      this.props.getAliases(getBaseUrl(this.props.pathname), {\n        query: filterQuery,\n        manual: filterType.value,\n        datetime: createdBefore,\n        batchSize: itemsPerPage,\n      });\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.successAdd)}\n        />,\n      );\n      if (!nextProps.aliases.add.error) {\n        this.setState({\n          errorMessageAdd: '',\n        });\n      }\n    }\n    if (this.props.aliases.remove.loading && nextProps.aliases.remove.loaded) {\n      const {\n        filterQuery,\n        filterType,\n        createdBefore,\n        itemsPerPage,\n      } = this.state;\n\n      this.props.getAliases(getBaseUrl(this.props.pathname), {\n        query: filterQuery,\n        manual: filterType.value,\n        datetime: createdBefore,\n        batchSize: itemsPerPage,\n      });\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Select filter type handler\n   * @method handleSelectFilterType\n   * @returns {undefined}\n   */\n  handleSelectFilterType(type) {\n    this.setState({ filterType: type });\n  }\n\n  /**\n   * Select filter type handler\n   * @method handleFilterQueryChange\n   * @returns {undefined}\n   */\n  handleFilterQueryChange(query) {\n    this.setState({ filterQuery: query });\n  }\n\n  /**\n   * Select Creation date handler\n   * @method handleCreateDate\n   * @returns {undefined}\n   */\n  handleCreateDate(date) {\n    this.setState({ createdBefore: date });\n  }\n\n  /**\n   * Select Creation date handler\n   * @method handleSubmitFilter\n   * @returns {undefined}\n   */\n  handleSubmitFilter() {\n    const { filterQuery, filterType, createdBefore, itemsPerPage } = this.state;\n    this.props.getAliases(getBaseUrl(this.props.pathname), {\n      query: filterQuery,\n      manual: filterType.value,\n      datetime: createdBefore,\n      batchSize: itemsPerPage,\n    });\n  }\n\n  /**\n   * Alternative url handler\n   * @method handleAltUrlChange\n   * @returns {undefined}\n   */\n  handleAltUrlChange(url) {\n    this.setState({ altUrlPath: url });\n  }\n\n  /**\n   * Target url handler\n   * @method handleTargetUrlChange\n   * @returns {undefined}\n   */\n  handleTargetUrlChange(url) {\n    this.setState({ targetUrlPath: url });\n  }\n\n  /**\n   * New alias submit handler\n   * @method handleSubmitAlias\n   * @returns {undefined}\n   */\n  handleSubmitAlias() {\n    if (this.state.isAltUrlCorrect && this.state.isTargetUrlCorrect) {\n      this.props.addAliases('', {\n        items: [\n          {\n            path: this.state.altUrlPath,\n            'redirect-to': this.state.targetUrlPath,\n          },\n        ],\n      });\n      this.setState({ altUrlPath: '', targetUrlPath: '' });\n    }\n  }\n\n  /**\n   * Check to-remove aliases handler\n   * @method handleSubmitAlias\n   * @returns {undefined}\n   */\n  handleCheckAlias(alias) {\n    const aliases = this.state.aliasesToRemove;\n    if (aliases.includes(alias)) {\n      const index = aliases.indexOf(alias);\n      if (index > -1) {\n        let newAliasesArr = aliases;\n        newAliasesArr.splice(index, 1);\n        this.setState({ aliasesToRemove: newAliasesArr });\n      }\n    } else {\n      this.setState({\n        aliasesToRemove: [...this.state.aliasesToRemove, alias],\n      });\n    }\n  }\n\n  /**\n   * Remove aliases handler\n   * @method handleRemoveAliases\n   * @returns {undefined}\n   */\n  handleRemoveAliases = () => {\n    const items = this.state.aliasesToRemove.map((a) => {\n      return {\n        path: a,\n      };\n    });\n    this.props.removeAliases('', {\n      items,\n    });\n    this.setState({ aliasesToRemove: [] });\n  };\n\n  /**\n   * Pagination change handler\n   * @method handlePageChange\n   * @returns {undefined}\n   */\n  handlePageChange(e, { activePage }) {\n    this.setState({ activePage });\n  }\n\n  /**\n   * Items per page change handler\n   * @method handleItemsPerPage\n   * @returns {undefined}\n   */\n  handleItemsPerPage(e, { value }) {\n    this.setState({ itemsPerPage: value, activePage: 1 });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <div id=\"page-aliases\">\n        <Helmet title={this.props.intl.formatMessage(messages.aliases)} />\n        <Container>\n          <article id=\"content\">\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage\n                  id=\"URL Management\"\n                  defaultMessage=\"URL Management\"\n                  values={{ title: <q>{this.props.title}</q> }}\n                />\n              </Segment>\n              <Form>\n                <Segment>\n                  <Header size=\"medium\">\n                    <FormattedMessage\n                      id=\"Alternative url path (Required)\"\n                      defaultMessage=\"Alternative url path (Required)\"\n                    />\n                  </Header>\n                  <p className=\"help\">\n                    <FormattedMessage\n                      id=\"Enter the absolute path where the alternative url should exist. The path must start with '/'. Only urls that result in a 404 not found page will result in a redirect occurring.\"\n                      defaultMessage=\"Enter the absolute path where the alternative url should exist. The path must start with '/'. Only urls that result in a 404 not found page will result in a redirect occurring.\"\n                    />\n                  </p>\n                  <Form.Field>\n                    <Input\n                      id=\"alternative-url-input\"\n                      name=\"alternative-url-path\"\n                      placeholder=\"/example\"\n                      value={this.state.altUrlPath}\n                      onChange={(e) => this.handleAltUrlChange(e.target.value)}\n                    />\n                    {!this.state.isAltUrlCorrect &&\n                      this.state.altUrlPath !== '' && (\n                        <p style={{ color: 'red' }}>\n                          <FormattedMessage\n                            id=\"Alternative url path must start with a slash.\"\n                            defaultMessage=\"Alternative url path must start with a slash.\"\n                          />\n                        </p>\n                      )}\n                  </Form.Field>\n                  <Header size=\"medium\">\n                    <FormattedMessage\n                      id=\"Target Path (Required)\"\n                      defaultMessage=\"Target Path (Required)\"\n                    />\n                  </Header>\n                  <p className=\"help\">\n                    <FormattedMessage\n                      id=\"Enter the absolute path of the target. The path must start with '/'. Target must exist or be an existing alternative url path to the target.\"\n                      defaultMessage=\"Enter the absolute path of the target. The path must start with '/'. Target must exist or be an existing alternative url path to the target.\"\n                    />\n                  </p>\n                  <Form.Field>\n                    <Input\n                      id=\"target-url-input\"\n                      name=\"target-url-path\"\n                      placeholder=\"/example\"\n                      value={this.state.targetUrlPath}\n                      onChange={(e) =>\n                        this.handleTargetUrlChange(e.target.value)\n                      }\n                    />\n                    {!this.state.isTargetUrlCorrect &&\n                      this.state.targetUrlPath !== '' && (\n                        <p style={{ color: 'red' }}>\n                          <FormattedMessage\n                            id=\"Target url path must start with a slash.\"\n                            defaultMessage=\"Target url path must start with a slash.\"\n                          />\n                        </p>\n                      )}\n                  </Form.Field>\n                  <Button\n                    id=\"submit-alias\"\n                    primary\n                    onClick={() => this.handleSubmitAlias()}\n                    disabled={\n                      !this.state.isAltUrlCorrect ||\n                      !this.state.isTargetUrlCorrect ||\n                      this.state.altUrlPath === '' ||\n                      this.state.targetUrlPath === ''\n                    }\n                  >\n                    <FormattedMessage id=\"Add\" defaultMessage=\"Add\" />\n                  </Button>\n                  {this.state.errorMessageAdd && (\n                    <Message color=\"red\">\n                      <Message.Header>\n                        <FormattedMessage\n                          id=\"ErrorHeader\"\n                          defaultMessage=\"Error\"\n                        />\n                      </Message.Header>\n                      <p>{this.state.errorMessageAdd}</p>\n                    </Message>\n                  )}\n                </Segment>\n              </Form>\n              <Form>\n                <Segment className=\"primary\">\n                  <Header size=\"medium\">\n                    <FormattedMessage\n                      id=\"All existing alternative urls for this site\"\n                      defaultMessage=\"All existing alternative urls for this site\"\n                    />\n                  </Header>\n                  <Header size=\"small\">\n                    <FormattedMessage\n                      id=\"Filter by prefix\"\n                      defaultMessage=\"Filter by prefix\"\n                    />\n                  </Header>\n                  <Form.Field>\n                    <Input\n                      name=\"filter\"\n                      placeholder=\"/example\"\n                      value={this.state.filterQuery}\n                      onChange={(e) =>\n                        this.handleFilterQueryChange(e.target.value)\n                      }\n                    />\n                  </Form.Field>\n                  <Header size=\"small\">\n                    <FormattedMessage\n                      id=\"Manually or automatically added?\"\n                      defaultMessage=\"Manually or automatically added?\"\n                    />\n                  </Header>\n                  {filterChoices.map((o, i) => (\n                    <Form.Field key={i}>\n                      <Radio\n                        label={o.label}\n                        name=\"radioGroup\"\n                        value={o.value}\n                        checked={this.state.filterType === o}\n                        onChange={() => this.handleSelectFilterType(o)}\n                      />\n                    </Form.Field>\n                  ))}\n                  <Form.Field>\n                    <DatetimeWidget\n                      id=\"created-before-date\"\n                      title={'Created before'}\n                      dateOnly={true}\n                      value={this.state.createdBefore}\n                      onChange={(id, value) => {\n                        this.handleCreateDate(value);\n                      }}\n                    />\n                  </Form.Field>\n                  <Button onClick={() => this.handleSubmitFilter()} primary>\n                    Filter\n                  </Button>\n                  <Header size=\"small\">\n                    <FormattedMessage\n                      id=\"Alternative url path → target url path (date and time of creation, manually created yes/no)\"\n                      defaultMessage=\"Alternative url path → target url path (date and time of creation, manually created yes/no)\"\n                    />\n                  </Header>\n\n                  <Table>\n                    <Table.Body>\n                      <Table.Row>\n                        <Table.HeaderCell>\n                          <FormattedMessage\n                            id=\"Select\"\n                            defaultMessage=\"Select\"\n                          />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                          <FormattedMessage id=\"Alias\" defaultMessage=\"Alias\" />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                          <FormattedMessage\n                            id=\"Target\"\n                            defaultMessage=\"Target\"\n                          />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                          <FormattedMessage id=\"Date\" defaultMessage=\"Date\" />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                          <FormattedMessage\n                            id=\"Manual\"\n                            defaultMessage=\"Manual\"\n                          />\n                        </Table.HeaderCell>\n                      </Table.Row>\n                      {this.props.aliases.items.length > 0 &&\n                        this.props.aliases.items.map((alias, i) => (\n                          <Table.Row key={i}>\n                            <Table.Cell>\n                              <Checkbox\n                                onChange={(e, { value }) =>\n                                  this.handleCheckAlias(value)\n                                }\n                                checked={this.state.aliasesToRemove.includes(\n                                  alias.path,\n                                )}\n                                value={alias.path}\n                              />\n                            </Table.Cell>\n                            <Table.Cell>\n                              <p>{alias.path}</p>\n                            </Table.Cell>\n                            <Table.Cell>\n                              <p>{alias['redirect-to']}</p>\n                            </Table.Cell>\n                            <Table.Cell>\n                              <p>{alias.datetime}</p>\n                            </Table.Cell>\n                            <Table.Cell>\n                              <p>{`${alias.manual}`}</p>\n                            </Table.Cell>\n                          </Table.Row>\n                        ))}\n                    </Table.Body>\n                  </Table>\n                  <div\n                    style={{\n                      display: 'flex',\n                      flexWrap: 'wrap',\n                      alignItems: 'center',\n                      marginBottom: '20px',\n                    }}\n                  >\n                    {this.state.pages && (\n                      <Pagination\n                        boundaryRange={0}\n                        activePage={this.state.activePage}\n                        ellipsisItem={null}\n                        firstItem={null}\n                        lastItem={null}\n                        siblingRange={1}\n                        totalPages={this.state.pages}\n                        onPageChange={(e, o) => this.handlePageChange(e, o)}\n                      />\n                    )}\n                    <Menu.Menu\n                      position=\"right\"\n                      style={{ display: 'flex', marginLeft: 'auto' }}\n                    >\n                      <Menu.Item style={{ color: 'grey' }}>\n                        <FormattedMessage id=\"Show\" defaultMessage=\"Show\" />:\n                      </Menu.Item>\n                      {map(itemsPerPageChoices, (size) => (\n                        <Menu.Item\n                          style={{\n                            padding: '0 0.4em',\n                            margin: '0em 0.357em',\n                            cursor: 'pointer',\n                          }}\n                          key={size}\n                          value={size}\n                          active={size === this.state.itemsPerPage}\n                          onClick={(e, o) => this.handleItemsPerPage(e, o)}\n                        >\n                          {size}\n                        </Menu.Item>\n                      ))}\n                    </Menu.Menu>\n                  </div>\n                  <Button\n                    disabled={this.state.aliasesToRemove.length === 0}\n                    onClick={this.handleRemoveAliases}\n                    primary\n                  >\n                    <FormattedMessage\n                      id=\"Remove selected\"\n                      defaultMessage=\"Remove selected\"\n                    />\n                  </Button>\n                </Segment>\n              </Form>\n            </Segment.Group>\n          </article>\n        </Container>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link className=\"item\" to=\"#\" onClick={() => this.onCancel()}>\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      aliases: state.aliases,\n      pathname: props.location.pathname,\n    }),\n    { addAliases, getAliases, removeAliases },\n  ),\n)(Aliases);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"URL Management","defaultMessage":"URL Management"},{"id":"Success","defaultMessage":"Success"},{"id":"Alias has been added","defaultMessage":"Alias has been added"},{"id":"Alternative url path (Required)","defaultMessage":"Alternative url path (Required)"},{"id":"Enter the absolute path where the alternative url should exist. The path must start with '/'. Only urls that result in a 404 not found page will result in a redirect occurring.","defaultMessage":"Enter the absolute path where the alternative url should exist. The path must start with '/'. Only urls that result in a 404 not found page will result in a redirect occurring."},{"id":"Alternative url path must start with a slash.","defaultMessage":"Alternative url path must start with a slash."},{"id":"Target Path (Required)","defaultMessage":"Target Path (Required)"},{"id":"Enter the absolute path of the target. The path must start with '/'. Target must exist or be an existing alternative url path to the target.","defaultMessage":"Enter the absolute path of the target. The path must start with '/'. Target must exist or be an existing alternative url path to the target."},{"id":"Target url path must start with a slash.","defaultMessage":"Target url path must start with a slash."},{"id":"Add","defaultMessage":"Add"},{"id":"ErrorHeader","defaultMessage":"Error"},{"id":"All existing alternative urls for this site","defaultMessage":"All existing alternative urls for this site"},{"id":"Filter by prefix","defaultMessage":"Filter by prefix"},{"id":"Manually or automatically added?","defaultMessage":"Manually or automatically added?"},{"id":"Alternative url path → target url path (date and time of creation, manually created yes/no)","defaultMessage":"Alternative url path → target url path (date and time of creation, manually created yes/no)"},{"id":"Select","defaultMessage":"Select"},{"id":"Alias","defaultMessage":"Alias"},{"id":"Target","defaultMessage":"Target"},{"id":"Date","defaultMessage":"Date"},{"id":"Manual","defaultMessage":"Manual"},{"id":"Show","defaultMessage":"Show"},{"id":"Remove selected","defaultMessage":"Remove selected"}]}},"sourceType":"module","externalDependencies":[]}