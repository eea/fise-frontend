{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _isNil from \"lodash/isNil\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Blocks/CustomConnectedBlock/View.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useMemo } from 'react';\nimport { compose } from 'redux';\nimport config from '@plone/volto/registry';\nimport { VisibilitySensor } from '@eeacms/volto-datablocks/components';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport './style.less';\nvar DefaultView = function DefaultView(props) {\n  return __jsx(React.Fragment, null, props.mode === 'edit' && !props.data.type ? __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Please select a block type from sidebar\") : props.mode === 'edit' && props.data.type ? __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Block type selected: \", props.data.type) : '');\n};\n_c = DefaultView;\nvar View = function View(props) {\n  _s();\n  var type = props.data.type;\n  var CustomView = useMemo(function () {\n    var _config$blocks$blocks, _config$blocks$blocks2;\n    return ((_config$blocks$blocks = config.blocks.blocksConfig.custom_connected_block.blocks) === null || _config$blocks$blocks === void 0 ? void 0 : (_config$blocks$blocks2 = _config$blocks$blocks[type]) === null || _config$blocks$blocks2 === void 0 ? void 0 : _config$blocks$blocks2.view) || null;\n  }, [type]);\n  var RenderCustomConnectedBlock = useMemo(function () {\n    return CustomView || DefaultView;\n  }, [CustomView]);\n  return __jsx(RenderCustomConnectedBlock, _extends({}, props, {\n    mode: props.mode,\n    placeholder: !_isNil(props.provider_data) ? props.data.placeholder : null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }));\n};\n_s(View, \"HWylVLXC/v1xxIJ3KVE3kBqEHZw=\");\n_c2 = View;\nvar BlockView = compose(connectToProviderData(function (props) {\n  var _props$data;\n  return {\n    provider_url: (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.provider_url\n  };\n}))(View);\n_c3 = BlockView;\nexport { View };\nexport default (function (props) {\n  return __jsx(VisibilitySensor, {\n    Placeholder: function Placeholder() {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 42\n        }\n      }, \"loading....\\xA0\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(BlockView, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  })));\n});\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DefaultView\");\n$RefreshReg$(_c2, \"View\");\n$RefreshReg$(_c3, \"BlockView\");","map":{"version":3,"names":["React","useMemo","compose","config","VisibilitySensor","connectToProviderData","DefaultView","props","mode","data","type","View","CustomView","blocks","blocksConfig","custom_connected_block","view","RenderCustomConnectedBlock","provider_data","placeholder","BlockView","provider_url"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Blocks/CustomConnectedBlock/View.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { isNil } from 'lodash';\nimport { compose } from 'redux';\nimport config from '@plone/volto/registry';\nimport { VisibilitySensor } from '@eeacms/volto-datablocks/components';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport './style.less';\n\nconst DefaultView = (props) => (\n  <>\n    {props.mode === 'edit' && !props.data.type ? (\n      <p>Please select a block type from sidebar</p>\n    ) : props.mode === 'edit' && props.data.type ? (\n      <p>Block type selected: {props.data.type}</p>\n    ) : (\n      ''\n    )}\n  </>\n);\n\nconst View = (props) => {\n  const type = props.data.type;\n\n  const CustomView = useMemo(() => {\n    return (\n      config.blocks.blocksConfig.custom_connected_block.blocks?.[type]?.view ||\n      null\n    );\n  }, [type]);\n\n  const RenderCustomConnectedBlock = useMemo(() => {\n    return CustomView || DefaultView;\n  }, [CustomView]);\n\n  return (\n    <RenderCustomConnectedBlock\n      {...props}\n      mode={props.mode}\n      placeholder={!isNil(props.provider_data) ? props.data.placeholder : null}\n    />\n  );\n};\n\nconst BlockView = compose(\n  connectToProviderData((props) => ({\n    provider_url: props.data?.provider_url,\n  })),\n)(View);\n\nexport { View };\n\nexport default (props) => {\n  return (\n    <VisibilitySensor Placeholder={() => <div>loading....&nbsp;</div>}>\n      <BlockView {...props} />\n    </VisibilitySensor>\n  );\n};\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAEtC,SAASC,OAAO,QAAQ,OAAO;AAC/B,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,SAASC,qBAAqB,QAAQ,+BAA+B;AACrE,OAAO,cAAc;AAErB,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,KAAK;EAAA,OACxB,4BACGA,KAAK,CAACC,IAAI,KAAK,MAAM,IAAI,CAACD,KAAK,CAACE,IAAI,CAACC,IAAI,GACxC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,6CAA8C,GAC5CH,KAAK,CAACC,IAAI,KAAK,MAAM,IAAID,KAAK,CAACE,IAAI,CAACC,IAAI,GAC1C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4BAAyBH,KAAK,CAACE,IAAI,CAACC,IAAI,CAAK,GAE7C,EACD,CACA;AAAA,CACJ;AAAC,KAVIJ,WAAW;AAYjB,IAAMK,IAAI,GAAG,SAAPA,IAAI,CAAIJ,KAAK,EAAK;EAAA;EACtB,IAAMG,IAAI,GAAGH,KAAK,CAACE,IAAI,CAACC,IAAI;EAE5B,IAAME,UAAU,GAAGX,OAAO,CAAC,YAAM;IAAA;IAC/B,OACE,0BAAAE,MAAM,CAACU,MAAM,CAACC,YAAY,CAACC,sBAAsB,CAACF,MAAM,oFAAxD,sBAA2DH,IAAI,CAAC,2DAAhE,uBAAkEM,IAAI,KACtE,IAAI;EAER,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,IAAMO,0BAA0B,GAAGhB,OAAO,CAAC,YAAM;IAC/C,OAAOW,UAAU,IAAIN,WAAW;EAClC,CAAC,EAAE,CAACM,UAAU,CAAC,CAAC;EAEhB,OACE,MAAC,0BAA0B,eACrBL,KAAK;IACT,IAAI,EAAEA,KAAK,CAACC,IAAK;IACjB,WAAW,EAAE,CAAC,OAAMD,KAAK,CAACW,aAAa,CAAC,GAAGX,KAAK,CAACE,IAAI,CAACU,WAAW,GAAG,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACzE;AAEN,CAAC;AAAC,GArBIR,IAAI;AAAA,MAAJA,IAAI;AAuBV,IAAMS,SAAS,GAAGlB,OAAO,CACvBG,qBAAqB,CAAC,UAACE,KAAK;EAAA;EAAA,OAAM;IAChCc,YAAY,iBAAEd,KAAK,CAACE,IAAI,gDAAV,YAAYY;EAC5B,CAAC;AAAA,CAAC,CAAC,CACJ,CAACV,IAAI,CAAC;AAAC,MAJFS,SAAS;AAMf,SAAST,IAAI;AAEb,gBAAe,UAACJ,KAAK,EAAK;EACxB,OACE,MAAC,gBAAgB;IAAC,WAAW,EAAE;MAAA,OAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,qBAA4B;IAAA,CAAC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAChE,MAAC,SAAS,eAAKA,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,CACP;AAEvB,CAAC;AAAC;AAAA;AAAA;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}