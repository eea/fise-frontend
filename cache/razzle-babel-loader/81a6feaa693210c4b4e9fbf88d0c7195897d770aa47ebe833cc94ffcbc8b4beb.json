{"ast":null,"code":"import { GET_VISUALIZATION } from '../constants';\nexport const data_visualizations = middlewares => [store => next => action => {\n  const state = store.getState();\n  if (action.type === GET_VISUALIZATION) {\n    const isPending = state.data_visualizations.pendingVisualizations[action.path];\n    if (isPending) {\n      return;\n    }\n    store.dispatch({\n      type: `${GET_VISUALIZATION}_PENDING`,\n      path: action.path\n    });\n  }\n  return next(action);\n}, ...middlewares];","map":{"version":3,"names":["GET_VISUALIZATION","data_visualizations","middlewares","store","next","action","state","getState","type","isPending","pendingVisualizations","path","dispatch"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-plotlycharts/src/middlewares/data_visualizations.js"],"sourcesContent":["import { GET_VISUALIZATION } from '../constants';\n\nexport const data_visualizations = (middlewares) => [\n  (store) => (next) => (action) => {\n    const state = store.getState();\n    if (action.type === GET_VISUALIZATION) {\n      const isPending =\n        state.data_visualizations.pendingVisualizations[action.path];\n      if (isPending) {\n        return;\n      }\n      store.dispatch({\n        type: `${GET_VISUALIZATION}_PENDING`,\n        path: action.path,\n      });\n    }\n    return next(action);\n  },\n  ...middlewares,\n];\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,cAAc;AAEhD,OAAO,MAAMC,mBAAmB,GAAIC,WAAW,IAAK,CACjDC,KAAK,IAAMC,IAAI,IAAMC,MAAM,IAAK;EAC/B,MAAMC,KAAK,GAAGH,KAAK,CAACI,QAAQ,EAAE;EAC9B,IAAIF,MAAM,CAACG,IAAI,KAAKR,iBAAiB,EAAE;IACrC,MAAMS,SAAS,GACbH,KAAK,CAACL,mBAAmB,CAACS,qBAAqB,CAACL,MAAM,CAACM,IAAI,CAAC;IAC9D,IAAIF,SAAS,EAAE;MACb;IACF;IACAN,KAAK,CAACS,QAAQ,CAAC;MACbJ,IAAI,EAAG,GAAER,iBAAkB,UAAS;MACpCW,IAAI,EAAEN,MAAM,CAACM;IACf,CAAC,CAAC;EACJ;EACA,OAAOP,IAAI,CAACC,MAAM,CAAC;AACrB,CAAC,EACD,GAAGH,WAAW,CACf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}