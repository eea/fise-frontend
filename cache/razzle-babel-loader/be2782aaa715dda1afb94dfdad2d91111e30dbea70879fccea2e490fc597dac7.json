{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-plotlycharts/src/ChartEditor/Edit.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/*\n * A wrapper around the react-chart-editor component.\n */\n\nimport React, { Component } from 'react';\nimport { Tab, Button } from 'semantic-ui-react';\nimport loadable from '@loadable/component';\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\nimport { updateChartDataFromProvider } from '@eeacms/volto-datablocks/helpers';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport 'react-chart-editor/lib/react-chart-editor.css';\nconst LoadablePlotly = loadable.lib({\n  resolved: {},\n  chunkName() {\n    return \"plotly-js-dist-plotly\";\n  },\n  isReady(props) {\n    var key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: () => import( /* webpackChunkName: \"plotly-js-dist-plotly\" */'plotly.js/dist/plotly'),\n  requireAsync(props) {\n    var _this = this;\n    var key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(function (resolved) {\n      _this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync(props) {\n    var id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"plotly.js/dist/plotly\");\n    }\n    return eval('require.resolve')(\"plotly.js/dist/plotly\");\n  }\n});\nconst LoadablePlotlyEditor = loadable.lib({\n  resolved: {},\n  chunkName() {\n    return \"react-chart-editor\";\n  },\n  isReady(props) {\n    var key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: () => import( /* webpackChunkName: \"react-chart-editor\" */'react-chart-editor'),\n  requireAsync(props) {\n    var _this = this;\n    var key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(function (resolved) {\n      _this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync(props) {\n    var id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-chart-editor\");\n    }\n    return eval('require.resolve')(\"react-chart-editor\");\n  }\n});\nconst LoadableChartEditor = loadable.lib({\n  resolved: {},\n  chunkName() {\n    return \"ChartEditor\";\n  },\n  isReady(props) {\n    var key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: () => import( /* webpackChunkName: \"ChartEditor\" */'./ChartEditor'),\n  requireAsync(props) {\n    var _this = this;\n    var key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(function (resolved) {\n      _this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync(props) {\n    var id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"./ChartEditor\");\n    }\n    return eval('require.resolve')(\"./ChartEditor\");\n  }\n});\nconst LoadableInspector = loadable({\n  resolved: {},\n  chunkName() {\n    return \"react-inspector\";\n  },\n  isReady(props) {\n    var key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: () => import( /* webpackChunkName: \"react-inspector\" */'react-inspector'),\n  requireAsync(props) {\n    var _this = this;\n    var key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(function (resolved) {\n      _this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync(props) {\n    var id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-inspector\");\n    }\n    return eval('require.resolve')(\"react-inspector\");\n  }\n});\n\n// TODO: remove these fallbacks;\nconst dataSources = {\n  col1: [1, 2, 3],\n  col2: [4213321.567, 3231123.4, 2929845.5721],\n  col3: [1746.424, 12353.532, 9124.21]\n};\nconst config = {\n  editable: true\n};\nfunction getDataSourceOptions(data) {\n  return Object.keys(data).map(name => ({\n    value: name,\n    label: name\n  }));\n}\nconst chartHelp = {\n  area: {\n    helpDoc: 'https://help.plot.ly/make-an-area-graph/',\n    examplePlot: () => {}\n  },\n  bar: {\n    helpDoc: 'https://help.plot.ly/stacked-bar-chart/',\n    examplePlot: () => {}\n  },\n  box: {\n    helpDoc: 'https://help.plot.ly/make-a-box-plot/'\n  },\n  candlestick: {\n    helpDoc: 'https://help.plot.ly/make-a-candlestick/'\n  },\n  choropleth: {\n    helpDoc: 'https://help.plot.ly/make-a-choropleth-map/'\n  },\n  contour: {\n    helpDoc: 'https://help.plot.ly/make-a-contour-plot/'\n  },\n  heatmap: {\n    helpDoc: 'https://help.plot.ly/make-a-heatmap/'\n  },\n  histogram2d: {\n    helpDoc: 'https://help.plot.ly/make-a-2d-histogram-heatmap/'\n  },\n  histogram2dcontour: {\n    helpDoc: 'https://help.plot.ly/make-a-histogram/'\n  },\n  line: {\n    helpDoc: 'https://help.plot.ly/make-a-line-graph/'\n  },\n  mesh3d: {\n    helpDoc: null\n  },\n  ohlc: {\n    helpDoc: 'https://help.plot.ly/make-a-ohlc/'\n  },\n  pie: {\n    helpDoc: 'https://help.plot.ly/make-a-pie-chart/'\n  },\n  scatter3d: {\n    helpDoc: 'https://help.plot.ly/make-a-3d-scatter-plot/'\n  },\n  line3d: {\n    helpDoc: null\n  },\n  scatter: {\n    helpDoc: 'https://help.plot.ly/how-to-make-a-scatter-plot/'\n  },\n  scattergeo: {\n    helpDoc: 'https://help.plot.ly/make-scatter-map/'\n  },\n  scattermapbox: {\n    helpDoc: 'https://help.plot.ly/make-a-mapbox-map/'\n  },\n  scatterternary: {\n    helpDoc: 'https://help.plot.ly/ternary-scatter-plot/'\n  },\n  surface: {\n    helpDoc: 'https://help.plot.ly/make-a-3d-surface-plot/'\n  },\n  table: {\n    helpDoc: null\n  },\n  timeseries: {\n    helpDoc: 'https://help.plot.ly/range-slider/'\n  }\n};\nconst RawDataEditor = ({\n  locale,\n  dataPlaceholder,\n  layoutPlaceholder,\n  handleDataChange,\n  handleLayoutChange\n}) => {\n  const [dataObject, setDataObject] = React.useState(dataPlaceholder);\n  const [layoutObject, setLayoutObject] = React.useState(layoutPlaceholder);\n  const panes = [{\n    menuItem: 'Data',\n    render: () => __jsx(Tab.Pane, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      style: {\n        padding: '10px 20px',\n        margin: '10px 0'\n      },\n      primary: true,\n      disabled: dataObject.error ? true : false,\n      onClick: () => handleDataChange(dataObject),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"Save\"), __jsx(JSONInput, {\n      id: \"raw_data_edit\",\n      theme: \"light_mitsuketa_tribute\",\n      locale: locale,\n      height: \"550px\",\n      width: \"100%\",\n      placeholder: dataPlaceholder,\n      onChange: e => setDataObject(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }))\n  }, {\n    menuItem: 'Layout',\n    render: () => __jsx(Tab.Pane, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      style: {\n        padding: '10px 20px',\n        margin: '10px 0'\n      },\n      primary: true,\n      disabled: layoutObject.error ? true : false,\n      onClick: () => handleLayoutChange(layoutObject),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"Save\"), __jsx(JSONInput, {\n      id: \"raw_layout_edit\",\n      theme: \"light_mitsuketa_tribute\",\n      locale: locale,\n      height: \"550px\",\n      width: \"100%\",\n      placeholder: layoutPlaceholder,\n      onChange: e => setLayoutObject(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }))\n  }];\n  return __jsx(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, __jsx(Tab, {\n    menu: {\n      secondary: true,\n      pointing: true\n    },\n    panes: panes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }));\n};\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"handleRawDataChange\", val => {\n      this.props.onChangeValue(_objectSpread(_objectSpread({}, this.props.value), {}, {\n        chartData: _objectSpread(_objectSpread({}, this.props.chartData), {}, {\n          data: val.jsObject\n        })\n      }));\n    });\n    _defineProperty(this, \"handleRawLayoutChange\", val => {\n      this.props.onChangeValue(_objectSpread(_objectSpread({}, this.props.value), {}, {\n        chartData: _objectSpread(_objectSpread({}, this.props.chartData), {}, {\n          layout: val.jsObject\n        })\n      }));\n    });\n    this.state = {\n      full: null\n    };\n    LoadablePlotly.preload();\n    LoadablePlotlyEditor.preload();\n    LoadableChartEditor.preload();\n    LoadableInspector.preload();\n  }\n  render() {\n    if (__SERVER__) return '';\n    const {\n      chartData = {}\n    } = this.props.value;\n    const {\n      data = [],\n      layout = {},\n      frames = []\n    } = chartData;\n    const provider_data = this.props.provider_data;\n    const dataSourceOptions = getDataSourceOptions(provider_data || dataSources);\n    const updatedData = updateChartDataFromProvider(data, provider_data);\n    return __jsx(React.Fragment, null, __jsx(LoadablePlotlyEditor, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, plotlyEditor => {\n      const Panel = plotlyEditor.Panel;\n      const PlotlyEditor = plotlyEditor.default;\n      return __jsx(LoadablePlotly, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }\n      }, plotly => {\n        return __jsx(LoadableChartEditor, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }\n        }, chartEditor => {\n          const ChartEditor = chartEditor.default;\n          return __jsx(PlotlyEditor, {\n            divId: \"gd\",\n            config: config,\n            data: updatedData,\n            layout: layout,\n            frames: frames,\n            dataSourceOptions: dataSourceOptions,\n            dataSources: this.props.provider_data || dataSources,\n            plotly: plotly,\n            onUpdate: (data, layout, frames) => {\n              this.props.onChangeValue(_objectSpread(_objectSpread({}, this.props.value), {}, {\n                chartData: _objectSpread(_objectSpread({}, chartData), {}, {\n                  data,\n                  layout,\n                  frames\n                })\n              }));\n            },\n            chartHelp: chartHelp,\n            showFieldTooltips: true,\n            useResizeHandler: true,\n            debug: true,\n            advancedTraceTypeSelector: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 27\n            }\n          }, this.props.hasCustomData ? __jsx(RawDataEditor, {\n            locale: locale,\n            dataPlaceholder: data,\n            layoutPlaceholder: layout,\n            handleDataChange: e => this.handleRawDataChange(e),\n            handleLayoutChange: e => this.handleRawLayoutChange(e),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 31\n            }\n          }) : __jsx(ChartEditor, {\n            onChangeValue: this.props.onChangeValue,\n            value: this.props.value,\n            logoSrc: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 31\n            }\n          }, __jsx(Panel, {\n            group: \"Dev\",\n            name: \"Inspector\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }\n          }, __jsx(\"button\", {\n            className: \"devbtn\",\n            onClick: () => {\n              const gd = document.getElementById('gd') || {};\n              this.setState({\n                full: {\n                  _fullData: gd._fullData || [],\n                  _fullLayout: gd._fullLayout || {}\n                }\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 35\n            }\n          }, \"Refresh\"), __jsx(\"div\", {\n            style: {\n              height: '80vh'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 35\n            }\n          }, __jsx(LoadableInspector, {\n            data: {\n              _full: this.state.full\n            },\n            expandLevel: 2,\n            sortObjectKeys: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 37\n            }\n          })))));\n        });\n      });\n    }));\n  }\n}\nexport default connectToProviderData(props => {\n  var _props$value;\n  return {\n    provider_url: props.provider_url || ((_props$value = props.value) === null || _props$value === void 0 ? void 0 : _props$value.provider_url)\n  };\n})(Edit);","map":{"version":3,"names":["React","Component","Tab","Button","loadable","JSONInput","locale","updateChartDataFromProvider","connectToProviderData","LoadablePlotly","lib","LoadablePlotlyEditor","LoadableChartEditor","LoadableInspector","dataSources","col1","col2","col3","config","editable","getDataSourceOptions","data","Object","keys","map","name","value","label","chartHelp","area","helpDoc","examplePlot","bar","box","candlestick","choropleth","contour","heatmap","histogram2d","histogram2dcontour","line","mesh3d","ohlc","pie","scatter3d","line3d","scatter","scattergeo","scattermapbox","scatterternary","surface","table","timeseries","RawDataEditor","dataPlaceholder","layoutPlaceholder","handleDataChange","handleLayoutChange","dataObject","setDataObject","useState","layoutObject","setLayoutObject","panes","menuItem","render","padding","margin","error","e","width","secondary","pointing","Edit","constructor","props","val","onChangeValue","chartData","jsObject","layout","state","full","preload","__SERVER__","frames","provider_data","dataSourceOptions","updatedData","plotlyEditor","Panel","PlotlyEditor","default","plotly","chartEditor","ChartEditor","hasCustomData","handleRawDataChange","handleRawLayoutChange","gd","document","getElementById","setState","_fullData","_fullLayout","height","_full","provider_url"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-plotlycharts/src/ChartEditor/Edit.jsx"],"sourcesContent":["/*\n * A wrapper around the react-chart-editor component.\n */\n\nimport React, { Component } from 'react';\nimport { Tab, Button } from 'semantic-ui-react';\nimport loadable from '@loadable/component';\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\n\nimport { updateChartDataFromProvider } from '@eeacms/volto-datablocks/helpers';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\n\nimport 'react-chart-editor/lib/react-chart-editor.css';\n\nconst LoadablePlotly = loadable.lib(() => import('plotly.js/dist/plotly'));\nconst LoadablePlotlyEditor = loadable.lib(() => import('react-chart-editor'));\nconst LoadableChartEditor = loadable.lib(() => import('./ChartEditor'));\nconst LoadableInspector = loadable(() => import('react-inspector'));\n\n// TODO: remove these fallbacks;\nconst dataSources = {\n  col1: [1, 2, 3],\n  col2: [4213321.567, 3231123.4, 2929845.5721],\n  col3: [1746.424, 12353.532, 9124.21],\n};\n\nconst config = { editable: true };\n\nfunction getDataSourceOptions(data) {\n  return Object.keys(data).map((name) => ({\n    value: name,\n    label: name,\n  }));\n}\n\nconst chartHelp = {\n  area: {\n    helpDoc: 'https://help.plot.ly/make-an-area-graph/',\n    examplePlot: () => {},\n  },\n  bar: {\n    helpDoc: 'https://help.plot.ly/stacked-bar-chart/',\n    examplePlot: () => {},\n  },\n  box: { helpDoc: 'https://help.plot.ly/make-a-box-plot/' },\n  candlestick: { helpDoc: 'https://help.plot.ly/make-a-candlestick/' },\n  choropleth: { helpDoc: 'https://help.plot.ly/make-a-choropleth-map/' },\n  contour: { helpDoc: 'https://help.plot.ly/make-a-contour-plot/' },\n  heatmap: { helpDoc: 'https://help.plot.ly/make-a-heatmap/' },\n  histogram2d: { helpDoc: 'https://help.plot.ly/make-a-2d-histogram-heatmap/' },\n  histogram2dcontour: { helpDoc: 'https://help.plot.ly/make-a-histogram/' },\n  line: { helpDoc: 'https://help.plot.ly/make-a-line-graph/' },\n  mesh3d: { helpDoc: null },\n  ohlc: { helpDoc: 'https://help.plot.ly/make-a-ohlc/' },\n  pie: { helpDoc: 'https://help.plot.ly/make-a-pie-chart/' },\n  scatter3d: { helpDoc: 'https://help.plot.ly/make-a-3d-scatter-plot/' },\n  line3d: { helpDoc: null },\n  scatter: { helpDoc: 'https://help.plot.ly/how-to-make-a-scatter-plot/' },\n  scattergeo: { helpDoc: 'https://help.plot.ly/make-scatter-map/' },\n  scattermapbox: { helpDoc: 'https://help.plot.ly/make-a-mapbox-map/' },\n  scatterternary: { helpDoc: 'https://help.plot.ly/ternary-scatter-plot/' },\n  surface: { helpDoc: 'https://help.plot.ly/make-a-3d-surface-plot/' },\n  table: { helpDoc: null },\n  timeseries: { helpDoc: 'https://help.plot.ly/range-slider/' },\n};\n\nconst RawDataEditor = ({\n  locale,\n  dataPlaceholder,\n  layoutPlaceholder,\n  handleDataChange,\n  handleLayoutChange,\n}) => {\n  const [dataObject, setDataObject] = React.useState(dataPlaceholder);\n  const [layoutObject, setLayoutObject] = React.useState(layoutPlaceholder);\n\n  const panes = [\n    {\n      menuItem: 'Data',\n      render: () => (\n        <Tab.Pane>\n          <Button\n            style={{ padding: '10px 20px', margin: '10px 0' }}\n            primary\n            disabled={dataObject.error ? true : false}\n            onClick={() => handleDataChange(dataObject)}\n          >\n            Save\n          </Button>\n          <JSONInput\n            id=\"raw_data_edit\"\n            theme=\"light_mitsuketa_tribute\"\n            locale={locale}\n            height=\"550px\"\n            width=\"100%\"\n            placeholder={dataPlaceholder}\n            onChange={(e) => setDataObject(e)}\n          />\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Layout',\n      render: () => (\n        <Tab.Pane>\n          <Button\n            style={{ padding: '10px 20px', margin: '10px 0' }}\n            primary\n            disabled={layoutObject.error ? true : false}\n            onClick={() => handleLayoutChange(layoutObject)}\n          >\n            Save\n          </Button>\n          <JSONInput\n            id=\"raw_layout_edit\"\n            theme=\"light_mitsuketa_tribute\"\n            locale={locale}\n            height=\"550px\"\n            width=\"100%\"\n            placeholder={layoutPlaceholder}\n            onChange={(e) => setLayoutObject(e)}\n          />\n        </Tab.Pane>\n      ),\n    },\n  ];\n  return (\n    <div style={{ width: '100%' }}>\n      <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n    </div>\n  );\n};\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      full: null,\n    };\n\n    LoadablePlotly.preload();\n    LoadablePlotlyEditor.preload();\n    LoadableChartEditor.preload();\n    LoadableInspector.preload();\n  }\n\n  handleRawDataChange = (val) => {\n    this.props.onChangeValue({\n      ...this.props.value,\n      chartData: {\n        ...this.props.chartData,\n        data: val.jsObject,\n      },\n    });\n  };\n\n  handleRawLayoutChange = (val) => {\n    this.props.onChangeValue({\n      ...this.props.value,\n      chartData: {\n        ...this.props.chartData,\n        layout: val.jsObject,\n      },\n    });\n  };\n\n  render() {\n    if (__SERVER__) return '';\n\n    const { chartData = {} } = this.props.value;\n    const { data = [], layout = {}, frames = [] } = chartData;\n    const provider_data = this.props.provider_data;\n\n    const dataSourceOptions = getDataSourceOptions(\n      provider_data || dataSources,\n    );\n\n    const updatedData = updateChartDataFromProvider(data, provider_data);\n\n    return (\n      <>\n        <LoadablePlotlyEditor>\n          {(plotlyEditor) => {\n            const Panel = plotlyEditor.Panel;\n            const PlotlyEditor = plotlyEditor.default;\n            return (\n              <LoadablePlotly>\n                {(plotly) => {\n                  return (\n                    <LoadableChartEditor>\n                      {(chartEditor) => {\n                        const ChartEditor = chartEditor.default;\n                        return (\n                          <PlotlyEditor\n                            divId=\"gd\"\n                            config={config}\n                            data={updatedData}\n                            layout={layout}\n                            frames={frames}\n                            dataSourceOptions={dataSourceOptions}\n                            dataSources={\n                              this.props.provider_data || dataSources\n                            }\n                            plotly={plotly}\n                            onUpdate={(data, layout, frames) => {\n                              this.props.onChangeValue({\n                                ...this.props.value,\n                                chartData: {\n                                  ...chartData,\n                                  data,\n                                  layout,\n                                  frames,\n                                },\n                              });\n                            }}\n                            chartHelp={chartHelp}\n                            showFieldTooltips\n                            useResizeHandler\n                            debug\n                            advancedTraceTypeSelector\n                          >\n                            {this.props.hasCustomData ? (\n                              <RawDataEditor\n                                locale={locale}\n                                dataPlaceholder={data}\n                                layoutPlaceholder={layout}\n                                handleDataChange={(e) =>\n                                  this.handleRawDataChange(e)\n                                }\n                                handleLayoutChange={(e) =>\n                                  this.handleRawLayoutChange(e)\n                                }\n                              />\n                            ) : (\n                              <ChartEditor\n                                onChangeValue={this.props.onChangeValue}\n                                value={this.props.value}\n                                logoSrc=\"\"\n                              >\n                                <Panel group=\"Dev\" name=\"Inspector\">\n                                  <button\n                                    className=\"devbtn\"\n                                    onClick={() => {\n                                      const gd =\n                                        document.getElementById('gd') || {};\n                                      this.setState({\n                                        full: {\n                                          _fullData: gd._fullData || [],\n                                          _fullLayout: gd._fullLayout || {},\n                                        },\n                                      });\n                                    }}\n                                  >\n                                    Refresh\n                                  </button>\n                                  <div style={{ height: '80vh' }}>\n                                    <LoadableInspector\n                                      data={{ _full: this.state.full }}\n                                      expandLevel={2}\n                                      sortObjectKeys={true}\n                                    />\n                                  </div>\n                                </Panel>\n                              </ChartEditor>\n                            )}\n                          </PlotlyEditor>\n                        );\n                      }}\n                    </LoadableChartEditor>\n                  );\n                }}\n              </LoadablePlotly>\n            );\n          }}\n        </LoadablePlotlyEditor>\n      </>\n    );\n  }\n}\n\nexport default connectToProviderData((props) => ({\n  provider_url: props.provider_url || props.value?.provider_url,\n}))(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}