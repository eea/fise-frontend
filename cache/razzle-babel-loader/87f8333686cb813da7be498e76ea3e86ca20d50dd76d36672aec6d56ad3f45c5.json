{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/News/NewsItem.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nconst NewsItem = ({\n  item\n}) => {\n  const prettyDate = time => {\n    let date = new Date(time);\n    const dtf = new Intl.DateTimeFormat('en-GB', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    });\n    const [{\n      value: da\n    },, {\n      value: mo\n    },, {\n      value: ye\n    }] = dtf.formatToParts(date);\n    return `${da} ${mo} ${ye}`;\n  };\n  const prettyDateTime = time => {\n    const dtf = Intl.DateTimeFormat('en-GB', {\n      // weekday: 'short',\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: false,\n      timeZone: 'Europe/Copenhagen',\n      timeZoneName: 'short'\n    });\n    const [{\n      value: da\n    },, {\n      value: mo\n    },, {\n      value: ye\n    },, {\n      value: hh\n    },, {\n      value: mm\n    },, {\n      value: tz\n    },,] = dtf.formatToParts(new Date(time));\n    return `${da} ${mo} ${ye} ${hh}:${mm} ${tz}`;\n  };\n  const itemPath = urlString => {\n    const url = new URL(urlString);\n    return url.pathname.replace('/fise', '');\n  };\n  return __jsx(\"article\", {\n    key: item['@id'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    className: \"article-headline\",\n    title: item.title,\n    to: itemPath(item['@id']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, item.title), __jsx(\"div\", {\n    className: \"expanded article-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: 'meta-data',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, item.effective && !(item.start && item.end) && __jsx(\"div\", {\n    className: \"text-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"format-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Published: \"), __jsx(\"span\", {\n    className: \"format-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, prettyDate(item.effective))), item.start && item.end && __jsx(\"div\", {\n    className: \"event-dates\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"text-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"format-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Starting: \"), __jsx(\"span\", {\n    className: \"format-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, prettyDateTime(item.start))), __jsx(\"div\", {\n    className: \"text-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"format-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Ending: \"), __jsx(\"span\", {\n    className: \"format-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, prettyDateTime(item.end)))), item.location && __jsx(\"div\", {\n    className: \"text-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"format-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"Location: \"), __jsx(\"span\", {\n    className: \"format-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, item.location)))));\n};\nexport default NewsItem;","map":{"version":3,"names":["React","Link","NewsItem","item","prettyDate","time","date","Date","dtf","Intl","DateTimeFormat","day","month","year","value","da","mo","ye","formatToParts","prettyDateTime","hour","minute","hour12","timeZone","timeZoneName","hh","mm","tz","itemPath","urlString","url","URL","pathname","replace","title","effective","start","end","location"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/News/NewsItem.jsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NewsItem = ({ item }) => {\n  const prettyDate = (time) => {\n    let date = new Date(time);\n    const dtf = new Intl.DateTimeFormat('en-GB', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n    });\n    const [{ value: da }, , { value: mo }, , { value: ye }] = dtf.formatToParts(\n      date,\n    );\n    return `${da} ${mo} ${ye}`;\n  };\n\n  const prettyDateTime = (time) => {\n    const dtf = Intl.DateTimeFormat('en-GB', {\n      // weekday: 'short',\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: false,\n      timeZone: 'Europe/Copenhagen',\n      timeZoneName: 'short',\n    });\n\n    const [\n      { value: da },\n      ,\n      { value: mo },\n      ,\n      { value: ye },\n      ,\n      { value: hh },\n      ,\n      { value: mm },\n      ,\n      { value: tz },\n      ,\n    ] = dtf.formatToParts(new Date(time));\n\n    return `${da} ${mo} ${ye} ${hh}:${mm} ${tz}`;\n  };\n\n  const itemPath = (urlString) => {\n    const url = new URL(urlString);\n    return url.pathname.replace('/fise', '');\n  };\n\n  return (\n    <article key={item['@id']}>\n      <Link\n        className=\"article-headline\"\n        title={item.title}\n        to={itemPath(item['@id'])}\n      >\n        {item.title}\n      </Link>\n      <div className=\"expanded article-body\">\n        <div className={'meta-data'}>\n          {item.effective && !(item.start && item.end) && (\n            <div className=\"text-tab\">\n              <span className=\"format-text\">Published: </span>\n              <span className=\"format-type\">{prettyDate(item.effective)}</span>\n            </div>\n          )}\n          {item.start && item.end && (\n            <div className=\"event-dates\">\n              <div className=\"text-tab\">\n                <span className=\"format-text\">Starting: </span>\n                <span className=\"format-type\">\n                  {prettyDateTime(item.start)}\n                </span>\n              </div>\n              <div className=\"text-tab\">\n                <span className=\"format-text\">Ending: </span>\n                <span className=\"format-type\">{prettyDateTime(item.end)}</span>\n              </div>\n            </div>\n          )}\n          {item.location && (\n            <div className=\"text-tab\">\n              <span className=\"format-text\">Location: </span>\n              <span className=\"format-type\">{item.location}</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default NewsItem;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}