{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/AddonsControlpanel.jsx\";\nvar __jsx = React.createElement;\n/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/AddonsControlpanel\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { Accordion, Button, Container, Divider, Header, Label, Message, Segment, Dimmer, Loader } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { installAddon, listAddons, uninstallAddon, upgradeAddon } from '@plone/volto/actions';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Icon, Toolbar, Toast } from '@plone/volto/components';\nimport circleBottomSVG from '@plone/volto/icons/circle-bottom.svg';\nimport circleTopSVG from '@plone/volto/icons/circle-top.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport { toast } from 'react-toastify';\nvar messages = defineMessages({\n  activateAndDeactivate: {\n    \"id\": \"Activate and deactivate\",\n    \"defaultMessage\": \"Activate and deactivate add-ons in the lists below.\"\n  },\n  addAddons: {\n    \"id\": \"Add Addons\",\n    \"defaultMessage\": \"To make new add-ons show up here, add them to your buildout configuration, run buildout, and restart the server process. For detailed instructions see\"\n  },\n  addonsSettings: {\n    \"id\": \"Add-ons Settings\",\n    \"defaultMessage\": \"Add-ons Settings\"\n  },\n  available: {\n    \"id\": \"Available\",\n    \"defaultMessage\": \"Available\"\n  },\n  availableVersion: {\n    \"id\": \"Latest version\",\n    \"defaultMessage\": \"Latest version\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  installed: {\n    \"id\": \"Installed\",\n    \"defaultMessage\": \"Installed\"\n  },\n  installedVersion: {\n    \"id\": \"Installed version\",\n    \"defaultMessage\": \"Installed version\"\n  },\n  noUninstallProfile: {\n    \"id\": \"No uninstall profile\",\n    \"defaultMessage\": \"This addon does not provide an uninstall profile.\"\n  },\n  update: {\n    \"id\": \"Update\",\n    \"defaultMessage\": \"Update\"\n  },\n  updatesAvailable: {\n    \"id\": \"Updates available\",\n    \"defaultMessage\": \"Updates available\"\n  },\n  updateInstalledAddons: {\n    \"id\": \"Update installed addons:\",\n    \"defaultMessage\": \"Update installed addons:\"\n  },\n  uninstall: {\n    \"id\": \"Uninstall\",\n    \"defaultMessage\": \"Uninstall\"\n  },\n  addOns: {\n    \"id\": \"Add-ons\",\n    \"defaultMessage\": \"Add-ons\"\n  },\n  installingAnAddon: {\n    \"id\": \"Installing a third party add-on\",\n    \"defaultMessage\": \"Installing a third party add-on\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  addonUpgraded: {\n    \"id\": \"Addon upgraded succesfuly\",\n    \"defaultMessage\": \"Addon upgraded succesfuly\"\n  },\n  addonNotUpgraded: {\n    \"id\": \"Addon could not be upgraded\",\n    \"defaultMessage\": \"Addon could not be upgraded\"\n  },\n  addonInstalled: {\n    \"id\": \"Addon installed succesfuly\",\n    \"defaultMessage\": \"Addon installed succesfuly\"\n  },\n  addonNotInstalled: {\n    \"id\": \"Addon could not be installed\",\n    \"defaultMessage\": \"Addon could not be installed\"\n  },\n  addonUninstalled: {\n    \"id\": \"Addon uninstalled succesfuly\",\n    \"defaultMessage\": \"Addon uninstalled succesfuly\"\n  },\n  addonNotUninstalled: {\n    \"id\": \"Addon could not be uninstalled\",\n    \"defaultMessage\": \"Addon could not be uninstalled\"\n  }\n});\n\n/**\n * AddonsControlpanel class.\n * @class AddonsControlpanel\n * @extends Component\n */\nvar AddonsControlpanel = /*#__PURE__*/function (_Component) {\n  _inherits(AddonsControlpanel, _Component);\n  var _super = _createSuper(AddonsControlpanel);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  function AddonsControlpanel(props) {\n    var _this;\n    _classCallCheck(this, AddonsControlpanel);\n    _this = _super.call(this, props);\n    _this.onAccordionClick = _this.onAccordionClick.bind(_assertThisInitialized(_this));\n    _this.onInstall = _this.onInstall.bind(_assertThisInitialized(_this));\n    _this.onUninstall = _this.onUninstall.bind(_assertThisInitialized(_this));\n    _this.onUpgrade = _this.onUpgrade.bind(_assertThisInitialized(_this));\n    _this.state = {\n      activeIndex: -1,\n      installedAddons: [],\n      availableAddons: [],\n      upgradableAddons: [],\n      isClient: false\n    };\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(AddonsControlpanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.listAddons();\n      this.setState({\n        isClient: true\n      });\n    }\n\n    /**\n     * Install handler\n     * @method onInstall\n     * @param {Object} event Event object.\n     * @param {string} value Id of package to install.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onInstall\",\n    value: function onInstall(event, _ref) {\n      var _this2 = this;\n      var value = _ref.value;\n      event.preventDefault();\n      this.props.installAddon(value).then(function () {\n        toast.success(__jsx(Toast, {\n          success: true,\n          title: _this2.props.intl.formatMessage(messages.success),\n          content: _this2.props.intl.formatMessage(messages.addonInstalled, {\n            title: _this2.props.title\n          }),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 11\n          }\n        }));\n      })[\"catch\"](function () {\n        toast.error(__jsx(Toast, {\n          error: true,\n          title: _this2.props.intl.formatMessage(messages.error),\n          content: _this2.props.intl.formatMessage(messages.addonNotInstalled),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 11\n          }\n        }));\n      })[\"finally\"](function () {\n        return _this2.props.listAddons();\n      });\n    }\n\n    /**\n     * Uninstall handler\n     * @method onUninstall\n     * @param {Object} event Event object.\n     * @param {string} value Id of package to uninstall.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onUninstall\",\n    value: function onUninstall(event, _ref2) {\n      var _this3 = this;\n      var value = _ref2.value;\n      event.preventDefault();\n      this.props.uninstallAddon(value).then(function () {\n        toast.success(__jsx(Toast, {\n          success: true,\n          title: _this3.props.intl.formatMessage(messages.success),\n          content: _this3.props.intl.formatMessage(messages.addonUninstalled),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 11\n          }\n        }));\n      })[\"catch\"](function () {\n        toast.error(__jsx(Toast, {\n          error: true,\n          title: _this3.props.intl.formatMessage(messages.error),\n          content: _this3.props.intl.formatMessage(messages.addonNotUninstalled, {\n            title: _this3.props.title\n          }),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 11\n          }\n        }));\n      })[\"finally\"](function () {\n        return _this3.props.listAddons();\n      });\n    }\n\n    /**\n     * Unpgrade handler\n     * @method onUpgrade\n     * @param {Object} event Event object.\n     * @param {string} value Id of package to update.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onUpgrade\",\n    value: function onUpgrade(event, _ref3) {\n      var _this4 = this;\n      var value = _ref3.value;\n      event.preventDefault();\n      this.props.upgradeAddon(value).then(function () {\n        toast.success(__jsx(Toast, {\n          success: true,\n          title: _this4.props.intl.formatMessage(messages.success),\n          content: _this4.props.intl.formatMessage(messages.addonUpgraded),\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 11\n          }\n        }));\n      })[\"catch\"](function () {\n        toast.error(__jsx(Toast, {\n          error: true,\n          title: _this4.props.intl.formatMessage(messages.error),\n          content: _this4.props.intl.formatMessage(messages.addonNotUpgraded),\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 11\n          }\n        }));\n      })[\"finally\"](function () {\n        return _this4.props.listAddons();\n      });\n    }\n\n    /**\n     * On accordion click handler\n     * @method onAccordionClick\n     * @param {object} event Event object.\n     * @param {object} index Index of the accordion element being clicked\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onAccordionClick\",\n    value: function onAccordionClick(event, item) {\n      var activeIndex = this.state.activeIndex;\n      var newIndex = activeIndex === item.index ? -1 : item.index;\n      this.setState({\n        activeIndex: newIndex\n      });\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n      return __jsx(Container, {\n        id: \"page-addons\",\n        className: \"controlpanel-addons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 7\n        }\n      }, __jsx(Helmet, {\n        title: this.props.intl.formatMessage(messages.addOns),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 9\n        }\n      }), __jsx(Segment.Group, {\n        raised: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 9\n        }\n      }, __jsx(Segment, {\n        className: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Add-ons Settings\",\n        defaultMessage: \"Add-ons Settings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }\n      })), this.props.loadingAddons ? __jsx(Dimmer, {\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }\n      }, __jsx(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 15\n        }\n      })) : __jsx(React.Fragment, null, this.props.upgradableAddons.length > 0 && __jsx(Message, {\n        attached: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 17\n        }\n      }, __jsx(Message.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Updates available\",\n        defaultMessage: \"Updates available\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }\n      })), __jsx(FormattedMessage, {\n        id: \"Update installed addons\",\n        defaultMessage: \"Update installed addons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 19\n        }\n      })), __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 15\n        }\n      }, __jsx(Header, {\n        as: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 17\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Activate and deactivate\",\n        defaultMessage: \"Activate and deactivate add-ons in the lists below.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 19\n        }\n      })), __jsx(FormattedMessage, {\n        id: \"Add Addons\",\n        defaultMessage: \"To make new add-ons show up here, add them to your buildout configuration, run buildout, and restart the server process. For detailed instructions see\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 17\n        }\n      }), \"\\xA0\", __jsx(\"a\", {\n        href: \"http://docs.plone.org/manage/installing/installing_addons.html\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 17\n        }\n      }, this.props.intl.formatMessage(messages.installingAnAddon)), \".\"), __jsx(Segment, {\n        key: \"header-available\",\n        secondary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 15\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Available\",\n        defaultMessage: \"Available\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 17\n        }\n      }), \":\", __jsx(Label, {\n        circular: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 17\n        }\n      }, this.props.availableAddons.length)), __jsx(Segment, {\n        key: \"body-available\",\n        attached: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 15\n        }\n      }, __jsx(Accordion, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 17\n        }\n      }, __jsx(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 19\n        }\n      }), this.props.availableAddons.map(function (item) {\n        return __jsx(\"div\", {\n          key: item.id,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 21\n          }\n        }, __jsx(Accordion.Title, {\n          active: _this5.state.activeIndex === item.id,\n          index: item.id,\n          onClick: _this5.onAccordionClick,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 23\n          }\n        }, item.title, __jsx(Icon, {\n          name: _this5.state.activeIndex === item.id ? circleTopSVG : circleBottomSVG,\n          size: \"23px\",\n          className: \"accordionToggle \".concat(item.title),\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 25\n          }\n        })), __jsx(Accordion.Content, {\n          active: _this5.state.activeIndex === item.id,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 23\n          }\n        }, __jsx(\"div\", {\n          className: \"description\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 25\n          }\n        }, item.description), item.uninstall_profile_id === '' && __jsx(\"div\", {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 27\n          }\n        }, __jsx(Message, {\n          icon: \"warning\",\n          warning: true,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 29\n          }\n        }, __jsx(FormattedMessage, {\n          id: \"No uninstall profile\",\n          defaultMessage: \"This addon does not provide an uninstall profile.\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 31\n          }\n        }))), __jsx(Button.Group, {\n          floated: \"right\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 25\n          }\n        }, __jsx(Button, {\n          primary: true,\n          onClick: _this5.onInstall,\n          value: item.id,\n          className: \"installAction\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 27\n          }\n        }, __jsx(FormattedMessage, {\n          id: \"Install\",\n          defaultMessage: \"Install\",\n          className: \"button-label\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 29\n          }\n        }))), __jsx(\"div\", {\n          className: \"version\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 25\n          }\n        }, __jsx(FormattedMessage, {\n          id: \"Latest version\",\n          defaultMessage: \"Latest version\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 27\n          }\n        }), \": \\xA0\", item.version)), __jsx(Divider, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 23\n          }\n        }));\n      }))), __jsx(Segment, {\n        key: \"header-installed\",\n        secondary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 15\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Installed\",\n        defaultMessage: \"Installed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 17\n        }\n      }), \":\", __jsx(Label, {\n        circular: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 17\n        }\n      }, this.props.installedAddons.length)), __jsx(Segment, {\n        key: \"body-installed\",\n        attached: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 15\n        }\n      }, __jsx(Accordion, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 17\n        }\n      }, __jsx(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 19\n        }\n      }), this.props.installedAddons.map(function (item) {\n        return __jsx(\"div\", {\n          key: item.id,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 21\n          }\n        }, __jsx(Accordion.Title, {\n          active: _this5.state.activeIndex === item.id,\n          index: item.id,\n          onClick: _this5.onAccordionClick,\n          className: item.upgrade_info.available ? 'updateAvailable' : '',\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 23\n          }\n        }, item.title, item.upgrade_info.available && __jsx(Label, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 27\n          }\n        }, __jsx(FormattedMessage, {\n          id: \"Update\",\n          defaultMessage: \"Update\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 29\n          }\n        })), __jsx(Icon, {\n          name: _this5.state.activeIndex === item.id ? circleTopSVG : circleBottomSVG,\n          size: \"24px\",\n          className: \"accordionToggle \".concat(item.title),\n          color: \"#878f93\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 25\n          }\n        })), __jsx(Accordion.Content, {\n          active: _this5.state.activeIndex === item.id,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 23\n          }\n        }, __jsx(\"div\", {\n          className: \"description\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 25\n          }\n        }, item.description), __jsx(Button.Group, {\n          floated: \"right\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 25\n          }\n        }, item.upgrade_info.available && __jsx(Button, {\n          primary: true,\n          onClick: _this5.onUpgrade,\n          value: item.id,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 29\n          }\n        }, __jsx(FormattedMessage, {\n          id: \"upgradeVersions\",\n          defaultMessage: \"Update from version {origin} to {destination}\",\n          values: {\n            origin: item.upgrade_info.installedVersion,\n            destination: item.upgrade_info.newVersion\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 31\n          }\n        })), item.uninstall_profile_id && __jsx(Button, {\n          negative: true,\n          onClick: _this5.onUninstall,\n          value: item.id,\n          className: \"uninstallAction\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 29\n          }\n        }, __jsx(FormattedMessage, {\n          id: \"Uninstall\",\n          defaultMessage: \"Uninstall\",\n          className: \"button-label\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 31\n          }\n        }))), __jsx(\"div\", {\n          className: \"version\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 25\n          }\n        }, __jsx(FormattedMessage, {\n          id: \"Installed version\",\n          defaultMessage: \"Installed version\",\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 27\n          }\n        }), \": \\xA0 \", item.version)), __jsx(Divider, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 23\n          }\n        }));\n      }))))), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(React.Fragment, null, __jsx(Link, {\n          to: \"/controlpanel\",\n          className: \"item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 19\n          }\n        }, __jsx(Icon, {\n          name: backSVG,\n          \"aria-label\": this.props.intl.formatMessage(messages.back),\n          className: \"contents circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.back),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 21\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return AddonsControlpanel;\n}(Component);\n_defineProperty(AddonsControlpanel, \"propTypes\", {\n  listAddons: PropTypes.func.isRequired,\n  installAddon: PropTypes.func.isRequired,\n  uninstallAddon: PropTypes.func.isRequired,\n  installedAddons: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    id: PropTypes.string,\n    title: PropTypes.string,\n    version: PropTypes.string,\n    description: PropTypes.string,\n    uninstall_profile_id: PropTypes.string,\n    upgrade_info: PropTypes.shape({\n      available: PropTypes[\"boolean\"]\n    })\n  })).isRequired,\n  availableAddons: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    id: PropTypes.string,\n    title: PropTypes.string,\n    version: PropTypes.string,\n    description: PropTypes.string,\n    uninstall_profile_id: PropTypes.string,\n    upgrade_info: PropTypes.shape({\n      available: PropTypes[\"boolean\"]\n    })\n  })).isRequired,\n  upgradableAddons: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    id: PropTypes.string,\n    title: PropTypes.string,\n    version: PropTypes.string,\n    description: PropTypes.string,\n    uninstall_profile_id: PropTypes.string,\n    upgrade_info: PropTypes.shape({\n      available: PropTypes[\"boolean\"]\n    })\n  })).isRequired\n});\nexport default compose(injectIntl, connect(function (state, props) {\n  return {\n    installedAddons: state.addons.installedAddons,\n    availableAddons: state.addons.availableAddons,\n    upgradableAddons: state.addons.upgradableAddons,\n    loadingAddons: state.addons.loading,\n    pathname: props.location.pathname\n  };\n}, {\n  installAddon: installAddon,\n  listAddons: listAddons,\n  uninstallAddon: uninstallAddon,\n  upgradeAddon: upgradeAddon\n}))(AddonsControlpanel);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","Portal","Accordion","Button","Container","Divider","Header","Label","Message","Segment","Dimmer","Loader","FormattedMessage","defineMessages","injectIntl","installAddon","listAddons","uninstallAddon","upgradeAddon","Helmet","Icon","Toolbar","Toast","circleBottomSVG","circleTopSVG","backSVG","toast","messages","activateAndDeactivate","addAddons","addonsSettings","available","availableVersion","back","installed","installedVersion","noUninstallProfile","update","updatesAvailable","updateInstalledAddons","uninstall","addOns","installingAnAddon","success","error","addonUpgraded","addonNotUpgraded","addonInstalled","addonNotInstalled","addonUninstalled","addonNotUninstalled","AddonsControlpanel","props","onAccordionClick","bind","onInstall","onUninstall","onUpgrade","state","activeIndex","installedAddons","availableAddons","upgradableAddons","isClient","setState","event","value","preventDefault","then","intl","formatMessage","title","item","newIndex","index","loadingAddons","length","map","id","description","uninstall_profile_id","version","upgrade_info","origin","destination","newVersion","document","getElementById","pathname","func","isRequired","arrayOf","shape","string","addons","loading","location"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/AddonsControlpanel.jsx"],"sourcesContent":["/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/AddonsControlpanel\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport {\n  Accordion,\n  Button,\n  Container,\n  Divider,\n  Header,\n  Label,\n  Message,\n  Segment,\n  Dimmer,\n  Loader,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport {\n  installAddon,\n  listAddons,\n  uninstallAddon,\n  upgradeAddon,\n} from '@plone/volto/actions';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Icon, Toolbar, Toast } from '@plone/volto/components';\nimport circleBottomSVG from '@plone/volto/icons/circle-bottom.svg';\nimport circleTopSVG from '@plone/volto/icons/circle-top.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport { toast } from 'react-toastify';\n\nconst messages = defineMessages({\n  activateAndDeactivate: {\n    id: 'Activate and deactivate',\n    defaultMessage: 'Activate and deactivate add-ons in the lists below.',\n  },\n  addAddons: {\n    id: 'Add Addons',\n    defaultMessage:\n      'To make new add-ons show up here, add them to your buildout configuration, run buildout, and restart the server process. For detailed instructions see',\n  },\n  addonsSettings: {\n    id: 'Add-ons Settings',\n    defaultMessage: 'Add-ons Settings',\n  },\n  available: {\n    id: 'Available',\n    defaultMessage: 'Available',\n  },\n  availableVersion: {\n    id: 'Latest version',\n    defaultMessage: 'Latest version',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  installed: {\n    id: 'Installed',\n    defaultMessage: 'Installed',\n  },\n  installedVersion: {\n    id: 'Installed version',\n    defaultMessage: 'Installed version',\n  },\n  noUninstallProfile: {\n    id: 'No uninstall profile',\n    defaultMessage: 'This addon does not provide an uninstall profile.',\n  },\n  update: {\n    id: 'Update',\n    defaultMessage: 'Update',\n  },\n  updatesAvailable: {\n    id: 'Updates available',\n    defaultMessage: 'Updates available',\n  },\n  updateInstalledAddons: {\n    id: 'Update installed addons:',\n    defaultMessage: 'Update installed addons:',\n  },\n  uninstall: {\n    id: 'Uninstall',\n    defaultMessage: 'Uninstall',\n  },\n  addOns: {\n    id: 'Add-ons',\n    defaultMessage: 'Add-ons',\n  },\n  installingAnAddon: {\n    id: 'Installing a third party add-on',\n    defaultMessage: 'Installing a third party add-on',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  addonUpgraded: {\n    id: 'Addon upgraded succesfuly',\n    defaultMessage: 'Addon upgraded succesfuly',\n  },\n  addonNotUpgraded: {\n    id: 'Addon could not be upgraded',\n    defaultMessage: 'Addon could not be upgraded',\n  },\n  addonInstalled: {\n    id: 'Addon installed succesfuly',\n    defaultMessage: 'Addon installed succesfuly',\n  },\n  addonNotInstalled: {\n    id: 'Addon could not be installed',\n    defaultMessage: 'Addon could not be installed',\n  },\n  addonUninstalled: {\n    id: 'Addon uninstalled succesfuly',\n    defaultMessage: 'Addon uninstalled succesfuly',\n  },\n  addonNotUninstalled: {\n    id: 'Addon could not be uninstalled',\n    defaultMessage: 'Addon could not be uninstalled',\n  },\n});\n\n/**\n * AddonsControlpanel class.\n * @class AddonsControlpanel\n * @extends Component\n */\nclass AddonsControlpanel extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    listAddons: PropTypes.func.isRequired,\n    installAddon: PropTypes.func.isRequired,\n    uninstallAddon: PropTypes.func.isRequired,\n    installedAddons: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        id: PropTypes.string,\n        title: PropTypes.string,\n        version: PropTypes.string,\n        description: PropTypes.string,\n        uninstall_profile_id: PropTypes.string,\n        upgrade_info: PropTypes.shape({\n          available: PropTypes.boolean,\n        }),\n      }),\n    ).isRequired,\n    availableAddons: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        id: PropTypes.string,\n        title: PropTypes.string,\n        version: PropTypes.string,\n        description: PropTypes.string,\n        uninstall_profile_id: PropTypes.string,\n        upgrade_info: PropTypes.shape({\n          available: PropTypes.boolean,\n        }),\n      }),\n    ).isRequired,\n    upgradableAddons: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        id: PropTypes.string,\n        title: PropTypes.string,\n        version: PropTypes.string,\n        description: PropTypes.string,\n        uninstall_profile_id: PropTypes.string,\n        upgrade_info: PropTypes.shape({\n          available: PropTypes.boolean,\n        }),\n      }),\n    ).isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onAccordionClick = this.onAccordionClick.bind(this);\n    this.onInstall = this.onInstall.bind(this);\n    this.onUninstall = this.onUninstall.bind(this);\n    this.onUpgrade = this.onUpgrade.bind(this);\n    this.state = {\n      activeIndex: -1,\n      installedAddons: [],\n      availableAddons: [],\n      upgradableAddons: [],\n      isClient: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.listAddons();\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Install handler\n   * @method onInstall\n   * @param {Object} event Event object.\n   * @param {string} value Id of package to install.\n   * @returns {undefined}\n   */\n  onInstall(event, { value }) {\n    event.preventDefault();\n    this.props\n      .installAddon(value)\n      .then(() => {\n        toast.success(\n          <Toast\n            success\n            title={this.props.intl.formatMessage(messages.success)}\n            content={this.props.intl.formatMessage(messages.addonInstalled, {\n              title: this.props.title,\n            })}\n          />,\n        );\n      })\n      .catch(() => {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.error)}\n            content={this.props.intl.formatMessage(messages.addonNotInstalled)}\n          />,\n        );\n      })\n      .finally(() => this.props.listAddons());\n  }\n\n  /**\n   * Uninstall handler\n   * @method onUninstall\n   * @param {Object} event Event object.\n   * @param {string} value Id of package to uninstall.\n   * @returns {undefined}\n   */\n  onUninstall(event, { value }) {\n    event.preventDefault();\n    this.props\n      .uninstallAddon(value)\n      .then(() => {\n        toast.success(\n          <Toast\n            success\n            title={this.props.intl.formatMessage(messages.success)}\n            content={this.props.intl.formatMessage(messages.addonUninstalled)}\n          />,\n        );\n      })\n      .catch(() => {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.error)}\n            content={this.props.intl.formatMessage(\n              messages.addonNotUninstalled,\n              {\n                title: this.props.title,\n              },\n            )}\n          />,\n        );\n      })\n      .finally(() => this.props.listAddons());\n  }\n\n  /**\n   * Unpgrade handler\n   * @method onUpgrade\n   * @param {Object} event Event object.\n   * @param {string} value Id of package to update.\n   * @returns {undefined}\n   */\n  onUpgrade(event, { value }) {\n    event.preventDefault();\n    this.props\n      .upgradeAddon(value)\n      .then(() => {\n        toast.success(\n          <Toast\n            success\n            title={this.props.intl.formatMessage(messages.success)}\n            content={this.props.intl.formatMessage(messages.addonUpgraded)}\n          />,\n        );\n      })\n      .catch(() => {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.error)}\n            content={this.props.intl.formatMessage(messages.addonNotUpgraded)}\n          />,\n        );\n      })\n      .finally(() => this.props.listAddons());\n  }\n\n  /**\n   * On accordion click handler\n   * @method onAccordionClick\n   * @param {object} event Event object.\n   * @param {object} index Index of the accordion element being clicked\n   * @returns {undefined}\n   */\n  onAccordionClick(event, item) {\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === item.index ? -1 : item.index;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Container id=\"page-addons\" className=\"controlpanel-addons\">\n        <Helmet title={this.props.intl.formatMessage(messages.addOns)} />\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage\n              id=\"Add-ons Settings\"\n              defaultMessage=\"Add-ons Settings\"\n            />\n          </Segment>\n\n          {this.props.loadingAddons ? (\n            <Dimmer active>\n              <Loader />\n            </Dimmer>\n          ) : (\n            <>\n              {this.props.upgradableAddons.length > 0 && (\n                <Message attached>\n                  <Message.Header>\n                    <FormattedMessage\n                      id=\"Updates available\"\n                      defaultMessage=\"Updates available\"\n                    />\n                  </Message.Header>\n                  <FormattedMessage\n                    id=\"Update installed addons\"\n                    defaultMessage=\"Update installed addons\"\n                  />\n                </Message>\n              )}\n              <Segment>\n                <Header as=\"h3\">\n                  <FormattedMessage\n                    id=\"Activate and deactivate\"\n                    defaultMessage=\"Activate and deactivate add-ons in the lists below.\"\n                  />\n                </Header>\n                <FormattedMessage\n                  id=\"Add Addons\"\n                  defaultMessage=\"To make new add-ons show up here, add them to your buildout configuration, run buildout, and restart the server process. For detailed instructions see\"\n                />\n                &nbsp;\n                <a\n                  href=\"http://docs.plone.org/manage/installing/installing_addons.html\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {this.props.intl.formatMessage(messages.installingAnAddon)}\n                </a>\n                .\n              </Segment>\n              <Segment key=\"header-available\" secondary>\n                <FormattedMessage id=\"Available\" defaultMessage=\"Available\" />:\n                <Label circular>{this.props.availableAddons.length}</Label>\n              </Segment>\n              <Segment key=\"body-available\" attached>\n                <Accordion>\n                  <Divider />\n                  {this.props.availableAddons.map((item) => (\n                    <div key={item.id}>\n                      <Accordion.Title\n                        active={this.state.activeIndex === item.id}\n                        index={item.id}\n                        onClick={this.onAccordionClick}\n                      >\n                        {item.title}\n                        <Icon\n                          name={\n                            this.state.activeIndex === item.id\n                              ? circleTopSVG\n                              : circleBottomSVG\n                          }\n                          size=\"23px\"\n                          className={`accordionToggle ${item.title}`}\n                        />\n                      </Accordion.Title>\n                      <Accordion.Content\n                        active={this.state.activeIndex === item.id}\n                      >\n                        <div className=\"description\">{item.description}</div>\n                        {item.uninstall_profile_id === '' && (\n                          <div>\n                            <Message icon=\"warning\" warning>\n                              <FormattedMessage\n                                id=\"No uninstall profile\"\n                                defaultMessage=\"This addon does not provide an uninstall profile.\"\n                              />\n                            </Message>\n                          </div>\n                        )}\n                        <Button.Group floated=\"right\">\n                          <Button\n                            primary\n                            onClick={this.onInstall}\n                            value={item.id}\n                            className=\"installAction\"\n                          >\n                            <FormattedMessage\n                              id=\"Install\"\n                              defaultMessage=\"Install\"\n                              className=\"button-label\"\n                            />\n                          </Button>\n                        </Button.Group>\n                        <div className=\"version\">\n                          <FormattedMessage\n                            id=\"Latest version\"\n                            defaultMessage=\"Latest version\"\n                          />\n                          : &nbsp;\n                          {item.version}\n                        </div>\n                      </Accordion.Content>\n                      <Divider />\n                    </div>\n                  ))}\n                </Accordion>\n              </Segment>\n              <Segment key=\"header-installed\" secondary>\n                <FormattedMessage id=\"Installed\" defaultMessage=\"Installed\" />:\n                <Label circular>{this.props.installedAddons.length}</Label>\n              </Segment>\n              <Segment key=\"body-installed\" attached>\n                <Accordion>\n                  <Divider />\n                  {this.props.installedAddons.map((item) => (\n                    <div key={item.id}>\n                      <Accordion.Title\n                        active={this.state.activeIndex === item.id}\n                        index={item.id}\n                        onClick={this.onAccordionClick}\n                        className={\n                          item.upgrade_info.available ? 'updateAvailable' : ''\n                        }\n                      >\n                        {item.title}\n\n                        {item.upgrade_info.available && (\n                          <Label>\n                            <FormattedMessage\n                              id=\"Update\"\n                              defaultMessage=\"Update\"\n                            />\n                          </Label>\n                        )}\n                        <Icon\n                          name={\n                            this.state.activeIndex === item.id\n                              ? circleTopSVG\n                              : circleBottomSVG\n                          }\n                          size=\"24px\"\n                          className={`accordionToggle ${item.title}`}\n                          color=\"#878f93\"\n                        />\n                      </Accordion.Title>\n                      <Accordion.Content\n                        active={this.state.activeIndex === item.id}\n                      >\n                        <div className=\"description\">{item.description}</div>\n                        <Button.Group floated=\"right\">\n                          {item.upgrade_info.available && (\n                            <Button\n                              primary\n                              onClick={this.onUpgrade}\n                              value={item.id}\n                            >\n                              <FormattedMessage\n                                id=\"upgradeVersions\"\n                                defaultMessage=\"Update from version {origin} to {destination}\"\n                                values={{\n                                  origin: item.upgrade_info.installedVersion,\n                                  destination: item.upgrade_info.newVersion,\n                                }}\n                              />\n                            </Button>\n                          )}\n                          {item.uninstall_profile_id && (\n                            <Button\n                              negative\n                              onClick={this.onUninstall}\n                              value={item.id}\n                              className=\"uninstallAction\"\n                            >\n                              <FormattedMessage\n                                id=\"Uninstall\"\n                                defaultMessage=\"Uninstall\"\n                                className=\"button-label\"\n                              />\n                            </Button>\n                          )}\n                        </Button.Group>\n                        <div className=\"version\">\n                          <FormattedMessage\n                            id=\"Installed version\"\n                            defaultMessage=\"Installed version\"\n                          />\n                          : &nbsp; {item.version}\n                        </div>\n                      </Accordion.Content>\n                      <Divider />\n                    </div>\n                  ))}\n                </Accordion>\n              </Segment>\n            </>\n          )}\n        </Segment.Group>\n\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Link to=\"/controlpanel\" className=\"item\">\n                    <Icon\n                      name={backSVG}\n                      aria-label={this.props.intl.formatMessage(messages.back)}\n                      className=\"contents circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.back)}\n                    />\n                  </Link>\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      installedAddons: state.addons.installedAddons,\n      availableAddons: state.addons.availableAddons,\n      upgradableAddons: state.addons.upgradableAddons,\n      loadingAddons: state.addons.loading,\n      pathname: props.location.pathname,\n    }),\n    { installAddon, listAddons, uninstallAddon, upgradeAddon },\n  ),\n)(AddonsControlpanel);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Activate and deactivate","defaultMessage":"Activate and deactivate add-ons in the lists below."},{"id":"Add Addons","defaultMessage":"To make new add-ons show up here, add them to your buildout configuration, run buildout, and restart the server process. For detailed instructions see"},{"id":"Add-ons Settings","defaultMessage":"Add-ons Settings"},{"id":"Available","defaultMessage":"Available"},{"id":"Latest version","defaultMessage":"Latest version"},{"id":"Back","defaultMessage":"Back"},{"id":"Installed","defaultMessage":"Installed"},{"id":"Installed version","defaultMessage":"Installed version"},{"id":"No uninstall profile","defaultMessage":"This addon does not provide an uninstall profile."},{"id":"Update","defaultMessage":"Update"},{"id":"Updates available","defaultMessage":"Updates available"},{"id":"Update installed addons:","defaultMessage":"Update installed addons:"},{"id":"Uninstall","defaultMessage":"Uninstall"},{"id":"Add-ons","defaultMessage":"Add-ons"},{"id":"Installing a third party add-on","defaultMessage":"Installing a third party add-on"},{"id":"Success","defaultMessage":"Success"},{"id":"Error","defaultMessage":"Error"},{"id":"Addon upgraded succesfuly","defaultMessage":"Addon upgraded succesfuly"},{"id":"Addon could not be upgraded","defaultMessage":"Addon could not be upgraded"},{"id":"Addon installed succesfuly","defaultMessage":"Addon installed succesfuly"},{"id":"Addon could not be installed","defaultMessage":"Addon could not be installed"},{"id":"Addon uninstalled succesfuly","defaultMessage":"Addon uninstalled succesfuly"},{"id":"Addon could not be uninstalled","defaultMessage":"Addon could not be uninstalled"},{"id":"Update installed addons","defaultMessage":"Update installed addons"},{"id":"Install","defaultMessage":"Install"},{"id":"upgradeVersions","defaultMessage":"Update from version {origin} to {destination}"}]}},"sourceType":"module","externalDependencies":[]}