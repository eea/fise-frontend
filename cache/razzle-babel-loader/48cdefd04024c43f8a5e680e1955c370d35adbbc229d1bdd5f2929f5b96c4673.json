{"ast":null,"code":"import _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { isPlainObject } from 'is-plain-object';\nimport { Range, Node, Text, Element, createEditor as createEditor$1 } from 'slate';\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\r\n * A weak map to hold anchor tokens.\r\n */\nvar ANCHOR = new WeakMap();\n/**\r\n * A weak map to hold focus tokens.\r\n */\n\nvar FOCUS = new WeakMap();\n/**\r\n * All tokens inherit from a single constructor for `instanceof` checking.\r\n */\nvar Token = /*#__PURE__*/_createClass(function Token() {\n  _classCallCheck(this, Token);\n});\n/**\r\n * Anchor tokens represent the selection's anchor point.\r\n */\nvar AnchorToken = /*#__PURE__*/function (_Token) {\n  _inherits(AnchorToken, _Token);\n  var _super = _createSuper(AnchorToken);\n  function AnchorToken() {\n    var _this;\n    _classCallCheck(this, AnchorToken);\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _this = _super.call(this);\n    var offset = props.offset,\n      path = props.path;\n    _this.offset = offset;\n    _this.path = path;\n    return _this;\n  }\n  return _createClass(AnchorToken);\n}(Token);\n/**\r\n * Focus tokens represent the selection's focus point.\r\n */\nvar FocusToken = /*#__PURE__*/function (_Token2) {\n  _inherits(FocusToken, _Token2);\n  var _super2 = _createSuper(FocusToken);\n  function FocusToken() {\n    var _this2;\n    _classCallCheck(this, FocusToken);\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _this2 = _super2.call(this);\n    var offset = props.offset,\n      path = props.path;\n    _this2.offset = offset;\n    _this2.path = path;\n    return _this2;\n  }\n  return _createClass(FocusToken);\n}(Token);\n/**\r\n * Add an anchor token to the end of a text node.\r\n */\nvar addAnchorToken = function addAnchorToken(text, token) {\n  var offset = text.text.length;\n  ANCHOR.set(text, [offset, token]);\n};\n/**\r\n * Get the offset if a text node has an associated anchor token.\r\n */\n\nvar getAnchorOffset = function getAnchorOffset(text) {\n  return ANCHOR.get(text);\n};\n/**\r\n * Add a focus token to the end of a text node.\r\n */\n\nvar addFocusToken = function addFocusToken(text, token) {\n  var offset = text.text.length;\n  FOCUS.set(text, [offset, token]);\n};\n/**\r\n * Get the offset if a text node has an associated focus token.\r\n */\n\nvar getFocusOffset = function getFocusOffset(text) {\n  return FOCUS.get(text);\n};\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys$1(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$1(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n/**\r\n * Resolve the descedants of a node by normalizing the children that can be\r\n * passed into a hyperscript creator function.\r\n */\n\nvar STRINGS = new WeakSet();\nvar resolveDescendants = function resolveDescendants(children) {\n  var nodes = [];\n  var addChild = function addChild(child) {\n    if (child == null) {\n      return;\n    }\n    var prev = nodes[nodes.length - 1];\n    if (typeof child === 'string') {\n      var text = {\n        text: child\n      };\n      STRINGS.add(text);\n      child = text;\n    }\n    if (Text.isText(child)) {\n      var c = child; // HACK: fix typescript complaining\n\n      if (Text.isText(prev) && STRINGS.has(prev) && STRINGS.has(c) && Text.equals(prev, c, {\n        loose: true\n      })) {\n        prev.text += c.text;\n      } else {\n        nodes.push(c);\n      }\n    } else if (Element.isElement(child)) {\n      nodes.push(child);\n    } else if (child instanceof Token) {\n      var n = nodes[nodes.length - 1];\n      if (!Text.isText(n)) {\n        addChild('');\n        n = nodes[nodes.length - 1];\n      }\n      if (child instanceof AnchorToken) {\n        addAnchorToken(n, child);\n      } else if (child instanceof FocusToken) {\n        addFocusToken(n, child);\n      }\n    } else {\n      throw new Error(\"Unexpected hyperscript child object: \".concat(child));\n    }\n  };\n  var _iterator = _createForOfIteratorHelper(children.flat(Infinity)),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var child = _step.value;\n      addChild(child);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return nodes;\n};\n/**\r\n * Create an anchor token.\r\n */\n\nfunction createAnchor(tagName, attributes, children) {\n  return new AnchorToken(attributes);\n}\n/**\r\n * Create an anchor and a focus token.\r\n */\n\nfunction createCursor(tagName, attributes, children) {\n  return [new AnchorToken(attributes), new FocusToken(attributes)];\n}\n/**\r\n * Create an `Element` object.\r\n */\n\nfunction createElement(tagName, attributes, children) {\n  return _objectSpread$1(_objectSpread$1({}, attributes), {}, {\n    children: resolveDescendants(children)\n  });\n}\n/**\r\n * Create a focus token.\r\n */\n\nfunction createFocus(tagName, attributes, children) {\n  return new FocusToken(attributes);\n}\n/**\r\n * Create a fragment.\r\n */\n\nfunction createFragment(tagName, attributes, children) {\n  return resolveDescendants(children);\n}\n/**\r\n * Create a `Selection` object.\r\n */\n\nfunction createSelection(tagName, attributes, children) {\n  var anchor = children.find(function (c) {\n    return c instanceof AnchorToken;\n  });\n  var focus = children.find(function (c) {\n    return c instanceof FocusToken;\n  });\n  if (!anchor || anchor.offset == null || anchor.path == null) {\n    throw new Error(\"The <selection> hyperscript tag must have an <anchor> tag as a child with `path` and `offset` attributes defined.\");\n  }\n  if (!focus || focus.offset == null || focus.path == null) {\n    throw new Error(\"The <selection> hyperscript tag must have a <focus> tag as a child with `path` and `offset` attributes defined.\");\n  }\n  return _objectSpread$1({\n    anchor: {\n      offset: anchor.offset,\n      path: anchor.path\n    },\n    focus: {\n      offset: focus.offset,\n      path: focus.path\n    }\n  }, attributes);\n}\n/**\r\n * Create a `Text` object.\r\n */\n\nfunction createText(tagName, attributes, children) {\n  var nodes = resolveDescendants(children);\n  if (nodes.length > 1) {\n    throw new Error(\"The <text> hyperscript tag must only contain a single node's worth of children.\");\n  }\n  var _nodes = _slicedToArray(nodes, 1),\n    node = _nodes[0];\n  if (node == null) {\n    node = {\n      text: ''\n    };\n  }\n  if (!Text.isText(node)) {\n    throw new Error(\"\\n    The <text> hyperscript tag can only contain text content as children.\");\n  } // COMPAT: If they used the <text> tag we want to guarantee that it won't be\n  // merge with other string children.\n\n  STRINGS[\"delete\"](node);\n  Object.assign(node, attributes);\n  return node;\n}\n/**\r\n * Create a top-level `Editor` object.\r\n */\n\nvar createEditor = function createEditor(makeEditor) {\n  return function (tagName, attributes, children) {\n    var otherChildren = [];\n    var selectionChild;\n    var _iterator2 = _createForOfIteratorHelper(children),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var child = _step2.value;\n        if (Range.isRange(child)) {\n          selectionChild = child;\n        } else {\n          otherChildren.push(child);\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    var descendants = resolveDescendants(otherChildren);\n    var selection = {};\n    var editor = makeEditor();\n    Object.assign(editor, attributes);\n    editor.children = descendants; // Search the document's texts to see if any of them have tokens associated\n    // that need incorporated into the selection.\n    var _iterator3 = _createForOfIteratorHelper(Node.texts(editor)),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _step3$value = _slicedToArray(_step3.value, 2),\n          node = _step3$value[0],\n          path = _step3$value[1];\n        var anchor = getAnchorOffset(node);\n        var focus = getFocusOffset(node);\n        if (anchor != null) {\n          var _anchor = anchor,\n            _anchor2 = _slicedToArray(_anchor, 1),\n            offset = _anchor2[0];\n          selection.anchor = {\n            path: path,\n            offset: offset\n          };\n        }\n        if (focus != null) {\n          var _focus = focus,\n            _focus2 = _slicedToArray(_focus, 1),\n            _offset = _focus2[0];\n          selection.focus = {\n            path: path,\n            offset: _offset\n          };\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    if (selection.anchor && !selection.focus) {\n      throw new Error(\"Slate hyperscript ranges must have both `<anchor />` and `<focus />` defined if one is defined, but you only defined `<anchor />`. For collapsed selections, use `<cursor />` instead.\");\n    }\n    if (!selection.anchor && selection.focus) {\n      throw new Error(\"Slate hyperscript ranges must have both `<anchor />` and `<focus />` defined if one is defined, but you only defined `<focus />`. For collapsed selections, use `<cursor />` instead.\");\n    }\n    if (selectionChild != null) {\n      editor.selection = selectionChild;\n    } else if (Range.isRange(selection)) {\n      editor.selection = selection;\n    }\n    return editor;\n  };\n};\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n/**\r\n * The default creators for Slate objects.\r\n */\n\nvar DEFAULT_CREATORS = {\n  anchor: createAnchor,\n  cursor: createCursor,\n  editor: createEditor(createEditor$1),\n  element: createElement,\n  focus: createFocus,\n  fragment: createFragment,\n  selection: createSelection,\n  text: createText\n};\n/**\r\n * Create a Slate hyperscript function with `options`.\r\n */\n\nvar createHyperscript = function createHyperscript() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$elements = options.elements,\n    elements = _options$elements === void 0 ? {} : _options$elements;\n  var elementCreators = normalizeElements(elements);\n  var creators = _objectSpread(_objectSpread(_objectSpread({}, DEFAULT_CREATORS), elementCreators), options.creators);\n  var jsx = createFactory(creators);\n  return jsx;\n};\n/**\r\n * Create a Slate hyperscript function with `options`.\r\n */\n\nvar createFactory = function createFactory(creators) {\n  var jsx = function jsx(tagName, attributes) {\n    for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      children[_key - 2] = arguments[_key];\n    }\n    var creator = creators[tagName];\n    if (!creator) {\n      throw new Error(\"No hyperscript creator found for tag: <\".concat(tagName, \">\"));\n    }\n    if (attributes == null) {\n      attributes = {};\n    }\n    if (!isPlainObject(attributes)) {\n      children = [attributes].concat(children);\n      attributes = {};\n    }\n    children = children.filter(function (child) {\n      return Boolean(child);\n    }).flat();\n    var ret = creator(tagName, attributes, children);\n    return ret;\n  };\n  return jsx;\n};\n/**\r\n * Normalize a dictionary of element shorthands into creator functions.\r\n */\n\nvar normalizeElements = function normalizeElements(elements) {\n  var creators = {};\n  var _loop = function _loop(tagName) {\n    var props = elements[tagName];\n    if (typeof props !== 'object') {\n      throw new Error(\"Properties specified for a hyperscript shorthand should be an object, but for the custom element <\".concat(tagName, \">  tag you passed: \").concat(props));\n    }\n    creators[tagName] = function (tagName, attributes, children) {\n      return createElement('element', _objectSpread(_objectSpread({}, props), attributes), children);\n    };\n  };\n  for (var tagName in elements) {\n    _loop(tagName);\n  }\n  return creators;\n};\n\n/**\r\n * The default hyperscript factory that ships with Slate, without custom tags.\r\n */\n\nvar jsx = createHyperscript();\nexport { createEditor, createHyperscript, jsx };","map":{"version":3,"mappings":"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","names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ANCHOR","WeakMap","FOCUS","Token","AnchorToken","constructor","props","offset","path","FocusToken","addAnchorToken","text","token","length","set","getAnchorOffset","get","addFocusToken","getFocusOffset","STRINGS","WeakSet","resolveDescendants","children","nodes","addChild","child","prev","add","Text","isText","c","has","equals","loose","push","Element","isElement","n","Error","flat","Infinity","createAnchor","tagName","attributes","createCursor","createElement","createFocus","createFragment","createSelection","anchor","find","focus","createText","node","assign","createEditor","makeEditor","otherChildren","selectionChild","Range","isRange","descendants","selection","editor","Node","texts","DEFAULT_CREATORS","cursor","element","fragment","createHyperscript","options","elements","elementCreators","normalizeElements","creators","jsx","createFactory","creator","isPlainObject","concat","filter","Boolean","ret","_loop"],"sources":["../../../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../src/tokens.ts","../src/creators.ts","../src/hyperscript.ts","../src/index.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { Node, Path, Text } from 'slate'\n\n/**\n * A weak map to hold anchor tokens.\n */\n\nconst ANCHOR: WeakMap<Node, [number, AnchorToken]> = new WeakMap()\n\n/**\n * A weak map to hold focus tokens.\n */\n\nconst FOCUS: WeakMap<Node, [number, FocusToken]> = new WeakMap()\n\n/**\n * All tokens inherit from a single constructor for `instanceof` checking.\n */\n\nexport class Token {}\n\n/**\n * Anchor tokens represent the selection's anchor point.\n */\n\nexport class AnchorToken extends Token {\n  offset?: number\n  path?: Path\n\n  constructor(\n    props: {\n      offset?: number\n      path?: Path\n    } = {}\n  ) {\n    super()\n    const { offset, path } = props\n    this.offset = offset\n    this.path = path\n  }\n}\n\n/**\n * Focus tokens represent the selection's focus point.\n */\n\nexport class FocusToken extends Token {\n  offset?: number\n  path?: Path\n\n  constructor(\n    props: {\n      offset?: number\n      path?: Path\n    } = {}\n  ) {\n    super()\n    const { offset, path } = props\n    this.offset = offset\n    this.path = path\n  }\n}\n\n/**\n * Add an anchor token to the end of a text node.\n */\n\nexport const addAnchorToken = (text: Text, token: AnchorToken) => {\n  const offset = text.text.length\n  ANCHOR.set(text, [offset, token])\n}\n\n/**\n * Get the offset if a text node has an associated anchor token.\n */\n\nexport const getAnchorOffset = (\n  text: Text\n): [number, AnchorToken] | undefined => {\n  return ANCHOR.get(text)\n}\n\n/**\n * Add a focus token to the end of a text node.\n */\n\nexport const addFocusToken = (text: Text, token: FocusToken) => {\n  const offset = text.text.length\n  FOCUS.set(text, [offset, token])\n}\n\n/**\n * Get the offset if a text node has an associated focus token.\n */\n\nexport const getFocusOffset = (\n  text: Text\n): [number, FocusToken] | undefined => {\n  return FOCUS.get(text)\n}\n","import { Element, Descendant, Node, Range, Text, Editor } from 'slate'\nimport {\n  AnchorToken,\n  FocusToken,\n  Token,\n  addAnchorToken,\n  addFocusToken,\n  getAnchorOffset,\n  getFocusOffset,\n} from './tokens'\n\n/**\n * Resolve the descedants of a node by normalizing the children that can be\n * passed into a hyperscript creator function.\n */\n\nconst STRINGS: WeakSet<Text> = new WeakSet()\n\nconst resolveDescendants = (children: any[]): Descendant[] => {\n  const nodes: Node[] = []\n\n  const addChild = (child: Node | Token): void => {\n    if (child == null) {\n      return\n    }\n\n    const prev = nodes[nodes.length - 1]\n\n    if (typeof child === 'string') {\n      const text = { text: child }\n      STRINGS.add(text)\n      child = text\n    }\n\n    if (Text.isText(child)) {\n      const c = child // HACK: fix typescript complaining\n\n      if (\n        Text.isText(prev) &&\n        STRINGS.has(prev) &&\n        STRINGS.has(c) &&\n        Text.equals(prev, c, { loose: true })\n      ) {\n        prev.text += c.text\n      } else {\n        nodes.push(c)\n      }\n    } else if (Element.isElement(child)) {\n      nodes.push(child)\n    } else if (child instanceof Token) {\n      let n = nodes[nodes.length - 1]\n\n      if (!Text.isText(n)) {\n        addChild('')\n        n = nodes[nodes.length - 1] as Text\n      }\n\n      if (child instanceof AnchorToken) {\n        addAnchorToken(n, child)\n      } else if (child instanceof FocusToken) {\n        addFocusToken(n, child)\n      }\n    } else {\n      throw new Error(`Unexpected hyperscript child object: ${child}`)\n    }\n  }\n\n  for (const child of children.flat(Infinity)) {\n    addChild(child)\n  }\n\n  return nodes\n}\n\n/**\n * Create an anchor token.\n */\n\nexport function createAnchor(\n  tagName: string,\n  attributes: { [key: string]: any },\n  children: any[]\n): AnchorToken {\n  return new AnchorToken(attributes)\n}\n\n/**\n * Create an anchor and a focus token.\n */\n\nexport function createCursor(\n  tagName: string,\n  attributes: { [key: string]: any },\n  children: any[]\n): Token[] {\n  return [new AnchorToken(attributes), new FocusToken(attributes)]\n}\n\n/**\n * Create an `Element` object.\n */\n\nexport function createElement(\n  tagName: string,\n  attributes: { [key: string]: any },\n  children: any[]\n): Element {\n  return { ...attributes, children: resolveDescendants(children) }\n}\n\n/**\n * Create a focus token.\n */\n\nexport function createFocus(\n  tagName: string,\n  attributes: { [key: string]: any },\n  children: any[]\n): FocusToken {\n  return new FocusToken(attributes)\n}\n\n/**\n * Create a fragment.\n */\n\nexport function createFragment(\n  tagName: string,\n  attributes: { [key: string]: any },\n  children: any[]\n): Descendant[] {\n  return resolveDescendants(children)\n}\n\n/**\n * Create a `Selection` object.\n */\n\nexport function createSelection(\n  tagName: string,\n  attributes: { [key: string]: any },\n  children: any[]\n): Range {\n  const anchor: AnchorToken = children.find(c => c instanceof AnchorToken)\n  const focus: FocusToken = children.find(c => c instanceof FocusToken)\n\n  if (!anchor || anchor.offset == null || anchor.path == null) {\n    throw new Error(\n      `The <selection> hyperscript tag must have an <anchor> tag as a child with \\`path\\` and \\`offset\\` attributes defined.`\n    )\n  }\n\n  if (!focus || focus.offset == null || focus.path == null) {\n    throw new Error(\n      `The <selection> hyperscript tag must have a <focus> tag as a child with \\`path\\` and \\`offset\\` attributes defined.`\n    )\n  }\n\n  return {\n    anchor: {\n      offset: anchor.offset,\n      path: anchor.path,\n    },\n    focus: {\n      offset: focus.offset,\n      path: focus.path,\n    },\n    ...attributes,\n  }\n}\n\n/**\n * Create a `Text` object.\n */\n\nexport function createText(\n  tagName: string,\n  attributes: { [key: string]: any },\n  children: any[]\n): Text {\n  const nodes = resolveDescendants(children)\n\n  if (nodes.length > 1) {\n    throw new Error(\n      `The <text> hyperscript tag must only contain a single node's worth of children.`\n    )\n  }\n\n  let [node] = nodes\n\n  if (node == null) {\n    node = { text: '' }\n  }\n\n  if (!Text.isText(node)) {\n    throw new Error(`\n    The <text> hyperscript tag can only contain text content as children.`)\n  }\n\n  // COMPAT: If they used the <text> tag we want to guarantee that it won't be\n  // merge with other string children.\n  STRINGS.delete(node)\n\n  Object.assign(node, attributes)\n  return node\n}\n\n/**\n * Create a top-level `Editor` object.\n */\n\nexport const createEditor = (makeEditor: () => Editor) => (\n  tagName: string,\n  attributes: { [key: string]: any },\n  children: any[]\n): Editor => {\n  const otherChildren: any[] = []\n  let selectionChild: Range | undefined\n\n  for (const child of children) {\n    if (Range.isRange(child)) {\n      selectionChild = child\n    } else {\n      otherChildren.push(child)\n    }\n  }\n\n  const descendants = resolveDescendants(otherChildren)\n  const selection: Partial<Range> = {}\n  const editor = makeEditor()\n  Object.assign(editor, attributes)\n  editor.children = descendants as Element[]\n\n  // Search the document's texts to see if any of them have tokens associated\n  // that need incorporated into the selection.\n  for (const [node, path] of Node.texts(editor)) {\n    const anchor = getAnchorOffset(node)\n    const focus = getFocusOffset(node)\n\n    if (anchor != null) {\n      const [offset] = anchor\n      selection.anchor = { path, offset }\n    }\n\n    if (focus != null) {\n      const [offset] = focus\n      selection.focus = { path, offset }\n    }\n  }\n\n  if (selection.anchor && !selection.focus) {\n    throw new Error(\n      `Slate hyperscript ranges must have both \\`<anchor />\\` and \\`<focus />\\` defined if one is defined, but you only defined \\`<anchor />\\`. For collapsed selections, use \\`<cursor />\\` instead.`\n    )\n  }\n\n  if (!selection.anchor && selection.focus) {\n    throw new Error(\n      `Slate hyperscript ranges must have both \\`<anchor />\\` and \\`<focus />\\` defined if one is defined, but you only defined \\`<focus />\\`. For collapsed selections, use \\`<cursor />\\` instead.`\n    )\n  }\n\n  if (selectionChild != null) {\n    editor.selection = selectionChild\n  } else if (Range.isRange(selection)) {\n    editor.selection = selection\n  }\n\n  return editor\n}\n","import { isPlainObject } from 'is-plain-object'\nimport { Element, createEditor as makeEditor } from 'slate'\nimport {\n  createAnchor,\n  createCursor,\n  createEditor,\n  createElement,\n  createFocus,\n  createFragment,\n  createSelection,\n  createText,\n} from './creators'\n\n/**\n * The default creators for Slate objects.\n */\n\nconst DEFAULT_CREATORS = {\n  anchor: createAnchor,\n  cursor: createCursor,\n  editor: createEditor(makeEditor),\n  element: createElement,\n  focus: createFocus,\n  fragment: createFragment,\n  selection: createSelection,\n  text: createText,\n}\n\n/**\n * `HyperscriptCreators` are dictionaries of `HyperscriptCreator` functions\n * keyed by tag name.\n */\n\ntype HyperscriptCreators<T = any> = Record<\n  string,\n  (tagName: string, attributes: { [key: string]: any }, children: any[]) => T\n>\n\n/**\n * `HyperscriptShorthands` are dictionaries of properties applied to specific\n * kind of object, keyed by tag name. They allow you to easily define custom\n * hyperscript tags for your domain.\n */\n\ntype HyperscriptShorthands = Record<string, Record<string, any>>\n\n/**\n * Create a Slate hyperscript function with `options`.\n */\n\nconst createHyperscript = (\n  options: {\n    creators?: HyperscriptCreators\n    elements?: HyperscriptShorthands\n  } = {}\n) => {\n  const { elements = {} } = options\n  const elementCreators = normalizeElements(elements)\n  const creators = {\n    ...DEFAULT_CREATORS,\n    ...elementCreators,\n    ...options.creators,\n  }\n\n  const jsx = createFactory(creators)\n  return jsx\n}\n\n/**\n * Create a Slate hyperscript function with `options`.\n */\n\nconst createFactory = <T extends HyperscriptCreators>(creators: T) => {\n  const jsx = <S extends keyof T & string>(\n    tagName: S,\n    attributes?: Object,\n    ...children: any[]\n  ): ReturnType<T[S]> => {\n    const creator = creators[tagName]\n\n    if (!creator) {\n      throw new Error(`No hyperscript creator found for tag: <${tagName}>`)\n    }\n\n    if (attributes == null) {\n      attributes = {}\n    }\n\n    if (!isPlainObject(attributes)) {\n      children = [attributes].concat(children)\n      attributes = {}\n    }\n\n    children = children.filter(child => Boolean(child)).flat()\n    const ret = creator(tagName, attributes, children)\n    return ret\n  }\n\n  return jsx\n}\n\n/**\n * Normalize a dictionary of element shorthands into creator functions.\n */\n\nconst normalizeElements = (elements: HyperscriptShorthands) => {\n  const creators: HyperscriptCreators<Element> = {}\n\n  for (const tagName in elements) {\n    const props = elements[tagName]\n\n    if (typeof props !== 'object') {\n      throw new Error(\n        `Properties specified for a hyperscript shorthand should be an object, but for the custom element <${tagName}>  tag you passed: ${props}`\n      )\n    }\n\n    creators[tagName] = (\n      tagName: string,\n      attributes: { [key: string]: any },\n      children: any[]\n    ) => {\n      return createElement('element', { ...props, ...attributes }, children)\n    }\n  }\n\n  return creators\n}\n\nexport { createHyperscript, HyperscriptCreators, HyperscriptShorthands }\n","import {\n  createHyperscript,\n  HyperscriptCreators,\n  HyperscriptShorthands,\n} from './hyperscript'\nimport { createEditor } from './creators'\n\n/**\n * The default hyperscript factory that ships with Slate, without custom tags.\n */\n\nconst jsx = createHyperscript()\n\nexport {\n  jsx,\n  createHyperscript,\n  createEditor,\n  HyperscriptCreators,\n  HyperscriptShorthands,\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}