{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/manage/Blocks/DataConnectedEmbedBlock/View.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\n/**\n * View map block.\n * @module components/manage/Blocks/Maps/View\n */\n\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { connect } from 'react-redux';\nimport PrivacyProtection from '@eeacms/volto-embed/PrivacyProtection/PrivacyProtection';\nimport { getConnectedDataParametersForContext, getFilteredURL } from '@eeacms/volto-datablocks/helpers';\nimport './styles.less';\nvar messages = defineMessages({\n  EmbededGoogleMaps: {\n    \"id\": \"Embeded Google Maps\",\n    \"defaultMessage\": \"Embeded Google Maps\"\n  }\n});\n\n/**\n * View Embed block class.\n * @class View\n * @extends Component\n */\n\nvar ViewEmbedBlock = function ViewEmbedBlock(props) {\n  var data = props.data,\n    intl = props.intl;\n  var url = getFilteredURL(data.url, props.connected_data_parameters);\n  return url ? __jsx(PrivacyProtection, _extends({\n    data: data\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), __jsx(\"p\", {\n    className: cx('map-container block maps', {\n      center: !Boolean(data.align)\n    }, data.align),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: cx('video-inner', {\n      'full-width': data.align === 'full'\n    }),\n    style: {\n      minHeight: \"\".concat(data.height || 200, \"px\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(\"iframe\", {\n    style: {\n      minHeight: '100%'\n    },\n    title: intl.formatMessage(messages.EmbededGoogleMaps),\n    src: url,\n    className: \"google-map\",\n    frameBorder: \"0\",\n    allowFullScreen: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })))) : '';\n};\n_c = ViewEmbedBlock;\nexport default connect(function (state) {\n  var _state$router, _state$router$locatio;\n  return {\n    connected_data_parameters: getConnectedDataParametersForContext(state === null || state === void 0 ? void 0 : state.connected_data_parameters, (_state$router = state.router) === null || _state$router === void 0 ? void 0 : (_state$router$locatio = _state$router.location) === null || _state$router$locatio === void 0 ? void 0 : _state$router$locatio.pathname)\n  };\n}, {})(injectIntl(ViewEmbedBlock));\nvar _c;\n$RefreshReg$(_c, \"ViewEmbedBlock\");","map":{"version":3,"names":["React","defineMessages","injectIntl","cx","connect","PrivacyProtection","getConnectedDataParametersForContext","getFilteredURL","messages","EmbededGoogleMaps","ViewEmbedBlock","props","data","intl","url","connected_data_parameters","center","Boolean","align","minHeight","height","formatMessage","state","router","location","pathname"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/manage/Blocks/DataConnectedEmbedBlock/View.jsx"],"sourcesContent":["/**\n * View map block.\n * @module components/manage/Blocks/Maps/View\n */\n\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { connect } from 'react-redux';\nimport PrivacyProtection from '@eeacms/volto-embed/PrivacyProtection/PrivacyProtection';\nimport {\n  getConnectedDataParametersForContext,\n  getFilteredURL,\n} from '@eeacms/volto-datablocks/helpers';\nimport './styles.less';\n\nconst messages = defineMessages({\n  EmbededGoogleMaps: {\n    id: 'Embeded Google Maps',\n    defaultMessage: 'Embeded Google Maps',\n  },\n});\n\n/**\n * View Embed block class.\n * @class View\n * @extends Component\n */\n\nconst ViewEmbedBlock = (props) => {\n  const { data, intl } = props;\n\n  const url = getFilteredURL(data.url, props.connected_data_parameters);\n\n  return url ? (\n    <PrivacyProtection data={data} {...props}>\n      <p\n        className={cx(\n          'map-container block maps',\n          {\n            center: !Boolean(data.align),\n          },\n          data.align,\n        )}\n      >\n        <div\n          className={cx('video-inner', {\n            'full-width': data.align === 'full',\n          })}\n          style={{\n            minHeight: `${data.height || 200}px`,\n          }}\n        >\n          <iframe\n            style={{ minHeight: '100%' }}\n            title={intl.formatMessage(messages.EmbededGoogleMaps)}\n            src={url}\n            className=\"google-map\"\n            frameBorder=\"0\"\n            allowFullScreen\n          />\n        </div>\n      </p>\n    </PrivacyProtection>\n  ) : (\n    ''\n  );\n};\n\nexport default connect((state) => {\n  return {\n    connected_data_parameters: getConnectedDataParametersForContext(\n      state?.connected_data_parameters,\n      state.router?.location?.pathname,\n    ),\n  };\n}, {})(injectIntl(ViewEmbedBlock));\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,UAAU,QAAQ,YAAY;AACvD,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,iBAAiB,MAAM,yDAAyD;AACvF,SACEC,oCAAoC,EACpCC,cAAc,QACT,kCAAkC;AACzC,OAAO,eAAe;AAEtB,IAAMC,QAAQ,GAAGP,cAAc,CAAC;EAC9BQ,iBAAiB;IAAA;IAAA;EAAA;AAInB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAAK,EAAK;EAChC,IAAQC,IAAI,GAAWD,KAAK,CAApBC,IAAI;IAAEC,IAAI,GAAKF,KAAK,CAAdE,IAAI;EAElB,IAAMC,GAAG,GAAGP,cAAc,CAACK,IAAI,CAACE,GAAG,EAAEH,KAAK,CAACI,yBAAyB,CAAC;EAErE,OAAOD,GAAG,GACR,MAAC,iBAAiB;IAAC,IAAI,EAAEF;EAAK,GAAKD,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACtC;IACE,SAAS,EAAER,EAAE,CACX,0BAA0B,EAC1B;MACEa,MAAM,EAAE,CAACC,OAAO,CAACL,IAAI,CAACM,KAAK;IAC7B,CAAC,EACDN,IAAI,CAACM,KAAK,CACV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEF;IACE,SAAS,EAAEf,EAAE,CAAC,aAAa,EAAE;MAC3B,YAAY,EAAES,IAAI,CAACM,KAAK,KAAK;IAC/B,CAAC,CAAE;IACH,KAAK,EAAE;MACLC,SAAS,YAAKP,IAAI,CAACQ,MAAM,IAAI,GAAG;IAClC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEF;IACE,KAAK,EAAE;MAAED,SAAS,EAAE;IAAO,CAAE;IAC7B,KAAK,EAAEN,IAAI,CAACQ,aAAa,CAACb,QAAQ,CAACC,iBAAiB,CAAE;IACtD,GAAG,EAAEK,GAAI;IACT,SAAS,EAAC,YAAY;IACtB,WAAW,EAAC,GAAG;IACf,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACf,CACE,CACJ,CACc,GAEpB,EACD;AACH,CAAC;AAAC,KAtCIJ,cAAc;AAwCpB,eAAeN,OAAO,CAAC,UAACkB,KAAK,EAAK;EAAA;EAChC,OAAO;IACLP,yBAAyB,EAAET,oCAAoC,CAC7DgB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEP,yBAAyB,mBAChCO,KAAK,CAACC,MAAM,2EAAZ,cAAcC,QAAQ,0DAAtB,sBAAwBC,QAAQ;EAEpC,CAAC;AACH,CAAC,EAAE,CAAC,CAAC,CAAC,CAACvB,UAAU,CAACQ,cAAc,CAAC,CAAC;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[{"id":"Embeded Google Maps","defaultMessage":"Embeded Google Maps"}]}},"sourceType":"module","externalDependencies":[]}