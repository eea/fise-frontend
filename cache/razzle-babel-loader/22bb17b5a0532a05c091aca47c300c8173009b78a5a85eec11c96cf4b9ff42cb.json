{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/EventDetails/EventDetails.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Segment, Header, List } from 'semantic-ui-react';\nimport { When, Recurrence } from '@plone/volto/components/theme/View/EventDatesInfo';\nimport { Icon } from '@plone/volto/components';\nimport { expandToBackendURL } from '@plone/volto/helpers';\nimport calendarSVG from '@plone/volto/icons/calendar.svg';\nvar messages = defineMessages({\n  what: {\n    \"id\": \"event_what\",\n    \"defaultMessage\": \"What\"\n  },\n  when: {\n    \"id\": \"event_when\",\n    \"defaultMessage\": \"When\"\n  },\n  allDates: {\n    \"id\": \"event_alldates\",\n    \"defaultMessage\": \"All dates\"\n  },\n  downloadEvent: {\n    \"id\": \"Download Event\",\n    \"defaultMessage\": \"Download Event\"\n  },\n  where: {\n    \"id\": \"event_where\",\n    \"defaultMessage\": \"Where\"\n  },\n  contactName: {\n    \"id\": \"event_contactname\",\n    \"defaultMessage\": \"Contact Name\"\n  },\n  contactPhone: {\n    \"id\": \"event_contactphone\",\n    \"defaultMessage\": \"Contact Phone\"\n  },\n  attendees: {\n    \"id\": \"event_attendees\",\n    \"defaultMessage\": \"Attendees\"\n  },\n  website: {\n    \"id\": \"event_website\",\n    \"defaultMessage\": \"Website\"\n  },\n  visitWebsite: {\n    \"id\": \"visit_external_website\",\n    \"defaultMessage\": \"Visit external website\"\n  }\n});\nvar EventDetails = function EventDetails(_ref) {\n  _s();\n  var _content$subjects, _content$attendees;\n  var content = _ref.content,\n    _ref$display_as = _ref.display_as,\n    display_as = _ref$display_as === void 0 ? 'aside' : _ref$display_as;\n  var intl = useIntl();\n  return __jsx(Segment, _extends({\n    as: display_as\n  }, display_as === 'aside' ? {\n    floated: 'right'\n  } : {}, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), ((_content$subjects = content.subjects) === null || _content$subjects === void 0 ? void 0 : _content$subjects.length) > 0 && __jsx(React.Fragment, null, __jsx(Header, {\n    dividing: true,\n    sub: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, intl.formatMessage(messages.what)), __jsx(List, {\n    items: content.subjects,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), __jsx(Header, {\n    dividing: true,\n    sub: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, intl.formatMessage(messages.when)), __jsx(When, {\n    start: content.start,\n    end: content.end,\n    whole_day: content.whole_day,\n    open_end: content.open_end,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), content.recurrence && __jsx(React.Fragment, null, __jsx(Header, {\n    dividing: true,\n    sub: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, intl.formatMessage(messages.allDates)), __jsx(Recurrence, {\n    recurrence: content.recurrence,\n    start: content.start,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })), content.location && __jsx(React.Fragment, null, __jsx(Header, {\n    dividing: true,\n    sub: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, intl.formatMessage(messages.where)), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, content.location)), content.contact_name && __jsx(React.Fragment, null, __jsx(Header, {\n    dividing: true,\n    sub: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, intl.formatMessage(messages.contactName)), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, content.contact_email ? __jsx(\"a\", {\n    href: \"mailto:\".concat(content.contact_email),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, content.contact_name) : content.contact_name)), content.contact_phone && __jsx(React.Fragment, null, __jsx(Header, {\n    dividing: true,\n    sub: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, intl.formatMessage(messages.contactPhone)), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, content.contact_phone)), ((_content$attendees = content.attendees) === null || _content$attendees === void 0 ? void 0 : _content$attendees.length) > 0 && __jsx(React.Fragment, null, __jsx(Header, {\n    dividing: true,\n    sub: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, intl.formatMessage(messages.attendees)), __jsx(List, {\n    items: content.attendees,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  })), content.event_url && __jsx(React.Fragment, null, __jsx(Header, {\n    dividing: true,\n    sub: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, intl.formatMessage(messages.website)), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: content.event_url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, intl.formatMessage(messages.visitWebsite)))), __jsx(\"div\", {\n    className: \"download-event\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    name: calendarSVG,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }), __jsx(\"a\", {\n    className: \"ics-download\",\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    href: \"\".concat(expandToBackendURL(content['@id']), \"/ics_view\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, intl.formatMessage(messages.downloadEvent))));\n};\n_s(EventDetails, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = EventDetails;\nexport default EventDetails;\nvar _c;\n$RefreshReg$(_c, \"EventDetails\");","map":{"version":3,"names":["React","defineMessages","useIntl","Segment","Header","List","When","Recurrence","Icon","expandToBackendURL","calendarSVG","messages","what","when","allDates","downloadEvent","where","contactName","contactPhone","attendees","website","visitWebsite","EventDetails","content","display_as","intl","floated","subjects","length","formatMessage","start","end","whole_day","open_end","recurrence","location","contact_name","contact_email","contact_phone","event_url"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/EventDetails/EventDetails.jsx"],"sourcesContent":["import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Segment, Header, List } from 'semantic-ui-react';\nimport {\n  When,\n  Recurrence,\n} from '@plone/volto/components/theme/View/EventDatesInfo';\nimport { Icon } from '@plone/volto/components';\nimport { expandToBackendURL } from '@plone/volto/helpers';\n\nimport calendarSVG from '@plone/volto/icons/calendar.svg';\n\nconst messages = defineMessages({\n  what: {\n    id: 'event_what',\n    defaultMessage: 'What',\n  },\n  when: {\n    id: 'event_when',\n    defaultMessage: 'When',\n  },\n  allDates: {\n    id: 'event_alldates',\n    defaultMessage: 'All dates',\n  },\n  downloadEvent: {\n    id: 'Download Event',\n    defaultMessage: 'Download Event',\n  },\n  where: {\n    id: 'event_where',\n    defaultMessage: 'Where',\n  },\n  contactName: {\n    id: 'event_contactname',\n    defaultMessage: 'Contact Name',\n  },\n  contactPhone: {\n    id: 'event_contactphone',\n    defaultMessage: 'Contact Phone',\n  },\n  attendees: {\n    id: 'event_attendees',\n    defaultMessage: 'Attendees',\n  },\n  website: {\n    id: 'event_website',\n    defaultMessage: 'Website',\n  },\n  visitWebsite: {\n    id: 'visit_external_website',\n    defaultMessage: 'Visit external website',\n  },\n});\n\nconst EventDetails = ({ content, display_as = 'aside' }) => {\n  const intl = useIntl();\n  return (\n    <Segment\n      as={display_as}\n      {...(display_as === 'aside' ? { floated: 'right' } : {})}\n    >\n      {content.subjects?.length > 0 && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.what)}\n          </Header>\n          <List items={content.subjects} />\n        </>\n      )}\n      <Header dividing sub>\n        {intl.formatMessage(messages.when)}\n      </Header>\n      <When\n        start={content.start}\n        end={content.end}\n        whole_day={content.whole_day}\n        open_end={content.open_end}\n      />\n      {content.recurrence && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.allDates)}\n          </Header>\n          <Recurrence recurrence={content.recurrence} start={content.start} />\n        </>\n      )}\n      {content.location && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.where)}\n          </Header>\n          <p>{content.location}</p>\n        </>\n      )}\n      {content.contact_name && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.contactName)}\n          </Header>\n          <p>\n            {content.contact_email ? (\n              <a href={`mailto:${content.contact_email}`}>\n                {content.contact_name}\n              </a>\n            ) : (\n              content.contact_name\n            )}\n          </p>\n        </>\n      )}\n      {content.contact_phone && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.contactPhone)}\n          </Header>\n          <p>{content.contact_phone}</p>\n        </>\n      )}\n      {content.attendees?.length > 0 && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.attendees)}\n          </Header>\n          <List items={content.attendees} />\n        </>\n      )}\n      {content.event_url && (\n        <>\n          <Header dividing sub>\n            {intl.formatMessage(messages.website)}\n          </Header>\n          <p>\n            <a\n              href={content.event_url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {intl.formatMessage(messages.visitWebsite)}\n            </a>\n          </p>\n        </>\n      )}\n      <div className=\"download-event\">\n        <Icon name={calendarSVG} />\n        <a\n          className=\"ics-download\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href={`${expandToBackendURL(content['@id'])}/ics_view`}\n        >\n          {intl.formatMessage(messages.downloadEvent)}\n        </a>\n      </div>\n    </Segment>\n  );\n};\n\nexport default EventDetails;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,OAAO,QAAQ,YAAY;AACpD,SAASC,OAAO,EAAEC,MAAM,EAAEC,IAAI,QAAQ,mBAAmB;AACzD,SACEC,IAAI,EACJC,UAAU,QACL,mDAAmD;AAC1D,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,kBAAkB,QAAQ,sBAAsB;AAEzD,OAAOC,WAAW,MAAM,iCAAiC;AAEzD,IAAMC,QAAQ,GAAGV,cAAc,CAAC;EAC9BW,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,QAAQ;IAAA;IAAA;EAAA,CAGP;EACDC,aAAa;IAAA;IAAA;EAAA,CAGZ;EACDC,KAAK;IAAA;IAAA;EAAA,CAGJ;EACDC,WAAW;IAAA;IAAA;EAAA,CAGV;EACDC,YAAY;IAAA;IAAA;EAAA,CAGX;EACDC,SAAS;IAAA;IAAA;EAAA,CAGR;EACDC,OAAO;IAAA;IAAA;EAAA,CAGN;EACDC,YAAY;IAAA;IAAA;EAAA;AAId,CAAC,CAAC;AAEF,IAAMC,YAAY,GAAG,SAAfA,YAAY,OAA0C;EAAA;EAAA;EAAA,IAApCC,OAAO,QAAPA,OAAO;IAAA,uBAAEC,UAAU;IAAVA,UAAU,gCAAG,OAAO;EACnD,IAAMC,IAAI,GAAGvB,OAAO,EAAE;EACtB,OACE,MAAC,OAAO;IACN,EAAE,EAAEsB;EAAW,GACVA,UAAU,KAAK,OAAO,GAAG;IAAEE,OAAO,EAAE;EAAQ,CAAC,GAAG,CAAC,CAAC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAEtD,sBAAAH,OAAO,CAACI,QAAQ,sDAAhB,kBAAkBC,MAAM,IAAG,CAAC,IAC3B,4BACE,MAAC,MAAM;IAAC,QAAQ;IAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjBH,IAAI,CAACI,aAAa,CAAClB,QAAQ,CAACC,IAAI,CAAC,CAC3B,EACT,MAAC,IAAI;IAAC,KAAK,EAAEW,OAAO,CAACI,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAEpC,EACD,MAAC,MAAM;IAAC,QAAQ;IAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjBF,IAAI,CAACI,aAAa,CAAClB,QAAQ,CAACE,IAAI,CAAC,CAC3B,EACT,MAAC,IAAI;IACH,KAAK,EAAEU,OAAO,CAACO,KAAM;IACrB,GAAG,EAAEP,OAAO,CAACQ,GAAI;IACjB,SAAS,EAAER,OAAO,CAACS,SAAU;IAC7B,QAAQ,EAAET,OAAO,CAACU,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC3B,EACDV,OAAO,CAACW,UAAU,IACjB,4BACE,MAAC,MAAM;IAAC,QAAQ;IAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjBT,IAAI,CAACI,aAAa,CAAClB,QAAQ,CAACG,QAAQ,CAAC,CAC/B,EACT,MAAC,UAAU;IAAC,UAAU,EAAES,OAAO,CAACW,UAAW;IAAC,KAAK,EAAEX,OAAO,CAACO,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAEvE,EACAP,OAAO,CAACY,QAAQ,IACf,4BACE,MAAC,MAAM;IAAC,QAAQ;IAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjBV,IAAI,CAACI,aAAa,CAAClB,QAAQ,CAACK,KAAK,CAAC,CAC5B,EACT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIO,OAAO,CAACY,QAAQ,CAAK,CAE5B,EACAZ,OAAO,CAACa,YAAY,IACnB,4BACE,MAAC,MAAM;IAAC,QAAQ;IAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjBX,IAAI,CAACI,aAAa,CAAClB,QAAQ,CAACM,WAAW,CAAC,CAClC,EACT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGM,OAAO,CAACc,aAAa,GACpB;IAAG,IAAI,mBAAYd,OAAO,CAACc,aAAa,CAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACxCd,OAAO,CAACa,YAAY,CACnB,GAEJb,OAAO,CAACa,YACT,CACC,CAEP,EACAb,OAAO,CAACe,aAAa,IACpB,4BACE,MAAC,MAAM;IAAC,QAAQ;IAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjBb,IAAI,CAACI,aAAa,CAAClB,QAAQ,CAACO,YAAY,CAAC,CACnC,EACT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIK,OAAO,CAACe,aAAa,CAAK,CAEjC,EACA,uBAAAf,OAAO,CAACJ,SAAS,uDAAjB,mBAAmBS,MAAM,IAAG,CAAC,IAC5B,4BACE,MAAC,MAAM;IAAC,QAAQ;IAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjBH,IAAI,CAACI,aAAa,CAAClB,QAAQ,CAACQ,SAAS,CAAC,CAChC,EACT,MAAC,IAAI;IAAC,KAAK,EAAEI,OAAO,CAACJ,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAErC,EACAI,OAAO,CAACgB,SAAS,IAChB,4BACE,MAAC,MAAM;IAAC,QAAQ;IAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjBd,IAAI,CAACI,aAAa,CAAClB,QAAQ,CAACS,OAAO,CAAC,CAC9B,EACT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IACE,IAAI,EAAEG,OAAO,CAACgB,SAAU;IACxB,MAAM,EAAC,QAAQ;IACf,GAAG,EAAC,qBAAqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAExBd,IAAI,CAACI,aAAa,CAAClB,QAAQ,CAACU,YAAY,CAAC,CACxC,CACF,CAEP,EACD;IAAK,SAAS,EAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC7B,MAAC,IAAI;IAAC,IAAI,EAAEX,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC3B;IACE,SAAS,EAAC,cAAc;IACxB,MAAM,EAAC,QAAQ;IACf,GAAG,EAAC,YAAY;IAChB,IAAI,YAAKD,kBAAkB,CAACc,OAAO,CAAC,KAAK,CAAC,CAAC,cAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEtDE,IAAI,CAACI,aAAa,CAAClB,QAAQ,CAACI,aAAa,CAAC,CACzC,CACA,CACE;AAEd,CAAC;AAAC,GArGIO,YAAY;EAAA,QACHpB,OAAO;AAAA;AAAA,KADhBoB,YAAY;AAuGlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[{"id":"event_what","defaultMessage":"What"},{"id":"event_when","defaultMessage":"When"},{"id":"event_alldates","defaultMessage":"All dates"},{"id":"Download Event","defaultMessage":"Download Event"},{"id":"event_where","defaultMessage":"Where"},{"id":"event_contactname","defaultMessage":"Contact Name"},{"id":"event_contactphone","defaultMessage":"Contact Phone"},{"id":"event_attendees","defaultMessage":"Attendees"},{"id":"event_website","defaultMessage":"Website"},{"id":"visit_external_website","defaultMessage":"Visit external website"}]}},"sourceType":"module","externalDependencies":[]}