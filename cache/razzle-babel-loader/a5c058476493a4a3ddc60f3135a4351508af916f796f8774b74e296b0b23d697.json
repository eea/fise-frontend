{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-widget-toggle/src/components/manage/Widgets/CheckboxWidget.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n/**\n * CheckboxWidget component.\n * @module components/manage/Widgets/CheckboxWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'semantic-ui-react';\nimport { injectIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components';\n\n/**\n * CheckboxWidget component class.\n * @function CheckboxWidget\n * @returns {string} Markup of the component.\n */\nconst CheckboxWidget = props => {\n  const {\n    id,\n    title,\n    value,\n    onChange,\n    isDisabled,\n    defaultValue = false\n  } = props;\n  React.useEffect(() => {\n    if (value === null && defaultValue) onChange(id, defaultValue); //value===null prevents assigning default value on every render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    columns: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(Checkbox, {\n    toggle: true,\n    name: `field-${id}`,\n    checked: value !== null && value !== void 0 ? value : defaultValue,\n    disabled: isDisabled,\n    onChange: (event, {\n      checked\n    }) => {\n      onChange(id, checked);\n    },\n    label: __jsx(\"label\", {\n      htmlFor: `field-${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }\n    }, title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nCheckboxWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nCheckboxWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null\n};\nexport default injectIntl(CheckboxWidget);","map":{"version":3,"names":["React","PropTypes","Checkbox","injectIntl","FormFieldWrapper","CheckboxWidget","props","id","title","value","onChange","isDisabled","defaultValue","useEffect","event","checked","propTypes","string","isRequired","description","required","bool","error","arrayOf","func","onEdit","onDelete","wrapped","defaultProps"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-widget-toggle/src/components/manage/Widgets/CheckboxWidget.jsx"],"sourcesContent":["/**\n * CheckboxWidget component.\n * @module components/manage/Widgets/CheckboxWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'semantic-ui-react';\n\nimport { injectIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components';\n\n/**\n * CheckboxWidget component class.\n * @function CheckboxWidget\n * @returns {string} Markup of the component.\n */\nconst CheckboxWidget = (props) => {\n  const {\n    id,\n    title,\n    value,\n    onChange,\n    isDisabled,\n    defaultValue = false,\n  } = props;\n\n  React.useEffect(() => {\n    if (value === null && defaultValue) onChange(id, defaultValue); //value===null prevents assigning default value on every render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <FormFieldWrapper {...props} columns={1}>\n      <div className=\"wrapper\">\n        <Checkbox\n          toggle\n          name={`field-${id}`}\n          checked={value ?? defaultValue}\n          disabled={isDisabled}\n          onChange={(event, { checked }) => {\n            onChange(id, checked);\n          }}\n          label={<label htmlFor={`field-${id}`}>{title}</label>}\n        />\n      </div>\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nCheckboxWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nCheckboxWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n};\n\nexport default injectIntl(CheckboxWidget);\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C,SAASC,UAAU,QAAQ,YAAY;AACvC,SAASC,gBAAgB,QAAQ,yBAAyB;;AAE1D;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,MAAM;IACJC,EAAE;IACFC,KAAK;IACLC,KAAK;IACLC,QAAQ;IACRC,UAAU;IACVC,YAAY,GAAG;EACjB,CAAC,GAAGN,KAAK;EAETN,KAAK,CAACa,SAAS,CAAC,MAAM;IACpB,IAAIJ,KAAK,KAAK,IAAI,IAAIG,YAAY,EAAEF,QAAQ,CAACH,EAAE,EAAEK,YAAY,CAAC,CAAC,CAAC;IAChE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OACE,MAAC,gBAAgB,eAAKN,KAAK;IAAE,OAAO,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACtC;IAAK,SAAS,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACtB,MAAC,QAAQ;IACP,MAAM;IACN,IAAI,EAAG,SAAQC,EAAG,EAAE;IACpB,OAAO,EAAEE,KAAK,aAALA,KAAK,cAALA,KAAK,GAAIG,YAAa;IAC/B,QAAQ,EAAED,UAAW;IACrB,QAAQ,EAAE,CAACG,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MAChCL,QAAQ,CAACH,EAAE,EAAEQ,OAAO,CAAC;IACvB,CAAE;IACF,KAAK,EAAE;MAAO,OAAO,EAAG,SAAQR,EAAG,EAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAEC,KAAK,CAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACtD,CACE,CACW;AAEvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAH,cAAc,CAACW,SAAS,GAAG;EACzBT,EAAE,EAAEN,SAAS,CAACgB,MAAM,CAACC,UAAU;EAC/BV,KAAK,EAAEP,SAAS,CAACgB,MAAM,CAACC,UAAU;EAClCC,WAAW,EAAElB,SAAS,CAACgB,MAAM;EAC7BG,QAAQ,EAAEnB,SAAS,CAACoB,IAAI;EACxBC,KAAK,EAAErB,SAAS,CAACsB,OAAO,CAACtB,SAAS,CAACgB,MAAM,CAAC;EAC1CR,KAAK,EAAER,SAAS,CAACoB,IAAI;EACrBX,QAAQ,EAAET,SAAS,CAACuB,IAAI;EACxBC,MAAM,EAAExB,SAAS,CAACuB,IAAI;EACtBE,QAAQ,EAAEzB,SAAS,CAACuB,IAAI;EACxBG,OAAO,EAAE1B,SAAS,CAACoB;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAhB,cAAc,CAACuB,YAAY,GAAG;EAC5BT,WAAW,EAAE,IAAI;EACjBC,QAAQ,EAAE,KAAK;EACfE,KAAK,EAAE,EAAE;EACTb,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,IAAI;EACde,MAAM,EAAE,IAAI;EACZC,QAAQ,EAAE;AACZ,CAAC;AAED,eAAevB,UAAU,CAACE,cAAc,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}