{"ast":null,"code":"import _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Groups/RenderGroups.jsx\";\nvar __jsx = React.createElement;\n/**\n * Users controlpanel groups.\n * @module components/manage/Controlpanels/UsersControlpanelGroups\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Dropdown, Table, Checkbox } from 'semantic-ui-react';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport { Icon } from '@plone/volto/components';\n\n/**\n * UsersControlpanelGroups class.\n * @class UsersControlpanelGroups\n * @extends Component\n */\nvar RenderGroups = /*#__PURE__*/function (_Component) {\n  _inherits(RenderGroups, _Component);\n  var _super = _createSuper(RenderGroups);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  function RenderGroups(props) {\n    var _this;\n    _classCallCheck(this, RenderGroups);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"isAuthGroup\", function (roleId) {\n      return _this.props.inheritedRole.includes(roleId);\n    });\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  /**\n   * @param {*} event\n   * @param {*} { value }\n   * @memberof UsersControlpanelUser\n   */\n  _createClass(RenderGroups, [{\n    key: \"onChange\",\n    value: function onChange(event, _ref) {\n      var value = _ref.value;\n      var _value$split = value.split('.'),\n        _value$split2 = _slicedToArray(_value$split, 2),\n        group = _value$split2[0],\n        role = _value$split2[1];\n      this.props.updateGroups(group, role);\n    }\n\n    /**\n     *@param {*}\n     *@returns {Boolean}\n     *@memberof RenderGroups\n     */\n  }, {\n    key: \"render\",\n    value:\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n    function render() {\n      var _this2 = this;\n      return __jsx(Table.Row, {\n        key: this.props.group.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, __jsx(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, this.props.group.groupname), this.props.roles.map(function (role) {\n        return __jsx(Table.Cell, {\n          key: role.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }\n        }, _this2.props.inheritedRole && _this2.props.inheritedRole.includes(role.id) && _this2.props.group.roles.includes('Authenticated') ? __jsx(Icon, {\n          name: ploneSVG,\n          size: \"20px\",\n          color: \"#007EB1\",\n          title: 'plone-svg',\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }\n        }) : __jsx(Checkbox, {\n          checked: _this2.props.group.id === 'AuthenticatedUsers' ? _this2.isAuthGroup(role.id) : _this2.props.group.roles.includes(role.id),\n          onChange: _this2.onChange,\n          value: \"\".concat(_this2.props.group.id, \".\").concat(role.id),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }\n        }));\n      }), __jsx(Table.Cell, {\n        textAlign: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, __jsx(Dropdown, {\n        icon: \"ellipsis horizontal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, __jsx(Dropdown.Menu, {\n        className: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, __jsx(Dropdown.Item, {\n        onClick: this.props.onDelete,\n        value: this.props.group['@id'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, __jsx(Icon, {\n        name: trashSVG,\n        size: \"15px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }), __jsx(FormattedMessage, {\n        id: \"Delete\",\n        defaultMessage: \"Delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }))))));\n    }\n  }]);\n  return RenderGroups;\n}(Component);\n_defineProperty(RenderGroups, \"propTypes\", {\n  //single group\n  group: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    email: PropTypes.string,\n    groupname: PropTypes.string,\n    roles: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired,\n  roles: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string\n  })).isRequired,\n  inheritedRole: PropTypes.array,\n  onDelete: PropTypes.func.isRequired\n});\nexport default _c = injectIntl(RenderGroups);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["PropTypes","React","Component","FormattedMessage","injectIntl","Dropdown","Table","Checkbox","trashSVG","ploneSVG","Icon","RenderGroups","props","roleId","inheritedRole","includes","onChange","bind","event","value","split","group","role","updateGroups","title","groupname","roles","map","id","isAuthGroup","onDelete","shape","string","description","email","arrayOf","isRequired","array","func"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Groups/RenderGroups.jsx"],"sourcesContent":["/**\n * Users controlpanel groups.\n * @module components/manage/Controlpanels/UsersControlpanelGroups\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Dropdown, Table, Checkbox } from 'semantic-ui-react';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport { Icon } from '@plone/volto/components';\n\n/**\n * UsersControlpanelGroups class.\n * @class UsersControlpanelGroups\n * @extends Component\n */\nclass RenderGroups extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    //single group\n    group: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      email: PropTypes.string,\n      groupname: PropTypes.string,\n      roles: PropTypes.arrayOf(PropTypes.string),\n    }).isRequired,\n\n    roles: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n      }),\n    ).isRequired,\n    inheritedRole: PropTypes.array,\n    onDelete: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /**\n   * @param {*} event\n   * @param {*} { value }\n   * @memberof UsersControlpanelUser\n   */\n  onChange(event, { value }) {\n    const [group, role] = value.split('.');\n    this.props.updateGroups(group, role);\n  }\n\n  /**\n   *@param {*}\n   *@returns {Boolean}\n   *@memberof RenderGroups\n   */\n  isAuthGroup = (roleId) => {\n    return this.props.inheritedRole.includes(roleId);\n  };\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Table.Row key={this.props.group.title}>\n        <Table.Cell>{this.props.group.groupname}</Table.Cell>\n        {this.props.roles.map((role) => (\n          <Table.Cell key={role.id}>\n            {this.props.inheritedRole &&\n            this.props.inheritedRole.includes(role.id) &&\n            this.props.group.roles.includes('Authenticated') ? (\n              <Icon\n                name={ploneSVG}\n                size=\"20px\"\n                color=\"#007EB1\"\n                title={'plone-svg'}\n              />\n            ) : (\n              <Checkbox\n                checked={\n                  this.props.group.id === 'AuthenticatedUsers'\n                    ? this.isAuthGroup(role.id)\n                    : this.props.group.roles.includes(role.id)\n                }\n                onChange={this.onChange}\n                value={`${this.props.group.id}.${role.id}`}\n              />\n            )}\n          </Table.Cell>\n        ))}\n        <Table.Cell textAlign=\"right\">\n          <Dropdown icon=\"ellipsis horizontal\">\n            <Dropdown.Menu className=\"left\">\n              <Dropdown.Item\n                onClick={this.props.onDelete}\n                value={this.props.group['@id']}\n              >\n                <Icon name={trashSVG} size=\"15px\" />\n                <FormattedMessage id=\"Delete\" defaultMessage=\"Delete\" />\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nexport default injectIntl(RenderGroups);\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,gBAAgB,EAAEC,UAAU,QAAQ,YAAY;AACzD,SAASC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,mBAAmB;AAC7D,OAAOC,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,SAASC,IAAI,QAAQ,yBAAyB;;AAE9C;AACA;AACA;AACA;AACA;AAJA,IAKMC,YAAY;EAAA;EAAA;EAChB;AACF;AACA;AACA;AACA;;EAoBE;AACF;AACA;AACA;AACA;AACA;EACE,sBAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IAAE,8DAmBD,UAACC,MAAM,EAAK;MACxB,OAAO,MAAKD,KAAK,CAACE,aAAa,CAACC,QAAQ,CAACF,MAAM,CAAC;IAClD,CAAC;IApBC,MAAKG,QAAQ,GAAG,MAAKA,QAAQ,CAACC,IAAI,+BAAM;IAAC;EAC3C;;EAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,kBAASC,KAAK,QAAa;MAAA,IAATC,KAAK,QAALA,KAAK;MACrB,mBAAsBA,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;QAAA;QAA/BC,KAAK;QAAEC,IAAI;MAClB,IAAI,CAACV,KAAK,CAACW,YAAY,CAACF,KAAK,EAAEC,IAAI,CAAC;IACtC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA;IAQA;AACF;AACA;AACA;AACA;IACE,kBAAS;MAAA;MACP,OACE,MAAC,KAAK,CAAC,GAAG;QAAC,GAAG,EAAE,IAAI,CAACV,KAAK,CAACS,KAAK,CAACG,KAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACrC,MAAC,KAAK,CAAC,IAAI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAE,IAAI,CAACZ,KAAK,CAACS,KAAK,CAACI,SAAS,CAAc,EACpD,IAAI,CAACb,KAAK,CAACc,KAAK,CAACC,GAAG,CAAC,UAACL,IAAI;QAAA,OACzB,MAAC,KAAK,CAAC,IAAI;UAAC,GAAG,EAAEA,IAAI,CAACM,EAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACtB,MAAI,CAAChB,KAAK,CAACE,aAAa,IACzB,MAAI,CAACF,KAAK,CAACE,aAAa,CAACC,QAAQ,CAACO,IAAI,CAACM,EAAE,CAAC,IAC1C,MAAI,CAAChB,KAAK,CAACS,KAAK,CAACK,KAAK,CAACX,QAAQ,CAAC,eAAe,CAAC,GAC9C,MAAC,IAAI;UACH,IAAI,EAAEN,QAAS;UACf,IAAI,EAAC,MAAM;UACX,KAAK,EAAC,SAAS;UACf,KAAK,EAAE,WAAY;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACnB,GAEF,MAAC,QAAQ;UACP,OAAO,EACL,MAAI,CAACG,KAAK,CAACS,KAAK,CAACO,EAAE,KAAK,oBAAoB,GACxC,MAAI,CAACC,WAAW,CAACP,IAAI,CAACM,EAAE,CAAC,GACzB,MAAI,CAAChB,KAAK,CAACS,KAAK,CAACK,KAAK,CAACX,QAAQ,CAACO,IAAI,CAACM,EAAE,CAC5C;UACD,QAAQ,EAAE,MAAI,CAACZ,QAAS;UACxB,KAAK,YAAK,MAAI,CAACJ,KAAK,CAACS,KAAK,CAACO,EAAE,cAAIN,IAAI,CAACM,EAAE,CAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAE9C,CACU;MAAA,CACd,CAAC,EACF,MAAC,KAAK,CAAC,IAAI;QAAC,SAAS,EAAC,OAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC3B,MAAC,QAAQ;QAAC,IAAI,EAAC,qBAAqB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAClC,MAAC,QAAQ,CAAC,IAAI;QAAC,SAAS,EAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC7B,MAAC,QAAQ,CAAC,IAAI;QACZ,OAAO,EAAE,IAAI,CAAChB,KAAK,CAACkB,QAAS;QAC7B,KAAK,EAAE,IAAI,CAAClB,KAAK,CAACS,KAAK,CAAC,KAAK,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAE/B,MAAC,IAAI;QAAC,IAAI,EAAEb,QAAS;QAAC,IAAI,EAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,EACpC,MAAC,gBAAgB;QAAC,EAAE,EAAC,QAAQ;QAAC,cAAc,EAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CAC1C,CACF,CACP,CACA,CACH;IAEhB;EAAC;EAAA;AAAA,EAtGwBN,SAAS;AAAA,gBAA9BS,YAAY,eAMG;EACjB;EACAU,KAAK,EAAErB,SAAS,CAAC+B,KAAK,CAAC;IACrBP,KAAK,EAAExB,SAAS,CAACgC,MAAM;IACvBC,WAAW,EAAEjC,SAAS,CAACgC,MAAM;IAC7BE,KAAK,EAAElC,SAAS,CAACgC,MAAM;IACvBP,SAAS,EAAEzB,SAAS,CAACgC,MAAM;IAC3BN,KAAK,EAAE1B,SAAS,CAACmC,OAAO,CAACnC,SAAS,CAACgC,MAAM;EAC3C,CAAC,CAAC,CAACI,UAAU;EAEbV,KAAK,EAAE1B,SAAS,CAACmC,OAAO,CACtBnC,SAAS,CAAC+B,KAAK,CAAC;IACdH,EAAE,EAAE5B,SAAS,CAACgC;EAChB,CAAC,CAAC,CACH,CAACI,UAAU;EACZtB,aAAa,EAAEd,SAAS,CAACqC,KAAK;EAC9BP,QAAQ,EAAE9B,SAAS,CAACsC,IAAI,CAACF;AAC3B,CAAC;AAkFH,oBAAehC,UAAU,CAACO,YAAY,CAAC;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[{"id":"Delete","defaultMessage":"Delete"}]}},"sourceType":"module","externalDependencies":[]}