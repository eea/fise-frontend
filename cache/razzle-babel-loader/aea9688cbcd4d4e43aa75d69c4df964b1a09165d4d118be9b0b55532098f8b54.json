{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-metadata-block/src/components/manage/Blocks/MetadataSection/EditMetadataSection.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport cx from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { BlockDataForm, Field, SidebarPortal } from '@plone/volto/components';\nimport MetadataSectionSchema from './schema';\nimport '@eeacms/volto-metadata-block/less/editor.less';\nvar EditMetadataSectionBlock = function EditMetadataSectionBlock(props) {\n  _s();\n  var _data$fields;\n  var selected = props.selected,\n    block = props.block,\n    data = props.data,\n    onChangeBlock = props.onChangeBlock,\n    properties = props.properties,\n    metadata = props.metadata,\n    onChangeField = props.onChangeField;\n  var schema = useSelector(function (state) {\n    var _state$schema;\n    return (state === null || state === void 0 ? void 0 : (_state$schema = state.schema) === null || _state$schema === void 0 ? void 0 : _state$schema.schema) || {};\n  });\n  var metadata_element = {};\n  metadata ? metadata_element = _objectSpread({}, metadata) : metadata_element = _objectSpread({}, properties);\n  return __jsx(\"div\", {\n    className: cx('block metadata-section', {\n      selected: selected\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(SidebarPortal, {\n    selected: selected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, !(data !== null && data !== void 0 && data.readOnlySettings) && __jsx(BlockDataForm, {\n    schema: MetadataSectionSchema,\n    title: MetadataSectionSchema.title,\n    onChangeField: function onChangeField(id, value) {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, _defineProperty({}, id, value)));\n    },\n    formData: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  })), __jsx(\"fieldset\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"legend\", {\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, data.title || 'Metadata section'), (_data$fields = data.fields) !== null && _data$fields !== void 0 && _data$fields.length ? data.fields.map(function (value) {\n    var _schema$required;\n    var _ref = (value === null || value === void 0 ? void 0 : value.field) || {},\n      metadata_id = _ref.id;\n    if (!metadata_id) return '';\n    var field = schema.properties ? schema.properties[metadata_id] : null;\n    var required = schema === null || schema === void 0 ? void 0 : (_schema$required = schema.required) === null || _schema$required === void 0 ? void 0 : _schema$required.includes(metadata_id);\n    return __jsx(Field, _extends({}, field, {\n      id: metadata_id,\n      value: metadata_element[metadata_id],\n      required: required,\n      onChange: function onChange(id, value) {\n        onChangeField(id, value);\n      },\n      key: metadata_id,\n      block: block,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }));\n  }) : 'No fields selected'));\n};\n_s(EditMetadataSectionBlock, \"TrzHZmTHj4wwFgQpZibAMg+e3IE=\", false, function () {\n  return [useSelector];\n});\n_c = EditMetadataSectionBlock;\nexport default EditMetadataSectionBlock;\nvar _c;\n$RefreshReg$(_c, \"EditMetadataSectionBlock\");","map":{"version":3,"names":["React","cx","useSelector","BlockDataForm","Field","SidebarPortal","MetadataSectionSchema","EditMetadataSectionBlock","props","selected","block","data","onChangeBlock","properties","metadata","onChangeField","schema","state","metadata_element","readOnlySettings","title","id","value","fields","length","map","field","metadata_id","required","includes"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-metadata-block/src/components/manage/Blocks/MetadataSection/EditMetadataSection.jsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { BlockDataForm, Field, SidebarPortal } from '@plone/volto/components';\nimport MetadataSectionSchema from './schema';\nimport '@eeacms/volto-metadata-block/less/editor.less';\n\nconst EditMetadataSectionBlock = (props) => {\n  const {\n    selected,\n    block,\n    data,\n    onChangeBlock,\n    properties,\n    metadata,\n    onChangeField,\n  } = props;\n  const schema = useSelector((state) => state?.schema?.schema || {});\n  let metadata_element = {};\n  metadata\n    ? (metadata_element = { ...metadata })\n    : (metadata_element = { ...properties });\n\n  return (\n    <div className={cx('block metadata-section', { selected: selected })}>\n      <SidebarPortal selected={selected}>\n        {!data?.readOnlySettings && (\n          <BlockDataForm\n            schema={MetadataSectionSchema}\n            title={MetadataSectionSchema.title}\n            onChangeField={(id, value) => {\n              onChangeBlock(block, {\n                ...data,\n                [id]: value,\n              });\n            }}\n            formData={data}\n          />\n        )}\n      </SidebarPortal>\n\n      <fieldset>\n        <legend aria-hidden=\"true\">{data.title || 'Metadata section'}</legend>\n        {data.fields?.length\n          ? data.fields.map((value) => {\n              const { id: metadata_id } = value?.field || {};\n              if (!metadata_id) return '';\n              const field = schema.properties\n                ? schema.properties[metadata_id]\n                : null;\n              const required = schema?.required?.includes(metadata_id);\n              return (\n                <Field\n                  {...field}\n                  id={metadata_id}\n                  value={metadata_element[metadata_id]}\n                  required={required}\n                  onChange={(id, value) => {\n                    onChangeField(id, value);\n                  }}\n                  key={metadata_id}\n                  block={block}\n                />\n              );\n            })\n          : 'No fields selected'}\n      </fieldset>\n    </div>\n  );\n};\n\nexport default EditMetadataSectionBlock;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}