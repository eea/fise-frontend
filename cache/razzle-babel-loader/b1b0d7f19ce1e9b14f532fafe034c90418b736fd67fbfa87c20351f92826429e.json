{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/hocs/connectToMultipleProviders.js\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { connect, useDispatch } from 'react-redux';\nimport hash from 'object-hash';\nimport { getDataFromProvider } from '../actions';\nimport { getProviderUrl, getConnectorPath, getForm, getDataQuery } from '../helpers';\n\n/**\n * connectToMultipleProviders.\n *\n * @param {} WrappedComponent\n */\nexport function connectToMultipleProviders(getConfig = () => ({})) {\n  return WrappedComponent => {\n    return connect(state => ({\n      content: state.content.data,\n      connected_data_parameters: state.connected_data_parameters,\n      data_providers: state.data_providers\n    }))(withRouter(props => {\n      var _props$data_providers4, _props$data_providers8, _props$data_providers16, _props$data_providers17, _props$data_providers18;\n      const dispatch = useDispatch();\n      const params = useParams();\n      const config = useMemo(() => getConfig(props), [props]);\n      const {\n        0: mounted,\n        1: setMounted\n      } = useState(false);\n      const {\n        0: state,\n        1: setState\n      } = useState({\n        form: [],\n        data_query: [],\n        hashValues: [],\n        connectorsPath: []\n      });\n      const providers = useMemo(() => {\n        return config.providers || [];\n      }, [config]);\n      useEffect(() => {\n        const newState = {\n          form: [],\n          data_query: [],\n          hashValues: [],\n          connectorsPath: []\n        };\n        providers.forEach((provider, index) => {\n          const provider_url = getProviderUrl(provider.provider_url || provider.url);\n          // Get form\n          newState.form.push(getForm(_objectSpread(_objectSpread({}, provider), {}, {\n            location: props.location\n          })));\n          // Get data query\n          newState.data_query.push(getDataQuery({\n            params,\n            provider_url,\n            location: props.location,\n            connected_data_parameters: props.connected_data_parameters,\n            data: {\n              data_query: provider.data_query,\n              has_data_query_by_context: provider.has_data_query_by_context,\n              has_data_query_by_provider: provider.has_data_query_by_provider\n            }\n          }));\n          // Get hash value\n          const _hash_1 = hash(newState.form[index]);\n          const _hash_2 = hash(newState.data_query[index]);\n          newState.hashValues.push(hash(_hash_1 + _hash_2));\n          // Get connector path\n          newState.connectorsPath.push(getConnectorPath(provider_url, newState.hashValues[index]));\n        });\n        setState(_objectSpread({}, newState));\n      }, [providers, params, props.location, props.connected_data_parameters]);\n      const providers_data = useMemo(() => {\n        const data = {};\n        providers.forEach((provider, index) => {\n          var _props$data_providers, _props$data_providers2, _props$data_providers3;\n          const provider_url = getProviderUrl(provider.provider_url || provider.url);\n          if (!provider_url || !state.hashValues[index]) return;\n          const title = provider.name || provider.title || provider_url;\n          data[title] = (_props$data_providers = props.data_providers) === null || _props$data_providers === void 0 ? void 0 : (_props$data_providers2 = _props$data_providers.data) === null || _props$data_providers2 === void 0 ? void 0 : (_props$data_providers3 = _props$data_providers2[provider_url]) === null || _props$data_providers3 === void 0 ? void 0 : _props$data_providers3[state.hashValues[index]];\n        });\n        return data;\n      }, [state, providers, (_props$data_providers4 = props.data_providers) === null || _props$data_providers4 === void 0 ? void 0 : _props$data_providers4.data]);\n      const providers_metadata = useMemo(() => {\n        const data = {};\n        providers.forEach((provider, index) => {\n          var _props$data_providers5, _props$data_providers6, _props$data_providers7;\n          const provider_url = getProviderUrl(provider.provider_url || provider.url);\n          if (!provider_url || !state.hashValues[index]) return;\n          const title = provider.name || provider.title || provider_url;\n          data[title] = (_props$data_providers5 = props.data_providers) === null || _props$data_providers5 === void 0 ? void 0 : (_props$data_providers6 = _props$data_providers5.metadata) === null || _props$data_providers6 === void 0 ? void 0 : (_props$data_providers7 = _props$data_providers6[provider_url]) === null || _props$data_providers7 === void 0 ? void 0 : _props$data_providers7[state.hashValues[index]];\n        });\n        return data;\n      }, [state, providers, (_props$data_providers8 = props.data_providers) === null || _props$data_providers8 === void 0 ? void 0 : _props$data_providers8.metadata]);\n      useEffect(() => {\n        if (!mounted && __CLIENT__) {\n          setMounted(true);\n          return;\n        }\n        providers.forEach((provider, index) => {\n          var _props$data_providers9, _props$data_providers10, _props$data_providers11, _props$data_providers12, _props$data_providers13, _props$data_providers14, _props$data_providers15;\n          const provider_url = getProviderUrl(provider.provider_url || provider.url);\n          const form = state.form[index];\n          const data_query = state.data_query[index];\n          const hashValue = state.hashValues[index];\n          const connectorPath = state.connectorsPath[index];\n          const provider_data = provider_url ? (_props$data_providers9 = props.data_providers) === null || _props$data_providers9 === void 0 ? void 0 : (_props$data_providers10 = _props$data_providers9.data) === null || _props$data_providers10 === void 0 ? void 0 : (_props$data_providers11 = _props$data_providers10[provider_url]) === null || _props$data_providers11 === void 0 ? void 0 : _props$data_providers11[hashValue] : null;\n          const isPending = provider_url ? (_props$data_providers12 = props.data_providers) === null || _props$data_providers12 === void 0 ? void 0 : (_props$data_providers13 = _props$data_providers12.pendingConnectors) === null || _props$data_providers13 === void 0 ? void 0 : _props$data_providers13[connectorPath] : false;\n          const isFailed = provider_url ? (_props$data_providers14 = props.data_providers) === null || _props$data_providers14 === void 0 ? void 0 : (_props$data_providers15 = _props$data_providers14.failedConnectors) === null || _props$data_providers15 === void 0 ? void 0 : _props$data_providers15[connectorPath] : false;\n          const readyToDispatch = provider_url && hashValue && connectorPath && !provider_data && !isPending && !isFailed;\n          if (readyToDispatch) {\n            dispatch(getDataFromProvider(provider_url, form, data_query, hashValue));\n          }\n        });\n      }, [dispatch, mounted, props.location, props.data_providers, (_props$data_providers16 = props.data_providers) === null || _props$data_providers16 === void 0 ? void 0 : _props$data_providers16.pendingConnectors, (_props$data_providers17 = props.data_providers) === null || _props$data_providers17 === void 0 ? void 0 : _props$data_providers17.failedConnectors, (_props$data_providers18 = props.data_providers) === null || _props$data_providers18 === void 0 ? void 0 : _props$data_providers18.data, providers, state]);\n      return __jsx(WrappedComponent, _extends({}, props, {\n        providers_data: providers_data,\n        providers_metadata: providers_metadata,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }\n      }));\n    }));\n  };\n}\nexport default connectToMultipleProviders;","map":{"version":3,"names":["React","useEffect","useMemo","useState","useParams","withRouter","connect","useDispatch","hash","getDataFromProvider","getProviderUrl","getConnectorPath","getForm","getDataQuery","connectToMultipleProviders","getConfig","WrappedComponent","state","content","data","connected_data_parameters","data_providers","props","dispatch","params","config","mounted","setMounted","setState","form","data_query","hashValues","connectorsPath","providers","newState","forEach","provider","index","provider_url","url","push","location","has_data_query_by_context","has_data_query_by_provider","_hash_1","_hash_2","providers_data","title","name","providers_metadata","metadata","__CLIENT__","hashValue","connectorPath","provider_data","isPending","pendingConnectors","isFailed","failedConnectors","readyToDispatch"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/hocs/connectToMultipleProviders.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { connect, useDispatch } from 'react-redux';\nimport hash from 'object-hash';\nimport { getDataFromProvider } from '../actions';\nimport {\n  getProviderUrl,\n  getConnectorPath,\n  getForm,\n  getDataQuery,\n} from '../helpers';\n\n/**\n * connectToMultipleProviders.\n *\n * @param {} WrappedComponent\n */\nexport function connectToMultipleProviders(getConfig = () => ({})) {\n  return (WrappedComponent) => {\n    return connect((state) => ({\n      content: state.content.data,\n      connected_data_parameters: state.connected_data_parameters,\n      data_providers: state.data_providers,\n    }))(\n      withRouter((props) => {\n        const dispatch = useDispatch();\n        const params = useParams();\n        const config = useMemo(() => getConfig(props), [props]);\n        const [mounted, setMounted] = useState(false);\n        const [state, setState] = useState({\n          form: [],\n          data_query: [],\n          hashValues: [],\n          connectorsPath: [],\n        });\n\n        const providers = useMemo(() => {\n          return config.providers || [];\n        }, [config]);\n\n        useEffect(() => {\n          const newState = {\n            form: [],\n            data_query: [],\n            hashValues: [],\n            connectorsPath: [],\n          };\n          providers.forEach((provider, index) => {\n            const provider_url = getProviderUrl(\n              provider.provider_url || provider.url,\n            );\n            // Get form\n            newState.form.push(\n              getForm({ ...provider, location: props.location }),\n            );\n            // Get data query\n            newState.data_query.push(\n              getDataQuery({\n                params,\n                provider_url,\n                location: props.location,\n                connected_data_parameters: props.connected_data_parameters,\n                data: {\n                  data_query: provider.data_query,\n                  has_data_query_by_context: provider.has_data_query_by_context,\n                  has_data_query_by_provider:\n                    provider.has_data_query_by_provider,\n                },\n              }),\n            );\n            // Get hash value\n            const _hash_1 = hash(newState.form[index]);\n            const _hash_2 = hash(newState.data_query[index]);\n            newState.hashValues.push(hash(_hash_1 + _hash_2));\n            // Get connector path\n            newState.connectorsPath.push(\n              getConnectorPath(provider_url, newState.hashValues[index]),\n            );\n          });\n          setState({ ...newState });\n        }, [\n          providers,\n          params,\n          props.location,\n          props.connected_data_parameters,\n        ]);\n\n        const providers_data = useMemo(() => {\n          const data = {};\n          providers.forEach((provider, index) => {\n            const provider_url = getProviderUrl(\n              provider.provider_url || provider.url,\n            );\n            if (!provider_url || !state.hashValues[index]) return;\n            const title = provider.name || provider.title || provider_url;\n            data[title] =\n              props.data_providers?.data?.[provider_url]?.[\n                state.hashValues[index]\n              ];\n          });\n          return data;\n        }, [state, providers, props.data_providers?.data]);\n\n        const providers_metadata = useMemo(() => {\n          const data = {};\n          providers.forEach((provider, index) => {\n            const provider_url = getProviderUrl(\n              provider.provider_url || provider.url,\n            );\n            if (!provider_url || !state.hashValues[index]) return;\n            const title = provider.name || provider.title || provider_url;\n            data[title] =\n              props.data_providers?.metadata?.[provider_url]?.[\n                state.hashValues[index]\n              ];\n          });\n          return data;\n        }, [state, providers, props.data_providers?.metadata]);\n\n        useEffect(() => {\n          if (!mounted && __CLIENT__) {\n            setMounted(true);\n            return;\n          }\n          providers.forEach((provider, index) => {\n            const provider_url = getProviderUrl(\n              provider.provider_url || provider.url,\n            );\n            const form = state.form[index];\n            const data_query = state.data_query[index];\n            const hashValue = state.hashValues[index];\n            const connectorPath = state.connectorsPath[index];\n\n            const provider_data = provider_url\n              ? props.data_providers?.data?.[provider_url]?.[hashValue]\n              : null;\n\n            const isPending = provider_url\n              ? props.data_providers?.pendingConnectors?.[connectorPath]\n              : false;\n\n            const isFailed = provider_url\n              ? props.data_providers?.failedConnectors?.[connectorPath]\n              : false;\n\n            const readyToDispatch =\n              provider_url &&\n              hashValue &&\n              connectorPath &&\n              !provider_data &&\n              !isPending &&\n              !isFailed;\n\n            if (readyToDispatch) {\n              dispatch(\n                getDataFromProvider(provider_url, form, data_query, hashValue),\n              );\n            }\n          });\n        }, [\n          dispatch,\n          mounted,\n          props.location,\n          props.data_providers,\n          props.data_providers?.pendingConnectors,\n          props.data_providers?.failedConnectors,\n          props.data_providers?.data,\n          providers,\n          state,\n        ]);\n\n        return (\n          <WrappedComponent\n            {...props}\n            providers_data={providers_data}\n            providers_metadata={providers_metadata}\n          />\n        );\n      }),\n    );\n  };\n}\n\nexport default connectToMultipleProviders;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}