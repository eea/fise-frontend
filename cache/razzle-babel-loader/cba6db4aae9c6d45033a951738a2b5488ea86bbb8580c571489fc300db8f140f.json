{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-metadata-block/src/widgets/Select.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { useSelector } from 'react-redux';\nimport { getWidget } from '@eeacms/volto-metadata-block/utils';\nimport { Field } from '@plone/volto/components';\nexport const SelectMetadata = props => {\n  // Get Object metadata from global state\n  const properties = useSelector(state => {\n    var _state$schema, _state$schema$schema;\n    return (state === null || state === void 0 ? void 0 : (_state$schema = state.schema) === null || _state$schema === void 0 ? void 0 : (_state$schema$schema = _state$schema.schema) === null || _state$schema$schema === void 0 ? void 0 : _state$schema$schema.properties) || {};\n  });\n  const vocabulary = Object.keys(properties).map(key => {\n    const field = properties[key];\n    const widget = getWidget(key, field);\n    return {\n      key: key,\n      value: {\n        id: key,\n        widget: widget\n      },\n      text: (field === null || field === void 0 ? void 0 : field.title) || key\n    };\n  }).filter(val => !!val);\n  return __jsx(Dropdown, _extends({}, props, {\n    value: props.value,\n    selection: true,\n    search: true,\n    placeholder: \"Select metadata\",\n    options: vocabulary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }));\n};\nexport const SelectMetadataBlock = SelectMetadata;\nexport const SelectMetadataField = props => {\n  const {\n    id,\n    value = null,\n    onChange,\n    title,\n    block\n  } = props;\n  const properties = useSelector(state => {\n    var _state$schema2, _state$schema2$schema;\n    return (state === null || state === void 0 ? void 0 : (_state$schema2 = state.schema) === null || _state$schema2 === void 0 ? void 0 : (_state$schema2$schema = _state$schema2.schema) === null || _state$schema2$schema === void 0 ? void 0 : _state$schema2$schema.properties) || {};\n  });\n  const fields = Object.assign({}, ...Object.keys(properties).map(key => {\n    const field = properties[key];\n    const widget = getWidget(key, field);\n    return {\n      [key]: {\n        id: key,\n        widget,\n        title: (field === null || field === void 0 ? void 0 : field.title) || key\n      }\n    };\n  }).filter(val => !!val));\n  const choices = Object.keys(fields).map(k => [k, fields[k].title]);\n  return __jsx(Field, {\n    id: id,\n    block: block,\n    title: title,\n    choices: choices,\n    value: value === null || value === void 0 ? void 0 : value.id,\n    onChange: (id, value) => {\n      onChange(id, fields[value]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"names":["React","Dropdown","useSelector","getWidget","Field","SelectMetadata","props","properties","state","schema","vocabulary","Object","keys","map","key","field","widget","value","id","text","title","filter","val","SelectMetadataBlock","SelectMetadataField","onChange","block","fields","assign","choices","k"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-metadata-block/src/widgets/Select.jsx"],"sourcesContent":["import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { useSelector } from 'react-redux';\nimport { getWidget } from '@eeacms/volto-metadata-block/utils';\nimport { Field } from '@plone/volto/components';\n\nexport const SelectMetadata = (props) => {\n  // Get Object metadata from global state\n  const properties = useSelector(\n    (state) => state?.schema?.schema?.properties || {},\n  );\n  const vocabulary = Object.keys(properties)\n    .map((key) => {\n      const field = properties[key];\n      const widget = getWidget(key, field);\n      return {\n        key: key,\n        value: { id: key, widget: widget },\n        text: field?.title || key,\n      };\n    })\n    .filter((val) => !!val);\n\n  return (\n    <Dropdown\n      {...props}\n      value={props.value}\n      selection\n      search\n      placeholder=\"Select metadata\"\n      options={vocabulary}\n    />\n  );\n};\n\nexport const SelectMetadataBlock = SelectMetadata;\n\nexport const SelectMetadataField = (props) => {\n  const { id, value = null, onChange, title, block } = props;\n  const properties = useSelector(\n    (state) => state?.schema?.schema?.properties || {},\n  );\n\n  const fields = Object.assign(\n    {},\n    ...Object.keys(properties)\n      .map((key) => {\n        const field = properties[key];\n        const widget = getWidget(key, field);\n        return { [key]: { id: key, widget, title: field?.title || key } };\n      })\n      .filter((val) => !!val),\n  );\n\n  const choices = Object.keys(fields).map((k) => [k, fields[k].title]);\n\n  return (\n    <Field\n      id={id}\n      block={block}\n      title={title}\n      choices={choices}\n      value={value?.id}\n      onChange={(id, value) => {\n        onChange(id, fields[value]);\n      }}\n    />\n  );\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}