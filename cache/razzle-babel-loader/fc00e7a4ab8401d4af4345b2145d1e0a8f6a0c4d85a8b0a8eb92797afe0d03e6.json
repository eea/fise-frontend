{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Blocks/DataQueryFilter/View.jsx\",\n  _this2 = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport loadable from '@loadable/component';\nimport { Option, DropdownIndicator, selectTheme, customSelectStyles } from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { setConnectedDataParameters, deleteConnectedDataParameters } from '@eeacms/volto-datablocks/actions';\nvar Select = loadable({\n  resolved: {},\n  chunkName: function chunkName() {\n    return \"react-select\";\n  },\n  isReady: function isReady(props) {\n    var key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: function importAsync() {\n    return import( /* webpackChunkName: \"react-select\" */'react-select');\n  },\n  requireAsync: function requireAsync(props) {\n    var _this = this;\n    var key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(function (resolved) {\n      _this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync: function requireSync(props) {\n    var id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve: function resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-select\");\n    }\n    return eval('require.resolve')(\"react-select\");\n  }\n});\n_c = Select;\nvar View = function View(props) {\n  _s();\n  var _props$data2, _props$connected_data, _props$connected_data2, _props$connected_data3;\n  var _props$data = props.data,\n    data = _props$data === void 0 ? {} : _props$data,\n    id = props.id;\n  var select_field = data.select_field,\n    options = data.options,\n    placeholder = data.placeholder;\n  var provider_url = ((_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.provider_url) || '';\n  useEffect(function () {\n    return function () {\n      props.deleteConnectedDataParameters(provider_url, \"\".concat(data['@type'], \"_\").concat(select_field));\n    };\n    /* eslint-disable-next-line */\n  }, []);\n  if (!provider_url && props.mode === 'edit') return __jsx(\"div\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }\n  }, \"Select a provider from the sidebar\");\n  var value = ((_props$connected_data = props.connected_data_parameters.byProviderPath[provider_url]) === null || _props$connected_data === void 0 ? void 0 : (_props$connected_data2 = _props$connected_data[\"\".concat(data['@type'], \"_\").concat(select_field)]) === null || _props$connected_data2 === void 0 ? void 0 : (_props$connected_data3 = _props$connected_data2.v) === null || _props$connected_data3 === void 0 ? void 0 : _props$connected_data3[0]) || null;\n  return select_field ? __jsx(Select, {\n    id: \"field-\".concat(id),\n    key: \"select-i\",\n    name: id,\n    disabled: false,\n    className: \"react-select-container\",\n    classNamePrefix: \"react-select\",\n    options: [].concat(_toConsumableArray(options || []), [{\n      label: 'No value',\n      value: null\n    }]),\n    styles: customSelectStyles,\n    theme: selectTheme,\n    components: {\n      DropdownIndicator: DropdownIndicator,\n      Option: Option\n    },\n    defaultValue: value,\n    onChange: function onChange(_ref) {\n      var value = _ref.value;\n      if (value) {\n        props.setConnectedDataParameters(provider_url, {\n          i: select_field,\n          o: 'plone.app.querystring.operation.selection.any',\n          v: [value]\n        }, \"\".concat(data['@type'], \"_\").concat(select_field));\n      } else {\n        props.deleteConnectedDataParameters(provider_url, \"\".concat(data['@type'], \"_\").concat(select_field));\n      }\n    },\n    placeholder: placeholder,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }) : 'Not configured yet';\n};\n_s(View, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = View;\nexport default connect(function (state) {\n  return {\n    connected_data_parameters: state.connected_data_parameters\n  };\n}, {\n  setConnectedDataParameters: setConnectedDataParameters,\n  deleteConnectedDataParameters: deleteConnectedDataParameters\n})(View);\nvar _c, _c2;\n$RefreshReg$(_c, \"Select\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"names":["React","useEffect","connect","loadable","Option","DropdownIndicator","selectTheme","customSelectStyles","setConnectedDataParameters","deleteConnectedDataParameters","Select","View","props","data","id","select_field","options","placeholder","provider_url","mode","value","connected_data_parameters","byProviderPath","v","label","i","o","state"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Blocks/DataQueryFilter/View.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport loadable from '@loadable/component';\nimport {\n  Option,\n  DropdownIndicator,\n  selectTheme,\n  customSelectStyles,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport {\n  setConnectedDataParameters,\n  deleteConnectedDataParameters,\n} from '@eeacms/volto-datablocks/actions';\n\nconst Select = loadable(() => import('react-select'));\n\nconst View = (props) => {\n  const { data = {}, id } = props;\n  const { select_field, options, placeholder } = data;\n  const provider_url = props.data?.provider_url || '';\n\n  useEffect(() => {\n    return () => {\n      props.deleteConnectedDataParameters(\n        provider_url,\n        `${data['@type']}_${select_field}`,\n      );\n    };\n    /* eslint-disable-next-line */\n  }, []);\n\n  if (!provider_url && props.mode === 'edit')\n    return <div>Select a provider from the sidebar</div>;\n\n  const value =\n    props.connected_data_parameters.byProviderPath[provider_url]?.[\n      `${data['@type']}_${select_field}`\n    ]?.v?.[0] || null;\n\n  return select_field ? (\n    <Select\n      id={`field-${id}`}\n      key={`select-i`}\n      name={id}\n      disabled={false}\n      className=\"react-select-container\"\n      classNamePrefix=\"react-select\"\n      options={[\n        ...(options || []),\n        {\n          label: 'No value',\n          value: null,\n        },\n      ]}\n      styles={customSelectStyles}\n      theme={selectTheme}\n      components={{ DropdownIndicator, Option }}\n      defaultValue={value}\n      onChange={({ value }) => {\n        if (value) {\n          props.setConnectedDataParameters(\n            provider_url,\n            {\n              i: select_field,\n              o: 'plone.app.querystring.operation.selection.any',\n              v: [value],\n            },\n            `${data['@type']}_${select_field}`,\n          );\n        } else {\n          props.deleteConnectedDataParameters(\n            provider_url,\n            `${data['@type']}_${select_field}`,\n          );\n        }\n      }}\n      placeholder={placeholder}\n    />\n  ) : (\n    'Not configured yet'\n  );\n};\n\nexport default connect(\n  (state) => {\n    return {\n      connected_data_parameters: state.connected_data_parameters,\n    };\n  },\n  { setConnectedDataParameters, deleteConnectedDataParameters },\n)(View);\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SACEC,MAAM,EACNC,iBAAiB,EACjBC,WAAW,EACXC,kBAAkB,QACb,sDAAsD;AAC7D,SACEC,0BAA0B,EAC1BC,6BAA6B,QACxB,kCAAkC;AAEzC,IAAMC,MAAM,GAAGP,QAAQ;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;EAAA;EAAA,aAAC;IAAA,OAAM,MAAM,wCAAC,cAAc,CAAC;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;MAAA;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;MAAA;IAAA;IAAA;EAAA;EAAA;IAAA;MAAA;IAAA;IAAA;EAAA;AAAA,EAAC;AAAC,KAAhDO,MAAM;AAEZ,IAAMC,IAAI,GAAG,SAAPA,IAAI,CAAIC,KAAK,EAAK;EAAA;EAAA;EACtB,kBAA0BA,KAAK,CAAvBC,IAAI;IAAJA,IAAI,4BAAG,CAAC,CAAC;IAAEC,EAAE,GAAKF,KAAK,CAAZE,EAAE;EACrB,IAAQC,YAAY,GAA2BF,IAAI,CAA3CE,YAAY;IAAEC,OAAO,GAAkBH,IAAI,CAA7BG,OAAO;IAAEC,WAAW,GAAKJ,IAAI,CAApBI,WAAW;EAC1C,IAAMC,YAAY,GAAG,iBAAAN,KAAK,CAACC,IAAI,iDAAV,aAAYK,YAAY,KAAI,EAAE;EAEnDjB,SAAS,CAAC,YAAM;IACd,OAAO,YAAM;MACXW,KAAK,CAACH,6BAA6B,CACjCS,YAAY,YACTL,IAAI,CAAC,OAAO,CAAC,cAAIE,YAAY,EACjC;IACH,CAAC;IACD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACG,YAAY,IAAIN,KAAK,CAACO,IAAI,KAAK,MAAM,EACxC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wCAA6C;EAEtD,IAAMC,KAAK,GACT,0BAAAR,KAAK,CAACS,yBAAyB,CAACC,cAAc,CAACJ,YAAY,CAAC,oFAA5D,gCACKL,IAAI,CAAC,OAAO,CAAC,cAAIE,YAAY,EACjC,qFAFD,uBAEGQ,CAAC,2DAFJ,uBAEO,CAAC,CAAC,KAAI,IAAI;EAEnB,OAAOR,YAAY,GACjB,MAAC,MAAM;IACL,EAAE,kBAAWD,EAAE,CAAG;IAClB,GAAG,YAAa;IAChB,IAAI,EAAEA,EAAG;IACT,QAAQ,EAAE,KAAM;IAChB,SAAS,EAAC,wBAAwB;IAClC,eAAe,EAAC,cAAc;IAC9B,OAAO,+BACDE,OAAO,IAAI,EAAE,IACjB;MACEQ,KAAK,EAAE,UAAU;MACjBJ,KAAK,EAAE;IACT,CAAC,EACD;IACF,MAAM,EAAEb,kBAAmB;IAC3B,KAAK,EAAED,WAAY;IACnB,UAAU,EAAE;MAAED,iBAAiB,EAAjBA,iBAAiB;MAAED,MAAM,EAANA;IAAO,CAAE;IAC1C,YAAY,EAAEgB,KAAM;IACpB,QAAQ,EAAE,wBAAe;MAAA,IAAZA,KAAK,QAALA,KAAK;MAChB,IAAIA,KAAK,EAAE;QACTR,KAAK,CAACJ,0BAA0B,CAC9BU,YAAY,EACZ;UACEO,CAAC,EAAEV,YAAY;UACfW,CAAC,EAAE,+CAA+C;UAClDH,CAAC,EAAE,CAACH,KAAK;QACX,CAAC,YACEP,IAAI,CAAC,OAAO,CAAC,cAAIE,YAAY,EACjC;MACH,CAAC,MAAM;QACLH,KAAK,CAACH,6BAA6B,CACjCS,YAAY,YACTL,IAAI,CAAC,OAAO,CAAC,cAAIE,YAAY,EACjC;MACH;IACF,CAAE;IACF,WAAW,EAAEE,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACzB,GAEF,oBACD;AACH,CAAC;AAAC,GAjEIN,IAAI;AAAA,MAAJA,IAAI;AAmEV,eAAeT,OAAO,CACpB,UAACyB,KAAK,EAAK;EACT,OAAO;IACLN,yBAAyB,EAAEM,KAAK,CAACN;EACnC,CAAC;AACH,CAAC,EACD;EAAEb,0BAA0B,EAA1BA,0BAA0B;EAAEC,6BAA6B,EAA7BA;AAA8B,CAAC,CAC9D,CAACE,IAAI,CAAC;AAAC;AAAA;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}