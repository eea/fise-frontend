{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/ReactVirtualized/DynamicRowHeightList.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nclass DynamicHeightList extends React.PureComponent {\n  // As per `react-virtualized` docs, one should use a PureComponent\n  // to avoid performance issues\n  // We could have used a React.memo + functional component instead,\n  // but relied on the class-based implementation for simplicity\n  constructor(props) {\n    super(props);\n    this._cache = new props.reactVirtualized.CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 50\n    });\n    this._rowRenderer = this._rowRenderer.bind(this);\n  }\n  _rowRenderer({\n    index,\n    key,\n    parent,\n    style\n  }) {\n    const CellMeasurer = this.props.reactVirtualized.CellMeasurer;\n    return __jsx(CellMeasurer, {\n      cache: this._cache,\n      columnIndex: 0,\n      key: key,\n      rowIndex: index,\n      parent: parent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, ({\n      measure\n    }) => __jsx(\"div\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 27\n      }\n    }, this.props.children[index]));\n  }\n  render() {\n    var _this$props$children;\n    const List = this.props.reactVirtualized.List;\n    return __jsx(List, _extends({}, this.props, {\n      ref: element => {\n        this._list = element;\n      },\n      deferredMeasurementCache: this._cache,\n      overscanRowCount: 0,\n      rowCount: ((_this$props$children = this.props.children) === null || _this$props$children === void 0 ? void 0 : _this$props$children.length) || 0,\n      rowHeight: this._cache.rowHeight,\n      rowRenderer: this._rowRenderer,\n      width: 200,\n      height: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }));\n  }\n}\nexport default injectLazyLibs('reactVirtualized')(DynamicHeightList);","map":{"version":3,"names":["React","injectLazyLibs","DynamicHeightList","PureComponent","constructor","props","_cache","reactVirtualized","CellMeasurerCache","fixedWidth","minHeight","_rowRenderer","bind","index","key","parent","style","CellMeasurer","measure","children","render","List","element","_list","length","rowHeight"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/ReactVirtualized/DynamicRowHeightList.jsx"],"sourcesContent":["import React from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nclass DynamicHeightList extends React.PureComponent {\n  // As per `react-virtualized` docs, one should use a PureComponent\n  // to avoid performance issues\n  // We could have used a React.memo + functional component instead,\n  // but relied on the class-based implementation for simplicity\n  constructor(props) {\n    super(props);\n\n    this._cache = new props.reactVirtualized.CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 50,\n    });\n\n    this._rowRenderer = this._rowRenderer.bind(this);\n  }\n\n  _rowRenderer({ index, key, parent, style }) {\n    const CellMeasurer = this.props.reactVirtualized.CellMeasurer;\n    return (\n      <CellMeasurer\n        cache={this._cache}\n        columnIndex={0}\n        key={key}\n        rowIndex={index}\n        parent={parent}\n      >\n        {({ measure }) => <div style={style}>{this.props.children[index]}</div>}\n      </CellMeasurer>\n    );\n  }\n\n  render() {\n    const List = this.props.reactVirtualized.List;\n\n    return (\n      <List\n        {...this.props}\n        ref={(element) => {\n          this._list = element;\n        }}\n        deferredMeasurementCache={this._cache}\n        overscanRowCount={0}\n        rowCount={this.props.children?.length || 0}\n        rowHeight={this._cache.rowHeight}\n        rowRenderer={this._rowRenderer}\n        width={200}\n        height={500}\n      />\n    );\n  }\n}\n\nexport default injectLazyLibs('reactVirtualized')(DynamicHeightList);\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,wCAAwC;AAEvE,MAAMC,iBAAiB,SAASF,KAAK,CAACG,aAAa,CAAC;EAClD;EACA;EACA;EACA;EACAC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,MAAM,GAAG,IAAID,KAAK,CAACE,gBAAgB,CAACC,iBAAiB,CAAC;MACzDC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EAClD;EAEAD,YAAY,CAAC;IAAEE,KAAK;IAAEC,GAAG;IAAEC,MAAM;IAAEC;EAAM,CAAC,EAAE;IAC1C,MAAMC,YAAY,GAAG,IAAI,CAACZ,KAAK,CAACE,gBAAgB,CAACU,YAAY;IAC7D,OACE,MAAC,YAAY;MACX,KAAK,EAAE,IAAI,CAACX,MAAO;MACnB,WAAW,EAAE,CAAE;MACf,GAAG,EAAEQ,GAAI;MACT,QAAQ,EAAED,KAAM;MAChB,MAAM,EAAEE,MAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEd,CAAC;MAAEG;IAAQ,CAAC,KAAK;MAAK,KAAK,EAAEF,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAE,IAAI,CAACX,KAAK,CAACc,QAAQ,CAACN,KAAK,CAAC,CAAO,CAC1D;EAEnB;EAEAO,MAAM,GAAG;IAAA;IACP,MAAMC,IAAI,GAAG,IAAI,CAAChB,KAAK,CAACE,gBAAgB,CAACc,IAAI;IAE7C,OACE,MAAC,IAAI,eACC,IAAI,CAAChB,KAAK;MACd,GAAG,EAAGiB,OAAO,IAAK;QAChB,IAAI,CAACC,KAAK,GAAGD,OAAO;MACtB,CAAE;MACF,wBAAwB,EAAE,IAAI,CAAChB,MAAO;MACtC,gBAAgB,EAAE,CAAE;MACpB,QAAQ,EAAE,6BAAI,CAACD,KAAK,CAACc,QAAQ,yDAAnB,qBAAqBK,MAAM,KAAI,CAAE;MAC3C,SAAS,EAAE,IAAI,CAAClB,MAAM,CAACmB,SAAU;MACjC,WAAW,EAAE,IAAI,CAACd,YAAa;MAC/B,KAAK,EAAE,GAAI;MACX,MAAM,EAAE,GAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACZ;EAEN;AACF;AAEA,eAAeV,cAAc,CAAC,kBAAkB,CAAC,CAACC,iBAAiB,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}