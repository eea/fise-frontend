{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Toolbar/StandardWrapper.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Icon } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\nvar StandardWrapper = function StandardWrapper(props) {\n  function pull() {\n    props.unloadComponent();\n  }\n  return __jsx(\"div\", {\n    className: cx(\"\".concat(props.componentName, \" pastanaga-menu\"), {\n      'has-inner-actions': props.hasActions\n    }),\n    style: {\n      flex: props.theToolbar.current ? \"0 0 \".concat(props.theToolbar.current.getBoundingClientRect().width, \"px\") : null\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    className: \"header pulled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: pull,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: backSVG,\n    size: \"30px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"vertical divider\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, props.componentTitle || props.componentName)), props.children);\n};\n_c = StandardWrapper;\nStandardWrapper.propTypes = {\n  componentName: PropTypes.string.isRequired,\n  componentTitle: PropTypes.string,\n  unloadComponent: PropTypes.func.isRequired,\n  loadComponent: PropTypes.func.isRequired,\n  closeMenu: PropTypes.func.isRequired,\n  hasActions: PropTypes.bool\n};\nexport default StandardWrapper;\nvar _c;\n$RefreshReg$(_c, \"StandardWrapper\");","map":{"version":3,"names":["React","PropTypes","cx","Icon","backSVG","StandardWrapper","props","pull","unloadComponent","componentName","hasActions","flex","theToolbar","current","getBoundingClientRect","width","componentTitle","children","propTypes","string","isRequired","func","loadComponent","closeMenu","bool"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Toolbar/StandardWrapper.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Icon } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst StandardWrapper = (props) => {\n  function pull() {\n    props.unloadComponent();\n  }\n\n  return (\n    <div\n      className={cx(`${props.componentName} pastanaga-menu`, {\n        'has-inner-actions': props.hasActions,\n      })}\n      style={{\n        flex: props.theToolbar.current\n          ? `0 0 ${props.theToolbar.current.getBoundingClientRect().width}px`\n          : null,\n      }}\n    >\n      <header className=\"header pulled\">\n        <button onClick={pull}>\n          <Icon name={backSVG} size=\"30px\" />\n        </button>\n        <div className=\"vertical divider\" />\n        <h2>{props.componentTitle || props.componentName}</h2>\n      </header>\n      {props.children}\n    </div>\n  );\n};\n\nStandardWrapper.propTypes = {\n  componentName: PropTypes.string.isRequired,\n  componentTitle: PropTypes.string,\n  unloadComponent: PropTypes.func.isRequired,\n  loadComponent: PropTypes.func.isRequired,\n  closeMenu: PropTypes.func.isRequired,\n  hasActions: PropTypes.bool,\n};\n\nexport default StandardWrapper;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,OAAOC,OAAO,MAAM,6BAA6B;AAEjD,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAIC,KAAK,EAAK;EACjC,SAASC,IAAI,GAAG;IACdD,KAAK,CAACE,eAAe,EAAE;EACzB;EAEA,OACE;IACE,SAAS,EAAEN,EAAE,WAAII,KAAK,CAACG,aAAa,sBAAmB;MACrD,mBAAmB,EAAEH,KAAK,CAACI;IAC7B,CAAC,CAAE;IACH,KAAK,EAAE;MACLC,IAAI,EAAEL,KAAK,CAACM,UAAU,CAACC,OAAO,iBACnBP,KAAK,CAACM,UAAU,CAACC,OAAO,CAACC,qBAAqB,EAAE,CAACC,KAAK,UAC7D;IACN,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEF;IAAQ,SAAS,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC/B;IAAQ,OAAO,EAAER,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACpB,MAAC,IAAI;IAAC,IAAI,EAAEH,OAAQ;IAAC,IAAI,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAC5B,EACT;IAAK,SAAS,EAAC,kBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACpC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKE,KAAK,CAACU,cAAc,IAAIV,KAAK,CAACG,aAAa,CAAM,CAC/C,EACRH,KAAK,CAACW,QAAQ,CACX;AAEV,CAAC;AAAC,KA1BIZ,eAAe;AA4BrBA,eAAe,CAACa,SAAS,GAAG;EAC1BT,aAAa,EAAER,SAAS,CAACkB,MAAM,CAACC,UAAU;EAC1CJ,cAAc,EAAEf,SAAS,CAACkB,MAAM;EAChCX,eAAe,EAAEP,SAAS,CAACoB,IAAI,CAACD,UAAU;EAC1CE,aAAa,EAAErB,SAAS,CAACoB,IAAI,CAACD,UAAU;EACxCG,SAAS,EAAEtB,SAAS,CAACoB,IAAI,CAACD,UAAU;EACpCV,UAAU,EAAET,SAAS,CAACuB;AACxB,CAAC;AAED,eAAenB,eAAe;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}