{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/hocs/withEditBlockData.js\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { getBlockData } from '../actions';\nconst withEditBlockData = WrappedComponent => props => {\n  var _blockData$chartData2;\n  const {\n    id\n  } = props;\n  const dispatch = useDispatch();\n  // const blockData = useSelector((state) =>\n  const blockData = useSelector(state => {\n    var _props$data, _props$data$chartData, _props$data$chartData2, _state$blockdata$id, _state$blockdata$id$d;\n    return ((_props$data = props.data) === null || _props$data === void 0 ? void 0 : (_props$data$chartData = _props$data.chartData) === null || _props$data$chartData === void 0 ? void 0 : (_props$data$chartData2 = _props$data$chartData.data) === null || _props$data$chartData2 === void 0 ? void 0 : _props$data$chartData2.length) > 0 // we have data from edit\n    ? props : (_state$blockdata$id = state.blockdata[id]) !== null && _state$blockdata$id !== void 0 && (_state$blockdata$id$d = _state$blockdata$id.data) !== null && _state$blockdata$id$d !== void 0 && _state$blockdata$id$d.chartData // the data came from async\n    ? state.blockdata[id] : props;\n  });\n  const pathname = useSelector(state => state.router.location.pathname);\n  React.useEffect(() => {\n    var _blockData$chartData;\n    if (!(blockData !== null && blockData !== void 0 && (_blockData$chartData = blockData.chartData) !== null && _blockData$chartData !== void 0 && _blockData$chartData.data)) {\n      dispatch(getBlockData(getBaseUrl(pathname), id)); // || blockData.error\n    }\n    /* eslint-disable-next-line */\n  }, [blockData === null || blockData === void 0 ? void 0 : (_blockData$chartData2 = blockData.chartData) === null || _blockData$chartData2 === void 0 ? void 0 : _blockData$chartData2.data, dispatch, id, pathname]);\n  return __jsx(WrappedComponent, _extends({}, props, {\n    data: (blockData === null || blockData === void 0 ? void 0 : blockData.data) || props.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }));\n};\nexport default withEditBlockData;","map":{"version":3,"names":["React","useDispatch","useSelector","getBaseUrl","getBlockData","withEditBlockData","WrappedComponent","props","id","dispatch","blockData","state","data","chartData","length","blockdata","pathname","router","location","useEffect"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/hocs/withEditBlockData.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { getBlockData } from '../actions';\n\nconst withEditBlockData = (WrappedComponent) => (props) => {\n  const { id } = props;\n  const dispatch = useDispatch();\n  // const blockData = useSelector((state) =>\n  const blockData = useSelector((state) =>\n    props.data?.chartData?.data?.length > 0 // we have data from edit\n      ? props\n      : state.blockdata[id]?.data?.chartData // the data came from async\n      ? state.blockdata[id]\n      : props,\n  );\n  const pathname = useSelector((state) => state.router.location.pathname);\n\n  React.useEffect(() => {\n    if (!blockData?.chartData?.data) {\n      dispatch(getBlockData(getBaseUrl(pathname), id)); // || blockData.error\n    }\n    /* eslint-disable-next-line */\n  }, [blockData?.chartData?.data, dispatch, id, pathname]);\n\n  return <WrappedComponent {...props} data={blockData?.data || props.data} />;\n};\n\nexport default withEditBlockData;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,YAAY,QAAQ,YAAY;AAEzC,MAAMC,iBAAiB,GAAIC,gBAAgB,IAAMC,KAAK,IAAK;EAAA;EACzD,MAAM;IAAEC;EAAG,CAAC,GAAGD,KAAK;EACpB,MAAME,QAAQ,GAAGR,WAAW,EAAE;EAC9B;EACA,MAAMS,SAAS,GAAGR,WAAW,CAAES,KAAK;IAAA;IAAA,OAClC,gBAAAJ,KAAK,CAACK,IAAI,yEAAV,YAAYC,SAAS,oFAArB,sBAAuBD,IAAI,2DAA3B,uBAA6BE,MAAM,IAAG,CAAC,CAAC;IAAA,EACpCP,KAAK,GACL,uBAAAI,KAAK,CAACI,SAAS,CAACP,EAAE,CAAC,yEAAnB,oBAAqBI,IAAI,kDAAzB,sBAA2BC,SAAS,CAAC;IAAA,EACrCF,KAAK,CAACI,SAAS,CAACP,EAAE,CAAC,GACnBD,KAAK;EAAA,EACV;EACD,MAAMS,QAAQ,GAAGd,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACM,MAAM,CAACC,QAAQ,CAACF,QAAQ,CAAC;EAEvEhB,KAAK,CAACmB,SAAS,CAAC,MAAM;IAAA;IACpB,IAAI,EAACT,SAAS,aAATA,SAAS,uCAATA,SAAS,CAAEG,SAAS,iDAApB,qBAAsBD,IAAI,GAAE;MAC/BH,QAAQ,CAACL,YAAY,CAACD,UAAU,CAACa,QAAQ,CAAC,EAAER,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD;IACA;EACF,CAAC,EAAE,CAACE,SAAS,aAATA,SAAS,gDAATA,SAAS,CAAEG,SAAS,0DAApB,sBAAsBD,IAAI,EAAEH,QAAQ,EAAED,EAAE,EAAEQ,QAAQ,CAAC,CAAC;EAExD,OAAO,MAAC,gBAAgB,eAAKT,KAAK;IAAE,IAAI,EAAE,CAAAG,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEE,IAAI,KAAIL,KAAK,CAACK,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG;AAC7E,CAAC;AAED,eAAeP,iBAAiB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}