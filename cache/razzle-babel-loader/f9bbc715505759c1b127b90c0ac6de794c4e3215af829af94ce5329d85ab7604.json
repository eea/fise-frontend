{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { SET_FOLDER_TABS } from '@eeacms/volto-forests-theme/constants/ActionTypes';\nconst initialState = {\n  error: null,\n  items: null,\n  loaded: false,\n  loading: false\n};\n\n/**\n * Navigation reducer.\n * @function navigation\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function folder_tabs(state = initialState, action = {}) {\n  if (action.type === SET_FOLDER_TABS) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      error: null,\n      items: action.payload,\n      loaded: true,\n      loading: false\n    });\n  }\n  return state;\n}","map":{"version":3,"names":["SET_FOLDER_TABS","initialState","error","items","loaded","loading","folder_tabs","state","action","type","payload"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/reducers/folder_tabs.js"],"sourcesContent":["import { SET_FOLDER_TABS } from '@eeacms/volto-forests-theme/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  items: null,\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Navigation reducer.\n * @function navigation\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function folder_tabs(state = initialState, action = {}) {\n  if (action.type === SET_FOLDER_TABS) {\n    return {\n      ...state,\n      error: null,\n      items: action.payload,\n      loaded: true,\n      loading: false,\n    };\n  }\n  return state;\n}\n"],"mappings":";;;AAAA,SAASA,eAAe,QAAQ,mDAAmD;AAEnF,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,WAAW,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,GAAG,CAAC,CAAC,EAAE;EACrE,IAAIA,MAAM,CAACC,IAAI,KAAKT,eAAe,EAAE;IACnC,uCACKO,KAAK;MACRL,KAAK,EAAE,IAAI;MACXC,KAAK,EAAEK,MAAM,CAACE,OAAO;MACrBN,MAAM,EAAE,IAAI;MACZC,OAAO,EAAE;IAAK;EAElB;EACA,OAAOE,KAAK;AACd"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}