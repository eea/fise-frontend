{"ast":null,"code":"import _find from \"lodash/find\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Edit/Edit.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Edit container.\n * @module components/manage/Edit/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Button, Grid, Menu } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport qs from 'query-string';\nimport { toast } from 'react-toastify';\nimport { Forbidden, Form, Icon, Sidebar, Toast, Toolbar, Unauthorized, CompareLanguages, TranslationObject } from '@plone/volto/components';\nimport { updateContent, getContent, lockContent, unlockContent, getSchema, listActions } from '@plone/volto/actions';\nimport { getBaseUrl, hasBlocksData } from '@plone/volto/helpers';\nimport { preloadLazyLibs } from '@plone/volto/helpers/Loadable';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport config from '@plone/volto/registry';\nconst messages = defineMessages({\n  edit: {\n    \"id\": \"Edit {title}\",\n    \"defaultMessage\": \"Edit {title}\"\n  },\n  save: {\n    \"id\": \"Save\",\n    \"defaultMessage\": \"Save\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  }\n});\n\n/**\n * Edit class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"form\", /*#__PURE__*/React.createRef());\n    _defineProperty(this, \"toolbarRef\", React.createRef);\n    this.state = {\n      visual: true,\n      isClient: false,\n      error: null,\n      formSelected: 'editForm',\n      newId: null\n    };\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    var _this$props$content;\n    if (this.props.getRequest.loaded && (_this$props$content = this.props.content) !== null && _this$props$content !== void 0 && _this$props$content['@type']) {\n      this.props.getSchema(this.props.content['@type'], getBaseUrl(this.props.pathname));\n    }\n    this.setState({\n      isClient: true,\n      comparingLanguage: null\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    var _this$props, _this$props$content2;\n    if (this.props.getRequest.loading && nextProps.getRequest.loaded) {\n      if (nextProps.content['@type']) {\n        this.props.getSchema(nextProps.content['@type'], getBaseUrl(this.props.pathname));\n      }\n    }\n    if (this.props.schemaRequest.loading && nextProps.schemaRequest.loaded) {\n      if (!hasBlocksData(nextProps.schema.properties)) {\n        this.setState({\n          visual: false\n        });\n      }\n    }\n    // Hack for make the Plone site editable by Volto Editor without checkings\n    if (((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$content2 = _this$props.content) === null || _this$props$content2 === void 0 ? void 0 : _this$props$content2['@type']) === 'Plone Site') {\n      this.setState({\n        visual: true\n      });\n    }\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.history.push(this.props.returnUrl || getBaseUrl(this.props.pathname));\n    }\n    if (this.props.updateRequest.loading && nextProps.updateRequest.error) {\n      var _nextProps$updateRequ, _nextProps$updateRequ2, _nextProps$updateRequ3, _nextProps$updateRequ4, _nextProps$updateRequ5, _nextProps$updateRequ6, _nextProps$updateRequ7, _nextProps$updateRequ8, _nextProps$updateRequ9, _DOMParser$parseFromS, _DOMParser$parseFromS2;\n      const message = ((_nextProps$updateRequ = nextProps.updateRequest.error) === null || _nextProps$updateRequ === void 0 ? void 0 : (_nextProps$updateRequ2 = _nextProps$updateRequ.response) === null || _nextProps$updateRequ2 === void 0 ? void 0 : (_nextProps$updateRequ3 = _nextProps$updateRequ2.body) === null || _nextProps$updateRequ3 === void 0 ? void 0 : (_nextProps$updateRequ4 = _nextProps$updateRequ3.error) === null || _nextProps$updateRequ4 === void 0 ? void 0 : _nextProps$updateRequ4.message) || ((_nextProps$updateRequ5 = nextProps.updateRequest.error) === null || _nextProps$updateRequ5 === void 0 ? void 0 : (_nextProps$updateRequ6 = _nextProps$updateRequ5.response) === null || _nextProps$updateRequ6 === void 0 ? void 0 : (_nextProps$updateRequ7 = _nextProps$updateRequ6.body) === null || _nextProps$updateRequ7 === void 0 ? void 0 : _nextProps$updateRequ7.message) || ((_nextProps$updateRequ8 = nextProps.updateRequest.error) === null || _nextProps$updateRequ8 === void 0 ? void 0 : (_nextProps$updateRequ9 = _nextProps$updateRequ8.response) === null || _nextProps$updateRequ9 === void 0 ? void 0 : _nextProps$updateRequ9.text) || '';\n      const error = ((_DOMParser$parseFromS = new DOMParser().parseFromString(message, 'text/html')) === null || _DOMParser$parseFromS === void 0 ? void 0 : (_DOMParser$parseFromS2 = _DOMParser$parseFromS.all[0]) === null || _DOMParser$parseFromS2 === void 0 ? void 0 : _DOMParser$parseFromS2.textContent) || message;\n      this.setState({\n        error: error\n      });\n      toast.error(__jsx(Toast, {\n        error: true,\n        title: this.props.intl.formatMessage(messages.error),\n        content: `${nextProps.updateRequest.error.status} ${error}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }\n      }));\n    }\n    if (nextProps.compare_to && (this.state.compareTo && nextProps.compare_to['@id'] !== this.state.compareTo['@id'] || !this.state.compareTo)) {\n      this.setState({\n        compareTo: nextProps.compare_to\n      });\n    }\n  }\n\n  /**\n   * Component will unmount\n   * @method componentWillUnmount\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    var _this$props$content3, _this$props$content3$;\n    if ((_this$props$content3 = this.props.content) !== null && _this$props$content3 !== void 0 && (_this$props$content3$ = _this$props$content3.lock) !== null && _this$props$content3$ !== void 0 && _this$props$content3$.locked) {\n      const baseUrl = getBaseUrl(this.props.pathname);\n      const {\n        newId\n      } = this.state;\n      // Unlock the page, taking a possible id change into account\n      this.props.unlockContent(newId ? baseUrl.replace(/\\/[^/]*$/, '/' + newId) : baseUrl);\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    var _this$props$content4, _this$props$content4$;\n    const lock_token = (_this$props$content4 = this.props.content) === null || _this$props$content4 === void 0 ? void 0 : (_this$props$content4$ = _this$props$content4.lock) === null || _this$props$content4$ === void 0 ? void 0 : _this$props$content4$.token;\n    const headers = lock_token ? {\n      'Lock-Token': lock_token\n    } : {};\n    // if the id has changed, remember it for unlock control\n    if ('id' in data) {\n      this.setState({\n        newId: data.id\n      });\n    }\n    this.props.updateContent(getBaseUrl(this.props.pathname), data, headers);\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(this.props.returnUrl || getBaseUrl(this.props.pathname));\n  }\n  setComparingLanguage(lang, content_id) {\n    this.setState({\n      comparingLanguage: lang\n    });\n    this.props.getContent(content_id, null, 'compare_to', null);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$content5, _this$props2, _this$props2$schema, _this$props$objectAct, _this$props3, _this$props3$schema, _this$props$content6, _this$props$content$l, _this$props$content$l2;\n    const editPermission = _find(this.props.objectActions, {\n      id: 'edit'\n    });\n    const pageEdit = __jsx(Form, {\n      isEditForm: true,\n      ref: this.form,\n      schema: this.props.schema,\n      type: (_this$props$content5 = this.props.content) === null || _this$props$content5 === void 0 ? void 0 : _this$props$content5['@type'],\n      formData: this.props.content,\n      requestError: this.state.error,\n      onSubmit: this.onSubmit,\n      hideActions: true,\n      pathname: this.props.pathname,\n      visual: this.state.visual,\n      title: (_this$props2 = this.props) !== null && _this$props2 !== void 0 && (_this$props2$schema = _this$props2.schema) !== null && _this$props2$schema !== void 0 && _this$props2$schema.title ? this.props.intl.formatMessage(messages.edit, {\n        title: this.props.schema.title\n      }) : null,\n      loading: this.props.updateRequest.loading,\n      isFormSelected: this.state.formSelected === 'editForm',\n      onSelectForm: () => {\n        this.setState({\n          formSelected: 'editForm'\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }\n    });\n    return __jsx(\"div\", {\n      id: \"page-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 7\n      }\n    }, ((_this$props$objectAct = this.props.objectActions) === null || _this$props$objectAct === void 0 ? void 0 : _this$props$objectAct.length) > 0 && __jsx(React.Fragment, null, editPermission && __jsx(React.Fragment, null, __jsx(Helmet, {\n      title: (_this$props3 = this.props) !== null && _this$props3 !== void 0 && (_this$props3$schema = _this$props3.schema) !== null && _this$props3$schema !== void 0 && _this$props3$schema.title ? this.props.intl.formatMessage(messages.edit, {\n        title: this.props.schema.title\n      }) : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }, ((_this$props$content6 = this.props.content) === null || _this$props$content6 === void 0 ? void 0 : _this$props$content6.language) && __jsx(\"html\", {\n      lang: this.props.content.language.token,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    })), this.state.comparingLanguage && this.state.compareTo ? __jsx(Grid, {\n      celled: \"internally\",\n      stackable: true,\n      columns: 2,\n      id: \"page-compare-translation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 19\n      }\n    }, __jsx(Grid.Column, {\n      className: \"source-object\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }\n    }, __jsx(TranslationObject, {\n      translationObject: this.state.compareTo,\n      schema: this.props.schema,\n      pathname: this.props.pathname,\n      visual: this.state.visual,\n      isFormSelected: this.state.formSelected === 'translationObjectForm',\n      onSelectForm: () => {\n        this.setState({\n          formSelected: 'translationObjectForm'\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 23\n      }\n    })), __jsx(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"new-translation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 23\n      }\n    }, __jsx(Menu, {\n      pointing: true,\n      secondary: true,\n      attached: true,\n      tabular: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 25\n      }\n    }, __jsx(Menu.Item, {\n      name: (_this$props$content$l = this.props.content.language) === null || _this$props$content$l === void 0 ? void 0 : _this$props$content$l.token.toUpperCase(),\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 27\n      }\n    }, (_this$props$content$l2 = this.props.content.language) === null || _this$props$content$l2 === void 0 ? void 0 : _this$props$content$l2.token.toUpperCase())), pageEdit))) : pageEdit), editPermission && this.state.visual && this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('sidebar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 15\n      }\n    }, __jsx(Sidebar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }\n    }))), !editPermission && __jsx(React.Fragment, null, this.props.token ? __jsx(Forbidden, {\n      pathname: this.props.pathname,\n      staticContext: this.props.staticContext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 15\n      }\n    }) : __jsx(Unauthorized, {\n      pathname: this.props.pathname,\n      staticContext: this.props.staticContext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 15\n      }\n    })), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(React.Fragment, null, __jsx(Button, {\n        id: \"toolbar-save\",\n        className: \"save\",\n        \"aria-label\": this.props.intl.formatMessage(messages.save),\n        onClick: () => this.form.current.onSubmit(),\n        disabled: this.props.updateRequest.loading,\n        loading: this.props.updateRequest.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: saveSVG,\n        className: \"circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.save),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }\n      })), __jsx(Button, {\n        className: \"cancel\",\n        \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n        onClick: () => this.onCancel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: clearSVG,\n        className: \"circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.cancel),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }\n      })), config.settings.isMultilingual && __jsx(CompareLanguages, {\n        content: this.props.content,\n        visual: this.state.visual,\n        setComparingLanguage: (lang, id) => {\n          this.setComparingLanguage(lang, id);\n        },\n        comparingLanguage: this.state.comparingLanguage,\n        pathname: this.props.location.pathname,\n        toolbarRef: this.toolbarRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n_defineProperty(Edit, \"propTypes\", {\n  updateContent: PropTypes.func.isRequired,\n  getContent: PropTypes.func.isRequired,\n  getSchema: PropTypes.func.isRequired,\n  lockContent: PropTypes.func.isRequired,\n  unlockContent: PropTypes.func.isRequired,\n  updateRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  schemaRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  getRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  pathname: PropTypes.string.isRequired,\n  returnUrl: PropTypes.string,\n  content: PropTypes.shape({\n    '@type': PropTypes.string\n  }),\n  schema: PropTypes.objectOf(PropTypes.any),\n  objectActions: PropTypes.array,\n  newId: PropTypes.string\n});\n_defineProperty(Edit, \"defaultProps\", {\n  schema: null,\n  content: null,\n  returnUrl: null\n});\nexport const __test__ = compose(injectIntl, connect((state, props) => {\n  var _state$content$subreq, _state$content$subreq2;\n  return {\n    objectActions: state.actions.actions.object,\n    token: state.userSession.token,\n    content: state.content.data,\n    compare_to: (_state$content$subreq = state.content.subrequests) === null || _state$content$subreq === void 0 ? void 0 : (_state$content$subreq2 = _state$content$subreq.compare_to) === null || _state$content$subreq2 === void 0 ? void 0 : _state$content$subreq2.data,\n    schema: state.schema.schema,\n    getRequest: state.content.get,\n    schemaRequest: state.schema,\n    updateRequest: state.content.update,\n    createRequest: state.content.create,\n    pathname: props.location.pathname,\n    returnUrl: qs.parse(props.location.search).return_url\n  };\n}, {\n  updateContent,\n  getContent,\n  getSchema,\n  lockContent,\n  unlockContent\n}))(Edit);\nexport default compose(injectIntl, asyncConnect([{\n  key: 'actions',\n  promise: async ({\n    location,\n    store: {\n      dispatch\n    }\n  }) => {\n    await dispatch(listActions(getBaseUrl(location.pathname)));\n  }\n}, {\n  key: 'content',\n  promise: async ({\n    location,\n    store: {\n      dispatch\n    }\n  }) => {\n    const content = await dispatch(getContent(getBaseUrl(location.pathname)));\n    if ((content === null || content === void 0 ? void 0 : content.lock) !== undefined) {\n      await dispatch(lockContent(getBaseUrl(location.pathname)));\n    }\n    return content;\n  }\n}]), connect((state, props) => {\n  var _state$content$subreq3, _state$content$subreq4;\n  return {\n    objectActions: state.actions.actions.object,\n    token: state.userSession.token,\n    content: state.content.data,\n    compare_to: (_state$content$subreq3 = state.content.subrequests) === null || _state$content$subreq3 === void 0 ? void 0 : (_state$content$subreq4 = _state$content$subreq3.compare_to) === null || _state$content$subreq4 === void 0 ? void 0 : _state$content$subreq4.data,\n    schema: state.schema.schema,\n    getRequest: state.content.get,\n    schemaRequest: state.schema,\n    updateRequest: state.content.update,\n    pathname: props.location.pathname,\n    returnUrl: qs.parse(props.location.search).return_url\n  };\n}, {\n  updateContent,\n  getContent,\n  getSchema,\n  lockContent,\n  unlockContent\n}), preloadLazyLibs('cms'))(Edit);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","connect","compose","asyncConnect","defineMessages","injectIntl","Button","Grid","Menu","Portal","qs","toast","Forbidden","Form","Icon","Sidebar","Toast","Toolbar","Unauthorized","CompareLanguages","TranslationObject","updateContent","getContent","lockContent","unlockContent","getSchema","listActions","getBaseUrl","hasBlocksData","preloadLazyLibs","saveSVG","clearSVG","config","messages","edit","save","cancel","error","Edit","constructor","props","createRef","state","visual","isClient","formSelected","newId","onCancel","bind","onSubmit","componentDidMount","getRequest","loaded","content","pathname","setState","comparingLanguage","UNSAFE_componentWillReceiveProps","nextProps","loading","schemaRequest","schema","properties","updateRequest","history","push","returnUrl","message","response","body","text","DOMParser","parseFromString","all","textContent","intl","formatMessage","status","compare_to","compareTo","componentWillUnmount","lock","locked","baseUrl","replace","data","lock_token","token","headers","id","setComparingLanguage","lang","content_id","render","editPermission","objectActions","pageEdit","form","title","length","language","toUpperCase","document","getElementById","staticContext","current","settings","isMultilingual","location","toolbarRef","func","isRequired","shape","bool","string","objectOf","any","array","__test__","actions","object","userSession","subrequests","get","update","createRequest","create","parse","search","return_url","key","promise","store","dispatch","undefined"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Edit/Edit.jsx"],"sourcesContent":["/**\n * Edit container.\n * @module components/manage/Edit/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Button, Grid, Menu } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport qs from 'query-string';\nimport { find } from 'lodash';\nimport { toast } from 'react-toastify';\n\nimport {\n  Forbidden,\n  Form,\n  Icon,\n  Sidebar,\n  Toast,\n  Toolbar,\n  Unauthorized,\n  CompareLanguages,\n  TranslationObject,\n} from '@plone/volto/components';\nimport {\n  updateContent,\n  getContent,\n  lockContent,\n  unlockContent,\n  getSchema,\n  listActions,\n} from '@plone/volto/actions';\nimport { getBaseUrl, hasBlocksData } from '@plone/volto/helpers';\nimport { preloadLazyLibs } from '@plone/volto/helpers/Loadable';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  edit: {\n    id: 'Edit {title}',\n    defaultMessage: 'Edit {title}',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n});\n\n/**\n * Edit class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateContent: PropTypes.func.isRequired,\n    getContent: PropTypes.func.isRequired,\n    getSchema: PropTypes.func.isRequired,\n    lockContent: PropTypes.func.isRequired,\n    unlockContent: PropTypes.func.isRequired,\n    updateRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    schemaRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    getRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    returnUrl: PropTypes.string,\n    content: PropTypes.shape({\n      '@type': PropTypes.string,\n    }),\n    schema: PropTypes.objectOf(PropTypes.any),\n    objectActions: PropTypes.array,\n    newId: PropTypes.string,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    schema: null,\n    content: null,\n    returnUrl: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      visual: true,\n      isClient: false,\n      error: null,\n      formSelected: 'editForm',\n      newId: null,\n    };\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.getRequest.loaded && this.props.content?.['@type']) {\n      this.props.getSchema(\n        this.props.content['@type'],\n        getBaseUrl(this.props.pathname),\n      );\n    }\n    this.setState({\n      isClient: true,\n      comparingLanguage: null,\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.getRequest.loading && nextProps.getRequest.loaded) {\n      if (nextProps.content['@type']) {\n        this.props.getSchema(\n          nextProps.content['@type'],\n          getBaseUrl(this.props.pathname),\n        );\n      }\n    }\n    if (this.props.schemaRequest.loading && nextProps.schemaRequest.loaded) {\n      if (!hasBlocksData(nextProps.schema.properties)) {\n        this.setState({\n          visual: false,\n        });\n      }\n    }\n    // Hack for make the Plone site editable by Volto Editor without checkings\n    if (this.props?.content?.['@type'] === 'Plone Site') {\n      this.setState({\n        visual: true,\n      });\n    }\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.history.push(\n        this.props.returnUrl || getBaseUrl(this.props.pathname),\n      );\n    }\n\n    if (this.props.updateRequest.loading && nextProps.updateRequest.error) {\n      const message =\n        nextProps.updateRequest.error?.response?.body?.error?.message ||\n        nextProps.updateRequest.error?.response?.body?.message ||\n        nextProps.updateRequest.error?.response?.text ||\n        '';\n\n      const error =\n        new DOMParser().parseFromString(message, 'text/html')?.all[0]\n          ?.textContent || message;\n\n      this.setState({ error: error });\n\n      toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.error)}\n          content={`${nextProps.updateRequest.error.status} ${error}`}\n        />,\n      );\n    }\n\n    if (\n      nextProps.compare_to &&\n      ((this.state.compareTo &&\n        nextProps.compare_to['@id'] !== this.state.compareTo['@id']) ||\n        !this.state.compareTo)\n    ) {\n      this.setState({ compareTo: nextProps.compare_to });\n    }\n  }\n\n  /**\n   * Component will unmount\n   * @method componentWillUnmount\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    if (this.props.content?.lock?.locked) {\n      const baseUrl = getBaseUrl(this.props.pathname);\n      const { newId } = this.state;\n      // Unlock the page, taking a possible id change into account\n      this.props.unlockContent(\n        newId ? baseUrl.replace(/\\/[^/]*$/, '/' + newId) : baseUrl,\n      );\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    const lock_token = this.props.content?.lock?.token;\n    const headers = lock_token ? { 'Lock-Token': lock_token } : {};\n    // if the id has changed, remember it for unlock control\n    if ('id' in data) {\n      this.setState({ newId: data.id });\n    }\n    this.props.updateContent(getBaseUrl(this.props.pathname), data, headers);\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(\n      this.props.returnUrl || getBaseUrl(this.props.pathname),\n    );\n  }\n\n  setComparingLanguage(lang, content_id) {\n    this.setState({ comparingLanguage: lang });\n    this.props.getContent(content_id, null, 'compare_to', null);\n  }\n\n  form = React.createRef();\n  toolbarRef = React.createRef;\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const editPermission = find(this.props.objectActions, { id: 'edit' });\n\n    const pageEdit = (\n      <Form\n        isEditForm\n        ref={this.form}\n        schema={this.props.schema}\n        type={this.props.content?.['@type']}\n        formData={this.props.content}\n        requestError={this.state.error}\n        onSubmit={this.onSubmit}\n        hideActions\n        pathname={this.props.pathname}\n        visual={this.state.visual}\n        title={\n          this.props?.schema?.title\n            ? this.props.intl.formatMessage(messages.edit, {\n                title: this.props.schema.title,\n              })\n            : null\n        }\n        loading={this.props.updateRequest.loading}\n        isFormSelected={this.state.formSelected === 'editForm'}\n        onSelectForm={() => {\n          this.setState({ formSelected: 'editForm' });\n        }}\n      />\n    );\n\n    return (\n      <div id=\"page-edit\">\n        {this.props.objectActions?.length > 0 && (\n          <>\n            {editPermission && (\n              <>\n                <Helmet\n                  title={\n                    this.props?.schema?.title\n                      ? this.props.intl.formatMessage(messages.edit, {\n                          title: this.props.schema.title,\n                        })\n                      : null\n                  }\n                >\n                  {this.props.content?.language && (\n                    <html lang={this.props.content.language.token} />\n                  )}\n                </Helmet>\n\n                {this.state.comparingLanguage && this.state.compareTo ? (\n                  <Grid\n                    celled=\"internally\"\n                    stackable\n                    columns={2}\n                    id=\"page-compare-translation\"\n                  >\n                    <Grid.Column className=\"source-object\">\n                      <TranslationObject\n                        translationObject={this.state.compareTo}\n                        schema={this.props.schema}\n                        pathname={this.props.pathname}\n                        visual={this.state.visual}\n                        isFormSelected={\n                          this.state.formSelected === 'translationObjectForm'\n                        }\n                        onSelectForm={() => {\n                          this.setState({\n                            formSelected: 'translationObjectForm',\n                          });\n                        }}\n                      />\n                    </Grid.Column>\n                    <Grid.Column>\n                      <div className=\"new-translation\">\n                        <Menu pointing secondary attached tabular>\n                          <Menu.Item\n                            name={this.props.content.language?.token.toUpperCase()}\n                            active={true}\n                          >\n                            {this.props.content.language?.token.toUpperCase()}\n                          </Menu.Item>\n                        </Menu>\n\n                        {pageEdit}\n                      </div>\n                    </Grid.Column>\n                  </Grid>\n                ) : (\n                  pageEdit\n                )}\n              </>\n            )}\n\n            {editPermission && this.state.visual && this.state.isClient && (\n              <Portal node={document.getElementById('sidebar')}>\n                <Sidebar />\n              </Portal>\n            )}\n          </>\n        )}\n        {!editPermission && (\n          <>\n            {this.props.token ? (\n              <Forbidden\n                pathname={this.props.pathname}\n                staticContext={this.props.staticContext}\n              />\n            ) : (\n              <Unauthorized\n                pathname={this.props.pathname}\n                staticContext={this.props.staticContext}\n              />\n            )}\n          </>\n        )}\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Button\n                    id=\"toolbar-save\"\n                    className=\"save\"\n                    aria-label={this.props.intl.formatMessage(messages.save)}\n                    onClick={() => this.form.current.onSubmit()}\n                    disabled={this.props.updateRequest.loading}\n                    loading={this.props.updateRequest.loading}\n                  >\n                    <Icon\n                      name={saveSVG}\n                      className=\"circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.save)}\n                    />\n                  </Button>\n                  <Button\n                    className=\"cancel\"\n                    aria-label={this.props.intl.formatMessage(messages.cancel)}\n                    onClick={() => this.onCancel()}\n                  >\n                    <Icon\n                      name={clearSVG}\n                      className=\"circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.cancel)}\n                    />\n                  </Button>\n\n                  {config.settings.isMultilingual && (\n                    <CompareLanguages\n                      content={this.props.content}\n                      visual={this.state.visual}\n                      setComparingLanguage={(lang, id) => {\n                        this.setComparingLanguage(lang, id);\n                      }}\n                      comparingLanguage={this.state.comparingLanguage}\n                      pathname={this.props.location.pathname}\n                      toolbarRef={this.toolbarRef}\n                    />\n                  )}\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport const __test__ = compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      objectActions: state.actions.actions.object,\n      token: state.userSession.token,\n      content: state.content.data,\n      compare_to: state.content.subrequests?.compare_to?.data,\n      schema: state.schema.schema,\n      getRequest: state.content.get,\n      schemaRequest: state.schema,\n      updateRequest: state.content.update,\n      createRequest: state.content.create,\n      pathname: props.location.pathname,\n      returnUrl: qs.parse(props.location.search).return_url,\n    }),\n    {\n      updateContent,\n      getContent,\n      getSchema,\n      lockContent,\n      unlockContent,\n    },\n  ),\n)(Edit);\n\nexport default compose(\n  injectIntl,\n  asyncConnect([\n    {\n      key: 'actions',\n      promise: async ({ location, store: { dispatch } }) => {\n        await dispatch(listActions(getBaseUrl(location.pathname)));\n      },\n    },\n    {\n      key: 'content',\n      promise: async ({ location, store: { dispatch } }) => {\n        const content = await dispatch(\n          getContent(getBaseUrl(location.pathname)),\n        );\n        if (content?.lock !== undefined) {\n          await dispatch(lockContent(getBaseUrl(location.pathname)));\n        }\n        return content;\n      },\n    },\n  ]),\n  connect(\n    (state, props) => ({\n      objectActions: state.actions.actions.object,\n      token: state.userSession.token,\n      content: state.content.data,\n      compare_to: state.content.subrequests?.compare_to?.data,\n      schema: state.schema.schema,\n      getRequest: state.content.get,\n      schemaRequest: state.schema,\n      updateRequest: state.content.update,\n      pathname: props.location.pathname,\n      returnUrl: qs.parse(props.location.search).return_url,\n    }),\n    {\n      updateContent,\n      getContent,\n      getSchema,\n      lockContent,\n      unlockContent,\n    },\n  ),\n  preloadLazyLibs('cms'),\n)(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Edit {title}","defaultMessage":"Edit {title}"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Error","defaultMessage":"Error"}]}},"sourceType":"module","externalDependencies":[]}