{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _map from \"lodash/map\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _groupBy from \"lodash/groupBy\";\nimport _toPairs from \"lodash/toPairs\";\nimport _remove from \"lodash/remove\";\nimport _filter from \"lodash/filter\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Widgets/DataQueryWidget.jsx\";\nvar __jsx = React.createElement;\n/**\n * QuerystringWidget component.\n * @module components/manage/Widgets/QuerystringWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Button, Form, Grid, Input, Label } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { getQuerystring } from '@plone/volto/actions';\nimport { Icon } from '@plone/volto/components';\nimport { format, parse } from 'date-fns';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport cx from 'classnames';\nimport { Option, DropdownIndicator, selectTheme, customSelectStyles } from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport { DATACONNECTOR_PARAMS_GROUP } from '@eeacms/volto-datablocks/constants';\nimport { defaultOperations, defaultOperators } from './operations';\nfunction filterIndexes(indexes) {\n  var res = {};\n  Object.keys(indexes).forEach(function (k) {\n    if (indexes[k].group === DATACONNECTOR_PARAMS_GROUP) res[k] = indexes[k];\n  });\n  return res;\n}\nvar messages = defineMessages({\n  Criteria: {\n    \"id\": \"Criteria\",\n    \"defaultMessage\": \"Criteria\"\n  },\n  AddCriteria: {\n    \"id\": \"Add criteria\",\n    \"defaultMessage\": \"Add criteria\"\n  },\n  select: {\n    \"id\": \"querystring-widget-select\",\n    \"defaultMessage\": \"Select\\u2026\"\n  }\n});\n\n/**\n * QuerystringWidget component class.\n * @class QuerystringWidget\n * @extends Component\n */\nvar QuerystringWidget = /*#__PURE__*/function (_Component) {\n  _inherits(QuerystringWidget, _Component);\n  var _super = _createSuper(QuerystringWidget);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  function QuerystringWidget(props) {\n    var _this;\n    _classCallCheck(this, QuerystringWidget);\n    _this = _super.call(this, props);\n    _this.state = {\n      visual: false,\n      indexes: null\n    };\n    _this.initializeIndexes = _this.initializeIndexes.bind(_assertThisInitialized(_this));\n    _this.onChangeValue = _this.onChangeValue.bind(_assertThisInitialized(_this));\n    _this.getWidget = _this.getWidget.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(QuerystringWidget, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.focus) {\n        this.node.focus();\n      }\n      this.props.getQuerystring();\n      if (this.props.indexesLoaded) {\n        this.initializeIndexes();\n      }\n    }\n\n    /**\n     * Component did update lifecycle method\n     * @method componentDidUpdate\n     * @returns {undefined}\n     */\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.indexesLoaded && !this.state.indexes) {\n        this.initializeIndexes();\n      }\n    }\n\n    /**\n     * Initialize indexes\n     * @method initializeIndexes\n     * @returns undefined.\n     */\n  }, {\n    key: \"initializeIndexes\",\n    value: function initializeIndexes() {\n      var _this2 = this;\n      var value = this.props.value;\n      var indexes = {};\n      if (value !== null && value !== void 0 && value.length) {\n        value.forEach(function (param) {\n          if (!_this2.props.indexes[param.i] && !indexes[param.i]) {\n            indexes[param.i] = {\n              enabled: true,\n              group: 'Custom',\n              operations: defaultOperations,\n              operators: defaultOperators,\n              sortable: false,\n              title: param.i,\n              values: {}\n            };\n          }\n        });\n      }\n      this.setState({\n        indexes: indexes\n      });\n    }\n\n    /**\n     * Get correct widget\n     * @method getWidget\n     * @param {Object} row Row object.\n     * @param {number} index Row index.\n     * @returns {Object} Widget.\n     */\n  }, {\n    key: \"getWidget\",\n    value: function getWidget(row, index, Select) {\n      var _this3 = this,\n        _row$v;\n      var props = {\n        fluid: true,\n        value: row.v,\n        onChange: function onChange(data) {\n          return _this3.onChangeValue(index, data.target.value);\n        }\n      };\n      var indexes = _objectSpread(_objectSpread({}, this.props.indexes), this.state.indexes);\n      var values = indexes[row.i].values;\n      switch (indexes[row.i].operators[row.o].widget) {\n        case null:\n          return __jsx(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 16\n            }\n          });\n        case 'TextWidget':\n          return __jsx(Form.Field, {\n            style: {\n              flex: '1 0 auto'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 11\n            }\n          }, __jsx(Input, _extends({}, props, {\n            onChange: function onChange(data) {\n              return _this3.onChangeValue(index, [data.target.value]);\n            },\n            value: (_row$v = row.v) === null || _row$v === void 0 ? void 0 : _row$v[0],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 13\n            }\n          })));\n        case 'DateWidget':\n          return __jsx(Form.Field, {\n            style: {\n              flex: '1 0 auto'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 11\n            }\n          }, __jsx(Input, _extends({\n            type: \"date\"\n          }, props, {\n            value: format(parse(row.v), 'YYYY-MM-DD'),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 13\n            }\n          })));\n        case 'DateRangeWidget':\n          // 2 date inputs\n          return __jsx(React.Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 11\n            }\n          }, __jsx(Form.Field, {\n            style: {\n              flex: '1 0 auto'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 13\n            }\n          }, __jsx(Input, _extends({\n            type: \"date\"\n          }, props, {\n            value: format(parse(row.v[0]), 'YYYY-MM-DD'),\n            onChange: function onChange(data) {\n              return _this3.onChangeValue(index, [data.target.value, row.v[1]]);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }\n          }))), __jsx(Form.Field, {\n            style: {\n              flex: '1 0 auto'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 13\n            }\n          }, __jsx(Input, _extends({\n            type: \"date\"\n          }, props, {\n            value: format(parse(row.v[1]), 'YYYY-MM-DD'),\n            onChange: function onChange(data) {\n              return _this3.onChangeValue(index, [row.v[0], data.target.value]);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }\n          }))));\n        case 'RelativeDateWidget':\n          return __jsx(Form.Field, {\n            style: {\n              flex: '1 0 auto'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 11\n            }\n          }, __jsx(Input, _extends({\n            step: 1,\n            type: \"number\"\n          }, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 13\n            }\n          })));\n        case 'MultipleSelectionWidget':\n          return __jsx(Form.Field, {\n            style: {\n              flex: '1 0 auto',\n              maxWidth: '93%'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 11\n            }\n          }, __jsx(Select, _extends({}, props, {\n            className: \"react-select-container\",\n            classNamePrefix: \"react-select\",\n            options: values ? _map(_toPairs(values), function (value) {\n              return {\n                label: value[1].title,\n                value: value[0]\n              };\n            }) : [],\n            styles: customSelectStyles,\n            placeholder: this.props.intl.formatMessage(messages.select),\n            theme: selectTheme,\n            components: {\n              DropdownIndicator: DropdownIndicator,\n              Option: Option\n            },\n            onChange: function onChange(data) {\n              _this3.onChangeValue(index, _map(data, function (item) {\n                return item.value;\n              }));\n            },\n            isMulti: true,\n            value: _map(row.v, function (value) {\n              var _values$value;\n              return {\n                label: (values === null || values === void 0 ? void 0 : (_values$value = values[value]) === null || _values$value === void 0 ? void 0 : _values$value.title) || value,\n                value: value\n              };\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 13\n            }\n          })));\n        case 'ReferenceWidget':\n        default:\n          // if (row.o === 'plone.app.querystring.operation.string.relativePath') {\n          //   props.onChange = data => this.onChangeValue(index, data.target.value);\n          // }\n          return __jsx(Form.Field, {\n            style: {\n              flex: '1 0 auto'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 11\n            }\n          }, __jsx(Input, _extends({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 13\n            }\n          })));\n      }\n    }\n\n    /**\n     * Change value handler\n     * @method onChangeValue\n     * @param {Number} index Index of the row.\n     * @param {String|Array} value Value of the row.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onChangeValue\",\n    value: function onChangeValue(index, value) {\n      this.props.onChange(this.props.id, _map(this.props.value, function (row, i) {\n        return index === i ? _objectSpread(_objectSpread({}, row), {}, {\n          v: value\n        }) : row;\n      }));\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      var _this$props = this.props,\n        id = _this$props.id,\n        required = _this$props.required,\n        description = _this$props.description,\n        error = _this$props.error,\n        value = _this$props.value,\n        _onChange = _this$props.onChange,\n        onEdit = _this$props.onEdit,\n        fieldSet = _this$props.fieldSet,\n        reactSelect = _this$props.reactSelect,\n        reactSelectCreateable = _this$props.reactSelectCreateable,\n        intl = _this$props.intl;\n      var indexes = _objectSpread(_objectSpread({}, this.props.indexes), this.state.indexes);\n      var Select = reactSelect[\"default\"];\n      var Creatable = reactSelectCreateable[\"default\"];\n      return __jsx(Form.Field, {\n        inline: true,\n        required: required,\n        error: error.length > 0,\n        className: cx('query-widget', description ? 'help' : ''),\n        id: \"\".concat(fieldSet || 'field', \"-\").concat(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 7\n        }\n      }, __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 9\n        }\n      }, __jsx(Grid.Row, {\n        stretched: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }\n      }, __jsx(Grid.Column, {\n        width: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"simple-field-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }\n      }, intl.formatMessage(messages.Criteria)))), __jsx(Grid.Row, {\n        stretched: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }\n      }, __jsx(Grid.Column, {\n        width: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }\n      }, indexes && this.state.indexes && !_isEmpty(indexes) && _map(value, function (row, index) {\n        var _indexes$row$i;\n        return __jsx(Form.Group, {\n          key: index,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 19\n          }\n        }, __jsx(\"div\", {\n          className: \"main-fields-wrapper\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 21\n          }\n        }, __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto',\n            marginRight: '10px'\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 23\n          }\n        }, __jsx(Creatable, {\n          id: \"field-\".concat(id),\n          name: id,\n          disabled: onEdit !== null,\n          className: \"react-select-container\",\n          classNamePrefix: \"react-select\",\n          options: _map(_toPairs(_groupBy(_toPairs(indexes), function (item) {\n            return item[1].group;\n          })), function (group) {\n            return {\n              label: group[0],\n              options: _map(group[1], function (field) {\n                return {\n                  label: field[1].title,\n                  value: field[0]\n                };\n              })\n            };\n          }),\n          styles: customSelectStyles,\n          theme: selectTheme,\n          placeholder: intl.formatMessage(messages.select),\n          components: {\n            DropdownIndicator: DropdownIndicator,\n            Option: Option\n          },\n          value: {\n            value: row.i,\n            label: (_indexes$row$i = indexes[row.i]) === null || _indexes$row$i === void 0 ? void 0 : _indexes$row$i.title\n          },\n          onCreateOption: function onCreateOption(key) {\n            if (!_this4.state.indexes) return;\n            if (!_this4.state.indexes[key]) {\n              _this4.setState({\n                indexes: _objectSpread(_objectSpread({}, _this4.state.indexes), {}, _defineProperty({}, key, {\n                  enabled: true,\n                  group: 'Custom',\n                  operations: defaultOperations,\n                  operators: defaultOperators,\n                  sortable: false,\n                  title: key,\n                  values: {}\n                }))\n              });\n            }\n            _onChange(id, _map(value, function (curRow, curIndex) {\n              return curIndex === index ? {\n                i: key,\n                o: defaultOperations[0],\n                v: ''\n              } : curRow;\n            }));\n          },\n          onChange: function onChange(data) {\n            return _onChange(id, _map(value, function (curRow, curIndex) {\n              return curIndex === index ? {\n                i: data.value,\n                o: indexes[data.value].operations[0],\n                v: ''\n              } : curRow;\n            }));\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }\n        })), __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 23\n          }\n        }, __jsx(Select, {\n          id: \"field-\".concat(id),\n          name: id,\n          disabled: onEdit !== null,\n          className: \"react-select-container\",\n          classNamePrefix: \"react-select\",\n          options: _map(indexes[row.i].operations, function (operation) {\n            return {\n              value: operation,\n              label: indexes[row.i].operators[operation].title\n            };\n          }),\n          styles: customSelectStyles,\n          theme: selectTheme,\n          placeholder: intl.formatMessage(messages.select),\n          components: {\n            DropdownIndicator: DropdownIndicator,\n            Option: Option\n          },\n          value: {\n            value: row.o,\n            label: indexes[row.i].operators[row.o].title\n          },\n          onChange: function onChange(data) {\n            return _onChange(id, _map(value, function (curRow, curIndex) {\n              return curIndex === index ? {\n                i: row.i,\n                o: data.value,\n                v: ''\n              } : curRow;\n            }));\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 25\n          }\n        })), !indexes[row.i].operators[row.o].widget && __jsx(Button, {\n          onClick: function onClick(event) {\n            _onChange(id, _remove(value, function (v, i) {\n              return i !== index;\n            }));\n            event.preventDefault();\n          },\n          style: {\n            background: 'none',\n            paddingRight: 0,\n            paddingLeft: 0,\n            margin: 0\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 25\n          }\n        }, __jsx(Icon, {\n          name: clearSVG,\n          size: \"24px\",\n          className: \"close\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 27\n          }\n        }))), _this4.getWidget(row, index, Creatable), indexes[row.i].operators[row.o].widget && __jsx(Button, {\n          onClick: function onClick(event) {\n            _onChange(id, _remove(value, function (v, i) {\n              return i !== index;\n            }));\n            event.preventDefault();\n          },\n          style: {\n            background: 'none',\n            paddingRight: 0,\n            paddingLeft: 0,\n            margin: 0\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 23\n          }\n        }, __jsx(Icon, {\n          name: clearSVG,\n          size: \"24px\",\n          className: \"close\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 25\n          }\n        })));\n      }), __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 15\n        }\n      }, __jsx(Form.Field, {\n        style: {\n          flex: '1 0 auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 17\n        }\n      }, __jsx(Creatable, {\n        id: \"field-\".concat(id),\n        name: id,\n        disabled: onEdit !== null,\n        className: \"react-select-container\",\n        classNamePrefix: \"react-select\",\n        placeholder: intl.formatMessage(messages.AddCriteria),\n        options: _toConsumableArray(_map(_toPairs(_groupBy(_toPairs(indexes), function (item) {\n          return item[1].group;\n        })), function (group) {\n          return {\n            label: group[0],\n            options: _map(_filter(group[1], function (item) {\n              return item[1].enabled;\n            }), function (field) {\n              return {\n                label: field[1].title,\n                value: field[0]\n              };\n            })\n          };\n        })),\n        styles: customSelectStyles,\n        theme: selectTheme,\n        components: {\n          DropdownIndicator: DropdownIndicator,\n          Option: Option\n        },\n        value: null,\n        onCreateOption: function onCreateOption(key) {\n          if (!_this4.state.indexes) return;\n          if (!_this4.state.indexes[key]) {\n            _this4.setState({\n              indexes: _objectSpread(_objectSpread({}, _this4.state.indexes), {}, _defineProperty({}, key, {\n                enabled: true,\n                group: 'Custom',\n                operations: defaultOperations,\n                operators: defaultOperators,\n                sortable: false,\n                title: key,\n                values: {}\n              }))\n            });\n          }\n          _onChange(id, [].concat(_toConsumableArray(value || []), [{\n            i: key,\n            o: defaultOperations[0],\n            v: ''\n          }]));\n        },\n        onChange: function onChange(data) {\n          _onChange(id, [].concat(_toConsumableArray(value || []), [{\n            i: data.value,\n            o: indexes[data.value].operations[0],\n            v: ''\n          }]));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 19\n        }\n      }))), _map(error, function (message) {\n        return __jsx(Label, {\n          key: message,\n          basic: true,\n          color: \"red\",\n          pointing: true,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 17\n          }\n        }, message);\n      }))), description && __jsx(Grid.Row, {\n        stretched: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 13\n        }\n      }, __jsx(Grid.Column, {\n        stretched: true,\n        width: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 15\n        }\n      }, __jsx(\"p\", {\n        className: \"help\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 17\n        }\n      }, description)))));\n    }\n  }]);\n  return QuerystringWidget;\n}(Component);\n_defineProperty(QuerystringWidget, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.array,\n  focus: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  getQuerystring: PropTypes.func.isRequired\n});\n_defineProperty(QuerystringWidget, \"defaultProps\", {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n  focus: false\n});\nexport default compose(injectIntl, injectLazyLibs(['reactSelect', 'reactSelectCreateable']), connect(function (state) {\n  return {\n    indexes: filterIndexes(state.querystring.indexes),\n    indexesLoaded: state.querystring.loaded\n  };\n}, {\n  getQuerystring: getQuerystring\n}))(QuerystringWidget);","map":{"version":3,"names":["React","Component","PropTypes","compose","connect","Button","Form","Grid","Input","Label","defineMessages","injectIntl","getQuerystring","Icon","format","parse","injectLazyLibs","cx","Option","DropdownIndicator","selectTheme","customSelectStyles","clearSVG","DATACONNECTOR_PARAMS_GROUP","defaultOperations","defaultOperators","filterIndexes","indexes","res","Object","keys","forEach","k","group","messages","Criteria","AddCriteria","select","QuerystringWidget","props","state","visual","initializeIndexes","bind","onChangeValue","getWidget","focus","node","indexesLoaded","value","length","param","i","enabled","operations","operators","sortable","title","values","setState","row","index","Select","fluid","v","onChange","data","target","o","widget","flex","maxWidth","label","intl","formatMessage","item","id","required","description","error","onEdit","fieldSet","reactSelect","reactSelectCreateable","Creatable","marginRight","options","field","key","curRow","curIndex","operation","event","preventDefault","background","paddingRight","paddingLeft","margin","message","string","isRequired","bool","arrayOf","array","func","onDelete","querystring","loaded"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Widgets/DataQueryWidget.jsx"],"sourcesContent":["/**\n * QuerystringWidget component.\n * @module components/manage/Widgets/QuerystringWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Button, Form, Grid, Input, Label } from 'semantic-ui-react';\nimport { filter, remove, toPairs, groupBy, isEmpty, map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { getQuerystring } from '@plone/volto/actions';\nimport { Icon } from '@plone/volto/components';\nimport { format, parse } from 'date-fns';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport cx from 'classnames';\n\nimport {\n  Option,\n  DropdownIndicator,\n  selectTheme,\n  customSelectStyles,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\n\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport { DATACONNECTOR_PARAMS_GROUP } from '@eeacms/volto-datablocks/constants';\n\nimport { defaultOperations, defaultOperators } from './operations';\n\nfunction filterIndexes(indexes) {\n  const res = {};\n  Object.keys(indexes).forEach((k) => {\n    if (indexes[k].group === DATACONNECTOR_PARAMS_GROUP) res[k] = indexes[k];\n  });\n  return res;\n}\n\nconst messages = defineMessages({\n  Criteria: {\n    id: 'Criteria',\n    defaultMessage: 'Criteria',\n  },\n  AddCriteria: {\n    id: 'Add criteria',\n    defaultMessage: 'Add criteria',\n  },\n  select: {\n    id: 'querystring-widget-select',\n    defaultMessage: 'Select…',\n  },\n});\n\n/**\n * QuerystringWidget component class.\n * @class QuerystringWidget\n * @extends Component\n */\nclass QuerystringWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.array,\n    focus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n    getQuerystring: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: null,\n    onChange: null,\n    onEdit: null,\n    onDelete: null,\n    focus: false,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      visual: false,\n      indexes: null,\n    };\n    this.initializeIndexes = this.initializeIndexes.bind(this);\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.getWidget = this.getWidget.bind(this);\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n    this.props.getQuerystring();\n    if (this.props.indexesLoaded) {\n      this.initializeIndexes();\n    }\n  }\n\n  /**\n   * Component did update lifecycle method\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate() {\n    if (this.props.indexesLoaded && !this.state.indexes) {\n      this.initializeIndexes();\n    }\n  }\n\n  /**\n   * Initialize indexes\n   * @method initializeIndexes\n   * @returns undefined.\n   */\n  initializeIndexes() {\n    const value = this.props.value;\n    const indexes = {};\n    if (value?.length) {\n      value.forEach((param) => {\n        if (!this.props.indexes[param.i] && !indexes[param.i]) {\n          indexes[param.i] = {\n            enabled: true,\n            group: 'Custom',\n            operations: defaultOperations,\n            operators: defaultOperators,\n            sortable: false,\n            title: param.i,\n            values: {},\n          };\n        }\n      });\n    }\n    this.setState({ indexes });\n  }\n\n  /**\n   * Get correct widget\n   * @method getWidget\n   * @param {Object} row Row object.\n   * @param {number} index Row index.\n   * @returns {Object} Widget.\n   */\n  getWidget(row, index, Select) {\n    const props = {\n      fluid: true,\n      value: row.v,\n      onChange: (data) => this.onChangeValue(index, data.target.value),\n    };\n\n    const indexes = { ...this.props.indexes, ...this.state.indexes };\n\n    const values = indexes[row.i].values;\n\n    switch (indexes[row.i].operators[row.o].widget) {\n      case null:\n        return <span />;\n      case 'TextWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input\n              {...props}\n              onChange={(data) =>\n                this.onChangeValue(index, [data.target.value])\n              }\n              value={row.v?.[0]}\n            />\n          </Form.Field>\n        );\n      case 'DateWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input\n              type=\"date\"\n              {...props}\n              value={format(parse(row.v), 'YYYY-MM-DD')}\n            />\n          </Form.Field>\n        );\n      case 'DateRangeWidget': // 2 date inputs\n        return (\n          <React.Fragment>\n            <Form.Field style={{ flex: '1 0 auto' }}>\n              <Input\n                type=\"date\"\n                {...props}\n                value={format(parse(row.v[0]), 'YYYY-MM-DD')}\n                onChange={(data) =>\n                  this.onChangeValue(index, [data.target.value, row.v[1]])\n                }\n              />\n            </Form.Field>\n            <Form.Field style={{ flex: '1 0 auto' }}>\n              <Input\n                type=\"date\"\n                {...props}\n                value={format(parse(row.v[1]), 'YYYY-MM-DD')}\n                onChange={(data) =>\n                  this.onChangeValue(index, [row.v[0], data.target.value])\n                }\n              />\n            </Form.Field>\n          </React.Fragment>\n        );\n      case 'RelativeDateWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input step={1} type=\"number\" {...props} />\n          </Form.Field>\n        );\n      case 'MultipleSelectionWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto', maxWidth: '93%' }}>\n            <Select\n              {...props}\n              className=\"react-select-container\"\n              classNamePrefix=\"react-select\"\n              options={\n                values\n                  ? map(toPairs(values), (value) => ({\n                      label: value[1].title,\n                      value: value[0],\n                    }))\n                  : []\n              }\n              styles={customSelectStyles}\n              placeholder={this.props.intl.formatMessage(messages.select)}\n              theme={selectTheme}\n              components={{ DropdownIndicator, Option }}\n              onChange={(data) => {\n                this.onChangeValue(\n                  index,\n                  map(data, (item) => item.value),\n                );\n              }}\n              isMulti={true}\n              value={map(row.v, (value) => ({\n                label: values?.[value]?.title || value,\n                value,\n              }))}\n            />\n          </Form.Field>\n        );\n      case 'ReferenceWidget':\n      default:\n        // if (row.o === 'plone.app.querystring.operation.string.relativePath') {\n        //   props.onChange = data => this.onChangeValue(index, data.target.value);\n        // }\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input {...props} />\n          </Form.Field>\n        );\n    }\n  }\n\n  /**\n   * Change value handler\n   * @method onChangeValue\n   * @param {Number} index Index of the row.\n   * @param {String|Array} value Value of the row.\n   * @returns {undefined}\n   */\n  onChangeValue(index, value) {\n    this.props.onChange(\n      this.props.id,\n      map(this.props.value, (row, i) =>\n        index === i\n          ? {\n              ...row,\n              v: value,\n            }\n          : row,\n      ),\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      required,\n      description,\n      error,\n      value,\n      onChange,\n      onEdit,\n      fieldSet,\n      reactSelect,\n      reactSelectCreateable,\n      intl,\n    } = this.props;\n\n    const indexes = { ...this.props.indexes, ...this.state.indexes };\n\n    const Select = reactSelect.default;\n    const Creatable = reactSelectCreateable.default;\n\n    return (\n      <Form.Field\n        inline\n        required={required}\n        error={error.length > 0}\n        className={cx('query-widget', description ? 'help' : '')}\n        id={`${fieldSet || 'field'}-${id}`}\n      >\n        <Grid>\n          <Grid.Row stretched>\n            <Grid.Column width=\"12\">\n              <div className=\"simple-field-name\">\n                {intl.formatMessage(messages.Criteria)}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row stretched>\n            <Grid.Column width=\"12\">\n              {indexes &&\n                this.state.indexes &&\n                !isEmpty(indexes) &&\n                map(value, (row, index) => (\n                  <Form.Group key={index}>\n                    <div className=\"main-fields-wrapper\">\n                      <Form.Field\n                        style={{ flex: '1 0 auto', marginRight: '10px' }}\n                      >\n                        <Creatable\n                          id={`field-${id}`}\n                          name={id}\n                          disabled={onEdit !== null}\n                          className=\"react-select-container\"\n                          classNamePrefix=\"react-select\"\n                          options={map(\n                            toPairs(\n                              groupBy(\n                                toPairs(indexes),\n                                (item) => item[1].group,\n                              ),\n                            ),\n                            (group) => ({\n                              label: group[0],\n                              options: map(group[1], (field) => ({\n                                label: field[1].title,\n                                value: field[0],\n                              })),\n                            }),\n                          )}\n                          styles={customSelectStyles}\n                          theme={selectTheme}\n                          placeholder={intl.formatMessage(messages.select)}\n                          components={{ DropdownIndicator, Option }}\n                          value={{\n                            value: row.i,\n                            label: indexes[row.i]?.title,\n                          }}\n                          onCreateOption={(key) => {\n                            if (!this.state.indexes) return;\n                            if (!this.state.indexes[key]) {\n                              this.setState({\n                                indexes: {\n                                  ...this.state.indexes,\n                                  [key]: {\n                                    enabled: true,\n                                    group: 'Custom',\n                                    operations: defaultOperations,\n                                    operators: defaultOperators,\n                                    sortable: false,\n                                    title: key,\n                                    values: {},\n                                  },\n                                },\n                              });\n                            }\n                            onChange(\n                              id,\n                              map(value, (curRow, curIndex) =>\n                                curIndex === index\n                                  ? {\n                                      i: key,\n                                      o: defaultOperations[0],\n                                      v: '',\n                                    }\n                                  : curRow,\n                              ),\n                            );\n                          }}\n                          onChange={(data) =>\n                            onChange(\n                              id,\n                              map(value, (curRow, curIndex) =>\n                                curIndex === index\n                                  ? {\n                                      i: data.value,\n                                      o: indexes[data.value].operations[0],\n                                      v: '',\n                                    }\n                                  : curRow,\n                              ),\n                            )\n                          }\n                        />\n                      </Form.Field>\n                      <Form.Field style={{ flex: '1 0 auto' }}>\n                        <Select\n                          id={`field-${id}`}\n                          name={id}\n                          disabled={onEdit !== null}\n                          className=\"react-select-container\"\n                          classNamePrefix=\"react-select\"\n                          options={map(\n                            indexes[row.i].operations,\n                            (operation) => ({\n                              value: operation,\n                              label: indexes[row.i].operators[operation].title,\n                            }),\n                          )}\n                          styles={customSelectStyles}\n                          theme={selectTheme}\n                          placeholder={intl.formatMessage(messages.select)}\n                          components={{ DropdownIndicator, Option }}\n                          value={{\n                            value: row.o,\n                            label: indexes[row.i].operators[row.o].title,\n                          }}\n                          onChange={(data) =>\n                            onChange(\n                              id,\n                              map(value, (curRow, curIndex) =>\n                                curIndex === index\n                                  ? {\n                                      i: row.i,\n                                      o: data.value,\n                                      v: '',\n                                    }\n                                  : curRow,\n                              ),\n                            )\n                          }\n                        />\n                      </Form.Field>\n                      {!indexes[row.i].operators[row.o].widget && (\n                        <Button\n                          onClick={(event) => {\n                            onChange(\n                              id,\n                              remove(value, (v, i) => i !== index),\n                            );\n                            event.preventDefault();\n                          }}\n                          style={{\n                            background: 'none',\n                            paddingRight: 0,\n                            paddingLeft: 0,\n                            margin: 0,\n                          }}\n                        >\n                          <Icon name={clearSVG} size=\"24px\" className=\"close\" />\n                        </Button>\n                      )}\n                    </div>\n                    {this.getWidget(row, index, Creatable)}\n                    {indexes[row.i].operators[row.o].widget && (\n                      <Button\n                        onClick={(event) => {\n                          onChange(\n                            id,\n                            remove(value, (v, i) => i !== index),\n                          );\n                          event.preventDefault();\n                        }}\n                        style={{\n                          background: 'none',\n                          paddingRight: 0,\n                          paddingLeft: 0,\n                          margin: 0,\n                        }}\n                      >\n                        <Icon name={clearSVG} size=\"24px\" className=\"close\" />\n                      </Button>\n                    )}\n                  </Form.Group>\n                ))}\n              <Form.Group>\n                <Form.Field style={{ flex: '1 0 auto' }}>\n                  <Creatable\n                    id={`field-${id}`}\n                    name={id}\n                    disabled={onEdit !== null}\n                    className=\"react-select-container\"\n                    classNamePrefix=\"react-select\"\n                    placeholder={intl.formatMessage(messages.AddCriteria)}\n                    options={[\n                      ...map(\n                        toPairs(\n                          groupBy(toPairs(indexes), (item) => item[1].group),\n                        ),\n                        (group) => ({\n                          label: group[0],\n                          options: map(\n                            filter(group[1], (item) => item[1].enabled),\n                            (field) => ({\n                              label: field[1].title,\n                              value: field[0],\n                            }),\n                          ),\n                        }),\n                      ),\n                    ]}\n                    styles={customSelectStyles}\n                    theme={selectTheme}\n                    components={{ DropdownIndicator, Option }}\n                    value={null}\n                    onCreateOption={(key) => {\n                      if (!this.state.indexes) return;\n                      if (!this.state.indexes[key]) {\n                        this.setState({\n                          indexes: {\n                            ...this.state.indexes,\n                            [key]: {\n                              enabled: true,\n                              group: 'Custom',\n                              operations: defaultOperations,\n                              operators: defaultOperators,\n                              sortable: false,\n                              title: key,\n                              values: {},\n                            },\n                          },\n                        });\n                      }\n                      onChange(id, [\n                        ...(value || []),\n                        {\n                          i: key,\n                          o: defaultOperations[0],\n                          v: '',\n                        },\n                      ]);\n                    }}\n                    onChange={(data) => {\n                      onChange(id, [\n                        ...(value || []),\n                        {\n                          i: data.value,\n                          o: indexes[data.value].operations[0],\n                          v: '',\n                        },\n                      ]);\n                    }}\n                  />\n                </Form.Field>\n              </Form.Group>\n              {map(error, (message) => (\n                <Label key={message} basic color=\"red\" pointing>\n                  {message}\n                </Label>\n              ))}\n            </Grid.Column>\n          </Grid.Row>\n          {description && (\n            <Grid.Row stretched>\n              <Grid.Column stretched width=\"12\">\n                <p className=\"help\">{description}</p>\n              </Grid.Column>\n            </Grid.Row>\n          )}\n        </Grid>\n      </Form.Field>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['reactSelect', 'reactSelectCreateable']),\n  connect(\n    (state) => ({\n      indexes: filterIndexes(state.querystring.indexes),\n      indexesLoaded: state.querystring.loaded,\n    }),\n    { getQuerystring },\n  ),\n)(QuerystringWidget);\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,mBAAmB;AAEpE,SAASC,cAAc,EAAEC,UAAU,QAAQ,YAAY;AACvD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,MAAM,EAAEC,KAAK,QAAQ,UAAU;AACxC,SAASC,cAAc,QAAQ,wCAAwC;AACvE,OAAOC,EAAE,MAAM,YAAY;AAE3B,SACEC,MAAM,EACNC,iBAAiB,EACjBC,WAAW,EACXC,kBAAkB,QACb,sDAAsD;AAE7D,OAAOC,QAAQ,MAAM,8BAA8B;AAEnD,SAASC,0BAA0B,QAAQ,oCAAoC;AAE/E,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,cAAc;AAElE,SAASC,aAAa,CAACC,OAAO,EAAE;EAC9B,IAAMC,GAAG,GAAG,CAAC,CAAC;EACdC,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC,CAACI,OAAO,CAAC,UAACC,CAAC,EAAK;IAClC,IAAIL,OAAO,CAACK,CAAC,CAAC,CAACC,KAAK,KAAKV,0BAA0B,EAAEK,GAAG,CAACI,CAAC,CAAC,GAAGL,OAAO,CAACK,CAAC,CAAC;EAC1E,CAAC,CAAC;EACF,OAAOJ,GAAG;AACZ;AAEA,IAAMM,QAAQ,GAAGxB,cAAc,CAAC;EAC9ByB,QAAQ;IAAA;IAAA;EAAA,CAGP;EACDC,WAAW;IAAA;IAAA;EAAA,CAGV;EACDC,MAAM;IAAA;IAAA;EAAA;AAIR,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AAJA,IAKMC,iBAAiB;EAAA;EAAA;EACrB;AACF;AACA;AACA;AACA;;EAeE;AACF;AACA;AACA;AACA;;EAYE;AACF;AACA;AACA;AACA;AACA;EACE,2BAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IACX,MAAKC,KAAK,GAAG;MACXC,MAAM,EAAE,KAAK;MACbd,OAAO,EAAE;IACX,CAAC;IACD,MAAKe,iBAAiB,GAAG,MAAKA,iBAAiB,CAACC,IAAI,+BAAM;IAC1D,MAAKC,aAAa,GAAG,MAAKA,aAAa,CAACD,IAAI,+BAAM;IAClD,MAAKE,SAAS,GAAG,MAAKA,SAAS,CAACF,IAAI,+BAAM;IAAC;EAC7C;;EAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,6BAAoB;MAClB,IAAI,IAAI,CAACJ,KAAK,CAACO,KAAK,EAAE;QACpB,IAAI,CAACC,IAAI,CAACD,KAAK,EAAE;MACnB;MACA,IAAI,CAACP,KAAK,CAAC3B,cAAc,EAAE;MAC3B,IAAI,IAAI,CAAC2B,KAAK,CAACS,aAAa,EAAE;QAC5B,IAAI,CAACN,iBAAiB,EAAE;MAC1B;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,8BAAqB;MACnB,IAAI,IAAI,CAACH,KAAK,CAACS,aAAa,IAAI,CAAC,IAAI,CAACR,KAAK,CAACb,OAAO,EAAE;QACnD,IAAI,CAACe,iBAAiB,EAAE;MAC1B;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,6BAAoB;MAAA;MAClB,IAAMO,KAAK,GAAG,IAAI,CAACV,KAAK,CAACU,KAAK;MAC9B,IAAMtB,OAAO,GAAG,CAAC,CAAC;MAClB,IAAIsB,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEC,MAAM,EAAE;QACjBD,KAAK,CAAClB,OAAO,CAAC,UAACoB,KAAK,EAAK;UACvB,IAAI,CAAC,MAAI,CAACZ,KAAK,CAACZ,OAAO,CAACwB,KAAK,CAACC,CAAC,CAAC,IAAI,CAACzB,OAAO,CAACwB,KAAK,CAACC,CAAC,CAAC,EAAE;YACrDzB,OAAO,CAACwB,KAAK,CAACC,CAAC,CAAC,GAAG;cACjBC,OAAO,EAAE,IAAI;cACbpB,KAAK,EAAE,QAAQ;cACfqB,UAAU,EAAE9B,iBAAiB;cAC7B+B,SAAS,EAAE9B,gBAAgB;cAC3B+B,QAAQ,EAAE,KAAK;cACfC,KAAK,EAAEN,KAAK,CAACC,CAAC;cACdM,MAAM,EAAE,CAAC;YACX,CAAC;UACH;QACF,CAAC,CAAC;MACJ;MACA,IAAI,CAACC,QAAQ,CAAC;QAAEhC,OAAO,EAAPA;MAAQ,CAAC,CAAC;IAC5B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA;IAAA,OAOA,mBAAUiC,GAAG,EAAEC,KAAK,EAAEC,MAAM,EAAE;MAAA;QAAA;MAC5B,IAAMvB,KAAK,GAAG;QACZwB,KAAK,EAAE,IAAI;QACXd,KAAK,EAAEW,GAAG,CAACI,CAAC;QACZC,QAAQ,EAAE,kBAACC,IAAI;UAAA,OAAK,MAAI,CAACtB,aAAa,CAACiB,KAAK,EAAEK,IAAI,CAACC,MAAM,CAAClB,KAAK,CAAC;QAAA;MAClE,CAAC;MAED,IAAMtB,OAAO,mCAAQ,IAAI,CAACY,KAAK,CAACZ,OAAO,GAAK,IAAI,CAACa,KAAK,CAACb,OAAO,CAAE;MAEhE,IAAM+B,MAAM,GAAG/B,OAAO,CAACiC,GAAG,CAACR,CAAC,CAAC,CAACM,MAAM;MAEpC,QAAQ/B,OAAO,CAACiC,GAAG,CAACR,CAAC,CAAC,CAACG,SAAS,CAACK,GAAG,CAACQ,CAAC,CAAC,CAACC,MAAM;QAC5C,KAAK,IAAI;UACP,OAAO;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,EAAQ;QACjB,KAAK,YAAY;UACf,OACE,MAAC,IAAI,CAAC,KAAK;YAAC,KAAK,EAAE;cAAEC,IAAI,EAAE;YAAW,CAAE;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GACtC,MAAC,KAAK,eACA/B,KAAK;YACT,QAAQ,EAAE,kBAAC2B,IAAI;cAAA,OACb,MAAI,CAACtB,aAAa,CAACiB,KAAK,EAAE,CAACK,IAAI,CAACC,MAAM,CAAClB,KAAK,CAAC,CAAC;YAAA,CAC/C;YACD,KAAK,YAAEW,GAAG,CAACI,CAAC,2CAAL,OAAQ,CAAC,CAAE;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAClB,CACS;QAEjB,KAAK,YAAY;UACf,OACE,MAAC,IAAI,CAAC,KAAK;YAAC,KAAK,EAAE;cAAEM,IAAI,EAAE;YAAW,CAAE;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GACtC,MAAC,KAAK;YACJ,IAAI,EAAC;UAAM,GACP/B,KAAK;YACT,KAAK,EAAEzB,MAAM,CAACC,KAAK,CAAC6C,GAAG,CAACI,CAAC,CAAC,EAAE,YAAY,CAAE;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAC1C,CACS;QAEjB,KAAK,iBAAiB;UAAE;UACtB,OACE,MAAC,KAAK,CAAC,QAAQ;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GACb,MAAC,IAAI,CAAC,KAAK;YAAC,KAAK,EAAE;cAAEM,IAAI,EAAE;YAAW,CAAE;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GACtC,MAAC,KAAK;YACJ,IAAI,EAAC;UAAM,GACP/B,KAAK;YACT,KAAK,EAAEzB,MAAM,CAACC,KAAK,CAAC6C,GAAG,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,YAAY,CAAE;YAC7C,QAAQ,EAAE,kBAACE,IAAI;cAAA,OACb,MAAI,CAACtB,aAAa,CAACiB,KAAK,EAAE,CAACK,IAAI,CAACC,MAAM,CAAClB,KAAK,EAAEW,GAAG,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAAA,CACzD;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GACD,CACS,EACb,MAAC,IAAI,CAAC,KAAK;YAAC,KAAK,EAAE;cAAEM,IAAI,EAAE;YAAW,CAAE;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GACtC,MAAC,KAAK;YACJ,IAAI,EAAC;UAAM,GACP/B,KAAK;YACT,KAAK,EAAEzB,MAAM,CAACC,KAAK,CAAC6C,GAAG,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,YAAY,CAAE;YAC7C,QAAQ,EAAE,kBAACE,IAAI;cAAA,OACb,MAAI,CAACtB,aAAa,CAACiB,KAAK,EAAE,CAACD,GAAG,CAACI,CAAC,CAAC,CAAC,CAAC,EAAEE,IAAI,CAACC,MAAM,CAAClB,KAAK,CAAC,CAAC;YAAA,CACzD;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GACD,CACS,CACE;QAErB,KAAK,oBAAoB;UACvB,OACE,MAAC,IAAI,CAAC,KAAK;YAAC,KAAK,EAAE;cAAEqB,IAAI,EAAE;YAAW,CAAE;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GACtC,MAAC,KAAK;YAAC,IAAI,EAAE,CAAE;YAAC,IAAI,EAAC;UAAQ,GAAK/B,KAAK;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAAI,CAChC;QAEjB,KAAK,yBAAyB;UAC5B,OACE,MAAC,IAAI,CAAC,KAAK;YAAC,KAAK,EAAE;cAAE+B,IAAI,EAAE,UAAU;cAAEC,QAAQ,EAAE;YAAM,CAAE;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GACvD,MAAC,MAAM,eACDhC,KAAK;YACT,SAAS,EAAC,wBAAwB;YAClC,eAAe,EAAC,cAAc;YAC9B,OAAO,EACLmB,MAAM,GACF,KAAI,SAAQA,MAAM,CAAC,EAAE,UAACT,KAAK;cAAA,OAAM;gBAC/BuB,KAAK,EAAEvB,KAAK,CAAC,CAAC,CAAC,CAACQ,KAAK;gBACrBR,KAAK,EAAEA,KAAK,CAAC,CAAC;cAChB,CAAC;YAAA,CAAC,CAAC,GACH,EACL;YACD,MAAM,EAAE5B,kBAAmB;YAC3B,WAAW,EAAE,IAAI,CAACkB,KAAK,CAACkC,IAAI,CAACC,aAAa,CAACxC,QAAQ,CAACG,MAAM,CAAE;YAC5D,KAAK,EAAEjB,WAAY;YACnB,UAAU,EAAE;cAAED,iBAAiB,EAAjBA,iBAAiB;cAAED,MAAM,EAANA;YAAO,CAAE;YAC1C,QAAQ,EAAE,kBAACgD,IAAI,EAAK;cAClB,MAAI,CAACtB,aAAa,CAChBiB,KAAK,EACL,KAAIK,IAAI,EAAE,UAACS,IAAI;gBAAA,OAAKA,IAAI,CAAC1B,KAAK;cAAA,EAAC,CAChC;YACH,CAAE;YACF,OAAO,EAAE,IAAK;YACd,KAAK,EAAE,KAAIW,GAAG,CAACI,CAAC,EAAE,UAACf,KAAK;cAAA;cAAA,OAAM;gBAC5BuB,KAAK,EAAE,CAAAd,MAAM,aAANA,MAAM,wCAANA,MAAM,CAAGT,KAAK,CAAC,kDAAf,cAAiBQ,KAAK,KAAIR,KAAK;gBACtCA,KAAK,EAALA;cACF,CAAC;YAAA,CAAC,CAAE;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GACJ,CACS;QAEjB,KAAK,iBAAiB;QACtB;UACE;UACA;UACA;UACA,OACE,MAAC,IAAI,CAAC,KAAK;YAAC,KAAK,EAAE;cAAEqB,IAAI,EAAE;YAAW,CAAE;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GACtC,MAAC,KAAK,eAAK/B,KAAK;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAAI,CACT;MACb;IAER;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAA;IAAA,OAOA,uBAAcsB,KAAK,EAAEZ,KAAK,EAAE;MAC1B,IAAI,CAACV,KAAK,CAAC0B,QAAQ,CACjB,IAAI,CAAC1B,KAAK,CAACqC,EAAE,EACb,KAAI,IAAI,CAACrC,KAAK,CAACU,KAAK,EAAE,UAACW,GAAG,EAAER,CAAC;QAAA,OAC3BS,KAAK,KAAKT,CAAC,mCAEFQ,GAAG;UACNI,CAAC,EAAEf;QAAK,KAEVW,GAAG;MAAA,EACR,CACF;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,kBAAS;MAAA;MACP,kBAYI,IAAI,CAACrB,KAAK;QAXZqC,EAAE,eAAFA,EAAE;QACFC,QAAQ,eAARA,QAAQ;QACRC,WAAW,eAAXA,WAAW;QACXC,KAAK,eAALA,KAAK;QACL9B,KAAK,eAALA,KAAK;QACLgB,SAAQ,eAARA,QAAQ;QACRe,MAAM,eAANA,MAAM;QACNC,QAAQ,eAARA,QAAQ;QACRC,WAAW,eAAXA,WAAW;QACXC,qBAAqB,eAArBA,qBAAqB;QACrBV,IAAI,eAAJA,IAAI;MAGN,IAAM9C,OAAO,mCAAQ,IAAI,CAACY,KAAK,CAACZ,OAAO,GAAK,IAAI,CAACa,KAAK,CAACb,OAAO,CAAE;MAEhE,IAAMmC,MAAM,GAAGoB,WAAW,WAAQ;MAClC,IAAME,SAAS,GAAGD,qBAAqB,WAAQ;MAE/C,OACE,MAAC,IAAI,CAAC,KAAK;QACT,MAAM;QACN,QAAQ,EAAEN,QAAS;QACnB,KAAK,EAAEE,KAAK,CAAC7B,MAAM,GAAG,CAAE;QACxB,SAAS,EAAEjC,EAAE,CAAC,cAAc,EAAE6D,WAAW,GAAG,MAAM,GAAG,EAAE,CAAE;QACzD,EAAE,YAAKG,QAAQ,IAAI,OAAO,cAAIL,EAAE,CAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAEnC,MAAC,IAAI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACH,MAAC,IAAI,CAAC,GAAG;QAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACjB,MAAC,IAAI,CAAC,MAAM;QAAC,KAAK,EAAC,IAAI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACrB;QAAK,SAAS,EAAC,mBAAmB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC/BH,IAAI,CAACC,aAAa,CAACxC,QAAQ,CAACC,QAAQ,CAAC,CAClC,CACM,CACL,EACX,MAAC,IAAI,CAAC,GAAG;QAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACjB,MAAC,IAAI,CAAC,MAAM;QAAC,KAAK,EAAC,IAAI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACpBR,OAAO,IACN,IAAI,CAACa,KAAK,CAACb,OAAO,IAClB,CAAC,SAAQA,OAAO,CAAC,IACjB,KAAIsB,KAAK,EAAE,UAACW,GAAG,EAAEC,KAAK;QAAA;QAAA,OACpB,MAAC,IAAI,CAAC,KAAK;UAAC,GAAG,EAAEA,KAAM;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACrB;UAAK,SAAS,EAAC,qBAAqB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAClC,MAAC,IAAI,CAAC,KAAK;UACT,KAAK,EAAE;YAAES,IAAI,EAAE,UAAU;YAAEe,WAAW,EAAE;UAAO,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAEjD,MAAC,SAAS;UACR,EAAE,kBAAWT,EAAE,CAAG;UAClB,IAAI,EAAEA,EAAG;UACT,QAAQ,EAAEI,MAAM,KAAK,IAAK;UAC1B,SAAS,EAAC,wBAAwB;UAClC,eAAe,EAAC,cAAc;UAC9B,OAAO,EAAE,KACP,SACE,SACE,SAAQrD,OAAO,CAAC,EAChB,UAACgD,IAAI;YAAA,OAAKA,IAAI,CAAC,CAAC,CAAC,CAAC1C,KAAK;UAAA,EACxB,CACF,EACD,UAACA,KAAK;YAAA,OAAM;cACVuC,KAAK,EAAEvC,KAAK,CAAC,CAAC,CAAC;cACfqD,OAAO,EAAE,KAAIrD,KAAK,CAAC,CAAC,CAAC,EAAE,UAACsD,KAAK;gBAAA,OAAM;kBACjCf,KAAK,EAAEe,KAAK,CAAC,CAAC,CAAC,CAAC9B,KAAK;kBACrBR,KAAK,EAAEsC,KAAK,CAAC,CAAC;gBAChB,CAAC;cAAA,CAAC;YACJ,CAAC;UAAA,CAAC,CACF;UACF,MAAM,EAAElE,kBAAmB;UAC3B,KAAK,EAAED,WAAY;UACnB,WAAW,EAAEqD,IAAI,CAACC,aAAa,CAACxC,QAAQ,CAACG,MAAM,CAAE;UACjD,UAAU,EAAE;YAAElB,iBAAiB,EAAjBA,iBAAiB;YAAED,MAAM,EAANA;UAAO,CAAE;UAC1C,KAAK,EAAE;YACL+B,KAAK,EAAEW,GAAG,CAACR,CAAC;YACZoB,KAAK,oBAAE7C,OAAO,CAACiC,GAAG,CAACR,CAAC,CAAC,mDAAd,eAAgBK;UACzB,CAAE;UACF,cAAc,EAAE,wBAAC+B,GAAG,EAAK;YACvB,IAAI,CAAC,MAAI,CAAChD,KAAK,CAACb,OAAO,EAAE;YACzB,IAAI,CAAC,MAAI,CAACa,KAAK,CAACb,OAAO,CAAC6D,GAAG,CAAC,EAAE;cAC5B,MAAI,CAAC7B,QAAQ,CAAC;gBACZhC,OAAO,kCACF,MAAI,CAACa,KAAK,CAACb,OAAO,2BACpB6D,GAAG,EAAG;kBACLnC,OAAO,EAAE,IAAI;kBACbpB,KAAK,EAAE,QAAQ;kBACfqB,UAAU,EAAE9B,iBAAiB;kBAC7B+B,SAAS,EAAE9B,gBAAgB;kBAC3B+B,QAAQ,EAAE,KAAK;kBACfC,KAAK,EAAE+B,GAAG;kBACV9B,MAAM,EAAE,CAAC;gBACX,CAAC;cAEL,CAAC,CAAC;YACJ;YACAO,SAAQ,CACNW,EAAE,EACF,KAAI3B,KAAK,EAAE,UAACwC,MAAM,EAAEC,QAAQ;cAAA,OAC1BA,QAAQ,KAAK7B,KAAK,GACd;gBACET,CAAC,EAAEoC,GAAG;gBACNpB,CAAC,EAAE5C,iBAAiB,CAAC,CAAC,CAAC;gBACvBwC,CAAC,EAAE;cACL,CAAC,GACDyB,MAAM;YAAA,EACX,CACF;UACH,CAAE;UACF,QAAQ,EAAE,kBAACvB,IAAI;YAAA,OACbD,SAAQ,CACNW,EAAE,EACF,KAAI3B,KAAK,EAAE,UAACwC,MAAM,EAAEC,QAAQ;cAAA,OAC1BA,QAAQ,KAAK7B,KAAK,GACd;gBACET,CAAC,EAAEc,IAAI,CAACjB,KAAK;gBACbmB,CAAC,EAAEzC,OAAO,CAACuC,IAAI,CAACjB,KAAK,CAAC,CAACK,UAAU,CAAC,CAAC,CAAC;gBACpCU,CAAC,EAAE;cACL,CAAC,GACDyB,MAAM;YAAA,EACX,CACF;UAAA,CACF;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACD,CACS,EACb,MAAC,IAAI,CAAC,KAAK;UAAC,KAAK,EAAE;YAAEnB,IAAI,EAAE;UAAW,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACtC,MAAC,MAAM;UACL,EAAE,kBAAWM,EAAE,CAAG;UAClB,IAAI,EAAEA,EAAG;UACT,QAAQ,EAAEI,MAAM,KAAK,IAAK;UAC1B,SAAS,EAAC,wBAAwB;UAClC,eAAe,EAAC,cAAc;UAC9B,OAAO,EAAE,KACPrD,OAAO,CAACiC,GAAG,CAACR,CAAC,CAAC,CAACE,UAAU,EACzB,UAACqC,SAAS;YAAA,OAAM;cACd1C,KAAK,EAAE0C,SAAS;cAChBnB,KAAK,EAAE7C,OAAO,CAACiC,GAAG,CAACR,CAAC,CAAC,CAACG,SAAS,CAACoC,SAAS,CAAC,CAAClC;YAC7C,CAAC;UAAA,CAAC,CACF;UACF,MAAM,EAAEpC,kBAAmB;UAC3B,KAAK,EAAED,WAAY;UACnB,WAAW,EAAEqD,IAAI,CAACC,aAAa,CAACxC,QAAQ,CAACG,MAAM,CAAE;UACjD,UAAU,EAAE;YAAElB,iBAAiB,EAAjBA,iBAAiB;YAAED,MAAM,EAANA;UAAO,CAAE;UAC1C,KAAK,EAAE;YACL+B,KAAK,EAAEW,GAAG,CAACQ,CAAC;YACZI,KAAK,EAAE7C,OAAO,CAACiC,GAAG,CAACR,CAAC,CAAC,CAACG,SAAS,CAACK,GAAG,CAACQ,CAAC,CAAC,CAACX;UACzC,CAAE;UACF,QAAQ,EAAE,kBAACS,IAAI;YAAA,OACbD,SAAQ,CACNW,EAAE,EACF,KAAI3B,KAAK,EAAE,UAACwC,MAAM,EAAEC,QAAQ;cAAA,OAC1BA,QAAQ,KAAK7B,KAAK,GACd;gBACET,CAAC,EAAEQ,GAAG,CAACR,CAAC;gBACRgB,CAAC,EAAEF,IAAI,CAACjB,KAAK;gBACbe,CAAC,EAAE;cACL,CAAC,GACDyB,MAAM;YAAA,EACX,CACF;UAAA,CACF;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACD,CACS,EACZ,CAAC9D,OAAO,CAACiC,GAAG,CAACR,CAAC,CAAC,CAACG,SAAS,CAACK,GAAG,CAACQ,CAAC,CAAC,CAACC,MAAM,IACtC,MAAC,MAAM;UACL,OAAO,EAAE,iBAACuB,KAAK,EAAK;YAClB3B,SAAQ,CACNW,EAAE,EACF,QAAO3B,KAAK,EAAE,UAACe,CAAC,EAAEZ,CAAC;cAAA,OAAKA,CAAC,KAAKS,KAAK;YAAA,EAAC,CACrC;YACD+B,KAAK,CAACC,cAAc,EAAE;UACxB,CAAE;UACF,KAAK,EAAE;YACLC,UAAU,EAAE,MAAM;YAClBC,YAAY,EAAE,CAAC;YACfC,WAAW,EAAE,CAAC;YACdC,MAAM,EAAE;UACV,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAEF,MAAC,IAAI;UAAC,IAAI,EAAE3E,QAAS;UAAC,IAAI,EAAC,MAAM;UAAC,SAAS,EAAC,OAAO;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAG,CAEzD,CACG,EACL,MAAI,CAACuB,SAAS,CAACe,GAAG,EAAEC,KAAK,EAAEuB,SAAS,CAAC,EACrCzD,OAAO,CAACiC,GAAG,CAACR,CAAC,CAAC,CAACG,SAAS,CAACK,GAAG,CAACQ,CAAC,CAAC,CAACC,MAAM,IACrC,MAAC,MAAM;UACL,OAAO,EAAE,iBAACuB,KAAK,EAAK;YAClB3B,SAAQ,CACNW,EAAE,EACF,QAAO3B,KAAK,EAAE,UAACe,CAAC,EAAEZ,CAAC;cAAA,OAAKA,CAAC,KAAKS,KAAK;YAAA,EAAC,CACrC;YACD+B,KAAK,CAACC,cAAc,EAAE;UACxB,CAAE;UACF,KAAK,EAAE;YACLC,UAAU,EAAE,MAAM;YAClBC,YAAY,EAAE,CAAC;YACfC,WAAW,EAAE,CAAC;YACdC,MAAM,EAAE;UACV,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAEF,MAAC,IAAI;UAAC,IAAI,EAAE3E,QAAS;UAAC,IAAI,EAAC,MAAM;UAAC,SAAS,EAAC,OAAO;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAG,CAEzD,CACU;MAAA,CACd,CAAC,EACJ,MAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACT,MAAC,IAAI,CAAC,KAAK;QAAC,KAAK,EAAE;UAAEgD,IAAI,EAAE;QAAW,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACtC,MAAC,SAAS;QACR,EAAE,kBAAWM,EAAE,CAAG;QAClB,IAAI,EAAEA,EAAG;QACT,QAAQ,EAAEI,MAAM,KAAK,IAAK;QAC1B,SAAS,EAAC,wBAAwB;QAClC,eAAe,EAAC,cAAc;QAC9B,WAAW,EAAEP,IAAI,CAACC,aAAa,CAACxC,QAAQ,CAACE,WAAW,CAAE;QACtD,OAAO,qBACF,KACD,SACE,SAAQ,SAAQT,OAAO,CAAC,EAAE,UAACgD,IAAI;UAAA,OAAKA,IAAI,CAAC,CAAC,CAAC,CAAC1C,KAAK;QAAA,EAAC,CACnD,EACD,UAACA,KAAK;UAAA,OAAM;YACVuC,KAAK,EAAEvC,KAAK,CAAC,CAAC,CAAC;YACfqD,OAAO,EAAE,KACP,QAAOrD,KAAK,CAAC,CAAC,CAAC,EAAE,UAAC0C,IAAI;cAAA,OAAKA,IAAI,CAAC,CAAC,CAAC,CAACtB,OAAO;YAAA,EAAC,EAC3C,UAACkC,KAAK;cAAA,OAAM;gBACVf,KAAK,EAAEe,KAAK,CAAC,CAAC,CAAC,CAAC9B,KAAK;gBACrBR,KAAK,EAAEsC,KAAK,CAAC,CAAC;cAChB,CAAC;YAAA,CAAC;UAEN,CAAC;QAAA,CAAC,CACH,CACD;QACF,MAAM,EAAElE,kBAAmB;QAC3B,KAAK,EAAED,WAAY;QACnB,UAAU,EAAE;UAAED,iBAAiB,EAAjBA,iBAAiB;UAAED,MAAM,EAANA;QAAO,CAAE;QAC1C,KAAK,EAAE,IAAK;QACZ,cAAc,EAAE,wBAACsE,GAAG,EAAK;UACvB,IAAI,CAAC,MAAI,CAAChD,KAAK,CAACb,OAAO,EAAE;UACzB,IAAI,CAAC,MAAI,CAACa,KAAK,CAACb,OAAO,CAAC6D,GAAG,CAAC,EAAE;YAC5B,MAAI,CAAC7B,QAAQ,CAAC;cACZhC,OAAO,kCACF,MAAI,CAACa,KAAK,CAACb,OAAO,2BACpB6D,GAAG,EAAG;gBACLnC,OAAO,EAAE,IAAI;gBACbpB,KAAK,EAAE,QAAQ;gBACfqB,UAAU,EAAE9B,iBAAiB;gBAC7B+B,SAAS,EAAE9B,gBAAgB;gBAC3B+B,QAAQ,EAAE,KAAK;gBACfC,KAAK,EAAE+B,GAAG;gBACV9B,MAAM,EAAE,CAAC;cACX,CAAC;YAEL,CAAC,CAAC;UACJ;UACAO,SAAQ,CAACW,EAAE,+BACL3B,KAAK,IAAI,EAAE,IACf;YACEG,CAAC,EAAEoC,GAAG;YACNpB,CAAC,EAAE5C,iBAAiB,CAAC,CAAC,CAAC;YACvBwC,CAAC,EAAE;UACL,CAAC,GACD;QACJ,CAAE;QACF,QAAQ,EAAE,kBAACE,IAAI,EAAK;UAClBD,SAAQ,CAACW,EAAE,+BACL3B,KAAK,IAAI,EAAE,IACf;YACEG,CAAC,EAAEc,IAAI,CAACjB,KAAK;YACbmB,CAAC,EAAEzC,OAAO,CAACuC,IAAI,CAACjB,KAAK,CAAC,CAACK,UAAU,CAAC,CAAC,CAAC;YACpCU,CAAC,EAAE;UACL,CAAC,GACD;QACJ,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACF,CACS,CACF,EACZ,KAAIe,KAAK,EAAE,UAACmB,OAAO;QAAA,OAClB,MAAC,KAAK;UAAC,GAAG,EAAEA,OAAQ;UAAC,KAAK;UAAC,KAAK,EAAC,KAAK;UAAC,QAAQ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAC5CA,OAAO,CACF;MAAA,CACT,CAAC,CACU,CACL,EACVpB,WAAW,IACV,MAAC,IAAI,CAAC,GAAG;QAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACjB,MAAC,IAAI,CAAC,MAAM;QAAC,SAAS;QAAC,KAAK,EAAC,IAAI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC/B;QAAG,SAAS,EAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEA,WAAW,CAAK,CACzB,CAEjB,CACI,CACI;IAEjB;EAAC;EAAA;AAAA,EA7hB6B7E,SAAS;AAAA,gBAAnCqC,iBAAiB,eAMF;EACjBsC,EAAE,EAAE1E,SAAS,CAACiG,MAAM,CAACC,UAAU;EAC/B3C,KAAK,EAAEvD,SAAS,CAACiG,MAAM,CAACC,UAAU;EAClCtB,WAAW,EAAE5E,SAAS,CAACiG,MAAM;EAC7BtB,QAAQ,EAAE3E,SAAS,CAACmG,IAAI;EACxBtB,KAAK,EAAE7E,SAAS,CAACoG,OAAO,CAACpG,SAAS,CAACiG,MAAM,CAAC;EAC1ClD,KAAK,EAAE/C,SAAS,CAACqG,KAAK;EACtBzD,KAAK,EAAE5C,SAAS,CAACmG,IAAI;EACrBpC,QAAQ,EAAE/D,SAAS,CAACsG,IAAI;EACxBxB,MAAM,EAAE9E,SAAS,CAACsG,IAAI;EACtBC,QAAQ,EAAEvG,SAAS,CAACsG,IAAI;EACxB5F,cAAc,EAAEV,SAAS,CAACsG,IAAI,CAACJ;AACjC,CAAC;AAAA,gBAlBG9D,iBAAiB,kBAyBC;EACpBwC,WAAW,EAAE,IAAI;EACjBD,QAAQ,EAAE,KAAK;EACfE,KAAK,EAAE,EAAE;EACT9B,KAAK,EAAE,IAAI;EACXgB,QAAQ,EAAE,IAAI;EACde,MAAM,EAAE,IAAI;EACZyB,QAAQ,EAAE,IAAI;EACd3D,KAAK,EAAE;AACT,CAAC;AA8fH,eAAe3C,OAAO,CACpBQ,UAAU,EACVK,cAAc,CAAC,CAAC,aAAa,EAAE,uBAAuB,CAAC,CAAC,EACxDZ,OAAO,CACL,UAACoC,KAAK;EAAA,OAAM;IACVb,OAAO,EAAED,aAAa,CAACc,KAAK,CAACkE,WAAW,CAAC/E,OAAO,CAAC;IACjDqB,aAAa,EAAER,KAAK,CAACkE,WAAW,CAACC;EACnC,CAAC;AAAA,CAAC,EACF;EAAE/F,cAAc,EAAdA;AAAe,CAAC,CACnB,CACF,CAAC0B,iBAAiB,CAAC"},"metadata":{"react-intl":{"messages":[{"id":"Criteria","defaultMessage":"Criteria"},{"id":"Add criteria","defaultMessage":"Add criteria"},{"id":"querystring-widget-select","defaultMessage":"Select…"}]}},"sourceType":"module","externalDependencies":[]}