{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/components/theme/AppExtras/CopyPaste/CopyPaste.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Portal } from 'react-portal';\nimport { toast } from 'react-toastify';\nimport { Button } from 'semantic-ui-react';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { updateContent } from '@plone/volto/actions';\nimport { Icon, Toast } from '@plone/volto/components';\nimport copySVG from '@plone/volto/icons/copy.svg';\nimport pasteSVG from '@plone/volto/icons/paste.svg';\nimport './style.less';\nconst TIMEOUT = 2000;\nconst CopyPaste = props => {\n  const [readyToRender, setReadyToRender] = React.useState(false);\n  const clock = React.useRef(null);\n  const time = React.useRef(0);\n  const toolbar = React.useRef(null);\n  const {\n    content\n  } = props;\n  const copyData = () => {\n    navigator.clipboard.writeText(JSON.stringify({\n      blocks: content.blocks,\n      blocks_layout: content.blocks_layout\n    }));\n    toast.success(__jsx(Toast, {\n      success: true,\n      title: 'Success',\n      content: `Copied blocks`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }));\n  };\n  const pasteData = () => {\n    const message = ['============= BRAKING CHANGE =============', '\\nAre you sure you want to paste from clipboard?', '\\nThis action will replace all the blocks with those from clipboard and will trigger SUBMIT !!!'];\n    navigator.clipboard.readText().then(text => {\n      if (\n      // eslint-disable-next-line no-alert\n      window.confirm(message.join(''))) {\n        try {\n          const data = JSON.parse(text) || {};\n          const {\n            blocks = {},\n            blocks_layout = {}\n          } = data;\n          const blocksIds = Object.keys(blocks);\n          let valid = true;\n          if (blocks_layout && blocks_layout.items && blocks_layout.items.length === blocksIds.length) {\n            blocks_layout.items.forEach(block => {\n              if (valid && !blocksIds.includes(block)) {\n                valid = false;\n              }\n            });\n          }\n          if (valid) {\n            props.updateContent(getBaseUrl(props.pathname), data);\n            toast.success(__jsx(Toast, {\n              success: true,\n              title: 'Success',\n              content: 'Blocks replaced successfully',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 15\n              }\n            }));\n          } else {\n            toast.error(__jsx(Toast, {\n              error: true,\n              title: 'Error',\n              content: 'Your clipboard contains incompatible data',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 15\n              }\n            }));\n          }\n        } catch {\n          toast.error(__jsx(Toast, {\n            error: true,\n            title: 'Error',\n            content: 'Your clipboard contains incompatible data',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }\n          }));\n        }\n      }\n    });\n  };\n  React.useEffect(() => {\n    clock.current = setInterval(() => {\n      const element = document.querySelector('#toolbar .toolbar-actions');\n      if (element) {\n        setReadyToRender(true);\n        clearInterval(clock.current);\n        time.current = 0;\n        return;\n      }\n      if (time.current >= TIMEOUT) {\n        clearInterval(clock.current);\n        time.current = 0;\n        return;\n      }\n      time.current += 100;\n    }, 100);\n    return () => {\n      clearInterval(clock.current);\n      time.current = 0;\n    };\n  }, []);\n  if (!__CLIENT__ || !readyToRender) return '';\n  return __jsx(Portal, {\n    node: document.querySelector('#toolbar .toolbar-actions'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    ref: toolbar,\n    id: \"__developer_tools\",\n    onMouseEnter: e => {\n      if (e.altKey && toolbar.current && !toolbar.current.classList.contains('__dev_on')) {\n        toolbar.current.classList.add('__dev_on');\n      }\n    },\n    onMouseLeave: e => {\n      if (toolbar.current && toolbar.current.classList.contains('__dev_on')) {\n        toolbar.current.classList.remove('__dev_on');\n      }\n    },\n    onFocus: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    className: \"copy\",\n    \"aria-label\": \"Copy blocks data\",\n    title: \"Copy blocks data\",\n    onClick: copyData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: copySVG,\n    className: \"circled\",\n    size: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  })), __jsx(Button, {\n    className: \"paste\",\n    \"aria-label\": \"Paste blocks data\",\n    title: \"Paste blocks data\",\n    onClick: pasteData,\n    disabled: props.updateRequest.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: pasteSVG,\n    className: \"circled\",\n    size: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default compose(connect((state, props) => ({\n  content: state.content.data,\n  updateRequest: state.content.update,\n  pathname: props.location.pathname\n}), {\n  updateContent\n}))(CopyPaste);","map":{"version":3,"names":["React","connect","compose","Portal","toast","Button","getBaseUrl","updateContent","Icon","Toast","copySVG","pasteSVG","TIMEOUT","CopyPaste","props","readyToRender","setReadyToRender","useState","clock","useRef","time","toolbar","content","copyData","navigator","clipboard","writeText","JSON","stringify","blocks","blocks_layout","success","pasteData","message","readText","then","text","window","confirm","join","data","parse","blocksIds","Object","keys","valid","items","length","forEach","block","includes","pathname","error","useEffect","current","setInterval","element","document","querySelector","clearInterval","__CLIENT__","e","altKey","classList","contains","add","remove","updateRequest","loading","state","update","location"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/components/theme/AppExtras/CopyPaste/CopyPaste.jsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Portal } from 'react-portal';\nimport { toast } from 'react-toastify';\nimport { Button } from 'semantic-ui-react';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { updateContent } from '@plone/volto/actions';\nimport { Icon, Toast } from '@plone/volto/components';\nimport copySVG from '@plone/volto/icons/copy.svg';\nimport pasteSVG from '@plone/volto/icons/paste.svg';\n\nimport './style.less';\n\nconst TIMEOUT = 2000;\n\nconst CopyPaste = (props) => {\n  const [readyToRender, setReadyToRender] = React.useState(false);\n  const clock = React.useRef(null);\n  const time = React.useRef(0);\n  const toolbar = React.useRef(null);\n  const { content } = props;\n\n  const copyData = () => {\n    navigator.clipboard.writeText(\n      JSON.stringify({\n        blocks: content.blocks,\n        blocks_layout: content.blocks_layout,\n      }),\n    );\n    toast.success(\n      <Toast success title={'Success'} content={`Copied blocks`} />,\n    );\n  };\n\n  const pasteData = () => {\n    const message = [\n      '============= BRAKING CHANGE =============',\n      '\\nAre you sure you want to paste from clipboard?',\n      '\\nThis action will replace all the blocks with those from clipboard and will trigger SUBMIT !!!',\n    ];\n    navigator.clipboard.readText().then((text) => {\n      if (\n        // eslint-disable-next-line no-alert\n        window.confirm(message.join(''))\n      ) {\n        try {\n          const data = JSON.parse(text) || {};\n          const { blocks = {}, blocks_layout = {} } = data;\n          const blocksIds = Object.keys(blocks);\n          let valid = true;\n          if (\n            blocks_layout &&\n            blocks_layout.items &&\n            blocks_layout.items.length === blocksIds.length\n          ) {\n            blocks_layout.items.forEach((block) => {\n              if (valid && !blocksIds.includes(block)) {\n                valid = false;\n              }\n            });\n          }\n          if (valid) {\n            props.updateContent(getBaseUrl(props.pathname), data);\n            toast.success(\n              <Toast\n                success\n                title={'Success'}\n                content={'Blocks replaced successfully'}\n              />,\n            );\n          } else {\n            toast.error(\n              <Toast\n                error\n                title={'Error'}\n                content={'Your clipboard contains incompatible data'}\n              />,\n            );\n          }\n        } catch {\n          toast.error(\n            <Toast\n              error\n              title={'Error'}\n              content={'Your clipboard contains incompatible data'}\n            />,\n          );\n        }\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    clock.current = setInterval(() => {\n      const element = document.querySelector('#toolbar .toolbar-actions');\n      if (element) {\n        setReadyToRender(true);\n        clearInterval(clock.current);\n        time.current = 0;\n        return;\n      }\n      if (time.current >= TIMEOUT) {\n        clearInterval(clock.current);\n        time.current = 0;\n        return;\n      }\n      time.current += 100;\n    }, 100);\n    return () => {\n      clearInterval(clock.current);\n      time.current = 0;\n    };\n  }, []);\n\n  if (!__CLIENT__ || !readyToRender) return '';\n\n  return (\n    <Portal node={document.querySelector('#toolbar .toolbar-actions')}>\n      <div\n        ref={toolbar}\n        id=\"__developer_tools\"\n        onMouseEnter={(e) => {\n          if (\n            e.altKey &&\n            toolbar.current &&\n            !toolbar.current.classList.contains('__dev_on')\n          ) {\n            toolbar.current.classList.add('__dev_on');\n          }\n        }}\n        onMouseLeave={(e) => {\n          if (\n            toolbar.current &&\n            toolbar.current.classList.contains('__dev_on')\n          ) {\n            toolbar.current.classList.remove('__dev_on');\n          }\n        }}\n        onFocus={() => {}}\n      >\n        <Button\n          className=\"copy\"\n          aria-label=\"Copy blocks data\"\n          title=\"Copy blocks data\"\n          onClick={copyData}\n        >\n          <Icon name={copySVG} className=\"circled\" size=\"30px\" />\n        </Button>\n        <Button\n          className=\"paste\"\n          aria-label=\"Paste blocks data\"\n          title=\"Paste blocks data\"\n          onClick={pasteData}\n          disabled={props.updateRequest.loading}\n        >\n          <Icon name={pasteSVG} className=\"circled\" size=\"30px\" />\n        </Button>\n      </div>\n    </Portal>\n  );\n};\n\nexport default compose(\n  connect(\n    (state, props) => ({\n      content: state.content.data,\n      updateRequest: state.content.update,\n      pathname: props.location.pathname,\n    }),\n    {\n      updateContent,\n    },\n  ),\n)(CopyPaste);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}