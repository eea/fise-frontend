{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/blocks/Listing/templates/NewsList.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\nimport config from '@plone/volto/registry';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nvar CustomNewsListTemplate = function CustomNewsListTemplate(_ref) {\n  var items = _ref.items,\n    gridSize = _ref.gridSize,\n    isEditMode = _ref.isEditMode,\n    hasDate = _ref.hasDate,\n    hasDescription = _ref.hasDescription;\n  moment.locale(config.settings.dateLocale);\n  var makeTextBody = function makeTextBody(item) {\n    return __jsx(\"div\", {\n      className: \"news-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }\n    }, __jsx(Link, {\n      className: \"news-headline\",\n      title: item.title,\n      to: item['@id'] ? flattenToAppURL(getBaseUrl(item['@id'])) : '',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, item.title ? item.title : item.id), hasDate && item.effective && __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      className: \"info-prefix\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"Published:\", '  '), __jsx(\"span\", {\n      className: \"category\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, moment(item.effective).format('ll'))), hasDescription && __jsx(\"div\", {\n      className: \"description\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, item.description)));\n  };\n  return __jsx(React.Fragment, null, items && items.length > 0 && __jsx(\"div\", {\n    className: \"ui fluid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, items.map(function (item) {\n    return __jsx(\"div\", {\n      key: item['@id'],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, makeTextBody(item));\n  })));\n};\n_c = CustomNewsListTemplate;\nCustomNewsListTemplate.schemaEnhancer = function (_ref2) {\n  var schema = _ref2.schema,\n    formData = _ref2.formData,\n    intl = _ref2.intl;\n  schema.fieldsets.splice(1, 0, {\n    id: 'newsList',\n    title: 'News item',\n    fields: ['hasDate', 'hasDescription']\n  });\n  schema.properties = _objectSpread(_objectSpread({}, schema.properties), {}, {\n    hasDate: {\n      title: 'Publication date',\n      type: 'boolean'\n    },\n    hasDescription: {\n      title: 'Description',\n      type: 'boolean'\n    }\n  });\n  return schema;\n};\nCustomNewsListTemplate.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n  linkMore: PropTypes.any,\n  isEditMode: PropTypes.bool\n};\nexport default CustomNewsListTemplate;\nvar _c;\n$RefreshReg$(_c, \"CustomNewsListTemplate\");","map":{"version":3,"names":["React","flattenToAppURL","getBaseUrl","Link","config","moment","PropTypes","CustomNewsListTemplate","items","gridSize","isEditMode","hasDate","hasDescription","locale","settings","dateLocale","makeTextBody","item","title","id","effective","format","description","length","map","schemaEnhancer","schema","formData","intl","fieldsets","splice","fields","properties","type","propTypes","arrayOf","any","isRequired","linkMore","bool"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/blocks/Listing/templates/NewsList.jsx"],"sourcesContent":["import React from 'react';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\nimport config from '@plone/volto/registry';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nconst CustomNewsListTemplate = ({\n  items,\n  gridSize,\n  isEditMode,\n  hasDate,\n  hasDescription,\n}) => {\n  moment.locale(config.settings.dateLocale);\n  const makeTextBody = (item) => (\n    <div className=\"news-item\">\n      <Link\n        className=\"news-headline\"\n        title={item.title}\n        to={item['@id'] ? flattenToAppURL(getBaseUrl(item['@id'])) : ''}\n      >\n        {item.title ? item.title : item.id}\n      </Link>\n\n      {hasDate && item.effective && (\n        <div>\n          <span className=\"info-prefix\">Published:{'  '}</span>\n          <span className=\"category\">\n            {moment(item.effective).format('ll')}\n          </span>\n        </div>\n      )}\n      {hasDescription && (\n        <div className=\"description\">\n          <p>{item.description}</p>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <>\n      {items && items.length > 0 && (\n        <div className={`ui fluid`}>\n          {items.map((item) => (\n            <div key={item['@id']}>{makeTextBody(item)}</div>\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nCustomNewsListTemplate.schemaEnhancer = ({ schema, formData, intl }) => {\n  schema.fieldsets.splice(1, 0, {\n    id: 'newsList',\n    title: 'News item',\n    fields: ['hasDate', 'hasDescription'],\n  });\n\n  schema.properties = {\n    ...schema.properties,\n    hasDate: {\n      title: 'Publication date',\n      type: 'boolean',\n    },\n    hasDescription: {\n      title: 'Description',\n      type: 'boolean',\n    },\n  };\n  return schema;\n};\n\nCustomNewsListTemplate.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n  linkMore: PropTypes.any,\n  isEditMode: PropTypes.bool,\n};\n\nexport default CustomNewsListTemplate;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}