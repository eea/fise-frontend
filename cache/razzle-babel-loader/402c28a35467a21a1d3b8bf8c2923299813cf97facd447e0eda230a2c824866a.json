{"ast":null,"code":"import { Transforms, createEditor } from 'slate'; // , Transforms\nimport { withHistory } from 'slate-history';\nimport { withReact, ReactEditor } from 'slate-react';\nimport config from '@plone/volto/registry';\nexport function setEditorContent(editor, block) {\n  Transforms.removeNodes(editor, {\n    at: [0]\n  }); // TODO: at: [] needs rethinking\n  Transforms.insertNodes(editor, block);\n}\nexport function makeEditor(options = {}) {\n  const {\n    extensions = []\n  } = options;\n  const {\n    slate\n  } = config.settings;\n  const defaultExtensions = slate.extensions;\n  const editor = withHistory(withReact(createEditor()));\n\n  // TODO: also look for MIME Types in the files case\n  editor.dataTransferFormatsOrder = ['application/x-slate-fragment', 'text/html', 'files', 'text/plain'];\n  editor.dataTransferHandlers = {};\n  const plugins = [...defaultExtensions, ...extensions];\n  editor.isSelected = () => ReactEditor.isFocused(editor);\n  return plugins.reduce((acc, extender) => extender(acc), editor);\n}","map":{"version":3,"names":["Transforms","createEditor","withHistory","withReact","ReactEditor","config","setEditorContent","editor","block","removeNodes","at","insertNodes","makeEditor","options","extensions","slate","settings","defaultExtensions","dataTransferFormatsOrder","dataTransferHandlers","plugins","isSelected","isFocused","reduce","acc","extender"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/utils/editor.js"],"sourcesContent":["import { Transforms, createEditor } from 'slate'; // , Transforms\nimport { withHistory } from 'slate-history';\nimport { withReact, ReactEditor } from 'slate-react';\n\nimport config from '@plone/volto/registry';\n\nexport function setEditorContent(editor, block) {\n  Transforms.removeNodes(editor, { at: [0] }); // TODO: at: [] needs rethinking\n  Transforms.insertNodes(editor, block);\n}\n\nexport function makeEditor(options = {}) {\n  const { extensions = [] } = options;\n  const { slate } = config.settings;\n  const defaultExtensions = slate.extensions;\n  const editor = withHistory(withReact(createEditor()));\n\n  // TODO: also look for MIME Types in the files case\n  editor.dataTransferFormatsOrder = [\n    'application/x-slate-fragment',\n    'text/html',\n    'files',\n    'text/plain',\n  ];\n  editor.dataTransferHandlers = {};\n\n  const plugins = [...defaultExtensions, ...extensions];\n  editor.isSelected = () => ReactEditor.isFocused(editor);\n\n  return plugins.reduce((acc, extender) => extender(acc), editor);\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,YAAY,QAAQ,OAAO,CAAC,CAAC;AAClD,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,SAAS,EAAEC,WAAW,QAAQ,aAAa;AAEpD,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,OAAO,SAASC,gBAAgB,CAACC,MAAM,EAAEC,KAAK,EAAE;EAC9CR,UAAU,CAACS,WAAW,CAACF,MAAM,EAAE;IAAEG,EAAE,EAAE,CAAC,CAAC;EAAE,CAAC,CAAC,CAAC,CAAC;EAC7CV,UAAU,CAACW,WAAW,CAACJ,MAAM,EAAEC,KAAK,CAAC;AACvC;AAEA,OAAO,SAASI,UAAU,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;EACvC,MAAM;IAAEC,UAAU,GAAG;EAAG,CAAC,GAAGD,OAAO;EACnC,MAAM;IAAEE;EAAM,CAAC,GAAGV,MAAM,CAACW,QAAQ;EACjC,MAAMC,iBAAiB,GAAGF,KAAK,CAACD,UAAU;EAC1C,MAAMP,MAAM,GAAGL,WAAW,CAACC,SAAS,CAACF,YAAY,EAAE,CAAC,CAAC;;EAErD;EACAM,MAAM,CAACW,wBAAwB,GAAG,CAChC,8BAA8B,EAC9B,WAAW,EACX,OAAO,EACP,YAAY,CACb;EACDX,MAAM,CAACY,oBAAoB,GAAG,CAAC,CAAC;EAEhC,MAAMC,OAAO,GAAG,CAAC,GAAGH,iBAAiB,EAAE,GAAGH,UAAU,CAAC;EACrDP,MAAM,CAACc,UAAU,GAAG,MAAMjB,WAAW,CAACkB,SAAS,CAACf,MAAM,CAAC;EAEvD,OAAOa,OAAO,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAKA,QAAQ,CAACD,GAAG,CAAC,EAAEjB,MAAM,CAAC;AACjE"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}