{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/customizations/volto/components/manage/Blocks/Block/EditBlockWrapper.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { Icon } from '@plone/volto/components';\nimport { blockHasValue } from '@plone/volto/helpers';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { Button } from 'semantic-ui-react';\nimport includes from 'lodash/includes';\nimport isBoolean from 'lodash/isBoolean';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nconst messages = defineMessages({\n  delete: {\n    \"id\": \"delete\",\n    \"defaultMessage\": \"delete\"\n  }\n});\nconst EditBlockWrapper = props => {\n  const hideHandler = data => {\n    return !!data.fixed || !(blockHasValue(data) && props.blockProps.editable);\n  };\n  const {\n    intl,\n    blockProps,\n    draginfo,\n    children\n  } = props;\n  const {\n    block,\n    selected,\n    type,\n    onDeleteBlock,\n    data,\n    editable\n  } = blockProps;\n  const visible = selected && !hideHandler(data);\n  const required = isBoolean(data.required) ? data.required : includes(config.blocks.requiredBlocks, type);\n  return __jsx(\"div\", _extends({\n    ref: draginfo.innerRef\n  }, draginfo.draggableProps, {\n    className: `block-editor-${data['@type']}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", _extends({\n    style: {\n      visibility: visible ? 'visible' : 'hidden',\n      display: 'inline-block'\n    }\n  }, draginfo.dragHandleProps, {\n    className: \"drag handle wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), __jsx(Icon, {\n    name: dragSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: `ui drag block inner ${type}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, children, selected && !required && editable && __jsx(Button, {\n    icon: true,\n    basic: true,\n    onClick: () => onDeleteBlock(block, true),\n    className: \"delete-button\",\n    \"aria-label\": intl.formatMessage(messages.delete),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: trashSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  })))));\n};\nexport default injectIntl(EditBlockWrapper);","map":{"version":3,"names":["React","Icon","blockHasValue","dragSVG","Button","includes","isBoolean","defineMessages","injectIntl","config","trashSVG","messages","delete","EditBlockWrapper","props","hideHandler","data","fixed","blockProps","editable","intl","draginfo","children","block","selected","type","onDeleteBlock","visible","required","blocks","requiredBlocks","innerRef","draggableProps","position","visibility","display","dragHandleProps","formatMessage"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/customizations/volto/components/manage/Blocks/Block/EditBlockWrapper.jsx"],"sourcesContent":["import React from 'react';\nimport { Icon } from '@plone/volto/components';\nimport { blockHasValue } from '@plone/volto/helpers';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { Button } from 'semantic-ui-react';\nimport includes from 'lodash/includes';\nimport isBoolean from 'lodash/isBoolean';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\n\nimport trashSVG from '@plone/volto/icons/delete.svg';\n\nconst messages = defineMessages({\n  delete: {\n    id: 'delete',\n    defaultMessage: 'delete',\n  },\n});\n\nconst EditBlockWrapper = (props) => {\n  const hideHandler = (data) => {\n    return !!data.fixed || !(blockHasValue(data) && props.blockProps.editable);\n  };\n\n  const { intl, blockProps, draginfo, children } = props;\n  const { block, selected, type, onDeleteBlock, data, editable } = blockProps;\n  const visible = selected && !hideHandler(data);\n\n  const required = isBoolean(data.required)\n    ? data.required\n    : includes(config.blocks.requiredBlocks, type);\n\n  return (\n    <div\n      ref={draginfo.innerRef}\n      {...draginfo.draggableProps}\n      className={`block-editor-${data['@type']}`}\n    >\n      <div style={{ position: 'relative' }}>\n        <div\n          style={{\n            visibility: visible ? 'visible' : 'hidden',\n            display: 'inline-block',\n          }}\n          {...draginfo.dragHandleProps}\n          className=\"drag handle wrapper\"\n        >\n          <Icon name={dragSVG} size=\"18px\" />\n        </div>\n        <div className={`ui drag block inner ${type}`}>\n          {children}\n          {selected && !required && editable && (\n            <Button\n              icon\n              basic\n              onClick={() => onDeleteBlock(block, true)}\n              className=\"delete-button\"\n              aria-label={intl.formatMessage(messages.delete)}\n            >\n              <Icon name={trashSVG} size=\"18px\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default injectIntl(EditBlockWrapper);\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,SAASC,cAAc,EAAEC,UAAU,QAAQ,YAAY;AACvD,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,OAAOC,QAAQ,MAAM,+BAA+B;AAEpD,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;EAC9BK,MAAM;IAAA;IAAA;EAAA;AAIR,CAAC,CAAC;AAEF,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAClC,MAAMC,WAAW,GAAIC,IAAI,IAAK;IAC5B,OAAO,CAAC,CAACA,IAAI,CAACC,KAAK,IAAI,EAAEf,aAAa,CAACc,IAAI,CAAC,IAAIF,KAAK,CAACI,UAAU,CAACC,QAAQ,CAAC;EAC5E,CAAC;EAED,MAAM;IAAEC,IAAI;IAAEF,UAAU;IAAEG,QAAQ;IAAEC;EAAS,CAAC,GAAGR,KAAK;EACtD,MAAM;IAAES,KAAK;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,aAAa;IAAEV,IAAI;IAAEG;EAAS,CAAC,GAAGD,UAAU;EAC3E,MAAMS,OAAO,GAAGH,QAAQ,IAAI,CAACT,WAAW,CAACC,IAAI,CAAC;EAE9C,MAAMY,QAAQ,GAAGtB,SAAS,CAACU,IAAI,CAACY,QAAQ,CAAC,GACrCZ,IAAI,CAACY,QAAQ,GACbvB,QAAQ,CAACI,MAAM,CAACoB,MAAM,CAACC,cAAc,EAAEL,IAAI,CAAC;EAEhD,OACE;IACE,GAAG,EAAEJ,QAAQ,CAACU;EAAS,GACnBV,QAAQ,CAACW,cAAc;IAC3B,SAAS,EAAG,gBAAehB,IAAI,CAAC,OAAO,CAAE,EAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAE3C;IAAK,KAAK,EAAE;MAAEiB,QAAQ,EAAE;IAAW,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACnC;IACE,KAAK,EAAE;MACLC,UAAU,EAAEP,OAAO,GAAG,SAAS,GAAG,QAAQ;MAC1CQ,OAAO,EAAE;IACX;EAAE,GACEd,QAAQ,CAACe,eAAe;IAC5B,SAAS,EAAC,qBAAqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAE/B,MAAC,IAAI;IAAC,IAAI,EAAEjC,OAAQ;IAAC,IAAI,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAC/B,EACN;IAAK,SAAS,EAAG,uBAAsBsB,IAAK,EAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC3CH,QAAQ,EACRE,QAAQ,IAAI,CAACI,QAAQ,IAAIT,QAAQ,IAChC,MAAC,MAAM;IACL,IAAI;IACJ,KAAK;IACL,OAAO,EAAE,MAAMO,aAAa,CAACH,KAAK,EAAE,IAAI,CAAE;IAC1C,SAAS,EAAC,eAAe;IACzB,cAAYH,IAAI,CAACiB,aAAa,CAAC1B,QAAQ,CAACC,MAAM,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEhD,MAAC,IAAI;IAAC,IAAI,EAAEF,QAAS;IAAC,IAAI,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAEvC,CACG,CACF,CACF;AAEV,CAAC;AAED,eAAeF,UAAU,CAACK,gBAAgB,CAAC"},"metadata":{"react-intl":{"messages":[{"id":"delete","defaultMessage":"delete"}]}},"sourceType":"module","externalDependencies":[]}