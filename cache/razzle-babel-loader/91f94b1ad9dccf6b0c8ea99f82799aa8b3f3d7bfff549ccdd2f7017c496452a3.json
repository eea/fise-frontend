{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/packages/volto-slate/src/blocks/Table/Cell.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { EditorReference, SlateEditor } from '@plone/volto-slate/editor';\nimport { ReactEditor } from 'slate-react';\nimport config from '@plone/volto/registry';\nvar Cell = /*#__PURE__*/function (_Component) {\n  _inherits(Cell, _Component);\n  var _super = _createSuper(Cell);\n  function Cell(props) {\n    var _this;\n    _classCallCheck(this, Cell);\n    _this = _super.call(this, props);\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.handleContainerFocus = _this.handleContainerFocus.bind(_assertThisInitialized(_this));\n    _this.state = {\n      editor: null\n    };\n    _this.tableblockExtensions = config.settings.slate.tableblockExtensions;\n    return _this;\n  }\n  _createClass(Cell, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isUnmounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n      if (prevProps.isTableBlockSelected !== this.props.isTableBlockSelected && this.props.isTableBlockSelected && this.props.cell === 0 && this.props.row === 0 && (!this.props.selectedCell || this.props.selectedCell.row === 0 && this.props.selectedCell.cell === 0)) {\n        this.props.onSelectCell(this.props.row, this.props.cell);\n\n        // Wait for Slate to initialize before asking it to focus\n        if (this.state.editor) {\n          setTimeout(function () {\n            return !_this2.isUnmounted && ReactEditor.focus(_this2.state.editor);\n          }, 0);\n        }\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(val) {\n      this.props.onChange(this.props.row, this.props.cell, _toConsumableArray(val));\n    }\n  }, {\n    key: \"handleContainerFocus\",\n    value: function handleContainerFocus() {\n      this.props.onSelectCell(this.props.row, this.props.cell);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      return __CLIENT__ && __jsx(SlateEditor, {\n        tabIndex: 0,\n        onChange: this.onChange,\n        extensions: this.tableblockExtensions,\n        value: this.props.value,\n        selected: this.props.selected,\n        onFocus: this.handleContainerFocus,\n        onClick: this.handleContainerFocus,\n        debug: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, __jsx(EditorReference, {\n        onHasEditor: function onHasEditor(editor) {\n          return !_this3.state.editor && _this3.setState({\n            editor: editor\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n  return Cell;\n}(Component);\n_defineProperty(Cell, \"propTypes\", {\n  onSelectCell: PropTypes.func.isRequired,\n  row: PropTypes.number,\n  cell: PropTypes.number,\n  value: PropTypes.array,\n  selected: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  isTableBlockSelected: PropTypes.bool\n});\n_defineProperty(Cell, \"defaultProps\", {});\nexport default Cell;","map":{"version":3,"names":["React","Component","PropTypes","EditorReference","SlateEditor","ReactEditor","config","Cell","props","onChange","bind","handleContainerFocus","state","editor","tableblockExtensions","settings","slate","isUnmounted","prevProps","isTableBlockSelected","cell","row","selectedCell","onSelectCell","setTimeout","focus","val","__CLIENT__","value","selected","setState","func","isRequired","number","array","bool"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/packages/volto-slate/src/blocks/Table/Cell.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { EditorReference, SlateEditor } from '@plone/volto-slate/editor';\nimport { ReactEditor } from 'slate-react';\nimport config from '@plone/volto/registry';\n\nclass Cell extends Component {\n  static propTypes = {\n    onSelectCell: PropTypes.func.isRequired,\n    row: PropTypes.number,\n    cell: PropTypes.number,\n    value: PropTypes.array,\n    selected: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    isTableBlockSelected: PropTypes.bool,\n  };\n\n  static defaultProps = {};\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.handleContainerFocus = this.handleContainerFocus.bind(this);\n    this.state = { editor: null };\n    this.tableblockExtensions = config.settings.slate.tableblockExtensions;\n  }\n\n  componentWillUnmount() {\n    this.isUnmounted = true;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.isTableBlockSelected !== this.props.isTableBlockSelected &&\n      this.props.isTableBlockSelected &&\n      this.props.cell === 0 &&\n      this.props.row === 0 &&\n      (!this.props.selectedCell ||\n        (this.props.selectedCell.row === 0 &&\n          this.props.selectedCell.cell === 0))\n    ) {\n      this.props.onSelectCell(this.props.row, this.props.cell);\n\n      // Wait for Slate to initialize before asking it to focus\n      if (this.state.editor) {\n        setTimeout(\n          () => !this.isUnmounted && ReactEditor.focus(this.state.editor),\n          0,\n        );\n      }\n    }\n  }\n\n  onChange(val) {\n    this.props.onChange(this.props.row, this.props.cell, [...val]);\n  }\n\n  handleContainerFocus() {\n    this.props.onSelectCell(this.props.row, this.props.cell);\n  }\n\n  render() {\n    return (\n      __CLIENT__ && (\n        <SlateEditor\n          tabIndex={0}\n          onChange={this.onChange}\n          extensions={this.tableblockExtensions}\n          value={this.props.value}\n          selected={this.props.selected}\n          onFocus={this.handleContainerFocus}\n          onClick={this.handleContainerFocus}\n          debug={false}\n        >\n          <EditorReference\n            onHasEditor={(editor) =>\n              !this.state.editor && this.setState({ editor })\n            }\n          />\n        </SlateEditor>\n      )\n    );\n  }\n}\n\nexport default Cell;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}