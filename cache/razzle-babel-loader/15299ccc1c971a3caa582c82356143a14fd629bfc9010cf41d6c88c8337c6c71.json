{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Toast/Toast.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@plone/volto/components';\nimport successSVG from '@plone/volto/icons/ready.svg';\nimport infoSVG from '@plone/volto/icons/info.svg';\nimport errorSVG from '@plone/volto/icons/error.svg';\nimport warningSVG from '@plone/volto/icons/warning.svg';\nvar Toast = function Toast(props) {\n  function getIcon(props) {\n    if (props.info) {\n      return infoSVG;\n    } else if (props.success) {\n      return successSVG;\n    } else if (props.error) {\n      return errorSVG;\n    } else if (props.error) {\n      return warningSVG;\n    } else {\n      return successSVG;\n    }\n  }\n  var title = props.title,\n    content = props.content;\n  return __jsx(React.Fragment, null, __jsx(Icon, {\n    name: getIcon(props),\n    size: \"18px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"toast-inner-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, title && __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }\n  }, title), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, content)));\n};\n_c = Toast;\nToast.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  content: PropTypes.string.isRequired,\n  info: PropTypes.bool,\n  success: PropTypes.bool,\n  error: PropTypes.bool,\n  warning: PropTypes.bool\n};\nexport default Toast;\nvar _c;\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"names":["React","PropTypes","Icon","successSVG","infoSVG","errorSVG","warningSVG","Toast","props","getIcon","info","success","error","title","content","propTypes","oneOfType","string","array","isRequired","bool","warning"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Toast/Toast.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@plone/volto/components';\n\nimport successSVG from '@plone/volto/icons/ready.svg';\nimport infoSVG from '@plone/volto/icons/info.svg';\nimport errorSVG from '@plone/volto/icons/error.svg';\nimport warningSVG from '@plone/volto/icons/warning.svg';\n\nconst Toast = (props) => {\n  function getIcon(props) {\n    if (props.info) {\n      return infoSVG;\n    } else if (props.success) {\n      return successSVG;\n    } else if (props.error) {\n      return errorSVG;\n    } else if (props.error) {\n      return warningSVG;\n    } else {\n      return successSVG;\n    }\n  }\n\n  const { title, content } = props;\n\n  return (\n    <>\n      <Icon name={getIcon(props)} size=\"18px\" />\n      <div className=\"toast-inner-content\">\n        {title && <h4>{title}</h4>}\n        <p>{content}</p>\n      </div>\n    </>\n  );\n};\n\nToast.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  content: PropTypes.string.isRequired,\n  info: PropTypes.bool,\n  success: PropTypes.bool,\n  error: PropTypes.bool,\n  warning: PropTypes.bool,\n};\n\nexport default Toast;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,QAAQ,yBAAyB;AAE9C,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,UAAU,MAAM,gCAAgC;AAEvD,IAAMC,KAAK,GAAG,SAARA,KAAK,CAAIC,KAAK,EAAK;EACvB,SAASC,OAAO,CAACD,KAAK,EAAE;IACtB,IAAIA,KAAK,CAACE,IAAI,EAAE;MACd,OAAON,OAAO;IAChB,CAAC,MAAM,IAAII,KAAK,CAACG,OAAO,EAAE;MACxB,OAAOR,UAAU;IACnB,CAAC,MAAM,IAAIK,KAAK,CAACI,KAAK,EAAE;MACtB,OAAOP,QAAQ;IACjB,CAAC,MAAM,IAAIG,KAAK,CAACI,KAAK,EAAE;MACtB,OAAON,UAAU;IACnB,CAAC,MAAM;MACL,OAAOH,UAAU;IACnB;EACF;EAEA,IAAQU,KAAK,GAAcL,KAAK,CAAxBK,KAAK;IAAEC,OAAO,GAAKN,KAAK,CAAjBM,OAAO;EAEtB,OACE,4BACE,MAAC,IAAI;IAAC,IAAI,EAAEL,OAAO,CAACD,KAAK,CAAE;IAAC,IAAI,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC1C;IAAK,SAAS,EAAC,qBAAqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjCK,KAAK,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKA,KAAK,CAAM,EAC1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIC,OAAO,CAAK,CACZ,CACL;AAEP,CAAC;AAAC,KA1BIP,KAAK;AA4BXA,KAAK,CAACQ,SAAS,GAAG;EAChBF,KAAK,EAAEZ,SAAS,CAACe,SAAS,CAAC,CAACf,SAAS,CAACgB,MAAM,EAAEhB,SAAS,CAACiB,KAAK,CAAC,CAAC;EAC/DJ,OAAO,EAAEb,SAAS,CAACgB,MAAM,CAACE,UAAU;EACpCT,IAAI,EAAET,SAAS,CAACmB,IAAI;EACpBT,OAAO,EAAEV,SAAS,CAACmB,IAAI;EACvBR,KAAK,EAAEX,SAAS,CAACmB,IAAI;EACrBC,OAAO,EAAEpB,SAAS,CAACmB;AACrB,CAAC;AAED,eAAeb,KAAK;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}