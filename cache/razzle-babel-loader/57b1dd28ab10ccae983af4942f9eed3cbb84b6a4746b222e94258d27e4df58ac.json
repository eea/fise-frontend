{"ast":null,"code":"import express from 'express';\nimport { generateSitemap } from '@plone/volto/helpers';\nexport const sitemap = function (req, res, next) {\n  generateSitemap(req).then(sitemap => {\n    if (Buffer.isBuffer(sitemap)) {\n      res.set('Content-Type', 'application/x-gzip');\n      res.set('Content-Encoding', 'gzip');\n      res.set('Content-Disposition', 'attachment; filename=\"sitemap.xml.gz\"');\n      res.send(sitemap);\n    } else {\n      var _sitemap$code;\n      // {\"errno\":-111, \"code\":\"ECONNREFUSED\", \"host\": ...}\n      res.status(500);\n      // Some data, such as the internal API address, may be sensitive to be published\n      res.send(`Sitemap generation error: ${(_sitemap$code = sitemap.code) !== null && _sitemap$code !== void 0 ? _sitemap$code : '-'}`);\n    }\n  });\n};\nexport default function () {\n  const middleware = express.Router();\n  middleware.all('**/sitemap.xml.gz', sitemap);\n  middleware.id = 'sitemap.xml.gz';\n  return middleware;\n}","map":{"version":3,"names":["express","generateSitemap","sitemap","req","res","next","then","Buffer","isBuffer","set","send","status","code","middleware","Router","all","id"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/express-middleware/sitemap.js"],"sourcesContent":["import express from 'express';\nimport { generateSitemap } from '@plone/volto/helpers';\n\nexport const sitemap = function (req, res, next) {\n  generateSitemap(req).then((sitemap) => {\n    if (Buffer.isBuffer(sitemap)) {\n      res.set('Content-Type', 'application/x-gzip');\n      res.set('Content-Encoding', 'gzip');\n      res.set('Content-Disposition', 'attachment; filename=\"sitemap.xml.gz\"');\n      res.send(sitemap);\n    } else {\n      // {\"errno\":-111, \"code\":\"ECONNREFUSED\", \"host\": ...}\n      res.status(500);\n      // Some data, such as the internal API address, may be sensitive to be published\n      res.send(`Sitemap generation error: ${sitemap.code ?? '-'}`);\n    }\n  });\n};\n\nexport default function () {\n  const middleware = express.Router();\n\n  middleware.all('**/sitemap.xml.gz', sitemap);\n  middleware.id = 'sitemap.xml.gz';\n  return middleware;\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,SAASC,eAAe,QAAQ,sBAAsB;AAEtD,OAAO,MAAMC,OAAO,GAAG,UAAUC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAE;EAC/CJ,eAAe,CAACE,GAAG,CAAC,CAACG,IAAI,CAAEJ,OAAO,IAAK;IACrC,IAAIK,MAAM,CAACC,QAAQ,CAACN,OAAO,CAAC,EAAE;MAC5BE,GAAG,CAACK,GAAG,CAAC,cAAc,EAAE,oBAAoB,CAAC;MAC7CL,GAAG,CAACK,GAAG,CAAC,kBAAkB,EAAE,MAAM,CAAC;MACnCL,GAAG,CAACK,GAAG,CAAC,qBAAqB,EAAE,uCAAuC,CAAC;MACvEL,GAAG,CAACM,IAAI,CAACR,OAAO,CAAC;IACnB,CAAC,MAAM;MAAA;MACL;MACAE,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC;MACf;MACAP,GAAG,CAACM,IAAI,CAAE,6BAA0B,iBAAER,OAAO,CAACU,IAAI,yDAAI,GAAI,EAAC,CAAC;IAC9D;EACF,CAAC,CAAC;AACJ,CAAC;AAED,eAAe,YAAY;EACzB,MAAMC,UAAU,GAAGb,OAAO,CAACc,MAAM,EAAE;EAEnCD,UAAU,CAACE,GAAG,CAAC,mBAAmB,EAAEb,OAAO,CAAC;EAC5CW,UAAU,CAACG,EAAE,GAAG,gBAAgB;EAChC,OAAOH,UAAU;AACnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}