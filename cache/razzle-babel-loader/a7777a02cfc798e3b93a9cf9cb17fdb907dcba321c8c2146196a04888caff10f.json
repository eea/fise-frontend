{"ast":null,"code":"import _toPairs from \"lodash/toPairs\";\nimport _pickBy from \"lodash/pickBy\";\nimport _map from \"lodash/map\";\nimport _join from \"lodash/join\";\nimport _isArray from \"lodash/isArray\";\nimport _concat from \"lodash/concat\";\nimport _compact from \"lodash/compact\";\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport { GET_CONTENT } from '@plone/volto/constants/ActionTypes';\nimport { GET_INDEX_VALUES, GET_CONTROLPANEL_FALLBACKS, CREATE_ATTACHMENT, GET_ALL_ATTACHMENTS, GET_ATTACHMENTS, DELETE_ATTACHMENT, UPDATE_ATTACHMENT, GET_PORTLETS, FORCE_DRAFT_EDITOR_REFRESH, CHANGE_SIDEBAR_STATE, CLONE_AS_TYPE, CHANGE_MAP_DATA, GET_MAP_DATA, QUICK_RESET_SEARCH_CONTENT, QUICK_SEARCH_CONTENT, GET_RESOURCES } from './constants';\nimport { dataToQueryString } from './helpers';\nexport function getIndexValues(name) {\n  return {\n    type: GET_INDEX_VALUES,\n    request: {\n      op: 'post',\n      path: '/@index-values',\n      data: {\n        name\n      }\n    }\n  };\n}\nexport function getContentWithData(url, version = null, subrequest = null, data = {}) {\n  const qs = dataToQueryString(data);\n  return {\n    type: GET_CONTENT,\n    subrequest,\n    request: {\n      op: 'get',\n      path: `${url}${version ? `/@history/${version}` : ''}?fullobjects${data ? '&' + qs : ''}`,\n      data\n    }\n  };\n}\nexport function getControlpanelFallbacks() {\n  return {\n    type: GET_CONTROLPANEL_FALLBACKS,\n    request: {\n      op: 'get',\n      path: '/@controlpanels-fallbacks'\n    }\n  };\n}\nexport function createAttachment(url, content) {\n  return {\n    type: CREATE_ATTACHMENT,\n    request: {\n      op: 'post',\n      path: url,\n      data: content\n    }\n  };\n}\nexport function getAllAttachments(path) {\n  return {\n    type: GET_ALL_ATTACHMENTS,\n    request: {\n      op: 'get',\n      path\n    }\n  };\n}\nexport function getAttachments(path, _type) {\n  return {\n    type: GET_ATTACHMENTS,\n    request: {\n      op: 'get',\n      path,\n      data: {\n        container: _type\n      }\n    }\n  };\n}\nexport function deleteAttachment(path) {\n  return {\n    type: DELETE_ATTACHMENT,\n    request: {\n      op: 'del',\n      path: flattenToAppURL(path)\n    }\n  };\n}\nexport function updateAttachment(path, data) {\n  return {\n    type: UPDATE_ATTACHMENT,\n    request: {\n      op: 'patch',\n      path: flattenToAppURL(path),\n      data\n    }\n  };\n}\nexport function getPortlets(path, name) {\n  const url = name ? `${path}/@portlets/${name}` : `${path}/@portlets`;\n  return {\n    type: GET_PORTLETS,\n    subrequest: name,\n    request: {\n      op: 'get',\n      path: url\n    }\n  };\n}\nexport function forceDraftEditorRefresh(key) {\n  return {\n    type: FORCE_DRAFT_EDITOR_REFRESH,\n    editorKey: key\n  };\n}\nexport function changeSidebarState(open) {\n  return {\n    type: CHANGE_SIDEBAR_STATE,\n    open\n  };\n}\nexport function cloneAsType(path, typeName) {\n  return {\n    type: CLONE_AS_TYPE,\n    request: {\n      op: 'post',\n      path: `${path}/@clone-as-type`,\n      data: {\n        typeName\n      }\n    }\n  };\n}\nexport function changeMapData(mapData) {\n  localStorage.setItem('mapData', JSON.stringify(mapData));\n  // console.log('coming her', mapData);\n  return {\n    type: CHANGE_MAP_DATA,\n    mapData\n  };\n}\nexport function getMapData() {\n  const mapData = JSON.parse(localStorage.getItem('mapData'));\n  // console.log('got new data', mapData);\n  return {\n    type: GET_MAP_DATA,\n    mapData\n  };\n}\nexport function quickSearchContent(url, options, subrequest = null, filters) {\n  let queryArray = [];\n  const arrayOptions = _pickBy(options, item => _isArray(item));\n  queryArray = _concat(queryArray, options ? _join(_map(_toPairs(_pickBy(options, item => !_isArray(item))), item => {\n    if (item[0] === 'SearchableText') {\n      // Adds the wildcard to the SearchableText param\n      item[1] = `${item[1]}*`;\n    } else if (!item[1]) return;\n    return _join(item, '=');\n  }), '&') : '');\n  queryArray = _concat(queryArray, arrayOptions ? _join(_map(_pickBy(arrayOptions), (item, key) => {\n    return _join(item.map(value => `${key}=${value}`), '&');\n  }), '&') : '');\n  const querystring = _join(_compact(queryArray), '&');\n  return {\n    type: QUICK_SEARCH_CONTENT,\n    subrequest,\n    filters,\n    request: {\n      op: 'get',\n      path: `${url}/@search${querystring ? `?${querystring}` : ''}`\n    }\n  };\n}\nexport function quickResetSearchContent(subrequest = null) {\n  return {\n    type: QUICK_RESET_SEARCH_CONTENT,\n    subrequest\n  };\n}\nexport function getResources(path, b_size = 5, b_start = 0, metadata = []) {\n  let metadata_fields = '';\n  metadata.forEach(item => {\n    metadata_fields += `&metadata_fields=${item}`;\n  });\n  return {\n    type: GET_RESOURCES,\n    dataType: path,\n    request: {\n      op: 'get',\n      path: `/${path}/aggregator/?b_size:int=${b_size}&b_start:int=${b_start}${metadata_fields}`\n    }\n  };\n}","map":{"version":3,"names":["flattenToAppURL","GET_CONTENT","GET_INDEX_VALUES","GET_CONTROLPANEL_FALLBACKS","CREATE_ATTACHMENT","GET_ALL_ATTACHMENTS","GET_ATTACHMENTS","DELETE_ATTACHMENT","UPDATE_ATTACHMENT","GET_PORTLETS","FORCE_DRAFT_EDITOR_REFRESH","CHANGE_SIDEBAR_STATE","CLONE_AS_TYPE","CHANGE_MAP_DATA","GET_MAP_DATA","QUICK_RESET_SEARCH_CONTENT","QUICK_SEARCH_CONTENT","GET_RESOURCES","dataToQueryString","getIndexValues","name","type","request","op","path","data","getContentWithData","url","version","subrequest","qs","getControlpanelFallbacks","createAttachment","content","getAllAttachments","getAttachments","_type","container","deleteAttachment","updateAttachment","getPortlets","forceDraftEditorRefresh","key","editorKey","changeSidebarState","open","cloneAsType","typeName","changeMapData","mapData","localStorage","setItem","JSON","stringify","getMapData","parse","getItem","quickSearchContent","options","filters","queryArray","arrayOptions","item","map","value","querystring","quickResetSearchContent","getResources","b_size","b_start","metadata","metadata_fields","forEach","dataType"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/actions.js"],"sourcesContent":["import { flattenToAppURL } from '@plone/volto/helpers';\nimport { GET_CONTENT } from '@plone/volto/constants/ActionTypes';\nimport {\n  GET_INDEX_VALUES,\n  GET_CONTROLPANEL_FALLBACKS,\n  CREATE_ATTACHMENT,\n  GET_ALL_ATTACHMENTS,\n  GET_ATTACHMENTS,\n  DELETE_ATTACHMENT,\n  UPDATE_ATTACHMENT,\n  GET_PORTLETS,\n  FORCE_DRAFT_EDITOR_REFRESH,\n  CHANGE_SIDEBAR_STATE,\n  CLONE_AS_TYPE,\n  CHANGE_MAP_DATA,\n  GET_MAP_DATA,\n  QUICK_RESET_SEARCH_CONTENT,\n  QUICK_SEARCH_CONTENT,\n  GET_RESOURCES,\n} from './constants';\nimport { compact, concat, isArray, join, map, pickBy, toPairs } from 'lodash';\nimport { dataToQueryString } from './helpers';\n\nexport function getIndexValues(name) {\n  return {\n    type: GET_INDEX_VALUES,\n    request: {\n      op: 'post',\n      path: '/@index-values',\n      data: { name },\n    },\n  };\n}\n\nexport function getContentWithData(\n  url,\n  version = null,\n  subrequest = null,\n  data = {},\n) {\n  const qs = dataToQueryString(data);\n  return {\n    type: GET_CONTENT,\n    subrequest,\n    request: {\n      op: 'get',\n      path: `${url}${version ? `/@history/${version}` : ''}?fullobjects${\n        data ? '&' + qs : ''\n      }`,\n      data,\n    },\n  };\n}\n\nexport function getControlpanelFallbacks() {\n  return {\n    type: GET_CONTROLPANEL_FALLBACKS,\n    request: {\n      op: 'get',\n      path: '/@controlpanels-fallbacks',\n    },\n  };\n}\n\nexport function createAttachment(url, content) {\n  return {\n    type: CREATE_ATTACHMENT,\n    request: {\n      op: 'post',\n      path: url,\n      data: content,\n    },\n  };\n}\n\nexport function getAllAttachments(path) {\n  return {\n    type: GET_ALL_ATTACHMENTS,\n    request: {\n      op: 'get',\n      path,\n    },\n  };\n}\n\nexport function getAttachments(path, _type) {\n  return {\n    type: GET_ATTACHMENTS,\n    request: {\n      op: 'get',\n      path,\n      data: { container: _type },\n    },\n  };\n}\n\nexport function deleteAttachment(path) {\n  return {\n    type: DELETE_ATTACHMENT,\n    request: {\n      op: 'del',\n      path: flattenToAppURL(path),\n    },\n  };\n}\n\nexport function updateAttachment(path, data) {\n  return {\n    type: UPDATE_ATTACHMENT,\n    request: {\n      op: 'patch',\n      path: flattenToAppURL(path),\n      data,\n    },\n  };\n}\n\nexport function getPortlets(path, name) {\n  const url = name ? `${path}/@portlets/${name}` : `${path}/@portlets`;\n  return {\n    type: GET_PORTLETS,\n    subrequest: name,\n    request: {\n      op: 'get',\n      path: url,\n    },\n  };\n}\n\nexport function forceDraftEditorRefresh(key) {\n  return {\n    type: FORCE_DRAFT_EDITOR_REFRESH,\n    editorKey: key,\n  };\n}\n\nexport function changeSidebarState(open) {\n  return {\n    type: CHANGE_SIDEBAR_STATE,\n    open,\n  };\n}\n\nexport function cloneAsType(path, typeName) {\n  return {\n    type: CLONE_AS_TYPE,\n    request: {\n      op: 'post',\n      path: `${path}/@clone-as-type`,\n      data: {\n        typeName,\n      },\n    },\n  };\n}\n\nexport function changeMapData(mapData) {\n  localStorage.setItem('mapData', JSON.stringify(mapData));\n  // console.log('coming her', mapData);\n  return {\n    type: CHANGE_MAP_DATA,\n    mapData,\n  };\n}\n\nexport function getMapData() {\n  const mapData = JSON.parse(localStorage.getItem('mapData'));\n  // console.log('got new data', mapData);\n  return {\n    type: GET_MAP_DATA,\n    mapData,\n  };\n}\n\nexport function quickSearchContent(url, options, subrequest = null, filters) {\n  let queryArray = [];\n  const arrayOptions = pickBy(options, (item) => isArray(item));\n\n  queryArray = concat(\n    queryArray,\n    options\n      ? join(\n          map(toPairs(pickBy(options, (item) => !isArray(item))), (item) => {\n            if (item[0] === 'SearchableText') {\n              // Adds the wildcard to the SearchableText param\n              item[1] = `${item[1]}*`;\n            } else if (!item[1]) return;\n            return join(item, '=');\n          }),\n          '&',\n        )\n      : '',\n  );\n\n  queryArray = concat(\n    queryArray,\n    arrayOptions\n      ? join(\n          map(pickBy(arrayOptions), (item, key) => {\n            return join(\n              item.map((value) => `${key}=${value}`),\n              '&',\n            );\n          }),\n          '&',\n        )\n      : '',\n  );\n\n  const querystring = join(compact(queryArray), '&');\n\n  return {\n    type: QUICK_SEARCH_CONTENT,\n    subrequest,\n    filters,\n    request: {\n      op: 'get',\n      path: `${url}/@search${querystring ? `?${querystring}` : ''}`,\n    },\n  };\n}\n\nexport function quickResetSearchContent(subrequest = null) {\n  return {\n    type: QUICK_RESET_SEARCH_CONTENT,\n    subrequest,\n  };\n}\n\nexport function getResources(path, b_size = 5, b_start = 0, metadata = []) {\n  let metadata_fields = '';\n  metadata.forEach((item) => {\n    metadata_fields += `&metadata_fields=${item}`;\n  });\n  return {\n    type: GET_RESOURCES,\n    dataType: path,\n    request: {\n      op: 'get',\n      path: `/${path}/aggregator/?b_size:int=${b_size}&b_start:int=${b_start}${metadata_fields}`,\n    },\n  };\n}\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}