{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-plotlycharts/src/ChartEditor/ColorscaleColorsEditor.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport CustomColorPicker from './CustomColorPicker';\nimport { Icon } from '@plone/volto/components';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport upIcon from '@plone/volto/icons/up-key.svg';\nimport downIcon from '@plone/volto/icons/down-key.svg';\nimport addIcon from '@plone/volto/icons/add.svg';\nimport { Colorscale } from 'react-colorscales';\nimport { PlotlySection } from 'react-chart-editor';\n\n//a similar colorscale editor but withouth the values, only colors\n\nconst ColorscaleColorsEditor = ({\n  colorscale,\n  _,\n  handleChange\n}) => {\n  const [expand, setExpand] = React.useState(false);\n  const handleColorChange = (color, index) => {\n    var newColorscale = [...colorscale];\n    newColorscale[index] = color;\n    handleChange(newColorscale);\n  };\n  const handleDeleteColor = (colorscale, index) => {\n    var newColorscale = [...colorscale.slice(0, index), ...colorscale.slice(index + 1)];\n    handleChange(newColorscale);\n  };\n  const handleAddColor = colorscale => {\n    var newColorscale = [...colorscale, 'black'];\n    handleChange(newColorscale);\n  };\n  return __jsx(PlotlySection, {\n    name: _('Customize Colors'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"field field__colorscale colorscale-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    style: {\n      width: '70px',\n      fontSize: '12px',\n      color: '#506784',\n      marginLeft: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Active Colorscale\"), __jsx(\"div\", {\n    style: {\n      width: '180px',\n      'margin-left': '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(Colorscale, {\n    colorscale: colorscale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"colors-edit-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    className: \"color-expand-button\",\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    onClick: () => setExpand(!expand),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, !expand && __jsx(Icon, {\n    className: \"color-open-icon\",\n    name: upIcon,\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), expand && __jsx(Icon, {\n    className: \"color-close-icon\",\n    name: downIcon,\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), !expand ? 'Edit colors' : 'Close'), expand && __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, colorscale && colorscale.length > 0 && colorscale.map((item, index) => __jsx(\"div\", {\n    style: {\n      position: 'relative',\n      margin: '5px 0'\n    },\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, __jsx(CustomColorPicker, {\n    selectedColor: item,\n    onColorChange: color => handleColorChange(color, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }), colorscale.length > 2 && __jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '0',\n      right: '0',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, __jsx(Icon, {\n    onClick: () => handleDeleteColor(colorscale, index),\n    name: deleteSVG,\n    size: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 27\n    }\n  })))), __jsx(\"div\", {\n    className: \"color-buttons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, __jsx(\"button\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    className: \"color-add-button\",\n    title: \"Add new color\",\n    onClick: () => handleAddColor(colorscale),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, __jsx(Icon, {\n    className: \"color-add-icon\",\n    name: addIcon,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }), \"Add\")))))));\n};\nexport default ColorscaleColorsEditor;","map":{"version":3,"names":["React","CustomColorPicker","Icon","deleteSVG","upIcon","downIcon","addIcon","Colorscale","PlotlySection","ColorscaleColorsEditor","colorscale","_","handleChange","expand","setExpand","useState","handleColorChange","color","index","newColorscale","handleDeleteColor","slice","handleAddColor","width","fontSize","marginLeft","display","alignItems","length","map","item","position","margin","top","right","cursor"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-plotlycharts/src/ChartEditor/ColorscaleColorsEditor.jsx"],"sourcesContent":["import React from 'react';\nimport CustomColorPicker from './CustomColorPicker';\nimport { Icon } from '@plone/volto/components';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport upIcon from '@plone/volto/icons/up-key.svg';\nimport downIcon from '@plone/volto/icons/down-key.svg';\nimport addIcon from '@plone/volto/icons/add.svg';\nimport { Colorscale } from 'react-colorscales';\nimport { PlotlySection } from 'react-chart-editor';\n\n//a similar colorscale editor but withouth the values, only colors\n\nconst ColorscaleColorsEditor = ({ colorscale, _, handleChange }) => {\n  const [expand, setExpand] = React.useState(false);\n\n  const handleColorChange = (color, index) => {\n    var newColorscale = [...colorscale];\n    newColorscale[index] = color;\n\n    handleChange(newColorscale);\n  };\n\n  const handleDeleteColor = (colorscale, index) => {\n    var newColorscale = [\n      ...colorscale.slice(0, index),\n      ...colorscale.slice(index + 1),\n    ];\n    handleChange(newColorscale);\n  };\n\n  const handleAddColor = (colorscale) => {\n    var newColorscale = [...colorscale, 'black'];\n\n    handleChange(newColorscale);\n  };\n\n  return (\n    <PlotlySection name={_('Customize Colors')}>\n      <div className=\"field field__colorscale colorscale-container\">\n        <p\n          style={{\n            width: '70px',\n            fontSize: '12px',\n            color: '#506784',\n            marginLeft: '1em',\n          }}\n        >\n          Active Colorscale\n        </p>\n        <div\n          style={{\n            width: '180px',\n            'margin-left': '12px',\n          }}\n        >\n          <Colorscale colorscale={colorscale} />\n          <div className=\"colors-edit-container\">\n            <button\n              className=\"color-expand-button\"\n              style={{ display: 'flex', alignItems: 'center' }}\n              onClick={() => setExpand(!expand)}\n            >\n              {!expand && (\n                <Icon className=\"color-open-icon\" name={upIcon} size=\"20px\" />\n              )}\n              {expand && (\n                <Icon\n                  className=\"color-close-icon\"\n                  name={downIcon}\n                  size=\"20px\"\n                />\n              )}\n              {!expand ? 'Edit colors' : 'Close'}\n            </button>\n\n            {expand && (\n              <React.Fragment>\n                {colorscale &&\n                  colorscale.length > 0 &&\n                  colorscale.map((item, index) => (\n                    <div\n                      style={{ position: 'relative', margin: '5px 0' }}\n                      key={index}\n                    >\n                      <CustomColorPicker\n                        selectedColor={item}\n                        onColorChange={(color) =>\n                          handleColorChange(color, index)\n                        }\n                      />\n                      {colorscale.length > 2 && (\n                        <div\n                          style={{\n                            position: 'absolute',\n                            top: '0',\n                            right: '0',\n                            cursor: 'pointer',\n                          }}\n                        >\n                          <Icon\n                            onClick={() => handleDeleteColor(colorscale, index)}\n                            name={deleteSVG}\n                            size=\"24px\"\n                          />\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                <div className=\"color-buttons-container\">\n                  <button\n                    style={{ display: 'flex', alignItems: 'center' }}\n                    className=\"color-add-button\"\n                    title=\"Add new color\"\n                    onClick={() => handleAddColor(colorscale)}\n                  >\n                    <Icon\n                      className=\"color-add-icon\"\n                      name={addIcon}\n                      size=\"18px\"\n                    />\n                    Add\n                  </button>\n                </div>\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n      </div>\n    </PlotlySection>\n  );\n};\n\nexport default ColorscaleColorsEditor;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}