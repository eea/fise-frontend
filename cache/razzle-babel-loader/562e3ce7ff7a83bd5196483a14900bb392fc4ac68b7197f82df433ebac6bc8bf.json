{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Listing/withQuerystringResults.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { getContent, getQueryStringResults } from '@plone/volto/actions';\nimport { usePagination, getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\nexport default function withQuerystringResults(WrappedComponent) {\n  var _s = $RefreshSig$();\n  function WithQuerystringResults(props) {\n    _s();\n    var _querystring$query, _querystringResults$b, _querystring$query2, _querystringResults$b2, _querystringResults$b3, _content$batching, _querystringResults$b4, _content$batching2, _querystringResults$b5, _querystringResults$b6;\n    var _props$data = props.data,\n      data = _props$data === void 0 ? {} : _props$data,\n      content = props.properties,\n      path = props.path,\n      variation = props.variation;\n    var settings = config.settings;\n    var querystring = data.querystring || data; // For backwards compat with data saved before Blocks schema. Note, this is also how the Search block passes data to ListingBody\n\n    var block = data.block;\n    var _querystring$b_size = querystring.b_size,\n      b_size = _querystring$b_size === void 0 ? settings.defaultPageSize : _querystring$b_size; // batchsize\n\n    // save the path so it won't trigger dispatch on eager router location change\n    var _React$useState = React.useState(getBaseUrl(path)),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      initialPath = _React$useState2[0];\n    var copyFields = ['limit', 'query', 'sort_on', 'sort_order', 'depth'];\n    var adaptedQuery = Object.assign.apply(Object, [variation !== null && variation !== void 0 && variation.fullobjects ? {\n      fullobjects: 1\n    } : {\n      metadata_fields: '_all'\n    }, {\n      b_size: b_size\n    }].concat(_toConsumableArray(copyFields.map(function (name) {\n      return Object.keys(querystring).includes(name) ? _defineProperty({}, name, querystring[name]) : {};\n    }))));\n    var _usePagination = usePagination(querystring, 1),\n      currentPage = _usePagination.currentPage,\n      setCurrentPage = _usePagination.setCurrentPage;\n    var querystringResults = useSelector(function (state) {\n      return state.querystringsearch.subrequests;\n    });\n    var dispatch = useDispatch();\n    var folderItems = content !== null && content !== void 0 && content.is_folderish ? content.items : [];\n    var hasQuery = (querystring === null || querystring === void 0 ? void 0 : (_querystring$query = querystring.query) === null || _querystring$query === void 0 ? void 0 : _querystring$query.length) > 0;\n    var hasLoaded = hasQuery ? !(querystringResults !== null && querystringResults !== void 0 && (_querystringResults$b = querystringResults[block]) !== null && _querystringResults$b !== void 0 && _querystringResults$b.loading) : true;\n    var listingItems = (querystring === null || querystring === void 0 ? void 0 : (_querystring$query2 = querystring.query) === null || _querystring$query2 === void 0 ? void 0 : _querystring$query2.length) > 0 && querystringResults !== null && querystringResults !== void 0 && querystringResults[block] ? (querystringResults === null || querystringResults === void 0 ? void 0 : (_querystringResults$b2 = querystringResults[block]) === null || _querystringResults$b2 === void 0 ? void 0 : _querystringResults$b2.items) || [] : folderItems;\n    var showAsFolderListing = !hasQuery && (content === null || content === void 0 ? void 0 : content.items_total) > b_size;\n    var showAsQueryListing = hasQuery && (querystringResults === null || querystringResults === void 0 ? void 0 : (_querystringResults$b3 = querystringResults[block]) === null || _querystringResults$b3 === void 0 ? void 0 : _querystringResults$b3.total) > b_size;\n    var totalPages = showAsFolderListing ? Math.ceil(content.items_total / b_size) : showAsQueryListing ? Math.ceil(querystringResults[block].total / b_size) : 0;\n    var prevBatch = showAsFolderListing ? (_content$batching = content.batching) === null || _content$batching === void 0 ? void 0 : _content$batching.prev : showAsQueryListing ? (_querystringResults$b4 = querystringResults[block].batching) === null || _querystringResults$b4 === void 0 ? void 0 : _querystringResults$b4.prev : null;\n    var nextBatch = showAsFolderListing ? (_content$batching2 = content.batching) === null || _content$batching2 === void 0 ? void 0 : _content$batching2.next : showAsQueryListing ? (_querystringResults$b5 = querystringResults[block].batching) === null || _querystringResults$b5 === void 0 ? void 0 : _querystringResults$b5.next : null;\n    var isImageGallery = !data.variation && data.template === 'imageGallery' || data.variation === 'imageGallery';\n    useDeepCompareEffect(function () {\n      if (hasQuery) {\n        dispatch(getQueryStringResults(initialPath, adaptedQuery, block, currentPage));\n      } else if (isImageGallery && !hasQuery) {\n        // when used as image gallery, it doesn't need a query to list children\n        dispatch(getQueryStringResults(initialPath, _objectSpread(_objectSpread({}, adaptedQuery), {}, {\n          b_size: 10000000000,\n          query: [{\n            i: 'path',\n            o: 'plone.app.querystring.operation.string.relativePath',\n            v: ''\n          }]\n        }), block));\n      } else {\n        dispatch(getContent(initialPath, null, null, currentPage));\n      }\n    }, [block, isImageGallery, adaptedQuery, hasQuery, initialPath, dispatch, currentPage]);\n    return __jsx(WrappedComponent, _extends({}, props, {\n      onPaginationChange: function onPaginationChange(e, _ref2) {\n        var activePage = _ref2.activePage;\n        return setCurrentPage(activePage);\n      },\n      total: querystringResults === null || querystringResults === void 0 ? void 0 : (_querystringResults$b6 = querystringResults[block]) === null || _querystringResults$b6 === void 0 ? void 0 : _querystringResults$b6.total,\n      batch_size: b_size,\n      currentPage: currentPage,\n      totalPages: totalPages,\n      prevBatch: prevBatch,\n      nextBatch: nextBatch,\n      listingItems: listingItems,\n      hasLoaded: hasLoaded,\n      isFolderContentsListing: showAsFolderListing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }));\n  }\n  _s(WithQuerystringResults, \"LKOD175Ju7kErLLJ0dEdGSNuw74=\", false, function () {\n    return [usePagination, useSelector, useDispatch, useDeepCompareEffect];\n  });\n  WithQuerystringResults.displayName = \"WithQuerystringResults(\".concat(getDisplayName(WrappedComponent), \")\");\n  return hoistNonReactStatics(WithQuerystringResults, WrappedComponent);\n}","map":{"version":3,"names":["React","useDispatch","useSelector","hoistNonReactStatics","useDeepCompareEffect","getContent","getQueryStringResults","usePagination","getBaseUrl","config","getDisplayName","WrappedComponent","displayName","name","withQuerystringResults","WithQuerystringResults","props","data","content","properties","path","variation","settings","querystring","block","b_size","defaultPageSize","useState","initialPath","copyFields","adaptedQuery","Object","assign","fullobjects","metadata_fields","map","keys","includes","currentPage","setCurrentPage","querystringResults","state","querystringsearch","subrequests","dispatch","folderItems","is_folderish","items","hasQuery","query","length","hasLoaded","loading","listingItems","showAsFolderListing","items_total","showAsQueryListing","total","totalPages","Math","ceil","prevBatch","batching","prev","nextBatch","next","isImageGallery","template","i","o","v","e","activePage"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Listing/withQuerystringResults.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\n\nimport { getContent, getQueryStringResults } from '@plone/volto/actions';\nimport { usePagination, getBaseUrl } from '@plone/volto/helpers';\n\nimport config from '@plone/volto/registry';\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nexport default function withQuerystringResults(WrappedComponent) {\n  function WithQuerystringResults(props) {\n    const { data = {}, properties: content, path, variation } = props;\n    const { settings } = config;\n    const querystring = data.querystring || data; // For backwards compat with data saved before Blocks schema. Note, this is also how the Search block passes data to ListingBody\n\n    const { block } = data;\n    const { b_size = settings.defaultPageSize } = querystring; // batchsize\n\n    // save the path so it won't trigger dispatch on eager router location change\n    const [initialPath] = React.useState(getBaseUrl(path));\n\n    const copyFields = ['limit', 'query', 'sort_on', 'sort_order', 'depth'];\n\n    const adaptedQuery = Object.assign(\n      variation?.fullobjects ? { fullobjects: 1 } : { metadata_fields: '_all' },\n      {\n        b_size: b_size,\n      },\n      ...copyFields.map((name) =>\n        Object.keys(querystring).includes(name)\n          ? { [name]: querystring[name] }\n          : {},\n      ),\n    );\n    const { currentPage, setCurrentPage } = usePagination(querystring, 1);\n    const querystringResults = useSelector(\n      (state) => state.querystringsearch.subrequests,\n    );\n    const dispatch = useDispatch();\n\n    const folderItems = content?.is_folderish ? content.items : [];\n    const hasQuery = querystring?.query?.length > 0;\n    const hasLoaded = hasQuery ? !querystringResults?.[block]?.loading : true;\n\n    const listingItems =\n      querystring?.query?.length > 0 && querystringResults?.[block]\n        ? querystringResults?.[block]?.items || []\n        : folderItems;\n\n    const showAsFolderListing = !hasQuery && content?.items_total > b_size;\n    const showAsQueryListing =\n      hasQuery && querystringResults?.[block]?.total > b_size;\n\n    const totalPages = showAsFolderListing\n      ? Math.ceil(content.items_total / b_size)\n      : showAsQueryListing\n      ? Math.ceil(querystringResults[block].total / b_size)\n      : 0;\n\n    const prevBatch = showAsFolderListing\n      ? content.batching?.prev\n      : showAsQueryListing\n      ? querystringResults[block].batching?.prev\n      : null;\n    const nextBatch = showAsFolderListing\n      ? content.batching?.next\n      : showAsQueryListing\n      ? querystringResults[block].batching?.next\n      : null;\n\n    const isImageGallery =\n      (!data.variation && data.template === 'imageGallery') ||\n      data.variation === 'imageGallery';\n\n    useDeepCompareEffect(() => {\n      if (hasQuery) {\n        dispatch(\n          getQueryStringResults(initialPath, adaptedQuery, block, currentPage),\n        );\n      } else if (isImageGallery && !hasQuery) {\n        // when used as image gallery, it doesn't need a query to list children\n        dispatch(\n          getQueryStringResults(\n            initialPath,\n            {\n              ...adaptedQuery,\n              b_size: 10000000000,\n              query: [\n                {\n                  i: 'path',\n                  o: 'plone.app.querystring.operation.string.relativePath',\n                  v: '',\n                },\n              ],\n            },\n            block,\n          ),\n        );\n      } else {\n        dispatch(getContent(initialPath, null, null, currentPage));\n      }\n    }, [\n      block,\n      isImageGallery,\n      adaptedQuery,\n      hasQuery,\n      initialPath,\n      dispatch,\n      currentPage,\n    ]);\n\n    return (\n      <WrappedComponent\n        {...props}\n        onPaginationChange={(e, { activePage }) => setCurrentPage(activePage)}\n        total={querystringResults?.[block]?.total}\n        batch_size={b_size}\n        currentPage={currentPage}\n        totalPages={totalPages}\n        prevBatch={prevBatch}\n        nextBatch={nextBatch}\n        listingItems={listingItems}\n        hasLoaded={hasLoaded}\n        isFolderContentsListing={showAsFolderListing}\n      />\n    );\n  }\n\n  WithQuerystringResults.displayName = `WithQuerystringResults(${getDisplayName(\n    WrappedComponent,\n  )})`;\n\n  return hoistNonReactStatics(WithQuerystringResults, WrappedComponent);\n}\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}