{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-block-style/src/Widgets/Size.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\n/**\n * AlignWidget component.\n * To benefit from styling integration, use with a field named 'align'\n * @module components/manage/Widgets/AlignWidget\n */\n\nimport React from 'react';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport config from '@plone/volto/registry';\n\n// TODO: copy the styles from Volto's stylesheet\n\nvar SizeWidget = function SizeWidget(props) {\n  var id = props.id,\n    onChange = props.onChange,\n    value = props.value;\n  var ImageSizeWidget = config.widgets.widget.image_size;\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"align-tools\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(ImageSizeWidget, {\n    onChangeBlock: function onChangeBlock(id, _ref) {\n      var size = _ref.size;\n      return onChange(id, size);\n    },\n    data: {\n      size: value\n    },\n    block: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), __jsx(Button.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    icon: true,\n    basic: true,\n    onClick: function onClick() {\n      return onChange(id, null);\n    },\n    active: value === null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"image-sizes-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: clearSVG,\n    size: \"18px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }))))));\n};\n_c = SizeWidget;\nexport default SizeWidget;\nvar _c;\n$RefreshReg$(_c, \"SizeWidget\");","map":{"version":3,"names":["React","FormFieldWrapper","Icon","Button","clearSVG","config","SizeWidget","props","id","onChange","value","ImageSizeWidget","widgets","widget","image_size","size"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-block-style/src/Widgets/Size.jsx"],"sourcesContent":["/**\n * AlignWidget component.\n * To benefit from styling integration, use with a field named 'align'\n * @module components/manage/Widgets/AlignWidget\n */\n\nimport React from 'react';\n\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport config from '@plone/volto/registry';\n\n// TODO: copy the styles from Volto's stylesheet\n\nconst SizeWidget = (props) => {\n  const { id, onChange, value } = props;\n  const ImageSizeWidget = config.widgets.widget.image_size;\n  return (\n    <FormFieldWrapper {...props}>\n      <div className=\"align-tools\">\n        <ImageSizeWidget\n          onChangeBlock={(id, { size }) => onChange(id, size)}\n          data={{ size: value }}\n          block={id}\n        />\n        <Button.Group>\n          <Button\n            icon\n            basic\n            onClick={() => onChange(id, null)}\n            active={value === null}\n          >\n            <div className=\"image-sizes-text\">\n              <Icon name={clearSVG} size=\"18px\" />\n            </div>\n          </Button>\n        </Button.Group>\n      </div>\n    </FormFieldWrapper>\n  );\n};\n\nexport default SizeWidget;\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,gBAAgB,EAAEC,IAAI,QAAQ,yBAAyB;AAChE,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,MAAM,MAAM,uBAAuB;;AAE1C;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIC,KAAK,EAAK;EAC5B,IAAQC,EAAE,GAAsBD,KAAK,CAA7BC,EAAE;IAAEC,QAAQ,GAAYF,KAAK,CAAzBE,QAAQ;IAAEC,KAAK,GAAKH,KAAK,CAAfG,KAAK;EAC3B,IAAMC,eAAe,GAAGN,MAAM,CAACO,OAAO,CAACC,MAAM,CAACC,UAAU;EACxD,OACE,MAAC,gBAAgB,eAAKP,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACzB;IAAK,SAAS,EAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC1B,MAAC,eAAe;IACd,aAAa,EAAE,uBAACC,EAAE;MAAA,IAAIO,IAAI,QAAJA,IAAI;MAAA,OAAON,QAAQ,CAACD,EAAE,EAAEO,IAAI,CAAC;IAAA,CAAC;IACpD,IAAI,EAAE;MAAEA,IAAI,EAAEL;IAAM,CAAE;IACtB,KAAK,EAAEF,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACV,EACF,MAAC,MAAM,CAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACX,MAAC,MAAM;IACL,IAAI;IACJ,KAAK;IACL,OAAO,EAAE;MAAA,OAAMC,QAAQ,CAACD,EAAE,EAAE,IAAI,CAAC;IAAA,CAAC;IAClC,MAAM,EAAEE,KAAK,KAAK,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEvB;IAAK,SAAS,EAAC,kBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC/B,MAAC,IAAI;IAAC,IAAI,EAAEN,QAAS;IAAC,IAAI,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAChC,CACC,CACI,CACX,CACW;AAEvB,CAAC;AAAC,KA1BIE,UAAU;AA4BhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}