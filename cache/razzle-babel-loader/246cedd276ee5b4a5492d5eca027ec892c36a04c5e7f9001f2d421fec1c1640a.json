{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-block-style/src/Widgets/StyleSelect.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { Card, Item } from 'semantic-ui-react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nimport cx from 'classnames';\nconst StyleSelectWidget = props => {\n  const {\n    id,\n    value,\n    onChange\n  } = props;\n  const {\n    pluggableStyles = [],\n    previewText = 'Block content'\n  } = config.settings;\n  const renderPreview = React.useCallback(style => {\n    const Preview = style.previewComponent || style.component;\n    return Preview ? __jsx(Preview, {\n      className: cx(style.cssClass, 'style-preview'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, previewText) : __jsx(\"div\", {\n      className: cx(style.cssClass, 'style-preview'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, previewText);\n  }, [previewText]);\n  return __jsx(React.Fragment, null, pluggableStyles.length > 0 && __jsx(FormFieldWrapper, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(Card.Group, {\n    itemsPerRow: 2,\n    className: \"style-select-widget\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, pluggableStyles.map(style => {\n    return __jsx(Card, {\n      as: \"div\",\n      name: style.id,\n      onClick: () => onChange(id, style.id === value ? null : style.id),\n      key: style.id,\n      className: cx({\n        active: style.id === value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, __jsx(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }, __jsx(Item.Image, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, renderPreview(style))), __jsx(Card.Content, {\n      extra: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }, style.title));\n  }))));\n};\nexport default StyleSelectWidget;","map":{"version":3,"names":["React","Card","Item","FormFieldWrapper","config","cx","StyleSelectWidget","props","id","value","onChange","pluggableStyles","previewText","settings","renderPreview","useCallback","style","Preview","previewComponent","component","cssClass","length","map","active","title"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-block-style/src/Widgets/StyleSelect.jsx"],"sourcesContent":["import React from 'react';\nimport { Card, Item } from 'semantic-ui-react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nimport cx from 'classnames';\n\nconst StyleSelectWidget = (props) => {\n  const { id, value, onChange } = props;\n  const {\n    pluggableStyles = [],\n    previewText = 'Block content',\n  } = config.settings;\n\n  const renderPreview = React.useCallback(\n    (style) => {\n      const Preview = style.previewComponent || style.component;\n\n      return Preview ? (\n        <Preview className={cx(style.cssClass, 'style-preview')}>\n          {previewText}\n        </Preview>\n      ) : (\n        <div className={cx(style.cssClass, 'style-preview')}>{previewText}</div>\n      );\n    },\n    [previewText],\n  );\n\n  return (\n    <>\n      {pluggableStyles.length > 0 && (\n        <FormFieldWrapper {...props}>\n          <Card.Group itemsPerRow={2} className=\"style-select-widget\">\n            {pluggableStyles.map((style) => {\n              return (\n                <Card\n                  as=\"div\"\n                  name={style.id}\n                  onClick={() =>\n                    onChange(id, style.id === value ? null : style.id)\n                  }\n                  key={style.id}\n                  className={cx({ active: style.id === value })}\n                >\n                  <Card.Content>\n                    <Item.Image>{renderPreview(style)}</Item.Image>\n                  </Card.Content>\n                  <Card.Content extra>{style.title}</Card.Content>\n                </Card>\n              );\n            })}\n          </Card.Group>\n        </FormFieldWrapper>\n      )}\n    </>\n  );\n};\n\nexport default StyleSelectWidget;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,IAAI,QAAQ,mBAAmB;AAC9C,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,EAAE,MAAM,YAAY;AAE3B,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;EACnC,MAAM;IAAEC,EAAE;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGH,KAAK;EACrC,MAAM;IACJI,eAAe,GAAG,EAAE;IACpBC,WAAW,GAAG;EAChB,CAAC,GAAGR,MAAM,CAACS,QAAQ;EAEnB,MAAMC,aAAa,GAAGd,KAAK,CAACe,WAAW,CACpCC,KAAK,IAAK;IACT,MAAMC,OAAO,GAAGD,KAAK,CAACE,gBAAgB,IAAIF,KAAK,CAACG,SAAS;IAEzD,OAAOF,OAAO,GACZ,MAAC,OAAO;MAAC,SAAS,EAAEZ,EAAE,CAACW,KAAK,CAACI,QAAQ,EAAE,eAAe,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACrDR,WAAW,CACJ,GAEV;MAAK,SAAS,EAAEP,EAAE,CAACW,KAAK,CAACI,QAAQ,EAAE,eAAe,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAER,WAAW,CAClE;EACH,CAAC,EACD,CAACA,WAAW,CAAC,CACd;EAED,OACE,4BACGD,eAAe,CAACU,MAAM,GAAG,CAAC,IACzB,MAAC,gBAAgB,eAAKd,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACzB,MAAC,IAAI,CAAC,KAAK;IAAC,WAAW,EAAE,CAAE;IAAC,SAAS,EAAC,qBAAqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACxDI,eAAe,CAACW,GAAG,CAAEN,KAAK,IAAK;IAC9B,OACE,MAAC,IAAI;MACH,EAAE,EAAC,KAAK;MACR,IAAI,EAAEA,KAAK,CAACR,EAAG;MACf,OAAO,EAAE,MACPE,QAAQ,CAACF,EAAE,EAAEQ,KAAK,CAACR,EAAE,KAAKC,KAAK,GAAG,IAAI,GAAGO,KAAK,CAACR,EAAE,CAClD;MACD,GAAG,EAAEQ,KAAK,CAACR,EAAG;MACd,SAAS,EAAEH,EAAE,CAAC;QAAEkB,MAAM,EAAEP,KAAK,CAACR,EAAE,KAAKC;MAAM,CAAC,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAE9C,MAAC,IAAI,CAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACX,MAAC,IAAI,CAAC,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAEK,aAAa,CAACE,KAAK,CAAC,CAAc,CAClC,EACf,MAAC,IAAI,CAAC,OAAO;MAAC,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAEA,KAAK,CAACQ,KAAK,CAAgB,CAC3C;EAEX,CAAC,CAAC,CACS,CAEhB,CACA;AAEP,CAAC;AAED,eAAelB,iBAAiB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}