{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/LeadImage/Edit.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Edit image block.\n * @module components/manage/Blocks/Image/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { Message } from 'semantic-ui-react';\nimport { LeadImageSidebar, SidebarPortal } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nconst messages = defineMessages({\n  ImageBlockInputPlaceholder: {\n    \"id\": \"Upload a lead image in the 'Lead Image' content field.\",\n    \"defaultMessage\": \"Upload a lead image in the 'Lead Image' content field.\"\n  }\n});\n\n/**\n * Edit image block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"node\", /*#__PURE__*/React.createRef());\n  }\n  /**\n   * Align block handler\n   * @method onAlignBlock\n   * @param {string} align Alignment option\n   * @returns {undefined}\n   */\n  onAlignBlock(align) {\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      align\n    }));\n  }\n\n  /**\n   * @param {*} nextProps\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selected || !_isEqual(this.props.data, nextProps.data);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      data,\n      properties\n    } = this.props;\n    const placeholder = this.props.data.placeholder || this.props.intl.formatMessage(messages.ImageBlockInputPlaceholder);\n    return __jsx(\"div\", {\n      className: cx('block image align', {\n        center: !Boolean(data.align)\n      }, data.align),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, !properties.image && __jsx(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, __jsx(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: imageBlockSVG,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      className: \"message-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, placeholder))), properties.image && __jsx(\"img\", {\n      className: cx({\n        'full-width': data.align === 'full'\n      }),\n      src: properties.image.data ? `data:${properties.image['content-type']};base64,${properties.image.data}` : flattenToAppURL(properties.image.download),\n      alt: data.image_caption || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), __jsx(SidebarPortal, {\n      selected: this.props.selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, __jsx(LeadImageSidebar, _extends({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }))));\n  }\n}\n_defineProperty(Edit, \"propTypes\", {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  pathname: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired\n});\nexport default compose(injectIntl)(Edit);","map":{"version":3,"names":["React","Component","PropTypes","compose","defineMessages","injectIntl","cx","Message","LeadImageSidebar","SidebarPortal","flattenToAppURL","imageBlockSVG","messages","ImageBlockInputPlaceholder","Edit","createRef","onAlignBlock","align","props","onChangeBlock","block","data","shouldComponentUpdate","nextProps","selected","render","properties","placeholder","intl","formatMessage","center","Boolean","image","download","image_caption","objectOf","any","isRequired","bool","string","index","number","pathname","func","openObjectBrowser"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/LeadImage/Edit.jsx"],"sourcesContent":["/**\n * Edit image block.\n * @module components/manage/Blocks/Image/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { Message } from 'semantic-ui-react';\nimport { isEqual } from 'lodash';\n\nimport { LeadImageSidebar, SidebarPortal } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\n\nconst messages = defineMessages({\n  ImageBlockInputPlaceholder: {\n    id: \"Upload a lead image in the 'Lead Image' content field.\",\n    defaultMessage: \"Upload a lead image in the 'Lead Image' content field.\",\n  },\n});\n\n/**\n * Edit image block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    properties: PropTypes.objectOf(PropTypes.any).isRequired,\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    pathname: PropTypes.string.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    openObjectBrowser: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Align block handler\n   * @method onAlignBlock\n   * @param {string} align Alignment option\n   * @returns {undefined}\n   */\n  onAlignBlock(align) {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      align,\n    });\n  }\n\n  /**\n   * @param {*} nextProps\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selected || !isEqual(this.props.data, nextProps.data);\n  }\n\n  node = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { data, properties } = this.props;\n    const placeholder =\n      this.props.data.placeholder ||\n      this.props.intl.formatMessage(messages.ImageBlockInputPlaceholder);\n\n    return (\n      <div\n        className={cx(\n          'block image align',\n          {\n            center: !Boolean(data.align),\n          },\n          data.align,\n        )}\n      >\n        {!properties.image && (\n          <Message>\n            <center>\n              <img src={imageBlockSVG} alt=\"\" />\n              <div className=\"message-text\">{placeholder}</div>\n            </center>\n          </Message>\n        )}\n        {properties.image && (\n          <img\n            className={cx({ 'full-width': data.align === 'full' })}\n            src={\n              properties.image.data\n                ? `data:${properties.image['content-type']};base64,${properties.image.data}`\n                : flattenToAppURL(properties.image.download)\n            }\n            alt={data.image_caption || ''}\n          />\n        )}\n        <SidebarPortal selected={this.props.selected}>\n          <LeadImageSidebar {...this.props} />\n        </SidebarPortal>\n      </div>\n    );\n  }\n}\n\nexport default compose(injectIntl)(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Upload a lead image in the 'Lead Image' content field.","defaultMessage":"Upload a lead image in the 'Lead Image' content field."}]}},"sourceType":"module","externalDependencies":[]}