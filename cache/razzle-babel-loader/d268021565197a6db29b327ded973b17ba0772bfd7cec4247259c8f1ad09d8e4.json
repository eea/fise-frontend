{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Workflow reducer.\n * @module reducers/workflow/workflow\n */\n\nimport { TRANSITION_WORKFLOW, GET_WORKFLOW, GET_WORKFLOW_MULTIPLE } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  get: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  transition: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  currentState: {},\n  history: [],\n  transitions: [],\n  multiple: []\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Content reducer.\n * @function content\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function content(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_WORKFLOW}_PENDING`:\n    case `${GET_WORKFLOW_MULTIPLE}_PENDING`:\n    case `${TRANSITION_WORKFLOW}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null\n        }\n      });\n    case `${GET_WORKFLOW}_SUCCESS`:\n    case `${TRANSITION_WORKFLOW}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentState: action.result.state || state.currentState,\n        history: action.result.history ? action.result.history : state.history,\n        transitions: action.result.transitions ? action.result.transitions : state.transitions,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${GET_WORKFLOW_MULTIPLE}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        multiple: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${GET_WORKFLOW}_FAIL`:\n    case `${TRANSITION_WORKFLOW}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentState: {},\n        history: [],\n        transitions: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    case `${GET_WORKFLOW_MULTIPLE}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        multiple: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["TRANSITION_WORKFLOW","GET_WORKFLOW","GET_WORKFLOW_MULTIPLE","initialState","get","loaded","loading","error","transition","currentState","history","transitions","multiple","getRequestKey","actionType","split","toLowerCase","content","state","action","type","result"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/workflow/workflow.js"],"sourcesContent":["/**\n * Workflow reducer.\n * @module reducers/workflow/workflow\n */\n\nimport {\n  TRANSITION_WORKFLOW,\n  GET_WORKFLOW,\n  GET_WORKFLOW_MULTIPLE,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  transition: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  currentState: {},\n  history: [],\n  transitions: [],\n  multiple: [],\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Content reducer.\n * @function content\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function content(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_WORKFLOW}_PENDING`:\n    case `${GET_WORKFLOW_MULTIPLE}_PENDING`:\n    case `${TRANSITION_WORKFLOW}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_WORKFLOW}_SUCCESS`:\n    case `${TRANSITION_WORKFLOW}_SUCCESS`:\n      return {\n        ...state,\n        currentState: action.result.state || state.currentState,\n        history: action.result.history ? action.result.history : state.history,\n        transitions: action.result.transitions\n          ? action.result.transitions\n          : state.transitions,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${GET_WORKFLOW_MULTIPLE}_SUCCESS`:\n      return {\n        ...state,\n        multiple: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${GET_WORKFLOW}_FAIL`:\n    case `${TRANSITION_WORKFLOW}_FAIL`:\n      return {\n        ...state,\n        currentState: {},\n        history: [],\n        transitions: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${GET_WORKFLOW_MULTIPLE}_FAIL`:\n      return {\n        ...state,\n        multiple: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,SACEA,mBAAmB,EACnBC,YAAY,EACZC,qBAAqB,QAChB,oCAAoC;AAE3C,MAAMC,YAAY,GAAG;EACnBC,GAAG,EAAE;IACHC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,UAAU,EAAE;IACVH,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDE,YAAY,EAAE,CAAC,CAAC;EAChBC,OAAO,EAAE,EAAE;EACXC,WAAW,EAAE,EAAE;EACfC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAa,CAACC,UAAU,EAAE;EACjC,OAAOA,UAAU,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,OAAO,CAACC,KAAK,GAAGf,YAAY,EAAEgB,MAAM,GAAG,CAAC,CAAC,EAAE;EACjE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAM,GAAEnB,YAAa,UAAS;IAC9B,KAAM,GAAEC,qBAAsB,UAAS;IACvC,KAAM,GAAEF,mBAAoB,UAAS;MACnC,uCACKkB,KAAK;QACR,CAACL,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bd,OAAO,EAAE,IAAI;UACbD,MAAM,EAAE,KAAK;UACbE,KAAK,EAAE;QACT;MAAC;IAEL,KAAM,GAAEN,YAAa,UAAS;IAC9B,KAAM,GAAED,mBAAoB,UAAS;MACnC,uCACKkB,KAAK;QACRT,YAAY,EAAEU,MAAM,CAACE,MAAM,CAACH,KAAK,IAAIA,KAAK,CAACT,YAAY;QACvDC,OAAO,EAAES,MAAM,CAACE,MAAM,CAACX,OAAO,GAAGS,MAAM,CAACE,MAAM,CAACX,OAAO,GAAGQ,KAAK,CAACR,OAAO;QACtEC,WAAW,EAAEQ,MAAM,CAACE,MAAM,CAACV,WAAW,GAClCQ,MAAM,CAACE,MAAM,CAACV,WAAW,GACzBO,KAAK,CAACP,WAAW;QACrB,CAACE,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bd,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,IAAI;UACZE,KAAK,EAAE;QACT;MAAC;IAEL,KAAM,GAAEL,qBAAsB,UAAS;MACrC,uCACKgB,KAAK;QACRN,QAAQ,EAAEO,MAAM,CAACE,MAAM;QACvB,CAACR,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bd,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,IAAI;UACZE,KAAK,EAAE;QACT;MAAC;IAEL,KAAM,GAAEN,YAAa,OAAM;IAC3B,KAAM,GAAED,mBAAoB,OAAM;MAChC,uCACKkB,KAAK;QACRT,YAAY,EAAE,CAAC,CAAC;QAChBC,OAAO,EAAE,EAAE;QACXC,WAAW,EAAE,EAAE;QACf,CAACE,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bd,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,KAAK;UACbE,KAAK,EAAEY,MAAM,CAACZ;QAChB;MAAC;IAEL,KAAM,GAAEL,qBAAsB,OAAM;MAClC,uCACKgB,KAAK;QACRN,QAAQ,EAAE,EAAE;QACZ,CAACC,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bd,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,KAAK;UACbE,KAAK,EAAEY,MAAM,CAACZ;QAChB;MAAC;IAEL;MACE,OAAOW,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}