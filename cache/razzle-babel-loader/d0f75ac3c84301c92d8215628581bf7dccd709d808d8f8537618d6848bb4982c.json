{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Widgets/ImageWidget.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport cx from 'classnames';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nvar niceBytes = function niceBytes(bytes) {\n  bytes = Number(bytes);\n  var divider = 1024;\n  var magnitude = Math.log(bytes) / Math.log(divider) | 0;\n  var result = bytes / Math.pow(divider, magnitude);\n  var fixed = result.toFixed(0);\n  var suffix = magnitude ? 'kMGTPEZY'[magnitude - 1] + 'B' : 'B';\n  return fixed + suffix;\n};\nvar ImageWidget = function ImageWidget(_ref) {\n  var value = _ref.value,\n    className = _ref.className;\n  return value ? __jsx(\"span\", {\n    className: cx(className, 'image', 'widget'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: value.data ? \"data:\".concat(value['content-type'], \";base64,\").concat(value.data) : flattenToAppURL(value.download || ''),\n    alt: value.file_name || '',\n    \"data-size\": value.size || 0,\n    \"data-size-fmt\": niceBytes(value.size || 0),\n    \"data-content-type\": value['content-type'] || '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  })) : '';\n};\n_c = ImageWidget;\nexport default ImageWidget;\nvar _c;\n$RefreshReg$(_c, \"ImageWidget\");","map":{"version":3,"names":["React","cx","flattenToAppURL","niceBytes","bytes","Number","divider","magnitude","Math","log","result","pow","fixed","toFixed","suffix","ImageWidget","value","className","data","download","file_name","size"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Widgets/ImageWidget.jsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nconst niceBytes = (bytes) => {\n  bytes = Number(bytes);\n\n  const divider = 1024;\n  const magnitude = (Math.log(bytes) / Math.log(divider)) | 0;\n  const result = bytes / Math.pow(divider, magnitude);\n  const fixed = result.toFixed(0);\n\n  const suffix = magnitude ? 'kMGTPEZY'[magnitude - 1] + 'B' : 'B';\n\n  return fixed + suffix;\n};\n\nconst ImageWidget = ({ value, className }) =>\n  value ? (\n    <span className={cx(className, 'image', 'widget')}>\n      <img\n        src={\n          value.data\n            ? `data:${value['content-type']};base64,${value.data}`\n            : flattenToAppURL(value.download || '')\n        }\n        alt={value.file_name || ''}\n        data-size={value.size || 0}\n        data-size-fmt={niceBytes(value.size || 0)}\n        data-content-type={value['content-type'] || ''}\n      />\n    </span>\n  ) : (\n    ''\n  );\n\nexport default ImageWidget;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,eAAe,QAAQ,sBAAsB;AAEtD,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAIC,KAAK,EAAK;EAC3BA,KAAK,GAAGC,MAAM,CAACD,KAAK,CAAC;EAErB,IAAME,OAAO,GAAG,IAAI;EACpB,IAAMC,SAAS,GAAIC,IAAI,CAACC,GAAG,CAACL,KAAK,CAAC,GAAGI,IAAI,CAACC,GAAG,CAACH,OAAO,CAAC,GAAI,CAAC;EAC3D,IAAMI,MAAM,GAAGN,KAAK,GAAGI,IAAI,CAACG,GAAG,CAACL,OAAO,EAAEC,SAAS,CAAC;EACnD,IAAMK,KAAK,GAAGF,MAAM,CAACG,OAAO,CAAC,CAAC,CAAC;EAE/B,IAAMC,MAAM,GAAGP,SAAS,GAAG,UAAU,CAACA,SAAS,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;EAEhE,OAAOK,KAAK,GAAGE,MAAM;AACvB,CAAC;AAED,IAAMC,WAAW,GAAG,SAAdA,WAAW;EAAA,IAAMC,KAAK,QAALA,KAAK;IAAEC,SAAS,QAATA,SAAS;EAAA,OACrCD,KAAK,GACH;IAAM,SAAS,EAAEf,EAAE,CAACgB,SAAS,EAAE,OAAO,EAAE,QAAQ,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAChD;IACE,GAAG,EACDD,KAAK,CAACE,IAAI,kBACEF,KAAK,CAAC,cAAc,CAAC,qBAAWA,KAAK,CAACE,IAAI,IAClDhB,eAAe,CAACc,KAAK,CAACG,QAAQ,IAAI,EAAE,CACzC;IACD,GAAG,EAAEH,KAAK,CAACI,SAAS,IAAI,EAAG;IAC3B,aAAWJ,KAAK,CAACK,IAAI,IAAI,CAAE;IAC3B,iBAAelB,SAAS,CAACa,KAAK,CAACK,IAAI,IAAI,CAAC,CAAE;IAC1C,qBAAmBL,KAAK,CAAC,cAAc,CAAC,IAAI,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC/C,CACG,GAEP,EACD;AAAA;AAAC,KAjBED,WAAW;AAmBjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}