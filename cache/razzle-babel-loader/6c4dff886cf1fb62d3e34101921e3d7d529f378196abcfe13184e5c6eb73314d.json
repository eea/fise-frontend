{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { GET_RESOURCES } from '../constants';\nconst initialState = {\n  error: null,\n  data: {},\n  loaded: false,\n  loading: false\n};\nlet newState;\nexport default function resources(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_RESOURCES}_PENDING`:\n      newState = _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n      if (!newState.data[action.dataType]) {\n        newState.data[action.dataType] = {};\n        newState.data[action.dataType].items = [];\n        newState.data[action.dataType].items_total = 0;\n      }\n      return newState;\n    case `${GET_RESOURCES}_SUCCESS`:\n      newState = _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: true,\n        loading: false\n      });\n      newState.data[action.dataType].items = action.result.items;\n      newState.data[action.dataType].items_total = action.result.items_total;\n      return newState;\n    case `${GET_RESOURCES}_FAIL`:\n      newState = _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        loading: false,\n        loaded: false\n      });\n      newState.data[action.dataType].items = [];\n      newState.data[action.dataType].items_total = 0;\n      return newState;\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_RESOURCES","initialState","error","data","loaded","loading","newState","resources","state","action","type","dataType","items","items_total","result"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/reducers/resources.js"],"sourcesContent":["import { GET_RESOURCES } from '../constants';\n\nconst initialState = {\n  error: null,\n  data: {},\n  loaded: false,\n  loading: false,\n};\n\nlet newState;\n\nexport default function resources(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_RESOURCES}_PENDING`:\n      newState = {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n      if (!newState.data[action.dataType]) {\n        newState.data[action.dataType] = {};\n        newState.data[action.dataType].items = [];\n        newState.data[action.dataType].items_total = 0;\n      }\n      return newState;\n\n    case `${GET_RESOURCES}_SUCCESS`:\n      newState = {\n        ...state,\n        error: null,\n        loaded: true,\n        loading: false,\n      };\n      newState.data[action.dataType].items = action.result.items;\n      newState.data[action.dataType].items_total = action.result.items_total;\n      return newState;\n    case `${GET_RESOURCES}_FAIL`:\n      newState = {\n        ...state,\n        error: action.error,\n        loading: false,\n        loaded: false,\n      };\n      newState.data[action.dataType].items = [];\n      newState.data[action.dataType].items_total = 0;\n      return newState;\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;AAAA,SAASA,aAAa,QAAQ,cAAc;AAE5C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE,CAAC,CAAC;EACRC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;AAED,IAAIC,QAAQ;AAEZ,eAAe,SAASC,SAAS,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,GAAG,CAAC,CAAC,EAAE;EACnE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAM,GAAEV,aAAc,UAAS;MAC7BM,QAAQ,mCACHE,KAAK;QACRN,KAAK,EAAE,IAAI;QACXE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI,EACd;MACD,IAAI,CAACC,QAAQ,CAACH,IAAI,CAACM,MAAM,CAACE,QAAQ,CAAC,EAAE;QACnCL,QAAQ,CAACH,IAAI,CAACM,MAAM,CAACE,QAAQ,CAAC,GAAG,CAAC,CAAC;QACnCL,QAAQ,CAACH,IAAI,CAACM,MAAM,CAACE,QAAQ,CAAC,CAACC,KAAK,GAAG,EAAE;QACzCN,QAAQ,CAACH,IAAI,CAACM,MAAM,CAACE,QAAQ,CAAC,CAACE,WAAW,GAAG,CAAC;MAChD;MACA,OAAOP,QAAQ;IAEjB,KAAM,GAAEN,aAAc,UAAS;MAC7BM,QAAQ,mCACHE,KAAK;QACRN,KAAK,EAAE,IAAI;QACXE,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MAAK,EACf;MACDC,QAAQ,CAACH,IAAI,CAACM,MAAM,CAACE,QAAQ,CAAC,CAACC,KAAK,GAAGH,MAAM,CAACK,MAAM,CAACF,KAAK;MAC1DN,QAAQ,CAACH,IAAI,CAACM,MAAM,CAACE,QAAQ,CAAC,CAACE,WAAW,GAAGJ,MAAM,CAACK,MAAM,CAACD,WAAW;MACtE,OAAOP,QAAQ;IACjB,KAAM,GAAEN,aAAc,OAAM;MAC1BM,QAAQ,mCACHE,KAAK;QACRN,KAAK,EAAEO,MAAM,CAACP,KAAK;QACnBG,OAAO,EAAE,KAAK;QACdD,MAAM,EAAE;MAAK,EACd;MACDE,QAAQ,CAACH,IAAI,CAACM,MAAM,CAACE,QAAQ,CAAC,CAACC,KAAK,GAAG,EAAE;MACzCN,QAAQ,CAACH,IAAI,CAACM,MAAM,CAACE,QAAQ,CAAC,CAACE,WAAW,GAAG,CAAC;MAC9C,OAAOP,QAAQ;IACjB;MACE,OAAOE,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}