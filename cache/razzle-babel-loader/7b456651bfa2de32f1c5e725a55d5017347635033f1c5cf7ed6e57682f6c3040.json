{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _map from \"lodash/map\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/customizations/volto/components/theme/View/ListingView.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { getLocalnavigation } from '@eeacms/volto-forests-theme/actions';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getBaseUrl } from '@plone/volto/helpers'; // , flattenToAppURL\n\nimport { Container, Image } from 'semantic-ui-react'; // , Grid\n\nimport config from '@plone/volto/registry';\nimport { asyncConnect } from 'redux-connect';\nimport { getBlocksFieldname, getBlocksLayoutFieldname, hasBlocksData } from '@plone/volto/helpers';\nimport { samePath } from '../../../../../helpers';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nvar ListingView = /*#__PURE__*/function (_Component) {\n  _inherits(ListingView, _Component);\n  var _super = _createSuper(ListingView);\n  function ListingView() {\n    _classCallCheck(this, ListingView);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ListingView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$content,\n        _this = this;\n      var content = this.props.content;\n      var blocksFieldname = getBlocksFieldname(content);\n      var blocksLayoutFieldname = getBlocksLayoutFieldname(content);\n      var localNavigation = this.props.localNavigation && this.props.localNavigation.items && this.props.localNavigation.items.filter(function (item) {\n        return item.title !== 'Home';\n      }) || [];\n      var currentUrl = (_this$props$content = this.props.content) === null || _this$props$content === void 0 ? void 0 : _this$props$content['@id'];\n      var shouldRenderRoutes = typeof currentUrl !== 'undefined' && samePath(currentUrl, this.props.pathname) ? true : false;\n      if (!shouldRenderRoutes) return __jsx(Dimmer, {\n        active: true,\n        inverted: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, __jsx(Loader, {\n        size: \"massive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }));\n      var pageTemplate = hasBlocksData(content) ? __jsx(\"div\", {\n        id: \"page-document\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, __jsx(Helmet, {\n        title: content.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }), _map(content[blocksLayoutFieldname].items, function (block) {\n        var _config$blocks$blocks, _content$blocksFieldn, _content$blocksFieldn2;\n        var Block = ((_config$blocks$blocks = config.blocks.blocksConfig[(_content$blocksFieldn = content[blocksFieldname]) === null || _content$blocksFieldn === void 0 ? void 0 : (_content$blocksFieldn2 = _content$blocksFieldn[block]) === null || _content$blocksFieldn2 === void 0 ? void 0 : _content$blocksFieldn2['@type']]) === null || _config$blocks$blocks === void 0 ? void 0 : _config$blocks$blocks['view']) || null;\n        return Block !== null && content[blocksFieldname][block]['@type'] !== 'title' ? __jsx(Block, {\n          key: block,\n          id: block,\n          properties: content,\n          data: content[blocksFieldname][block],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }\n        }) : '';\n      })) : __jsx(Container, {\n        id: \"page-document\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, __jsx(Helmet, {\n        title: content.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }), content.image && __jsx(Image, {\n        className: \"document-image\",\n        src: content.image.scales.thumb.download,\n        floated: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }), content.remoteUrl && __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, \"The link address is:\", __jsx(\"a\", {\n        href: content.remoteUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, content.remoteUrl)), content.text && __jsx(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: content.text.data.replace(/a href=\"([^\"]*\\.[^\"]*)\"/g, \"a href=\\\"\".concat(config.settings.apiPath, \"$1/download/file\\\"\"))\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }));\n      if (!localNavigation.length) {\n        pageTemplate = hasBlocksData(content) ? __jsx(\"div\", {\n          id: \"page-document\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 9\n          }\n        }, __jsx(Helmet, {\n          title: content.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }\n        }), _map(content[blocksLayoutFieldname].items, function (block) {\n          var _config$blocks$blocks2, _content$blocksFieldn3, _content$blocksFieldn4;\n          var Block = ((_config$blocks$blocks2 = config.blocks.blocksConfig[(_content$blocksFieldn3 = content[blocksFieldname]) === null || _content$blocksFieldn3 === void 0 ? void 0 : (_content$blocksFieldn4 = _content$blocksFieldn3[block]) === null || _content$blocksFieldn4 === void 0 ? void 0 : _content$blocksFieldn4['@type']]) === null || _config$blocks$blocks2 === void 0 ? void 0 : _config$blocks$blocks2['view']) || null;\n          return Block !== null && content[blocksFieldname][block]['@type'] !== 'title' ? __jsx(Block, {\n            key: block,\n            id: block,\n            properties: content,\n            data: content[blocksFieldname][block],\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }\n          }) : '';\n        })) : __jsx(Container, {\n          id: \"page-document\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 9\n          }\n        }, __jsx(Helmet, {\n          title: content.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }\n        }), content.description && __jsx(\"p\", {\n          className: \"documentDescription\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }\n        }, content.description), content.image && __jsx(Image, {\n          className: \"document-image\",\n          src: content.image.scales.thumb.download,\n          floated: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }\n        }), content.remoteUrl && __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }\n        }, \"The link address is:\", __jsx(\"a\", {\n          href: content.remoteUrl,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }\n        }, content.remoteUrl)), content.text && __jsx(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: content.text.data.replace(/a href=\"([^\"]*\\.[^\"]*)\"/g, \"a href=\\\"\".concat(config.settings.apiPath, \"$1/download/file\\\"\"))\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }\n        }));\n      }\n      return pageTemplate;\n    }\n  }]);\n  return ListingView;\n}(Component);\n_defineProperty(ListingView, \"propTypes\", {\n  localNavigation: PropTypes.any,\n  getLocalnavigation: PropTypes.func.isRequired,\n  pathname: PropTypes.any,\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    text: PropTypes.shape({\n      data: PropTypes.string\n    }),\n    items: PropTypes.arrayOf(PropTypes.shape({\n      '@id': PropTypes.string,\n      '@type': PropTypes.string,\n      description: PropTypes.string,\n      review_state: PropTypes.string,\n      title: PropTypes.string,\n      url: PropTypes.string\n    }))\n  }).isRequired\n});\nexport default compose(asyncConnect([{\n  key: 'localnavigation',\n  promise: function promise(_ref) {\n    var location = _ref.location,\n      _ref$store = _ref.store,\n      content = _ref$store.content,\n      dispatch = _ref$store.dispatch;\n    return __SERVER__ && dispatch(getLocalnavigation(getBaseUrl(location.pathname)));\n  }\n}]), connect(function (state, props) {\n  return {\n    localNavigation: state.localnavigation.items,\n    pathname: props.location.pathname\n    // localnavigation: state.localnavigation,\n  };\n}, {\n  getLocalnavigation: getLocalnavigation\n}))(ListingView);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","getLocalnavigation","connect","compose","getBaseUrl","Container","Image","config","asyncConnect","getBlocksFieldname","getBlocksLayoutFieldname","hasBlocksData","samePath","Dimmer","Loader","ListingView","content","props","blocksFieldname","blocksLayoutFieldname","localNavigation","items","filter","item","title","currentUrl","shouldRenderRoutes","pathname","pageTemplate","block","Block","blocks","blocksConfig","image","scales","thumb","download","remoteUrl","text","__html","data","replace","settings","apiPath","length","description","any","func","isRequired","shape","string","arrayOf","review_state","url","key","promise","location","store","dispatch","__SERVER__","state","localnavigation"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/customizations/volto/components/theme/View/ListingView.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { getLocalnavigation } from '@eeacms/volto-forests-theme/actions';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getBaseUrl } from '@plone/volto/helpers'; // , flattenToAppURL\n\nimport { Container, Image } from 'semantic-ui-react'; // , Grid\nimport { map } from 'lodash';\n\nimport config from '@plone/volto/registry';\nimport { asyncConnect } from 'redux-connect';\n\nimport {\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  hasBlocksData,\n} from '@plone/volto/helpers';\nimport { samePath } from '../../../../../helpers';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nclass ListingView extends Component {\n  static propTypes = {\n    localNavigation: PropTypes.any,\n    getLocalnavigation: PropTypes.func.isRequired,\n    pathname: PropTypes.any,\n    content: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      text: PropTypes.shape({\n        data: PropTypes.string,\n      }),\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          '@id': PropTypes.string,\n          '@type': PropTypes.string,\n          description: PropTypes.string,\n          review_state: PropTypes.string,\n          title: PropTypes.string,\n          url: PropTypes.string,\n        }),\n      ),\n    }).isRequired,\n  };\n\n  render() {\n    const content = this.props.content;\n    const blocksFieldname = getBlocksFieldname(content);\n    const blocksLayoutFieldname = getBlocksLayoutFieldname(content);\n    const localNavigation =\n      (this.props.localNavigation &&\n        this.props.localNavigation.items &&\n        this.props.localNavigation.items.filter(\n          (item) => item.title !== 'Home',\n        )) ||\n      [];\n\n    const currentUrl = this.props.content?.['@id'];\n    const shouldRenderRoutes =\n      typeof currentUrl !== 'undefined' &&\n      samePath(currentUrl, this.props.pathname)\n        ? true\n        : false;\n    if (!shouldRenderRoutes)\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\" />\n        </Dimmer>\n      );\n\n    let pageTemplate = hasBlocksData(content) ? (\n      <div id=\"page-document\">\n        <Helmet title={content.title} />\n        {map(content[blocksLayoutFieldname].items, (block) => {\n          const Block =\n            config.blocks.blocksConfig[\n              content[blocksFieldname]?.[block]?.['@type']\n            ]?.['view'] || null;\n          return Block !== null &&\n            content[blocksFieldname][block]['@type'] !== 'title' ? (\n            <Block\n              key={block}\n              id={block}\n              properties={content}\n              data={content[blocksFieldname][block]}\n            />\n          ) : (\n            ''\n          );\n        })}\n      </div>\n    ) : (\n      <Container id=\"page-document\">\n        <Helmet title={content.title} />\n        {content.image && (\n          <Image\n            className=\"document-image\"\n            src={content.image.scales.thumb.download}\n            floated=\"right\"\n          />\n        )}\n        {content.remoteUrl && (\n          <span>\n            The link address is:\n            <a href={content.remoteUrl}>{content.remoteUrl}</a>\n          </span>\n        )}\n        {content.text && (\n          <div\n            dangerouslySetInnerHTML={{\n              __html: content.text.data.replace(\n                /a href=\"([^\"]*\\.[^\"]*)\"/g,\n                `a href=\"${config.settings.apiPath}$1/download/file\"`,\n              ),\n            }}\n          />\n        )}\n      </Container>\n    );\n    if (!localNavigation.length) {\n      pageTemplate = hasBlocksData(content) ? (\n        <div id=\"page-document\">\n          <Helmet title={content.title} />\n          {map(content[blocksLayoutFieldname].items, (block) => {\n            const Block =\n              config.blocks.blocksConfig[\n                content[blocksFieldname]?.[block]?.['@type']\n              ]?.['view'] || null;\n            return Block !== null &&\n              content[blocksFieldname][block]['@type'] !== 'title' ? (\n              <Block\n                key={block}\n                id={block}\n                properties={content}\n                data={content[blocksFieldname][block]}\n              />\n            ) : (\n              ''\n            );\n          })}\n        </div>\n      ) : (\n        <Container id=\"page-document\">\n          <Helmet title={content.title} />\n          {content.description && (\n            <p className=\"documentDescription\">{content.description}</p>\n          )}\n          {content.image && (\n            <Image\n              className=\"document-image\"\n              src={content.image.scales.thumb.download}\n              floated=\"right\"\n            />\n          )}\n          {content.remoteUrl && (\n            <span>\n              The link address is:\n              <a href={content.remoteUrl}>{content.remoteUrl}</a>\n            </span>\n          )}\n          {content.text && (\n            <div\n              dangerouslySetInnerHTML={{\n                __html: content.text.data.replace(\n                  /a href=\"([^\"]*\\.[^\"]*)\"/g,\n                  `a href=\"${config.settings.apiPath}$1/download/file\"`,\n                ),\n              }}\n            />\n          )}\n        </Container>\n      );\n    }\n    return pageTemplate;\n  }\n}\n\nexport default compose(\n  asyncConnect([\n    {\n      key: 'localnavigation',\n      promise: ({ location, store: { content, dispatch } }) =>\n        __SERVER__ &&\n        dispatch(getLocalnavigation(getBaseUrl(location.pathname))),\n    },\n  ]),\n  connect(\n    (state, props) => ({\n      localNavigation: state.localnavigation.items,\n      pathname: props.location.pathname,\n      // localnavigation: state.localnavigation,\n    }),\n    { getLocalnavigation },\n  ),\n)(ListingView);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}