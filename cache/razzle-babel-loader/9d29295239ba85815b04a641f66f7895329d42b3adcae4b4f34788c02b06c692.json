{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _keys from \"lodash/keys\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Add/Add.jsx\";\nvar __jsx = React.createElement;\n/**\n * Add container.\n * @module components/manage/Add/Add\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BodyClass, Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Button, Grid, Menu } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport { v4 as uuid } from 'uuid';\nimport qs from 'query-string';\nimport { toast } from 'react-toastify';\nimport { createContent, getSchema, changeLanguage } from '@plone/volto/actions';\nimport { Form, Icon, Toolbar, Sidebar, Toast, TranslationObject } from '@plone/volto/components';\nimport { getBaseUrl, hasBlocksData, flattenToAppURL, getBlocksFieldname, getBlocksLayoutFieldname, getLanguageIndependentFields, langmap, normalizeLanguageName } from '@plone/volto/helpers';\nimport { preloadLazyLibs } from '@plone/volto/helpers/Loadable';\nimport config from '@plone/volto/registry';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nvar messages = defineMessages({\n  add: {\n    \"id\": \"Add {type}\",\n    \"defaultMessage\": \"Add {type}\"\n  },\n  save: {\n    \"id\": \"Save\",\n    \"defaultMessage\": \"Save\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  translateTo: {\n    \"id\": \"Translate to {lang}\",\n    \"defaultMessage\": \"Translate to {lang}\"\n  }\n});\n\n/**\n * Add class.\n * @class Add\n * @extends Component\n */\nvar Add = /*#__PURE__*/function (_Component) {\n  _inherits(Add, _Component);\n  var _super = _createSuper(Add);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  function Add(props) {\n    var _config$blocks;\n    var _this;\n    _classCallCheck(this, Add);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"form\", /*#__PURE__*/React.createRef());\n    _this.onCancel = _this.onCancel.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    if ((_config$blocks = config.blocks) !== null && _config$blocks !== void 0 && _config$blocks.initialBlocks[props.type]) {\n      _this.initialBlocksLayout = config.blocks.initialBlocks[props.type].map(function (item) {\n        return uuid();\n      });\n      _this.initialBlocks = _this.initialBlocksLayout.reduce(function (acc, value, index) {\n        return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, value, {\n          '@type': config.blocks.initialBlocks[props.type][index]\n        }));\n      }, {});\n    }\n    _this.state = {\n      isClient: false,\n      error: null,\n      formSelected: 'addForm'\n    };\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(Add, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getSchema(this.props.type, getBaseUrl(this.props.pathname));\n      this.setState({\n        isClient: true\n      });\n    }\n\n    /**\n     * Component will receive props\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Next properties\n     * @returns {undefined}\n     */\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.createRequest.loading && nextProps.createRequest.loaded && nextProps.content['@type'] === this.props.type) {\n        this.props.history.push(this.props.returnUrl || flattenToAppURL(nextProps.content['@id']));\n      }\n      if (this.props.createRequest.loading && nextProps.createRequest.error) {\n        var _nextProps$createRequ, _nextProps$createRequ2, _nextProps$createRequ3, _DOMParser$parseFromS, _DOMParser$parseFromS2;\n        var message = ((_nextProps$createRequ = nextProps.createRequest.error.response) === null || _nextProps$createRequ === void 0 ? void 0 : (_nextProps$createRequ2 = _nextProps$createRequ.body) === null || _nextProps$createRequ2 === void 0 ? void 0 : _nextProps$createRequ2.message) || ((_nextProps$createRequ3 = nextProps.createRequest.error.response) === null || _nextProps$createRequ3 === void 0 ? void 0 : _nextProps$createRequ3.text);\n        var error = ((_DOMParser$parseFromS = new DOMParser().parseFromString(message, 'text/html')) === null || _DOMParser$parseFromS === void 0 ? void 0 : (_DOMParser$parseFromS2 = _DOMParser$parseFromS.all[0]) === null || _DOMParser$parseFromS2 === void 0 ? void 0 : _DOMParser$parseFromS2.textContent) || message;\n        this.setState({\n          error: error\n        });\n        toast.error(__jsx(Toast, {\n          error: true,\n          title: this.props.intl.formatMessage(messages.error),\n          content: \"\".concat(nextProps.createRequest.error.status, \":  \").concat(error),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 9\n          }\n        }));\n      }\n    }\n\n    /**\n     * Submit handler\n     * @method onSubmit\n     * @param {object} data Form data.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(data) {\n      var _this$props$location, _this$props$location$;\n      this.props.createContent(getBaseUrl(this.props.pathname), _objectSpread(_objectSpread({}, data), {}, {\n        '@static_behaviors': this.props.schema.definitions ? _keys(this.props.schema.definitions) : null,\n        '@type': this.props.type\n      }, config.settings.isMultilingual && ((_this$props$location = this.props.location) === null || _this$props$location === void 0 ? void 0 : (_this$props$location$ = _this$props$location.state) === null || _this$props$location$ === void 0 ? void 0 : _this$props$location$.translationOf) && {\n        translation_of: this.props.location.state.translationOf,\n        language: this.props.location.state.language\n      }));\n    }\n\n    /**\n     * Cancel handler\n     * @method onCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      var _this$props$location2,\n        _this$props$location3,\n        _this2 = this;\n      if ((_this$props$location2 = this.props.location) !== null && _this$props$location2 !== void 0 && (_this$props$location3 = _this$props$location2.state) !== null && _this$props$location3 !== void 0 && _this$props$location3.translationOf) {\n        var _this$props$location4, _this$props$location5;\n        var language = this.props.location.state.languageFrom;\n        var langFileName = normalizeLanguageName(language);\n        import('@root/../locales/' + langFileName + '.json').then(function (locale) {\n          _this2.props.changeLanguage(language, locale[\"default\"]);\n        });\n        this.props.history.push((_this$props$location4 = this.props.location) === null || _this$props$location4 === void 0 ? void 0 : (_this$props$location5 = _this$props$location4.state) === null || _this$props$location5 === void 0 ? void 0 : _this$props$location5.translationOf);\n      } else {\n        this.props.history.push(getBaseUrl(this.props.pathname));\n      }\n    }\n  }, {\n    key: \"render\",\n    value:\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n    function render() {\n      var _this3 = this;\n      if (this.props.schemaRequest.loaded) {\n        var _this$props$location6, _this$props$location7, _langmap$this$props$l, _this$props$location8, _this$props$location9, _this$props$schema$pr, _this$props$schema$pr2, _this$props$schema$pr3, _this$props$schema$pr4, _this$props$schema$pr5, _this$props$schema$pr6, _this$props, _this$props$schema;\n        var visual = hasBlocksData(this.props.schema.properties);\n        var blocksFieldname = getBlocksFieldname(this.props.schema.properties);\n        var blocksLayoutFieldname = getBlocksLayoutFieldname(this.props.schema.properties);\n        var translationObject = (_this$props$location6 = this.props.location) === null || _this$props$location6 === void 0 ? void 0 : (_this$props$location7 = _this$props$location6.state) === null || _this$props$location7 === void 0 ? void 0 : _this$props$location7.translationObject;\n        var translateTo = translationObject ? langmap === null || langmap === void 0 ? void 0 : (_langmap$this$props$l = langmap[(_this$props$location8 = this.props.location) === null || _this$props$location8 === void 0 ? void 0 : (_this$props$location9 = _this$props$location8.state) === null || _this$props$location9 === void 0 ? void 0 : _this$props$location9.language]) === null || _langmap$this$props$l === void 0 ? void 0 : _langmap$this$props$l.nativeName : null;\n\n        // Lookup initialBlocks and initialBlocksLayout within schema\n        var schemaBlocks = (_this$props$schema$pr = this.props.schema.properties[blocksFieldname]) === null || _this$props$schema$pr === void 0 ? void 0 : _this$props$schema$pr[\"default\"];\n        var schemaBlocksLayout = (_this$props$schema$pr2 = this.props.schema.properties[blocksLayoutFieldname]) === null || _this$props$schema$pr2 === void 0 ? void 0 : (_this$props$schema$pr3 = _this$props$schema$pr2[\"default\"]) === null || _this$props$schema$pr3 === void 0 ? void 0 : _this$props$schema$pr3.items;\n        var initialBlocks = this.initialBlocks;\n        var initialBlocksLayout = this.initialBlocksLayout;\n        if (!_isEmpty(schemaBlocksLayout) && !_isEmpty(schemaBlocks)) {\n          initialBlocks = {};\n          initialBlocksLayout = [];\n          schemaBlocksLayout.forEach(function (value) {\n            if (!_isEmpty(schemaBlocks[value])) {\n              var newUid = uuid();\n              initialBlocksLayout.push(newUid);\n              initialBlocks[newUid] = schemaBlocks[value];\n              initialBlocks[newUid].block = newUid;\n\n              // Layout ID - keep a reference to the original block id within layout\n              initialBlocks[newUid]['@layout'] = value;\n            }\n          });\n        }\n        //copy blocks from translationObject\n        if (translationObject && blocksFieldname && blocksLayoutFieldname) {\n          initialBlocks = {};\n          initialBlocksLayout = [];\n          var originalBlocks = JSON.parse(JSON.stringify(translationObject[blocksFieldname]));\n          var originalBlocksLayout = translationObject[blocksLayoutFieldname].items;\n          originalBlocksLayout.forEach(function (value) {\n            if (!_isEmpty(originalBlocks[value])) {\n              var newUid = uuid();\n              initialBlocksLayout.push(newUid);\n              initialBlocks[newUid] = originalBlocks[value];\n              initialBlocks[newUid].block = newUid;\n\n              // Layout ID - keep a reference to the original block id within layout\n              initialBlocks[newUid]['@canonical'] = value;\n            }\n          });\n        }\n        var lifData = function lifData() {\n          var data = {};\n          if (translationObject) {\n            getLanguageIndependentFields(_this3.props.schema).forEach(function (lif) {\n              return data[lif] = translationObject[lif];\n            });\n          }\n          return data;\n        };\n        var pageAdd = __jsx(\"div\", {\n          id: \"page-add\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 9\n          }\n        }, __jsx(Helmet, {\n          title: this.props.intl.formatMessage(messages.add, {\n            type: this.props.type\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 11\n          }\n        }), __jsx(Form, {\n          ref: this.form,\n          key: \"translated-or-new-content-form\",\n          schema: this.props.schema,\n          type: this.props.type,\n          formData: _objectSpread(_objectSpread(_objectSpread({}, blocksFieldname && _defineProperty({}, blocksFieldname, initialBlocks || ((_this$props$schema$pr4 = this.props.schema.properties[blocksFieldname]) === null || _this$props$schema$pr4 === void 0 ? void 0 : _this$props$schema$pr4[\"default\"]))), blocksLayoutFieldname && _defineProperty({}, blocksLayoutFieldname, {\n            items: initialBlocksLayout || ((_this$props$schema$pr5 = this.props.schema.properties[blocksLayoutFieldname]) === null || _this$props$schema$pr5 === void 0 ? void 0 : (_this$props$schema$pr6 = _this$props$schema$pr5[\"default\"]) === null || _this$props$schema$pr6 === void 0 ? void 0 : _this$props$schema$pr6.items)\n          })), lifData()),\n          requestError: this.state.error,\n          onSubmit: this.onSubmit,\n          hideActions: true,\n          pathname: this.props.pathname,\n          visual: visual,\n          title: (_this$props = this.props) !== null && _this$props !== void 0 && (_this$props$schema = _this$props.schema) !== null && _this$props$schema !== void 0 && _this$props$schema.title ? this.props.intl.formatMessage(messages.add, {\n            type: this.props.schema.title\n          }) : null,\n          loading: this.props.createRequest.loading,\n          isFormSelected: this.state.formSelected === 'addForm',\n          onSelectForm: function onSelectForm() {\n            _this3.setState({\n              formSelected: 'addForm'\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 11\n          }\n        }), this.state.isClient && __jsx(Portal, {\n          node: document.getElementById('toolbar'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }\n        }, __jsx(Toolbar, {\n          pathname: this.props.pathname,\n          hideDefaultViewButtons: true,\n          inner: __jsx(React.Fragment, null, __jsx(Button, {\n            id: \"toolbar-save\",\n            className: \"save\",\n            \"aria-label\": this.props.intl.formatMessage(messages.save),\n            onClick: function onClick() {\n              return _this3.form.current.onSubmit();\n            },\n            loading: this.props.createRequest.loading,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 21\n            }\n          }, __jsx(Icon, {\n            name: saveSVG,\n            className: \"circled\",\n            size: \"30px\",\n            title: this.props.intl.formatMessage(messages.save),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 23\n            }\n          })), __jsx(Button, {\n            className: \"cancel\",\n            onClick: function onClick() {\n              return _this3.onCancel();\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 21\n            }\n          }, __jsx(Icon, {\n            name: clearSVG,\n            className: \"circled\",\n            \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n            size: \"30px\",\n            title: this.props.intl.formatMessage(messages.cancel),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 23\n            }\n          }))),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }\n        })), visual && this.state.isClient && __jsx(Portal, {\n          node: document.getElementById('sidebar'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }\n        }, __jsx(Sidebar, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }\n        })));\n        return translationObject ? __jsx(React.Fragment, null, __jsx(BodyClass, {\n          className: \"babel-view\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 11\n          }\n        }), __jsx(Grid, {\n          celled: \"internally\",\n          stackable: true,\n          columns: 2,\n          id: \"page-add-translation\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 11\n          }\n        }, __jsx(Grid.Column, {\n          className: \"source-object\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }\n        }, __jsx(TranslationObject, {\n          translationObject: translationObject,\n          schema: this.props.schema,\n          pathname: this.props.pathname,\n          visual: visual,\n          isFormSelected: this.state.formSelected === 'translationObjectForm',\n          onSelectForm: function onSelectForm() {\n            _this3.setState({\n              formSelected: 'translationObjectForm'\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }\n        })), __jsx(Grid.Column, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }\n        }, __jsx(\"div\", {\n          className: \"new-translation\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }\n        }, __jsx(Menu, {\n          pointing: true,\n          secondary: true,\n          attached: true,\n          tabular: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }\n        }, __jsx(Menu.Item, {\n          name: translateTo.toUpperCase(),\n          active: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 19\n          }\n        }, \"\".concat(this.props.intl.formatMessage(messages.translateTo, {\n          lang: translateTo\n        })))), pageAdd)))) : pageAdd;\n      }\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n  return Add;\n}(Component);\n_defineProperty(Add, \"propTypes\", {\n  createContent: PropTypes.func.isRequired,\n  getSchema: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  schema: PropTypes.objectOf(PropTypes.any),\n  content: PropTypes.shape({\n    // eslint-disable-line react/no-unused-prop-types\n    '@id': PropTypes.string,\n    '@type': PropTypes.string\n  }),\n  returnUrl: PropTypes.string,\n  createRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  schemaRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  type: PropTypes.string,\n  location: PropTypes.objectOf(PropTypes.any)\n});\n_defineProperty(Add, \"defaultProps\", {\n  schema: null,\n  content: null,\n  returnUrl: null,\n  type: 'Default'\n});\nexport default compose(injectIntl, connect(function (state, props) {\n  return {\n    createRequest: state.content.create,\n    schemaRequest: state.schema,\n    content: state.content.data,\n    schema: state.schema.schema,\n    pathname: props.location.pathname,\n    returnUrl: qs.parse(props.location.search).return_url,\n    type: qs.parse(props.location.search).type\n  };\n}, {\n  createContent: createContent,\n  getSchema: getSchema,\n  changeLanguage: changeLanguage\n}), preloadLazyLibs('cms'))(Add);","map":{"version":3,"names":["React","Component","PropTypes","BodyClass","Helmet","connect","compose","defineMessages","injectIntl","Button","Grid","Menu","Portal","v4","uuid","qs","toast","createContent","getSchema","changeLanguage","Form","Icon","Toolbar","Sidebar","Toast","TranslationObject","getBaseUrl","hasBlocksData","flattenToAppURL","getBlocksFieldname","getBlocksLayoutFieldname","getLanguageIndependentFields","langmap","normalizeLanguageName","preloadLazyLibs","config","saveSVG","clearSVG","messages","add","save","cancel","error","translateTo","Add","props","createRef","onCancel","bind","onSubmit","blocks","initialBlocks","type","initialBlocksLayout","map","item","reduce","acc","value","index","state","isClient","formSelected","pathname","setState","nextProps","createRequest","loading","loaded","content","history","push","returnUrl","message","response","body","text","DOMParser","parseFromString","all","textContent","intl","formatMessage","status","data","schema","definitions","settings","isMultilingual","location","translationOf","translation_of","language","languageFrom","langFileName","then","locale","schemaRequest","visual","properties","blocksFieldname","blocksLayoutFieldname","translationObject","nativeName","schemaBlocks","schemaBlocksLayout","items","forEach","newUid","block","originalBlocks","JSON","parse","stringify","originalBlocksLayout","lifData","lif","pageAdd","form","title","document","getElementById","current","toUpperCase","lang","func","isRequired","string","objectOf","any","shape","bool","create","search","return_url"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Add/Add.jsx"],"sourcesContent":["/**\n * Add container.\n * @module components/manage/Add/Add\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BodyClass, Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { keys, isEmpty } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Button, Grid, Menu } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport { v4 as uuid } from 'uuid';\nimport qs from 'query-string';\nimport { toast } from 'react-toastify';\n\nimport { createContent, getSchema, changeLanguage } from '@plone/volto/actions';\nimport {\n  Form,\n  Icon,\n  Toolbar,\n  Sidebar,\n  Toast,\n  TranslationObject,\n} from '@plone/volto/components';\nimport {\n  getBaseUrl,\n  hasBlocksData,\n  flattenToAppURL,\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  getLanguageIndependentFields,\n  langmap,\n  normalizeLanguageName,\n} from '@plone/volto/helpers';\n\nimport { preloadLazyLibs } from '@plone/volto/helpers/Loadable';\n\nimport config from '@plone/volto/registry';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  add: {\n    id: 'Add {type}',\n    defaultMessage: 'Add {type}',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  translateTo: {\n    id: 'Translate to {lang}',\n    defaultMessage: 'Translate to {lang}',\n  },\n});\n\n/**\n * Add class.\n * @class Add\n * @extends Component\n */\nclass Add extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    createContent: PropTypes.func.isRequired,\n    getSchema: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    schema: PropTypes.objectOf(PropTypes.any),\n    content: PropTypes.shape({\n      // eslint-disable-line react/no-unused-prop-types\n      '@id': PropTypes.string,\n      '@type': PropTypes.string,\n    }),\n    returnUrl: PropTypes.string,\n    createRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    schemaRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    type: PropTypes.string,\n    location: PropTypes.objectOf(PropTypes.any),\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    schema: null,\n    content: null,\n    returnUrl: null,\n    type: 'Default',\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    if (config.blocks?.initialBlocks[props.type]) {\n      this.initialBlocksLayout = config.blocks.initialBlocks[\n        props.type\n      ].map((item) => uuid());\n      this.initialBlocks = this.initialBlocksLayout.reduce(\n        (acc, value, index) => ({\n          ...acc,\n          [value]: { '@type': config.blocks.initialBlocks[props.type][index] },\n        }),\n        {},\n      );\n    }\n    this.state = {\n      isClient: false,\n      error: null,\n      formSelected: 'addForm',\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSchema(this.props.type, getBaseUrl(this.props.pathname));\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.createRequest.loading &&\n      nextProps.createRequest.loaded &&\n      nextProps.content['@type'] === this.props.type\n    ) {\n      this.props.history.push(\n        this.props.returnUrl || flattenToAppURL(nextProps.content['@id']),\n      );\n    }\n\n    if (this.props.createRequest.loading && nextProps.createRequest.error) {\n      const message =\n        nextProps.createRequest.error.response?.body?.message ||\n        nextProps.createRequest.error.response?.text;\n\n      const error =\n        new DOMParser().parseFromString(message, 'text/html')?.all[0]\n          ?.textContent || message;\n\n      this.setState({ error: error });\n\n      toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.error)}\n          content={`${nextProps.createRequest.error.status}:  ${error}`}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.createContent(getBaseUrl(this.props.pathname), {\n      ...data,\n      '@static_behaviors': this.props.schema.definitions\n        ? keys(this.props.schema.definitions)\n        : null,\n      '@type': this.props.type,\n      ...(config.settings.isMultilingual &&\n        this.props.location?.state?.translationOf && {\n          translation_of: this.props.location.state.translationOf,\n          language: this.props.location.state.language,\n        }),\n    });\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    if (this.props.location?.state?.translationOf) {\n      const language = this.props.location.state.languageFrom;\n      const langFileName = normalizeLanguageName(language);\n      import('@root/../locales/' + langFileName + '.json').then((locale) => {\n        this.props.changeLanguage(language, locale.default);\n      });\n      this.props.history.push(this.props.location?.state?.translationOf);\n    } else {\n      this.props.history.push(getBaseUrl(this.props.pathname));\n    }\n  }\n\n  form = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.props.schemaRequest.loaded) {\n      const visual = hasBlocksData(this.props.schema.properties);\n      const blocksFieldname = getBlocksFieldname(this.props.schema.properties);\n      const blocksLayoutFieldname = getBlocksLayoutFieldname(\n        this.props.schema.properties,\n      );\n      const translationObject = this.props.location?.state?.translationObject;\n\n      const translateTo = translationObject\n        ? langmap?.[this.props.location?.state?.language]?.nativeName\n        : null;\n\n      // Lookup initialBlocks and initialBlocksLayout within schema\n      const schemaBlocks = this.props.schema.properties[blocksFieldname]\n        ?.default;\n      const schemaBlocksLayout = this.props.schema.properties[\n        blocksLayoutFieldname\n      ]?.default?.items;\n      let initialBlocks = this.initialBlocks;\n      let initialBlocksLayout = this.initialBlocksLayout;\n\n      if (!isEmpty(schemaBlocksLayout) && !isEmpty(schemaBlocks)) {\n        initialBlocks = {};\n        initialBlocksLayout = [];\n        schemaBlocksLayout.forEach((value) => {\n          if (!isEmpty(schemaBlocks[value])) {\n            let newUid = uuid();\n            initialBlocksLayout.push(newUid);\n            initialBlocks[newUid] = schemaBlocks[value];\n            initialBlocks[newUid].block = newUid;\n\n            // Layout ID - keep a reference to the original block id within layout\n            initialBlocks[newUid]['@layout'] = value;\n          }\n        });\n      }\n      //copy blocks from translationObject\n      if (translationObject && blocksFieldname && blocksLayoutFieldname) {\n        initialBlocks = {};\n        initialBlocksLayout = [];\n        const originalBlocks = JSON.parse(\n          JSON.stringify(translationObject[blocksFieldname]),\n        );\n        const originalBlocksLayout =\n          translationObject[blocksLayoutFieldname].items;\n\n        originalBlocksLayout.forEach((value) => {\n          if (!isEmpty(originalBlocks[value])) {\n            let newUid = uuid();\n            initialBlocksLayout.push(newUid);\n            initialBlocks[newUid] = originalBlocks[value];\n            initialBlocks[newUid].block = newUid;\n\n            // Layout ID - keep a reference to the original block id within layout\n            initialBlocks[newUid]['@canonical'] = value;\n          }\n        });\n      }\n\n      const lifData = () => {\n        const data = {};\n        if (translationObject) {\n          getLanguageIndependentFields(this.props.schema).forEach(\n            (lif) => (data[lif] = translationObject[lif]),\n          );\n        }\n        return data;\n      };\n\n      const pageAdd = (\n        <div id=\"page-add\">\n          <Helmet\n            title={this.props.intl.formatMessage(messages.add, {\n              type: this.props.type,\n            })}\n          />\n          <Form\n            ref={this.form}\n            key=\"translated-or-new-content-form\"\n            schema={this.props.schema}\n            type={this.props.type}\n            formData={{\n              ...(blocksFieldname && {\n                [blocksFieldname]:\n                  initialBlocks ||\n                  this.props.schema.properties[blocksFieldname]?.default,\n              }),\n              ...(blocksLayoutFieldname && {\n                [blocksLayoutFieldname]: {\n                  items:\n                    initialBlocksLayout ||\n                    this.props.schema.properties[blocksLayoutFieldname]?.default\n                      ?.items,\n                },\n              }),\n              // Copy the Language Independent Fields values from the to-be translated content\n              // into the default values of the translated content Add form.\n              ...lifData(),\n            }}\n            requestError={this.state.error}\n            onSubmit={this.onSubmit}\n            hideActions\n            pathname={this.props.pathname}\n            visual={visual}\n            title={\n              this.props?.schema?.title\n                ? this.props.intl.formatMessage(messages.add, {\n                    type: this.props.schema.title,\n                  })\n                : null\n            }\n            loading={this.props.createRequest.loading}\n            isFormSelected={this.state.formSelected === 'addForm'}\n            onSelectForm={() => {\n              this.setState({ formSelected: 'addForm' });\n            }}\n          />\n          {this.state.isClient && (\n            <Portal node={document.getElementById('toolbar')}>\n              <Toolbar\n                pathname={this.props.pathname}\n                hideDefaultViewButtons\n                inner={\n                  <>\n                    <Button\n                      id=\"toolbar-save\"\n                      className=\"save\"\n                      aria-label={this.props.intl.formatMessage(messages.save)}\n                      onClick={() => this.form.current.onSubmit()}\n                      loading={this.props.createRequest.loading}\n                    >\n                      <Icon\n                        name={saveSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.save)}\n                      />\n                    </Button>\n                    <Button className=\"cancel\" onClick={() => this.onCancel()}>\n                      <Icon\n                        name={clearSVG}\n                        className=\"circled\"\n                        aria-label={this.props.intl.formatMessage(\n                          messages.cancel,\n                        )}\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.cancel)}\n                      />\n                    </Button>\n                  </>\n                }\n              />\n            </Portal>\n          )}\n          {visual && this.state.isClient && (\n            <Portal node={document.getElementById('sidebar')}>\n              <Sidebar />\n            </Portal>\n          )}\n        </div>\n      );\n\n      return translationObject ? (\n        <>\n          <BodyClass className=\"babel-view\" />\n          <Grid\n            celled=\"internally\"\n            stackable\n            columns={2}\n            id=\"page-add-translation\"\n          >\n            <Grid.Column className=\"source-object\">\n              <TranslationObject\n                translationObject={translationObject}\n                schema={this.props.schema}\n                pathname={this.props.pathname}\n                visual={visual}\n                isFormSelected={\n                  this.state.formSelected === 'translationObjectForm'\n                }\n                onSelectForm={() => {\n                  this.setState({\n                    formSelected: 'translationObjectForm',\n                  });\n                }}\n              />\n            </Grid.Column>\n            <Grid.Column>\n              <div className=\"new-translation\">\n                <Menu pointing secondary attached tabular>\n                  <Menu.Item name={translateTo.toUpperCase()} active={true}>\n                    {`${this.props.intl.formatMessage(messages.translateTo, {\n                      lang: translateTo,\n                    })}`}\n                  </Menu.Item>\n                </Menu>\n                {pageAdd}\n              </div>\n            </Grid.Column>\n          </Grid>\n        </>\n      ) : (\n        pageAdd\n      );\n    }\n    return <div />;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      createRequest: state.content.create,\n      schemaRequest: state.schema,\n      content: state.content.data,\n      schema: state.schema.schema,\n      pathname: props.location.pathname,\n      returnUrl: qs.parse(props.location.search).return_url,\n      type: qs.parse(props.location.search).type,\n    }),\n    { createContent, getSchema, changeLanguage },\n  ),\n  preloadLazyLibs('cms'),\n)(Add);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Add {type}","defaultMessage":"Add {type}"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Error","defaultMessage":"Error"},{"id":"Translate to {lang}","defaultMessage":"Translate to {lang}"}]}},"sourceType":"module","externalDependencies":[]}