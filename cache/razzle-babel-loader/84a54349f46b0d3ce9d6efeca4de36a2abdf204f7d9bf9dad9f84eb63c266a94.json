{"ast":null,"code":"import config from '@plone/volto/registry';\nconst colorSchema = props => {\n  return {\n    title: 'Color',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['label', 'color']\n    }],\n    properties: {\n      label: {\n        title: 'Label',\n        type: 'string'\n      },\n      color: {\n        title: 'Color',\n        widget: 'simple_color',\n        available_colors: config.blocks.blocksConfig.simpleDataConnectedTable.available_colors\n      }\n    },\n    required: []\n  };\n};\nconst coloredTableSchema = props => {\n  return {\n    title: 'Colored datatable',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['th_color', 'td_color']\n    }],\n    properties: {\n      th_color: {\n        title: 'Table header color',\n        widget: 'simple_color',\n        available_colors: config.blocks.blocksConfig.simpleDataConnectedTable.available_colors\n      },\n      td_color: {\n        title: 'Table rows color',\n        widget: 'object_list',\n        schema: colorSchema(props)\n      }\n    },\n    required: []\n  };\n};\nexport default coloredTableSchema;","map":{"version":3,"names":["config","colorSchema","props","title","fieldsets","id","fields","properties","label","type","color","widget","available_colors","blocks","blocksConfig","simpleDataConnectedTable","required","coloredTableSchema","th_color","td_color","schema"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Blocks/SimpleDataTable/templates/colored/schema.js"],"sourcesContent":["import config from '@plone/volto/registry';\n\nconst colorSchema = (props) => {\n  return {\n    title: 'Color',\n\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: ['label', 'color'],\n      },\n    ],\n\n    properties: {\n      label: {\n        title: 'Label',\n        type: 'string',\n      },\n      color: {\n        title: 'Color',\n        widget: 'simple_color',\n        available_colors:\n          config.blocks.blocksConfig.simpleDataConnectedTable.available_colors,\n      },\n    },\n\n    required: [],\n  };\n};\n\nconst coloredTableSchema = (props) => {\n  return {\n    title: 'Colored datatable',\n\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: ['th_color', 'td_color'],\n      },\n    ],\n\n    properties: {\n      th_color: {\n        title: 'Table header color',\n        widget: 'simple_color',\n        available_colors:\n          config.blocks.blocksConfig.simpleDataConnectedTable.available_colors,\n      },\n      td_color: {\n        title: 'Table rows color',\n        widget: 'object_list',\n        schema: colorSchema(props),\n      },\n    },\n\n    required: [],\n  };\n};\n\nexport default coloredTableSchema;\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,uBAAuB;AAE1C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B,OAAO;IACLC,KAAK,EAAE,OAAO;IAEdC,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbF,KAAK,EAAE,SAAS;MAChBG,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO;IAC3B,CAAC,CACF;IAEDC,UAAU,EAAE;MACVC,KAAK,EAAE;QACLL,KAAK,EAAE,OAAO;QACdM,IAAI,EAAE;MACR,CAAC;MACDC,KAAK,EAAE;QACLP,KAAK,EAAE,OAAO;QACdQ,MAAM,EAAE,cAAc;QACtBC,gBAAgB,EACdZ,MAAM,CAACa,MAAM,CAACC,YAAY,CAACC,wBAAwB,CAACH;MACxD;IACF,CAAC;IAEDI,QAAQ,EAAE;EACZ,CAAC;AACH,CAAC;AAED,MAAMC,kBAAkB,GAAIf,KAAK,IAAK;EACpC,OAAO;IACLC,KAAK,EAAE,mBAAmB;IAE1BC,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbF,KAAK,EAAE,SAAS;MAChBG,MAAM,EAAE,CAAC,UAAU,EAAE,UAAU;IACjC,CAAC,CACF;IAEDC,UAAU,EAAE;MACVW,QAAQ,EAAE;QACRf,KAAK,EAAE,oBAAoB;QAC3BQ,MAAM,EAAE,cAAc;QACtBC,gBAAgB,EACdZ,MAAM,CAACa,MAAM,CAACC,YAAY,CAACC,wBAAwB,CAACH;MACxD,CAAC;MACDO,QAAQ,EAAE;QACRhB,KAAK,EAAE,kBAAkB;QACzBQ,MAAM,EAAE,aAAa;QACrBS,MAAM,EAAEnB,WAAW,CAACC,KAAK;MAC3B;IACF,CAAC;IAEDc,QAAQ,EAAE;EACZ,CAAC;AACH,CAAC;AAED,eAAeC,kBAAkB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}