{"ast":null,"code":"import _map from \"lodash/map\";\nimport _isEqual from \"lodash/isEqual\";\nimport _find from \"lodash/find\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Sharing/Sharing.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Sharing container.\n * @module components/manage/Sharing/Sharing\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Plug, Pluggable } from '@plone/volto/components/manage/Pluggable';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { Button, Checkbox, Container, Form, Icon as IconOld, Input, Segment, Table } from 'semantic-ui-react';\nimport jwtDecode from 'jwt-decode';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { updateSharing, getSharing } from '@plone/volto/actions';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { Icon, Toolbar, Toast } from '@plone/volto/components';\nimport { toast } from 'react-toastify';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  searchForUserOrGroup: {\n    \"id\": \"Search for user or group\",\n    \"defaultMessage\": \"Search for user or group\"\n  },\n  inherit: {\n    \"id\": \"Inherit permissions from higher levels\",\n    \"defaultMessage\": \"Inherit permissions from higher levels\"\n  },\n  save: {\n    \"id\": \"Save\",\n    \"defaultMessage\": \"Save\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  sharing: {\n    \"id\": \"Sharing\",\n    \"defaultMessage\": \"Sharing\"\n  },\n  user: {\n    \"id\": \"User\",\n    \"defaultMessage\": \"User\"\n  },\n  group: {\n    \"id\": \"Group\",\n    \"defaultMessage\": \"Group\"\n  },\n  globalRole: {\n    \"id\": \"Global role\",\n    \"defaultMessage\": \"Global role\"\n  },\n  inheritedValue: {\n    \"id\": \"Inherited value\",\n    \"defaultMessage\": \"Inherited value\"\n  },\n  permissionsUpdated: {\n    \"id\": \"Permissions updated\",\n    \"defaultMessage\": \"Permissions updated\"\n  },\n  permissionsUpdatedSuccessfully: {\n    \"id\": \"Permissions have been updated successfully\",\n    \"defaultMessage\": \"Permissions have been updated successfully\"\n  }\n});\n\n/**\n * SharingComponent class.\n * @class SharingComponent\n * @extends Component\n */\nclass SharingComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onToggleInherit = this.onToggleInherit.bind(this);\n    this.state = {\n      search: '',\n      inherit: props.inherit,\n      entries: props.entries,\n      isClient: false\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n    this.setState({\n      isClient: true\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.permissionsUpdated),\n        content: this.props.intl.formatMessage(messages.permissionsUpdatedSuccessfully),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }));\n    }\n    this.setState({\n      inherit: this.props.inherit === null ? nextProps.inherit : this.state.inherit,\n      entries: _map(nextProps.entries, entry => {\n        const values = _find(this.state.entries, {\n          id: entry.id\n        });\n        return _objectSpread(_objectSpread({}, entry), {}, {\n          roles: values ? values.roles : entry.roles\n        });\n      })\n    });\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSubmit(event) {\n    const data = {\n      entries: []\n    };\n    event.preventDefault();\n    if (this.props.inherit !== this.state.inherit) {\n      data.inherit = this.state.inherit;\n    }\n    for (let i = 0; i < this.props.entries.length; i += 1) {\n      if (!_isEqual(this.props.entries[i].roles, this.state.entries[i].roles)) {\n        data.entries.push({\n          id: this.state.entries[i].id,\n          type: this.state.entries[i].type,\n          roles: this.state.entries[i].roles\n        });\n      }\n    }\n    this.props.updateSharing(getBaseUrl(this.props.pathname), data);\n  }\n\n  /**\n   * Search handler\n   * @method onSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSearch(event) {\n    event.preventDefault();\n    this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n  }\n\n  /**\n   * On change search handler\n   * @method onChangeSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onChangeSearch(event) {\n    this.setState({\n      search: event.target.value\n    });\n  }\n\n  /**\n   * On toggle inherit handler\n   * @method onToggleInherit\n   * @returns {undefined}\n   */\n  onToggleInherit() {\n    this.setState({\n      inherit: !this.state.inherit\n    });\n  }\n\n  /**\n   * On change handler\n   * @method onChange\n   * @param {object} event Event object\n   * @param {string} value Entry value\n   * @returns {undefined}\n   */\n  onChange(event, {\n    value\n  }) {\n    const [principal, role] = value.split(':');\n    this.setState({\n      entries: _map(this.state.entries, entry => _objectSpread(_objectSpread({}, entry), {}, {\n        roles: entry.id === principal ? _objectSpread(_objectSpread({}, entry.roles), {}, {\n          [role]: !entry.roles[role]\n        }) : entry.roles\n      }))\n    });\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$available, _this$state$entries;\n    return __jsx(Container, {\n      id: \"page-sharing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.sharing),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }\n    }), __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }\n    }, __jsx(Pluggable, {\n      name: \"sharing-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }\n    }), __jsx(Plug, {\n      pluggable: \"sharing-component\",\n      id: \"sharing-component-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Sharing for {title}\",\n      defaultMessage: \"Sharing for {title}\",\n      values: {\n        title: __jsx(\"q\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 34\n          }\n        }, this.props.title)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 15\n      }\n    }))), __jsx(Plug, {\n      pluggable: \"sharing-component\",\n      id: \"sharing-component-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }\n    }, __jsx(Segment, {\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"You can control who can view and edit your item using the list below.\",\n      defaultMessage: \"You can control who can view and edit your item using the list below.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 15\n      }\n    }))), __jsx(Plug, {\n      pluggable: \"sharing-component\",\n      id: \"sharing-component-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }\n    }, __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }\n    }, __jsx(Form, {\n      onSubmit: this.onSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }\n    }, __jsx(Input, {\n      name: \"SearchableText\",\n      action: {\n        icon: 'search'\n      },\n      placeholder: this.props.intl.formatMessage(messages.searchForUserOrGroup),\n      onChange: this.onChangeSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 19\n      }\n    }))))), __jsx(Plug, {\n      pluggable: \"sharing-component\",\n      id: \"sharing-component-form\",\n      dependencies: [this.state.entries, this.props.available_roles],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 13\n      }\n    }, __jsx(Table, {\n      celled: true,\n      padded: true,\n      striped: true,\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 15\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 19\n      }\n    }, __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Name\",\n      defaultMessage: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 23\n      }\n    })), (_this$props$available = this.props.available_roles) === null || _this$props$available === void 0 ? void 0 : _this$props$available.map(role => __jsx(Table.HeaderCell, {\n      key: role.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 23\n      }\n    }, role.title)))), __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }, (_this$state$entries = this.state.entries) === null || _this$state$entries === void 0 ? void 0 : _this$state$entries.map(entry => {\n      var _this$props$available2;\n      return __jsx(Table.Row, {\n        key: entry.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }\n      }, __jsx(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 23\n        }\n      }, __jsx(IconOld, {\n        name: entry.type === 'user' ? 'user' : 'users',\n        title: entry.type === 'user' ? this.props.intl.formatMessage(messages.user) : this.props.intl.formatMessage(messages.group),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }\n      }), ' ', entry.title, entry.login && ` (${entry.login})`), (_this$props$available2 = this.props.available_roles) === null || _this$props$available2 === void 0 ? void 0 : _this$props$available2.map(role => __jsx(Table.Cell, {\n        key: role.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 25\n        }\n      }, entry.roles[role.id] === 'global' && __jsx(IconOld, {\n        name: \"check circle outline\",\n        title: this.props.intl.formatMessage(messages.globalRole),\n        color: \"blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 29\n        }\n      }), entry.roles[role.id] === 'acquired' && __jsx(IconOld, {\n        name: \"check circle outline\",\n        color: \"green\",\n        title: this.props.intl.formatMessage(messages.inheritedValue),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 29\n        }\n      }), typeof entry.roles[role.id] === 'boolean' && __jsx(Checkbox, {\n        onChange: this.onChange,\n        value: `${entry.id}:${role.id}`,\n        checked: entry.roles[role.id],\n        disabled: entry.login === this.props.login,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 29\n        }\n      }))));\n    }))), __jsx(Segment, {\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }\n    }, __jsx(Checkbox, {\n      checked: this.state.inherit,\n      onChange: this.onToggleInherit,\n      label: this.props.intl.formatMessage(messages.inherit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 19\n      }\n    })), __jsx(\"p\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.\",\n      defaultMessage: \"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.\",\n      values: {\n        inherited: __jsx(IconOld, {\n          name: \"check circle outline\",\n          color: \"green\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 25\n          }\n        }),\n        global: __jsx(IconOld, {\n          name: \"check circle outline\",\n          color: \"blue\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 25\n          }\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 19\n      }\n    }))), __jsx(Segment, {\n      className: \"actions\",\n      attached: true,\n      clearing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      basic: true,\n      primary: true,\n      floated: \"right\",\n      type: \"submit\",\n      \"aria-label\": this.props.intl.formatMessage(messages.save),\n      title: this.props.intl.formatMessage(messages.save),\n      loading: this.props.updateRequest.loading,\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      className: \"circled\",\n      name: aheadSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 19\n      }\n    })), __jsx(Button, {\n      basic: true,\n      secondary: true,\n      \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n      title: this.props.intl.formatMessage(messages.cancel),\n      floated: \"right\",\n      onClick: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      className: \"circled\",\n      name: clearSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 19\n      }\n    })))))), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(Link, {\n        to: `${getBaseUrl(this.props.pathname)}`,\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n_defineProperty(SharingComponent, \"propTypes\", {\n  updateSharing: PropTypes.func.isRequired,\n  getSharing: PropTypes.func.isRequired,\n  updateRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  pathname: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    login: PropTypes.string,\n    roles: PropTypes.object,\n    title: PropTypes.string,\n    type: PropTypes.string\n  })).isRequired,\n  available_roles: PropTypes.arrayOf(PropTypes.object).isRequired,\n  inherit: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  login: PropTypes.string\n});\n_defineProperty(SharingComponent, \"defaultProps\", {\n  inherit: null,\n  login: ''\n});\nexport default compose(withRouter, injectIntl, connect((state, props) => ({\n  entries: state.sharing.data.entries,\n  inherit: state.sharing.data.inherit,\n  available_roles: state.sharing.data.available_roles,\n  updateRequest: state.sharing.update,\n  pathname: props.location.pathname,\n  title: state.content.data.title,\n  login: state.userSession.token ? jwtDecode(state.userSession.token).sub : ''\n}), {\n  updateSharing,\n  getSharing\n}))(SharingComponent);","map":{"version":3,"names":["React","Component","PropTypes","Plug","Pluggable","Helmet","connect","compose","Link","withRouter","Portal","Button","Checkbox","Container","Form","Icon","IconOld","Input","Segment","Table","jwtDecode","FormattedMessage","defineMessages","injectIntl","updateSharing","getSharing","getBaseUrl","Toolbar","Toast","toast","aheadSVG","clearSVG","backSVG","messages","searchForUserOrGroup","inherit","save","cancel","back","sharing","user","group","globalRole","inheritedValue","permissionsUpdated","permissionsUpdatedSuccessfully","SharingComponent","constructor","props","onCancel","bind","onChange","onChangeSearch","onSearch","onSubmit","onToggleInherit","state","search","entries","isClient","componentDidMount","pathname","setState","UNSAFE_componentWillReceiveProps","nextProps","updateRequest","loading","loaded","success","intl","formatMessage","entry","values","id","roles","event","data","preventDefault","i","length","push","type","target","value","principal","role","split","history","render","title","icon","available_roles","map","login","inherited","global","document","getElementById","func","isRequired","shape","bool","string","arrayOf","object","update","location","content","userSession","token","sub"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Sharing/Sharing.jsx"],"sourcesContent":["/**\n * Sharing container.\n * @module components/manage/Sharing/Sharing\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Plug, Pluggable } from '@plone/volto/components/manage/Pluggable';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { find, isEqual, map } from 'lodash';\nimport { Portal } from 'react-portal';\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Form,\n  Icon as IconOld,\n  Input,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\nimport jwtDecode from 'jwt-decode';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { updateSharing, getSharing } from '@plone/volto/actions';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { Icon, Toolbar, Toast } from '@plone/volto/components';\nimport { toast } from 'react-toastify';\n\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  searchForUserOrGroup: {\n    id: 'Search for user or group',\n    defaultMessage: 'Search for user or group',\n  },\n  inherit: {\n    id: 'Inherit permissions from higher levels',\n    defaultMessage: 'Inherit permissions from higher levels',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  sharing: {\n    id: 'Sharing',\n    defaultMessage: 'Sharing',\n  },\n  user: {\n    id: 'User',\n    defaultMessage: 'User',\n  },\n  group: {\n    id: 'Group',\n    defaultMessage: 'Group',\n  },\n  globalRole: {\n    id: 'Global role',\n    defaultMessage: 'Global role',\n  },\n  inheritedValue: {\n    id: 'Inherited value',\n    defaultMessage: 'Inherited value',\n  },\n  permissionsUpdated: {\n    id: 'Permissions updated',\n    defaultMessage: 'Permissions updated',\n  },\n  permissionsUpdatedSuccessfully: {\n    id: 'Permissions have been updated successfully',\n    defaultMessage: 'Permissions have been updated successfully',\n  },\n});\n\n/**\n * SharingComponent class.\n * @class SharingComponent\n * @extends Component\n */\nclass SharingComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateSharing: PropTypes.func.isRequired,\n    getSharing: PropTypes.func.isRequired,\n    updateRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    entries: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        login: PropTypes.string,\n        roles: PropTypes.object,\n        title: PropTypes.string,\n        type: PropTypes.string,\n      }),\n    ).isRequired,\n    available_roles: PropTypes.arrayOf(PropTypes.object).isRequired,\n    inherit: PropTypes.bool,\n    title: PropTypes.string.isRequired,\n    login: PropTypes.string,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    inherit: null,\n    login: '',\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onToggleInherit = this.onToggleInherit.bind(this);\n    this.state = {\n      search: '',\n      inherit: props.inherit,\n      entries: props.entries,\n      isClient: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.permissionsUpdated)}\n          content={this.props.intl.formatMessage(\n            messages.permissionsUpdatedSuccessfully,\n          )}\n        />,\n      );\n    }\n    this.setState({\n      inherit:\n        this.props.inherit === null ? nextProps.inherit : this.state.inherit,\n      entries: map(nextProps.entries, (entry) => {\n        const values = find(this.state.entries, { id: entry.id });\n        return {\n          ...entry,\n          roles: values ? values.roles : entry.roles,\n        };\n      }),\n    });\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSubmit(event) {\n    const data = { entries: [] };\n    event.preventDefault();\n    if (this.props.inherit !== this.state.inherit) {\n      data.inherit = this.state.inherit;\n    }\n    for (let i = 0; i < this.props.entries.length; i += 1) {\n      if (!isEqual(this.props.entries[i].roles, this.state.entries[i].roles)) {\n        data.entries.push({\n          id: this.state.entries[i].id,\n          type: this.state.entries[i].type,\n          roles: this.state.entries[i].roles,\n        });\n      }\n    }\n    this.props.updateSharing(getBaseUrl(this.props.pathname), data);\n  }\n\n  /**\n   * Search handler\n   * @method onSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSearch(event) {\n    event.preventDefault();\n    this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n  }\n\n  /**\n   * On change search handler\n   * @method onChangeSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onChangeSearch(event) {\n    this.setState({\n      search: event.target.value,\n    });\n  }\n\n  /**\n   * On toggle inherit handler\n   * @method onToggleInherit\n   * @returns {undefined}\n   */\n  onToggleInherit() {\n    this.setState({\n      inherit: !this.state.inherit,\n    });\n  }\n\n  /**\n   * On change handler\n   * @method onChange\n   * @param {object} event Event object\n   * @param {string} value Entry value\n   * @returns {undefined}\n   */\n  onChange(event, { value }) {\n    const [principal, role] = value.split(':');\n    this.setState({\n      entries: map(this.state.entries, (entry) => ({\n        ...entry,\n        roles:\n          entry.id === principal\n            ? {\n                ...entry.roles,\n                [role]: !entry.roles[role],\n              }\n            : entry.roles,\n      })),\n    });\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Container id=\"page-sharing\">\n        <Helmet title={this.props.intl.formatMessage(messages.sharing)} />\n        <Segment.Group raised>\n          <Pluggable name=\"sharing-component\" />\n          <Plug pluggable=\"sharing-component\" id=\"sharing-component-title\">\n            <Segment className=\"primary\">\n              <FormattedMessage\n                id=\"Sharing for {title}\"\n                defaultMessage=\"Sharing for {title}\"\n                values={{ title: <q>{this.props.title}</q> }}\n              />\n            </Segment>\n          </Plug>\n          <Plug\n            pluggable=\"sharing-component\"\n            id=\"sharing-component-description\"\n          >\n            <Segment secondary>\n              <FormattedMessage\n                id=\"You can control who can view and edit your item using the list below.\"\n                defaultMessage=\"You can control who can view and edit your item using the list below.\"\n              />\n            </Segment>\n          </Plug>\n          <Plug pluggable=\"sharing-component\" id=\"sharing-component-search\">\n            <Segment>\n              <Form onSubmit={this.onSearch}>\n                <Form.Field>\n                  <Input\n                    name=\"SearchableText\"\n                    action={{ icon: 'search' }}\n                    placeholder={this.props.intl.formatMessage(\n                      messages.searchForUserOrGroup,\n                    )}\n                    onChange={this.onChangeSearch}\n                  />\n                </Form.Field>\n              </Form>\n            </Segment>\n          </Plug>\n          <Plug\n            pluggable=\"sharing-component\"\n            id=\"sharing-component-form\"\n            dependencies={[this.state.entries, this.props.available_roles]}\n          >\n            <Form onSubmit={this.onSubmit}>\n              <Table celled padded striped attached>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Name\" defaultMessage=\"Name\" />\n                    </Table.HeaderCell>\n                    {this.props.available_roles?.map((role) => (\n                      <Table.HeaderCell key={role.id}>\n                        {role.title}\n                      </Table.HeaderCell>\n                    ))}\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {this.state.entries?.map((entry) => (\n                    <Table.Row key={entry.id}>\n                      <Table.Cell>\n                        <IconOld\n                          name={entry.type === 'user' ? 'user' : 'users'}\n                          title={\n                            entry.type === 'user'\n                              ? this.props.intl.formatMessage(messages.user)\n                              : this.props.intl.formatMessage(messages.group)\n                          }\n                        />{' '}\n                        {entry.title}\n                        {entry.login && ` (${entry.login})`}\n                      </Table.Cell>\n                      {this.props.available_roles?.map((role) => (\n                        <Table.Cell key={role.id}>\n                          {entry.roles[role.id] === 'global' && (\n                            <IconOld\n                              name=\"check circle outline\"\n                              title={this.props.intl.formatMessage(\n                                messages.globalRole,\n                              )}\n                              color=\"blue\"\n                            />\n                          )}\n                          {entry.roles[role.id] === 'acquired' && (\n                            <IconOld\n                              name=\"check circle outline\"\n                              color=\"green\"\n                              title={this.props.intl.formatMessage(\n                                messages.inheritedValue,\n                              )}\n                            />\n                          )}\n                          {typeof entry.roles[role.id] === 'boolean' && (\n                            <Checkbox\n                              onChange={this.onChange}\n                              value={`${entry.id}:${role.id}`}\n                              checked={entry.roles[role.id]}\n                              disabled={entry.login === this.props.login}\n                            />\n                          )}\n                        </Table.Cell>\n                      ))}\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n              <Segment attached>\n                <Form.Field>\n                  <Checkbox\n                    checked={this.state.inherit}\n                    onChange={this.onToggleInherit}\n                    label={this.props.intl.formatMessage(messages.inherit)}\n                  />\n                </Form.Field>\n                <p className=\"help\">\n                  <FormattedMessage\n                    id=\"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.\"\n                    defaultMessage=\"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.\"\n                    values={{\n                      inherited: (\n                        <IconOld name=\"check circle outline\" color=\"green\" />\n                      ),\n                      global: (\n                        <IconOld name=\"check circle outline\" color=\"blue\" />\n                      ),\n                    }}\n                  />\n                </p>\n              </Segment>\n              <Segment className=\"actions\" attached clearing>\n                <Button\n                  basic\n                  primary\n                  floated=\"right\"\n                  type=\"submit\"\n                  aria-label={this.props.intl.formatMessage(messages.save)}\n                  title={this.props.intl.formatMessage(messages.save)}\n                  loading={this.props.updateRequest.loading}\n                  onClick={this.onSubmit}\n                >\n                  <Icon className=\"circled\" name={aheadSVG} size=\"30px\" />\n                </Button>\n                <Button\n                  basic\n                  secondary\n                  aria-label={this.props.intl.formatMessage(messages.cancel)}\n                  title={this.props.intl.formatMessage(messages.cancel)}\n                  floated=\"right\"\n                  onClick={this.onCancel}\n                >\n                  <Icon className=\"circled\" name={clearSVG} size=\"30px\" />\n                </Button>\n              </Segment>\n            </Form>\n          </Plug>\n        </Segment.Group>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link\n                  to={`${getBaseUrl(this.props.pathname)}`}\n                  className=\"item\"\n                >\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      entries: state.sharing.data.entries,\n      inherit: state.sharing.data.inherit,\n      available_roles: state.sharing.data.available_roles,\n      updateRequest: state.sharing.update,\n      pathname: props.location.pathname,\n      title: state.content.data.title,\n      login: state.userSession.token\n        ? jwtDecode(state.userSession.token).sub\n        : '',\n    }),\n    { updateSharing, getSharing },\n  ),\n)(SharingComponent);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Search for user or group","defaultMessage":"Search for user or group"},{"id":"Inherit permissions from higher levels","defaultMessage":"Inherit permissions from higher levels"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Back","defaultMessage":"Back"},{"id":"Sharing","defaultMessage":"Sharing"},{"id":"User","defaultMessage":"User"},{"id":"Group","defaultMessage":"Group"},{"id":"Global role","defaultMessage":"Global role"},{"id":"Inherited value","defaultMessage":"Inherited value"},{"id":"Permissions updated","defaultMessage":"Permissions updated"},{"id":"Permissions have been updated successfully","defaultMessage":"Permissions have been updated successfully"},{"id":"Sharing for {title}","defaultMessage":"Sharing for {title}"},{"id":"You can control who can view and edit your item using the list below.","defaultMessage":"You can control who can view and edit your item using the list below."},{"id":"Name","defaultMessage":"Name"},{"id":"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.","defaultMessage":"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator."}]}},"sourceType":"module","externalDependencies":[]}