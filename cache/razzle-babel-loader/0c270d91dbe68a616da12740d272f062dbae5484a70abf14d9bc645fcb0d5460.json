{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _isEmpty from \"lodash/isEmpty\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Blocks/ConditionalDataBlock/Edit.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { emptyBlocksForm } from '@plone/volto/helpers';\nimport { BlocksForm, SidebarPortal, InlineForm } from '@plone/volto/components';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport EditBlockWrapper from '@eeacms/volto-group-block/components/manage/Blocks/Group/EditBlockWrapper';\nimport { ConditionalDataBlockSchema } from './schema';\nvar tweakSchema = function tweakSchema(schema, provider_data) {\n  var choices = Object.keys(provider_data || {}).sort().map(function (n) {\n    return [n, n];\n  });\n  ['column_data'].forEach(function (n) {\n    return schema.properties[n].choices = choices;\n  });\n  return schema;\n};\nvar Edit = function Edit(props) {\n  _s();\n  var _data$data;\n  var block = props.block,\n    data = props.data,\n    onChangeBlock = props.onChangeBlock,\n    _onChangeField = props.onChangeField,\n    pathname = props.pathname,\n    selected = props.selected,\n    manage = props.manage,\n    _props$provider_data = props.provider_data,\n    provider_data = _props$provider_data === void 0 ? {} : _props$provider_data;\n  var schema = tweakSchema(ConditionalDataBlockSchema(), provider_data);\n  var data_blocks = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.blocks;\n  var metadata = props.metadata || props.properties;\n  var properties = _isEmpty(data_blocks) ? emptyBlocksForm() : data.data;\n  var _useState = useState(properties.blocks_layout.items[0]),\n    selectedBlock = _useState[0],\n    setSelectedBlock = _useState[1];\n  React.useEffect(function () {\n    if (_isEmpty(data_blocks) && properties.blocks_layout.items[0] !== selectedBlock) {\n      setSelectedBlock(properties.blocks_layout.items[0]);\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        data: properties\n      }));\n    }\n  }, [onChangeBlock, properties, selectedBlock, block, data, data_blocks]);\n  var blockState = React.useRef({});\n  return __jsx(\"fieldset\", {\n    className: \"section-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(\"legend\", {\n    onClick: function onClick() {\n      setSelectedBlock();\n      props.setSidebarTab(1);\n    },\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, data.title || 'Conditional block'), __jsx(BlocksForm, {\n    metadata: metadata,\n    properties: properties,\n    manage: manage,\n    selectedBlock: selected ? selectedBlock : null,\n    allowedBlocks: data.allowedBlocks,\n    title: data.placeholder,\n    onSelectBlock: setSelectedBlock,\n    onChangeFormData: function onChangeFormData(newFormData) {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        data: newFormData\n      }));\n    },\n    onChangeField: function onChangeField(id, value) {\n      if (['blocks', 'blocks_layout'].indexOf(id) > -1) {\n        blockState.current[id] = value;\n        onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n          data: _objectSpread(_objectSpread({}, data.data), blockState.current)\n        }));\n      } else {\n        _onChangeField(id, value);\n      }\n    },\n    pathname: pathname,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, function (_ref, editBlock, blockProps) {\n    var draginfo = _ref.draginfo;\n    return __jsx(EditBlockWrapper, {\n      className: \"block-editor-group\",\n      draginfo: draginfo,\n      blockProps: blockProps,\n      disabled: data.disableInnerButtons,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, editBlock);\n  }), __jsx(SidebarPortal, {\n    selected: selected && !selectedBlock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, !(data !== null && data !== void 0 && data.readOnlySettings) && __jsx(InlineForm, {\n    schema: schema,\n    title: schema.title,\n    formData: data,\n    onChangeField: function onChangeField(id, value) {\n      props.onChangeBlock(props.block, _objectSpread(_objectSpread({}, props.data), {}, _defineProperty({}, id, value)));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })));\n};\n_s(Edit, \"sbUZRt5l9Ct9kVwScbliPbyH/IY=\");\n_c = Edit;\nEdit.propTypes = {\n  block: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  manage: PropTypes.bool.isRequired\n};\nexport default compose(connectToProviderData(function (props) {\n  var _props$data;\n  return {\n    provider_url: (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.provider_url\n  };\n}))(Edit);\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","useState","PropTypes","compose","emptyBlocksForm","BlocksForm","SidebarPortal","InlineForm","connectToProviderData","EditBlockWrapper","ConditionalDataBlockSchema","tweakSchema","schema","provider_data","choices","Object","keys","sort","map","n","forEach","properties","Edit","props","block","data","onChangeBlock","onChangeField","pathname","selected","manage","data_blocks","blocks","metadata","blocks_layout","items","selectedBlock","setSelectedBlock","useEffect","blockState","useRef","setSidebarTab","title","allowedBlocks","placeholder","newFormData","id","value","indexOf","current","editBlock","blockProps","draginfo","disableInnerButtons","readOnlySettings","propTypes","string","isRequired","object","func","bool","provider_url"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Blocks/ConditionalDataBlock/Edit.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { isEmpty } from 'lodash';\nimport { emptyBlocksForm } from '@plone/volto/helpers';\nimport { BlocksForm, SidebarPortal, InlineForm } from '@plone/volto/components';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport EditBlockWrapper from '@eeacms/volto-group-block/components/manage/Blocks/Group/EditBlockWrapper';\nimport { ConditionalDataBlockSchema } from './schema';\n\nconst tweakSchema = (schema, provider_data) => {\n  const choices = Object.keys(provider_data || {})\n    .sort()\n    .map((n) => [n, n]);\n  ['column_data'].forEach((n) => (schema.properties[n].choices = choices));\n\n  return schema;\n};\n\nconst Edit = (props) => {\n  const {\n    block,\n    data,\n    onChangeBlock,\n    onChangeField,\n    pathname,\n    selected,\n    manage,\n    provider_data = {},\n  } = props;\n\n  const schema = tweakSchema(ConditionalDataBlockSchema(), provider_data);\n  const data_blocks = data?.data?.blocks;\n  const metadata = props.metadata || props.properties;\n  const properties = isEmpty(data_blocks) ? emptyBlocksForm() : data.data;\n  const [selectedBlock, setSelectedBlock] = useState(\n    properties.blocks_layout.items[0],\n  );\n\n  React.useEffect(() => {\n    if (\n      isEmpty(data_blocks) &&\n      properties.blocks_layout.items[0] !== selectedBlock\n    ) {\n      setSelectedBlock(properties.blocks_layout.items[0]);\n      onChangeBlock(block, {\n        ...data,\n        data: properties,\n      });\n    }\n  }, [onChangeBlock, properties, selectedBlock, block, data, data_blocks]);\n\n  const blockState = React.useRef({});\n\n  return (\n    <fieldset className=\"section-block\">\n      <legend\n        onClick={() => {\n          setSelectedBlock();\n          props.setSidebarTab(1);\n        }}\n        aria-hidden=\"true\"\n      >\n        {data.title || 'Conditional block'}\n      </legend>\n      <BlocksForm\n        metadata={metadata}\n        properties={properties}\n        manage={manage}\n        selectedBlock={selected ? selectedBlock : null}\n        allowedBlocks={data.allowedBlocks}\n        title={data.placeholder}\n        onSelectBlock={setSelectedBlock}\n        onChangeFormData={(newFormData) => {\n          onChangeBlock(block, {\n            ...data,\n            data: newFormData,\n          });\n        }}\n        onChangeField={(id, value) => {\n          if (['blocks', 'blocks_layout'].indexOf(id) > -1) {\n            blockState.current[id] = value;\n            onChangeBlock(block, {\n              ...data,\n              data: {\n                ...data.data,\n                ...blockState.current,\n              },\n            });\n          } else {\n            onChangeField(id, value);\n          }\n        }}\n        pathname={pathname}\n      >\n        {({ draginfo }, editBlock, blockProps) => (\n          <EditBlockWrapper\n            className=\"block-editor-group\"\n            draginfo={draginfo}\n            blockProps={blockProps}\n            disabled={data.disableInnerButtons}\n          >\n            {editBlock}\n          </EditBlockWrapper>\n        )}\n      </BlocksForm>\n\n      <SidebarPortal selected={selected && !selectedBlock}>\n        {!data?.readOnlySettings && (\n          <InlineForm\n            schema={schema}\n            title={schema.title}\n            formData={data}\n            onChangeField={(id, value) => {\n              props.onChangeBlock(props.block, {\n                ...props.data,\n                [id]: value,\n              });\n            }}\n          />\n        )}\n      </SidebarPortal>\n    </fieldset>\n  );\n};\n\nEdit.propTypes = {\n  block: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  manage: PropTypes.bool.isRequired,\n};\n\nexport default compose(\n  connectToProviderData((props) => ({\n    provider_url: props.data?.provider_url,\n  })),\n)(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}