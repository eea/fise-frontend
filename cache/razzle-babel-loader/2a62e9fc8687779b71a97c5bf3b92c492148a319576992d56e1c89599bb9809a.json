{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Logout/Logout.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Login container.\n * @module components/theme/Logout/Logout\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { Login } from '@plone/volto/components';\nimport { logout, purgeMessages } from '@plone/volto/actions';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nconst messages = defineMessages({\n  loggedOut: {\n    \"id\": \"Logged out\",\n    \"defaultMessage\": \"Logged out\"\n  },\n  loggedOutContent: {\n    \"id\": \"You have been logged out from the site.\",\n    \"defaultMessage\": \"You have been logged out from the site.\"\n  }\n});\n\n/**\n * Logout class.\n * @class Logout\n * @extends Component\n */\nclass Logout extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  componentDidMount() {\n    this.props.logout();\n    this.props.purgeMessages();\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!nextProps.token) {\n      this.props.history.replace(this.props.returnUrl || '/');\n      if (!toast.isActive('loggedOut')) {\n        toast.info(__jsx(Toast, {\n          info: true,\n          title: this.props.intl.formatMessage(messages.loggedOut),\n          content: this.props.intl.formatMessage(messages.loggedOutContent),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }\n        }), {\n          autoClose: false,\n          toastId: 'loggedOut'\n        });\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return __jsx(Login, {\n      location: {\n        query: this.props.location.query\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 12\n      }\n    });\n  }\n}\n_defineProperty(Logout, \"propTypes\", {\n  logout: PropTypes.func.isRequired,\n  purgeMessages: PropTypes.func.isRequired,\n  query: PropTypes.shape({\n    return_url: PropTypes.string\n  })\n});\n_defineProperty(Logout, \"defaultProps\", {\n  query: null\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  query: qs.parse(props.location.search),\n  token: state.userSession.token,\n  returnUrl: qs.parse(props.location.search).return_url || props.location.pathname.replace(/\\/login\\/?$/, '').replace(/\\/logout\\/?$/, '') || '/'\n}), {\n  logout,\n  purgeMessages\n}))(Logout);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","defineMessages","injectIntl","qs","Login","logout","purgeMessages","toast","Toast","messages","loggedOut","loggedOutContent","Logout","componentDidMount","props","UNSAFE_componentWillReceiveProps","nextProps","token","history","replace","returnUrl","isActive","info","intl","formatMessage","autoClose","toastId","render","query","location","func","isRequired","shape","return_url","string","state","parse","search","userSession","pathname"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Logout/Logout.jsx"],"sourcesContent":["/**\n * Login container.\n * @module components/theme/Logout/Logout\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\n\nimport { Login } from '@plone/volto/components';\nimport { logout, purgeMessages } from '@plone/volto/actions';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  loggedOut: {\n    id: 'Logged out',\n    defaultMessage: 'Logged out',\n  },\n  loggedOutContent: {\n    id: 'You have been logged out from the site.',\n    defaultMessage: 'You have been logged out from the site.',\n  },\n});\n\n/**\n * Logout class.\n * @class Logout\n * @extends Component\n */\nclass Logout extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    logout: PropTypes.func.isRequired,\n    purgeMessages: PropTypes.func.isRequired,\n    query: PropTypes.shape({\n      return_url: PropTypes.string,\n    }),\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    query: null,\n  };\n\n  componentDidMount() {\n    this.props.logout();\n    this.props.purgeMessages();\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!nextProps.token) {\n      this.props.history.replace(this.props.returnUrl || '/');\n      if (!toast.isActive('loggedOut')) {\n        toast.info(\n          <Toast\n            info\n            title={this.props.intl.formatMessage(messages.loggedOut)}\n            content={this.props.intl.formatMessage(messages.loggedOutContent)}\n          />,\n          { autoClose: false, toastId: 'loggedOut' },\n        );\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return <Login location={{ query: this.props.location.query }} />;\n  }\n}\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      query: qs.parse(props.location.search),\n      token: state.userSession.token,\n      returnUrl:\n        qs.parse(props.location.search).return_url ||\n        props.location.pathname\n          .replace(/\\/login\\/?$/, '')\n          .replace(/\\/logout\\/?$/, '') ||\n        '/',\n    }),\n    { logout, purgeMessages },\n  ),\n)(Logout);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Logged out","defaultMessage":"Logged out"},{"id":"You have been logged out from the site.","defaultMessage":"You have been logged out from the site."}]}},"sourceType":"module","externalDependencies":[]}