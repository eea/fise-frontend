{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { GET_ALL_ATTACHMENTS, CREATE_ATTACHMENT } from '../constants';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nvar initialState = {\n  error: null,\n  attachments: [],\n  loaded: false,\n  loading: false\n};\n\n/**\n * Data providers reducer.\n * @function mosaic_settings\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function attachments() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case \"\".concat(GET_ALL_ATTACHMENTS, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case \"\".concat(GET_ALL_ATTACHMENTS, \"_SUCCESS\"):\n      // console.log('Success getting attachments', action.result);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        attachments: action.result.items.map(function (item) {\n          return _objectSpread(_objectSpread({}, item), {}, {\n            url: flattenToAppURL(item['@id'])\n          });\n        }),\n        loaded: true,\n        loading: false\n      });\n    case \"\".concat(GET_ALL_ATTACHMENTS, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        attachments: [],\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}\nvar createInitialState = {\n  error: null,\n  created_attachment: null,\n  loaded: false,\n  loading: false\n};\nexport function create_attachment() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : createInitialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case \"\".concat(CREATE_ATTACHMENT, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        created_attachment: null,\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case \"\".concat(CREATE_ATTACHMENT, \"_SUCCESS\"):\n      // console.log('Success creating attachment', action.result);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        created_attachment: action.result,\n        loaded: true,\n        loading: false\n      });\n    case \"\".concat(CREATE_ATTACHMENT, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        created_attachment: null,\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_ALL_ATTACHMENTS","CREATE_ATTACHMENT","flattenToAppURL","initialState","error","attachments","loaded","loading","state","action","type","result","items","map","item","url","createInitialState","created_attachment","create_attachment"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/reducers/attachments.js"],"sourcesContent":["import { GET_ALL_ATTACHMENTS, CREATE_ATTACHMENT } from '../constants';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nconst initialState = {\n  error: null,\n  attachments: [],\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Data providers reducer.\n * @function mosaic_settings\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function attachments(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_ALL_ATTACHMENTS}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${GET_ALL_ATTACHMENTS}_SUCCESS`:\n      // console.log('Success getting attachments', action.result);\n      return {\n        ...state,\n        error: null,\n        attachments: action.result.items.map((item) => ({\n          ...item,\n          url: flattenToAppURL(item['@id']),\n        })),\n        loaded: true,\n        loading: false,\n      };\n    case `${GET_ALL_ATTACHMENTS}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        attachments: [],\n        loaded: false,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst createInitialState = {\n  error: null,\n  created_attachment: null,\n  loaded: false,\n  loading: false,\n};\n\nexport function create_attachment(state = createInitialState, action = {}) {\n  switch (action.type) {\n    case `${CREATE_ATTACHMENT}_PENDING`:\n      return {\n        ...state,\n        created_attachment: null,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${CREATE_ATTACHMENT}_SUCCESS`:\n      // console.log('Success creating attachment', action.result);\n      return {\n        ...state,\n        error: null,\n        created_attachment: action.result,\n        loaded: true,\n        loading: false,\n      };\n    case `${CREATE_ATTACHMENT}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        created_attachment: null,\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";AAAA,SAASA,mBAAmB,EAAEC,iBAAiB,QAAQ,cAAc;AACrE,SAASC,eAAe,QAAQ,sBAAsB;AAEtD,IAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,WAAW,EAAE,EAAE;EACfC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASF,WAAW,GAAoC;EAAA,IAAnCG,KAAK,uEAAGL,YAAY;EAAA,IAAEM,MAAM,uEAAG,CAAC,CAAC;EACnE,QAAQA,MAAM,CAACC,IAAI;IACjB,eAAQV,mBAAmB;MACzB,uCACKQ,KAAK;QACRJ,KAAK,EAAE,IAAI;QACXE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAEjB,eAAQP,mBAAmB;MACzB;MACA,uCACKQ,KAAK;QACRJ,KAAK,EAAE,IAAI;QACXC,WAAW,EAAEI,MAAM,CAACE,MAAM,CAACC,KAAK,CAACC,GAAG,CAAC,UAACC,IAAI;UAAA,uCACrCA,IAAI;YACPC,GAAG,EAAEb,eAAe,CAACY,IAAI,CAAC,KAAK,CAAC;UAAC;QAAA,CACjC,CAAC;QACHR,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MAAK;IAElB,eAAQP,mBAAmB;MACzB,uCACKQ,KAAK;QACRJ,KAAK,EAAEK,MAAM,CAACL,KAAK;QACnBC,WAAW,EAAE,EAAE;QACfC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAK;IAGlB;MACE,OAAOC,KAAK;EAAC;AAEnB;AAEA,IAAMQ,kBAAkB,GAAG;EACzBZ,KAAK,EAAE,IAAI;EACXa,kBAAkB,EAAE,IAAI;EACxBX,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,SAASW,iBAAiB,GAA0C;EAAA,IAAzCV,KAAK,uEAAGQ,kBAAkB;EAAA,IAAEP,MAAM,uEAAG,CAAC,CAAC;EACvE,QAAQA,MAAM,CAACC,IAAI;IACjB,eAAQT,iBAAiB;MACvB,uCACKO,KAAK;QACRS,kBAAkB,EAAE,IAAI;QACxBb,KAAK,EAAE,IAAI;QACXE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAEjB,eAAQN,iBAAiB;MACvB;MACA,uCACKO,KAAK;QACRJ,KAAK,EAAE,IAAI;QACXa,kBAAkB,EAAER,MAAM,CAACE,MAAM;QACjCL,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MAAK;IAElB,eAAQN,iBAAiB;MACvB,uCACKO,KAAK;QACRJ,KAAK,EAAEK,MAAM,CAACL,KAAK;QACnBa,kBAAkB,EAAE,IAAI;QACxBX,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAK;IAElB;MACE,OAAOC,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}