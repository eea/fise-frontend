{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/Widgets/WidthBasedLayoutProvider.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport componentQueries from 'react-component-queries';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nconst WidthBasedLayoutProvider = WrappedComponent => props => {\n  return __jsx(WrappedComponent, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }\n  }));\n};\nconst connectedWidthProvider = compose(connect(state => {\n  var _state$mosaic_width;\n  return {\n    mosaic_width: (_state$mosaic_width = state.mosaic_width) === null || _state$mosaic_width === void 0 ? void 0 : _state$mosaic_width.items\n  };\n}), componentQueries({\n  queries: [({\n    width\n  }, {\n    mosaic_width\n  }) => ({\n    layout_type: (() => {\n      // const width = 120\n      // windowWidth - gridLayoutWidth = margins\n      const mosaic_breakpoints = {\n        tablet: 767,\n        desktop: 1200,\n        widescreen: 1600\n      };\n\n      // console.log('props in queries', width, mosaic_width);\n      const windowWidth = __CLIENT__ && window.innerWidth;\n      const margins = windowWidth - mosaic_width;\n      const breakpoint = screentype => windowWidth ? mosaic_breakpoints[screentype] - margins : mosaic_breakpoints[screentype];\n\n      /*\n      console.debug(\n        'breakpoints',\n        width,\n        '====>',\n        'widescreen =>',\n        breakpoint('widescreen'),\n        'desktop =>',\n        breakpoint('desktop'),\n        'tablet =>',\n        breakpoint('tablet'),\n        'Window =>',\n        windowWidth,\n        'mosaic =>',\n        mosaic_width,\n        'margins =>',\n        margins,\n      );*/\n\n      if (__SERVER__) {\n        return 'widescreen';\n      }\n      if (width > breakpoint('widescreen')) {\n        return 'widescreen';\n      }\n      if (width > breakpoint('desktop')) {\n        return 'desktop';\n      }\n      if (width > breakpoint('tablet')) {\n        return 'tablet';\n      }\n      return 'phone';\n    })()\n  })]\n}), WidthBasedLayoutProvider);\nexport default connectedWidthProvider;","map":{"version":3,"names":["React","componentQueries","compose","connect","WidthBasedLayoutProvider","WrappedComponent","props","connectedWidthProvider","state","mosaic_width","items","queries","width","layout_type","mosaic_breakpoints","tablet","desktop","widescreen","windowWidth","__CLIENT__","window","innerWidth","margins","breakpoint","screentype","__SERVER__"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/Widgets/WidthBasedLayoutProvider.jsx"],"sourcesContent":["import React from 'react';\nimport componentQueries from 'react-component-queries';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nconst WidthBasedLayoutProvider = (WrappedComponent) => (props) => {\n  return <WrappedComponent {...props} />;\n};\n\nconst connectedWidthProvider = compose(\n  connect((state) => ({\n    mosaic_width: state.mosaic_width?.items,\n  })),\n  componentQueries({\n    queries: [\n      ({ width }, { mosaic_width }) => ({\n        layout_type: (() => {\n          // const width = 120\n          // windowWidth - gridLayoutWidth = margins\n          const mosaic_breakpoints = {\n            tablet: 767,\n            desktop: 1200,\n            widescreen: 1600,\n          };\n\n          // console.log('props in queries', width, mosaic_width);\n          const windowWidth = __CLIENT__ && window.innerWidth;\n          const margins = windowWidth - mosaic_width;\n          const breakpoint = (screentype) =>\n            windowWidth\n              ? mosaic_breakpoints[screentype] - margins\n              : mosaic_breakpoints[screentype];\n\n          /*\n\t  console.debug(\n            'breakpoints',\n            width,\n            '====>',\n            'widescreen =>',\n            breakpoint('widescreen'),\n            'desktop =>',\n            breakpoint('desktop'),\n            'tablet =>',\n            breakpoint('tablet'),\n            'Window =>',\n            windowWidth,\n            'mosaic =>',\n            mosaic_width,\n            'margins =>',\n            margins,\n          );*/\n\n          if (__SERVER__) {\n            return 'widescreen';\n          }\n          if (width > breakpoint('widescreen')) {\n            return 'widescreen';\n          }\n          if (width > breakpoint('desktop')) {\n            return 'desktop';\n          }\n          if (width > breakpoint('tablet')) {\n            return 'tablet';\n          }\n          return 'phone';\n        })(),\n      }),\n    ],\n  }),\n  WidthBasedLayoutProvider,\n);\n\nexport default connectedWidthProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,yBAAyB;AACtD,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,OAAO,QAAQ,aAAa;AAErC,MAAMC,wBAAwB,GAAIC,gBAAgB,IAAMC,KAAK,IAAK;EAChE,OAAO,MAAC,gBAAgB,eAAKA,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI;AACxC,CAAC;AAED,MAAMC,sBAAsB,GAAGL,OAAO,CACpCC,OAAO,CAAEK,KAAK;EAAA;EAAA,OAAM;IAClBC,YAAY,yBAAED,KAAK,CAACC,YAAY,wDAAlB,oBAAoBC;EACpC,CAAC;AAAA,CAAC,CAAC,EACHT,gBAAgB,CAAC;EACfU,OAAO,EAAE,CACP,CAAC;IAAEC;EAAM,CAAC,EAAE;IAAEH;EAAa,CAAC,MAAM;IAChCI,WAAW,EAAE,CAAC,MAAM;MAClB;MACA;MACA,MAAMC,kBAAkB,GAAG;QACzBC,MAAM,EAAE,GAAG;QACXC,OAAO,EAAE,IAAI;QACbC,UAAU,EAAE;MACd,CAAC;;MAED;MACA,MAAMC,WAAW,GAAGC,UAAU,IAAIC,MAAM,CAACC,UAAU;MACnD,MAAMC,OAAO,GAAGJ,WAAW,GAAGT,YAAY;MAC1C,MAAMc,UAAU,GAAIC,UAAU,IAC5BN,WAAW,GACPJ,kBAAkB,CAACU,UAAU,CAAC,GAAGF,OAAO,GACxCR,kBAAkB,CAACU,UAAU,CAAC;;MAEpC;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAEU,IAAIC,UAAU,EAAE;QACd,OAAO,YAAY;MACrB;MACA,IAAIb,KAAK,GAAGW,UAAU,CAAC,YAAY,CAAC,EAAE;QACpC,OAAO,YAAY;MACrB;MACA,IAAIX,KAAK,GAAGW,UAAU,CAAC,SAAS,CAAC,EAAE;QACjC,OAAO,SAAS;MAClB;MACA,IAAIX,KAAK,GAAGW,UAAU,CAAC,QAAQ,CAAC,EAAE;QAChC,OAAO,QAAQ;MACjB;MACA,OAAO,OAAO;IAChB,CAAC;EACH,CAAC,CAAC;AAEN,CAAC,CAAC,EACFnB,wBAAwB,CACzB;AAED,eAAeG,sBAAsB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}