{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-slate-zotero/src/plugins/zotero/editor/ZoteroEditor.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ReactEditor } from 'slate-react';\nimport { setPluginOptions } from '@plone/volto-slate/actions';\nimport { ZoteroEditorSchema } from './schema';\nimport ZoteroDataWrapper from './ZoteroDataWrapper';\nexport default (props => {\n  const dispatch = useDispatch();\n  const [formData, setFormData] = React.useState({});\n  const {\n    editor,\n    getActiveElement,\n    isActiveElement,\n    pluginId,\n    insertElement,\n    unwrapElement\n  } = props;\n  const active = getActiveElement(editor);\n  const [zoteroNode] = active;\n  const isZotero = isActiveElement(editor);\n  const pid = `${editor.uid}-${pluginId}`;\n\n  // Update the form data based on the current zotero\n  const zoteroRef = React.useRef(null);\n  React.useEffect(() => {\n    if (isZotero && !_isEqual(zoteroNode, zoteroRef.current)) {\n      zoteroRef.current = zoteroNode;\n      setFormData(zoteroNode.data || {});\n    } else if (!isZotero) {\n      zoteroRef.current = null;\n    }\n  }, [zoteroNode, isZotero, dispatch]);\n  const saveDataToEditor = React.useCallback(formData => {\n    if (formData.footnote) {\n      insertElement(editor, formData);\n    } else {\n      unwrapElement(editor);\n    }\n  }, [editor] // eslint-disable-line\n  );\n\n  const checkForCancel = () => {\n    if (!zoteroNode.data.footnote) {\n      unwrapElement(editor);\n    }\n  };\n  return __jsx(ZoteroDataWrapper, {\n    title: ZoteroEditorSchema.title,\n    schema: ZoteroEditorSchema,\n    formData: formData,\n    submitHandler: newFormData => {\n      saveDataToEditor(newFormData);\n      dispatch(setPluginOptions(pid, {\n        show_sidebar_editor: false\n      }));\n      ReactEditor.focus(editor);\n    },\n    clearHandler: () => {\n      setFormData({});\n      checkForCancel();\n      dispatch(setPluginOptions(pid, {\n        show_sidebar_editor: false\n      }));\n      ReactEditor.focus(editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  });\n});","map":{"version":3,"names":["React","useDispatch","ReactEditor","setPluginOptions","ZoteroEditorSchema","ZoteroDataWrapper","props","dispatch","formData","setFormData","useState","editor","getActiveElement","isActiveElement","pluginId","insertElement","unwrapElement","active","zoteroNode","isZotero","pid","uid","zoteroRef","useRef","useEffect","current","data","saveDataToEditor","useCallback","footnote","checkForCancel","title","newFormData","show_sidebar_editor","focus"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate-zotero/src/plugins/zotero/editor/ZoteroEditor.jsx"],"sourcesContent":["import { isEqual } from 'lodash';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ReactEditor } from 'slate-react';\nimport { setPluginOptions } from '@plone/volto-slate/actions';\nimport { ZoteroEditorSchema } from './schema';\nimport ZoteroDataWrapper from './ZoteroDataWrapper';\n\nexport default (props) => {\n  const dispatch = useDispatch();\n  const [formData, setFormData] = React.useState({});\n  const {\n    editor,\n    getActiveElement,\n    isActiveElement,\n    pluginId,\n    insertElement,\n    unwrapElement,\n  } = props;\n  const active = getActiveElement(editor);\n  const [zoteroNode] = active;\n  const isZotero = isActiveElement(editor);\n  const pid = `${editor.uid}-${pluginId}`;\n\n  // Update the form data based on the current zotero\n  const zoteroRef = React.useRef(null);\n  React.useEffect(() => {\n    if (isZotero && !isEqual(zoteroNode, zoteroRef.current)) {\n      zoteroRef.current = zoteroNode;\n      setFormData(zoteroNode.data || {});\n    } else if (!isZotero) {\n      zoteroRef.current = null;\n    }\n  }, [zoteroNode, isZotero, dispatch]);\n\n  const saveDataToEditor = React.useCallback(\n    (formData) => {\n      if (formData.footnote) {\n        insertElement(editor, formData);\n      } else {\n        unwrapElement(editor);\n      }\n    },\n    [editor], // eslint-disable-line\n  );\n\n  const checkForCancel = () => {\n    if (!zoteroNode.data.footnote) {\n      unwrapElement(editor);\n    }\n  };\n\n  return (\n    <ZoteroDataWrapper\n      title={ZoteroEditorSchema.title}\n      schema={ZoteroEditorSchema}\n      formData={formData}\n      submitHandler={(newFormData) => {\n        saveDataToEditor(newFormData);\n        dispatch(setPluginOptions(pid, { show_sidebar_editor: false }));\n\n        ReactEditor.focus(editor);\n      }}\n      clearHandler={() => {\n        setFormData({});\n        checkForCancel();\n        dispatch(setPluginOptions(pid, { show_sidebar_editor: false }));\n\n        ReactEditor.focus(editor);\n      }}\n    ></ZoteroDataWrapper>\n  );\n};\n"],"mappings":";;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,gBAAgB,QAAQ,4BAA4B;AAC7D,SAASC,kBAAkB,QAAQ,UAAU;AAC7C,OAAOC,iBAAiB,MAAM,qBAAqB;AAEnD,gBAAgBC,KAAK,IAAK;EACxB,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM;IACJC,MAAM;IACNC,gBAAgB;IAChBC,eAAe;IACfC,QAAQ;IACRC,aAAa;IACbC;EACF,CAAC,GAAGV,KAAK;EACT,MAAMW,MAAM,GAAGL,gBAAgB,CAACD,MAAM,CAAC;EACvC,MAAM,CAACO,UAAU,CAAC,GAAGD,MAAM;EAC3B,MAAME,QAAQ,GAAGN,eAAe,CAACF,MAAM,CAAC;EACxC,MAAMS,GAAG,GAAI,GAAET,MAAM,CAACU,GAAI,IAAGP,QAAS,EAAC;;EAEvC;EACA,MAAMQ,SAAS,GAAGtB,KAAK,CAACuB,MAAM,CAAC,IAAI,CAAC;EACpCvB,KAAK,CAACwB,SAAS,CAAC,MAAM;IACpB,IAAIL,QAAQ,IAAI,CAAC,SAAQD,UAAU,EAAEI,SAAS,CAACG,OAAO,CAAC,EAAE;MACvDH,SAAS,CAACG,OAAO,GAAGP,UAAU;MAC9BT,WAAW,CAACS,UAAU,CAACQ,IAAI,IAAI,CAAC,CAAC,CAAC;IACpC,CAAC,MAAM,IAAI,CAACP,QAAQ,EAAE;MACpBG,SAAS,CAACG,OAAO,GAAG,IAAI;IAC1B;EACF,CAAC,EAAE,CAACP,UAAU,EAAEC,QAAQ,EAAEZ,QAAQ,CAAC,CAAC;EAEpC,MAAMoB,gBAAgB,GAAG3B,KAAK,CAAC4B,WAAW,CACvCpB,QAAQ,IAAK;IACZ,IAAIA,QAAQ,CAACqB,QAAQ,EAAE;MACrBd,aAAa,CAACJ,MAAM,EAAEH,QAAQ,CAAC;IACjC,CAAC,MAAM;MACLQ,aAAa,CAACL,MAAM,CAAC;IACvB;EACF,CAAC,EACD,CAACA,MAAM,CAAC,CAAE;EAAA,CACX;;EAED,MAAMmB,cAAc,GAAG,MAAM;IAC3B,IAAI,CAACZ,UAAU,CAACQ,IAAI,CAACG,QAAQ,EAAE;MAC7Bb,aAAa,CAACL,MAAM,CAAC;IACvB;EACF,CAAC;EAED,OACE,MAAC,iBAAiB;IAChB,KAAK,EAAEP,kBAAkB,CAAC2B,KAAM;IAChC,MAAM,EAAE3B,kBAAmB;IAC3B,QAAQ,EAAEI,QAAS;IACnB,aAAa,EAAGwB,WAAW,IAAK;MAC9BL,gBAAgB,CAACK,WAAW,CAAC;MAC7BzB,QAAQ,CAACJ,gBAAgB,CAACiB,GAAG,EAAE;QAAEa,mBAAmB,EAAE;MAAM,CAAC,CAAC,CAAC;MAE/D/B,WAAW,CAACgC,KAAK,CAACvB,MAAM,CAAC;IAC3B,CAAE;IACF,YAAY,EAAE,MAAM;MAClBF,WAAW,CAAC,CAAC,CAAC,CAAC;MACfqB,cAAc,EAAE;MAChBvB,QAAQ,CAACJ,gBAAgB,CAACiB,GAAG,EAAE;QAAEa,mBAAmB,EAAE;MAAM,CAAC,CAAC,CAAC;MAE/D/B,WAAW,CAACgC,KAAK,CAACvB,MAAM,CAAC;IAC3B,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACiB;AAEzB,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}