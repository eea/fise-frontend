{"ast":null,"code":"import { defineMessages } from 'react-intl';\nvar messages = defineMessages({\n  Type: {\n    \"id\": \"Divider\",\n    \"defaultMessage\": \"Divider\"\n  },\n  Title: {\n    \"id\": \"Title\",\n    \"defaultMessage\": \"Title\"\n  },\n  TitleHelp: {\n    \"id\": \"Divider friendly name\",\n    \"defaultMessage\": \"Divider friendly name\"\n  },\n  Text: {\n    \"id\": \"Text\",\n    \"defaultMessage\": \"Text\"\n  },\n  TextHelp: {\n    \"id\": \"Text on top of the divider\",\n    \"defaultMessage\": \"Text on top of the divider\"\n  },\n  Hidden: {\n    \"id\": \"Hidden\",\n    \"defaultMessage\": \"Hidden\"\n  },\n  HiddenHelp: {\n    \"id\": \"A hidden divider divides content without creating a dividing line.\",\n    \"defaultMessage\": \"A hidden divider divides content without creating a dividing line.\"\n  },\n  Section: {\n    \"id\": \"Section\",\n    \"defaultMessage\": \"Section\"\n  },\n  SectionHelp: {\n    \"id\": \"A divider can provide greater margins to divide sections of content.\",\n    \"defaultMessage\": \"A divider can provide greater margins to divide sections of content.\"\n  },\n  Short: {\n    \"id\": \"Short\",\n    \"defaultMessage\": \"Short\"\n  },\n  ShortHelp: {\n    \"id\": \"Shorter line\",\n    \"defaultMessage\": \"Shorter line\"\n  },\n  Fitted: {\n    \"id\": \"Fitted\",\n    \"defaultMessage\": \"Fitted\"\n  },\n  FittedHelp: {\n    \"id\": \"A divider can be fitted, without any space above or below it.\",\n    \"defaultMessage\": \"A divider can be fitted, without any space above or below it.\"\n  },\n  Theme: {\n    \"id\": \"Theme\",\n    \"defaultMessage\": \"Theme\"\n  },\n  ThemeHelp: {\n    \"id\": \"Divider theme\",\n    \"defaultMessage\": \"Divider theme\"\n  },\n  ThemePrimary: {\n    \"id\": \"Primary\",\n    \"defaultMessage\": \"Primary\"\n  },\n  ThemeSecondary: {\n    \"id\": \"Secondary\",\n    \"defaultMessage\": \"Secondary\"\n  },\n  ThemeTertiary: {\n    \"id\": \"Tertiary\",\n    \"defaultMessage\": \"Tertiary\"\n  },\n  Inverted: {\n    \"id\": \"Inverted\",\n    \"defaultMessage\": \"Inverted\"\n  },\n  InvertedHelp: {\n    \"id\": \"A divider can have its colors inverted.\",\n    \"defaultMessage\": \"A divider can have its colors inverted.\"\n  }\n});\nexport var DividerEditSchema = function DividerEditSchema(_ref) {\n  var intl = _ref.intl;\n  return {\n    title: intl.formatMessage(messages.Type),\n    block: 'divider',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['title', 'text', 'hidden', 'section', 'fitted', 'short']\n    }],\n    properties: {\n      title: {\n        title: intl.formatMessage(messages.Title),\n        description: intl.formatMessage(messages.TitleHelp)\n      },\n      text: {\n        title: intl.formatMessage(messages.Text),\n        description: intl.formatMessage(messages.TextHelp)\n      },\n      hidden: {\n        title: intl.formatMessage(messages.Hidden),\n        description: intl.formatMessage(messages.HiddenHelp),\n        type: 'boolean'\n      },\n      section: {\n        title: intl.formatMessage(messages.Section),\n        description: intl.formatMessage(messages.SectionHelp),\n        type: 'boolean'\n      },\n      fitted: {\n        title: intl.formatMessage(messages.Fitted),\n        description: intl.formatMessage(messages.FittedHelp),\n        type: 'boolean'\n      },\n      \"short\": {\n        title: intl.formatMessage(messages.Short),\n        description: intl.formatMessage(messages.ShortHelp),\n        type: 'boolean'\n      }\n    },\n    required: []\n  };\n};\n_c = DividerEditSchema;\nexport var DividerStylingSchema = function DividerStylingSchema(_ref2) {\n  var intl = _ref2.intl;\n  return {\n    title: intl.formatMessage(messages.Type),\n    block: 'divider',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['theme', 'inverted']\n    }],\n    properties: {\n      theme: {\n        title: intl.formatMessage(messages.Theme),\n        description: intl.formatMessage(messages.ThemeHelp),\n        choices: [['primary', intl.formatMessage(messages.ThemePrimary)], ['secondary', intl.formatMessage(messages.ThemeSecondary)], ['tertiary', intl.formatMessage(messages.ThemeTertiary)]]\n      },\n      inverted: {\n        title: intl.formatMessage(messages.Inverted),\n        description: intl.formatMessage(messages.InvertedHelp),\n        type: 'boolean'\n      }\n    },\n    required: []\n  };\n};\n_c2 = DividerStylingSchema;\nvar _c, _c2;\n$RefreshReg$(_c, \"DividerEditSchema\");\n$RefreshReg$(_c2, \"DividerStylingSchema\");","map":{"version":3,"names":["defineMessages","messages","Type","Title","TitleHelp","Text","TextHelp","Hidden","HiddenHelp","Section","SectionHelp","Short","ShortHelp","Fitted","FittedHelp","Theme","ThemeHelp","ThemePrimary","ThemeSecondary","ThemeTertiary","Inverted","InvertedHelp","DividerEditSchema","intl","title","formatMessage","block","fieldsets","id","fields","properties","description","text","hidden","type","section","fitted","required","DividerStylingSchema","theme","choices","inverted"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-block-divider/src/components/Divider/Schema.js"],"sourcesContent":["import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  Type: {\n    id: 'Divider',\n    defaultMessage: 'Divider',\n  },\n  Title: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  TitleHelp: {\n    id: 'Divider friendly name',\n    defaultMessage: 'Divider friendly name',\n  },\n  Text: {\n    id: 'Text',\n    defaultMessage: 'Text',\n  },\n  TextHelp: {\n    id: 'Text on top of the divider',\n    defaultMessage: 'Text on top of the divider',\n  },\n  Hidden: {\n    id: 'Hidden',\n    defaultMessage: 'Hidden',\n  },\n  HiddenHelp: {\n    id: 'A hidden divider divides content without creating a dividing line.',\n    defaultMessage:\n      'A hidden divider divides content without creating a dividing line.',\n  },\n  Section: {\n    id: 'Section',\n    defaultMessage: 'Section',\n  },\n  SectionHelp: {\n    id: 'A divider can provide greater margins to divide sections of content.',\n    defaultMessage:\n      'A divider can provide greater margins to divide sections of content.',\n  },\n  Short: {\n    id: 'Short',\n    defaultMessage: 'Short',\n  },\n  ShortHelp: {\n    id: 'Shorter line',\n    defaultMessage: 'Shorter line',\n  },\n  Fitted: {\n    id: 'Fitted',\n    defaultMessage: 'Fitted',\n  },\n  FittedHelp: {\n    id: 'A divider can be fitted, without any space above or below it.',\n    defaultMessage:\n      'A divider can be fitted, without any space above or below it.',\n  },\n  Theme: {\n    id: 'Theme',\n    defaultMessage: 'Theme',\n  },\n  ThemeHelp: {\n    id: 'Divider theme',\n    defaultMessage: 'Divider theme',\n  },\n  ThemePrimary: {\n    id: 'Primary',\n    defaultMessage: 'Primary',\n  },\n  ThemeSecondary: {\n    id: 'Secondary',\n    defaultMessage: 'Secondary',\n  },\n  ThemeTertiary: {\n    id: 'Tertiary',\n    defaultMessage: 'Tertiary',\n  },\n  Inverted: {\n    id: 'Inverted',\n    defaultMessage: 'Inverted',\n  },\n  InvertedHelp: {\n    id: 'A divider can have its colors inverted.',\n    defaultMessage: 'A divider can have its colors inverted.',\n  },\n});\n\nexport const DividerEditSchema = ({ intl }) => ({\n  title: intl.formatMessage(messages.Type),\n  block: 'divider',\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: ['title', 'text', 'hidden', 'section', 'fitted', 'short'],\n    },\n  ],\n\n  properties: {\n    title: {\n      title: intl.formatMessage(messages.Title),\n      description: intl.formatMessage(messages.TitleHelp),\n    },\n    text: {\n      title: intl.formatMessage(messages.Text),\n      description: intl.formatMessage(messages.TextHelp),\n    },\n    hidden: {\n      title: intl.formatMessage(messages.Hidden),\n      description: intl.formatMessage(messages.HiddenHelp),\n      type: 'boolean',\n    },\n    section: {\n      title: intl.formatMessage(messages.Section),\n      description: intl.formatMessage(messages.SectionHelp),\n      type: 'boolean',\n    },\n    fitted: {\n      title: intl.formatMessage(messages.Fitted),\n      description: intl.formatMessage(messages.FittedHelp),\n      type: 'boolean',\n    },\n    short: {\n      title: intl.formatMessage(messages.Short),\n      description: intl.formatMessage(messages.ShortHelp),\n      type: 'boolean',\n    },\n  },\n  required: [],\n});\n\nexport const DividerStylingSchema = ({ intl }) => ({\n  title: intl.formatMessage(messages.Type),\n  block: 'divider',\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: ['theme', 'inverted'],\n    },\n  ],\n  properties: {\n    theme: {\n      title: intl.formatMessage(messages.Theme),\n      description: intl.formatMessage(messages.ThemeHelp),\n      choices: [\n        ['primary', intl.formatMessage(messages.ThemePrimary)],\n        ['secondary', intl.formatMessage(messages.ThemeSecondary)],\n        ['tertiary', intl.formatMessage(messages.ThemeTertiary)],\n      ],\n    },\n    inverted: {\n      title: intl.formatMessage(messages.Inverted),\n      description: intl.formatMessage(messages.InvertedHelp),\n      type: 'boolean',\n    },\n  },\n  required: [],\n});\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Divider","defaultMessage":"Divider"},{"id":"Title","defaultMessage":"Title"},{"id":"Divider friendly name","defaultMessage":"Divider friendly name"},{"id":"Text","defaultMessage":"Text"},{"id":"Text on top of the divider","defaultMessage":"Text on top of the divider"},{"id":"Hidden","defaultMessage":"Hidden"},{"id":"A hidden divider divides content without creating a dividing line.","defaultMessage":"A hidden divider divides content without creating a dividing line."},{"id":"Section","defaultMessage":"Section"},{"id":"A divider can provide greater margins to divide sections of content.","defaultMessage":"A divider can provide greater margins to divide sections of content."},{"id":"Short","defaultMessage":"Short"},{"id":"Shorter line","defaultMessage":"Shorter line"},{"id":"Fitted","defaultMessage":"Fitted"},{"id":"A divider can be fitted, without any space above or below it.","defaultMessage":"A divider can be fitted, without any space above or below it."},{"id":"Theme","defaultMessage":"Theme"},{"id":"Divider theme","defaultMessage":"Divider theme"},{"id":"Primary","defaultMessage":"Primary"},{"id":"Secondary","defaultMessage":"Secondary"},{"id":"Tertiary","defaultMessage":"Tertiary"},{"id":"Inverted","defaultMessage":"Inverted"},{"id":"A divider can have its colors inverted.","defaultMessage":"A divider can have its colors inverted."}]}},"sourceType":"module","externalDependencies":[]}