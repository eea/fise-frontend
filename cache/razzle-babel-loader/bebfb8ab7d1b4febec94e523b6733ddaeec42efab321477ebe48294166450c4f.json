{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Data Providers reducer\n * @module reducers/data_providers\n */\n\nimport { GET_INDEX_VALUES } from '../constants';\nvar initialState = {\n  error: null,\n  items: [],\n  loaded: false,\n  loading: false\n};\n\n/**\n * Data providers reducer.\n * @function mosaic_settings\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function index_values() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case \"\".concat(GET_INDEX_VALUES, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case \"\".concat(GET_INDEX_VALUES, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        items: action.result || [],\n        loaded: true,\n        loading: false\n      });\n    case \"\".concat(GET_INDEX_VALUES, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        items: [],\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_INDEX_VALUES","initialState","error","items","loaded","loading","index_values","state","action","type","result"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/reducers/index_values.js"],"sourcesContent":["/**\n * Data Providers reducer\n * @module reducers/data_providers\n */\n\nimport { GET_INDEX_VALUES } from '../constants';\n\nconst initialState = {\n  error: null,\n  items: [],\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Data providers reducer.\n * @function mosaic_settings\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function index_values(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_INDEX_VALUES}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${GET_INDEX_VALUES}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        items: action.result || [],\n        loaded: true,\n        loading: false,\n      };\n    case `${GET_INDEX_VALUES}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        items: [],\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA,SAASA,gBAAgB,QAAQ,cAAc;AAE/C,IAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,YAAY,GAAoC;EAAA,IAAnCC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM,uEAAG,CAAC,CAAC;EACpE,QAAQA,MAAM,CAACC,IAAI;IACjB,eAAQT,gBAAgB;MACtB,uCACKO,KAAK;QACRL,KAAK,EAAE,IAAI;QACXE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAEjB,eAAQL,gBAAgB;MACtB,uCACKO,KAAK;QACRL,KAAK,EAAE,IAAI;QACXC,KAAK,EAAEK,MAAM,CAACE,MAAM,IAAI,EAAE;QAC1BN,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MAAK;IAElB,eAAQL,gBAAgB;MACtB,uCACKO,KAAK;QACRL,KAAK,EAAEM,MAAM,CAACN,KAAK;QACnBC,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAK;IAElB;MACE,OAAOE,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}