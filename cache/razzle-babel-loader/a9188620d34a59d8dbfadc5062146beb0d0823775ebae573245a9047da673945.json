{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * User session reducer.\n * @module reducers/userSession/userSession\n */\n\nimport { LOGIN, LOGIN_RENEW, LOGOUT } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  token: null,\n  login: {\n    loaded: false,\n    loading: false,\n    error: null\n  }\n};\n\n/**\n * User session reducer.\n * @function userSession\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function userSession(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${LOGIN}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        token: null,\n        login: {\n          loading: true,\n          loaded: false,\n          error: null\n        }\n      });\n    case `${LOGIN}_SUCCESS`:\n    case `${LOGIN_RENEW}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        token: action.result.token,\n        login: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${LOGIN}_FAIL`:\n    case `${LOGIN_RENEW}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        token: null,\n        login: {\n          loading: false,\n          loaded: false,\n          error: action.error.response.error\n        }\n      });\n    case `${LOGOUT}_FAIL`:\n    case `${LOGOUT}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        token: null\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["LOGIN","LOGIN_RENEW","LOGOUT","initialState","token","login","loaded","loading","error","userSession","state","action","type","result","response"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/userSession/userSession.js"],"sourcesContent":["/**\n * User session reducer.\n * @module reducers/userSession/userSession\n */\n\nimport { LOGIN, LOGIN_RENEW, LOGOUT } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  token: null,\n  login: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n};\n\n/**\n * User session reducer.\n * @function userSession\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function userSession(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${LOGIN}_PENDING`:\n      return {\n        ...state,\n        token: null,\n        login: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${LOGIN}_SUCCESS`:\n    case `${LOGIN_RENEW}_SUCCESS`:\n      return {\n        ...state,\n        token: action.result.token,\n        login: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LOGIN}_FAIL`:\n    case `${LOGIN_RENEW}_FAIL`:\n      return {\n        ...state,\n        token: null,\n        login: {\n          loading: false,\n          loaded: false,\n          error: action.error.response.error,\n        },\n      };\n    case `${LOGOUT}_FAIL`:\n    case `${LOGOUT}_SUCCESS`:\n      return {\n        ...state,\n        token: null,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,SAASA,KAAK,EAAEC,WAAW,EAAEC,MAAM,QAAQ,oCAAoC;AAE/E,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE;IACLC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,WAAW,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,GAAG,CAAC,CAAC,EAAE;EACrE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAM,GAAEZ,KAAM,UAAS;MACrB,uCACKU,KAAK;QACRN,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE;UACLE,OAAO,EAAE,IAAI;UACbD,MAAM,EAAE,KAAK;UACbE,KAAK,EAAE;QACT;MAAC;IAEL,KAAM,GAAER,KAAM,UAAS;IACvB,KAAM,GAAEC,WAAY,UAAS;MAC3B,uCACKS,KAAK;QACRN,KAAK,EAAEO,MAAM,CAACE,MAAM,CAACT,KAAK;QAC1BC,KAAK,EAAE;UACLE,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,IAAI;UACZE,KAAK,EAAE;QACT;MAAC;IAEL,KAAM,GAAER,KAAM,OAAM;IACpB,KAAM,GAAEC,WAAY,OAAM;MACxB,uCACKS,KAAK;QACRN,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE;UACLE,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,KAAK;UACbE,KAAK,EAAEG,MAAM,CAACH,KAAK,CAACM,QAAQ,CAACN;QAC/B;MAAC;IAEL,KAAM,GAAEN,MAAO,OAAM;IACrB,KAAM,GAAEA,MAAO,UAAS;MACtB,uCACKQ,KAAK;QACRN,KAAK,EAAE;MAAI;IAEf;MACE,OAAOM,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}