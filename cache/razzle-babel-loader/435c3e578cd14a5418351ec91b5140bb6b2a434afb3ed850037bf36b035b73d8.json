{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-eea-map/src/components/widgets/MapEditorWidget.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Modal, Button, Grid } from 'semantic-ui-react';\nimport Webmap from '../Webmap';\nimport { FormFieldWrapper, InlineForm } from '@plone/volto/components';\nimport PanelsSchema from './panelsSchema';\nvar MapEditorWidget = function MapEditorWidget(props) {\n  _s();\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    open = _React$useState2[0],\n    setOpen = _React$useState2[1];\n  var _props$onChange = props.onChange,\n    onChange = _props$onChange === void 0 ? {} : _props$onChange,\n    id = props.id;\n  var block = React.useMemo(function () {\n    return props.block;\n  }, [props.block]);\n  var value = React.useMemo(function () {\n    return props.value;\n  }, [props.value]);\n  var _React$useState3 = React.useState(value),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    intValue = _React$useState4[0],\n    setIntValue = _React$useState4[1];\n  var dataForm = {\n    map_data: intValue\n  };\n  var handleApplyChanges = function handleApplyChanges() {\n    onChange(id, intValue);\n\n    //set map data for screenshot\n    // if (intValue.layers?.map_layers[0].map_layer?.map_service_url) {\n    //   onChange(\n    //     'url',\n    //     `${intValue.layers?.map_layers[0].map_layer?.map_service_url}?f=jsapi`,\n    //   );\n    // }\n    setOpen(false);\n  };\n  var handleClose = function handleClose() {\n    setIntValue(value);\n    setOpen(false);\n  };\n  var handleChangeField = function handleChangeField(id, fieldVal) {\n    setIntValue(fieldVal);\n  };\n  var schema = PanelsSchema({\n    data: dataForm\n  });\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), __jsx(Modal, {\n    id: \"map-editor-modal\",\n    className: \"map-editor-modal\",\n    onClose: handleClose,\n    onOpen: function onOpen() {\n      return setOpen(true);\n    },\n    open: open,\n    trigger: __jsx(Button, {\n      size: \"tiny\",\n      className: \"map-modal-trigger-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Open Map Editor\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(Modal.Content, {\n    scrolling: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    stackable: true,\n    reversed: \"mobile vertically tablet vertically\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(Grid.Column, {\n    mobile: 12,\n    tablet: 12,\n    computer: 5,\n    className: \"map-editor-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(InlineForm, {\n    block: block,\n    schema: schema,\n    onChangeField: function onChangeField(id, value) {\n      handleChangeField(id, value);\n    },\n    formData: dataForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  })), __jsx(Grid.Column, {\n    mobile: 12,\n    tablet: 12,\n    computer: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"webmap-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, __jsx(Webmap, {\n    data: intValue,\n    editMode: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }))))), __jsx(Modal.Actions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, __jsx(Grid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"map-edit-actions-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Close\"), __jsx(Button, {\n    color: \"green\",\n    onClick: handleApplyChanges,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Apply changes\")))))));\n};\n_s(MapEditorWidget, \"XpZfJZaN2CDHL0BKCm7R3DdIdho=\");\n_c = MapEditorWidget;\nexport default MapEditorWidget;\nvar _c;\n$RefreshReg$(_c, \"MapEditorWidget\");","map":{"version":3,"names":["React","Modal","Button","Grid","Webmap","FormFieldWrapper","InlineForm","PanelsSchema","MapEditorWidget","props","useState","open","setOpen","onChange","id","block","useMemo","value","intValue","setIntValue","dataForm","map_data","handleApplyChanges","handleClose","handleChangeField","fieldVal","schema","data"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-eea-map/src/components/widgets/MapEditorWidget.jsx"],"sourcesContent":["import React from 'react';\nimport { Modal, Button, Grid } from 'semantic-ui-react';\nimport Webmap from '../Webmap';\n\nimport { FormFieldWrapper, InlineForm } from '@plone/volto/components';\n\nimport PanelsSchema from './panelsSchema';\n\nconst MapEditorWidget = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const { onChange = {}, id } = props;\n  const block = React.useMemo(() => props.block, [props.block]);\n  const value = React.useMemo(() => props.value, [props.value]);\n\n  const [intValue, setIntValue] = React.useState(value);\n\n  const dataForm = { map_data: intValue };\n  const handleApplyChanges = () => {\n    onChange(id, intValue);\n\n    //set map data for screenshot\n    // if (intValue.layers?.map_layers[0].map_layer?.map_service_url) {\n    //   onChange(\n    //     'url',\n    //     `${intValue.layers?.map_layers[0].map_layer?.map_service_url}?f=jsapi`,\n    //   );\n    // }\n    setOpen(false);\n  };\n\n  const handleClose = () => {\n    setIntValue(value);\n    setOpen(false);\n  };\n\n  const handleChangeField = (id, fieldVal) => {\n    setIntValue(fieldVal);\n  };\n\n  let schema = PanelsSchema({ data: dataForm });\n  return (\n    <FormFieldWrapper {...props}>\n      <Modal\n        id=\"map-editor-modal\"\n        className=\"map-editor-modal\"\n        onClose={handleClose}\n        onOpen={() => setOpen(true)}\n        open={open}\n        trigger={\n          <Button size=\"tiny\" className=\"map-modal-trigger-button\">\n            Open Map Editor\n          </Button>\n        }\n      >\n        <Modal.Content scrolling>\n          <Grid stackable reversed=\"mobile vertically tablet vertically\">\n            <Grid.Column\n              mobile={12}\n              tablet={12}\n              computer={5}\n              className=\"map-editor-column\"\n            >\n              <InlineForm\n                block={block}\n                schema={schema}\n                onChangeField={(id, value) => {\n                  handleChangeField(id, value);\n                }}\n                formData={dataForm}\n              />\n            </Grid.Column>\n            <Grid.Column mobile={12} tablet={12} computer={7}>\n              <div className=\"webmap-container\">\n                <Webmap data={intValue} editMode={true} />\n              </div>\n            </Grid.Column>\n          </Grid>\n        </Modal.Content>\n        <Modal.Actions>\n          <Grid>\n            <Grid.Row>\n              <div className=\"map-edit-actions-container\">\n                <Button onClick={handleClose}>Close</Button>\n                <Button color=\"green\" onClick={handleApplyChanges}>\n                  Apply changes\n                </Button>\n              </div>\n            </Grid.Row>\n          </Grid>\n        </Modal.Actions>\n      </Modal>\n    </FormFieldWrapper>\n  );\n};\n\nexport default MapEditorWidget;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}