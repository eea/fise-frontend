{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Comments/CommentEditModal.jsx\";\nvar __jsx = React.createElement;\n/**\n * Comment edit modal.\n * @module components/theme/Comments/CommentEditModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { updateComment } from '@plone/volto/actions';\nimport { ModalForm } from '@plone/volto/components';\nvar messages = defineMessages({\n  editComment: {\n    \"id\": \"Edit comment\",\n    \"defaultMessage\": \"Edit comment\"\n  },\n  \"default\": {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  comment: {\n    \"id\": \"Comment\",\n    \"defaultMessage\": \"Comment\"\n  }\n});\n\n/**\n * CommentEditModal class.\n * @class CommentEditModal\n * @extends Component\n */\nvar CommentEditModal = /*#__PURE__*/function (_Component) {\n  _inherits(CommentEditModal, _Component);\n  var _super = _createSuper(CommentEditModal);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs CommentEditModal\n   */\n  function CommentEditModal(props) {\n    var _this;\n    _classCallCheck(this, CommentEditModal);\n    _this = _super.call(this, props);\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  _createClass(CommentEditModal, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.request.loading && nextProps.request.loaded) {\n        this.props.onOk();\n      }\n    }\n\n    /**\n     * Submit handler\n     * @method onSubmit\n     * @param {Object} data Form data\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(data) {\n      this.props.updateComment(this.props.id, data.text);\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.open && __jsx(ModalForm, {\n        open: this.props.open,\n        onSubmit: this.onSubmit,\n        onCancel: this.props.onCancel,\n        formData: {\n          text: this.props.text\n        },\n        title: this.props.intl.formatMessage(messages.editComment),\n        schema: {\n          fieldsets: [{\n            id: 'default',\n            title: this.props.intl.formatMessage(messages[\"default\"]),\n            fields: ['text']\n          }],\n          properties: {\n            text: {\n              title: this.props.intl.formatMessage(messages.comment),\n              type: 'string',\n              description: ''\n            }\n          },\n          required: ['text']\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n  return CommentEditModal;\n}(Component);\n_defineProperty(CommentEditModal, \"propTypes\", {\n  updateComment: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  text: PropTypes.string,\n  request: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  onOk: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n});\n_defineProperty(CommentEditModal, \"defaultProps\", {\n  id: '',\n  text: ''\n});\nexport default compose(injectIntl, connect(function (state) {\n  return {\n    request: state.comments.update\n  };\n}, {\n  updateComment: updateComment\n}))(CommentEditModal);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","defineMessages","injectIntl","updateComment","ModalForm","messages","editComment","comment","CommentEditModal","props","onSubmit","bind","nextProps","request","loading","loaded","onOk","data","id","text","open","onCancel","intl","formatMessage","fieldsets","title","fields","properties","type","description","required","func","isRequired","string","shape","bool","state","comments","update"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Comments/CommentEditModal.jsx"],"sourcesContent":["/**\n * Comment edit modal.\n * @module components/theme/Comments/CommentEditModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { updateComment } from '@plone/volto/actions';\nimport { ModalForm } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  editComment: {\n    id: 'Edit comment',\n    defaultMessage: 'Edit comment',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  comment: {\n    id: 'Comment',\n    defaultMessage: 'Comment',\n  },\n});\n\n/**\n * CommentEditModal class.\n * @class CommentEditModal\n * @extends Component\n */\nclass CommentEditModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateComment: PropTypes.func.isRequired,\n    id: PropTypes.string,\n    text: PropTypes.string,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    open: PropTypes.bool.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    id: '',\n    text: '',\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs CommentEditModal\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} data Form data\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.updateComment(this.props.id, data.text);\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      this.props.open && (\n        <ModalForm\n          open={this.props.open}\n          onSubmit={this.onSubmit}\n          onCancel={this.props.onCancel}\n          formData={{ text: this.props.text }}\n          title={this.props.intl.formatMessage(messages.editComment)}\n          schema={{\n            fieldsets: [\n              {\n                id: 'default',\n                title: this.props.intl.formatMessage(messages.default),\n                fields: ['text'],\n              },\n            ],\n            properties: {\n              text: {\n                title: this.props.intl.formatMessage(messages.comment),\n                type: 'string',\n                description: '',\n              },\n            },\n            required: ['text'],\n          }}\n        />\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      request: state.comments.update,\n    }),\n    { updateComment },\n  ),\n)(CommentEditModal);\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,cAAc,EAAEC,UAAU,QAAQ,YAAY;AAEvD,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,SAAS,QAAQ,yBAAyB;AAEnD,IAAMC,QAAQ,GAAGJ,cAAc,CAAC;EAC9BK,WAAW;IAAA;IAAA;EAAA,CAGV;EACD;IAAA;IAAA;EAAA,CAGC;EACDC,OAAO;IAAA;IAAA;EAAA;AAIT,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AAJA,IAKMC,gBAAgB;EAAA;EAAA;EACpB;AACF;AACA;AACA;AACA;;EAcE;AACF;AACA;AACA;AACA;;EAME;AACF;AACA;AACA;AACA;AACA;EACE,0BAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IACX,MAAKC,QAAQ,GAAG,MAAKA,QAAQ,CAACC,IAAI,+BAAM;IAAC;EAC3C;;EAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA;IAAA,OAMA,0CAAiCC,SAAS,EAAE;MAC1C,IAAI,IAAI,CAACH,KAAK,CAACI,OAAO,CAACC,OAAO,IAAIF,SAAS,CAACC,OAAO,CAACE,MAAM,EAAE;QAC1D,IAAI,CAACN,KAAK,CAACO,IAAI,EAAE;MACnB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA;IAAA,OAMA,kBAASC,IAAI,EAAE;MACb,IAAI,CAACR,KAAK,CAACN,aAAa,CAAC,IAAI,CAACM,KAAK,CAACS,EAAE,EAAED,IAAI,CAACE,IAAI,CAAC;IACpD;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,kBAAS;MACP,OACE,IAAI,CAACV,KAAK,CAACW,IAAI,IACb,MAAC,SAAS;QACR,IAAI,EAAE,IAAI,CAACX,KAAK,CAACW,IAAK;QACtB,QAAQ,EAAE,IAAI,CAACV,QAAS;QACxB,QAAQ,EAAE,IAAI,CAACD,KAAK,CAACY,QAAS;QAC9B,QAAQ,EAAE;UAAEF,IAAI,EAAE,IAAI,CAACV,KAAK,CAACU;QAAK,CAAE;QACpC,KAAK,EAAE,IAAI,CAACV,KAAK,CAACa,IAAI,CAACC,aAAa,CAAClB,QAAQ,CAACC,WAAW,CAAE;QAC3D,MAAM,EAAE;UACNkB,SAAS,EAAE,CACT;YACEN,EAAE,EAAE,SAAS;YACbO,KAAK,EAAE,IAAI,CAAChB,KAAK,CAACa,IAAI,CAACC,aAAa,CAAClB,QAAQ,WAAQ,CAAC;YACtDqB,MAAM,EAAE,CAAC,MAAM;UACjB,CAAC,CACF;UACDC,UAAU,EAAE;YACVR,IAAI,EAAE;cACJM,KAAK,EAAE,IAAI,CAAChB,KAAK,CAACa,IAAI,CAACC,aAAa,CAAClB,QAAQ,CAACE,OAAO,CAAC;cACtDqB,IAAI,EAAE,QAAQ;cACdC,WAAW,EAAE;YACf;UACF,CAAC;UACDC,QAAQ,EAAE,CAAC,MAAM;QACnB,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAEL;IAEL;EAAC;EAAA;AAAA,EAhG4BjC,SAAS;AAAA,gBAAlCW,gBAAgB,eAMD;EACjBL,aAAa,EAAEL,SAAS,CAACiC,IAAI,CAACC,UAAU;EACxCd,EAAE,EAAEpB,SAAS,CAACmC,MAAM;EACpBd,IAAI,EAAErB,SAAS,CAACmC,MAAM;EACtBpB,OAAO,EAAEf,SAAS,CAACoC,KAAK,CAAC;IACvBpB,OAAO,EAAEhB,SAAS,CAACqC,IAAI;IACvBpB,MAAM,EAAEjB,SAAS,CAACqC;EACpB,CAAC,CAAC,CAACH,UAAU;EACbZ,IAAI,EAAEtB,SAAS,CAACqC,IAAI,CAACH,UAAU;EAC/BhB,IAAI,EAAElB,SAAS,CAACiC,IAAI,CAACC,UAAU;EAC/BX,QAAQ,EAAEvB,SAAS,CAACiC,IAAI,CAACC;AAC3B,CAAC;AAAA,gBAjBGxB,gBAAgB,kBAwBE;EACpBU,EAAE,EAAE,EAAE;EACNC,IAAI,EAAE;AACR,CAAC;AAwEH,eAAenB,OAAO,CACpBE,UAAU,EACVH,OAAO,CACL,UAACqC,KAAK;EAAA,OAAM;IACVvB,OAAO,EAAEuB,KAAK,CAACC,QAAQ,CAACC;EAC1B,CAAC;AAAA,CAAC,EACF;EAAEnC,aAAa,EAAbA;AAAc,CAAC,CAClB,CACF,CAACK,gBAAgB,CAAC"},"metadata":{"react-intl":{"messages":[{"id":"Edit comment","defaultMessage":"Edit comment"},{"id":"Default","defaultMessage":"Default"},{"id":"Comment","defaultMessage":"Comment"}]}},"sourceType":"module","externalDependencies":[]}