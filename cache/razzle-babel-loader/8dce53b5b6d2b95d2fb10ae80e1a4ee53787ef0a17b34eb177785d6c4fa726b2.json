{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/error.jsx\";\nvar __jsx = React.createElement;\n/**\n * Error Page.\n * @module Error\n */\n\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\n/**\n * Error page.\n * @function Error\n * @returns {string} Markup of the error page.\n */\nconst Error = ({\n  message,\n  stackTrace\n}) => {\n  let history = useHistory();\n  return __jsx(\"div\", {\n    style: {\n      fontFamily: 'Helvetica, sans-serif',\n      fontSize: '20px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Sorry, something went wrong with your request\",\n    defaultMessage: \"Sorry, something went wrong with your request\\xA0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), __jsx(\"strong\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, message), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, stackTrace), __jsx(\"span\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    onClick: () => history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Navigate back\",\n    defaultMessage: \"Navigate back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"return to the site root\",\n    defaultMessage: \"return to the site root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"or try a different page.\",\n    defaultMessage: \"or try a different page.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }))));\n};\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n  stackTrace: PropTypes.string\n};\nError.defaultProps = {\n  stackTrace: null\n};\nexport default injectIntl(Error);","map":{"version":3,"names":["React","FormattedMessage","injectIntl","PropTypes","useHistory","Error","message","stackTrace","history","fontFamily","fontSize","display","flexDirection","justifyContent","alignItems","color","textAlign","goBack","propTypes","string","isRequired","defaultProps"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/error.jsx"],"sourcesContent":["/**\n * Error Page.\n * @module Error\n */\n\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\n/**\n * Error page.\n * @function Error\n * @returns {string} Markup of the error page.\n */\nconst Error = ({ message, stackTrace }) => {\n  let history = useHistory();\n\n  return (\n    <div\n      style={{\n        fontFamily: 'Helvetica, sans-serif',\n        fontSize: '20px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      {/* TODO: Replace inline styling with a CSS class, inline style only for __SERVER__ */}\n      <h2>\n        <FormattedMessage\n          id=\"Sorry, something went wrong with your request\"\n          defaultMessage=\"Sorry, something went wrong with your request&nbsp;\"\n        />\n      </h2>\n      <strong style={{ color: 'red' }}>{message}</strong>\n      <pre>{stackTrace}</pre>\n      <span style={{ textAlign: 'center' }}>\n        <p>\n          <button onClick={() => history.goBack()}>\n            <FormattedMessage\n              id=\"Navigate back\"\n              defaultMessage=\"Navigate back\"\n            />\n          </button>\n        </p>\n        <p>\n          <a href=\"/\">\n            <FormattedMessage\n              id=\"return to the site root\"\n              defaultMessage=\"return to the site root\"\n            />\n          </a>\n        </p>\n        <p>\n          <FormattedMessage\n            id=\"or try a different page.\"\n            defaultMessage=\"or try a different page.\"\n          />\n        </p>\n      </span>\n    </div>\n  );\n};\n\nError.propTypes = {\n  message: PropTypes.string.isRequired,\n  stackTrace: PropTypes.string,\n};\n\nError.defaultProps = {\n  stackTrace: null,\n};\n\nexport default injectIntl(Error);\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,UAAU,QAAQ,YAAY;AACzD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,UAAU,QAAQ,kBAAkB;;AAE7C;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAG,CAAC;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EACzC,IAAIC,OAAO,GAAGJ,UAAU,EAAE;EAE1B,OACE;IACE,KAAK,EAAE;MACLK,UAAU,EAAE,uBAAuB;MACnCC,QAAQ,EAAE,MAAM;MAChBC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE;IACd,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAGF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,gBAAgB;IACf,EAAE,EAAC,+CAA+C;IAClD,cAAc,EAAC,mDAAqD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACpE,CACC,EACL;IAAQ,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAET,OAAO,CAAU,EACnD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAMC,UAAU,CAAO,EACvB;IAAM,KAAK,EAAE;MAAES,SAAS,EAAE;IAAS,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAQ,OAAO,EAAE,MAAMR,OAAO,CAACS,MAAM,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACtC,MAAC,gBAAgB;IACf,EAAE,EAAC,eAAe;IAClB,cAAc,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC9B,CACK,CACP,EACJ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAG,IAAI,EAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACT,MAAC,gBAAgB;IACf,EAAE,EAAC,yBAAyB;IAC5B,cAAc,EAAC,yBAAyB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACxC,CACA,CACF,EACJ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,gBAAgB;IACf,EAAE,EAAC,0BAA0B;IAC7B,cAAc,EAAC,0BAA0B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACzC,CACA,CACC,CACH;AAEV,CAAC;AAEDZ,KAAK,CAACa,SAAS,GAAG;EAChBZ,OAAO,EAAEH,SAAS,CAACgB,MAAM,CAACC,UAAU;EACpCb,UAAU,EAAEJ,SAAS,CAACgB;AACxB,CAAC;AAEDd,KAAK,CAACgB,YAAY,GAAG;EACnBd,UAAU,EAAE;AACd,CAAC;AAED,eAAeL,UAAU,CAACG,KAAK,CAAC"},"metadata":{"react-intl":{"messages":[{"id":"Sorry, something went wrong with your request","defaultMessage":"Sorry, something went wrong with your requestÂ "},{"id":"Navigate back","defaultMessage":"Navigate back"},{"id":"return to the site root","defaultMessage":"return to the site root"},{"id":"or try a different page.","defaultMessage":"or try a different page."}]}},"sourceType":"module","externalDependencies":[]}