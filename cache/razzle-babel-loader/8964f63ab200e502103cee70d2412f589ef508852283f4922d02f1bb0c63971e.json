{"ast":null,"code":"import _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectWithoutProperties from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _omit from \"lodash/omit\";\nimport _isEqual from \"lodash/isEqual\";\nimport _isEmpty from \"lodash/isEmpty\";\nvar _excluded = [\"element\", \"attributes\", \"extras\"],\n  _excluded2 = [\"children\"];\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/serialize.js\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport cx from 'classnames';\nimport { Node, Text } from 'slate';\nimport config from '@plone/volto/registry';\nvar OMITTED = ['editor', 'path'];\n\n// TODO: read, see if relevant\n// https://reactjs.org/docs/higher-order-components.html#dont-use-hocs-inside-the-render-method\nexport var Element = function Element(_ref) {\n  var element = _ref.element,\n    _ref$attributes = _ref.attributes,\n    attributes = _ref$attributes === void 0 ? {} : _ref$attributes,\n    extras = _ref.extras,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var slate = config.settings.slate;\n  var elements = slate.elements;\n  var El = elements[element.type] || elements['default'];\n  var out = Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.keys(attributes || {}).map(function (k) {\n    return !_isEmpty(attributes[k]) ? _defineProperty({}, k, attributes[k]) : {};\n  }))));\n  return __jsx(El, _extends({\n    element: element\n  }, _omit(rest, OMITTED), {\n    attributes: out,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  }));\n};\n_c = Element;\nexport var Leaf = function Leaf(_ref3) {\n  var _obj;\n  var children = _ref3.children,\n    rest = _objectWithoutProperties(_ref3, _excluded2);\n  var attributes = rest.attributes,\n    leaf = rest.leaf,\n    mode = rest.mode;\n  var leafs = config.settings.slate.leafs;\n  children = Object.keys(leafs).reduce(function (acc, name) {\n    return Object.keys(leaf).includes(name) ? leafs[name]({\n      children: acc\n    }) : acc;\n  }, children);\n  var obj = (_obj = {}, _defineProperty(_obj, \"highlight-\".concat(leaf.highlightType), mode !== 'view' && leaf.highlight), _defineProperty(_obj, 'highlight-selection', mode !== 'view' && leaf.isSelection), _obj);\n\n  // stylemenu support\n  for (var prop in leaf) {\n    if (prop.startsWith('style-')) {\n      obj[prop.substring(6)] = true;\n    }\n  }\n  var klass = cx(obj);\n  return mode === 'view' ? typeof children === 'string' ? children.split('\\n').map(function (t, i) {\n    // Softbreak support. Should do a plugin?\n    return __jsx(React.Fragment, {\n      key: \"\".concat(i),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, children.indexOf('\\n') > -1 && children.split('\\n').length - 1 > i ? __jsx(React.Fragment, null, klass ? __jsx(\"span\", {\n      className: klass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 26\n      }\n    }, t) : t, __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    })) : klass ? __jsx(\"span\", {\n      className: klass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, t) : t);\n  }) : __jsx(\"span\", {\n    className: klass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, children) : __jsx(\"span\", _extends({}, attributes, {\n    className: klass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }), children);\n};\n_c2 = Leaf;\nvar serializeData = function serializeData(node) {\n  return JSON.stringify({\n    type: node.type,\n    data: node.data\n  });\n};\nexport var serializeNodes = function serializeNodes(nodes, getAttributes) {\n  var editor = {\n    children: nodes || []\n  };\n  var _serializeNodes = function _serializeNodes(nodes) {\n    return (nodes || []).map(function (_ref4, i) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n        node = _ref5[0],\n        path = _ref5[1];\n      return Text.isText(node) ? __jsx(Leaf, {\n        path: path,\n        leaf: node,\n        text: node,\n        mode: \"view\",\n        key: path,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, node.text) : __jsx(Element, {\n        path: path,\n        element: node,\n        mode: \"view\",\n        key: path,\n        \"data-slate-data\": node.data ? serializeData(node) : null,\n        attributes: _isEqual(path, [0]) ? getAttributes ? getAttributes(node, path) : null : null,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, _serializeNodes(Array.from(Node.children(editor, path))));\n    });\n  };\n  return _serializeNodes(Array.from(Node.children(editor, [])));\n};\nexport var serializeNodesToText = function serializeNodesToText(nodes) {\n  return nodes.map(function (n) {\n    return Node.string(n);\n  }).join('\\n');\n};\nexport var serializeNodesToHtml = function serializeNodesToHtml(nodes) {\n  return renderToStaticMarkup(serializeNodes(nodes));\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"Element\");\n$RefreshReg$(_c2, \"Leaf\");","map":{"version":3,"names":["React","renderToStaticMarkup","cx","Node","Text","config","OMITTED","Element","element","attributes","extras","rest","slate","settings","elements","El","type","out","Object","assign","keys","map","k","Leaf","children","leaf","mode","leafs","reduce","acc","name","includes","obj","highlightType","highlight","isSelection","prop","startsWith","substring","klass","split","t","i","indexOf","length","serializeData","node","JSON","stringify","data","serializeNodes","nodes","getAttributes","editor","_serializeNodes","path","isText","text","Array","from","serializeNodesToText","n","string","join","serializeNodesToHtml"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/serialize.js"],"sourcesContent":["import React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport cx from 'classnames';\nimport { isEmpty, isEqual, omit } from 'lodash';\nimport { Node, Text } from 'slate';\nimport config from '@plone/volto/registry';\n\nconst OMITTED = ['editor', 'path'];\n\n// TODO: read, see if relevant\n// https://reactjs.org/docs/higher-order-components.html#dont-use-hocs-inside-the-render-method\nexport const Element = ({ element, attributes = {}, extras, ...rest }) => {\n  const { slate } = config.settings;\n  const { elements } = slate;\n  const El = elements[element.type] || elements['default'];\n\n  const out = Object.assign(\n    {},\n    ...Object.keys(attributes || {}).map((k) =>\n      !isEmpty(attributes[k]) ? { [k]: attributes[k] } : {},\n    ),\n  );\n  return <El element={element} {...omit(rest, OMITTED)} attributes={out} />;\n};\n\nexport const Leaf = ({ children, ...rest }) => {\n  const { attributes, leaf, mode } = rest;\n  let { leafs } = config.settings.slate;\n\n  children = Object.keys(leafs).reduce((acc, name) => {\n    return Object.keys(leaf).includes(name)\n      ? leafs[name]({ children: acc })\n      : acc;\n  }, children);\n\n  const obj = {\n    [`highlight-${leaf.highlightType}`]: mode !== 'view' && leaf.highlight,\n    'highlight-selection': mode !== 'view' && leaf.isSelection,\n  };\n\n  // stylemenu support\n  for (const prop in leaf) {\n    if (prop.startsWith('style-')) {\n      obj[prop.substring(6)] = true;\n    }\n  }\n\n  const klass = cx(obj);\n\n  return mode === 'view' ? (\n    typeof children === 'string' ? (\n      children.split('\\n').map((t, i) => {\n        // Softbreak support. Should do a plugin?\n        return (\n          <React.Fragment key={`${i}`}>\n            {children.indexOf('\\n') > -1 &&\n            children.split('\\n').length - 1 > i ? (\n              <>\n                {klass ? <span className={klass}>{t}</span> : t}\n                <br />\n              </>\n            ) : klass ? (\n              <span className={klass}>{t}</span>\n            ) : (\n              t\n            )}\n          </React.Fragment>\n        );\n      })\n    ) : (\n      <span className={klass}>{children}</span>\n    )\n  ) : (\n    <span {...attributes} className={klass}>\n      {children}\n    </span>\n  );\n};\n\nconst serializeData = (node) => {\n  return JSON.stringify({ type: node.type, data: node.data });\n};\n\nexport const serializeNodes = (nodes, getAttributes) => {\n  const editor = { children: nodes || [] };\n\n  const _serializeNodes = (nodes) => {\n    return (nodes || []).map(([node, path], i) => {\n      return Text.isText(node) ? (\n        <Leaf path={path} leaf={node} text={node} mode=\"view\" key={path}>\n          {node.text}\n        </Leaf>\n      ) : (\n        <Element\n          path={path}\n          element={node}\n          mode=\"view\"\n          key={path}\n          data-slate-data={node.data ? serializeData(node) : null}\n          attributes={\n            isEqual(path, [0])\n              ? getAttributes\n                ? getAttributes(node, path)\n                : null\n              : null\n          }\n        >\n          {_serializeNodes(Array.from(Node.children(editor, path)))}\n        </Element>\n      );\n    });\n  };\n\n  return _serializeNodes(Array.from(Node.children(editor, [])));\n};\n\nexport const serializeNodesToText = (nodes) => {\n  return nodes.map((n) => Node.string(n)).join('\\n');\n};\n\nexport const serializeNodesToHtml = (nodes) =>\n  renderToStaticMarkup(serializeNodes(nodes));\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}