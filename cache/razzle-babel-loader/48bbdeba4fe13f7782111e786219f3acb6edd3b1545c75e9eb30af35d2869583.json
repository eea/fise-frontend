{"ast":null,"code":"/**\n * Toolbar reducer.\n * @module reducers/toolbar/toolbar\n */\n\nimport { EXPAND_TOOLBAR } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  expanded: false\n};\n\n/**\n * Toolbar reducer.\n * @function toolbar\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function toolbar(state = initialState, action = {}) {\n  switch (action.type) {\n    case EXPAND_TOOLBAR:\n      return {\n        expanded: action.isExpanded\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["EXPAND_TOOLBAR","initialState","expanded","toolbar","state","action","type","isExpanded"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/toolbar/toolbar.js"],"sourcesContent":["/**\n * Toolbar reducer.\n * @module reducers/toolbar/toolbar\n */\n\nimport { EXPAND_TOOLBAR } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  expanded: false,\n};\n\n/**\n * Toolbar reducer.\n * @function toolbar\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function toolbar(state = initialState, action = {}) {\n  switch (action.type) {\n    case EXPAND_TOOLBAR:\n      return {\n        expanded: action.isExpanded,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,QAAQ,oCAAoC;AAEnE,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,OAAO,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,GAAG,CAAC,CAAC,EAAE;EACjE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,cAAc;MACjB,OAAO;QACLE,QAAQ,EAAEG,MAAM,CAACE;MACnB,CAAC;IACH;MACE,OAAOH,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}