{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/editor/config.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport boldIcon from '@plone/volto/icons/bold.svg';\nimport codeIcon from '@plone/volto/icons/code.svg';\nimport formatClearIcon from '@plone/volto/icons/format-clear.svg';\nimport headingIcon from '@plone/volto/icons/heading.svg';\nimport italicIcon from '@plone/volto/icons/italic.svg';\nimport listBulletIcon from '@plone/volto/icons/list-bullet.svg';\nimport listNumberedIcon from '@plone/volto/icons/list-numbered.svg';\nimport subheadingIcon from '@plone/volto/icons/subheading.svg';\nimport subTextIcon from '@plone/volto/icons/subtext.svg';\nimport underlineIcon from '@plone/volto/icons/underline.svg';\nimport strikethroughIcon from '@plone/volto/icons/strikethrough.svg';\nimport subindexIcon from '@plone/volto/icons/subindex.svg';\nimport superindexIcon from '@plone/volto/icons/superindex.svg';\nimport { createEmptyParagraph } from 'volto-slate/utils';\nimport { MarkButton, MarkElementButton, BlockButton, ClearFormattingButton, Separator, Expando } from './ui';\nimport { highlightSelection } from './decorate'; // highlightByType,\nimport { insertData, isInline, withDeleteSelectionOnEnter, withDeserializers, normalizeNode } from './extensions';\nimport {\n// inlineTagDeserializer,\nbodyTagDeserializer, blockTagDeserializer, preTagDeserializer, spanTagDeserializer, bTagDeserializer, codeTagDeserializer } from './deserialize';\n\n// Registry of available buttons\nexport var buttons = {\n  bold: function bold(props) {\n    return __jsx(MarkElementButton, _extends({\n      title: \"Bold\",\n      format: \"strong\",\n      icon: boldIcon\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }));\n  },\n  italic: function italic(props) {\n    return __jsx(MarkElementButton, _extends({\n      title: \"Italic\",\n      format: \"em\",\n      icon: italicIcon\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }));\n  },\n  underline: function underline(props) {\n    return __jsx(MarkElementButton, _extends({\n      title: \"Underline\",\n      format: \"u\",\n      icon: underlineIcon\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }));\n  },\n  strikethrough: function strikethrough(props) {\n    return __jsx(MarkElementButton, _extends({\n      title: \"Strikethrough\",\n      format: \"del\",\n      icon: strikethroughIcon\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    }));\n  },\n  sub: function sub(props) {\n    return __jsx(MarkElementButton, _extends({\n      title: \"Subscript\",\n      format: \"sub\",\n      icon: subindexIcon\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }));\n  },\n  sup: function sup(props) {\n    return __jsx(MarkElementButton, _extends({\n      title: \"Superscript\",\n      format: \"sup\",\n      icon: superindexIcon\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }\n    }));\n  },\n  code: function code(props) {\n    return __jsx(MarkButton, _extends({\n      title: \"Code\",\n      format: \"code\",\n      icon: codeIcon\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }));\n  },\n  'heading-two': function headingTwo(props) {\n    return __jsx(BlockButton, _extends({\n      title: \"Title\",\n      format: \"h2\",\n      icon: headingIcon\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }));\n  },\n  'heading-three': function headingThree(props) {\n    return __jsx(BlockButton, _extends({\n      title: \"Subtitle\",\n      format: \"h3\",\n      icon: subheadingIcon\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }\n    }));\n  },\n  'heading-four': function headingFour(props) {\n    return __jsx(BlockButton, _extends({\n      title: \"Heading 4\",\n      format: \"h4\",\n      icon: subTextIcon\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    }));\n  },\n  clearformatting: function clearformatting(props) {\n    return __jsx(ClearFormattingButton, {\n      title: \"Clear formatting\",\n      icon: formatClearIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    });\n  },\n  'numbered-list': function numberedList(props) {\n    return __jsx(BlockButton, _extends({\n      title: \"Numbered list\",\n      format: \"ol\",\n      icon: listNumberedIcon\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }\n    }));\n  },\n  'bulleted-list': function bulletedList(props) {\n    return __jsx(BlockButton, {\n      title: \"Bulleted list\",\n      format: \"ul\",\n      icon: listBulletIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }\n    });\n  },\n  separator: function separator(props) {\n    return __jsx(Separator, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    });\n  },\n  expando: function expando(props) {\n    return __jsx(Expando, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 23\n      }\n    });\n  }\n};\nexport var defaultToolbarButtons = ['bold', 'italic', 'underline', 'strikethrough', 'separator', 'heading-two', 'heading-three', 'heading-four', 'separator', 'clearformatting', 'separator', 'sub', 'sup', 'separator', 'bulleted-list', 'numbered-list'];\nexport var toolbarButtons = [].concat(defaultToolbarButtons);\nexport var expandedToolbarButtons = [].concat(defaultToolbarButtons);\n\n// These components are rendered in the toolbar on demand, as configured by\n// plugins.  They are rendered as \"context\" buttons, when there is no selection\n// Each one is a function (editor) => (<Component/> or null). It is important\n// to be able to tell if a plugin would return something because we don't want\n// to render the toolbar at all if there's no children (due to CSS reasons).\nexport var contextToolbarButtons = [];\n\n// Each Element node type available in the editor can be configured to have\n// specific toolbar buttons shown above the element of that type when it\n// contains the selection. The Table plugin of SlateEditor uses this to put a\n// Delete table button above the currently selected table.\nexport var elementToolbarButtons = {};\n\n// A set of components that are always rendered, unlike the button variety.\n// They make it possible to orchestrate form-based editing of components\nexport var persistentHelpers = [];\n\n// The slate editor is \"decorated\" with the capabilities from this list.\n// While Slate calls them plugins, we use \"extension\" to avoid confusion.\n// A Volto Slate editor plugins adds more functionality: buttons, new elements,\n// etc.\n// Each extension is a simple mutator function with signature: `editor => editor`.\n// See https://docs.slatejs.org/concepts/07-plugins and\n// https://docs.slatejs.org/concepts/06-editor\n//\n// First here gets executed last, so if you want to override behavior, push new\n// extensions to the end of this list, to rely on default behavior implemented\n// here.\nexport var extensions = [withDeleteSelectionOnEnter, withDeserializers, insertData, isInline, normalizeNode];\n\n// Default hotkeys and the format they trigger\nexport var hotkeys = {\n  'mod+b': {\n    format: 'strong',\n    type: 'inline'\n  },\n  'mod+i': {\n    format: 'em',\n    type: 'inline'\n  },\n  'mod+u': {\n    format: 'u',\n    type: 'inline'\n  },\n  'mod+s': {\n    format: 'del',\n    type: 'inline'\n  }\n  // 'mod+`': { format: 'code', type: 'inline' },\n  // TODO: more hotkeys, including from plugins!\n};\n\n// Raw shortcut/keydown handlers\nexport var keyDownHandlers = {};\n\n// Paragraphs (as default type of blocks) and lists need special handling\nexport var listTypes = ['ul', 'ol'];\nexport var listItemType = 'li';\nexport var tableTypes = ['table', 'tbody', 'thead', 'tfoot', 'tr', 'td', 'th'];\nexport var defaultBlockType = 'p';\n\n// Default rendered elements\n// TODO: expose the IDs in constants.js, for uniformity\nexport var elements = {\n  \"default\": function _default(_ref) {\n    var attributes = _ref.attributes,\n      children = _ref.children;\n    return __jsx(\"p\", _extends({}, attributes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 42\n      }\n    }), children);\n  },\n  h1: function h1(_ref2) {\n    var attributes = _ref2.attributes,\n      children = _ref2.children;\n    return __jsx(\"h1\", _extends({}, attributes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 37\n      }\n    }), children);\n  },\n  h2: function h2(_ref3) {\n    var attributes = _ref3.attributes,\n      children = _ref3.children;\n    return __jsx(\"h2\", _extends({}, attributes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 37\n      }\n    }), children);\n  },\n  h3: function h3(_ref4) {\n    var attributes = _ref4.attributes,\n      children = _ref4.children;\n    return __jsx(\"h3\", _extends({}, attributes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 37\n      }\n    }), children);\n  },\n  h4: function h4(_ref5) {\n    var attributes = _ref5.attributes,\n      children = _ref5.children;\n    return __jsx(\"h4\", _extends({}, attributes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 37\n      }\n    }), children);\n  },\n  li: function li(_ref6) {\n    var attributes = _ref6.attributes,\n      children = _ref6.children;\n    return __jsx(\"li\", _extends({}, attributes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 37\n      }\n    }), children);\n  },\n  ol: function ol(_ref7) {\n    var attributes = _ref7.attributes,\n      children = _ref7.children;\n    return __jsx(\"ol\", _extends({}, attributes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 37\n      }\n    }), children);\n  },\n  ul: function ul(_ref8) {\n    var attributes = _ref8.attributes,\n      children = _ref8.children;\n    return __jsx(\"ul\", _extends({}, attributes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 12\n      }\n    }), children);\n  },\n  div: function div(_ref9) {\n    var attributes = _ref9.attributes,\n      children = _ref9.children;\n    return __jsx(\"div\", _extends({}, attributes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 38\n      }\n    }), children);\n  },\n  p: function p(_ref10) {\n    var attributes = _ref10.attributes,\n      children = _ref10.children;\n    return __jsx(\"p\", _extends({}, attributes, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 12\n      }\n    }), children);\n  },\n  // While usual slate editor consider these to be Leafs, we treat them as\n  // inline elements because they can sometimes contain elements (ex:\n  // <b><a/></b>\n  em: function em(_ref11) {\n    var children = _ref11.children;\n    return __jsx(\"em\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    }, children);\n  },\n  i: function i(_ref12) {\n    var children = _ref12.children;\n    return __jsx(\"i\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 24\n      }\n    }, children);\n  },\n  b: function b(_ref13) {\n    var children = _ref13.children;\n    return __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 12\n      }\n    }, children);\n  },\n  strong: function strong(_ref14) {\n    var children = _ref14.children;\n    return __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 12\n      }\n    }, children);\n  },\n  u: function u(_ref15) {\n    var children = _ref15.children;\n    return __jsx(\"u\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 24\n      }\n    }, children);\n  },\n  s: function s(_ref16) {\n    var children = _ref16.children;\n    return __jsx(\"del\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 24\n      }\n    }, children);\n  },\n  del: function del(_ref17) {\n    var children = _ref17.children;\n    return __jsx(\"del\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 26\n      }\n    }, children);\n  },\n  sub: function sub(_ref18) {\n    var children = _ref18.children;\n    return __jsx(\"sub\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 26\n      }\n    }, children);\n  },\n  sup: function sup(_ref19) {\n    var children = _ref19.children;\n    return __jsx(\"sup\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 26\n      }\n    }, children);\n  },\n  code: function code(_ref20) {\n    var children = _ref20.children;\n    return __jsx(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 27\n      }\n    }, children);\n  }\n};\nexport var inlineElements = ['em', 'i', 'b', 'strong', 'u', 'del', 'sub', 'sup', 'code'];\n\n// Order of definition here is important (higher = inner element)\nexport var leafs = {\n  // code: ({ children }) => {\n  //   return <code>{children}</code>;\n  // },\n};\nexport var defaultValue = function defaultValue() {\n  return [createEmptyParagraph()];\n};\n\n// HTML deserialization (html -> slate data conversion)\n// These are used in clipboard paste handling\n// Any tag that is not listed here (or added by a plugin) will be stripped\n// (its children will be rendered, though)\nexport var htmlTagsToSlate = {\n  B: bTagDeserializer,\n  BODY: bodyTagDeserializer,\n  CODE: codeTagDeserializer,\n  PRE: preTagDeserializer,\n  SPAN: spanTagDeserializer,\n  BLOCKQUOTE: blockTagDeserializer('blockquote'),\n  DEL: blockTagDeserializer('del'),\n  EM: blockTagDeserializer('em'),\n  H1: blockTagDeserializer('h1'),\n  H2: blockTagDeserializer('h2'),\n  H3: blockTagDeserializer('h3'),\n  H4: blockTagDeserializer('h4'),\n  H5: blockTagDeserializer('h5'),\n  H6: blockTagDeserializer('h6'),\n  I: blockTagDeserializer('i'),\n  P: blockTagDeserializer('p'),\n  S: blockTagDeserializer('del'),\n  STRONG: blockTagDeserializer('strong'),\n  SUB: blockTagDeserializer('sub'),\n  SUP: blockTagDeserializer('sup'),\n  U: blockTagDeserializer('u'),\n  OL: blockTagDeserializer('ol'),\n  UL: blockTagDeserializer('ul'),\n  LI: blockTagDeserializer('li')\n};\n\n// Adds \"highlight\" decoration in the editor. Used by `highlightByType`\n// See the Footnote plugin for an example.\nexport var nodeTypesToHighlight = [];\n\n// \"Runtime\" decorator functions. These are transient decorations that are\n// applied in the editor. They are not persisted in the final value, so they\n// are useful for example to highlight search results or a certain type of node\n// Signature: ([node, path], ranges) => ranges\nexport var runtimeDecorators = [highlightSelection]; // , highlightByType","map":{"version":3,"names":["React","boldIcon","codeIcon","formatClearIcon","headingIcon","italicIcon","listBulletIcon","listNumberedIcon","subheadingIcon","subTextIcon","underlineIcon","strikethroughIcon","subindexIcon","superindexIcon","createEmptyParagraph","MarkButton","MarkElementButton","BlockButton","ClearFormattingButton","Separator","Expando","highlightSelection","insertData","isInline","withDeleteSelectionOnEnter","withDeserializers","normalizeNode","bodyTagDeserializer","blockTagDeserializer","preTagDeserializer","spanTagDeserializer","bTagDeserializer","codeTagDeserializer","buttons","bold","props","italic","underline","strikethrough","sub","sup","code","clearformatting","separator","expando","defaultToolbarButtons","toolbarButtons","expandedToolbarButtons","contextToolbarButtons","elementToolbarButtons","persistentHelpers","extensions","hotkeys","format","type","keyDownHandlers","listTypes","listItemType","tableTypes","defaultBlockType","elements","attributes","children","h1","h2","h3","h4","li","ol","ul","div","p","em","i","b","strong","u","s","del","inlineElements","leafs","defaultValue","htmlTagsToSlate","B","BODY","CODE","PRE","SPAN","BLOCKQUOTE","DEL","EM","H1","H2","H3","H4","H5","H6","I","P","S","STRONG","SUB","SUP","U","OL","UL","LI","nodeTypesToHighlight","runtimeDecorators"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/editor/config.jsx"],"sourcesContent":["import React from 'react';\n\nimport boldIcon from '@plone/volto/icons/bold.svg';\nimport codeIcon from '@plone/volto/icons/code.svg';\nimport formatClearIcon from '@plone/volto/icons/format-clear.svg';\nimport headingIcon from '@plone/volto/icons/heading.svg';\nimport italicIcon from '@plone/volto/icons/italic.svg';\nimport listBulletIcon from '@plone/volto/icons/list-bullet.svg';\nimport listNumberedIcon from '@plone/volto/icons/list-numbered.svg';\nimport subheadingIcon from '@plone/volto/icons/subheading.svg';\nimport subTextIcon from '@plone/volto/icons/subtext.svg';\nimport underlineIcon from '@plone/volto/icons/underline.svg';\nimport strikethroughIcon from '@plone/volto/icons/strikethrough.svg';\nimport subindexIcon from '@plone/volto/icons/subindex.svg';\nimport superindexIcon from '@plone/volto/icons/superindex.svg';\n\nimport { createEmptyParagraph } from 'volto-slate/utils';\n\nimport {\n  MarkButton,\n  MarkElementButton,\n  BlockButton,\n  ClearFormattingButton,\n  Separator,\n  Expando,\n} from './ui';\nimport { highlightSelection } from './decorate'; // highlightByType,\nimport {\n  insertData,\n  isInline,\n  withDeleteSelectionOnEnter,\n  withDeserializers,\n  normalizeNode,\n} from './extensions';\nimport {\n  // inlineTagDeserializer,\n  bodyTagDeserializer,\n  blockTagDeserializer,\n  preTagDeserializer,\n  spanTagDeserializer,\n  bTagDeserializer,\n  codeTagDeserializer,\n} from './deserialize';\n\n// Registry of available buttons\nexport const buttons = {\n  bold: (props) => (\n    <MarkElementButton\n      title=\"Bold\"\n      format=\"strong\"\n      icon={boldIcon}\n      {...props}\n    />\n  ),\n  italic: (props) => (\n    <MarkElementButton\n      title=\"Italic\"\n      format=\"em\"\n      icon={italicIcon}\n      {...props}\n    />\n  ),\n  underline: (props) => (\n    <MarkElementButton\n      title=\"Underline\"\n      format=\"u\"\n      icon={underlineIcon}\n      {...props}\n    />\n  ),\n  strikethrough: (props) => (\n    <MarkElementButton\n      title=\"Strikethrough\"\n      format=\"del\"\n      icon={strikethroughIcon}\n      {...props}\n    />\n  ),\n  sub: (props) => (\n    <MarkElementButton\n      title=\"Subscript\"\n      format=\"sub\"\n      icon={subindexIcon}\n      {...props}\n    />\n  ),\n  sup: (props) => (\n    <MarkElementButton\n      title=\"Superscript\"\n      format=\"sup\"\n      icon={superindexIcon}\n      {...props}\n    />\n  ),\n  code: (props) => (\n    <MarkButton title=\"Code\" format=\"code\" icon={codeIcon} {...props} />\n  ),\n  'heading-two': (props) => (\n    <BlockButton title=\"Title\" format=\"h2\" icon={headingIcon} {...props} />\n  ),\n  'heading-three': (props) => (\n    <BlockButton\n      title=\"Subtitle\"\n      format=\"h3\"\n      icon={subheadingIcon}\n      {...props}\n    />\n  ),\n  'heading-four': (props) => (\n    <BlockButton title=\"Heading 4\" format=\"h4\" icon={subTextIcon} {...props} />\n  ),\n  clearformatting: (props) => (\n    <ClearFormattingButton title=\"Clear formatting\" icon={formatClearIcon} />\n  ),\n  'numbered-list': (props) => (\n    <BlockButton\n      title=\"Numbered list\"\n      format=\"ol\"\n      icon={listNumberedIcon}\n      {...props}\n    />\n  ),\n  'bulleted-list': (props) => (\n    <BlockButton title=\"Bulleted list\" format=\"ul\" icon={listBulletIcon} />\n  ),\n  separator: (props) => <Separator />,\n  expando: (props) => <Expando />,\n};\n\nexport const defaultToolbarButtons = [\n  'bold',\n  'italic',\n  'underline',\n  'strikethrough',\n  'separator',\n  'heading-two',\n  'heading-three',\n  'heading-four',\n  'separator',\n  'clearformatting',\n  'separator',\n  'sub',\n  'sup',\n  'separator',\n  'bulleted-list',\n  'numbered-list',\n];\n\nexport const toolbarButtons = [...defaultToolbarButtons];\n\nexport const expandedToolbarButtons = [...defaultToolbarButtons];\n\n// These components are rendered in the toolbar on demand, as configured by\n// plugins.  They are rendered as \"context\" buttons, when there is no selection\n// Each one is a function (editor) => (<Component/> or null). It is important\n// to be able to tell if a plugin would return something because we don't want\n// to render the toolbar at all if there's no children (due to CSS reasons).\nexport const contextToolbarButtons = [];\n\n// Each Element node type available in the editor can be configured to have\n// specific toolbar buttons shown above the element of that type when it\n// contains the selection. The Table plugin of SlateEditor uses this to put a\n// Delete table button above the currently selected table.\nexport const elementToolbarButtons = {};\n\n// A set of components that are always rendered, unlike the button variety.\n// They make it possible to orchestrate form-based editing of components\nexport const persistentHelpers = [];\n\n// The slate editor is \"decorated\" with the capabilities from this list.\n// While Slate calls them plugins, we use \"extension\" to avoid confusion.\n// A Volto Slate editor plugins adds more functionality: buttons, new elements,\n// etc.\n// Each extension is a simple mutator function with signature: `editor => editor`.\n// See https://docs.slatejs.org/concepts/07-plugins and\n// https://docs.slatejs.org/concepts/06-editor\n//\n// First here gets executed last, so if you want to override behavior, push new\n// extensions to the end of this list, to rely on default behavior implemented\n// here.\nexport const extensions = [\n  withDeleteSelectionOnEnter,\n  withDeserializers,\n  insertData,\n  isInline,\n  normalizeNode,\n];\n\n// Default hotkeys and the format they trigger\nexport const hotkeys = {\n  'mod+b': { format: 'strong', type: 'inline' },\n  'mod+i': { format: 'em', type: 'inline' },\n  'mod+u': { format: 'u', type: 'inline' },\n  'mod+s': { format: 'del', type: 'inline' },\n  // 'mod+`': { format: 'code', type: 'inline' },\n  // TODO: more hotkeys, including from plugins!\n};\n\n// Raw shortcut/keydown handlers\nexport const keyDownHandlers = {};\n\n// Paragraphs (as default type of blocks) and lists need special handling\nexport const listTypes = ['ul', 'ol'];\nexport const listItemType = 'li';\nexport const tableTypes = [\n  'table',\n  'tbody',\n  'thead',\n  'tfoot',\n  'tr',\n  'td',\n  'th',\n];\nexport const defaultBlockType = 'p';\n\n// Default rendered elements\n// TODO: expose the IDs in constants.js, for uniformity\nexport const elements = {\n  default: ({ attributes, children }) => <p {...attributes}>{children}</p>,\n\n  h1: ({ attributes, children }) => <h1 {...attributes}>{children}</h1>,\n  h2: ({ attributes, children }) => <h2 {...attributes}>{children}</h2>,\n  h3: ({ attributes, children }) => <h3 {...attributes}>{children}</h3>,\n  h4: ({ attributes, children }) => <h4 {...attributes}>{children}</h4>,\n\n  li: ({ attributes, children }) => <li {...attributes}>{children}</li>,\n  ol: ({ attributes, children }) => <ol {...attributes}>{children}</ol>,\n  ul: ({ attributes, children }) => {\n    return <ul {...attributes}>{children}</ul>;\n  },\n\n  div: ({ attributes, children }) => <div {...attributes}>{children}</div>,\n  p: ({ attributes, children }) => {\n    return <p {...attributes}>{children}</p>;\n  },\n\n  // While usual slate editor consider these to be Leafs, we treat them as\n  // inline elements because they can sometimes contain elements (ex:\n  // <b><a/></b>\n  em: ({ children }) => <em>{children}</em>,\n  i: ({ children }) => <i>{children}</i>,\n  b: ({ children }) => {\n    return <b>{children}</b>;\n  },\n  strong: ({ children }) => {\n    return <strong>{children}</strong>;\n  },\n  u: ({ children }) => <u>{children}</u>,\n  s: ({ children }) => <del>{children}</del>,\n  del: ({ children }) => <del>{children}</del>,\n  sub: ({ children }) => <sub>{children}</sub>,\n  sup: ({ children }) => <sup>{children}</sup>,\n  code: ({ children }) => <code>{children}</code>,\n};\n\nexport const inlineElements = [\n  'em',\n  'i',\n  'b',\n  'strong',\n  'u',\n  'del',\n  'sub',\n  'sup',\n  'code',\n];\n\n// Order of definition here is important (higher = inner element)\nexport const leafs = {\n  // code: ({ children }) => {\n  //   return <code>{children}</code>;\n  // },\n};\n\nexport const defaultValue = () => {\n  return [createEmptyParagraph()];\n};\n\n// HTML deserialization (html -> slate data conversion)\n// These are used in clipboard paste handling\n// Any tag that is not listed here (or added by a plugin) will be stripped\n// (its children will be rendered, though)\nexport const htmlTagsToSlate = {\n  B: bTagDeserializer,\n  BODY: bodyTagDeserializer,\n  CODE: codeTagDeserializer,\n  PRE: preTagDeserializer,\n  SPAN: spanTagDeserializer,\n\n  BLOCKQUOTE: blockTagDeserializer('blockquote'),\n  DEL: blockTagDeserializer('del'),\n  EM: blockTagDeserializer('em'),\n  H1: blockTagDeserializer('h1'),\n  H2: blockTagDeserializer('h2'),\n  H3: blockTagDeserializer('h3'),\n  H4: blockTagDeserializer('h4'),\n  H5: blockTagDeserializer('h5'),\n  H6: blockTagDeserializer('h6'),\n  I: blockTagDeserializer('i'),\n  P: blockTagDeserializer('p'),\n  S: blockTagDeserializer('del'),\n  STRONG: blockTagDeserializer('strong'),\n  SUB: blockTagDeserializer('sub'),\n  SUP: blockTagDeserializer('sup'),\n  U: blockTagDeserializer('u'),\n\n  OL: blockTagDeserializer('ol'),\n  UL: blockTagDeserializer('ul'),\n  LI: blockTagDeserializer('li'),\n};\n\n// Adds \"highlight\" decoration in the editor. Used by `highlightByType`\n// See the Footnote plugin for an example.\nexport const nodeTypesToHighlight = [];\n\n// \"Runtime\" decorator functions. These are transient decorations that are\n// applied in the editor. They are not persisted in the final value, so they\n// are useful for example to highlight search results or a certain type of node\n// Signature: ([node, path], ranges) => ranges\nexport const runtimeDecorators = [highlightSelection]; // , highlightByType\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}