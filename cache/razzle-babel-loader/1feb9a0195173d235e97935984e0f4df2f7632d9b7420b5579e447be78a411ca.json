{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/start-client.jsx\",\n  _window,\n  _window$env,\n  _SENTRY__,\n  _this2 = this;\nvar __jsx = React.createElement;\nimport '@plone/volto/config'; // This is the bootstrap for the global config - client side\nimport '@root/theme';\nimport React from 'react';\nimport { hydrate } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { IntlProvider } from 'react-intl-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { ReduxAsyncConnect } from '@plone/volto/helpers/AsyncConnect';\nimport loadable, { loadableReady } from '@loadable/component';\nimport { CookiesProvider } from 'react-cookie';\nimport debug from 'debug';\nimport routes from '@root/routes';\nimport config from '@plone/volto/registry';\nimport configureStore from '@plone/volto/store';\nimport { Api, persistAuthToken, ScrollToTop } from '@plone/volto/helpers';\nimport initSentry from '@plone/volto/sentry';\nexport var history = createBrowserHistory();\nvar sentryLibraries = {\n  Sentry: loadable.lib({\n    resolved: {},\n    chunkName: function chunkName() {\n      return \"s_entry-browser\";\n    },\n    isReady: function isReady(props) {\n      var key = this.resolve(props);\n      if (this.resolved[key] !== true) {\n        return false;\n      }\n      if (typeof __webpack_modules__ !== 'undefined') {\n        return !!__webpack_modules__[key];\n      }\n      return false;\n    },\n    importAsync: function importAsync() {\n      return import( /* webpackChunkName: \"s_entry-browser\" */'@sentry/browser');\n    },\n    requireAsync: function requireAsync(props) {\n      var _this = this;\n      var key = this.resolve(props);\n      this.resolved[key] = false;\n      return this.importAsync(props).then(function (resolved) {\n        _this.resolved[key] = true;\n        return resolved;\n      });\n    },\n    requireSync: function requireSync(props) {\n      var id = this.resolve(props);\n      if (typeof __webpack_require__ !== 'undefined') {\n        return __webpack_require__(id);\n      }\n      return eval('module.require')(id);\n    },\n    resolve: function resolve() {\n      if (require.resolveWeak) {\n        return require.resolveWeak(\"@sentry/browser\");\n      }\n      return eval('require.resolve')(\"@sentry/browser\");\n    }\n  }),\n  SentryIntegrations: loadable.lib({\n    resolved: {},\n    chunkName: function chunkName() {\n      return \"sentry-integrations\";\n    },\n    isReady: function isReady(props) {\n      var key = this.resolve(props);\n      if (this.resolved[key] !== true) {\n        return false;\n      }\n      if (typeof __webpack_modules__ !== 'undefined') {\n        return !!__webpack_modules__[key];\n      }\n      return false;\n    },\n    importAsync: function importAsync() {\n      return import( /* webpackChunkName: \"sentry-integrations\" */'@sentry/integrations');\n    },\n    requireAsync: function requireAsync(props) {\n      var _this = this;\n      var key = this.resolve(props);\n      this.resolved[key] = false;\n      return this.importAsync(props).then(function (resolved) {\n        _this.resolved[key] = true;\n        return resolved;\n      });\n    },\n    requireSync: function requireSync(props) {\n      var id = this.resolve(props);\n      if (typeof __webpack_require__ !== 'undefined') {\n        return __webpack_require__(id);\n      }\n      return eval('module.require')(id);\n    },\n    resolve: function resolve() {\n      if (require.resolveWeak) {\n        return require.resolveWeak(\"@sentry/integrations\");\n      }\n      return eval('require.resolve')(\"@sentry/integrations\");\n    }\n  })\n};\nvar loadSentry = function loadSentry() {\n  var loaders = Object.entries(sentryLibraries).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      name = _ref2[0],\n      Lib = _ref2[1];\n    return new Promise(function (resolve) {\n      return Lib.load().then(function (mod) {\n        return resolve([name, mod]);\n      });\n    });\n  });\n  Promise.all(loaders).then(function (libs) {\n    var libraries = Object.assign.apply(Object, [{}].concat(_toConsumableArray(libs.map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        name = _ref4[0],\n        lib = _ref4[1];\n      return _defineProperty({}, name, lib);\n    }))));\n    initSentry(libraries);\n  });\n};\nif (__CLIENT__ && (_window = window) !== null && _window !== void 0 && (_window$env = _window.env) !== null && _window$env !== void 0 && _window$env.RAZZLE_SENTRY_DSN || (_SENTRY__ = __SENTRY__) !== null && _SENTRY__ !== void 0 && _SENTRY__.SENTRY_DSN) loadSentry();\nfunction reactIntlErrorHandler(error) {\n  debug('i18n')(error);\n}\nexport default (function () {\n  var api = new Api();\n  var store = configureStore(window.__data, history, api);\n  persistAuthToken(store);\n\n  // On Cypress we expose the history, the store and the settings\n  // so we can access from Cypress and manipulate them\n  if (window.Cypress) {\n    window.appHistory = history;\n    window.store = store;\n    window.settings = config.settings;\n  }\n\n  // Setup the client registry from the SSR response values, presents in the `window.env`\n  // variable. This is key for the Seamless mode to work.\n  if (window.env.apiPath) {\n    config.settings.apiPath = window.env.apiPath;\n  }\n  if (window.env.publicURL) {\n    config.settings.publicURL = window.env.publicURL;\n  }\n  // There are some cases that the client needs to know the internal server URL\n  // too, as some helpers (isInternalURL and flattenToAppURL) need to be aware of it.\n  // This is specially important when the hydration of the store coming from the first SSR\n  // request happens, since there all the server URLs might be the internalApiPath ones,\n  // and the client should be able to take care of them properly.\n  if (window.env.RAZZLE_INTERNAL_API_PATH) {\n    config.settings.internalApiPath = window.env.RAZZLE_INTERNAL_API_PATH;\n  }\n  // TODO: To be removed when the use of the legacy traverse is deprecated.\n  if (window.env.RAZZLE_LEGACY_TRAVERSE) {\n    config.settings.legacyTraverse = true;\n  }\n  loadableReady(function () {\n    hydrate(__jsx(CookiesProvider, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, __jsx(Provider, {\n      store: store,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, __jsx(IntlProvider, {\n      onError: reactIntlErrorHandler,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, __jsx(ConnectedRouter, {\n      history: history,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, __jsx(ScrollToTop, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, __jsx(ReduxAsyncConnect, {\n      routes: routes,\n      helpers: api,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    })))))), document.getElementById('main'));\n  });\n});","map":{"version":3,"names":["React","hydrate","Provider","IntlProvider","ConnectedRouter","createBrowserHistory","ReduxAsyncConnect","loadable","loadableReady","CookiesProvider","debug","routes","config","configureStore","Api","persistAuthToken","ScrollToTop","initSentry","history","sentryLibraries","Sentry","lib","SentryIntegrations","loadSentry","loaders","Object","entries","map","name","Lib","Promise","resolve","load","then","mod","all","libs","libraries","assign","__CLIENT__","window","env","RAZZLE_SENTRY_DSN","__SENTRY__","SENTRY_DSN","reactIntlErrorHandler","error","api","store","__data","Cypress","appHistory","settings","apiPath","publicURL","RAZZLE_INTERNAL_API_PATH","internalApiPath","RAZZLE_LEGACY_TRAVERSE","legacyTraverse","document","getElementById"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/start-client.jsx"],"sourcesContent":["import '@plone/volto/config'; // This is the bootstrap for the global config - client side\nimport '@root/theme';\nimport React from 'react';\nimport { hydrate } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { IntlProvider } from 'react-intl-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { ReduxAsyncConnect } from '@plone/volto/helpers/AsyncConnect';\nimport loadable, { loadableReady } from '@loadable/component';\nimport { CookiesProvider } from 'react-cookie';\nimport debug from 'debug';\nimport routes from '@root/routes';\nimport config from '@plone/volto/registry';\n\nimport configureStore from '@plone/volto/store';\nimport { Api, persistAuthToken, ScrollToTop } from '@plone/volto/helpers';\nimport initSentry from '@plone/volto/sentry';\n\nexport const history = createBrowserHistory();\n\nconst sentryLibraries = {\n  Sentry: loadable.lib(() =>\n    import(/* webpackChunkName: \"s_entry-browser\" */ '@sentry/browser'),\n  ),\n  SentryIntegrations: loadable.lib(() => import('@sentry/integrations')),\n};\n\nconst loadSentry = () => {\n  const loaders = Object.entries(sentryLibraries).map(\n    ([name, Lib]) =>\n      new Promise((resolve) => Lib.load().then((mod) => resolve([name, mod]))),\n  );\n  Promise.all(loaders).then((libs) => {\n    const libraries = Object.assign(\n      {},\n      ...libs.map(([name, lib]) => ({ [name]: lib })),\n    );\n    initSentry(libraries);\n  });\n};\n\nif ((__CLIENT__ && window?.env?.RAZZLE_SENTRY_DSN) || __SENTRY__?.SENTRY_DSN)\n  loadSentry();\n\nfunction reactIntlErrorHandler(error) {\n  debug('i18n')(error);\n}\n\nexport default () => {\n  const api = new Api();\n\n  const store = configureStore(window.__data, history, api);\n  persistAuthToken(store);\n\n  // On Cypress we expose the history, the store and the settings\n  // so we can access from Cypress and manipulate them\n  if (window.Cypress) {\n    window.appHistory = history;\n    window.store = store;\n    window.settings = config.settings;\n  }\n\n  // Setup the client registry from the SSR response values, presents in the `window.env`\n  // variable. This is key for the Seamless mode to work.\n  if (window.env.apiPath) {\n    config.settings.apiPath = window.env.apiPath;\n  }\n  if (window.env.publicURL) {\n    config.settings.publicURL = window.env.publicURL;\n  }\n  // There are some cases that the client needs to know the internal server URL\n  // too, as some helpers (isInternalURL and flattenToAppURL) need to be aware of it.\n  // This is specially important when the hydration of the store coming from the first SSR\n  // request happens, since there all the server URLs might be the internalApiPath ones,\n  // and the client should be able to take care of them properly.\n  if (window.env.RAZZLE_INTERNAL_API_PATH) {\n    config.settings.internalApiPath = window.env.RAZZLE_INTERNAL_API_PATH;\n  }\n  // TODO: To be removed when the use of the legacy traverse is deprecated.\n  if (window.env.RAZZLE_LEGACY_TRAVERSE) {\n    config.settings.legacyTraverse = true;\n  }\n\n  loadableReady(() => {\n    hydrate(\n      <CookiesProvider>\n        <Provider store={store}>\n          <IntlProvider onError={reactIntlErrorHandler}>\n            <ConnectedRouter history={history}>\n              <ScrollToTop>\n                <ReduxAsyncConnect routes={routes} helpers={api} />\n              </ScrollToTop>\n            </ConnectedRouter>\n          </IntlProvider>\n        </Provider>\n      </CookiesProvider>,\n      document.getElementById('main'),\n    );\n  });\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}