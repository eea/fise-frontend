{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Contents/ContentsIndexHeader.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\n/**\n * Contents index header component.\n * @module components/manage/Contents/ContentsIndexHeader\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nvar widthValues = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fiveteen', 'sixteen'];\n\n/**\n * Contents index header component class.\n * @function ContentsIndexHeaderComponent\n * @returns {string} Markup of the component.\n */\nexport var ContentsIndexHeaderComponent = function ContentsIndexHeaderComponent(_ref) {\n  var intl = _ref.intl,\n    width = _ref.width,\n    label = _ref.label,\n    connectDragSource = _ref.connectDragSource,\n    connectDropTarget = _ref.connectDropTarget,\n    isDragging = _ref.isDragging;\n  return connectDropTarget(connectDragSource(__jsx(\"th\", {\n    className: \"\".concat(widthValues[width - 2], \" wide\"),\n    style: {\n      opacity: isDragging ? 0.5 : 1,\n      cursor: 'move'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, intl.formatMessage({\n    id: label,\n    defaultMessage: label\n  }))));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = ContentsIndexHeaderComponent;\nContentsIndexHeaderComponent.propTypes = {\n  width: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n  connectDropTarget: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  order: PropTypes.number.isRequired,\n  onOrderIndex: PropTypes.func.isRequired\n};\nvar DragDropConnector = function DragDropConnector(props) {\n  _s();\n  var _props$reactDnd = props.reactDnd,\n    DropTarget = _props$reactDnd.DropTarget,\n    DragSource = _props$reactDnd.DragSource;\n  var DndConnectedContentsIndexHeader = React.useMemo(function () {\n    return DropTarget('index', {\n      hover: function hover(props, monitor) {\n        var dragOrder = monitor.getItem().order;\n        var hoverOrder = props.order;\n        if (dragOrder === hoverOrder) {\n          return;\n        }\n        props.onOrderIndex(dragOrder, hoverOrder - dragOrder);\n        monitor.getItem().order = hoverOrder;\n      }\n    }, function (connect) {\n      return {\n        connectDropTarget: connect.dropTarget()\n      };\n    })(DragSource('index', {\n      beginDrag: function beginDrag(props) {\n        return {\n          id: props.label,\n          order: props.order\n        };\n      }\n    }, function (connect, monitor) {\n      return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n      };\n    })(injectIntl(ContentsIndexHeaderComponent)));\n  }, [DragSource, DropTarget]);\n  return __jsx(DndConnectedContentsIndexHeader, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 10\n    }\n  }));\n};\n_s(DragDropConnector, \"AD/TleBv/IRRrO/EO7vstrwoFTU=\");\n_c2 = DragDropConnector;\nexport default injectLazyLibs('reactDnd')(DragDropConnector);\nvar _c, _c2;\n$RefreshReg$(_c, \"ContentsIndexHeaderComponent\");\n$RefreshReg$(_c2, \"DragDropConnector\");","map":{"version":3,"names":["React","PropTypes","injectIntl","injectLazyLibs","widthValues","ContentsIndexHeaderComponent","intl","width","label","connectDragSource","connectDropTarget","isDragging","opacity","cursor","formatMessage","id","defaultMessage","propTypes","number","isRequired","string","func","bool","order","onOrderIndex","DragDropConnector","props","reactDnd","DropTarget","DragSource","DndConnectedContentsIndexHeader","useMemo","hover","monitor","dragOrder","getItem","hoverOrder","connect","dropTarget","beginDrag","dragSource"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Contents/ContentsIndexHeader.jsx"],"sourcesContent":["/**\n * Contents index header component.\n * @module components/manage/Contents/ContentsIndexHeader\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nconst widthValues = [\n  'one',\n  'two',\n  'three',\n  'four',\n  'five',\n  'six',\n  'seven',\n  'eight',\n  'nine',\n  'ten',\n  'eleven',\n  'twelve',\n  'thirteen',\n  'fourteen',\n  'fiveteen',\n  'sixteen',\n];\n\n/**\n * Contents index header component class.\n * @function ContentsIndexHeaderComponent\n * @returns {string} Markup of the component.\n */\nexport const ContentsIndexHeaderComponent = ({\n  intl,\n  width,\n  label,\n  connectDragSource,\n  connectDropTarget,\n  isDragging,\n}) =>\n  connectDropTarget(\n    connectDragSource(\n      <th\n        className={`${widthValues[width - 2]} wide`}\n        style={{ opacity: isDragging ? 0.5 : 1, cursor: 'move' }}\n      >\n        {intl.formatMessage({\n          id: label,\n          defaultMessage: label,\n        })}\n      </th>,\n    ),\n  );\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nContentsIndexHeaderComponent.propTypes = {\n  width: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n  connectDropTarget: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  order: PropTypes.number.isRequired,\n  onOrderIndex: PropTypes.func.isRequired,\n};\n\nconst DragDropConnector = (props) => {\n  const { DropTarget, DragSource } = props.reactDnd;\n\n  const DndConnectedContentsIndexHeader = React.useMemo(\n    () =>\n      DropTarget(\n        'index',\n        {\n          hover(props, monitor) {\n            const dragOrder = monitor.getItem().order;\n            const hoverOrder = props.order;\n\n            if (dragOrder === hoverOrder) {\n              return;\n            }\n\n            props.onOrderIndex(dragOrder, hoverOrder - dragOrder);\n\n            monitor.getItem().order = hoverOrder;\n          },\n        },\n        (connect) => ({\n          connectDropTarget: connect.dropTarget(),\n        }),\n      )(\n        DragSource(\n          'index',\n          {\n            beginDrag(props) {\n              return {\n                id: props.label,\n                order: props.order,\n              };\n            },\n          },\n          (connect, monitor) => ({\n            connectDragSource: connect.dragSource(),\n            isDragging: monitor.isDragging(),\n          }),\n        )(injectIntl(ContentsIndexHeaderComponent)),\n      ),\n    [DragSource, DropTarget],\n  );\n\n  return <DndConnectedContentsIndexHeader {...props} />;\n};\n\nexport default injectLazyLibs('reactDnd')(DragDropConnector);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}