{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { schemaEnhancerFactory, enhanceStylingSchema } from '@eeacms/volto-listing-block/schema-utils';\nimport { defineMessages } from 'react-intl';\nvar messages = defineMessages({\n  title: {\n    \"id\": \"Item type\",\n    \"defaultMessage\": \"Item type\"\n  }\n});\nvar ItemSchema = function ItemSchema(_ref) {\n  var _formData$itemModel;\n  var formData = _ref.formData;\n  return {\n    fieldsets: [{\n      id: 'itemDesigner',\n      title: 'Item',\n      fields: ['hasDate', 'hasDescription', 'maxDescription', 'hasImage'].concat(_toConsumableArray((_formData$itemModel = formData.itemModel) !== null && _formData$itemModel !== void 0 && _formData$itemModel.hasImage ? ['imageOnRightSide'] : []))\n    }],\n    properties: {\n      hasDate: {\n        title: 'Publication date',\n        type: 'boolean'\n      },\n      hasDescription: {\n        title: 'Description',\n        type: 'boolean',\n        \"default\": true\n      },\n      maxDescription: {\n        title: 'Description max lines',\n        description: \"Limit description to a maximum number of lines by adding trailing '...'\",\n        type: 'number',\n        \"default\": 2,\n        minimum: 0,\n        maximum: 5\n      },\n      hasImage: {\n        title: 'Image',\n        type: 'boolean',\n        \"default\": true\n      },\n      imageOnRightSide: {\n        title: 'Image on Right (Default is Left)',\n        type: 'boolean'\n      }\n      // hasMetaType: {\n      //   title: 'Show portal type',\n      //   type: 'boolean',\n      // },\n      // hasLabel: {\n      //   title: 'Show new/archived label',\n      //   type: 'boolean',\n      // },\n      // hasTags: {\n      //   title: 'Show tags',\n      //   type: 'boolean',\n      // },\n    },\n\n    required: []\n  };\n};\n_c = ItemSchema;\nexport default function universalItemSchemaEnhancer(props) {\n  var schema = props.schema;\n  props.formData = props.formData || props.data;\n  var enhanceItemModel = schemaEnhancerFactory({\n    extensionName: 'itemTemplates',\n    messages: messages,\n    blockType: 'listing',\n    extensionField: '@type'\n  });\n  var baseSchema = _objectSpread(_objectSpread({}, schema), {}, {\n    fieldsets: [].concat(_toConsumableArray(schema.fieldsets), [{\n      id: 'itemDesigner',\n      title: 'Item',\n      fields: ['itemModel']\n    }]),\n    properties: _objectSpread(_objectSpread({}, schema.properties), {}, {\n      itemModel: {\n        title: 'Item model',\n        widget: 'object',\n        schema: enhanceItemModel(_objectSpread(_objectSpread({}, props), {}, {\n          schema: ItemSchema(props)\n        }))\n      }\n    })\n  });\n  var styledSchema = enhanceStylingSchema(_objectSpread(_objectSpread({}, props), {}, {\n    schema: baseSchema,\n    // schema: baseSchema.properties.styles.schema,\n    formData: props.formData\n  }));\n  return styledSchema;\n}\nvar _c;\n$RefreshReg$(_c, \"ItemSchema\");","map":{"version":3,"names":["schemaEnhancerFactory","enhanceStylingSchema","defineMessages","messages","title","ItemSchema","formData","fieldsets","id","fields","itemModel","hasImage","properties","hasDate","type","hasDescription","maxDescription","description","minimum","maximum","imageOnRightSide","required","universalItemSchemaEnhancer","props","schema","data","enhanceItemModel","extensionName","blockType","extensionField","baseSchema","widget","styledSchema"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/components/UniversalItem/schema.js"],"sourcesContent":["import {\n  schemaEnhancerFactory,\n  enhanceStylingSchema,\n} from '@eeacms/volto-listing-block/schema-utils';\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  title: {\n    id: 'Item type',\n    defaultMessage: 'Item type',\n  },\n});\n\nconst ItemSchema = ({ formData }) => {\n  return {\n    fieldsets: [\n      {\n        id: 'itemDesigner',\n        title: 'Item',\n        fields: [\n          'hasDate',\n          'hasDescription',\n          'maxDescription',\n          'hasImage',\n          ...(formData.itemModel?.hasImage ? ['imageOnRightSide'] : []),\n          // 'hasMetaType',\n          // 'hasLabel',\n          // 'hasTags',\n          // 'callToAction',\n        ],\n      },\n    ],\n    properties: {\n      hasDate: {\n        title: 'Publication date',\n        type: 'boolean',\n      },\n      hasDescription: {\n        title: 'Description',\n        type: 'boolean',\n        default: true,\n      },\n      maxDescription: {\n        title: 'Description max lines',\n        description:\n          \"Limit description to a maximum number of lines by adding trailing '...'\",\n        type: 'number',\n        default: 2,\n        minimum: 0,\n        maximum: 5,\n      },\n      hasImage: {\n        title: 'Image',\n        type: 'boolean',\n        default: true,\n      },\n      imageOnRightSide: {\n        title: 'Image on Right (Default is Left)',\n        type: 'boolean',\n      },\n      // hasMetaType: {\n      //   title: 'Show portal type',\n      //   type: 'boolean',\n      // },\n      // hasLabel: {\n      //   title: 'Show new/archived label',\n      //   type: 'boolean',\n      // },\n      // hasTags: {\n      //   title: 'Show tags',\n      //   type: 'boolean',\n      // },\n    },\n    required: [],\n  };\n};\n\nexport default function universalItemSchemaEnhancer(props) {\n  const { schema } = props;\n  props.formData = props.formData || props.data;\n\n  const enhanceItemModel = schemaEnhancerFactory({\n    extensionName: 'itemTemplates',\n    messages,\n    blockType: 'listing',\n    extensionField: '@type',\n  });\n\n  const baseSchema = {\n    ...schema,\n    fieldsets: [\n      ...schema.fieldsets,\n      {\n        id: 'itemDesigner',\n        title: 'Item',\n        fields: ['itemModel'],\n      },\n    ],\n    properties: {\n      ...schema.properties,\n      itemModel: {\n        title: 'Item model',\n        widget: 'object',\n        schema: enhanceItemModel({\n          ...props,\n          schema: ItemSchema(props),\n        }),\n      },\n    },\n  };\n\n  const styledSchema = enhanceStylingSchema({\n    ...props,\n    schema: baseSchema,\n    // schema: baseSchema.properties.styles.schema,\n    formData: props.formData,\n  });\n\n  return styledSchema;\n}\n"],"mappings":";;AAAA,SACEA,qBAAqB,EACrBC,oBAAoB,QACf,0CAA0C;AACjD,SAASC,cAAc,QAAQ,YAAY;AAE3C,IAAMC,QAAQ,GAAGD,cAAc,CAAC;EAC9BE,KAAK;IAAA;IAAA;EAAA;AAIP,CAAC,CAAC;AAEF,IAAMC,UAAU,GAAG,SAAbA,UAAU,OAAqB;EAAA;EAAA,IAAfC,QAAQ,QAARA,QAAQ;EAC5B,OAAO;IACLC,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,cAAc;MAClBJ,KAAK,EAAE,MAAM;MACbK,MAAM,GACJ,SAAS,EACT,gBAAgB,EAChB,gBAAgB,EAChB,UAAU,4BACN,uBAAAH,QAAQ,CAACI,SAAS,gDAAlB,oBAAoBC,QAAQ,GAAG,CAAC,kBAAkB,CAAC,GAAG,EAAE;IAMhE,CAAC,CACF;IACDC,UAAU,EAAE;MACVC,OAAO,EAAE;QACPT,KAAK,EAAE,kBAAkB;QACzBU,IAAI,EAAE;MACR,CAAC;MACDC,cAAc,EAAE;QACdX,KAAK,EAAE,aAAa;QACpBU,IAAI,EAAE,SAAS;QACf,WAAS;MACX,CAAC;MACDE,cAAc,EAAE;QACdZ,KAAK,EAAE,uBAAuB;QAC9Ba,WAAW,EACT,yEAAyE;QAC3EH,IAAI,EAAE,QAAQ;QACd,WAAS,CAAC;QACVI,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE;MACX,CAAC;MACDR,QAAQ,EAAE;QACRP,KAAK,EAAE,OAAO;QACdU,IAAI,EAAE,SAAS;QACf,WAAS;MACX,CAAC;MACDM,gBAAgB,EAAE;QAChBhB,KAAK,EAAE,kCAAkC;QACzCU,IAAI,EAAE;MACR;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC;;IACDO,QAAQ,EAAE;EACZ,CAAC;AACH,CAAC;AAAC,KA9DIhB,UAAU;AAgEhB,eAAe,SAASiB,2BAA2B,CAACC,KAAK,EAAE;EACzD,IAAQC,MAAM,GAAKD,KAAK,CAAhBC,MAAM;EACdD,KAAK,CAACjB,QAAQ,GAAGiB,KAAK,CAACjB,QAAQ,IAAIiB,KAAK,CAACE,IAAI;EAE7C,IAAMC,gBAAgB,GAAG1B,qBAAqB,CAAC;IAC7C2B,aAAa,EAAE,eAAe;IAC9BxB,QAAQ,EAARA,QAAQ;IACRyB,SAAS,EAAE,SAAS;IACpBC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,IAAMC,UAAU,mCACXN,MAAM;IACTjB,SAAS,+BACJiB,MAAM,CAACjB,SAAS,IACnB;MACEC,EAAE,EAAE,cAAc;MAClBJ,KAAK,EAAE,MAAM;MACbK,MAAM,EAAE,CAAC,WAAW;IACtB,CAAC,EACF;IACDG,UAAU,kCACLY,MAAM,CAACZ,UAAU;MACpBF,SAAS,EAAE;QACTN,KAAK,EAAE,YAAY;QACnB2B,MAAM,EAAE,QAAQ;QAChBP,MAAM,EAAEE,gBAAgB,iCACnBH,KAAK;UACRC,MAAM,EAAEnB,UAAU,CAACkB,KAAK;QAAC;MAE7B;IAAC;EACF,EACF;EAED,IAAMS,YAAY,GAAG/B,oBAAoB,iCACpCsB,KAAK;IACRC,MAAM,EAAEM,UAAU;IAClB;IACAxB,QAAQ,EAAEiB,KAAK,CAACjB;EAAQ,GACxB;EAEF,OAAO0B,YAAY;AACrB;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[{"id":"Item type","defaultMessage":"Item type"}]}},"sourceType":"module","externalDependencies":[]}