{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/widgets/BlocksBrowser/BlocksBrowserBody.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Segment } from 'semantic-ui-react';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\n\n// These absolute imports (without using the corresponding centralized index.js) are required\n// to cut circular import problems, this file should never use them. This is because of\n// the very nature of the functionality of the component and its relationship with others\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport BlocksBrowserNav from './BlocksBrowserNav';\n\n/**\n * BlocksBrowserBody container class.\n * @class BlocksBrowserBody\n * @extends Component\n */\nvar BlocksBrowserBody = /*#__PURE__*/function (_Component) {\n  _inherits(BlocksBrowserBody, _Component);\n  var _super = _createSuper(BlocksBrowserBody);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  function BlocksBrowserBody(props) {\n    var _this$props$data;\n    var _this;\n    _classCallCheck(this, BlocksBrowserBody);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"handleClickOutside\", function (e) {\n      if (_this.objectBrowser && doesNodeContainClick(_this.objectBrowser.current, e)) return;\n      _this.props.closeObjectBrowser();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"objectBrowser\", /*#__PURE__*/React.createRef());\n    _defineProperty(_assertThisInitialized(_this), \"onSelectItem\", function (item) {\n      var _this$props = _this.props,\n        block = _this$props.block,\n        data = _this$props.data,\n        onChangeBlock = _this$props.onChangeBlock;\n      var id = item['id'];\n      if (_this.props.onSelectItem) {\n        _this.props.onSelectItem(item);\n      } else {\n        onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n          href: id\n        }));\n      }\n      _this.setState({\n        selectedHref: id\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onChangeBlockData\", function (key, value) {\n      _this.props.onChangeBlock(_this.props.block, _objectSpread(_objectSpread({}, _this.props.data), {}, _defineProperty({}, key, value)));\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleClickOnItem\", function (item) {\n      if (!_this.props.maximumSelectionSize || !_this.props.data || _this.props.data.length < _this.props.maximumSelectionSize) {\n        _this.onSelectItem(item);\n        var length = _this.props.data ? _this.props.data.length : 0;\n        if (length + 1 >= _this.props.maximumSelectionSize) {\n          _this.props.closeObjectBrowser();\n        }\n      } else {\n        _this.props.closeObjectBrowser();\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleDoubleClickOnItem\", function (item) {\n      if (_this.props.data.length < _this.props.maximumSelectionSize) {\n        _this.onSelectItem(item);\n      }\n      _this.props.closeObjectBrowser();\n    });\n    _this.state = {\n      selectedHref: ((_this$props$data = _this.props.data) === null || _this$props$data === void 0 ? void 0 : _this$props$data.href) || ''\n    };\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(BlocksBrowserBody, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('mousedown', this.handleClickOutside, false);\n    }\n\n    /**\n     * Component will receive props\n     * @method componentWillUnmount\n     * @returns {undefined}\n     */\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('mousedown', this.handleClickOutside, false);\n    }\n  }, {\n    key: \"render\",\n    value:\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n    function render() {\n      return /*#__PURE__*/ReactDOM.createPortal(__jsx(\"aside\", {\n        role: \"presentation\",\n        onClick: function onClick(e) {\n          e.stopPropagation();\n        },\n        ref: this.objectBrowser,\n        key: \"objectbrowsercontainerkey\",\n        className: \"sidebar-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }\n      }, __jsx(Segment.Group, {\n        raised: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }, __jsx(\"header\", {\n        className: \"header pulled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"vertical divider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Choose Target\",\n        defaultMessage: \"Choose Target\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }\n      })), __jsx(\"button\", {\n        className: \"clearSVG\",\n        onClick: this.props.closeObjectBrowser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }, __jsx(Icon, {\n        name: clearSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }\n      }))), __jsx(BlocksBrowserNav, {\n        selected: false,\n        handleClickOnItem: this.handleClickOnItem,\n        handleDoubleClickOnItem: this.handleDoubleClickOnItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }))), document.body);\n    }\n  }]);\n  return BlocksBrowserBody;\n}(Component);\n_defineProperty(BlocksBrowserBody, \"propTypes\", {\n  block: PropTypes.string.isRequired,\n  data: PropTypes.any.isRequired,\n  closeObjectBrowser: PropTypes.func.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  onSelectItem: PropTypes.func,\n  dataName: PropTypes.string,\n  maximumSelectionSize: PropTypes.number\n});\n_defineProperty(BlocksBrowserBody, \"defaultProps\", {\n  image: '',\n  href: '',\n  onSelectItem: null,\n  dataName: null,\n  selectableTypes: [],\n  maximumSelectionSize: null\n});\nexport default compose(injectIntl)(BlocksBrowserBody);","map":{"version":3,"names":["React","Component","ReactDOM","PropTypes","compose","FormattedMessage","injectIntl","Segment","doesNodeContainClick","Icon","clearSVG","BlocksBrowserNav","BlocksBrowserBody","props","e","objectBrowser","current","closeObjectBrowser","createRef","item","block","data","onChangeBlock","id","onSelectItem","href","setState","selectedHref","key","value","maximumSelectionSize","length","state","document","addEventListener","handleClickOutside","removeEventListener","createPortal","stopPropagation","handleClickOnItem","handleDoubleClickOnItem","body","string","isRequired","any","func","dataName","number","image","selectableTypes"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/widgets/BlocksBrowser/BlocksBrowserBody.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Segment } from 'semantic-ui-react';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\n\n// These absolute imports (without using the corresponding centralized index.js) are required\n// to cut circular import problems, this file should never use them. This is because of\n// the very nature of the functionality of the component and its relationship with others\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\n\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport BlocksBrowserNav from './BlocksBrowserNav';\n\n/**\n * BlocksBrowserBody container class.\n * @class BlocksBrowserBody\n * @extends Component\n */\nclass BlocksBrowserBody extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    block: PropTypes.string.isRequired,\n    data: PropTypes.any.isRequired,\n    closeObjectBrowser: PropTypes.func.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onSelectItem: PropTypes.func,\n    dataName: PropTypes.string,\n    maximumSelectionSize: PropTypes.number,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    image: '',\n    href: '',\n    onSelectItem: null,\n    dataName: null,\n    selectableTypes: [],\n    maximumSelectionSize: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedHref: this.props.data?.href || '',\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillUnmount\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  handleClickOutside = (e) => {\n    if (\n      this.objectBrowser &&\n      doesNodeContainClick(this.objectBrowser.current, e)\n    )\n      return;\n    this.props.closeObjectBrowser();\n  };\n\n  objectBrowser = React.createRef();\n\n  onSelectItem = (item) => {\n    const { block, data, onChangeBlock } = this.props;\n    const id = item['id'];\n    if (this.props.onSelectItem) {\n      this.props.onSelectItem(item);\n    } else {\n      onChangeBlock(block, {\n        ...data,\n        href: id,\n      });\n    }\n\n    this.setState({\n      selectedHref: id,\n    });\n  };\n\n  onChangeBlockData = (key, value) => {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      [key]: value,\n    });\n  };\n\n  handleClickOnItem = (item) => {\n    if (\n      !this.props.maximumSelectionSize ||\n      !this.props.data ||\n      this.props.data.length < this.props.maximumSelectionSize\n    ) {\n      this.onSelectItem(item);\n      let length = this.props.data ? this.props.data.length : 0;\n      if (length + 1 >= this.props.maximumSelectionSize) {\n        this.props.closeObjectBrowser();\n      }\n    } else {\n      this.props.closeObjectBrowser();\n    }\n  };\n\n  handleDoubleClickOnItem = (item) => {\n    if (this.props.data.length < this.props.maximumSelectionSize) {\n      this.onSelectItem(item);\n    }\n    this.props.closeObjectBrowser();\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return ReactDOM.createPortal(\n      <aside\n        role=\"presentation\"\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n        ref={this.objectBrowser}\n        key=\"objectbrowsercontainerkey\"\n        className=\"sidebar-container\"\n      >\n        <Segment.Group raised>\n          <header className=\"header pulled\">\n            <div className=\"vertical divider\" />\n            <h2>\n              <FormattedMessage\n                id=\"Choose Target\"\n                defaultMessage=\"Choose Target\"\n              />\n            </h2>\n            <button\n              className=\"clearSVG\"\n              onClick={this.props.closeObjectBrowser}\n            >\n              <Icon name={clearSVG} size=\"24px\" />\n            </button>\n          </header>\n          <BlocksBrowserNav\n            selected={false}\n            handleClickOnItem={this.handleClickOnItem}\n            handleDoubleClickOnItem={this.handleDoubleClickOnItem}\n          />\n        </Segment.Group>\n      </aside>,\n      document.body,\n    );\n  }\n}\n\nexport default compose(injectIntl)(BlocksBrowserBody);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Choose Target","defaultMessage":"Choose Target"}]}},"sourceType":"module","externalDependencies":[]}