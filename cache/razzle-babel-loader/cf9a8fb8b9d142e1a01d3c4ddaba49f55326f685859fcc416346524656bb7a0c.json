{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Sharing reducer.\n * @module reducers/sharing/sharing\n */\n\nimport { UPDATE_SHARING, GET_SHARING } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  update: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  get: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  data: {\n    available_roles: [],\n    entries: [],\n    inherit: null\n  }\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Sharing reducer.\n * @function sharing\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function sharing(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${UPDATE_SHARING}_PENDING`:\n    case `${GET_SHARING}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null\n        }\n      });\n    case `${UPDATE_SHARING}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${GET_SHARING}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${UPDATE_SHARING}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    case `${GET_SHARING}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: initialState.data,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["UPDATE_SHARING","GET_SHARING","initialState","update","loaded","loading","error","get","data","available_roles","entries","inherit","getRequestKey","actionType","split","toLowerCase","sharing","state","action","type","result"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/sharing/sharing.js"],"sourcesContent":["/**\n * Sharing reducer.\n * @module reducers/sharing/sharing\n */\n\nimport {\n  UPDATE_SHARING,\n  GET_SHARING,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  update: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  data: {\n    available_roles: [],\n    entries: [],\n    inherit: null,\n  },\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Sharing reducer.\n * @function sharing\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function sharing(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${UPDATE_SHARING}_PENDING`:\n    case `${GET_SHARING}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${UPDATE_SHARING}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${GET_SHARING}_SUCCESS`:\n      return {\n        ...state,\n        data: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${UPDATE_SHARING}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${GET_SHARING}_FAIL`:\n      return {\n        ...state,\n        data: initialState.data,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,SACEA,cAAc,EACdC,WAAW,QACN,oCAAoC;AAE3C,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE;IACNC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,GAAG,EAAE;IACHH,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDE,IAAI,EAAE;IACJC,eAAe,EAAE,EAAE;IACnBC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAa,CAACC,UAAU,EAAE;EACjC,OAAOA,UAAU,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,OAAO,CAACC,KAAK,GAAGf,YAAY,EAAEgB,MAAM,GAAG,CAAC,CAAC,EAAE;EACjE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAM,GAAEnB,cAAe,UAAS;IAChC,KAAM,GAAEC,WAAY,UAAS;MAC3B,uCACKgB,KAAK;QACR,CAACL,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bd,OAAO,EAAE,IAAI;UACbD,MAAM,EAAE,KAAK;UACbE,KAAK,EAAE;QACT;MAAC;IAEL,KAAM,GAAEN,cAAe,UAAS;MAC9B,uCACKiB,KAAK;QACR,CAACL,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bd,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,IAAI;UACZE,KAAK,EAAE;QACT;MAAC;IAEL,KAAM,GAAEL,WAAY,UAAS;MAC3B,uCACKgB,KAAK;QACRT,IAAI,EAAEU,MAAM,CAACE,MAAM;QACnB,CAACR,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bd,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,IAAI;UACZE,KAAK,EAAE;QACT;MAAC;IAEL,KAAM,GAAEN,cAAe,OAAM;MAC3B,uCACKiB,KAAK;QACR,CAACL,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bd,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,KAAK;UACbE,KAAK,EAAEY,MAAM,CAACZ;QAChB;MAAC;IAEL,KAAM,GAAEL,WAAY,OAAM;MACxB,uCACKgB,KAAK;QACRT,IAAI,EAAEN,YAAY,CAACM,IAAI;QACvB,CAACI,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,GAAG;UAC5Bd,OAAO,EAAE,KAAK;UACdD,MAAM,EAAE,KAAK;UACbE,KAAK,EAAEY,MAAM,CAACZ;QAChB;MAAC;IAEL;MACE,OAAOW,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}