{"ast":null,"code":"import messages from './i18n';\nconst FieldSchema = {\n  title: 'Field',\n  fieldsets: [{\n    id: 'default',\n    title: 'Default',\n    fields: ['field', 'showLabel', 'hideInView']\n  }],\n  properties: {\n    field: {\n      title: 'Field',\n      widget: 'select_metadata_field'\n    },\n    showLabel: {\n      title: 'Show label?',\n      type: 'boolean'\n    },\n    hideInView: {\n      title: 'Hide in view page?',\n      type: 'boolean'\n    }\n  },\n  required: ['field']\n};\nconst MetadataSectionSchema = {\n  title: 'Metadata section',\n  fieldsets: [{\n    id: 'default',\n    title: 'Default',\n    fields: ['fields']\n  }],\n  properties: {\n    fields: {\n      title: 'Fields',\n      schema: FieldSchema,\n      widget: 'object_list'\n    }\n  },\n  required: ['fields']\n};\nexport const TableSchema = ({\n  intl\n}) => ({\n  title: 'Table style',\n  fieldsets: [{\n    id: 'default',\n    title: intl.formatMessage(messages.defaultFieldset),\n    fields: ['fixed', 'celled', 'striped', 'compact', 'basic', 'inverted']\n  }],\n  properties: {\n    fixed: {\n      type: 'boolean',\n      title: intl.formatMessage(messages.fixed)\n    },\n    compact: {\n      type: 'boolean',\n      title: intl.formatMessage(messages.compact)\n    },\n    basic: {\n      type: 'boolean',\n      title: intl.formatMessage(messages.basic)\n    },\n    celled: {\n      type: 'boolean',\n      title: intl.formatMessage(messages.celled)\n    },\n    inverted: {\n      type: 'boolean',\n      title: intl.formatMessage(messages.inverted)\n    },\n    striped: {\n      type: 'boolean',\n      title: intl.formatMessage(messages.striped)\n    }\n  },\n  required: []\n});\nexport default MetadataSectionSchema;","map":{"version":3,"names":["messages","FieldSchema","title","fieldsets","id","fields","properties","field","widget","showLabel","type","hideInView","required","MetadataSectionSchema","schema","TableSchema","intl","formatMessage","defaultFieldset","fixed","compact","basic","celled","inverted","striped"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-metadata-block/src/components/manage/Blocks/MetadataSection/schema.js"],"sourcesContent":["import messages from './i18n';\n\nconst FieldSchema = {\n  title: 'Field',\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: ['field', 'showLabel', 'hideInView'],\n    },\n  ],\n  properties: {\n    field: {\n      title: 'Field',\n      widget: 'select_metadata_field',\n    },\n    showLabel: {\n      title: 'Show label?',\n      type: 'boolean',\n    },\n    hideInView: {\n      title: 'Hide in view page?',\n      type: 'boolean',\n    },\n  },\n  required: ['field'],\n};\n\nconst MetadataSectionSchema = {\n  title: 'Metadata section',\n\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: ['fields'],\n    },\n  ],\n\n  properties: {\n    fields: {\n      title: 'Fields',\n      schema: FieldSchema,\n      widget: 'object_list',\n    },\n  },\n\n  required: ['fields'],\n};\n\nexport const TableSchema = ({ intl }) => ({\n  title: 'Table style',\n\n  fieldsets: [\n    {\n      id: 'default',\n      title: intl.formatMessage(messages.defaultFieldset),\n      fields: ['fixed', 'celled', 'striped', 'compact', 'basic', 'inverted'],\n    },\n  ],\n\n  properties: {\n    fixed: {\n      type: 'boolean',\n      title: intl.formatMessage(messages.fixed),\n    },\n    compact: {\n      type: 'boolean',\n      title: intl.formatMessage(messages.compact),\n    },\n    basic: {\n      type: 'boolean',\n      title: intl.formatMessage(messages.basic),\n    },\n    celled: {\n      type: 'boolean',\n      title: intl.formatMessage(messages.celled),\n    },\n    inverted: {\n      type: 'boolean',\n      title: intl.formatMessage(messages.inverted),\n    },\n    striped: {\n      type: 'boolean',\n      title: intl.formatMessage(messages.striped),\n    },\n  },\n\n  required: [],\n});\n\nexport default MetadataSectionSchema;\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,QAAQ;AAE7B,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,OAAO;EACdC,SAAS,EAAE,CACT;IACEC,EAAE,EAAE,SAAS;IACbF,KAAK,EAAE,SAAS;IAChBG,MAAM,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,YAAY;EAC7C,CAAC,CACF;EACDC,UAAU,EAAE;IACVC,KAAK,EAAE;MACLL,KAAK,EAAE,OAAO;MACdM,MAAM,EAAE;IACV,CAAC;IACDC,SAAS,EAAE;MACTP,KAAK,EAAE,aAAa;MACpBQ,IAAI,EAAE;IACR,CAAC;IACDC,UAAU,EAAE;MACVT,KAAK,EAAE,oBAAoB;MAC3BQ,IAAI,EAAE;IACR;EACF,CAAC;EACDE,QAAQ,EAAE,CAAC,OAAO;AACpB,CAAC;AAED,MAAMC,qBAAqB,GAAG;EAC5BX,KAAK,EAAE,kBAAkB;EAEzBC,SAAS,EAAE,CACT;IACEC,EAAE,EAAE,SAAS;IACbF,KAAK,EAAE,SAAS;IAChBG,MAAM,EAAE,CAAC,QAAQ;EACnB,CAAC,CACF;EAEDC,UAAU,EAAE;IACVD,MAAM,EAAE;MACNH,KAAK,EAAE,QAAQ;MACfY,MAAM,EAAEb,WAAW;MACnBO,MAAM,EAAE;IACV;EACF,CAAC;EAEDI,QAAQ,EAAE,CAAC,QAAQ;AACrB,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,CAAC;EAAEC;AAAK,CAAC,MAAM;EACxCd,KAAK,EAAE,aAAa;EAEpBC,SAAS,EAAE,CACT;IACEC,EAAE,EAAE,SAAS;IACbF,KAAK,EAAEc,IAAI,CAACC,aAAa,CAACjB,QAAQ,CAACkB,eAAe,CAAC;IACnDb,MAAM,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU;EACvE,CAAC,CACF;EAEDC,UAAU,EAAE;IACVa,KAAK,EAAE;MACLT,IAAI,EAAE,SAAS;MACfR,KAAK,EAAEc,IAAI,CAACC,aAAa,CAACjB,QAAQ,CAACmB,KAAK;IAC1C,CAAC;IACDC,OAAO,EAAE;MACPV,IAAI,EAAE,SAAS;MACfR,KAAK,EAAEc,IAAI,CAACC,aAAa,CAACjB,QAAQ,CAACoB,OAAO;IAC5C,CAAC;IACDC,KAAK,EAAE;MACLX,IAAI,EAAE,SAAS;MACfR,KAAK,EAAEc,IAAI,CAACC,aAAa,CAACjB,QAAQ,CAACqB,KAAK;IAC1C,CAAC;IACDC,MAAM,EAAE;MACNZ,IAAI,EAAE,SAAS;MACfR,KAAK,EAAEc,IAAI,CAACC,aAAa,CAACjB,QAAQ,CAACsB,MAAM;IAC3C,CAAC;IACDC,QAAQ,EAAE;MACRb,IAAI,EAAE,SAAS;MACfR,KAAK,EAAEc,IAAI,CAACC,aAAa,CAACjB,QAAQ,CAACuB,QAAQ;IAC7C,CAAC;IACDC,OAAO,EAAE;MACPd,IAAI,EAAE,SAAS;MACfR,KAAK,EAAEc,IAAI,CAACC,aAAa,CAACjB,QAAQ,CAACwB,OAAO;IAC5C;EACF,CAAC;EAEDZ,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,eAAeC,qBAAqB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}