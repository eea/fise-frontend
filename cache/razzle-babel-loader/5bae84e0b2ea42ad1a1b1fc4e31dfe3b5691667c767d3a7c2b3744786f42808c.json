{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-block-image-cards/src/ImageCards/ImageCardsView.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport config from '@plone/volto/registry';\nimport { BlockStyleWrapperView } from '@eeacms/volto-block-style/BlockStyleWrapper';\nconst CardsView = props => {\n  const byDisplayType = {};\n  const blockRenderers = config.blocks.blocksConfig.imagecards.blockRenderers;\n  const block_renderers_ids = Object.keys(blockRenderers);\n  block_renderers_ids.forEach(function (value) {\n    byDisplayType[value] = blockRenderers[value].view;\n  });\n  const Impl = byDisplayType[props.data.display || 'carousel'];\n  return Impl ? __jsx(Impl, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  })) : '';\n};\nconst ImageCardsView = props => {\n  return __jsx(BlockStyleWrapperView, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }), __jsx(CardsView, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  })));\n};\nexport default ImageCardsView;","map":{"version":3,"names":["React","config","BlockStyleWrapperView","CardsView","props","byDisplayType","blockRenderers","blocks","blocksConfig","imagecards","block_renderers_ids","Object","keys","forEach","value","view","Impl","data","display","ImageCardsView"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-block-image-cards/src/ImageCards/ImageCardsView.jsx"],"sourcesContent":["import React from 'react';\nimport config from '@plone/volto/registry';\n\nimport { BlockStyleWrapperView } from '@eeacms/volto-block-style/BlockStyleWrapper';\n\nconst CardsView = (props) => {\n  const byDisplayType = {};\n  const blockRenderers = config.blocks.blocksConfig.imagecards.blockRenderers;\n  const block_renderers_ids = Object.keys(blockRenderers);\n  block_renderers_ids.forEach(function (value) {\n    byDisplayType[value] = blockRenderers[value].view;\n  });\n\n  const Impl = byDisplayType[props.data.display || 'carousel'];\n  return Impl ? <Impl {...props} /> : '';\n};\n\nconst ImageCardsView = (props) => {\n  return (\n    <BlockStyleWrapperView {...props}>\n      <CardsView {...props} />\n    </BlockStyleWrapperView>\n  );\n};\n\nexport default ImageCardsView;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,SAASC,qBAAqB,QAAQ,6CAA6C;AAEnF,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAC3B,MAAMC,aAAa,GAAG,CAAC,CAAC;EACxB,MAAMC,cAAc,GAAGL,MAAM,CAACM,MAAM,CAACC,YAAY,CAACC,UAAU,CAACH,cAAc;EAC3E,MAAMI,mBAAmB,GAAGC,MAAM,CAACC,IAAI,CAACN,cAAc,CAAC;EACvDI,mBAAmB,CAACG,OAAO,CAAC,UAAUC,KAAK,EAAE;IAC3CT,aAAa,CAACS,KAAK,CAAC,GAAGR,cAAc,CAACQ,KAAK,CAAC,CAACC,IAAI;EACnD,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAGX,aAAa,CAACD,KAAK,CAACa,IAAI,CAACC,OAAO,IAAI,UAAU,CAAC;EAC5D,OAAOF,IAAI,GAAG,MAAC,IAAI,eAAKZ,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,GAAG,EAAE;AACxC,CAAC;AAED,MAAMe,cAAc,GAAIf,KAAK,IAAK;EAChC,OACE,MAAC,qBAAqB,eAAKA,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAC9B,MAAC,SAAS,eAAKA,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,CACF;AAE5B,CAAC;AAED,eAAee,cAAc"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}