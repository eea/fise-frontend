{"ast":null,"code":"import _regeneratorRuntime from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _find from \"lodash/find\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Edit/Edit.jsx\";\nvar __jsx = React.createElement;\n/**\n * Edit container.\n * @module components/manage/Edit/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Button, Grid, Menu } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport qs from 'query-string';\nimport { toast } from 'react-toastify';\nimport { Forbidden, Form, Icon, Sidebar, Toast, Toolbar, Unauthorized, CompareLanguages, TranslationObject } from '@plone/volto/components';\nimport { updateContent, getContent, lockContent, unlockContent, getSchema, listActions } from '@plone/volto/actions';\nimport { getBaseUrl, hasBlocksData } from '@plone/volto/helpers';\nimport { preloadLazyLibs } from '@plone/volto/helpers/Loadable';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport config from '@plone/volto/registry';\nvar messages = defineMessages({\n  edit: {\n    \"id\": \"Edit {title}\",\n    \"defaultMessage\": \"Edit {title}\"\n  },\n  save: {\n    \"id\": \"Save\",\n    \"defaultMessage\": \"Save\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  }\n});\n\n/**\n * Edit class.\n * @class Edit\n * @extends Component\n */\nvar Edit = /*#__PURE__*/function (_Component) {\n  _inherits(Edit, _Component);\n  var _super = _createSuper(Edit);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  function Edit(props) {\n    var _this;\n    _classCallCheck(this, Edit);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"form\", /*#__PURE__*/React.createRef());\n    _defineProperty(_assertThisInitialized(_this), \"toolbarRef\", React.createRef);\n    _this.state = {\n      visual: true,\n      isClient: false,\n      error: null,\n      formSelected: 'editForm',\n      newId: null\n    };\n    _this.onCancel = _this.onCancel.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(Edit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$content;\n      if (this.props.getRequest.loaded && (_this$props$content = this.props.content) !== null && _this$props$content !== void 0 && _this$props$content['@type']) {\n        this.props.getSchema(this.props.content['@type'], getBaseUrl(this.props.pathname));\n      }\n      this.setState({\n        isClient: true,\n        comparingLanguage: null\n      });\n    }\n\n    /**\n     * Component will receive props\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Next properties\n     * @returns {undefined}\n     */\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this$props, _this$props$content2;\n      if (this.props.getRequest.loading && nextProps.getRequest.loaded) {\n        if (nextProps.content['@type']) {\n          this.props.getSchema(nextProps.content['@type'], getBaseUrl(this.props.pathname));\n        }\n      }\n      if (this.props.schemaRequest.loading && nextProps.schemaRequest.loaded) {\n        if (!hasBlocksData(nextProps.schema.properties)) {\n          this.setState({\n            visual: false\n          });\n        }\n      }\n      // Hack for make the Plone site editable by Volto Editor without checkings\n      if (((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$content2 = _this$props.content) === null || _this$props$content2 === void 0 ? void 0 : _this$props$content2['@type']) === 'Plone Site') {\n        this.setState({\n          visual: true\n        });\n      }\n      if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n        this.props.history.push(this.props.returnUrl || getBaseUrl(this.props.pathname));\n      }\n      if (this.props.updateRequest.loading && nextProps.updateRequest.error) {\n        var _nextProps$updateRequ, _nextProps$updateRequ2, _nextProps$updateRequ3, _nextProps$updateRequ4, _nextProps$updateRequ5, _nextProps$updateRequ6, _nextProps$updateRequ7, _nextProps$updateRequ8, _nextProps$updateRequ9, _DOMParser$parseFromS, _DOMParser$parseFromS2;\n        var message = ((_nextProps$updateRequ = nextProps.updateRequest.error) === null || _nextProps$updateRequ === void 0 ? void 0 : (_nextProps$updateRequ2 = _nextProps$updateRequ.response) === null || _nextProps$updateRequ2 === void 0 ? void 0 : (_nextProps$updateRequ3 = _nextProps$updateRequ2.body) === null || _nextProps$updateRequ3 === void 0 ? void 0 : (_nextProps$updateRequ4 = _nextProps$updateRequ3.error) === null || _nextProps$updateRequ4 === void 0 ? void 0 : _nextProps$updateRequ4.message) || ((_nextProps$updateRequ5 = nextProps.updateRequest.error) === null || _nextProps$updateRequ5 === void 0 ? void 0 : (_nextProps$updateRequ6 = _nextProps$updateRequ5.response) === null || _nextProps$updateRequ6 === void 0 ? void 0 : (_nextProps$updateRequ7 = _nextProps$updateRequ6.body) === null || _nextProps$updateRequ7 === void 0 ? void 0 : _nextProps$updateRequ7.message) || ((_nextProps$updateRequ8 = nextProps.updateRequest.error) === null || _nextProps$updateRequ8 === void 0 ? void 0 : (_nextProps$updateRequ9 = _nextProps$updateRequ8.response) === null || _nextProps$updateRequ9 === void 0 ? void 0 : _nextProps$updateRequ9.text) || '';\n        var error = ((_DOMParser$parseFromS = new DOMParser().parseFromString(message, 'text/html')) === null || _DOMParser$parseFromS === void 0 ? void 0 : (_DOMParser$parseFromS2 = _DOMParser$parseFromS.all[0]) === null || _DOMParser$parseFromS2 === void 0 ? void 0 : _DOMParser$parseFromS2.textContent) || message;\n        this.setState({\n          error: error\n        });\n        toast.error(__jsx(Toast, {\n          error: true,\n          title: this.props.intl.formatMessage(messages.error),\n          content: \"\".concat(nextProps.updateRequest.error.status, \" \").concat(error),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 9\n          }\n        }));\n      }\n      if (nextProps.compare_to && (this.state.compareTo && nextProps.compare_to['@id'] !== this.state.compareTo['@id'] || !this.state.compareTo)) {\n        this.setState({\n          compareTo: nextProps.compare_to\n        });\n      }\n    }\n\n    /**\n     * Component will unmount\n     * @method componentWillUnmount\n     * @returns {undefined}\n     */\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props$content3, _this$props$content3$;\n      if ((_this$props$content3 = this.props.content) !== null && _this$props$content3 !== void 0 && (_this$props$content3$ = _this$props$content3.lock) !== null && _this$props$content3$ !== void 0 && _this$props$content3$.locked) {\n        var baseUrl = getBaseUrl(this.props.pathname);\n        var newId = this.state.newId;\n        // Unlock the page, taking a possible id change into account\n        this.props.unlockContent(newId ? baseUrl.replace(/\\/[^/]*$/, '/' + newId) : baseUrl);\n      }\n    }\n\n    /**\n     * Submit handler\n     * @method onSubmit\n     * @param {object} data Form data.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(data) {\n      var _this$props$content4, _this$props$content4$;\n      var lock_token = (_this$props$content4 = this.props.content) === null || _this$props$content4 === void 0 ? void 0 : (_this$props$content4$ = _this$props$content4.lock) === null || _this$props$content4$ === void 0 ? void 0 : _this$props$content4$.token;\n      var headers = lock_token ? {\n        'Lock-Token': lock_token\n      } : {};\n      // if the id has changed, remember it for unlock control\n      if ('id' in data) {\n        this.setState({\n          newId: data.id\n        });\n      }\n      this.props.updateContent(getBaseUrl(this.props.pathname), data, headers);\n    }\n\n    /**\n     * Cancel handler\n     * @method onCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.props.history.push(this.props.returnUrl || getBaseUrl(this.props.pathname));\n    }\n  }, {\n    key: \"setComparingLanguage\",\n    value: function setComparingLanguage(lang, content_id) {\n      this.setState({\n        comparingLanguage: lang\n      });\n      this.props.getContent(content_id, null, 'compare_to', null);\n    }\n  }, {\n    key: \"render\",\n    value:\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n    function render() {\n      var _this$props$content5,\n        _this$props2,\n        _this$props2$schema,\n        _this2 = this,\n        _this$props$objectAct,\n        _this$props3,\n        _this$props3$schema,\n        _this$props$content6,\n        _this$props$content$l,\n        _this$props$content$l2;\n      var editPermission = _find(this.props.objectActions, {\n        id: 'edit'\n      });\n      var pageEdit = __jsx(Form, {\n        isEditForm: true,\n        ref: this.form,\n        schema: this.props.schema,\n        type: (_this$props$content5 = this.props.content) === null || _this$props$content5 === void 0 ? void 0 : _this$props$content5['@type'],\n        formData: this.props.content,\n        requestError: this.state.error,\n        onSubmit: this.onSubmit,\n        hideActions: true,\n        pathname: this.props.pathname,\n        visual: this.state.visual,\n        title: (_this$props2 = this.props) !== null && _this$props2 !== void 0 && (_this$props2$schema = _this$props2.schema) !== null && _this$props2$schema !== void 0 && _this$props2$schema.title ? this.props.intl.formatMessage(messages.edit, {\n          title: this.props.schema.title\n        }) : null,\n        loading: this.props.updateRequest.loading,\n        isFormSelected: this.state.formSelected === 'editForm',\n        onSelectForm: function onSelectForm() {\n          _this2.setState({\n            formSelected: 'editForm'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 7\n        }\n      });\n      return __jsx(\"div\", {\n        id: \"page-edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 7\n        }\n      }, ((_this$props$objectAct = this.props.objectActions) === null || _this$props$objectAct === void 0 ? void 0 : _this$props$objectAct.length) > 0 && __jsx(React.Fragment, null, editPermission && __jsx(React.Fragment, null, __jsx(Helmet, {\n        title: (_this$props3 = this.props) !== null && _this$props3 !== void 0 && (_this$props3$schema = _this$props3.schema) !== null && _this$props3$schema !== void 0 && _this$props3$schema.title ? this.props.intl.formatMessage(messages.edit, {\n          title: this.props.schema.title\n        }) : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }\n      }, ((_this$props$content6 = this.props.content) === null || _this$props$content6 === void 0 ? void 0 : _this$props$content6.language) && __jsx(\"html\", {\n        lang: this.props.content.language.token,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }\n      })), this.state.comparingLanguage && this.state.compareTo ? __jsx(Grid, {\n        celled: \"internally\",\n        stackable: true,\n        columns: 2,\n        id: \"page-compare-translation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 19\n        }\n      }, __jsx(Grid.Column, {\n        className: \"source-object\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }\n      }, __jsx(TranslationObject, {\n        translationObject: this.state.compareTo,\n        schema: this.props.schema,\n        pathname: this.props.pathname,\n        visual: this.state.visual,\n        isFormSelected: this.state.formSelected === 'translationObjectForm',\n        onSelectForm: function onSelectForm() {\n          _this2.setState({\n            formSelected: 'translationObjectForm'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 23\n        }\n      })), __jsx(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"new-translation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 23\n        }\n      }, __jsx(Menu, {\n        pointing: true,\n        secondary: true,\n        attached: true,\n        tabular: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }\n      }, __jsx(Menu.Item, {\n        name: (_this$props$content$l = this.props.content.language) === null || _this$props$content$l === void 0 ? void 0 : _this$props$content$l.token.toUpperCase(),\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 27\n        }\n      }, (_this$props$content$l2 = this.props.content.language) === null || _this$props$content$l2 === void 0 ? void 0 : _this$props$content$l2.token.toUpperCase())), pageEdit))) : pageEdit), editPermission && this.state.visual && this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('sidebar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 15\n        }\n      }, __jsx(Sidebar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 17\n        }\n      }))), !editPermission && __jsx(React.Fragment, null, this.props.token ? __jsx(Forbidden, {\n        pathname: this.props.pathname,\n        staticContext: this.props.staticContext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 15\n        }\n      }) : __jsx(Unauthorized, {\n        pathname: this.props.pathname,\n        staticContext: this.props.staticContext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 15\n        }\n      })), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(React.Fragment, null, __jsx(Button, {\n          id: \"toolbar-save\",\n          className: \"save\",\n          \"aria-label\": this.props.intl.formatMessage(messages.save),\n          onClick: function onClick() {\n            return _this2.form.current.onSubmit();\n          },\n          disabled: this.props.updateRequest.loading,\n          loading: this.props.updateRequest.loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 19\n          }\n        }, __jsx(Icon, {\n          name: saveSVG,\n          className: \"circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.save),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 21\n          }\n        })), __jsx(Button, {\n          className: \"cancel\",\n          \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n          onClick: function onClick() {\n            return _this2.onCancel();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 19\n          }\n        }, __jsx(Icon, {\n          name: clearSVG,\n          className: \"circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.cancel),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 21\n          }\n        })), config.settings.isMultilingual && __jsx(CompareLanguages, {\n          content: this.props.content,\n          visual: this.state.visual,\n          setComparingLanguage: function setComparingLanguage(lang, id) {\n            _this2.setComparingLanguage(lang, id);\n          },\n          comparingLanguage: this.state.comparingLanguage,\n          pathname: this.props.location.pathname,\n          toolbarRef: this.toolbarRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 21\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return Edit;\n}(Component);\n_defineProperty(Edit, \"propTypes\", {\n  updateContent: PropTypes.func.isRequired,\n  getContent: PropTypes.func.isRequired,\n  getSchema: PropTypes.func.isRequired,\n  lockContent: PropTypes.func.isRequired,\n  unlockContent: PropTypes.func.isRequired,\n  updateRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  schemaRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  getRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  pathname: PropTypes.string.isRequired,\n  returnUrl: PropTypes.string,\n  content: PropTypes.shape({\n    '@type': PropTypes.string\n  }),\n  schema: PropTypes.objectOf(PropTypes.any),\n  objectActions: PropTypes.array,\n  newId: PropTypes.string\n});\n_defineProperty(Edit, \"defaultProps\", {\n  schema: null,\n  content: null,\n  returnUrl: null\n});\nexport var __test__ = compose(injectIntl, connect(function (state, props) {\n  var _state$content$subreq, _state$content$subreq2;\n  return {\n    objectActions: state.actions.actions.object,\n    token: state.userSession.token,\n    content: state.content.data,\n    compare_to: (_state$content$subreq = state.content.subrequests) === null || _state$content$subreq === void 0 ? void 0 : (_state$content$subreq2 = _state$content$subreq.compare_to) === null || _state$content$subreq2 === void 0 ? void 0 : _state$content$subreq2.data,\n    schema: state.schema.schema,\n    getRequest: state.content.get,\n    schemaRequest: state.schema,\n    updateRequest: state.content.update,\n    createRequest: state.content.create,\n    pathname: props.location.pathname,\n    returnUrl: qs.parse(props.location.search).return_url\n  };\n}, {\n  updateContent: updateContent,\n  getContent: getContent,\n  getSchema: getSchema,\n  lockContent: lockContent,\n  unlockContent: unlockContent\n}))(Edit);\nexport default compose(injectIntl, asyncConnect([{\n  key: 'actions',\n  promise: function () {\n    var _promise = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n      var location, dispatch;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              location = _ref.location, dispatch = _ref.store.dispatch;\n              _context.next = 3;\n              return dispatch(listActions(getBaseUrl(location.pathname)));\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    function promise(_x) {\n      return _promise.apply(this, arguments);\n    }\n    return promise;\n  }()\n}, {\n  key: 'content',\n  promise: function () {\n    var _promise2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref2) {\n      var location, dispatch, content;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              location = _ref2.location, dispatch = _ref2.store.dispatch;\n              _context2.next = 3;\n              return dispatch(getContent(getBaseUrl(location.pathname)));\n            case 3:\n              content = _context2.sent;\n              if (!((content === null || content === void 0 ? void 0 : content.lock) !== undefined)) {\n                _context2.next = 7;\n                break;\n              }\n              _context2.next = 7;\n              return dispatch(lockContent(getBaseUrl(location.pathname)));\n            case 7:\n              return _context2.abrupt(\"return\", content);\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    function promise(_x2) {\n      return _promise2.apply(this, arguments);\n    }\n    return promise;\n  }()\n}]), connect(function (state, props) {\n  var _state$content$subreq3, _state$content$subreq4;\n  return {\n    objectActions: state.actions.actions.object,\n    token: state.userSession.token,\n    content: state.content.data,\n    compare_to: (_state$content$subreq3 = state.content.subrequests) === null || _state$content$subreq3 === void 0 ? void 0 : (_state$content$subreq4 = _state$content$subreq3.compare_to) === null || _state$content$subreq4 === void 0 ? void 0 : _state$content$subreq4.data,\n    schema: state.schema.schema,\n    getRequest: state.content.get,\n    schemaRequest: state.schema,\n    updateRequest: state.content.update,\n    pathname: props.location.pathname,\n    returnUrl: qs.parse(props.location.search).return_url\n  };\n}, {\n  updateContent: updateContent,\n  getContent: getContent,\n  getSchema: getSchema,\n  lockContent: lockContent,\n  unlockContent: unlockContent\n}), preloadLazyLibs('cms'))(Edit);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","connect","compose","asyncConnect","defineMessages","injectIntl","Button","Grid","Menu","Portal","qs","toast","Forbidden","Form","Icon","Sidebar","Toast","Toolbar","Unauthorized","CompareLanguages","TranslationObject","updateContent","getContent","lockContent","unlockContent","getSchema","listActions","getBaseUrl","hasBlocksData","preloadLazyLibs","saveSVG","clearSVG","config","messages","edit","save","cancel","error","Edit","props","createRef","state","visual","isClient","formSelected","newId","onCancel","bind","onSubmit","getRequest","loaded","content","pathname","setState","comparingLanguage","nextProps","loading","schemaRequest","schema","properties","updateRequest","history","push","returnUrl","message","response","body","text","DOMParser","parseFromString","all","textContent","intl","formatMessage","status","compare_to","compareTo","lock","locked","baseUrl","replace","data","lock_token","token","headers","id","lang","content_id","editPermission","objectActions","pageEdit","form","title","length","language","toUpperCase","document","getElementById","staticContext","current","settings","isMultilingual","setComparingLanguage","location","toolbarRef","func","isRequired","shape","bool","string","objectOf","any","array","__test__","actions","object","userSession","subrequests","get","update","createRequest","create","parse","search","return_url","key","promise","dispatch","store","undefined"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Edit/Edit.jsx"],"sourcesContent":["/**\n * Edit container.\n * @module components/manage/Edit/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Button, Grid, Menu } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport qs from 'query-string';\nimport { find } from 'lodash';\nimport { toast } from 'react-toastify';\n\nimport {\n  Forbidden,\n  Form,\n  Icon,\n  Sidebar,\n  Toast,\n  Toolbar,\n  Unauthorized,\n  CompareLanguages,\n  TranslationObject,\n} from '@plone/volto/components';\nimport {\n  updateContent,\n  getContent,\n  lockContent,\n  unlockContent,\n  getSchema,\n  listActions,\n} from '@plone/volto/actions';\nimport { getBaseUrl, hasBlocksData } from '@plone/volto/helpers';\nimport { preloadLazyLibs } from '@plone/volto/helpers/Loadable';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  edit: {\n    id: 'Edit {title}',\n    defaultMessage: 'Edit {title}',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n});\n\n/**\n * Edit class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateContent: PropTypes.func.isRequired,\n    getContent: PropTypes.func.isRequired,\n    getSchema: PropTypes.func.isRequired,\n    lockContent: PropTypes.func.isRequired,\n    unlockContent: PropTypes.func.isRequired,\n    updateRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    schemaRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    getRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    returnUrl: PropTypes.string,\n    content: PropTypes.shape({\n      '@type': PropTypes.string,\n    }),\n    schema: PropTypes.objectOf(PropTypes.any),\n    objectActions: PropTypes.array,\n    newId: PropTypes.string,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    schema: null,\n    content: null,\n    returnUrl: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      visual: true,\n      isClient: false,\n      error: null,\n      formSelected: 'editForm',\n      newId: null,\n    };\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.getRequest.loaded && this.props.content?.['@type']) {\n      this.props.getSchema(\n        this.props.content['@type'],\n        getBaseUrl(this.props.pathname),\n      );\n    }\n    this.setState({\n      isClient: true,\n      comparingLanguage: null,\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.getRequest.loading && nextProps.getRequest.loaded) {\n      if (nextProps.content['@type']) {\n        this.props.getSchema(\n          nextProps.content['@type'],\n          getBaseUrl(this.props.pathname),\n        );\n      }\n    }\n    if (this.props.schemaRequest.loading && nextProps.schemaRequest.loaded) {\n      if (!hasBlocksData(nextProps.schema.properties)) {\n        this.setState({\n          visual: false,\n        });\n      }\n    }\n    // Hack for make the Plone site editable by Volto Editor without checkings\n    if (this.props?.content?.['@type'] === 'Plone Site') {\n      this.setState({\n        visual: true,\n      });\n    }\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.history.push(\n        this.props.returnUrl || getBaseUrl(this.props.pathname),\n      );\n    }\n\n    if (this.props.updateRequest.loading && nextProps.updateRequest.error) {\n      const message =\n        nextProps.updateRequest.error?.response?.body?.error?.message ||\n        nextProps.updateRequest.error?.response?.body?.message ||\n        nextProps.updateRequest.error?.response?.text ||\n        '';\n\n      const error =\n        new DOMParser().parseFromString(message, 'text/html')?.all[0]\n          ?.textContent || message;\n\n      this.setState({ error: error });\n\n      toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.error)}\n          content={`${nextProps.updateRequest.error.status} ${error}`}\n        />,\n      );\n    }\n\n    if (\n      nextProps.compare_to &&\n      ((this.state.compareTo &&\n        nextProps.compare_to['@id'] !== this.state.compareTo['@id']) ||\n        !this.state.compareTo)\n    ) {\n      this.setState({ compareTo: nextProps.compare_to });\n    }\n  }\n\n  /**\n   * Component will unmount\n   * @method componentWillUnmount\n   * @returns {undefined}\n   */\n  componentWillUnmount() {\n    if (this.props.content?.lock?.locked) {\n      const baseUrl = getBaseUrl(this.props.pathname);\n      const { newId } = this.state;\n      // Unlock the page, taking a possible id change into account\n      this.props.unlockContent(\n        newId ? baseUrl.replace(/\\/[^/]*$/, '/' + newId) : baseUrl,\n      );\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    const lock_token = this.props.content?.lock?.token;\n    const headers = lock_token ? { 'Lock-Token': lock_token } : {};\n    // if the id has changed, remember it for unlock control\n    if ('id' in data) {\n      this.setState({ newId: data.id });\n    }\n    this.props.updateContent(getBaseUrl(this.props.pathname), data, headers);\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(\n      this.props.returnUrl || getBaseUrl(this.props.pathname),\n    );\n  }\n\n  setComparingLanguage(lang, content_id) {\n    this.setState({ comparingLanguage: lang });\n    this.props.getContent(content_id, null, 'compare_to', null);\n  }\n\n  form = React.createRef();\n  toolbarRef = React.createRef;\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const editPermission = find(this.props.objectActions, { id: 'edit' });\n\n    const pageEdit = (\n      <Form\n        isEditForm\n        ref={this.form}\n        schema={this.props.schema}\n        type={this.props.content?.['@type']}\n        formData={this.props.content}\n        requestError={this.state.error}\n        onSubmit={this.onSubmit}\n        hideActions\n        pathname={this.props.pathname}\n        visual={this.state.visual}\n        title={\n          this.props?.schema?.title\n            ? this.props.intl.formatMessage(messages.edit, {\n                title: this.props.schema.title,\n              })\n            : null\n        }\n        loading={this.props.updateRequest.loading}\n        isFormSelected={this.state.formSelected === 'editForm'}\n        onSelectForm={() => {\n          this.setState({ formSelected: 'editForm' });\n        }}\n      />\n    );\n\n    return (\n      <div id=\"page-edit\">\n        {this.props.objectActions?.length > 0 && (\n          <>\n            {editPermission && (\n              <>\n                <Helmet\n                  title={\n                    this.props?.schema?.title\n                      ? this.props.intl.formatMessage(messages.edit, {\n                          title: this.props.schema.title,\n                        })\n                      : null\n                  }\n                >\n                  {this.props.content?.language && (\n                    <html lang={this.props.content.language.token} />\n                  )}\n                </Helmet>\n\n                {this.state.comparingLanguage && this.state.compareTo ? (\n                  <Grid\n                    celled=\"internally\"\n                    stackable\n                    columns={2}\n                    id=\"page-compare-translation\"\n                  >\n                    <Grid.Column className=\"source-object\">\n                      <TranslationObject\n                        translationObject={this.state.compareTo}\n                        schema={this.props.schema}\n                        pathname={this.props.pathname}\n                        visual={this.state.visual}\n                        isFormSelected={\n                          this.state.formSelected === 'translationObjectForm'\n                        }\n                        onSelectForm={() => {\n                          this.setState({\n                            formSelected: 'translationObjectForm',\n                          });\n                        }}\n                      />\n                    </Grid.Column>\n                    <Grid.Column>\n                      <div className=\"new-translation\">\n                        <Menu pointing secondary attached tabular>\n                          <Menu.Item\n                            name={this.props.content.language?.token.toUpperCase()}\n                            active={true}\n                          >\n                            {this.props.content.language?.token.toUpperCase()}\n                          </Menu.Item>\n                        </Menu>\n\n                        {pageEdit}\n                      </div>\n                    </Grid.Column>\n                  </Grid>\n                ) : (\n                  pageEdit\n                )}\n              </>\n            )}\n\n            {editPermission && this.state.visual && this.state.isClient && (\n              <Portal node={document.getElementById('sidebar')}>\n                <Sidebar />\n              </Portal>\n            )}\n          </>\n        )}\n        {!editPermission && (\n          <>\n            {this.props.token ? (\n              <Forbidden\n                pathname={this.props.pathname}\n                staticContext={this.props.staticContext}\n              />\n            ) : (\n              <Unauthorized\n                pathname={this.props.pathname}\n                staticContext={this.props.staticContext}\n              />\n            )}\n          </>\n        )}\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Button\n                    id=\"toolbar-save\"\n                    className=\"save\"\n                    aria-label={this.props.intl.formatMessage(messages.save)}\n                    onClick={() => this.form.current.onSubmit()}\n                    disabled={this.props.updateRequest.loading}\n                    loading={this.props.updateRequest.loading}\n                  >\n                    <Icon\n                      name={saveSVG}\n                      className=\"circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.save)}\n                    />\n                  </Button>\n                  <Button\n                    className=\"cancel\"\n                    aria-label={this.props.intl.formatMessage(messages.cancel)}\n                    onClick={() => this.onCancel()}\n                  >\n                    <Icon\n                      name={clearSVG}\n                      className=\"circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.cancel)}\n                    />\n                  </Button>\n\n                  {config.settings.isMultilingual && (\n                    <CompareLanguages\n                      content={this.props.content}\n                      visual={this.state.visual}\n                      setComparingLanguage={(lang, id) => {\n                        this.setComparingLanguage(lang, id);\n                      }}\n                      comparingLanguage={this.state.comparingLanguage}\n                      pathname={this.props.location.pathname}\n                      toolbarRef={this.toolbarRef}\n                    />\n                  )}\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport const __test__ = compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      objectActions: state.actions.actions.object,\n      token: state.userSession.token,\n      content: state.content.data,\n      compare_to: state.content.subrequests?.compare_to?.data,\n      schema: state.schema.schema,\n      getRequest: state.content.get,\n      schemaRequest: state.schema,\n      updateRequest: state.content.update,\n      createRequest: state.content.create,\n      pathname: props.location.pathname,\n      returnUrl: qs.parse(props.location.search).return_url,\n    }),\n    {\n      updateContent,\n      getContent,\n      getSchema,\n      lockContent,\n      unlockContent,\n    },\n  ),\n)(Edit);\n\nexport default compose(\n  injectIntl,\n  asyncConnect([\n    {\n      key: 'actions',\n      promise: async ({ location, store: { dispatch } }) => {\n        await dispatch(listActions(getBaseUrl(location.pathname)));\n      },\n    },\n    {\n      key: 'content',\n      promise: async ({ location, store: { dispatch } }) => {\n        const content = await dispatch(\n          getContent(getBaseUrl(location.pathname)),\n        );\n        if (content?.lock !== undefined) {\n          await dispatch(lockContent(getBaseUrl(location.pathname)));\n        }\n        return content;\n      },\n    },\n  ]),\n  connect(\n    (state, props) => ({\n      objectActions: state.actions.actions.object,\n      token: state.userSession.token,\n      content: state.content.data,\n      compare_to: state.content.subrequests?.compare_to?.data,\n      schema: state.schema.schema,\n      getRequest: state.content.get,\n      schemaRequest: state.schema,\n      updateRequest: state.content.update,\n      pathname: props.location.pathname,\n      returnUrl: qs.parse(props.location.search).return_url,\n    }),\n    {\n      updateContent,\n      getContent,\n      getSchema,\n      lockContent,\n      unlockContent,\n    },\n  ),\n  preloadLazyLibs('cms'),\n)(Edit);\n"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,cAAc,EAAEC,UAAU,QAAQ,YAAY;AACvD,SAASC,MAAM,EAAEC,IAAI,EAAEC,IAAI,QAAQ,mBAAmB;AACtD,SAASC,MAAM,QAAQ,cAAc;AACrC,OAAOC,EAAE,MAAM,cAAc;AAE7B,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,SACEC,SAAS,EACTC,IAAI,EACJC,IAAI,EACJC,OAAO,EACPC,KAAK,EACLC,OAAO,EACPC,YAAY,EACZC,gBAAgB,EAChBC,iBAAiB,QACZ,yBAAyB;AAChC,SACEC,aAAa,EACbC,UAAU,EACVC,WAAW,EACXC,aAAa,EACbC,SAAS,EACTC,WAAW,QACN,sBAAsB;AAC7B,SAASC,UAAU,EAAEC,aAAa,QAAQ,sBAAsB;AAChE,SAASC,eAAe,QAAQ,+BAA+B;AAE/D,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,QAAQ,MAAM,8BAA8B;AAEnD,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,IAAMC,QAAQ,GAAG7B,cAAc,CAAC;EAC9B8B,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,MAAM;IAAA;IAAA;EAAA,CAGL;EACDC,KAAK;IAAA;IAAA;EAAA;AAIP,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AAJA,IAKMC,IAAI;EAAA;EAAA;EACR;AACF;AACA;AACA;AACA;;EA6BE;AACF;AACA;AACA;AACA;;EAOE;AACF;AACA;AACA;AACA;AACA;EACE,cAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IAAE,oEAgJR1C,KAAK,CAAC2C,SAAS,EAAE;IAAA,6DACX3C,KAAK,CAAC2C,SAAS;IAhJ1B,MAAKC,KAAK,GAAG;MACXC,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE,KAAK;MACfN,KAAK,EAAE,IAAI;MACXO,YAAY,EAAE,UAAU;MACxBC,KAAK,EAAE;IACT,CAAC;IACD,MAAKC,QAAQ,GAAG,MAAKA,QAAQ,CAACC,IAAI,+BAAM;IACxC,MAAKC,QAAQ,GAAG,MAAKA,QAAQ,CAACD,IAAI,+BAAM;IAAC;EAC3C;;EAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,6BAAoB;MAAA;MAClB,IAAI,IAAI,CAACR,KAAK,CAACU,UAAU,CAACC,MAAM,2BAAI,IAAI,CAACX,KAAK,CAACY,OAAO,gDAAlB,oBAAqB,OAAO,CAAC,EAAE;QACjE,IAAI,CAACZ,KAAK,CAACd,SAAS,CAClB,IAAI,CAACc,KAAK,CAACY,OAAO,CAAC,OAAO,CAAC,EAC3BxB,UAAU,CAAC,IAAI,CAACY,KAAK,CAACa,QAAQ,CAAC,CAChC;MACH;MACA,IAAI,CAACC,QAAQ,CAAC;QACZV,QAAQ,EAAE,IAAI;QACdW,iBAAiB,EAAE;MACrB,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA;IAAA,OAMA,0CAAiCC,SAAS,EAAE;MAAA;MAC1C,IAAI,IAAI,CAAChB,KAAK,CAACU,UAAU,CAACO,OAAO,IAAID,SAAS,CAACN,UAAU,CAACC,MAAM,EAAE;QAChE,IAAIK,SAAS,CAACJ,OAAO,CAAC,OAAO,CAAC,EAAE;UAC9B,IAAI,CAACZ,KAAK,CAACd,SAAS,CAClB8B,SAAS,CAACJ,OAAO,CAAC,OAAO,CAAC,EAC1BxB,UAAU,CAAC,IAAI,CAACY,KAAK,CAACa,QAAQ,CAAC,CAChC;QACH;MACF;MACA,IAAI,IAAI,CAACb,KAAK,CAACkB,aAAa,CAACD,OAAO,IAAID,SAAS,CAACE,aAAa,CAACP,MAAM,EAAE;QACtE,IAAI,CAACtB,aAAa,CAAC2B,SAAS,CAACG,MAAM,CAACC,UAAU,CAAC,EAAE;UAC/C,IAAI,CAACN,QAAQ,CAAC;YACZX,MAAM,EAAE;UACV,CAAC,CAAC;QACJ;MACF;MACA;MACA,IAAI,oBAAI,CAACH,KAAK,wEAAV,YAAYY,OAAO,yDAAnB,qBAAsB,OAAO,CAAC,MAAK,YAAY,EAAE;QACnD,IAAI,CAACE,QAAQ,CAAC;UACZX,MAAM,EAAE;QACV,CAAC,CAAC;MACJ;MACA,IAAI,IAAI,CAACH,KAAK,CAACqB,aAAa,CAACJ,OAAO,IAAID,SAAS,CAACK,aAAa,CAACV,MAAM,EAAE;QACtE,IAAI,CAACX,KAAK,CAACsB,OAAO,CAACC,IAAI,CACrB,IAAI,CAACvB,KAAK,CAACwB,SAAS,IAAIpC,UAAU,CAAC,IAAI,CAACY,KAAK,CAACa,QAAQ,CAAC,CACxD;MACH;MAEA,IAAI,IAAI,CAACb,KAAK,CAACqB,aAAa,CAACJ,OAAO,IAAID,SAAS,CAACK,aAAa,CAACvB,KAAK,EAAE;QAAA;QACrE,IAAM2B,OAAO,GACX,0BAAAT,SAAS,CAACK,aAAa,CAACvB,KAAK,oFAA7B,sBAA+B4B,QAAQ,qFAAvC,uBAAyCC,IAAI,qFAA7C,uBAA+C7B,KAAK,2DAApD,uBAAsD2B,OAAO,gCAC7DT,SAAS,CAACK,aAAa,CAACvB,KAAK,qFAA7B,uBAA+B4B,QAAQ,qFAAvC,uBAAyCC,IAAI,2DAA7C,uBAA+CF,OAAO,gCACtDT,SAAS,CAACK,aAAa,CAACvB,KAAK,qFAA7B,uBAA+B4B,QAAQ,2DAAvC,uBAAyCE,IAAI,KAC7C,EAAE;QAEJ,IAAM9B,KAAK,GACT,8BAAI+B,SAAS,EAAE,CAACC,eAAe,CAACL,OAAO,EAAE,WAAW,CAAC,oFAArD,sBAAuDM,GAAG,CAAC,CAAC,CAAC,2DAA7D,uBACIC,WAAW,KAAIP,OAAO;QAE5B,IAAI,CAACX,QAAQ,CAAC;UAAEhB,KAAK,EAAEA;QAAM,CAAC,CAAC;QAE/B1B,KAAK,CAAC0B,KAAK,CACT,MAAC,KAAK;UACJ,KAAK;UACL,KAAK,EAAE,IAAI,CAACE,KAAK,CAACiC,IAAI,CAACC,aAAa,CAACxC,QAAQ,CAACI,KAAK,CAAE;UACrD,OAAO,YAAKkB,SAAS,CAACK,aAAa,CAACvB,KAAK,CAACqC,MAAM,cAAIrC,KAAK,CAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAC5D,CACH;MACH;MAEA,IACEkB,SAAS,CAACoB,UAAU,KAClB,IAAI,CAAClC,KAAK,CAACmC,SAAS,IACpBrB,SAAS,CAACoB,UAAU,CAAC,KAAK,CAAC,KAAK,IAAI,CAAClC,KAAK,CAACmC,SAAS,CAAC,KAAK,CAAC,IAC3D,CAAC,IAAI,CAACnC,KAAK,CAACmC,SAAS,CAAC,EACxB;QACA,IAAI,CAACvB,QAAQ,CAAC;UAAEuB,SAAS,EAAErB,SAAS,CAACoB;QAAW,CAAC,CAAC;MACpD;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,gCAAuB;MAAA;MACrB,4BAAI,IAAI,CAACpC,KAAK,CAACY,OAAO,0EAAlB,qBAAoB0B,IAAI,kDAAxB,sBAA0BC,MAAM,EAAE;QACpC,IAAMC,OAAO,GAAGpD,UAAU,CAAC,IAAI,CAACY,KAAK,CAACa,QAAQ,CAAC;QAC/C,IAAQP,KAAK,GAAK,IAAI,CAACJ,KAAK,CAApBI,KAAK;QACb;QACA,IAAI,CAACN,KAAK,CAACf,aAAa,CACtBqB,KAAK,GAAGkC,OAAO,CAACC,OAAO,CAAC,UAAU,EAAE,GAAG,GAAGnC,KAAK,CAAC,GAAGkC,OAAO,CAC3D;MACH;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA;IAAA,OAMA,kBAASE,IAAI,EAAE;MAAA;MACb,IAAMC,UAAU,2BAAG,IAAI,CAAC3C,KAAK,CAACY,OAAO,kFAAlB,qBAAoB0B,IAAI,0DAAxB,sBAA0BM,KAAK;MAClD,IAAMC,OAAO,GAAGF,UAAU,GAAG;QAAE,YAAY,EAAEA;MAAW,CAAC,GAAG,CAAC,CAAC;MAC9D;MACA,IAAI,IAAI,IAAID,IAAI,EAAE;QAChB,IAAI,CAAC5B,QAAQ,CAAC;UAAER,KAAK,EAAEoC,IAAI,CAACI;QAAG,CAAC,CAAC;MACnC;MACA,IAAI,CAAC9C,KAAK,CAAClB,aAAa,CAACM,UAAU,CAAC,IAAI,CAACY,KAAK,CAACa,QAAQ,CAAC,EAAE6B,IAAI,EAAEG,OAAO,CAAC;IAC1E;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,oBAAW;MACT,IAAI,CAAC7C,KAAK,CAACsB,OAAO,CAACC,IAAI,CACrB,IAAI,CAACvB,KAAK,CAACwB,SAAS,IAAIpC,UAAU,CAAC,IAAI,CAACY,KAAK,CAACa,QAAQ,CAAC,CACxD;IACH;EAAC;IAAA;IAAA,OAED,8BAAqBkC,IAAI,EAAEC,UAAU,EAAE;MACrC,IAAI,CAAClC,QAAQ,CAAC;QAAEC,iBAAiB,EAAEgC;MAAK,CAAC,CAAC;MAC1C,IAAI,CAAC/C,KAAK,CAACjB,UAAU,CAACiE,UAAU,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC;IAC7D;EAAC;IAAA;IAAA;IAID;AACF;AACA;AACA;AACA;IACE,kBAAS;MAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;MACP,IAAMC,cAAc,GAAG,MAAK,IAAI,CAACjD,KAAK,CAACkD,aAAa,EAAE;QAAEJ,EAAE,EAAE;MAAO,CAAC,CAAC;MAErE,IAAMK,QAAQ,GACZ,MAAC,IAAI;QACH,UAAU;QACV,GAAG,EAAE,IAAI,CAACC,IAAK;QACf,MAAM,EAAE,IAAI,CAACpD,KAAK,CAACmB,MAAO;QAC1B,IAAI,0BAAE,IAAI,CAACnB,KAAK,CAACY,OAAO,yDAAlB,qBAAqB,OAAO,CAAE;QACpC,QAAQ,EAAE,IAAI,CAACZ,KAAK,CAACY,OAAQ;QAC7B,YAAY,EAAE,IAAI,CAACV,KAAK,CAACJ,KAAM;QAC/B,QAAQ,EAAE,IAAI,CAACW,QAAS;QACxB,WAAW;QACX,QAAQ,EAAE,IAAI,CAACT,KAAK,CAACa,QAAS;QAC9B,MAAM,EAAE,IAAI,CAACX,KAAK,CAACC,MAAO;QAC1B,KAAK,EACH,oBAAI,CAACH,KAAK,gEAAV,aAAYmB,MAAM,gDAAlB,oBAAoBkC,KAAK,GACrB,IAAI,CAACrD,KAAK,CAACiC,IAAI,CAACC,aAAa,CAACxC,QAAQ,CAACC,IAAI,EAAE;UAC3C0D,KAAK,EAAE,IAAI,CAACrD,KAAK,CAACmB,MAAM,CAACkC;QAC3B,CAAC,CAAC,GACF,IACL;QACD,OAAO,EAAE,IAAI,CAACrD,KAAK,CAACqB,aAAa,CAACJ,OAAQ;QAC1C,cAAc,EAAE,IAAI,CAACf,KAAK,CAACG,YAAY,KAAK,UAAW;QACvD,YAAY,EAAE,wBAAM;UAClB,MAAI,CAACS,QAAQ,CAAC;YAAET,YAAY,EAAE;UAAW,CAAC,CAAC;QAC7C,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAEL;MAED,OACE;QAAK,EAAE,EAAC,WAAW;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAChB,8BAAI,CAACL,KAAK,CAACkD,aAAa,0DAAxB,sBAA0BI,MAAM,IAAG,CAAC,IACnC,4BACGL,cAAc,IACb,4BACE,MAAC,MAAM;QACL,KAAK,EACH,oBAAI,CAACjD,KAAK,gEAAV,aAAYmB,MAAM,gDAAlB,oBAAoBkC,KAAK,GACrB,IAAI,CAACrD,KAAK,CAACiC,IAAI,CAACC,aAAa,CAACxC,QAAQ,CAACC,IAAI,EAAE;UAC3C0D,KAAK,EAAE,IAAI,CAACrD,KAAK,CAACmB,MAAM,CAACkC;QAC3B,CAAC,CAAC,GACF,IACL;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAEA,6BAAI,CAACrD,KAAK,CAACY,OAAO,yDAAlB,qBAAoB2C,QAAQ,KAC3B;QAAM,IAAI,EAAE,IAAI,CAACvD,KAAK,CAACY,OAAO,CAAC2C,QAAQ,CAACX,KAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAC/C,CACM,EAER,IAAI,CAAC1C,KAAK,CAACa,iBAAiB,IAAI,IAAI,CAACb,KAAK,CAACmC,SAAS,GACnD,MAAC,IAAI;QACH,MAAM,EAAC,YAAY;QACnB,SAAS;QACT,OAAO,EAAE,CAAE;QACX,EAAE,EAAC,0BAA0B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAE7B,MAAC,IAAI,CAAC,MAAM;QAAC,SAAS,EAAC,eAAe;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACpC,MAAC,iBAAiB;QAChB,iBAAiB,EAAE,IAAI,CAACnC,KAAK,CAACmC,SAAU;QACxC,MAAM,EAAE,IAAI,CAACrC,KAAK,CAACmB,MAAO;QAC1B,QAAQ,EAAE,IAAI,CAACnB,KAAK,CAACa,QAAS;QAC9B,MAAM,EAAE,IAAI,CAACX,KAAK,CAACC,MAAO;QAC1B,cAAc,EACZ,IAAI,CAACD,KAAK,CAACG,YAAY,KAAK,uBAC7B;QACD,YAAY,EAAE,wBAAM;UAClB,MAAI,CAACS,QAAQ,CAAC;YACZT,YAAY,EAAE;UAChB,CAAC,CAAC;QACJ,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACF,CACU,EACd,MAAC,IAAI,CAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACV;QAAK,SAAS,EAAC,iBAAiB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC9B,MAAC,IAAI;QAAC,QAAQ;QAAC,SAAS;QAAC,QAAQ;QAAC,OAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACvC,MAAC,IAAI,CAAC,IAAI;QACR,IAAI,2BAAE,IAAI,CAACL,KAAK,CAACY,OAAO,CAAC2C,QAAQ,0DAA3B,sBAA6BX,KAAK,CAACY,WAAW,EAAG;QACvD,MAAM,EAAE,IAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,6BAEZ,IAAI,CAACxD,KAAK,CAACY,OAAO,CAAC2C,QAAQ,2DAA3B,uBAA6BX,KAAK,CAACY,WAAW,EAAE,CACvC,CACP,EAENL,QAAQ,CACL,CACM,CACT,GAEPA,QACD,CAEJ,EAEAF,cAAc,IAAI,IAAI,CAAC/C,KAAK,CAACC,MAAM,IAAI,IAAI,CAACD,KAAK,CAACE,QAAQ,IACzD,MAAC,MAAM;QAAC,IAAI,EAAEqD,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC/C,MAAC,OAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CAEd,CAEJ,EACA,CAACT,cAAc,IACd,4BACG,IAAI,CAACjD,KAAK,CAAC4C,KAAK,GACf,MAAC,SAAS;QACR,QAAQ,EAAE,IAAI,CAAC5C,KAAK,CAACa,QAAS;QAC9B,aAAa,EAAE,IAAI,CAACb,KAAK,CAAC2D,aAAc;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACxC,GAEF,MAAC,YAAY;QACX,QAAQ,EAAE,IAAI,CAAC3D,KAAK,CAACa,QAAS;QAC9B,aAAa,EAAE,IAAI,CAACb,KAAK,CAAC2D,aAAc;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAE3C,CAEJ,EACA,IAAI,CAACzD,KAAK,CAACE,QAAQ,IAClB,MAAC,MAAM;QAAC,IAAI,EAAEqD,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC/C,MAAC,OAAO;QACN,QAAQ,EAAE,IAAI,CAAC1D,KAAK,CAACa,QAAS;QAC9B,sBAAsB;QACtB,KAAK,EACH,4BACE,MAAC,MAAM;UACL,EAAE,EAAC,cAAc;UACjB,SAAS,EAAC,MAAM;UAChB,cAAY,IAAI,CAACb,KAAK,CAACiC,IAAI,CAACC,aAAa,CAACxC,QAAQ,CAACE,IAAI,CAAE;UACzD,OAAO,EAAE;YAAA,OAAM,MAAI,CAACwD,IAAI,CAACQ,OAAO,CAACnD,QAAQ,EAAE;UAAA,CAAC;UAC5C,QAAQ,EAAE,IAAI,CAACT,KAAK,CAACqB,aAAa,CAACJ,OAAQ;UAC3C,OAAO,EAAE,IAAI,CAACjB,KAAK,CAACqB,aAAa,CAACJ,OAAQ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAE1C,MAAC,IAAI;UACH,IAAI,EAAE1B,OAAQ;UACd,SAAS,EAAC,SAAS;UACnB,IAAI,EAAC,MAAM;UACX,KAAK,EAAE,IAAI,CAACS,KAAK,CAACiC,IAAI,CAACC,aAAa,CAACxC,QAAQ,CAACE,IAAI,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACpD,CACK,EACT,MAAC,MAAM;UACL,SAAS,EAAC,QAAQ;UAClB,cAAY,IAAI,CAACI,KAAK,CAACiC,IAAI,CAACC,aAAa,CAACxC,QAAQ,CAACG,MAAM,CAAE;UAC3D,OAAO,EAAE;YAAA,OAAM,MAAI,CAACU,QAAQ,EAAE;UAAA,CAAC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAE/B,MAAC,IAAI;UACH,IAAI,EAAEf,QAAS;UACf,SAAS,EAAC,SAAS;UACnB,IAAI,EAAC,MAAM;UACX,KAAK,EAAE,IAAI,CAACQ,KAAK,CAACiC,IAAI,CAACC,aAAa,CAACxC,QAAQ,CAACG,MAAM,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACtD,CACK,EAERJ,MAAM,CAACoE,QAAQ,CAACC,cAAc,IAC7B,MAAC,gBAAgB;UACf,OAAO,EAAE,IAAI,CAAC9D,KAAK,CAACY,OAAQ;UAC5B,MAAM,EAAE,IAAI,CAACV,KAAK,CAACC,MAAO;UAC1B,oBAAoB,EAAE,8BAAC4C,IAAI,EAAED,EAAE,EAAK;YAClC,MAAI,CAACiB,oBAAoB,CAAChB,IAAI,EAAED,EAAE,CAAC;UACrC,CAAE;UACF,iBAAiB,EAAE,IAAI,CAAC5C,KAAK,CAACa,iBAAkB;UAChD,QAAQ,EAAE,IAAI,CAACf,KAAK,CAACgE,QAAQ,CAACnD,QAAS;UACvC,UAAU,EAAE,IAAI,CAACoD,UAAW;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAE/B,CAEJ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACD,CAEL,CACG;IAEV;EAAC;EAAA;AAAA,EArXgB1G,SAAS;AAAA,gBAAtBwC,IAAI,eAMW;EACjBjB,aAAa,EAAEtB,SAAS,CAAC0G,IAAI,CAACC,UAAU;EACxCpF,UAAU,EAAEvB,SAAS,CAAC0G,IAAI,CAACC,UAAU;EACrCjF,SAAS,EAAE1B,SAAS,CAAC0G,IAAI,CAACC,UAAU;EACpCnF,WAAW,EAAExB,SAAS,CAAC0G,IAAI,CAACC,UAAU;EACtClF,aAAa,EAAEzB,SAAS,CAAC0G,IAAI,CAACC,UAAU;EACxC9C,aAAa,EAAE7D,SAAS,CAAC4G,KAAK,CAAC;IAC7BnD,OAAO,EAAEzD,SAAS,CAAC6G,IAAI;IACvB1D,MAAM,EAAEnD,SAAS,CAAC6G;EACpB,CAAC,CAAC,CAACF,UAAU;EACbjD,aAAa,EAAE1D,SAAS,CAAC4G,KAAK,CAAC;IAC7BnD,OAAO,EAAEzD,SAAS,CAAC6G,IAAI;IACvB1D,MAAM,EAAEnD,SAAS,CAAC6G;EACpB,CAAC,CAAC,CAACF,UAAU;EACbzD,UAAU,EAAElD,SAAS,CAAC4G,KAAK,CAAC;IAC1BnD,OAAO,EAAEzD,SAAS,CAAC6G,IAAI;IACvB1D,MAAM,EAAEnD,SAAS,CAAC6G;EACpB,CAAC,CAAC,CAACF,UAAU;EACbtD,QAAQ,EAAErD,SAAS,CAAC8G,MAAM,CAACH,UAAU;EACrC3C,SAAS,EAAEhE,SAAS,CAAC8G,MAAM;EAC3B1D,OAAO,EAAEpD,SAAS,CAAC4G,KAAK,CAAC;IACvB,OAAO,EAAE5G,SAAS,CAAC8G;EACrB,CAAC,CAAC;EACFnD,MAAM,EAAE3D,SAAS,CAAC+G,QAAQ,CAAC/G,SAAS,CAACgH,GAAG,CAAC;EACzCtB,aAAa,EAAE1F,SAAS,CAACiH,KAAK;EAC9BnE,KAAK,EAAE9C,SAAS,CAAC8G;AACnB,CAAC;AAAA,gBAhCGvE,IAAI,kBAuCc;EACpBoB,MAAM,EAAE,IAAI;EACZP,OAAO,EAAE,IAAI;EACbY,SAAS,EAAE;AACb,CAAC;AA6UH,OAAO,IAAMkD,QAAQ,GAAG/G,OAAO,CAC7BG,UAAU,EACVJ,OAAO,CACL,UAACwC,KAAK,EAAEF,KAAK;EAAA;EAAA,OAAM;IACjBkD,aAAa,EAAEhD,KAAK,CAACyE,OAAO,CAACA,OAAO,CAACC,MAAM;IAC3ChC,KAAK,EAAE1C,KAAK,CAAC2E,WAAW,CAACjC,KAAK;IAC9BhC,OAAO,EAAEV,KAAK,CAACU,OAAO,CAAC8B,IAAI;IAC3BN,UAAU,2BAAElC,KAAK,CAACU,OAAO,CAACkE,WAAW,oFAAzB,sBAA2B1C,UAAU,2DAArC,uBAAuCM,IAAI;IACvDvB,MAAM,EAAEjB,KAAK,CAACiB,MAAM,CAACA,MAAM;IAC3BT,UAAU,EAAER,KAAK,CAACU,OAAO,CAACmE,GAAG;IAC7B7D,aAAa,EAAEhB,KAAK,CAACiB,MAAM;IAC3BE,aAAa,EAAEnB,KAAK,CAACU,OAAO,CAACoE,MAAM;IACnCC,aAAa,EAAE/E,KAAK,CAACU,OAAO,CAACsE,MAAM;IACnCrE,QAAQ,EAAEb,KAAK,CAACgE,QAAQ,CAACnD,QAAQ;IACjCW,SAAS,EAAErD,EAAE,CAACgH,KAAK,CAACnF,KAAK,CAACgE,QAAQ,CAACoB,MAAM,CAAC,CAACC;EAC7C,CAAC;AAAA,CAAC,EACF;EACEvG,aAAa,EAAbA,aAAa;EACbC,UAAU,EAAVA,UAAU;EACVG,SAAS,EAATA,SAAS;EACTF,WAAW,EAAXA,WAAW;EACXC,aAAa,EAAbA;AACF,CAAC,CACF,CACF,CAACc,IAAI,CAAC;AAEP,eAAepC,OAAO,CACpBG,UAAU,EACVF,YAAY,CAAC,CACX;EACE0H,GAAG,EAAE,SAAS;EACdC,OAAO;IAAA,0EAAE;MAAA;MAAA;QAAA;UAAA;YAAA;cAASvB,QAAQ,QAARA,QAAQ,EAAWwB,QAAQ,QAAjBC,KAAK,CAAID,QAAQ;cAAA;cAAA,OACrCA,QAAQ,CAACrG,WAAW,CAACC,UAAU,CAAC4E,QAAQ,CAACnD,QAAQ,CAAC,CAAC,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAC3D;IAAA;MAAA;IAAA;IAAA;EAAA;AACH,CAAC,EACD;EACEyE,GAAG,EAAE,SAAS;EACdC,OAAO;IAAA,2EAAE;MAAA;MAAA;QAAA;UAAA;YAAA;cAASvB,QAAQ,SAARA,QAAQ,EAAWwB,QAAQ,SAAjBC,KAAK,CAAID,QAAQ;cAAA;cAAA,OACrBA,QAAQ,CAC5BzG,UAAU,CAACK,UAAU,CAAC4E,QAAQ,CAACnD,QAAQ,CAAC,CAAC,CAC1C;YAAA;cAFKD,OAAO;cAAA,MAGT,CAAAA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE0B,IAAI,MAAKoD,SAAS;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACvBF,QAAQ,CAACxG,WAAW,CAACI,UAAU,CAAC4E,QAAQ,CAACnD,QAAQ,CAAC,CAAC,CAAC;YAAA;cAAA,kCAErDD,OAAO;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACf;IAAA;MAAA;IAAA;IAAA;EAAA;AACH,CAAC,CACF,CAAC,EACFlD,OAAO,CACL,UAACwC,KAAK,EAAEF,KAAK;EAAA;EAAA,OAAM;IACjBkD,aAAa,EAAEhD,KAAK,CAACyE,OAAO,CAACA,OAAO,CAACC,MAAM;IAC3ChC,KAAK,EAAE1C,KAAK,CAAC2E,WAAW,CAACjC,KAAK;IAC9BhC,OAAO,EAAEV,KAAK,CAACU,OAAO,CAAC8B,IAAI;IAC3BN,UAAU,4BAAElC,KAAK,CAACU,OAAO,CAACkE,WAAW,qFAAzB,uBAA2B1C,UAAU,2DAArC,uBAAuCM,IAAI;IACvDvB,MAAM,EAAEjB,KAAK,CAACiB,MAAM,CAACA,MAAM;IAC3BT,UAAU,EAAER,KAAK,CAACU,OAAO,CAACmE,GAAG;IAC7B7D,aAAa,EAAEhB,KAAK,CAACiB,MAAM;IAC3BE,aAAa,EAAEnB,KAAK,CAACU,OAAO,CAACoE,MAAM;IACnCnE,QAAQ,EAAEb,KAAK,CAACgE,QAAQ,CAACnD,QAAQ;IACjCW,SAAS,EAAErD,EAAE,CAACgH,KAAK,CAACnF,KAAK,CAACgE,QAAQ,CAACoB,MAAM,CAAC,CAACC;EAC7C,CAAC;AAAA,CAAC,EACF;EACEvG,aAAa,EAAbA,aAAa;EACbC,UAAU,EAAVA,UAAU;EACVG,SAAS,EAATA,SAAS;EACTF,WAAW,EAAXA,WAAW;EACXC,aAAa,EAAbA;AACF,CAAC,CACF,EACDK,eAAe,CAAC,KAAK,CAAC,CACvB,CAACS,IAAI,CAAC"},"metadata":{"react-intl":{"messages":[{"id":"Edit {title}","defaultMessage":"Edit {title}"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Error","defaultMessage":"Error"}]}},"sourceType":"module","externalDependencies":[]}