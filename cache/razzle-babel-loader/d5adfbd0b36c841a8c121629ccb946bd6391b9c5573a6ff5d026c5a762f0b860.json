{"ast":null,"code":"import { ZOTERO } from '../constants';\nimport { nanoid } from '@plone/volto-slate/utils';\nimport { Transforms } from 'slate';\nexport const withZotero = editor => {\n  const {\n    normalizeNode,\n    isInline\n  } = editor;\n  editor.isInline = element => {\n    return element.type === ZOTERO ? true : isInline(element);\n  };\n  editor.normalizeNode = entry => {\n    var _node$data;\n    const [node, path] = entry;\n    if (node.type === ZOTERO && !((_node$data = node.data) !== null && _node$data !== void 0 && _node$data.uid)) {\n      var _node$data2;\n      Transforms.setNodes(editor, {\n        data: {\n          uid: nanoid(5),\n          footnote: (_node$data2 = node.data) === null || _node$data2 === void 0 ? void 0 : _node$data2.footnote\n        }\n      }, {\n        at: path\n      });\n    }\n    return normalizeNode(entry);\n  };\n  return editor;\n};","map":{"version":3,"names":["ZOTERO","nanoid","Transforms","withZotero","editor","normalizeNode","isInline","element","type","entry","node","path","data","uid","setNodes","footnote","at"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate-zotero/src/plugins/zotero/editor/extensions.js"],"sourcesContent":["import { ZOTERO } from '../constants';\nimport { nanoid } from '@plone/volto-slate/utils';\nimport { Transforms } from 'slate';\n\nexport const withZotero = (editor) => {\n  const { normalizeNode, isInline } = editor;\n\n  editor.isInline = (element) => {\n    return element.type === ZOTERO ? true : isInline(element);\n  };\n\n  editor.normalizeNode = (entry) => {\n    const [node, path] = entry;\n    if (node.type === ZOTERO && !node.data?.uid) {\n      Transforms.setNodes(\n        editor,\n        {\n          data: {\n            uid: nanoid(5),\n            footnote: node.data?.footnote,\n          },\n        },\n        {\n          at: path,\n        },\n      );\n    }\n    return normalizeNode(entry);\n  };\n\n  return editor;\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,cAAc;AACrC,SAASC,MAAM,QAAQ,0BAA0B;AACjD,SAASC,UAAU,QAAQ,OAAO;AAElC,OAAO,MAAMC,UAAU,GAAIC,MAAM,IAAK;EACpC,MAAM;IAAEC,aAAa;IAAEC;EAAS,CAAC,GAAGF,MAAM;EAE1CA,MAAM,CAACE,QAAQ,GAAIC,OAAO,IAAK;IAC7B,OAAOA,OAAO,CAACC,IAAI,KAAKR,MAAM,GAAG,IAAI,GAAGM,QAAQ,CAACC,OAAO,CAAC;EAC3D,CAAC;EAEDH,MAAM,CAACC,aAAa,GAAII,KAAK,IAAK;IAAA;IAChC,MAAM,CAACC,IAAI,EAAEC,IAAI,CAAC,GAAGF,KAAK;IAC1B,IAAIC,IAAI,CAACF,IAAI,KAAKR,MAAM,IAAI,gBAACU,IAAI,CAACE,IAAI,uCAAT,WAAWC,GAAG,GAAE;MAAA;MAC3CX,UAAU,CAACY,QAAQ,CACjBV,MAAM,EACN;QACEQ,IAAI,EAAE;UACJC,GAAG,EAAEZ,MAAM,CAAC,CAAC,CAAC;UACdc,QAAQ,iBAAEL,IAAI,CAACE,IAAI,gDAAT,YAAWG;QACvB;MACF,CAAC,EACD;QACEC,EAAE,EAAEL;MACN,CAAC,CACF;IACH;IACA,OAAON,aAAa,CAACI,KAAK,CAAC;EAC7B,CAAC;EAED,OAAOL,MAAM;AACf,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}