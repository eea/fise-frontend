{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _debounce from \"lodash/debounce\";\nimport _isString from \"lodash/isString\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/components/ResponsiveContainer.jsx\";\nvar __jsx = React.createElement;\n/*\n * Port of (MIT licensed)\n * https://github.com/recharts/recharts/blob/master/src/component/ResponsiveContainer.tsx\n * to JSX\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ReactResizeDetector from 'react-resize-detector';\nvar isPercent = function isPercent(value) {\n  return _isString(value) && value.indexOf('%') === value.length - 1;\n};\nfunction asNumber(value) {\n  if (_isString(value)) return value.toInteger();\n  return value;\n}\nvar ResponsiveContainer = /*#__PURE__*/function (_Component) {\n  _inherits(ResponsiveContainer, _Component);\n  var _super = _createSuper(ResponsiveContainer);\n  function ResponsiveContainer(props) {\n    var _this;\n    _classCallCheck(this, ResponsiveContainer);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"updateDimensionsImmediate\", function () {\n      if (!_this.mounted) {\n        return;\n      }\n      var newSize = _this.getContainerSize();\n      if (newSize) {\n        var _this$state = _this.state,\n          oldWidth = _this$state.containerWidth,\n          oldHeight = _this$state.containerHeight;\n        var containerWidth = newSize.containerWidth,\n          containerHeight = newSize.containerHeight;\n        if (containerWidth !== oldWidth || containerHeight !== oldHeight) {\n          _this.setState({\n            containerWidth: containerWidth,\n            containerHeight: containerHeight\n          });\n        }\n      }\n    });\n    _this.state = {\n      containerWidth: -1,\n      containerHeight: -1\n    };\n    _this.handleResize = props.debounce > 0 ? _debounce(_this.updateDimensionsImmediate, props.debounce) : _this.updateDimensionsImmediate;\n    return _this;\n  }\n  _createClass(ResponsiveContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n      var size = this.getContainerSize();\n      if (size) {\n        this.setState(size);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"getContainerSize\",\n    value: function getContainerSize() {\n      if (!this.container) {\n        return null;\n      }\n      return {\n        containerWidth: this.container.clientWidth,\n        containerHeight: this.container.clientHeight\n      };\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren(props) {\n      var _this$state2 = this.state,\n        containerWidth = _this$state2.containerWidth,\n        containerHeight = _this$state2.containerHeight;\n      var _this$props = this.props,\n        aspect = _this$props.aspect,\n        width = _this$props.width,\n        height = _this$props.height,\n        maxHeight = _this$props.maxHeight,\n        children = _this$props.children;\n      var calculatedWidth = isPercent(width) ? containerWidth : asNumber(width);\n      var calculatedHeight = isPercent(height) ? containerHeight : asNumber(height);\n      if (aspect && aspect > 0) {\n        // Preserve the desired aspect ratio\n        if (calculatedWidth) {\n          // Will default to using width for aspect ratio\n          calculatedHeight = calculatedWidth / aspect;\n        } else if (calculatedHeight) {\n          // But we should also take height into consideration\n          calculatedWidth = calculatedHeight * aspect;\n        }\n\n        // if maxHeight is set, overwrite if calculatedHeight is greater than maxHeight\n        if (maxHeight && calculatedHeight > maxHeight) {\n          calculatedHeight = maxHeight;\n        }\n      }\n      return __CLIENT__ ? children({\n        parentWidth: calculatedWidth\n      }) : children;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props2 = this.props,\n        minWidth = _this$props2.minWidth,\n        minHeight = _this$props2.minHeight,\n        width = _this$props2.width,\n        height = _this$props2.height,\n        maxHeight = _this$props2.maxHeight,\n        id = _this$props2.id,\n        className = _this$props2.className;\n      var style = {\n        width: width,\n        height: height,\n        minWidth: minWidth,\n        minHeight: minHeight,\n        maxHeight: maxHeight\n      };\n      return __jsx(\"div\", {\n        id: id,\n        className: classNames('responsive-container', className),\n        ref: function ref(node) {\n          _this2.container = node;\n        },\n        style: _objectSpread({\n          minWidth: this.props.minWidth ? this.props.minWidth + 'px' : 'unset'\n        }, style),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }\n      }, this.renderChildren(this.props), __jsx(ReactResizeDetector, {\n        handleWidth: true,\n        handleHeight: true,\n        onResize: this.handleResize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return ResponsiveContainer;\n}(Component);\n_defineProperty(ResponsiveContainer, \"defaultProps\", {\n  width: '100%',\n  height: '100%',\n  debounce: 0,\n  visible: false\n});\nexport default ResponsiveContainer;","map":{"version":3,"names":["React","Component","classNames","ReactResizeDetector","isPercent","value","indexOf","length","asNumber","toInteger","ResponsiveContainer","props","mounted","newSize","getContainerSize","state","oldWidth","containerWidth","oldHeight","containerHeight","setState","handleResize","debounce","updateDimensionsImmediate","size","container","clientWidth","clientHeight","aspect","width","height","maxHeight","children","calculatedWidth","calculatedHeight","__CLIENT__","parentWidth","minWidth","minHeight","id","className","style","node","renderChildren","visible"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/components/ResponsiveContainer.jsx"],"sourcesContent":["/*\n * Port of (MIT licensed)\n * https://github.com/recharts/recharts/blob/master/src/component/ResponsiveContainer.tsx\n * to JSX\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ReactResizeDetector from 'react-resize-detector';\nimport { isString, debounce } from 'lodash';\n\nconst isPercent = (value) =>\n  isString(value) && value.indexOf('%') === value.length - 1;\n\nfunction asNumber(value) {\n  if (isString(value)) return value.toInteger();\n  return value;\n}\n\nclass ResponsiveContainer extends Component {\n  static defaultProps = {\n    width: '100%',\n    height: '100%',\n    debounce: 0,\n    visible: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      containerWidth: -1,\n      containerHeight: -1,\n    };\n\n    this.handleResize =\n      props.debounce > 0\n        ? debounce(this.updateDimensionsImmediate, props.debounce)\n        : this.updateDimensionsImmediate;\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    const size = this.getContainerSize();\n\n    if (size) {\n      this.setState(size);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getContainerSize() {\n    if (!this.container) {\n      return null;\n    }\n\n    return {\n      containerWidth: this.container.clientWidth,\n      containerHeight: this.container.clientHeight,\n    };\n  }\n\n  updateDimensionsImmediate = () => {\n    if (!this.mounted) {\n      return;\n    }\n\n    const newSize = this.getContainerSize();\n\n    if (newSize) {\n      const {\n        containerWidth: oldWidth,\n        containerHeight: oldHeight,\n      } = this.state;\n      const { containerWidth, containerHeight } = newSize;\n\n      if (containerWidth !== oldWidth || containerHeight !== oldHeight) {\n        this.setState({ containerWidth, containerHeight });\n      }\n    }\n  };\n\n  renderChildren(props) {\n    const { containerWidth, containerHeight } = this.state;\n\n    const {\n      aspect,\n      width,\n      height,\n      // minWidth,\n      // minHeight,\n      maxHeight,\n      children,\n    } = this.props;\n\n    let calculatedWidth = isPercent(width) ? containerWidth : asNumber(width);\n    let calculatedHeight = isPercent(height)\n      ? containerHeight\n      : asNumber(height);\n\n    if (aspect && aspect > 0) {\n      // Preserve the desired aspect ratio\n      if (calculatedWidth) {\n        // Will default to using width for aspect ratio\n        calculatedHeight = calculatedWidth / aspect;\n      } else if (calculatedHeight) {\n        // But we should also take height into consideration\n        calculatedWidth = calculatedHeight * aspect;\n      }\n\n      // if maxHeight is set, overwrite if calculatedHeight is greater than maxHeight\n      if (maxHeight && calculatedHeight > maxHeight) {\n        calculatedHeight = maxHeight;\n      }\n    }\n    return __CLIENT__ ? children({ parentWidth: calculatedWidth }) : children;\n  }\n\n  render() {\n    const {\n      minWidth,\n      minHeight,\n      width,\n      height,\n      maxHeight,\n      id,\n      className,\n    } = this.props;\n    const style = { width, height, minWidth, minHeight, maxHeight };\n    return (\n      <div\n        id={id}\n        className={classNames('responsive-container', className)}\n        ref={(node) => {\n          this.container = node;\n        }}\n        style={{\n          minWidth: this.props.minWidth ? this.props.minWidth + 'px' : 'unset',\n          ...style,\n        }}\n      >\n        {this.renderChildren(this.props)}\n        <ReactResizeDetector\n          handleWidth\n          handleHeight\n          onResize={this.handleResize}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ResponsiveContainer;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}