{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _difference from \"lodash/difference\";\nimport _pull from \"lodash/pull\";\nimport _map from \"lodash/map\";\nimport _find from \"lodash/find\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Users/UsersControlpanel.jsx\";\nvar __jsx = React.createElement;\n/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/UsersControlpanel\n */\nimport { createUser, deleteUser, listRoles, listGroups, listUsers, getControlpanel, updateUser, updateGroup } from '@plone/volto/actions';\nimport { Icon, ModalForm, Toast, Toolbar, RenderUsers, Pagination, Error } from '@plone/volto/components';\nimport { Link } from 'react-router-dom';\nimport { Helmet, messages } from '@plone/volto/helpers';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport addUserSvg from '@plone/volto/icons/add-user.svg';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { bindActionCreators, compose } from 'redux';\nimport { Confirm, Container, Form, Input, Button, Segment, Table } from 'semantic-ui-react';\n\n/**\n * UsersControlpanel class.\n * @class UsersControlpanel\n * @extends Component\n */\nvar UsersControlpanel = /*#__PURE__*/function (_Component) {\n  _inherits(UsersControlpanel, _Component);\n  var _super = _createSuper(UsersControlpanel);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  function UsersControlpanel(props) {\n    var _this;\n    _classCallCheck(this, UsersControlpanel);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"fetchData\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.props.getControlpanel('usergroup');\n            case 2:\n              _context.next = 4;\n              return _this.props.listRoles();\n            case 4:\n              if (_this.props.many_users) {\n                _context.next = 9;\n                break;\n              }\n              _this.props.listGroups();\n              _context.next = 8;\n              return _this.props.listUsers();\n            case 8:\n              _this.setState({\n                entries: _this.props.users\n              });\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n    _defineProperty(_assertThisInitialized(_this), \"addUserToGroup\", function (user) {\n      var groups = user.groups,\n        username = user.username;\n      groups.forEach(function (group) {\n        _this.props.updateGroup(group, {\n          users: _defineProperty({}, username, true)\n        });\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"updateUserRoleSubmit\", function (e) {\n      e.stopPropagation();\n      var roles = _this.props.roles.map(function (item) {\n        return item.id;\n      });\n      _this.state.entries.forEach(function (item) {\n        var userData = {\n          roles: {}\n        };\n        var removedRoles = _difference(roles, item.roles);\n        removedRoles.forEach(function (role) {\n          userData.roles[role] = false;\n        });\n        item.roles.forEach(function (role) {\n          userData.roles[role] = true;\n        });\n        _this.props.updateUser(item.id, userData);\n      });\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: _this.props.intl.formatMessage(messages.success),\n        content: _this.props.intl.formatMessage(messages.updateRoles),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 7\n        }\n      }));\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onChangePage\", function (event, _ref2) {\n      var value = _ref2.value;\n      _this.setState({\n        currentPage: value\n      });\n    });\n    _this.onChangeSearch = _this.onChangeSearch.bind(_assertThisInitialized(_this));\n    _this.onSearch = _this.onSearch.bind(_assertThisInitialized(_this));\n    _this[\"delete\"] = _this[\"delete\"].bind(_assertThisInitialized(_this));\n    _this.onDeleteOk = _this.onDeleteOk.bind(_assertThisInitialized(_this));\n    _this.onDeleteCancel = _this.onDeleteCancel.bind(_assertThisInitialized(_this));\n    _this.onAddUserSubmit = _this.onAddUserSubmit.bind(_assertThisInitialized(_this));\n    _this.onAddUserError = _this.onAddUserError.bind(_assertThisInitialized(_this));\n    _this.onAddUserSuccess = _this.onAddUserSuccess.bind(_assertThisInitialized(_this));\n    _this.updateUserRole = _this.updateUserRole.bind(_assertThisInitialized(_this));\n    _this.state = {\n      search: '',\n      showAddUser: false,\n      showAddUserErrorConfirm: false,\n      addUserError: '',\n      showDelete: false,\n      userToDelete: undefined,\n      entries: [],\n      isClient: false,\n      currentPage: 0,\n      pageSize: 10\n    };\n    return _this;\n  }\n  _createClass(UsersControlpanel, [{\n    key: \"componentDidMount\",\n    value:\n    /**\n     * Component did mount\n     * @method componentDidMount\n     * @returns {undefined}\n     */\n    function componentDidMount() {\n      this.setState({\n        isClient: true\n      });\n      this.fetchData();\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded || this.props.createRequest.loading && nextProps.createRequest.loaded) {\n        this.props.listUsers({\n          query: this.state.search\n        });\n      }\n      if (this.props.createRequest.loading && nextProps.createRequest.loaded) {\n        this.onAddUserSuccess();\n      }\n      if (this.props.createRequest.loading && nextProps.createRequest.error) {\n        this.onAddUserError(nextProps.createRequest.error);\n      }\n      if (this.props.loadRolesRequest.loading && nextProps.loadRolesRequest.error) {\n        this.setState({\n          error: nextProps.loadRolesRequest.error\n        });\n      }\n    }\n  }, {\n    key: \"getUserFromProps\",\n    value: function getUserFromProps(value) {\n      return _find(this.props.users, ['@id', value]);\n    }\n\n    /**\n     * Search handler\n     * @method onSearch\n     * @param {object} event Event object.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSearch\",\n    value: function onSearch(event) {\n      event.preventDefault();\n      this.props.listUsers({\n        query: this.state.search\n      });\n    }\n\n    /**\n     * On change search handler\n     * @method onChangeSearch\n     * @param {object} event Event object.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onChangeSearch\",\n    value: function onChangeSearch(event) {\n      this.setState({\n        search: event.target.value\n      });\n    }\n\n    /**\n     * Delete a user\n     * @method delete\n     * @param {object} event Event object.\n     * @param {string} value username.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"delete\",\n    value: function _delete(event, _ref3) {\n      var value = _ref3.value;\n      if (value) {\n        this.setState({\n          showDelete: true,\n          userToDelete: this.getUserFromProps(value)\n        });\n      }\n    }\n\n    /**\n     * On delete ok\n     * @method onDeleteOk\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onDeleteOk\",\n    value: function onDeleteOk() {\n      if (this.state.userToDelete) {\n        this.props.deleteUser(this.state.userToDelete.id);\n        this.setState({\n          showDelete: false,\n          userToDelete: undefined\n        });\n      }\n    }\n\n    /**\n     * On delete cancel\n     * @method onDeleteCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onDeleteCancel\",\n    value: function onDeleteCancel() {\n      this.setState({\n        showDelete: false,\n        itemsToDelete: []\n      });\n    }\n\n    /**\n     *@param {object} user\n     *@returns {undefined}\n     *@memberof UsersControlpanel\n     */\n  }, {\n    key: \"onAddUserSubmit\",\n    value:\n    /**\n     * Callback to be called by the ModalForm when the form is submitted.\n     *\n     * @param {object} data Form data from the ModalForm.\n     * @param {func} callback to set new form data in the ModalForm\n     * @returns {undefined}\n     */\n    function onAddUserSubmit(data, callback) {\n      var groups = data.groups,\n        sendPasswordReset = data.sendPasswordReset;\n      if (groups && groups.length > 0) this.addUserToGroup(data);\n      this.props.createUser(data, sendPasswordReset);\n      this.setState({\n        addUserSetFormDataCallback: callback\n      });\n    }\n\n    /**\n     * Handle Success after createUser()\n     *\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onAddUserSuccess\",\n    value: function onAddUserSuccess() {\n      this.state.addUserSetFormDataCallback({});\n      this.setState({\n        showAddUser: false,\n        addUserError: undefined,\n        addUserSetFormDataCallback: undefined\n      });\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.userCreated),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 7\n        }\n      }));\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} callback\n     * @memberof UsersControlpanel\n     */\n  }, {\n    key: \"updateUserRole\",\n    value: function updateUserRole(name, value) {\n      this.setState({\n        entries: _map(this.state.entries, function (entry) {\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            roles: entry.id === name && !entry.roles.includes(value) ? [].concat(_toConsumableArray(entry.roles), [value]) : entry.id !== name ? entry.roles : _pull(entry.roles, value)\n          });\n        })\n      });\n    }\n    /**\n     *\n     * @param {*} event\n     * @memberof UsersControlpanel\n     */\n  }, {\n    key: \"onAddUserError\",\n    value:\n    /**\n     * Handle Errors after createUser()\n     *\n     * @param {object} error object. Requires the property .message\n     * @returns {undefined}\n     */\n    function onAddUserError(error) {\n      this.setState({\n        addUserError: error.response.body.error.message\n      });\n    }\n\n    /**\n     * On change page\n     * @method onChangePage\n     * @param {object} event Event object.\n     * @param {string} value Page value.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.users !== prevProps.users) {\n        this.setState({\n          entries: this.props.users\n        });\n      }\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n        _this$state$entries;\n      if (this.state.error) {\n        return __jsx(Error, {\n          error: this.state.error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 14\n          }\n        });\n      }\n      /*let fullnameToDelete = this.state.userToDelete\n          ? this.state.userToDelete.fullname\n          : '';*/\n      var usernameToDelete = this.state.userToDelete ? this.state.userToDelete.username : '';\n      return __jsx(Container, {\n        className: \"users-control-panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 7\n        }\n      }, __jsx(Helmet, {\n        title: this.props.intl.formatMessage(messages.users),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 9\n        }\n      }), __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 9\n        }\n      }, __jsx(Confirm, {\n        open: this.state.showDelete,\n        header: this.props.intl.formatMessage(messages.deleteUserConfirmTitle),\n        content: __jsx(\"div\", {\n          className: \"content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }\n        }, __jsx(\"ul\", {\n          className: \"content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }\n        }, __jsx(FormattedMessage, {\n          id: \"Do you really want to delete the user {username}?\",\n          defaultMessage: \"Do you really want to delete the user {username}?\",\n          values: {\n            username: __jsx(\"b\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 33\n              }\n            }, usernameToDelete)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 19\n          }\n        }))),\n        onCancel: this.onDeleteCancel,\n        onConfirm: this.onDeleteOk,\n        size: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }\n      }), this.state.showAddUser ? __jsx(ModalForm, {\n        open: this.state.showAddUser,\n        className: \"modal\",\n        onSubmit: this.onAddUserSubmit,\n        submitError: this.state.addUserError,\n        onCancel: function onCancel() {\n          return _this2.setState({\n            showAddUser: false\n          });\n        },\n        title: this.props.intl.formatMessage(messages.addUserFormTitle),\n        loading: this.props.createRequest.loading,\n        schema: {\n          fieldsets: [{\n            id: 'default',\n            title: 'FIXME: User Data',\n            fields: ['username', 'fullname', 'email', 'password', 'sendPasswordReset', 'roles', 'groups']\n          }],\n          properties: {\n            username: {\n              title: this.props.intl.formatMessage(messages.addUserFormUsernameTitle),\n              type: 'string',\n              description: 'Enter a user name, usually something like \"jsmith\". No spaces or special characters. Usernames and passwords are case sensitive, make sure the caps lock key is not enabled. This is the name used to log in.'\n            },\n            fullname: {\n              title: this.props.intl.formatMessage(messages.addUserFormFullnameTitle),\n              type: 'string',\n              description: 'Enter full name, e.g. John Smith.'\n            },\n            email: {\n              title: this.props.intl.formatMessage(messages.addUserFormEmailTitle),\n              type: 'string',\n              description: 'Enter an email address. This is necessary in case the password is lost. We respect your privacy, and will not give the address away to any third parties or expose it anywhere.',\n              widget: 'email'\n            },\n            password: {\n              title: this.props.intl.formatMessage(messages.addUserFormPasswordTitle),\n              type: 'password',\n              description: 'Enter your new password. Minimum 5 characters.',\n              widget: 'password'\n            },\n            sendPasswordReset: {\n              title: this.props.intl.formatMessage(messages.addUserFormSendPasswordResetTitle),\n              type: 'boolean'\n            },\n            roles: {\n              title: this.props.intl.formatMessage(messages.addUserFormRolesTitle),\n              type: 'array',\n              choices: this.props.roles.map(function (role) {\n                return [role.id, role.id];\n              }),\n              noValueOption: false,\n              description: ''\n            },\n            groups: {\n              title: this.props.intl.formatMessage(messages.addUserGroupNameTitle),\n              type: 'array',\n              choices: this.props.groups.map(function (group) {\n                return [group.id, group.id];\n              }),\n              noValueOption: false,\n              description: ''\n            }\n          },\n          required: ['username', 'email']\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }\n      }) : null), __jsx(Segment.Group, {\n        raised: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 9\n        }\n      }, __jsx(Segment, {\n        className: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Users\",\n        defaultMessage: \"Users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }\n      })), __jsx(Segment, {\n        secondary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Note that roles set here apply directly to a user. The symbol{plone_svg}indicates a role inherited from membership in a group.\",\n        defaultMessage: \"Note that roles set here apply directly to a user. The symbol{plone_svg}indicates a role inherited from membership in a group.\",\n        values: {\n          plone_svg: __jsx(Icon, {\n            name: ploneSVG,\n            size: \"20px\",\n            color: \"#007EB1\",\n            title: 'plone-svg',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 19\n            }\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }\n      })), __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }\n      }, __jsx(Form, {\n        onSubmit: this.onSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }\n      }, __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 15\n        }\n      }, __jsx(Input, {\n        name: \"SearchableText\",\n        action: {\n          icon: 'search'\n        },\n        placeholder: this.props.intl.formatMessage(messages.searchUsers),\n        onChange: this.onChangeSearch,\n        id: \"user-search-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 17\n        }\n      })))), __jsx(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 13\n        }\n      }, __jsx(Table, {\n        padded: true,\n        striped: true,\n        attached: true,\n        unstackable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 15\n        }\n      }, __jsx(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 17\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 19\n        }\n      }, __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 21\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"User name\",\n        defaultMessage: \"User name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 23\n        }\n      })), this.props.roles.map(function (role) {\n        return __jsx(Table.HeaderCell, {\n          key: role.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 23\n          }\n        }, role.id);\n      }), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 21\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Actions\",\n        defaultMessage: \"Actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 23\n        }\n      })))), __jsx(Table.Body, {\n        \"data-user\": \"users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 17\n        }\n      }, this.state.entries.slice(this.state.currentPage * 10, this.state.pageSize * (this.state.currentPage + 1)).map(function (user) {\n        return __jsx(RenderUsers, {\n          key: user.id,\n          onDelete: _this2[\"delete\"],\n          roles: _this2.props.roles,\n          user: user,\n          updateUser: _this2.updateUserRole,\n          inheritedRole: _this2.props.inheritedRole,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 23\n          }\n        });\n      })))), __jsx(\"div\", {\n        className: \"contents-pagination\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }\n      }, __jsx(Pagination, {\n        current: this.state.currentPage,\n        total: Math.ceil(((_this$state$entries = this.state.entries) === null || _this$state$entries === void 0 ? void 0 : _this$state$entries.length) / this.state.pageSize),\n        onChangePage: this.onChangePage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 15\n        }\n      })))), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(React.Fragment, null, __jsx(Button, {\n          id: \"toolbar-save\",\n          className: \"save\",\n          \"aria-label\": this.props.intl.formatMessage(messages.save),\n          onClick: this.updateUserRoleSubmit,\n          loading: this.props.createRequest.loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 19\n          }\n        }, __jsx(Icon, {\n          name: saveSVG,\n          className: \"circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.save),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 21\n          }\n        })), __jsx(Link, {\n          to: \"/controlpanel\",\n          className: \"cancel\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 19\n          }\n        }, __jsx(Icon, {\n          name: clearSVG,\n          className: \"circled\",\n          \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.cancel),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 21\n          }\n        })), __jsx(Button, {\n          id: \"toolbar-add\",\n          \"aria-label\": this.props.intl.formatMessage(messages.addUserButtonTitle),\n          onClick: function onClick() {\n            _this2.setState({\n              showAddUser: true\n            });\n          },\n          loading: this.props.createRequest.loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 19\n          }\n        }, __jsx(Icon, {\n          name: addUserSvg,\n          size: \"45px\",\n          color: \"#826A6A\",\n          title: this.props.intl.formatMessage(messages.addUserButtonTitle),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 21\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return UsersControlpanel;\n}(Component);\n_defineProperty(UsersControlpanel, \"propTypes\", {\n  listRoles: PropTypes.func.isRequired,\n  listUsers: PropTypes.func.isRequired,\n  updateUser: PropTypes.func,\n  listGroups: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  roles: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    '@type': PropTypes.string,\n    id: PropTypes.string\n  })).isRequired,\n  users: PropTypes.arrayOf(PropTypes.shape({\n    username: PropTypes.string,\n    fullname: PropTypes.string,\n    roles: PropTypes.arrayOf(PropTypes.string)\n  })).isRequired\n});\nexport default compose(injectIntl, connect(function (state, props) {\n  var _state$controlpanels, _state$controlpanels$, _state$controlpanels$2, _state$controlpanels2, _state$controlpanels3, _state$controlpanels4;\n  return {\n    roles: state.roles.roles,\n    users: state.users.users,\n    groups: state.groups.groups,\n    many_users: (_state$controlpanels = state.controlpanels) === null || _state$controlpanels === void 0 ? void 0 : (_state$controlpanels$ = _state$controlpanels.controlpanel) === null || _state$controlpanels$ === void 0 ? void 0 : (_state$controlpanels$2 = _state$controlpanels$.data) === null || _state$controlpanels$2 === void 0 ? void 0 : _state$controlpanels$2.many_users,\n    many_groups: (_state$controlpanels2 = state.controlpanels) === null || _state$controlpanels2 === void 0 ? void 0 : (_state$controlpanels3 = _state$controlpanels2.controlpanel) === null || _state$controlpanels3 === void 0 ? void 0 : (_state$controlpanels4 = _state$controlpanels3.data) === null || _state$controlpanels4 === void 0 ? void 0 : _state$controlpanels4.many_groups,\n    description: state.description,\n    pathname: props.location.pathname,\n    deleteRequest: state.users[\"delete\"],\n    createRequest: state.users.create,\n    loadRolesRequest: state.roles,\n    inheritedRole: state.authRole.authenticatedRole\n  };\n}, function (dispatch) {\n  return bindActionCreators({\n    listRoles: listRoles,\n    listUsers: listUsers,\n    listGroups: listGroups,\n    getControlpanel: getControlpanel,\n    deleteUser: deleteUser,\n    createUser: createUser,\n    updateUser: updateUser,\n    updateGroup: updateGroup\n  }, dispatch);\n}))(UsersControlpanel);","map":{"version":3,"names":["createUser","deleteUser","listRoles","listGroups","listUsers","getControlpanel","updateUser","updateGroup","Icon","ModalForm","Toast","Toolbar","RenderUsers","Pagination","Error","Link","Helmet","messages","clearSVG","addUserSvg","saveSVG","ploneSVG","PropTypes","React","Component","FormattedMessage","injectIntl","Portal","connect","toast","bindActionCreators","compose","Confirm","Container","Form","Input","Button","Segment","Table","UsersControlpanel","props","many_users","setState","entries","users","user","groups","username","forEach","group","e","stopPropagation","roles","map","item","id","state","userData","removedRoles","role","success","intl","formatMessage","updateRoles","event","value","currentPage","onChangeSearch","bind","onSearch","onDeleteOk","onDeleteCancel","onAddUserSubmit","onAddUserError","onAddUserSuccess","updateUserRole","search","showAddUser","showAddUserErrorConfirm","addUserError","showDelete","userToDelete","undefined","isClient","pageSize","fetchData","nextProps","deleteRequest","loading","loaded","createRequest","query","error","loadRolesRequest","preventDefault","target","getUserFromProps","itemsToDelete","data","callback","sendPasswordReset","length","addUserToGroup","addUserSetFormDataCallback","userCreated","name","entry","includes","response","body","message","prevProps","prevState","usernameToDelete","deleteUserConfirmTitle","addUserFormTitle","fieldsets","title","fields","properties","addUserFormUsernameTitle","type","description","fullname","addUserFormFullnameTitle","email","addUserFormEmailTitle","widget","password","addUserFormPasswordTitle","addUserFormSendPasswordResetTitle","addUserFormRolesTitle","choices","noValueOption","addUserGroupNameTitle","required","plone_svg","icon","searchUsers","slice","inheritedRole","Math","ceil","onChangePage","document","getElementById","pathname","save","updateUserRoleSubmit","cancel","addUserButtonTitle","func","isRequired","string","arrayOf","shape","controlpanels","controlpanel","many_groups","location","create","authRole","authenticatedRole","dispatch"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Users/UsersControlpanel.jsx"],"sourcesContent":["/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/UsersControlpanel\n */\nimport {\n  createUser,\n  deleteUser,\n  listRoles,\n  listGroups,\n  listUsers,\n  getControlpanel,\n  updateUser,\n  updateGroup,\n} from '@plone/volto/actions';\nimport {\n  Icon,\n  ModalForm,\n  Toast,\n  Toolbar,\n  RenderUsers,\n  Pagination,\n  Error,\n} from '@plone/volto/components';\nimport { Link } from 'react-router-dom';\nimport { Helmet, messages } from '@plone/volto/helpers';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport addUserSvg from '@plone/volto/icons/add-user.svg';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport { find, map, pull, difference } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { bindActionCreators, compose } from 'redux';\nimport {\n  Confirm,\n  Container,\n  Form,\n  Input,\n  Button,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\n\n/**\n * UsersControlpanel class.\n * @class UsersControlpanel\n * @extends Component\n */\nclass UsersControlpanel extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    listRoles: PropTypes.func.isRequired,\n    listUsers: PropTypes.func.isRequired,\n    updateUser: PropTypes.func,\n    listGroups: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    roles: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        '@type': PropTypes.string,\n        id: PropTypes.string,\n      }),\n    ).isRequired,\n    users: PropTypes.arrayOf(\n      PropTypes.shape({\n        username: PropTypes.string,\n        fullname: PropTypes.string,\n        roles: PropTypes.arrayOf(PropTypes.string),\n      }),\n    ).isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.delete = this.delete.bind(this);\n\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onAddUserSubmit = this.onAddUserSubmit.bind(this);\n    this.onAddUserError = this.onAddUserError.bind(this);\n    this.onAddUserSuccess = this.onAddUserSuccess.bind(this);\n    this.updateUserRole = this.updateUserRole.bind(this);\n    this.state = {\n      search: '',\n      showAddUser: false,\n      showAddUserErrorConfirm: false,\n      addUserError: '',\n      showDelete: false,\n      userToDelete: undefined,\n      entries: [],\n      isClient: false,\n      currentPage: 0,\n      pageSize: 10,\n    };\n  }\n\n  fetchData = async () => {\n    await this.props.getControlpanel('usergroup');\n    await this.props.listRoles();\n    if (!this.props.many_users) {\n      this.props.listGroups();\n      await this.props.listUsers();\n      this.setState({\n        entries: this.props.users,\n      });\n    }\n  };\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({\n      isClient: true,\n    });\n    this.fetchData();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded) ||\n      (this.props.createRequest.loading && nextProps.createRequest.loaded)\n    ) {\n      this.props.listUsers({\n        query: this.state.search,\n      });\n    }\n    if (this.props.createRequest.loading && nextProps.createRequest.loaded) {\n      this.onAddUserSuccess();\n    }\n    if (this.props.createRequest.loading && nextProps.createRequest.error) {\n      this.onAddUserError(nextProps.createRequest.error);\n    }\n    if (\n      this.props.loadRolesRequest.loading &&\n      nextProps.loadRolesRequest.error\n    ) {\n      this.setState({\n        error: nextProps.loadRolesRequest.error,\n      });\n    }\n  }\n\n  getUserFromProps(value) {\n    return find(this.props.users, ['@id', value]);\n  }\n\n  /**\n   * Search handler\n   * @method onSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSearch(event) {\n    event.preventDefault();\n    this.props.listUsers({\n      query: this.state.search,\n    });\n  }\n\n  /**\n   * On change search handler\n   * @method onChangeSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onChangeSearch(event) {\n    this.setState({\n      search: event.target.value,\n    });\n  }\n\n  /**\n   * Delete a user\n   * @method delete\n   * @param {object} event Event object.\n   * @param {string} value username.\n   * @returns {undefined}\n   */\n  delete(event, { value }) {\n    if (value) {\n      this.setState({\n        showDelete: true,\n        userToDelete: this.getUserFromProps(value),\n      });\n    }\n  }\n\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @returns {undefined}\n   */\n  onDeleteOk() {\n    if (this.state.userToDelete) {\n      this.props.deleteUser(this.state.userToDelete.id);\n      this.setState({\n        showDelete: false,\n        userToDelete: undefined,\n      });\n    }\n  }\n\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @returns {undefined}\n   */\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      itemsToDelete: [],\n    });\n  }\n\n  /**\n   *@param {object} user\n   *@returns {undefined}\n   *@memberof UsersControlpanel\n   */\n  addUserToGroup = (user) => {\n    const { groups, username } = user;\n    groups.forEach((group) => {\n      this.props.updateGroup(group, {\n        users: {\n          [username]: true,\n        },\n      });\n    });\n  };\n\n  /**\n   * Callback to be called by the ModalForm when the form is submitted.\n   *\n   * @param {object} data Form data from the ModalForm.\n   * @param {func} callback to set new form data in the ModalForm\n   * @returns {undefined}\n   */\n  onAddUserSubmit(data, callback) {\n    const { groups, sendPasswordReset } = data;\n    if (groups && groups.length > 0) this.addUserToGroup(data);\n    this.props.createUser(data, sendPasswordReset);\n    this.setState({\n      addUserSetFormDataCallback: callback,\n    });\n  }\n\n  /**\n   * Handle Success after createUser()\n   *\n   * @returns {undefined}\n   */\n  onAddUserSuccess() {\n    this.state.addUserSetFormDataCallback({});\n    this.setState({\n      showAddUser: false,\n      addUserError: undefined,\n      addUserSetFormDataCallback: undefined,\n    });\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.userCreated)}\n      />,\n    );\n  }\n\n  /**\n   *\n   *\n   * @param {*} data\n   * @param {*} callback\n   * @memberof UsersControlpanel\n   */\n  updateUserRole(name, value) {\n    this.setState({\n      entries: map(this.state.entries, (entry) => ({\n        ...entry,\n        roles:\n          entry.id === name && !entry.roles.includes(value)\n            ? [...entry.roles, value]\n            : entry.id !== name\n            ? entry.roles\n            : pull(entry.roles, value),\n      })),\n    });\n  }\n  /**\n   *\n   * @param {*} event\n   * @memberof UsersControlpanel\n   */\n  updateUserRoleSubmit = (e) => {\n    e.stopPropagation();\n\n    const roles = this.props.roles.map((item) => item.id);\n    this.state.entries.forEach((item) => {\n      const userData = { roles: {} };\n      const removedRoles = difference(roles, item.roles);\n\n      removedRoles.forEach((role) => {\n        userData.roles[role] = false;\n      });\n      item.roles.forEach((role) => {\n        userData.roles[role] = true;\n      });\n      this.props.updateUser(item.id, userData);\n    });\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.updateRoles)}\n      />,\n    );\n  };\n\n  /**\n   * Handle Errors after createUser()\n   *\n   * @param {object} error object. Requires the property .message\n   * @returns {undefined}\n   */\n  onAddUserError(error) {\n    this.setState({\n      addUserError: error.response.body.error.message,\n    });\n  }\n\n  /**\n   * On change page\n   * @method onChangePage\n   * @param {object} event Event object.\n   * @param {string} value Page value.\n   * @returns {undefined}\n   */\n  onChangePage = (event, { value }) => {\n    this.setState({\n      currentPage: value,\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.users !== prevProps.users) {\n      this.setState({\n        entries: this.props.users,\n      });\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.state.error) {\n      return <Error error={this.state.error} />;\n    }\n    /*let fullnameToDelete = this.state.userToDelete\n        ? this.state.userToDelete.fullname\n        : '';*/\n    let usernameToDelete = this.state.userToDelete\n      ? this.state.userToDelete.username\n      : '';\n    return (\n      <Container className=\"users-control-panel\">\n        <Helmet title={this.props.intl.formatMessage(messages.users)} />\n        <div className=\"container\">\n          <Confirm\n            open={this.state.showDelete}\n            header={this.props.intl.formatMessage(\n              messages.deleteUserConfirmTitle,\n            )}\n            content={\n              <div className=\"content\">\n                <ul className=\"content\">\n                  <FormattedMessage\n                    id=\"Do you really want to delete the user {username}?\"\n                    defaultMessage=\"Do you really want to delete the user {username}?\"\n                    values={{\n                      username: <b>{usernameToDelete}</b>,\n                    }}\n                  />\n                </ul>\n              </div>\n            }\n            onCancel={this.onDeleteCancel}\n            onConfirm={this.onDeleteOk}\n            size={null}\n          />\n          {this.state.showAddUser ? (\n            <ModalForm\n              open={this.state.showAddUser}\n              className=\"modal\"\n              onSubmit={this.onAddUserSubmit}\n              submitError={this.state.addUserError}\n              onCancel={() => this.setState({ showAddUser: false })}\n              title={this.props.intl.formatMessage(messages.addUserFormTitle)}\n              loading={this.props.createRequest.loading}\n              schema={{\n                fieldsets: [\n                  {\n                    id: 'default',\n                    title: 'FIXME: User Data',\n                    fields: [\n                      'username',\n                      'fullname',\n                      'email',\n                      'password',\n                      'sendPasswordReset',\n                      'roles',\n                      'groups',\n                    ],\n                  },\n                ],\n                properties: {\n                  username: {\n                    title: this.props.intl.formatMessage(\n                      messages.addUserFormUsernameTitle,\n                    ),\n                    type: 'string',\n                    description:\n                      'Enter a user name, usually something like \"jsmith\". No spaces or special characters. Usernames and passwords are case sensitive, make sure the caps lock key is not enabled. This is the name used to log in.',\n                  },\n                  fullname: {\n                    title: this.props.intl.formatMessage(\n                      messages.addUserFormFullnameTitle,\n                    ),\n                    type: 'string',\n                    description: 'Enter full name, e.g. John Smith.',\n                  },\n                  email: {\n                    title: this.props.intl.formatMessage(\n                      messages.addUserFormEmailTitle,\n                    ),\n                    type: 'string',\n                    description:\n                      'Enter an email address. This is necessary in case the password is lost. We respect your privacy, and will not give the address away to any third parties or expose it anywhere.',\n                    widget: 'email',\n                  },\n                  password: {\n                    title: this.props.intl.formatMessage(\n                      messages.addUserFormPasswordTitle,\n                    ),\n                    type: 'password',\n                    description:\n                      'Enter your new password. Minimum 5 characters.',\n                    widget: 'password',\n                  },\n                  sendPasswordReset: {\n                    title: this.props.intl.formatMessage(\n                      messages.addUserFormSendPasswordResetTitle,\n                    ),\n                    type: 'boolean',\n                  },\n                  roles: {\n                    title: this.props.intl.formatMessage(\n                      messages.addUserFormRolesTitle,\n                    ),\n                    type: 'array',\n                    choices: this.props.roles.map((role) => [role.id, role.id]),\n                    noValueOption: false,\n                    description: '',\n                  },\n                  groups: {\n                    title: this.props.intl.formatMessage(\n                      messages.addUserGroupNameTitle,\n                    ),\n                    type: 'array',\n                    choices: this.props.groups.map((group) => [\n                      group.id,\n                      group.id,\n                    ]),\n                    noValueOption: false,\n                    description: '',\n                  },\n                },\n                required: ['username', 'email'],\n              }}\n            />\n          ) : null}\n        </div>\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage id=\"Users\" defaultMessage=\"Users\" />\n          </Segment>\n          <Segment secondary>\n            <FormattedMessage\n              id=\"Note that roles set here apply directly to a user. The symbol{plone_svg}indicates a role inherited from membership in a group.\"\n              defaultMessage=\"Note that roles set here apply directly to a user. The symbol{plone_svg}indicates a role inherited from membership in a group.\"\n              values={{\n                plone_svg: (\n                  <Icon\n                    name={ploneSVG}\n                    size=\"20px\"\n                    color=\"#007EB1\"\n                    title={'plone-svg'}\n                  />\n                ),\n              }}\n            />\n          </Segment>\n          <Segment>\n            <Form onSubmit={this.onSearch}>\n              <Form.Field>\n                <Input\n                  name=\"SearchableText\"\n                  action={{ icon: 'search' }}\n                  placeholder={this.props.intl.formatMessage(\n                    messages.searchUsers,\n                  )}\n                  onChange={this.onChangeSearch}\n                  id=\"user-search-input\"\n                />\n              </Form.Field>\n            </Form>\n          </Segment>\n          <Form>\n            <div className=\"table\">\n              <Table padded striped attached unstackable>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>\n                      <FormattedMessage\n                        id=\"User name\"\n                        defaultMessage=\"User name\"\n                      />\n                    </Table.HeaderCell>\n                    {this.props.roles.map((role) => (\n                      <Table.HeaderCell key={role.id}>\n                        {role.id}\n                      </Table.HeaderCell>\n                    ))}\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Actions\" defaultMessage=\"Actions\" />\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body data-user=\"users\">\n                  {this.state.entries\n                    .slice(\n                      this.state.currentPage * 10,\n                      this.state.pageSize * (this.state.currentPage + 1),\n                    )\n                    .map((user) => (\n                      <RenderUsers\n                        key={user.id}\n                        onDelete={this.delete}\n                        roles={this.props.roles}\n                        user={user}\n                        updateUser={this.updateUserRole}\n                        inheritedRole={this.props.inheritedRole}\n                      />\n                    ))}\n                </Table.Body>\n              </Table>\n            </div>\n            <div className=\"contents-pagination\">\n              <Pagination\n                current={this.state.currentPage}\n                total={Math.ceil(\n                  this.state.entries?.length / this.state.pageSize,\n                )}\n                onChangePage={this.onChangePage}\n              />\n            </div>\n          </Form>\n        </Segment.Group>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Button\n                    id=\"toolbar-save\"\n                    className=\"save\"\n                    aria-label={this.props.intl.formatMessage(messages.save)}\n                    onClick={this.updateUserRoleSubmit}\n                    loading={this.props.createRequest.loading}\n                  >\n                    <Icon\n                      name={saveSVG}\n                      className=\"circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.save)}\n                    />\n                  </Button>\n                  <Link to=\"/controlpanel\" className=\"cancel\">\n                    <Icon\n                      name={clearSVG}\n                      className=\"circled\"\n                      aria-label={this.props.intl.formatMessage(\n                        messages.cancel,\n                      )}\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.cancel)}\n                    />\n                  </Link>\n                  <Button\n                    id=\"toolbar-add\"\n                    aria-label={this.props.intl.formatMessage(\n                      messages.addUserButtonTitle,\n                    )}\n                    onClick={() => {\n                      this.setState({ showAddUser: true });\n                    }}\n                    loading={this.props.createRequest.loading}\n                  >\n                    <Icon\n                      name={addUserSvg}\n                      size=\"45px\"\n                      color=\"#826A6A\"\n                      title={this.props.intl.formatMessage(\n                        messages.addUserButtonTitle,\n                      )}\n                    />\n                  </Button>\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      roles: state.roles.roles,\n      users: state.users.users,\n      groups: state.groups.groups,\n      many_users: state.controlpanels?.controlpanel?.data?.many_users,\n      many_groups: state.controlpanels?.controlpanel?.data?.many_groups,\n      description: state.description,\n      pathname: props.location.pathname,\n      deleteRequest: state.users.delete,\n      createRequest: state.users.create,\n      loadRolesRequest: state.roles,\n      inheritedRole: state.authRole.authenticatedRole,\n    }),\n    (dispatch) =>\n      bindActionCreators(\n        {\n          listRoles,\n          listUsers,\n          listGroups,\n          getControlpanel,\n          deleteUser,\n          createUser,\n          updateUser,\n          updateGroup,\n        },\n        dispatch,\n      ),\n  ),\n)(UsersControlpanel);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Do you really want to delete the user {username}?","defaultMessage":"Do you really want to delete the user {username}?"},{"id":"Users","defaultMessage":"Users"},{"id":"Note that roles set here apply directly to a user. The symbol{plone_svg}indicates a role inherited from membership in a group.","defaultMessage":"Note that roles set here apply directly to a user. The symbol{plone_svg}indicates a role inherited from membership in a group."},{"id":"User name","defaultMessage":"User name"},{"id":"Actions","defaultMessage":"Actions"}]}},"sourceType":"module","externalDependencies":[]}