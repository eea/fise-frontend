{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/Portlets/utils.js\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError(\"Cannot destructure \" + obj); }\n// TODO: rename as helpers.jsx\n\nimport React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nexport default function renderPortletManager(name, cols, _ref) {\n  let props = Object.assign({}, (_objectDestructuringEmpty(_ref), _ref));\n  const portlets = config.settings.portlets;\n  let WrappedPortletManager = portlets.managers[name] || portlets.managers.default;\n  return cols ? __jsx(Grid.Column, {\n    mobile: 12,\n    tablet: 12,\n    largeScreen: 3,\n    computer: 2,\n    widescreen: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(WrappedPortletManager, _extends({\n    name: name\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }))) : __jsx(WrappedPortletManager, _extends({\n    name: name\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }));\n}\nexport function normalize(str) {\n  return str && str.replace(/\\./g, '');\n}","map":{"version":3,"names":["React","Grid","config","renderPortletManager","name","cols","props","portlets","settings","WrappedPortletManager","managers","default","normalize","str","replace"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/Portlets/utils.js"],"sourcesContent":["// TODO: rename as helpers.jsx\n\nimport React from 'react';\nimport { Grid } from 'semantic-ui-react';\n\nimport config from '@plone/volto/registry';\n\nexport default function renderPortletManager(name, cols, { ...props }) {\n  const portlets = config.settings.portlets;\n  let WrappedPortletManager =\n    portlets.managers[name] || portlets.managers.default;\n  return cols ? (\n    <Grid.Column\n      mobile={12}\n      tablet={12}\n      largeScreen={3}\n      computer={2}\n      widescreen={3}\n    >\n      <WrappedPortletManager name={name} {...props} />\n    </Grid.Column>\n  ) : (\n    <WrappedPortletManager name={name} {...props} />\n  );\n}\n\nexport function normalize(str) {\n  return str && str.replace(/\\./g, '');\n}\n"],"mappings":";;;;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,mBAAmB;AAExC,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,eAAe,SAASC,oBAAoB,CAACC,IAAI,EAAEC,IAAI,QAAgB;EAAA,IAATC,KAAK;EACjE,MAAMC,QAAQ,GAAGL,MAAM,CAACM,QAAQ,CAACD,QAAQ;EACzC,IAAIE,qBAAqB,GACvBF,QAAQ,CAACG,QAAQ,CAACN,IAAI,CAAC,IAAIG,QAAQ,CAACG,QAAQ,CAACC,OAAO;EACtD,OAAON,IAAI,GACT,MAAC,IAAI,CAAC,MAAM;IACV,MAAM,EAAE,EAAG;IACX,MAAM,EAAE,EAAG;IACX,WAAW,EAAE,CAAE;IACf,QAAQ,EAAE,CAAE;IACZ,UAAU,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEd,MAAC,qBAAqB;IAAC,IAAI,EAAED;EAAK,GAAKE,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,CACpC,GAEd,MAAC,qBAAqB;IAAC,IAAI,EAAEF;EAAK,GAAKE,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC7C;AACH;AAEA,OAAO,SAASM,SAAS,CAACC,GAAG,EAAE;EAC7B,OAAOA,GAAG,IAAIA,GAAG,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AACtC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}