{"ast":null,"code":"const _excluded = [\"itemModel\", \"item\"];\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/components/UniversalItem/UniversalItem.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport config from '@plone/volto/registry';\nimport { resolveExtension } from '@plone/volto/helpers/Extensions/withBlockExtensions';\nimport { Item } from './model';\nimport universalItemSchemaEnhancer from './schema';\nfunction UniversalItem(props) {\n  const {\n      itemModel = {},\n      item\n    } = props,\n    rest = _objectWithoutProperties(props, _excluded);\n  const extension = resolveExtension('@type', config.blocks.blocksConfig.listing.extensions.itemTemplates, itemModel);\n  const ItemTemplate = extension.view;\n  return __jsx(ItemTemplate, _extends({\n    item: new Item(item),\n    itemModel: itemModel\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  }));\n}\nUniversalItem.schemaEnhancer = universalItemSchemaEnhancer;\nexport default UniversalItem;","map":{"version":3,"names":["config","resolveExtension","Item","universalItemSchemaEnhancer","UniversalItem","props","itemModel","item","rest","extension","blocks","blocksConfig","listing","extensions","itemTemplates","ItemTemplate","view","schemaEnhancer"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/components/UniversalItem/UniversalItem.jsx"],"sourcesContent":["import config from '@plone/volto/registry';\nimport { resolveExtension } from '@plone/volto/helpers/Extensions/withBlockExtensions';\nimport { Item } from './model';\n\nimport universalItemSchemaEnhancer from './schema';\n\nfunction UniversalItem(props) {\n  const { itemModel = {}, item, ...rest } = props;\n  const extension = resolveExtension(\n    '@type',\n    config.blocks.blocksConfig.listing.extensions.itemTemplates,\n    itemModel,\n  );\n  const ItemTemplate = extension.view;\n\n  return <ItemTemplate item={new Item(item)} itemModel={itemModel} {...rest} />;\n}\n\nUniversalItem.schemaEnhancer = universalItemSchemaEnhancer;\n\nexport default UniversalItem;\n"],"mappings":";;;;;;;AAAA,OAAOA,MAAM,MAAM,uBAAuB;AAC1C,SAASC,gBAAgB,QAAQ,qDAAqD;AACtF,SAASC,IAAI,QAAQ,SAAS;AAE9B,OAAOC,2BAA2B,MAAM,UAAU;AAElD,SAASC,aAAa,CAACC,KAAK,EAAE;EAC5B,MAAM;MAAEC,SAAS,GAAG,CAAC,CAAC;MAAEC;IAAc,CAAC,GAAGF,KAAK;IAAdG,IAAI,4BAAKH,KAAK;EAC/C,MAAMI,SAAS,GAAGR,gBAAgB,CAChC,OAAO,EACPD,MAAM,CAACU,MAAM,CAACC,YAAY,CAACC,OAAO,CAACC,UAAU,CAACC,aAAa,EAC3DR,SAAS,CACV;EACD,MAAMS,YAAY,GAAGN,SAAS,CAACO,IAAI;EAEnC,OAAO,MAAC,YAAY;IAAC,IAAI,EAAE,IAAId,IAAI,CAACK,IAAI,CAAE;IAAC,SAAS,EAAED;EAAU,GAAKE,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI;AAC/E;AAEAJ,aAAa,CAACa,cAAc,GAAGd,2BAA2B;AAE1D,eAAeC,aAAa"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}