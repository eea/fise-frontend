{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _map from \"lodash/map\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-plotlycharts/src/Widgets/VisualizationWidget.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Modal, Grid, Label } from 'semantic-ui-react';\nimport { PickObjectWidget } from '@eeacms/volto-datablocks/components';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport ConnectedChart from '../ConnectedChart';\nimport ChartEditor from '../ChartEditor';\nimport './style.less';\nvar PlotlyEditorModal = /*#__PURE__*/function (_Component) {\n  _inherits(PlotlyEditorModal, _Component);\n  var _super = _createSuper(PlotlyEditorModal);\n  function PlotlyEditorModal(props) {\n    var _this;\n    _classCallCheck(this, PlotlyEditorModal);\n    _this = _super.call(this, props);\n    _this.state = {\n      value: props.value\n    };\n    return _this;\n  }\n  _createClass(PlotlyEditorModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n        _this$state$value;\n      return __jsx(Modal, {\n        open: true,\n        size: \"fullscreen\",\n        className: \"chart-editor-modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, __jsx(Modal.Content, {\n        scrolling: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, __jsx(ChartEditor, {\n        value: this.state.value,\n        onChangeValue: function onChangeValue(value) {\n          _this2.setState({\n            value: value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      })), __jsx(Modal.Actions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, __jsx(Grid.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, __jsx(Grid.Column, {\n        computer: 8,\n        tablet: 12,\n        verticalAlign: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, __jsx(PickObjectWidget, {\n        title: \"Select data source\",\n        id: \"provider-data\",\n        onChange: function onChange(_, provider_url) {\n          _this2.setState({\n            value: _objectSpread(_objectSpread({}, _this2.state.value), {}, {\n              provider_url: provider_url\n            })\n          });\n        },\n        value: (_this$state$value = this.state.value) === null || _this$state$value === void 0 ? void 0 : _this$state$value.provider_url,\n        showReload: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      })), __jsx(Grid.Column, {\n        computer: 4,\n        tablet: 12,\n        verticalAlign: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, __jsx(Button, {\n        primary: true,\n        floated: \"right\",\n        onClick: function onClick() {\n          return _this2.props.onChange(_this2.state.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, \"Apply changes\"), __jsx(Button, {\n        floated: \"right\",\n        onClick: this.props.onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, \"Close\"))))));\n    }\n  }]);\n  return PlotlyEditorModal;\n}(Component);\nvar VisualizationWidget = /*#__PURE__*/function (_Component2) {\n  _inherits(VisualizationWidget, _Component2);\n  var _super2 = _createSuper(VisualizationWidget);\n  function VisualizationWidget(props) {\n    var _this3;\n    _classCallCheck(this, VisualizationWidget);\n    _this3 = _super2.call(this, props);\n    _this3.state = {\n      showChartEditor: false\n    };\n    return _this3;\n  }\n  _createClass(VisualizationWidget, [{\n    key: \"handleModalChange\",\n    value: function handleModalChange(value) {\n      var chartData = _objectSpread(_objectSpread({}, value.chartData), {}, {\n        provider_url: value.provider_url\n      });\n      this.props.onChange(this.props.id, {\n        chartData: chartData,\n        provider_url: value.provider_url\n      });\n      this.setState({\n        showChartEditor: false\n      });\n    }\n\n    // This is the structure of value\n    // value = {\n    //   chartData: {\n    //     data: data || [],\n    //     layout: layout || {},\n    //     frames: frames || [],\n    //     provider_url: provider_url || undefined\n    //   }\n    //   provider_url: provider_url\n    // }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      var _this$props = this.props,\n        id = _this$props.id,\n        title = _this$props.title,\n        description = _this$props.description,\n        error = _this$props.error,\n        value = _this$props.value;\n      if (__SERVER__) return '';\n      return __jsx(FormFieldWrapper, _extends({}, this.props, {\n        columns: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }\n      }), __jsx(\"div\", {\n        className: \"wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"field-\".concat(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, title), __jsx(Button, {\n        floated: \"right\",\n        onClick: function onClick(e) {\n          e.preventDefault();\n          e.stopPropagation();\n          _this4.setState({\n            showChartEditor: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, \"Open Chart Editor\")), description && __jsx(\"p\", {\n        className: \"help\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, description), __jsx(ConnectedChart, {\n        visualization: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }), this.state.showChartEditor ? __jsx(PlotlyEditorModal, {\n        value: value,\n        onChange: function onChange(changedValue) {\n          return _this4.handleModalChange(changedValue);\n        },\n        onClose: function onClose() {\n          return _this4.setState({\n            showChartEditor: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }) : '', _map(error, function (message) {\n        return __jsx(Label, {\n          key: message,\n          basic: true,\n          color: \"red\",\n          pointing: true,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }\n        }, message);\n      }));\n    }\n  }]);\n  return VisualizationWidget;\n}(Component);\nexport default VisualizationWidget;","map":{"version":3,"names":["React","Component","Button","Modal","Grid","Label","PickObjectWidget","FormFieldWrapper","ConnectedChart","ChartEditor","PlotlyEditorModal","props","state","value","setState","_","provider_url","onChange","onClose","VisualizationWidget","showChartEditor","chartData","id","title","description","error","__SERVER__","e","preventDefault","stopPropagation","changedValue","handleModalChange","message"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-plotlycharts/src/Widgets/VisualizationWidget.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { Button, Modal, Grid, Label } from 'semantic-ui-react';\nimport { map } from 'lodash';\n\nimport { PickObjectWidget } from '@eeacms/volto-datablocks/components';\nimport { FormFieldWrapper } from '@plone/volto/components';\n\nimport ConnectedChart from '../ConnectedChart';\nimport ChartEditor from '../ChartEditor';\n\nimport './style.less';\n\nclass PlotlyEditorModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value,\n    };\n  }\n\n  render() {\n    return (\n      <Modal open={true} size=\"fullscreen\" className=\"chart-editor-modal\">\n        <Modal.Content scrolling>\n          <ChartEditor\n            value={this.state.value}\n            onChangeValue={(value) => {\n              this.setState({ value });\n            }}\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column computer={8} tablet={12} verticalAlign=\"middle\">\n                <PickObjectWidget\n                  title=\"Select data source\"\n                  id=\"provider-data\"\n                  onChange={(_, provider_url) => {\n                    this.setState({\n                      value: { ...this.state.value, provider_url },\n                    });\n                  }}\n                  value={this.state.value?.provider_url}\n                  showReload={true}\n                />\n              </Grid.Column>\n              <Grid.Column computer={4} tablet={12} verticalAlign=\"middle\">\n                <Button\n                  primary\n                  floated=\"right\"\n                  onClick={() => this.props.onChange(this.state.value)}\n                >\n                  Apply changes\n                </Button>\n                <Button floated=\"right\" onClick={this.props.onClose}>\n                  Close\n                </Button>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nclass VisualizationWidget extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showChartEditor: false,\n    };\n  }\n\n  handleModalChange(value) {\n    const chartData = {\n      ...value.chartData,\n      provider_url: value.provider_url,\n    };\n    this.props.onChange(this.props.id, {\n      chartData,\n      provider_url: value.provider_url,\n    });\n    this.setState({\n      showChartEditor: false,\n    });\n  }\n\n  // This is the structure of value\n  // value = {\n  //   chartData: {\n  //     data: data || [],\n  //     layout: layout || {},\n  //     frames: frames || [],\n  //     provider_url: provider_url || undefined\n  //   }\n  //   provider_url: provider_url\n  // }\n\n  render() {\n    const { id, title, description, error, value } = this.props;\n\n    if (__SERVER__) return '';\n\n    return (\n      <FormFieldWrapper {...this.props} columns={1}>\n        <div className=\"wrapper\">\n          <label htmlFor={`field-${id}`}>{title}</label>\n          <Button\n            floated=\"right\"\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              this.setState({ showChartEditor: true });\n            }}\n          >\n            Open Chart Editor\n          </Button>\n        </div>\n        {description && <p className=\"help\">{description}</p>}\n        <ConnectedChart visualization={value} />\n        {this.state.showChartEditor ? (\n          <PlotlyEditorModal\n            value={value}\n            onChange={(changedValue) => this.handleModalChange(changedValue)}\n            onClose={() =>\n              this.setState({\n                showChartEditor: false,\n              })\n            }\n          />\n        ) : (\n          ''\n        )}\n        {map(error, (message) => (\n          <Label key={message} basic color=\"red\" pointing>\n            {message}\n          </Label>\n        ))}\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default VisualizationWidget;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}