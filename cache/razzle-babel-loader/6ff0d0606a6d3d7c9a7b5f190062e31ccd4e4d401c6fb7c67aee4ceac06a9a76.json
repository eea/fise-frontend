{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/QuerystringWidget.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport ObjectWidget from '@plone/volto/components/manage/Widgets/ObjectWidget';\nvar messages = defineMessages({\n  Criteria: {\n    \"id\": \"Criteria\",\n    \"defaultMessage\": \"Criteria\"\n  },\n  depth: {\n    \"id\": \"Depth\",\n    \"defaultMessage\": \"Depth\"\n  },\n  SortOn: {\n    \"id\": \"Sort on\",\n    \"defaultMessage\": \"Sort on\"\n  },\n  reversedOrder: {\n    \"id\": \"Reversed order\",\n    \"defaultMessage\": \"Reversed order\"\n  },\n  limit: {\n    \"id\": \"Results limit\",\n    \"defaultMessage\": \"Results limit\"\n  },\n  itemBatchSize: {\n    \"id\": \"Item batch size\",\n    \"defaultMessage\": \"Item batch size\"\n  },\n  NoSelection: {\n    \"id\": \"No selection\",\n    \"defaultMessage\": \"No selection\"\n  }\n});\nexport var objectSchema = function objectSchema(_ref) {\n  var _value$query;\n  var intl = _ref.intl,\n    isDisabled = _ref.isDisabled,\n    value = _ref.value;\n  return {\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['query'].concat(_toConsumableArray((value === null || value === void 0 ? void 0 : (_value$query = value.query) === null || _value$query === void 0 ? void 0 : _value$query.filter(function (q) {\n        return q.i === 'path';\n      }).length) > 0 ? ['depth'] : []), ['sort_on', 'sort_order_boolean', 'limit', 'b_size'])\n    }],\n    properties: {\n      query: {\n        title: intl.formatMessage(messages.Criteria),\n        widget: 'query'\n      },\n      depth: {\n        title: intl.formatMessage(messages.depth),\n        type: 'number'\n      },\n      sort_on: {\n        title: intl.formatMessage(messages.SortOn),\n        widget: 'query_sort_on',\n        isDisabled: isDisabled\n      },\n      sort_order_boolean: {\n        title: intl.formatMessage(messages.reversedOrder),\n        type: 'boolean',\n        isDisabled: isDisabled\n      },\n      limit: {\n        title: intl.formatMessage(messages.limit),\n        type: 'number',\n        isDisabled: isDisabled\n      },\n      b_size: {\n        title: intl.formatMessage(messages.itemBatchSize),\n        type: 'number',\n        isDisabled: isDisabled\n      }\n    },\n    required: []\n  };\n};\nvar QuerystringWidget = function QuerystringWidget(props) {\n  _s();\n  var _props$value, _props$value$query;\n  var block = props.block,\n    _onChange = props.onChange,\n    schemaEnhancer = props.schemaEnhancer;\n  var isDisabled = (_props$value = props.value) !== null && _props$value !== void 0 && (_props$value$query = _props$value.query) !== null && _props$value$query !== void 0 && _props$value$query.length ? false : true;\n  var intl = useIntl();\n  var schema = objectSchema(_objectSpread(_objectSpread({}, props), {}, {\n    intl: intl,\n    isDisabled: isDisabled\n  }));\n  schema = schemaEnhancer ? schemaEnhancer(_objectSpread(_objectSpread({}, props), {}, {\n    intl: intl,\n    schema: schema\n  })) : schema;\n  return __jsx(\"div\", {\n    className: \"querystring-widget\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, __jsx(ObjectWidget, _extends({}, props, {\n    block: block,\n    schema: schema,\n    onChange: function onChange(id, value) {\n      var adaptedValue = _objectSpread(_objectSpread({}, value), {}, {\n        sort_order: value.sort_order_boolean ? 'descending' : 'ascending'\n      });\n      _onChange(id, adaptedValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  })));\n};\n_s(QuerystringWidget, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = QuerystringWidget;\nexport default QuerystringWidget;\nvar _c;\n$RefreshReg$(_c, \"QuerystringWidget\");","map":{"version":3,"names":["React","defineMessages","useIntl","ObjectWidget","messages","Criteria","depth","SortOn","reversedOrder","limit","itemBatchSize","NoSelection","objectSchema","intl","isDisabled","value","fieldsets","id","title","fields","query","filter","q","i","length","properties","formatMessage","widget","type","sort_on","sort_order_boolean","b_size","required","QuerystringWidget","props","block","onChange","schemaEnhancer","schema","adaptedValue","sort_order"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/QuerystringWidget.jsx"],"sourcesContent":["import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport ObjectWidget from '@plone/volto/components/manage/Widgets/ObjectWidget';\n\nconst messages = defineMessages({\n  Criteria: {\n    id: 'Criteria',\n    defaultMessage: 'Criteria',\n  },\n  depth: {\n    id: 'Depth',\n    defaultMessage: 'Depth',\n  },\n  SortOn: {\n    id: 'Sort on',\n    defaultMessage: 'Sort on',\n  },\n  reversedOrder: {\n    id: 'Reversed order',\n    defaultMessage: 'Reversed order',\n  },\n  limit: {\n    id: 'Results limit',\n    defaultMessage: 'Results limit',\n  },\n  itemBatchSize: {\n    id: 'Item batch size',\n    defaultMessage: 'Item batch size',\n  },\n  NoSelection: {\n    id: 'No selection',\n    defaultMessage: 'No selection',\n  },\n});\n\nexport const objectSchema = ({ intl, isDisabled, value }) => ({\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: [\n        'query',\n        ...(value?.query?.filter((q) => q.i === 'path').length > 0\n          ? ['depth']\n          : []),\n        'sort_on',\n        'sort_order_boolean',\n        'limit',\n        'b_size',\n      ],\n    },\n  ],\n  properties: {\n    query: {\n      title: intl.formatMessage(messages.Criteria),\n      widget: 'query',\n    },\n    depth: {\n      title: intl.formatMessage(messages.depth),\n      type: 'number',\n    },\n    sort_on: {\n      title: intl.formatMessage(messages.SortOn),\n      widget: 'query_sort_on',\n      isDisabled: isDisabled,\n    },\n    sort_order_boolean: {\n      title: intl.formatMessage(messages.reversedOrder),\n      type: 'boolean',\n      isDisabled: isDisabled,\n    },\n    limit: {\n      title: intl.formatMessage(messages.limit),\n      type: 'number',\n      isDisabled: isDisabled,\n    },\n    b_size: {\n      title: intl.formatMessage(messages.itemBatchSize),\n      type: 'number',\n      isDisabled: isDisabled,\n    },\n  },\n  required: [],\n});\n\nconst QuerystringWidget = (props) => {\n  const { block, onChange, schemaEnhancer } = props;\n  const isDisabled = props.value?.query?.length ? false : true;\n\n  const intl = useIntl();\n  let schema = objectSchema({ ...props, intl, isDisabled });\n  schema = schemaEnhancer ? schemaEnhancer({ ...props, intl, schema }) : schema;\n\n  return (\n    <div className=\"querystring-widget\">\n      <ObjectWidget\n        {...props}\n        block={block}\n        schema={schema}\n        onChange={(id, value) => {\n          const adaptedValue = {\n            ...value,\n            sort_order: value.sort_order_boolean ? 'descending' : 'ascending',\n          };\n          onChange(id, adaptedValue);\n        }}\n      />\n    </div>\n  );\n};\nexport default QuerystringWidget;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Criteria","defaultMessage":"Criteria"},{"id":"Depth","defaultMessage":"Depth"},{"id":"Sort on","defaultMessage":"Sort on"},{"id":"Reversed order","defaultMessage":"Reversed order"},{"id":"Results limit","defaultMessage":"Results limit"},{"id":"Item batch size","defaultMessage":"Item batch size"},{"id":"No selection","defaultMessage":"No selection"}]}},"sourceType":"module","externalDependencies":[]}