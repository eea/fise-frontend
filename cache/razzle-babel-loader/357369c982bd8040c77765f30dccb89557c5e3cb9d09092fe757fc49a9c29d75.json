{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-columns-block/src/Widgets/QuadSize.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Field, FormFieldWrapper } from '@plone/volto/components';\nimport { Grid } from 'semantic-ui-react';\nimport { Slider } from './Slider';\nvar messages = defineMessages({\n  labelUnit: {\n    \"id\": \"Unit\",\n    \"defaultMessage\": \"Unit\"\n  },\n  labelPercentage: {\n    \"id\": \"Percentage\",\n    \"defaultMessage\": \"Percentage\"\n  },\n  labelSize: {\n    \"id\": \"Size\",\n    \"defaultMessage\": \"Size\"\n  },\n  labelCustomize: {\n    \"id\": \"Customize\",\n    \"defaultMessage\": \"Customize\"\n  }\n});\nvar getFields = function getFields(intl) {\n  return {\n    unitField: {\n      title: intl.formatMessage(messages.labelUnit),\n      columns: 2,\n      placeholder: intl.formatMessage(messages.labelUnit),\n      defaultValue: 'px',\n      choices: [['px', 'px'], ['%', 'percentage'], ['em', 'em'], ['rem', 'rem']]\n    }\n  };\n};\nvar getMax = function getMax(unit) {\n  switch (unit) {\n    case '%':\n      return 100;\n    case 'px':\n      return 100;\n    case 'em':\n      return 24;\n    case 'rem':\n      return 24;\n    default:\n      return 10;\n  }\n};\nvar QuadSizeWidget = function QuadSizeWidget(props) {\n  _s();\n  var intl = useIntl();\n  var _props$value = props.value,\n    value = _props$value === void 0 ? {} : _props$value,\n    id = props.id,\n    _onChange = props.onChange,\n    _props$sliderSettings = props.sliderSettings,\n    sliderSettings = _props$sliderSettings === void 0 ? {\n      max: 12,\n      min: 0,\n      step: 1,\n      start: 0\n    } : _props$sliderSettings;\n  var _value$top = value.top,\n    top = _value$top === void 0 ? 0 : _value$top,\n    _value$right = value.right,\n    right = _value$right === void 0 ? 0 : _value$right,\n    _value$bottom = value.bottom,\n    bottom = _value$bottom === void 0 ? 0 : _value$bottom,\n    _value$left = value.left,\n    left = _value$left === void 0 ? 0 : _value$left,\n    _value$unit = value.unit,\n    unit = _value$unit === void 0 ? 'px' : _value$unit,\n    _value$unlock = value.unlock,\n    unlock = _value$unlock === void 0 ? false : _value$unlock;\n  var settings = _objectSpread(_objectSpread({}, sliderSettings), {}, {\n    max: getMax(unit)\n  });\n  var fields = getFields(intl);\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }), __jsx(Field, _extends({\n    columns: 2,\n    id: \"\".concat(id, \"-unit\")\n  }, fields.unitField, {\n    onChange: function onChange(fid, val) {\n      return _onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n        unit: val\n      }));\n    },\n    value: value.unit || 'px',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  })), unlock ? __jsx(Grid, {\n    columns: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(Grid.Column, {\n    width: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), __jsx(Grid.Column, {\n    width: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, __jsx(Slider, {\n    settings: _objectSpread({\n      onChange: function onChange(val) {\n        return _onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n          top: val\n        }));\n      }\n    }, settings),\n    value: top,\n    extra: __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 22\n      }\n    }, top),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })), __jsx(Grid.Column, {\n    width: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), __jsx(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, __jsx(Slider, {\n    settings: _objectSpread({\n      onChange: function onChange(val) {\n        return _onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n          left: val\n        }));\n      }\n    }, settings),\n    value: left,\n    extra: __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 22\n      }\n    }, left),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  })), __jsx(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, __jsx(Slider, {\n    settings: _objectSpread({\n      onChange: function onChange(val) {\n        return _onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n          right: val\n        }));\n      }\n    }, settings),\n    value: right,\n    extra: __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 22\n      }\n    }, right),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  })), __jsx(Grid.Column, {\n    width: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), __jsx(Grid.Column, {\n    width: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, __jsx(Slider, {\n    settings: _objectSpread({\n      onChange: function onChange(val) {\n        return _onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n          bottom: val\n        }));\n      }\n    }, settings),\n    extra: __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 22\n      }\n    }, bottom),\n    value: bottom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  })), __jsx(Grid.Column, {\n    width: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  })) : __jsx(Field, {\n    id: \"\".concat(id, \"-slider\"),\n    settings: settings,\n    onChange: function onChange(fid, val) {\n      _onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n        top: val,\n        left: val,\n        bottom: val,\n        right: val\n      }));\n    },\n    value: top,\n    title: intl.formatMessage(messages.labelSize),\n    widget: \"slider\",\n    columns: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }), __jsx(Field, {\n    id: \"\".concat(id, \"-lockSize\"),\n    onChange: function onChange(fid, val) {\n      return _onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n        unlock: val\n      }));\n    },\n    value: unlock,\n    title: intl.formatMessage(messages.labelCustomize),\n    type: \"boolean\",\n    columns: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }));\n};\n_s(QuadSizeWidget, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = QuadSizeWidget;\nexport default QuadSizeWidget;\nvar _c;\n$RefreshReg$(_c, \"QuadSizeWidget\");","map":{"version":3,"names":["React","defineMessages","useIntl","Field","FormFieldWrapper","Grid","Slider","messages","labelUnit","labelPercentage","labelSize","labelCustomize","getFields","intl","unitField","title","formatMessage","columns","placeholder","defaultValue","choices","getMax","unit","QuadSizeWidget","props","value","id","onChange","sliderSettings","max","min","step","start","top","right","bottom","left","unlock","settings","fields","fid","val"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-columns-block/src/Widgets/QuadSize.jsx"],"sourcesContent":["import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Field, FormFieldWrapper } from '@plone/volto/components';\nimport { Grid } from 'semantic-ui-react';\nimport { Slider } from './Slider';\n\nconst messages = defineMessages({\n  labelUnit: {\n    id: 'Unit',\n    defaultMessage: 'Unit',\n  },\n  labelPercentage: {\n    id: 'Percentage',\n    defaultMessage: 'Percentage',\n  },\n  labelSize: {\n    id: 'Size',\n    defaultMessage: 'Size',\n  },\n  labelCustomize: {\n    id: 'Customize',\n    defaultMessage: 'Customize',\n  },\n});\n\nconst getFields = (intl) => {\n  return {\n    unitField: {\n      title: intl.formatMessage(messages.labelUnit),\n      columns: 2,\n      placeholder: intl.formatMessage(messages.labelUnit),\n      defaultValue: 'px',\n      choices: [\n        ['px', 'px'],\n        ['%', 'percentage'],\n        ['em', 'em'],\n        ['rem', 'rem'],\n      ],\n    },\n  };\n};\n\nconst getMax = (unit) => {\n  switch (unit) {\n    case '%':\n      return 100;\n    case 'px':\n      return 100;\n    case 'em':\n      return 24;\n    case 'rem':\n      return 24;\n    default:\n      return 10;\n  }\n};\n\nconst QuadSizeWidget = (props) => {\n  const intl = useIntl();\n  const {\n    value = {},\n    id,\n    onChange,\n    sliderSettings = {\n      max: 12,\n      min: 0,\n      step: 1,\n      start: 0,\n    },\n  } = props;\n  const {\n    top = 0,\n    right = 0,\n    bottom = 0,\n    left = 0,\n    unit = 'px',\n    unlock = false,\n  } = value;\n  const settings = {\n    ...sliderSettings,\n    max: getMax(unit),\n  };\n  const fields = getFields(intl);\n\n  return (\n    <FormFieldWrapper {...props}>\n      <Field\n        columns={2}\n        id={`${id}-unit`}\n        {...fields.unitField}\n        onChange={(fid, val) => onChange(id, { ...value, unit: val })}\n        value={value.unit || 'px'}\n      />\n\n      {unlock ? (\n        <Grid columns={2}>\n          <Grid.Column width={3}></Grid.Column>\n          <Grid.Column width={6}>\n            <Slider\n              settings={{\n                onChange: (val) => onChange(id, { ...value, top: val }),\n                ...settings,\n              }}\n              value={top}\n              extra={<strong>{top}</strong>}\n            />\n          </Grid.Column>\n          <Grid.Column width={3}></Grid.Column>\n          <Grid.Column>\n            <Slider\n              settings={{\n                onChange: (val) => onChange(id, { ...value, left: val }),\n                ...settings,\n              }}\n              value={left}\n              extra={<strong>{left}</strong>}\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <Slider\n              settings={{\n                onChange: (val) => onChange(id, { ...value, right: val }),\n                ...settings,\n              }}\n              value={right}\n              extra={<strong>{right}</strong>}\n            />\n          </Grid.Column>\n          <Grid.Column width={3}></Grid.Column>\n          <Grid.Column width={6}>\n            <Slider\n              settings={{\n                onChange: (val) => onChange(id, { ...value, bottom: val }),\n                ...settings,\n              }}\n              extra={<strong>{bottom}</strong>}\n              value={bottom}\n            />\n          </Grid.Column>\n          <Grid.Column width={3}></Grid.Column>\n        </Grid>\n      ) : (\n        <Field\n          id={`${id}-slider`}\n          settings={settings}\n          onChange={(fid, val) => {\n            onChange(id, {\n              ...value,\n              top: val,\n              left: val,\n              bottom: val,\n              right: val,\n            });\n          }}\n          value={top}\n          title={intl.formatMessage(messages.labelSize)}\n          widget=\"slider\"\n          columns={2}\n        />\n      )}\n\n      <Field\n        id={`${id}-lockSize`}\n        onChange={(fid, val) => onChange(id, { ...value, unlock: val })}\n        value={unlock}\n        title={intl.formatMessage(messages.labelCustomize)}\n        type=\"boolean\"\n        columns={1}\n      />\n    </FormFieldWrapper>\n  );\n};\n\nexport default QuadSizeWidget;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Unit","defaultMessage":"Unit"},{"id":"Percentage","defaultMessage":"Percentage"},{"id":"Size","defaultMessage":"Size"},{"id":"Customize","defaultMessage":"Customize"}]}},"sourceType":"module","externalDependencies":[]}