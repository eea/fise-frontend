{"ast":null,"code":"import { MetadataBlockEdit, MetadataBlockView, MetadataSectionBlockEdit, MetadataSectionBlockView, MetadataSectionLayoutSchema, MetadataSectionListingView, MetadataSectionTableView } from './components';\nimport { SelectMetadataField } from './widgets';\nimport { addTableField } from './components/manage/Blocks/MetadataSection/variations';\nimport iconSVG from '@plone/volto/icons/connector.svg';\nconst applyConfig = config => {\n  config.widgets.widget.select_metadata_field = SelectMetadataField;\n  config.blocks.blocksConfig.metadata = {\n    id: 'metadata',\n    title: 'Metadata',\n    icon: iconSVG,\n    group: 'common',\n    view: MetadataBlockView,\n    edit: MetadataBlockEdit,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 0,\n    security: {\n      addPermission: [],\n      view: []\n    }\n  };\n  config.blocks.blocksConfig.metadataSection = {\n    id: 'metadataSection',\n    title: 'Metadata Section',\n    icon: iconSVG,\n    group: 'common',\n    view: MetadataSectionBlockView,\n    edit: MetadataSectionBlockEdit,\n    schema: MetadataSectionLayoutSchema,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: []\n    },\n    variations: [{\n      id: 'default',\n      isDefault: true,\n      title: 'Simple list',\n      view: MetadataSectionListingView\n    }, {\n      id: 'table',\n      title: 'Table',\n      view: MetadataSectionTableView,\n      schemaEnhancer: addTableField\n    }]\n  };\n  return config;\n};\nexport default applyConfig;","map":{"version":3,"names":["MetadataBlockEdit","MetadataBlockView","MetadataSectionBlockEdit","MetadataSectionBlockView","MetadataSectionLayoutSchema","MetadataSectionListingView","MetadataSectionTableView","SelectMetadataField","addTableField","iconSVG","applyConfig","config","widgets","widget","select_metadata_field","blocks","blocksConfig","metadata","id","title","icon","group","view","edit","restricted","mostUsed","blockHasOwnFocusManagement","sidebarTab","security","addPermission","metadataSection","schema","variations","isDefault","schemaEnhancer"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-metadata-block/src/index.js"],"sourcesContent":["import {\n  MetadataBlockEdit,\n  MetadataBlockView,\n  MetadataSectionBlockEdit,\n  MetadataSectionBlockView,\n  MetadataSectionLayoutSchema,\n  MetadataSectionListingView,\n  MetadataSectionTableView,\n} from './components';\nimport { SelectMetadataField } from './widgets';\nimport { addTableField } from './components/manage/Blocks/MetadataSection/variations';\n\nimport iconSVG from '@plone/volto/icons/connector.svg';\n\nconst applyConfig = (config) => {\n  config.widgets.widget.select_metadata_field = SelectMetadataField;\n\n  config.blocks.blocksConfig.metadata = {\n    id: 'metadata',\n    title: 'Metadata',\n    icon: iconSVG,\n    group: 'common',\n    view: MetadataBlockView,\n    edit: MetadataBlockEdit,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 0,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n  };\n\n  config.blocks.blocksConfig.metadataSection = {\n    id: 'metadataSection',\n    title: 'Metadata Section',\n    icon: iconSVG,\n    group: 'common',\n    view: MetadataSectionBlockView,\n    edit: MetadataSectionBlockEdit,\n    schema: MetadataSectionLayoutSchema,\n    restricted: false,\n    mostUsed: false,\n    blockHasOwnFocusManagement: true,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n    variations: [\n      {\n        id: 'default',\n        isDefault: true,\n        title: 'Simple list',\n        view: MetadataSectionListingView,\n      },\n      {\n        id: 'table',\n        title: 'Table',\n        view: MetadataSectionTableView,\n        schemaEnhancer: addTableField,\n      },\n    ],\n  };\n\n  return config;\n};\n\nexport default applyConfig;\n"],"mappings":"AAAA,SACEA,iBAAiB,EACjBC,iBAAiB,EACjBC,wBAAwB,EACxBC,wBAAwB,EACxBC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,wBAAwB,QACnB,cAAc;AACrB,SAASC,mBAAmB,QAAQ,WAAW;AAC/C,SAASC,aAAa,QAAQ,uDAAuD;AAErF,OAAOC,OAAO,MAAM,kCAAkC;AAEtD,MAAMC,WAAW,GAAIC,MAAM,IAAK;EAC9BA,MAAM,CAACC,OAAO,CAACC,MAAM,CAACC,qBAAqB,GAAGP,mBAAmB;EAEjEI,MAAM,CAACI,MAAM,CAACC,YAAY,CAACC,QAAQ,GAAG;IACpCC,EAAE,EAAE,UAAU;IACdC,KAAK,EAAE,UAAU;IACjBC,IAAI,EAAEX,OAAO;IACbY,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAErB,iBAAiB;IACvBsB,IAAI,EAAEvB,iBAAiB;IACvBwB,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,KAAK;IACfC,0BAA0B,EAAE,IAAI;IAChCC,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE;MACRC,aAAa,EAAE,EAAE;MACjBP,IAAI,EAAE;IACR;EACF,CAAC;EAEDX,MAAM,CAACI,MAAM,CAACC,YAAY,CAACc,eAAe,GAAG;IAC3CZ,EAAE,EAAE,iBAAiB;IACrBC,KAAK,EAAE,kBAAkB;IACzBC,IAAI,EAAEX,OAAO;IACbY,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAEnB,wBAAwB;IAC9BoB,IAAI,EAAErB,wBAAwB;IAC9B6B,MAAM,EAAE3B,2BAA2B;IACnCoB,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,KAAK;IACfC,0BAA0B,EAAE,IAAI;IAChCC,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE;MACRC,aAAa,EAAE,EAAE;MACjBP,IAAI,EAAE;IACR,CAAC;IACDU,UAAU,EAAE,CACV;MACEd,EAAE,EAAE,SAAS;MACbe,SAAS,EAAE,IAAI;MACfd,KAAK,EAAE,aAAa;MACpBG,IAAI,EAAEjB;IACR,CAAC,EACD;MACEa,EAAE,EAAE,OAAO;MACXC,KAAK,EAAE,OAAO;MACdG,IAAI,EAAEhB,wBAAwB;MAC9B4B,cAAc,EAAE1B;IAClB,CAAC;EAEL,CAAC;EAED,OAAOG,MAAM;AACf,CAAC;AAED,eAAeD,WAAW"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}