{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/Widgets/Align.jsx\";\nvar __jsx = React.createElement;\n/*\n * Align block exposed as a widget\n *\n */\n\nimport React from 'react';\nimport { Form, Grid } from 'semantic-ui-react';\nimport AlignBlock from '@plone/volto/components/manage/Sidebar/AlignBlock';\nconst AlignBlockWidget = ({\n  id,\n  title,\n  required,\n  value,\n  onChange\n}) => __jsx(Form.Field, {\n  inline: true,\n  required: required,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, __jsx(Grid, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, __jsx(Grid.Row, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }\n}, __jsx(Grid.Column, {\n  width: \"4\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n}, __jsx(\"div\", {\n  className: \"wrapper\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 11\n  }\n}, __jsx(\"label\", {\n  htmlFor: \"field-align\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }\n}, title))), __jsx(Grid.Column, {\n  width: \"8\",\n  className: \"align-tools\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }\n}, __jsx(AlignBlock, {\n  align: value,\n  onChangeBlock: (block, {\n    align\n  }) => onChange(id, align),\n  data: {\n    align: value\n  },\n  block: id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 11\n  }\n})))));\nexport default AlignBlockWidget;","map":{"version":3,"names":["React","Form","Grid","AlignBlock","AlignBlockWidget","id","title","required","value","onChange","block","align"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/Widgets/Align.jsx"],"sourcesContent":["/*\n * Align block exposed as a widget\n *\n */\n\nimport React from 'react';\n\nimport { Form, Grid } from 'semantic-ui-react';\n\nimport AlignBlock from '@plone/volto/components/manage/Sidebar/AlignBlock';\n\nconst AlignBlockWidget = ({ id, title, required, value, onChange }) => (\n  <Form.Field inline required={required}>\n    <Grid>\n      <Grid.Row>\n        <Grid.Column width=\"4\">\n          <div className=\"wrapper\">\n            <label htmlFor=\"field-align\">{title}</label>\n          </div>\n        </Grid.Column>\n        <Grid.Column width=\"8\" className=\"align-tools\">\n          <AlignBlock\n            align={value}\n            onChangeBlock={(block, { align }) => onChange(id, align)}\n            data={{ align: value }}\n            block={id}\n          />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </Form.Field>\n);\n\nexport default AlignBlockWidget;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,IAAI,EAAEC,IAAI,QAAQ,mBAAmB;AAE9C,OAAOC,UAAU,MAAM,mDAAmD;AAE1E,MAAMC,gBAAgB,GAAG,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAChE,MAAC,IAAI,CAAC,KAAK;EAAC,MAAM;EAAC,QAAQ,EAAEF,QAAS;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GACpC,MAAC,IAAI;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GACH,MAAC,IAAI,CAAC,GAAG;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GACP,MAAC,IAAI,CAAC,MAAM;EAAC,KAAK,EAAC,GAAG;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GACpB;EAAK,SAAS,EAAC,SAAS;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GACtB;EAAO,OAAO,EAAC,aAAa;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GAAED,KAAK,CAAS,CACxC,CACM,EACd,MAAC,IAAI,CAAC,MAAM;EAAC,KAAK,EAAC,GAAG;EAAC,SAAS,EAAC,aAAa;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GAC5C,MAAC,UAAU;EACT,KAAK,EAAEE,KAAM;EACb,aAAa,EAAE,CAACE,KAAK,EAAE;IAAEC;EAAM,CAAC,KAAKF,QAAQ,CAACJ,EAAE,EAAEM,KAAK,CAAE;EACzD,IAAI,EAAE;IAAEA,KAAK,EAAEH;EAAM,CAAE;EACvB,KAAK,EAAEH,EAAG;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EACV,CACU,CACL,CACN,CAEV;AAED,eAAeD,gBAAgB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}