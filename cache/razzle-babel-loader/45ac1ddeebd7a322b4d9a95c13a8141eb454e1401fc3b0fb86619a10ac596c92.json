{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-widget-toggle/src/components/manage/Widgets/CheckboxWidget.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\n/**\n * CheckboxWidget component.\n * @module components/manage/Widgets/CheckboxWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'semantic-ui-react';\nimport { injectIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components';\n\n/**\n * CheckboxWidget component class.\n * @function CheckboxWidget\n * @returns {string} Markup of the component.\n */\nvar CheckboxWidget = function CheckboxWidget(props) {\n  _s();\n  var id = props.id,\n    title = props.title,\n    value = props.value,\n    _onChange = props.onChange,\n    isDisabled = props.isDisabled,\n    _props$defaultValue = props.defaultValue,\n    defaultValue = _props$defaultValue === void 0 ? false : _props$defaultValue;\n  React.useEffect(function () {\n    if (value === null && defaultValue) _onChange(id, defaultValue); //value===null prevents assigning default value on every render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    columns: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(Checkbox, {\n    toggle: true,\n    name: \"field-\".concat(id),\n    checked: value !== null && value !== void 0 ? value : defaultValue,\n    disabled: isDisabled,\n    onChange: function onChange(event, _ref) {\n      var checked = _ref.checked;\n      _onChange(id, checked);\n    },\n    label: __jsx(\"label\", {\n      htmlFor: \"field-\".concat(id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }\n    }, title),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_s(CheckboxWidget, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CheckboxWidget;\nCheckboxWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nCheckboxWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null\n};\nexport default _c2 = injectIntl(CheckboxWidget);\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckboxWidget\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","PropTypes","Checkbox","injectIntl","FormFieldWrapper","CheckboxWidget","props","id","title","value","onChange","isDisabled","defaultValue","useEffect","event","checked","propTypes","string","isRequired","description","required","bool","error","arrayOf","func","onEdit","onDelete","wrapped","defaultProps"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-widget-toggle/src/components/manage/Widgets/CheckboxWidget.jsx"],"sourcesContent":["/**\n * CheckboxWidget component.\n * @module components/manage/Widgets/CheckboxWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'semantic-ui-react';\n\nimport { injectIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components';\n\n/**\n * CheckboxWidget component class.\n * @function CheckboxWidget\n * @returns {string} Markup of the component.\n */\nconst CheckboxWidget = (props) => {\n  const {\n    id,\n    title,\n    value,\n    onChange,\n    isDisabled,\n    defaultValue = false,\n  } = props;\n\n  React.useEffect(() => {\n    if (value === null && defaultValue) onChange(id, defaultValue); //value===null prevents assigning default value on every render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <FormFieldWrapper {...props} columns={1}>\n      <div className=\"wrapper\">\n        <Checkbox\n          toggle\n          name={`field-${id}`}\n          checked={value ?? defaultValue}\n          disabled={isDisabled}\n          onChange={(event, { checked }) => {\n            onChange(id, checked);\n          }}\n          label={<label htmlFor={`field-${id}`}>{title}</label>}\n        />\n      </div>\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nCheckboxWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nCheckboxWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n};\n\nexport default injectIntl(CheckboxWidget);\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C,SAASC,UAAU,QAAQ,YAAY;AACvC,SAASC,gBAAgB,QAAQ,yBAAyB;;AAE1D;AACA;AACA;AACA;AACA;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAAK,EAAK;EAAA;EAChC,IACEC,EAAE,GAMAD,KAAK,CANPC,EAAE;IACFC,KAAK,GAKHF,KAAK,CALPE,KAAK;IACLC,KAAK,GAIHH,KAAK,CAJPG,KAAK;IACLC,SAAQ,GAGNJ,KAAK,CAHPI,QAAQ;IACRC,UAAU,GAERL,KAAK,CAFPK,UAAU;IAAA,sBAERL,KAAK,CADPM,YAAY;IAAZA,YAAY,oCAAG,KAAK;EAGtBZ,KAAK,CAACa,SAAS,CAAC,YAAM;IACpB,IAAIJ,KAAK,KAAK,IAAI,IAAIG,YAAY,EAAEF,SAAQ,CAACH,EAAE,EAAEK,YAAY,CAAC,CAAC,CAAC;IAChE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OACE,MAAC,gBAAgB,eAAKN,KAAK;IAAE,OAAO,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACtC;IAAK,SAAS,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACtB,MAAC,QAAQ;IACP,MAAM;IACN,IAAI,kBAAWC,EAAE,CAAG;IACpB,OAAO,EAAEE,KAAK,aAALA,KAAK,cAALA,KAAK,GAAIG,YAAa;IAC/B,QAAQ,EAAED,UAAW;IACrB,QAAQ,EAAE,kBAACG,KAAK,QAAkB;MAAA,IAAdC,OAAO,QAAPA,OAAO;MACzBL,SAAQ,CAACH,EAAE,EAAEQ,OAAO,CAAC;IACvB,CAAE;IACF,KAAK,EAAE;MAAO,OAAO,kBAAWR,EAAE,CAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAEC,KAAK,CAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACtD,CACE,CACW;AAEvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA,GAjCMH,cAAc;AAAA,KAAdA,cAAc;AAsCpBA,cAAc,CAACW,SAAS,GAAG;EACzBT,EAAE,EAAEN,SAAS,CAACgB,MAAM,CAACC,UAAU;EAC/BV,KAAK,EAAEP,SAAS,CAACgB,MAAM,CAACC,UAAU;EAClCC,WAAW,EAAElB,SAAS,CAACgB,MAAM;EAC7BG,QAAQ,EAAEnB,SAAS,CAACoB,IAAI;EACxBC,KAAK,EAAErB,SAAS,CAACsB,OAAO,CAACtB,SAAS,CAACgB,MAAM,CAAC;EAC1CR,KAAK,EAAER,SAAS,CAACoB,IAAI;EACrBX,QAAQ,EAAET,SAAS,CAACuB,IAAI;EACxBC,MAAM,EAAExB,SAAS,CAACuB,IAAI;EACtBE,QAAQ,EAAEzB,SAAS,CAACuB,IAAI;EACxBG,OAAO,EAAE1B,SAAS,CAACoB;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAhB,cAAc,CAACuB,YAAY,GAAG;EAC5BT,WAAW,EAAE,IAAI;EACjBC,QAAQ,EAAE,KAAK;EACfE,KAAK,EAAE,EAAE;EACTb,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,IAAI;EACde,MAAM,EAAE,IAAI;EACZC,QAAQ,EAAE;AACZ,CAAC;AAED,qBAAevB,UAAU,CAACE,cAAc,CAAC;AAAC;AAAA;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}