{"ast":null,"code":"/**\n * Schema actions.\n * @module actions/schema/schema\n */\n\nimport { GET_SCHEMA, POST_SCHEMA, PUT_SCHEMA, UPDATE_SCHEMA } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Get schema function.\n * @function getSchema\n * @param {string} type Content type.\n * @param {string} url Content url.\n * @returns {Object} Get schema action.\n */\nexport function getSchema(type, url) {\n  url = typeof url !== 'undefined' ? url : '';\n  return {\n    type: GET_SCHEMA,\n    request: {\n      op: 'get',\n      path: \"\".concat(url, \"/@types/\").concat(type)\n    }\n  };\n}\n\n/**\n * Post schema function.\n * @function postSchema\n * @param {string} type Content type.\n * @param {Object} data Schema data.\n * @returns {Object} Post schema action.\n */\nexport function postSchema(type, data) {\n  return {\n    type: POST_SCHEMA,\n    request: {\n      op: 'post',\n      path: \"/@types/\".concat(type),\n      data: data\n    }\n  };\n}\n\n/**\n * Put schema function.\n * @function putSchema\n * @param {string} type Content type.\n * @param {Object} data Schema data.\n * @returns {Object} Put schema action.\n */\nexport function putSchema(type, data) {\n  return {\n    type: PUT_SCHEMA,\n    request: {\n      op: 'put',\n      path: \"/@types/\".concat(type),\n      data: data\n    }\n  };\n}\n\n/**\n * Update schema function.\n * @function updateSchema\n * @param {string} type Content type.\n * @param {Object} data Schema data.\n * @returns {Object} Update schema action.\n */\nexport function updateSchema(type, data) {\n  return {\n    type: UPDATE_SCHEMA,\n    request: {\n      op: 'patch',\n      path: \"/@types/\".concat(type),\n      data: data\n    }\n  };\n}","map":{"version":3,"names":["GET_SCHEMA","POST_SCHEMA","PUT_SCHEMA","UPDATE_SCHEMA","getSchema","type","url","request","op","path","postSchema","data","putSchema","updateSchema"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/actions/schema/schema.js"],"sourcesContent":["/**\n * Schema actions.\n * @module actions/schema/schema\n */\n\nimport {\n  GET_SCHEMA,\n  POST_SCHEMA,\n  PUT_SCHEMA,\n  UPDATE_SCHEMA,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Get schema function.\n * @function getSchema\n * @param {string} type Content type.\n * @param {string} url Content url.\n * @returns {Object} Get schema action.\n */\nexport function getSchema(type, url) {\n  url = typeof url !== 'undefined' ? url : '';\n  return {\n    type: GET_SCHEMA,\n    request: {\n      op: 'get',\n      path: `${url}/@types/${type}`,\n    },\n  };\n}\n\n/**\n * Post schema function.\n * @function postSchema\n * @param {string} type Content type.\n * @param {Object} data Schema data.\n * @returns {Object} Post schema action.\n */\nexport function postSchema(type, data) {\n  return {\n    type: POST_SCHEMA,\n    request: {\n      op: 'post',\n      path: `/@types/${type}`,\n      data,\n    },\n  };\n}\n\n/**\n * Put schema function.\n * @function putSchema\n * @param {string} type Content type.\n * @param {Object} data Schema data.\n * @returns {Object} Put schema action.\n */\nexport function putSchema(type, data) {\n  return {\n    type: PUT_SCHEMA,\n    request: {\n      op: 'put',\n      path: `/@types/${type}`,\n      data,\n    },\n  };\n}\n\n/**\n * Update schema function.\n * @function updateSchema\n * @param {string} type Content type.\n * @param {Object} data Schema data.\n * @returns {Object} Update schema action.\n */\nexport function updateSchema(type, data) {\n  return {\n    type: UPDATE_SCHEMA,\n    request: {\n      op: 'patch',\n      path: `/@types/${type}`,\n      data,\n    },\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SACEA,UAAU,EACVC,WAAW,EACXC,UAAU,EACVC,aAAa,QACR,oCAAoC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAAS,CAACC,IAAI,EAAEC,GAAG,EAAE;EACnCA,GAAG,GAAG,OAAOA,GAAG,KAAK,WAAW,GAAGA,GAAG,GAAG,EAAE;EAC3C,OAAO;IACLD,IAAI,EAAEL,UAAU;IAChBO,OAAO,EAAE;MACPC,EAAE,EAAE,KAAK;MACTC,IAAI,YAAKH,GAAG,qBAAWD,IAAI;IAC7B;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,UAAU,CAACL,IAAI,EAAEM,IAAI,EAAE;EACrC,OAAO;IACLN,IAAI,EAAEJ,WAAW;IACjBM,OAAO,EAAE;MACPC,EAAE,EAAE,MAAM;MACVC,IAAI,oBAAaJ,IAAI,CAAE;MACvBM,IAAI,EAAJA;IACF;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAAS,CAACP,IAAI,EAAEM,IAAI,EAAE;EACpC,OAAO;IACLN,IAAI,EAAEH,UAAU;IAChBK,OAAO,EAAE;MACPC,EAAE,EAAE,KAAK;MACTC,IAAI,oBAAaJ,IAAI,CAAE;MACvBM,IAAI,EAAJA;IACF;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,YAAY,CAACR,IAAI,EAAEM,IAAI,EAAE;EACvC,OAAO;IACLN,IAAI,EAAEF,aAAa;IACnBI,OAAO,EAAE;MACPC,EAAE,EAAE,OAAO;MACXC,IAAI,oBAAaJ,IAAI,CAAE;MACvBM,IAAI,EAAJA;IACF;EACF,CAAC;AACH"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}