{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-plotlycharts/src/ChartEditor/CustomMarkerColorscales.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ColorscalePicker from 'react-chart-editor/lib/components/fields/ColorscalePicker';\nimport CustomColorPicker from './CustomColorPicker';\nimport { Icon } from '@plone/volto/components';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport upIcon from '@plone/volto/icons/up-key.svg';\nimport downIcon from '@plone/volto/icons/down-key.svg';\nimport addIcon from '@plone/volto/icons/add.svg';\nimport autoIcon from '@plone/volto/icons/replace.svg';\nconst setColorValue = (i, length) => {\n  var increment = 1 / (length - 1);\n  var val = increment * i;\n  return val;\n};\nconst ColorscaleEditor = ({\n  colorscale,\n  _,\n  handleChange\n}) => {\n  const [expand, setExpand] = React.useState(false);\n  const handleColorChange = (color, index) => {\n    var newColorscale = [...colorscale];\n    newColorscale[index][1] = color;\n    handleChange(newColorscale);\n  };\n  const handleValueChange = (value, index) => {\n    var newColorscale = [...colorscale];\n    newColorscale[index][0] = value;\n    handleChange(newColorscale);\n  };\n  const handleAutoValues = colorscale => {\n    const updatedValue = colorscale.map((item, i) => [`${setColorValue(i, colorscale.length)}`, item[1]]);\n    handleChange(updatedValue);\n  };\n  const handleDeleteColor = (colorscale, index) => {\n    var newColorscale = [...colorscale.slice(0, index), ...colorscale.slice(index + 1)];\n    handleAutoValues(newColorscale);\n  };\n  const handleAddColor = colorscale => {\n    var newColorscale = [...colorscale, ['1', 'black']];\n    handleAutoValues(newColorscale);\n  };\n  return __jsx(\"div\", {\n    className: \"colors-edit-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    className: \"color-expand-button\",\n    onClick: () => setExpand(!expand),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, !expand && __jsx(Icon, {\n    className: \"color-open-icon\",\n    name: upIcon,\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), expand && __jsx(Icon, {\n    className: \"color-close-icon\",\n    name: downIcon,\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), !expand ? 'Edit colors' : 'Close'), expand && __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, colorscale && colorscale.length > 0 && colorscale.map((item, index) => __jsx(\"div\", {\n    className: \"color-edit\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    className: \"color-value\",\n    label: \"Value\",\n    value: item[0],\n    onChange: e => handleValueChange(e.target.value, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), __jsx(CustomColorPicker, {\n    selectedColor: item[1],\n    onColorChange: color => handleColorChange(color, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), colorscale.length > 2 && __jsx(Icon, {\n    onClick: () => handleDeleteColor(colorscale, index),\n    className: \"color-delete-icon\",\n    name: deleteSVG,\n    size: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }))), __jsx(\"div\", {\n    className: \"color-buttons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    className: \"color-add-button\",\n    title: \"Add new color\",\n    onClick: () => handleAddColor(colorscale),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    className: \"color-add-icon\",\n    name: addIcon,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }), \"Add\"), __jsx(\"button\", {\n    className: \"color-auto-button\",\n    title: \"Set colorscale values automatically\",\n    onClick: () => handleAutoValues(colorscale),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    className: \"color-add-icon\",\n    name: autoIcon,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }), \"Auto Value\"))));\n};\nconst CustomMarkerColorscales = ({\n  _,\n  colorscale,\n  handleChange\n}) => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, colorscale && colorscale.length > 0 && __jsx(ColorscaleEditor, {\n    handleChange: handleChange,\n    colorscale: colorscale,\n    _: _,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), __jsx(ColorscalePicker, {\n    suppressMultiValuedMessage: true,\n    attr: \"marker.colorscale\",\n    updatePlot: colorscale => {\n      handleChange(colorscale);\n    },\n    colorscale: colorscale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }));\n};\nexport default CustomMarkerColorscales;","map":{"version":3,"names":["React","ColorscalePicker","CustomColorPicker","Icon","deleteSVG","upIcon","downIcon","addIcon","autoIcon","setColorValue","i","length","increment","val","ColorscaleEditor","colorscale","_","handleChange","expand","setExpand","useState","handleColorChange","color","index","newColorscale","handleValueChange","value","handleAutoValues","updatedValue","map","item","handleDeleteColor","slice","handleAddColor","e","target","CustomMarkerColorscales"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-plotlycharts/src/ChartEditor/CustomMarkerColorscales.jsx"],"sourcesContent":["import React from 'react';\nimport ColorscalePicker from 'react-chart-editor/lib/components/fields/ColorscalePicker';\nimport CustomColorPicker from './CustomColorPicker';\nimport { Icon } from '@plone/volto/components';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport upIcon from '@plone/volto/icons/up-key.svg';\nimport downIcon from '@plone/volto/icons/down-key.svg';\nimport addIcon from '@plone/volto/icons/add.svg';\nimport autoIcon from '@plone/volto/icons/replace.svg';\n\nconst setColorValue = (i, length) => {\n  var increment = 1 / (length - 1);\n\n  var val = increment * i;\n  return val;\n};\n\nconst ColorscaleEditor = ({ colorscale, _, handleChange }) => {\n  const [expand, setExpand] = React.useState(false);\n\n  const handleColorChange = (color, index) => {\n    var newColorscale = [...colorscale];\n    newColorscale[index][1] = color;\n\n    handleChange(newColorscale);\n  };\n\n  const handleValueChange = (value, index) => {\n    var newColorscale = [...colorscale];\n    newColorscale[index][0] = value;\n\n    handleChange(newColorscale);\n  };\n\n  const handleAutoValues = (colorscale) => {\n    const updatedValue = colorscale.map((item, i) => [\n      `${setColorValue(i, colorscale.length)}`,\n      item[1],\n    ]);\n    handleChange(updatedValue);\n  };\n\n  const handleDeleteColor = (colorscale, index) => {\n    var newColorscale = [\n      ...colorscale.slice(0, index),\n      ...colorscale.slice(index + 1),\n    ];\n\n    handleAutoValues(newColorscale);\n  };\n\n  const handleAddColor = (colorscale) => {\n    var newColorscale = [...colorscale, ['1', 'black']];\n\n    handleAutoValues(newColorscale);\n  };\n\n  return (\n    <div className=\"colors-edit-container\">\n      <button\n        className=\"color-expand-button\"\n        onClick={() => setExpand(!expand)}\n      >\n        {!expand && (\n          <Icon className=\"color-open-icon\" name={upIcon} size=\"20px\" />\n        )}\n        {expand && (\n          <Icon className=\"color-close-icon\" name={downIcon} size=\"20px\" />\n        )}\n        {!expand ? 'Edit colors' : 'Close'}\n      </button>\n\n      {expand && (\n        <React.Fragment>\n          {colorscale &&\n            colorscale.length > 0 &&\n            colorscale.map((item, index) => (\n              <div className=\"color-edit\" key={index}>\n                <input\n                  className=\"color-value\"\n                  label=\"Value\"\n                  value={item[0]}\n                  onChange={(e) => handleValueChange(e.target.value, index)}\n                />\n                <CustomColorPicker\n                  selectedColor={item[1]}\n                  onColorChange={(color) => handleColorChange(color, index)}\n                />\n                {colorscale.length > 2 && (\n                  <Icon\n                    onClick={() => handleDeleteColor(colorscale, index)}\n                    className=\"color-delete-icon\"\n                    name={deleteSVG}\n                    size=\"24px\"\n                  />\n                )}\n              </div>\n            ))}\n          <div className=\"color-buttons-container\">\n            <button\n              className=\"color-add-button\"\n              title=\"Add new color\"\n              onClick={() => handleAddColor(colorscale)}\n            >\n              <Icon className=\"color-add-icon\" name={addIcon} size=\"18px\" />\n              Add\n            </button>\n            <button\n              className=\"color-auto-button\"\n              title=\"Set colorscale values automatically\"\n              onClick={() => handleAutoValues(colorscale)}\n            >\n              <Icon className=\"color-add-icon\" name={autoIcon} size=\"18px\" />\n              Auto Value\n            </button>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nconst CustomMarkerColorscales = ({ _, colorscale, handleChange }) => {\n  return (\n    <div>\n      {colorscale && colorscale.length > 0 && (\n        <ColorscaleEditor\n          handleChange={handleChange}\n          colorscale={colorscale}\n          _={_}\n        />\n      )}\n      <ColorscalePicker\n        suppressMultiValuedMessage\n        attr=\"marker.colorscale\"\n        updatePlot={(colorscale) => {\n          handleChange(colorscale);\n        }}\n        colorscale={colorscale}\n      />\n    </div>\n  );\n};\n\nexport default CustomMarkerColorscales;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}