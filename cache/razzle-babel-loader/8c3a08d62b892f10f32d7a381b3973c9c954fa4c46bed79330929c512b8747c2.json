{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { GET_CONTEXT_NAVIGATION } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Context Navigation reducer.\n * @function navigation\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function rawdata() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var result = action.result,\n    url = action.url;\n  switch (action.type) {\n    case \"\".concat(GET_CONTEXT_NAVIGATION, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, url, _objectSpread(_objectSpread({}, state[url]), {}, {\n        loading: true,\n        loaded: false,\n        error: undefined\n      })));\n    case \"\".concat(GET_CONTEXT_NAVIGATION, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, url, _objectSpread(_objectSpread({}, state[url]), {}, {\n        loading: false,\n        loaded: true,\n        error: undefined,\n        data: result\n      })));\n    case \"\".concat(GET_CONTEXT_NAVIGATION, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, url, _objectSpread(_objectSpread({}, state[url]), {}, {\n        loading: false,\n        loaded: false,\n        error: action.error\n      })));\n    default:\n      break;\n  }\n  return state;\n}","map":{"version":3,"names":["GET_CONTEXT_NAVIGATION","rawdata","state","action","result","url","type","loading","loaded","error","undefined","data"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/contextNavigation/contextNavigation.js"],"sourcesContent":["import { GET_CONTEXT_NAVIGATION } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Context Navigation reducer.\n * @function navigation\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function rawdata(state = {}, action = {}) {\n  let { result, url } = action;\n\n  switch (action.type) {\n    case `${GET_CONTEXT_NAVIGATION}_PENDING`:\n      return {\n        ...state,\n        [url]: {\n          ...state[url],\n          loading: true,\n          loaded: false,\n          error: undefined,\n        },\n      };\n    case `${GET_CONTEXT_NAVIGATION}_SUCCESS`:\n      return {\n        ...state,\n        [url]: {\n          ...state[url],\n          loading: false,\n          loaded: true,\n          error: undefined,\n          data: result,\n        },\n      };\n    case `${GET_CONTEXT_NAVIGATION}_FAIL`:\n      return {\n        ...state,\n        [url]: {\n          ...state[url],\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      break;\n  }\n  return state;\n}\n"],"mappings":";;AAAA,SAASA,sBAAsB,QAAQ,oCAAoC;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,OAAO,GAA0B;EAAA,IAAzBC,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEC,MAAM,uEAAG,CAAC,CAAC;EACrD,IAAMC,MAAM,GAAUD,MAAM,CAAtBC,MAAM;IAAEC,GAAG,GAAKF,MAAM,CAAdE,GAAG;EAEjB,QAAQF,MAAM,CAACG,IAAI;IACjB,eAAQN,sBAAsB;MAC5B,uCACKE,KAAK,2BACPG,GAAG,kCACCH,KAAK,CAACG,GAAG,CAAC;QACbE,OAAO,EAAE,IAAI;QACbC,MAAM,EAAE,KAAK;QACbC,KAAK,EAAEC;MAAS;IAGtB,eAAQV,sBAAsB;MAC5B,uCACKE,KAAK,2BACPG,GAAG,kCACCH,KAAK,CAACG,GAAG,CAAC;QACbE,OAAO,EAAE,KAAK;QACdC,MAAM,EAAE,IAAI;QACZC,KAAK,EAAEC,SAAS;QAChBC,IAAI,EAAEP;MAAM;IAGlB,eAAQJ,sBAAsB;MAC5B,uCACKE,KAAK,2BACPG,GAAG,kCACCH,KAAK,CAACG,GAAG,CAAC;QACbE,OAAO,EAAE,KAAK;QACdC,MAAM,EAAE,KAAK;QACbC,KAAK,EAAEN,MAAM,CAACM;MAAK;IAGzB;MACE;EAAM;EAEV,OAAOP,KAAK;AACd"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}