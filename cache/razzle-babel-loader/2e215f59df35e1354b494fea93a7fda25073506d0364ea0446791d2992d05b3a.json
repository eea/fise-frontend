{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/customizations/volto/components/manage/Blocks/Block/Edit.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Edit block.\n * @module components/manage/Blocks/Block/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { setSidebarTab } from '@plone/volto/actions';\nimport config from '@plone/volto/registry';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport { SidebarPortal, BlockSettingsSidebar, BlockSettingsSchema } from '@plone/volto/components';\nconst messages = defineMessages({\n  unknownBlock: {\n    \"id\": \"Unknown Block\",\n    \"defaultMessage\": \"Unknown Block {block}\"\n  }\n});\n\n/**\n * Edit block class.\n * @class Edit\n * @extends Component\n */\nexport class Edit extends Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"blockNode\", /*#__PURE__*/React.createRef());\n  }\n  componentDidMount() {\n    var _blocksConfig$type, _blocksConfig$type2;\n    const {\n      type\n    } = this.props;\n    const {\n      blocksConfig = config.blocks.blocksConfig\n    } = this.props;\n    const blockHasOwnFocusManagement = (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$type = blocksConfig[type]) === null || _blocksConfig$type === void 0 ? void 0 : _blocksConfig$type['blockHasOwnFocusManagement']) || null;\n    if (!blockHasOwnFocusManagement && this.props.selected && this.blockNode.current) {\n      this.blockNode.current.focus();\n    }\n    const tab = this.props.manage ? 1 : (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$type2 = blocksConfig[type]) === null || _blocksConfig$type2 === void 0 ? void 0 : _blocksConfig$type2.sidebarTab) || 0;\n    if (this.props.selected && this.props.editable) {\n      this.props.setSidebarTab(tab);\n    }\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    var _blocksConfig$type3;\n    const {\n      blocksConfig = config.blocks.blocksConfig\n    } = this.props;\n    const {\n      selected,\n      type\n    } = this.props;\n    const blockHasOwnFocusManagement = (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$type3 = blocksConfig[type]) === null || _blocksConfig$type3 === void 0 ? void 0 : _blocksConfig$type3['blockHasOwnFocusManagement']) || null;\n    if (!blockHasOwnFocusManagement && nextProps.selected && selected !== nextProps.selected && this.blockNode.current) {\n      this.blockNode.current.focus();\n    }\n    if ((!this.props.selected && nextProps.selected || type !== nextProps.type) && this.props.editable) {\n      var _blocksConfig$nextPro;\n      const tab = this.props.manage ? 1 : (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$nextPro = blocksConfig[nextProps.type]) === null || _blocksConfig$nextPro === void 0 ? void 0 : _blocksConfig$nextPro.sidebarTab) || 0;\n      this.props.setSidebarTab(tab);\n    }\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$data, _blocksConfig$type4, _this$props$data2, _blocksConfig$type6, _blocksConfig$type7;\n    const {\n      blocksConfig = config.blocks.blocksConfig\n    } = this.props;\n    const {\n      editable,\n      type\n    } = this.props;\n    const disableNewBlocks = (_this$props$data = this.props.data) === null || _this$props$data === void 0 ? void 0 : _this$props$data.disableNewBlocks;\n    let Block = (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$type4 = blocksConfig[type]) === null || _blocksConfig$type4 === void 0 ? void 0 : _blocksConfig$type4['edit']) || null;\n    if ((_this$props$data2 = this.props.data) !== null && _this$props$data2 !== void 0 && _this$props$data2.readOnly || !editable && !config.blocks.showEditBlocksInBabelView) {\n      var _blocksConfig$type5;\n      Block = (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$type5 = blocksConfig[type]) === null || _blocksConfig$type5 === void 0 ? void 0 : _blocksConfig$type5['view']) || null;\n    }\n    const schema = (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$type6 = blocksConfig[type]) === null || _blocksConfig$type6 === void 0 ? void 0 : _blocksConfig$type6['schema']) || BlockSettingsSchema;\n    const blockHasOwnFocusManagement = (blocksConfig === null || blocksConfig === void 0 ? void 0 : (_blocksConfig$type7 = blocksConfig[type]) === null || _blocksConfig$type7 === void 0 ? void 0 : _blocksConfig$type7['blockHasOwnFocusManagement']) || null;\n    return __jsx(React.Fragment, null, Block !== null ? __jsx(\"div\", {\n      role: \"presentation\",\n      onClick: e => {\n        const isMultipleSelection = e.shiftKey || e.ctrlKey || e.metaKey;\n        !this.props.selected && this.props.onSelectBlock(this.props.id, this.props.selected ? false : isMultipleSelection, e);\n      },\n      onKeyDown: !(blockHasOwnFocusManagement || disableNewBlocks) ? e => this.props.handleKeyDown(e, this.props.index, this.props.id, this.blockNode.current) : null,\n      className: cx(`block ${type}`, {\n        //TODO: add stretched group trigger for block border\n        'stretched-group': this.props.data.styles && this.props.type === 'group' && this.props.data.styles.stretch && this.props.data.styles.stretch === 'stretch',\n        selected: this.props.selected || this.props.multiSelected,\n        multiSelected: this.props.multiSelected\n      }),\n      style: {\n        outline: 'none'\n      },\n      ref: this.blockNode\n      // The tabIndex is required for the keyboard navigation\n      /* eslint-disable jsx-a11y/no-noninteractive-tabindex */,\n      tabIndex: !blockHasOwnFocusManagement ? -1 : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, __jsx(Block, _extends({}, this.props, {\n      blockNode: this.blockNode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    })), this.props.manage && __jsx(SidebarPortal, {\n      selected: this.props.selected,\n      tab: \"sidebar-settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, __jsx(BlockSettingsSidebar, _extends({}, this.props, {\n      schema: schema,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    })))) : __jsx(\"div\", {\n      role: \"presentation\",\n      onClick: () => !this.props.selected && this.props.onSelectBlock(this.props.id),\n      onKeyDown: !(blockHasOwnFocusManagement || disableNewBlocks) ? e => this.props.handleKeyDown(e, this.props.index, this.props.id, this.blockNode.current) : null,\n      className: cx(`block ${type}`, {\n        selected: this.props.selected\n      }),\n      style: {\n        outline: 'none'\n      },\n      ref: this.blockNode\n      // The tabIndex is required for the keyboard navigation\n      ,\n      tabIndex: -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, this.props.intl.formatMessage(messages.unknownBlock, {\n      block: type\n    })));\n  }\n}\n_defineProperty(Edit, \"propTypes\", {\n  type: PropTypes.string.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  // properties is mapped to formData, so it's not connected to changes of the object\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  selected: PropTypes.bool.isRequired,\n  multiSelected: PropTypes.bool,\n  index: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  manage: PropTypes.bool,\n  onMoveBlock: PropTypes.func.isRequired,\n  onDeleteBlock: PropTypes.func.isRequired,\n  editable: PropTypes.bool\n});\n_defineProperty(Edit, \"defaultProps\", {\n  manage: false,\n  editable: true\n});\nexport default compose(injectIntl, withObjectBrowser, connect(null, {\n  setSidebarTab\n}))(Edit);","map":{"version":3,"names":["React","Component","PropTypes","compose","connect","defineMessages","injectIntl","cx","setSidebarTab","config","withObjectBrowser","SidebarPortal","BlockSettingsSidebar","BlockSettingsSchema","messages","unknownBlock","Edit","createRef","componentDidMount","type","props","blocksConfig","blocks","blockHasOwnFocusManagement","selected","blockNode","current","focus","tab","manage","sidebarTab","editable","UNSAFE_componentWillReceiveProps","nextProps","render","disableNewBlocks","data","Block","readOnly","showEditBlocksInBabelView","schema","e","isMultipleSelection","shiftKey","ctrlKey","metaKey","onSelectBlock","id","handleKeyDown","index","styles","stretch","multiSelected","outline","intl","formatMessage","block","string","isRequired","objectOf","any","properties","bool","number","onMoveBlock","func","onDeleteBlock"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/customizations/volto/components/manage/Blocks/Block/Edit.jsx"],"sourcesContent":["/**\n * Edit block.\n * @module components/manage/Blocks/Block/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { setSidebarTab } from '@plone/volto/actions';\nimport config from '@plone/volto/registry';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\n\nimport {\n  SidebarPortal,\n  BlockSettingsSidebar,\n  BlockSettingsSchema,\n} from '@plone/volto/components';\n\nconst messages = defineMessages({\n  unknownBlock: {\n    id: 'Unknown Block',\n    defaultMessage: 'Unknown Block {block}',\n  },\n});\n\n/**\n * Edit block class.\n * @class Edit\n * @extends Component\n */\nexport class Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    type: PropTypes.string.isRequired,\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    // properties is mapped to formData, so it's not connected to changes of the object\n    properties: PropTypes.objectOf(PropTypes.any).isRequired,\n    selected: PropTypes.bool.isRequired,\n    multiSelected: PropTypes.bool,\n    index: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n    manage: PropTypes.bool,\n    onMoveBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    editable: PropTypes.bool,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    manage: false,\n    editable: true,\n  };\n\n  componentDidMount() {\n    const { type } = this.props;\n    const { blocksConfig = config.blocks.blocksConfig } = this.props;\n\n    const blockHasOwnFocusManagement =\n      blocksConfig?.[type]?.['blockHasOwnFocusManagement'] || null;\n    if (\n      !blockHasOwnFocusManagement &&\n      this.props.selected &&\n      this.blockNode.current\n    ) {\n      this.blockNode.current.focus();\n    }\n    const tab = this.props.manage ? 1 : blocksConfig?.[type]?.sidebarTab || 0;\n    if (this.props.selected && this.props.editable) {\n      this.props.setSidebarTab(tab);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { blocksConfig = config.blocks.blocksConfig } = this.props;\n    const { selected, type } = this.props;\n    const blockHasOwnFocusManagement =\n      blocksConfig?.[type]?.['blockHasOwnFocusManagement'] || null;\n    if (\n      !blockHasOwnFocusManagement &&\n      nextProps.selected &&\n      selected !== nextProps.selected &&\n      this.blockNode.current\n    ) {\n      this.blockNode.current.focus();\n    }\n    if (\n      ((!this.props.selected && nextProps.selected) ||\n        type !== nextProps.type) &&\n      this.props.editable\n    ) {\n      const tab = this.props.manage\n        ? 1\n        : blocksConfig?.[nextProps.type]?.sidebarTab || 0;\n      this.props.setSidebarTab(tab);\n    }\n  }\n\n  blockNode = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { blocksConfig = config.blocks.blocksConfig } = this.props;\n    const { editable, type } = this.props;\n\n    const disableNewBlocks = this.props.data?.disableNewBlocks;\n\n    let Block = blocksConfig?.[type]?.['edit'] || null;\n    if (\n      this.props.data?.readOnly ||\n      (!editable && !config.blocks.showEditBlocksInBabelView)\n    ) {\n      Block = blocksConfig?.[type]?.['view'] || null;\n    }\n    const schema = blocksConfig?.[type]?.['schema'] || BlockSettingsSchema;\n    const blockHasOwnFocusManagement =\n      blocksConfig?.[type]?.['blockHasOwnFocusManagement'] || null;\n\n    return (\n      <>\n        {Block !== null ? (\n          <div\n            role=\"presentation\"\n            onClick={(e) => {\n              const isMultipleSelection = e.shiftKey || e.ctrlKey || e.metaKey;\n              !this.props.selected &&\n                this.props.onSelectBlock(\n                  this.props.id,\n                  this.props.selected ? false : isMultipleSelection,\n                  e,\n                );\n            }}\n            onKeyDown={\n              !(blockHasOwnFocusManagement || disableNewBlocks)\n                ? (e) =>\n                    this.props.handleKeyDown(\n                      e,\n                      this.props.index,\n                      this.props.id,\n                      this.blockNode.current,\n                    )\n                : null\n            }\n            className={cx(`block ${type}`, {\n              //TODO: add stretched group trigger for block border\n              'stretched-group':\n                this.props.data.styles &&\n                this.props.type === 'group' &&\n                this.props.data.styles.stretch &&\n                this.props.data.styles.stretch === 'stretch',\n              selected: this.props.selected || this.props.multiSelected,\n              multiSelected: this.props.multiSelected,\n            })}\n            style={{ outline: 'none' }}\n            ref={this.blockNode}\n            // The tabIndex is required for the keyboard navigation\n            /* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n            tabIndex={!blockHasOwnFocusManagement ? -1 : null}\n          >\n            <Block {...this.props} blockNode={this.blockNode} />\n            {this.props.manage && (\n              <SidebarPortal\n                selected={this.props.selected}\n                tab=\"sidebar-settings\"\n              >\n                <BlockSettingsSidebar {...this.props} schema={schema} />\n              </SidebarPortal>\n            )}\n          </div>\n        ) : (\n          <div\n            role=\"presentation\"\n            onClick={() =>\n              !this.props.selected && this.props.onSelectBlock(this.props.id)\n            }\n            onKeyDown={\n              !(blockHasOwnFocusManagement || disableNewBlocks)\n                ? (e) =>\n                    this.props.handleKeyDown(\n                      e,\n                      this.props.index,\n                      this.props.id,\n                      this.blockNode.current,\n                    )\n                : null\n            }\n            className={cx(`block ${type}`, {\n              selected: this.props.selected,\n            })}\n            style={{ outline: 'none' }}\n            ref={this.blockNode}\n            // The tabIndex is required for the keyboard navigation\n            tabIndex={-1}\n          >\n            {this.props.intl.formatMessage(messages.unknownBlock, {\n              block: type,\n            })}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  withObjectBrowser,\n  connect(null, { setSidebarTab }),\n)(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Unknown Block","defaultMessage":"Unknown Block {block}"}]}},"sourceType":"module","externalDependencies":[]}