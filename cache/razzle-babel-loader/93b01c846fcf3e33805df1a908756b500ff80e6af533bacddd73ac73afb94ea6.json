{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/editor/plugins/Link/AppExtras/HashLink.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { withHashLink } from 'volto-slate/hooks';\nimport config from '@plone/volto/registry';\nconst scrollToTarget = (target, offsetHeight = 0) => {\n  const bodyRect = document.body.getBoundingClientRect().top;\n  const targetRect = target.getBoundingClientRect().top;\n  const targetPosition = targetRect - bodyRect - offsetHeight;\n  return window.scrollTo({\n    top: targetPosition,\n    behavior: 'smooth'\n  });\n};\nconst HashLink = ({\n  history,\n  pathname,\n  hashlink,\n  resetHashLink\n}) => {\n  const {\n    settings\n  } = config;\n  const blacklist = settings.hashlinkBlacklist || [];\n  const id = hashlink.hash;\n  const type = hashlink.data.type || '';\n  React.useEffect(() => {\n    const unlisten = history.listen(location => {\n      if (location.pathname !== pathname) {\n        resetHashLink();\n      }\n    });\n    return () => {\n      unlisten();\n    };\n    /* eslint-disable-next-line */\n  }, []);\n  React.useEffect(() => {\n    if (hashlink.counter > 0 && blacklist.indexOf(type) === -1) {\n      const element = document.getElementById(id);\n      const headerWrapper = document.querySelector('.header-wrapper');\n      const offsetHeight = hashlink.data.offsetHeight || (headerWrapper === null || headerWrapper === void 0 ? void 0 : headerWrapper.offsetHeight) || 0;\n      if (element) {\n        scrollToTarget(element, offsetHeight);\n      }\n    }\n    /* eslint-disable-next-line */\n  }, [hashlink.counter]);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  });\n};\nexport default withRouter(withHashLink(HashLink));","map":{"version":3,"names":["React","withRouter","withHashLink","config","scrollToTarget","target","offsetHeight","bodyRect","document","body","getBoundingClientRect","top","targetRect","targetPosition","window","scrollTo","behavior","HashLink","history","pathname","hashlink","resetHashLink","settings","blacklist","hashlinkBlacklist","id","hash","type","data","useEffect","unlisten","listen","location","counter","indexOf","element","getElementById","headerWrapper","querySelector"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/editor/plugins/Link/AppExtras/HashLink.js"],"sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router';\nimport { withHashLink } from 'volto-slate/hooks';\n\nimport config from '@plone/volto/registry';\n\nconst scrollToTarget = (target, offsetHeight = 0) => {\n  const bodyRect = document.body.getBoundingClientRect().top;\n  const targetRect = target.getBoundingClientRect().top;\n  const targetPosition = targetRect - bodyRect - offsetHeight;\n\n  return window.scrollTo({\n    top: targetPosition,\n    behavior: 'smooth',\n  });\n};\n\nconst HashLink = ({ history, pathname, hashlink, resetHashLink }) => {\n  const { settings } = config;\n  const blacklist = settings.hashlinkBlacklist || [];\n  const id = hashlink.hash;\n  const type = hashlink.data.type || '';\n\n  React.useEffect(() => {\n    const unlisten = history.listen((location) => {\n      if (location.pathname !== pathname) {\n        resetHashLink();\n      }\n    });\n    return () => {\n      unlisten();\n    };\n    /* eslint-disable-next-line */\n  }, []);\n\n  React.useEffect(() => {\n    if (hashlink.counter > 0 && blacklist.indexOf(type) === -1) {\n      const element = document.getElementById(id);\n      const headerWrapper = document.querySelector('.header-wrapper');\n      const offsetHeight =\n        hashlink.data.offsetHeight || headerWrapper?.offsetHeight || 0;\n      if (element) {\n        scrollToTarget(element, offsetHeight);\n      }\n    }\n    /* eslint-disable-next-line */\n  }, [hashlink.counter]);\n\n  return <React.Fragment />;\n};\n\nexport default withRouter(withHashLink(HashLink));\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,YAAY,QAAQ,mBAAmB;AAEhD,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,MAAMC,cAAc,GAAG,CAACC,MAAM,EAAEC,YAAY,GAAG,CAAC,KAAK;EACnD,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,IAAI,CAACC,qBAAqB,EAAE,CAACC,GAAG;EAC1D,MAAMC,UAAU,GAAGP,MAAM,CAACK,qBAAqB,EAAE,CAACC,GAAG;EACrD,MAAME,cAAc,GAAGD,UAAU,GAAGL,QAAQ,GAAGD,YAAY;EAE3D,OAAOQ,MAAM,CAACC,QAAQ,CAAC;IACrBJ,GAAG,EAAEE,cAAc;IACnBG,QAAQ,EAAE;EACZ,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,QAAQ,GAAG,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAc,CAAC,KAAK;EACnE,MAAM;IAAEC;EAAS,CAAC,GAAGnB,MAAM;EAC3B,MAAMoB,SAAS,GAAGD,QAAQ,CAACE,iBAAiB,IAAI,EAAE;EAClD,MAAMC,EAAE,GAAGL,QAAQ,CAACM,IAAI;EACxB,MAAMC,IAAI,GAAGP,QAAQ,CAACQ,IAAI,CAACD,IAAI,IAAI,EAAE;EAErC3B,KAAK,CAAC6B,SAAS,CAAC,MAAM;IACpB,MAAMC,QAAQ,GAAGZ,OAAO,CAACa,MAAM,CAAEC,QAAQ,IAAK;MAC5C,IAAIA,QAAQ,CAACb,QAAQ,KAAKA,QAAQ,EAAE;QAClCE,aAAa,EAAE;MACjB;IACF,CAAC,CAAC;IACF,OAAO,MAAM;MACXS,QAAQ,EAAE;IACZ,CAAC;IACD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN9B,KAAK,CAAC6B,SAAS,CAAC,MAAM;IACpB,IAAIT,QAAQ,CAACa,OAAO,GAAG,CAAC,IAAIV,SAAS,CAACW,OAAO,CAACP,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MAC1D,MAAMQ,OAAO,GAAG3B,QAAQ,CAAC4B,cAAc,CAACX,EAAE,CAAC;MAC3C,MAAMY,aAAa,GAAG7B,QAAQ,CAAC8B,aAAa,CAAC,iBAAiB,CAAC;MAC/D,MAAMhC,YAAY,GAChBc,QAAQ,CAACQ,IAAI,CAACtB,YAAY,KAAI+B,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE/B,YAAY,KAAI,CAAC;MAChE,IAAI6B,OAAO,EAAE;QACX/B,cAAc,CAAC+B,OAAO,EAAE7B,YAAY,CAAC;MACvC;IACF;IACA;EACF,CAAC,EAAE,CAACc,QAAQ,CAACa,OAAO,CAAC,CAAC;EAEtB,OAAO,MAAC,KAAK,CAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG;AAC3B,CAAC;AAED,eAAehC,UAAU,CAACC,YAAY,CAACe,QAAQ,CAAC,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}