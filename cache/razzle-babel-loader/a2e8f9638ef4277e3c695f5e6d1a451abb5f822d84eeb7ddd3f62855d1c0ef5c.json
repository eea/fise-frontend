{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nexport default (function (_ref) {\n  var data = _ref.data;\n  var _data$assetType = data.assetType,\n    assetType = _data$assetType === void 0 ? 'image' : _data$assetType;\n  return {\n    title: 'Item',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['assetType']\n    }].concat(_toConsumableArray(assetType === 'image' ? [{\n      id: 'image',\n      title: 'Image',\n      fields: ['image', 'imageSize']\n    }] : []), _toConsumableArray(assetType === 'icon' ? [{\n      id: 'icon',\n      title: 'Icon',\n      fields: ['icon', 'iconSize', 'iconTheme']\n    }] : [])),\n    properties: {\n      assetType: {\n        title: 'Asset type',\n        choices: [['image', 'Image'], ['icon', 'Icon']],\n        \"default\": 'image'\n      },\n      image: {\n        title: 'Image',\n        widget: 'attachedimage'\n      },\n      imageSize: {\n        title: 'Image size',\n        choices: [\n        // commented as they were too small to use as item icons\n        // ['mini', 'Mini'],\n        // ['tile', 'Tile'],\n        // ['tiny', 'Tiny'],\n        // ['small', 'Small'],\n        ['large', 'Large'], ['big', 'Big'], ['huge', 'Huge'], ['massive', 'Massive']],\n        \"default\": 'tile'\n      },\n      icon: {\n        title: 'Icon name'\n      },\n      iconSize: {\n        title: 'Icon size',\n        choices: [['mini', 'Mini'], ['tiny', 'Tiny'], ['small', 'Small'], ['large', 'Large'], ['big', 'Big'], ['huge', 'Huge'], ['massive', 'Massive']],\n        \"default\": 'huge'\n      },\n      iconTheme: {\n        title: 'Icon theme',\n        choices: [['primary', 'Primary'], ['secondary', 'Secondary'], ['tertiary', 'Tertiary']]\n      }\n    },\n    required: []\n  };\n});\nexport var stylingSchema = function stylingSchema(_ref2) {\n  var intl = _ref2.intl;\n  return {\n    title: 'Item style',\n    block: 'item',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['theme', 'verticalAlign']\n    }],\n    properties: {\n      theme: {\n        title: 'Theme',\n        choices: [['primary', 'Primary'], ['secondary', 'Secondary'], ['tertiary', 'Tertiary']]\n      },\n      verticalAlign: {\n        title: 'Vertical align',\n        choices: [['top', 'Top'], ['middle', 'Middle'], ['bottom', 'Bottom']]\n      }\n    },\n    required: []\n  };\n};","map":{"version":3,"names":["data","assetType","title","fieldsets","id","fields","properties","choices","image","widget","imageSize","icon","iconSize","iconTheme","required","stylingSchema","intl","block","theme","verticalAlign"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/blocks/Item/schema.js"],"sourcesContent":["export default ({ data }) => {\n  const { assetType = 'image' } = data;\n  return {\n    title: 'Item',\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: ['assetType'],\n      },\n      ...(assetType === 'image'\n        ? [{ id: 'image', title: 'Image', fields: ['image', 'imageSize'] }]\n        : []),\n      ...(assetType === 'icon'\n        ? [\n            {\n              id: 'icon',\n              title: 'Icon',\n              fields: ['icon', 'iconSize', 'iconTheme'],\n            },\n          ]\n        : []),\n    ],\n    properties: {\n      assetType: {\n        title: 'Asset type',\n        choices: [\n          ['image', 'Image'],\n          ['icon', 'Icon'],\n        ],\n        default: 'image',\n      },\n      image: {\n        title: 'Image',\n        widget: 'attachedimage',\n      },\n      imageSize: {\n        title: 'Image size',\n        choices: [\n          // commented as they were too small to use as item icons\n          // ['mini', 'Mini'],\n          // ['tile', 'Tile'],\n          // ['tiny', 'Tiny'],\n          // ['small', 'Small'],\n          ['large', 'Large'],\n          ['big', 'Big'],\n          ['huge', 'Huge'],\n          ['massive', 'Massive'],\n        ],\n        default: 'tile',\n      },\n      icon: {\n        title: 'Icon name',\n      },\n      iconSize: {\n        title: 'Icon size',\n        choices: [\n          ['mini', 'Mini'],\n          ['tiny', 'Tiny'],\n          ['small', 'Small'],\n          ['large', 'Large'],\n          ['big', 'Big'],\n          ['huge', 'Huge'],\n          ['massive', 'Massive'],\n        ],\n        default: 'huge',\n      },\n      iconTheme: {\n        title: 'Icon theme',\n        choices: [\n          ['primary', 'Primary'],\n          ['secondary', 'Secondary'],\n          ['tertiary', 'Tertiary'],\n        ],\n      },\n    },\n    required: [],\n  };\n};\n\nexport const stylingSchema = ({ intl }) => ({\n  title: 'Item style',\n  block: 'item',\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: ['theme', 'verticalAlign'],\n    },\n  ],\n  properties: {\n    theme: {\n      title: 'Theme',\n      choices: [\n        ['primary', 'Primary'],\n        ['secondary', 'Secondary'],\n        ['tertiary', 'Tertiary'],\n      ],\n    },\n    verticalAlign: {\n      title: 'Vertical align',\n      choices: [\n        ['top', 'Top'],\n        ['middle', 'Middle'],\n        ['bottom', 'Bottom'],\n      ],\n    },\n  },\n  required: [],\n});\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}