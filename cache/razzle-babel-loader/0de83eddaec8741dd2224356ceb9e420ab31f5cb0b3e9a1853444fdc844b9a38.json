{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { schemaEnhancerFactory, enhanceStylingSchema } from '@eeacms/volto-listing-block/schema-utils';\nimport { defineMessages } from 'react-intl';\nconst messages = defineMessages({\n  title: {\n    \"id\": \"Item type\",\n    \"defaultMessage\": \"Item type\"\n  }\n});\nconst ItemSchema = ({\n  formData\n}) => {\n  var _formData$itemModel;\n  return {\n    fieldsets: [{\n      id: 'itemDesigner',\n      title: 'Item',\n      fields: ['hasDate', 'hasDescription', 'maxDescription', 'hasImage', ...((_formData$itemModel = formData.itemModel) !== null && _formData$itemModel !== void 0 && _formData$itemModel.hasImage ? ['imageOnRightSide'] : [])\n      // 'hasMetaType',\n      // 'hasLabel',\n      // 'hasTags',\n      // 'callToAction',\n      ]\n    }],\n\n    properties: {\n      hasDate: {\n        title: 'Publication date',\n        type: 'boolean'\n      },\n      hasDescription: {\n        title: 'Description',\n        type: 'boolean',\n        default: true\n      },\n      maxDescription: {\n        title: 'Description max lines',\n        description: \"Limit description to a maximum number of lines by adding trailing '...'\",\n        type: 'number',\n        default: 2,\n        minimum: 0,\n        maximum: 5\n      },\n      hasImage: {\n        title: 'Image',\n        type: 'boolean',\n        default: true\n      },\n      imageOnRightSide: {\n        title: 'Image on Right (Default is Left)',\n        type: 'boolean'\n      }\n      // hasMetaType: {\n      //   title: 'Show portal type',\n      //   type: 'boolean',\n      // },\n      // hasLabel: {\n      //   title: 'Show new/archived label',\n      //   type: 'boolean',\n      // },\n      // hasTags: {\n      //   title: 'Show tags',\n      //   type: 'boolean',\n      // },\n    },\n\n    required: []\n  };\n};\nexport default function universalItemSchemaEnhancer(props) {\n  const {\n    schema\n  } = props;\n  props.formData = props.formData || props.data;\n  const enhanceItemModel = schemaEnhancerFactory({\n    extensionName: 'itemTemplates',\n    messages,\n    blockType: 'listing',\n    extensionField: '@type'\n  });\n  const baseSchema = _objectSpread(_objectSpread({}, schema), {}, {\n    fieldsets: [...schema.fieldsets, {\n      id: 'itemDesigner',\n      title: 'Item',\n      fields: ['itemModel']\n    }],\n    properties: _objectSpread(_objectSpread({}, schema.properties), {}, {\n      itemModel: {\n        title: 'Item model',\n        widget: 'object',\n        schema: enhanceItemModel(_objectSpread(_objectSpread({}, props), {}, {\n          schema: ItemSchema(props)\n        }))\n      }\n    })\n  });\n  const styledSchema = enhanceStylingSchema(_objectSpread(_objectSpread({}, props), {}, {\n    schema: baseSchema,\n    // schema: baseSchema.properties.styles.schema,\n    formData: props.formData\n  }));\n  return styledSchema;\n}","map":{"version":3,"names":["schemaEnhancerFactory","enhanceStylingSchema","defineMessages","messages","title","ItemSchema","formData","fieldsets","id","fields","itemModel","hasImage","properties","hasDate","type","hasDescription","default","maxDescription","description","minimum","maximum","imageOnRightSide","required","universalItemSchemaEnhancer","props","schema","data","enhanceItemModel","extensionName","blockType","extensionField","baseSchema","widget","styledSchema"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/components/UniversalItem/schema.js"],"sourcesContent":["import {\n  schemaEnhancerFactory,\n  enhanceStylingSchema,\n} from '@eeacms/volto-listing-block/schema-utils';\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  title: {\n    id: 'Item type',\n    defaultMessage: 'Item type',\n  },\n});\n\nconst ItemSchema = ({ formData }) => {\n  return {\n    fieldsets: [\n      {\n        id: 'itemDesigner',\n        title: 'Item',\n        fields: [\n          'hasDate',\n          'hasDescription',\n          'maxDescription',\n          'hasImage',\n          ...(formData.itemModel?.hasImage ? ['imageOnRightSide'] : []),\n          // 'hasMetaType',\n          // 'hasLabel',\n          // 'hasTags',\n          // 'callToAction',\n        ],\n      },\n    ],\n    properties: {\n      hasDate: {\n        title: 'Publication date',\n        type: 'boolean',\n      },\n      hasDescription: {\n        title: 'Description',\n        type: 'boolean',\n        default: true,\n      },\n      maxDescription: {\n        title: 'Description max lines',\n        description:\n          \"Limit description to a maximum number of lines by adding trailing '...'\",\n        type: 'number',\n        default: 2,\n        minimum: 0,\n        maximum: 5,\n      },\n      hasImage: {\n        title: 'Image',\n        type: 'boolean',\n        default: true,\n      },\n      imageOnRightSide: {\n        title: 'Image on Right (Default is Left)',\n        type: 'boolean',\n      },\n      // hasMetaType: {\n      //   title: 'Show portal type',\n      //   type: 'boolean',\n      // },\n      // hasLabel: {\n      //   title: 'Show new/archived label',\n      //   type: 'boolean',\n      // },\n      // hasTags: {\n      //   title: 'Show tags',\n      //   type: 'boolean',\n      // },\n    },\n    required: [],\n  };\n};\n\nexport default function universalItemSchemaEnhancer(props) {\n  const { schema } = props;\n  props.formData = props.formData || props.data;\n\n  const enhanceItemModel = schemaEnhancerFactory({\n    extensionName: 'itemTemplates',\n    messages,\n    blockType: 'listing',\n    extensionField: '@type',\n  });\n\n  const baseSchema = {\n    ...schema,\n    fieldsets: [\n      ...schema.fieldsets,\n      {\n        id: 'itemDesigner',\n        title: 'Item',\n        fields: ['itemModel'],\n      },\n    ],\n    properties: {\n      ...schema.properties,\n      itemModel: {\n        title: 'Item model',\n        widget: 'object',\n        schema: enhanceItemModel({\n          ...props,\n          schema: ItemSchema(props),\n        }),\n      },\n    },\n  };\n\n  const styledSchema = enhanceStylingSchema({\n    ...props,\n    schema: baseSchema,\n    // schema: baseSchema.properties.styles.schema,\n    formData: props.formData,\n  });\n\n  return styledSchema;\n}\n"],"mappings":";;;AAAA,SACEA,qBAAqB,EACrBC,oBAAoB,QACf,0CAA0C;AACjD,SAASC,cAAc,QAAQ,YAAY;AAE3C,MAAMC,QAAQ,GAAGD,cAAc,CAAC;EAC9BE,KAAK;IAAA;IAAA;EAAA;AAIP,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAG,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAA;EACnC,OAAO;IACLC,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,cAAc;MAClBJ,KAAK,EAAE,MAAM;MACbK,MAAM,EAAE,CACN,SAAS,EACT,gBAAgB,EAChB,gBAAgB,EAChB,UAAU,EACV,IAAI,uBAAAH,QAAQ,CAACI,SAAS,gDAAlB,oBAAoBC,QAAQ,GAAG,CAAC,kBAAkB,CAAC,GAAG,EAAE;MAC5D;MACA;MACA;MACA;MAAA;IAEJ,CAAC,CACF;;IACDC,UAAU,EAAE;MACVC,OAAO,EAAE;QACPT,KAAK,EAAE,kBAAkB;QACzBU,IAAI,EAAE;MACR,CAAC;MACDC,cAAc,EAAE;QACdX,KAAK,EAAE,aAAa;QACpBU,IAAI,EAAE,SAAS;QACfE,OAAO,EAAE;MACX,CAAC;MACDC,cAAc,EAAE;QACdb,KAAK,EAAE,uBAAuB;QAC9Bc,WAAW,EACT,yEAAyE;QAC3EJ,IAAI,EAAE,QAAQ;QACdE,OAAO,EAAE,CAAC;QACVG,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE;MACX,CAAC;MACDT,QAAQ,EAAE;QACRP,KAAK,EAAE,OAAO;QACdU,IAAI,EAAE,SAAS;QACfE,OAAO,EAAE;MACX,CAAC;MACDK,gBAAgB,EAAE;QAChBjB,KAAK,EAAE,kCAAkC;QACzCU,IAAI,EAAE;MACR;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC;;IACDQ,QAAQ,EAAE;EACZ,CAAC;AACH,CAAC;AAED,eAAe,SAASC,2BAA2B,CAACC,KAAK,EAAE;EACzD,MAAM;IAAEC;EAAO,CAAC,GAAGD,KAAK;EACxBA,KAAK,CAAClB,QAAQ,GAAGkB,KAAK,CAAClB,QAAQ,IAAIkB,KAAK,CAACE,IAAI;EAE7C,MAAMC,gBAAgB,GAAG3B,qBAAqB,CAAC;IAC7C4B,aAAa,EAAE,eAAe;IAC9BzB,QAAQ;IACR0B,SAAS,EAAE,SAAS;IACpBC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAMC,UAAU,mCACXN,MAAM;IACTlB,SAAS,EAAE,CACT,GAAGkB,MAAM,CAAClB,SAAS,EACnB;MACEC,EAAE,EAAE,cAAc;MAClBJ,KAAK,EAAE,MAAM;MACbK,MAAM,EAAE,CAAC,WAAW;IACtB,CAAC,CACF;IACDG,UAAU,kCACLa,MAAM,CAACb,UAAU;MACpBF,SAAS,EAAE;QACTN,KAAK,EAAE,YAAY;QACnB4B,MAAM,EAAE,QAAQ;QAChBP,MAAM,EAAEE,gBAAgB,iCACnBH,KAAK;UACRC,MAAM,EAAEpB,UAAU,CAACmB,KAAK;QAAC;MAE7B;IAAC;EACF,EACF;EAED,MAAMS,YAAY,GAAGhC,oBAAoB,iCACpCuB,KAAK;IACRC,MAAM,EAAEM,UAAU;IAClB;IACAzB,QAAQ,EAAEkB,KAAK,CAAClB;EAAQ,GACxB;EAEF,OAAO2B,YAAY;AACrB"},"metadata":{"react-intl":{"messages":[{"id":"Item type","defaultMessage":"Item type"}]}},"sourceType":"module","externalDependencies":[]}