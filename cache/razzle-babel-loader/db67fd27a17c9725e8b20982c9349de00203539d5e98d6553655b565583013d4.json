{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { Node } from 'slate';\nimport { _unwrapElement, _getActiveElement } from 'volto-slate/components/ElementEditor/utils';\nimport config from '@plone/volto/registry';\n\n/**\n * Handles empty string cases in the given `editor`.\n * It will unwrap empty strings for any major type (ex: a, mentions, footnote, zotero).\n * @param {Editor} editor\n * @param {Event} event\n */\nexport function unwrapEmptyString(props) {\n  var nodeTypesToHighlight = config.settings.slate.nodeTypesToHighlight;\n  var uniqueNodeTypesToHighligh = _toConsumableArray(new Set(nodeTypesToHighlight));\n  var getActiveElement = _getActiveElement(uniqueNodeTypesToHighligh);\n  var unwrapElement = _unwrapElement(uniqueNodeTypesToHighligh);\n  var editor = props.editor;\n  var actEl = getActiveElement(editor);\n  if (actEl && Node.string(actEl[0]).length === 1) {\n    unwrapElement(editor);\n  }\n}","map":{"version":3,"names":["Node","_unwrapElement","_getActiveElement","config","unwrapEmptyString","props","nodeTypesToHighlight","settings","slate","uniqueNodeTypesToHighligh","Set","getActiveElement","unwrapElement","editor","actEl","string","length"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/blocks/Text/keyboard/unwrapEmptyString.js"],"sourcesContent":["import { Node } from 'slate';\nimport {\n  _unwrapElement,\n  _getActiveElement,\n} from 'volto-slate/components/ElementEditor/utils';\nimport config from '@plone/volto/registry';\n\n/**\n * Handles empty string cases in the given `editor`.\n * It will unwrap empty strings for any major type (ex: a, mentions, footnote, zotero).\n * @param {Editor} editor\n * @param {Event} event\n */\nexport function unwrapEmptyString(props) {\n  const { nodeTypesToHighlight } = config.settings.slate;\n  const uniqueNodeTypesToHighligh = [...new Set(nodeTypesToHighlight)];\n  const getActiveElement = _getActiveElement(uniqueNodeTypesToHighligh);\n  const unwrapElement = _unwrapElement(uniqueNodeTypesToHighligh);\n\n  const { editor } = props;\n  const actEl = getActiveElement(editor);\n\n  if (actEl && Node.string(actEl[0]).length === 1) {\n    unwrapElement(editor);\n  }\n}\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,OAAO;AAC5B,SACEC,cAAc,EACdC,iBAAiB,QACZ,4CAA4C;AACnD,OAAOC,MAAM,MAAM,uBAAuB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiB,CAACC,KAAK,EAAE;EACvC,IAAQC,oBAAoB,GAAKH,MAAM,CAACI,QAAQ,CAACC,KAAK,CAA9CF,oBAAoB;EAC5B,IAAMG,yBAAyB,sBAAO,IAAIC,GAAG,CAACJ,oBAAoB,CAAC,CAAC;EACpE,IAAMK,gBAAgB,GAAGT,iBAAiB,CAACO,yBAAyB,CAAC;EACrE,IAAMG,aAAa,GAAGX,cAAc,CAACQ,yBAAyB,CAAC;EAE/D,IAAQI,MAAM,GAAKR,KAAK,CAAhBQ,MAAM;EACd,IAAMC,KAAK,GAAGH,gBAAgB,CAACE,MAAM,CAAC;EAEtC,IAAIC,KAAK,IAAId,IAAI,CAACe,MAAM,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAACE,MAAM,KAAK,CAAC,EAAE;IAC/CJ,aAAa,CAACC,MAAM,CAAC;EACvB;AACF"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}