{"ast":null,"code":"// Based on https://github.com/ai/nanoid/blob/master/non-secure/index.js\n\n// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nvar urlAlphabet = 'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW';\nexport var nanoid = function nanoid() {\n  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 21;\n  var id = '';\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  var i = size;\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0];\n  }\n  return id;\n};","map":{"version":3,"names":["urlAlphabet","nanoid","size","id","i","Math","random"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/utils/random.js"],"sourcesContent":["// Based on https://github.com/ai/nanoid/blob/master/non-secure/index.js\n\n// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nconst urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW';\n\nexport const nanoid = (size = 21) => {\n  let id = '';\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size;\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[(Math.random() * 64) | 0];\n  }\n  return id;\n};\n"],"mappings":"AAAA;;AAEA;AACA;AACA,IAAMA,WAAW,GACf,kEAAkE;AAEpE,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAM,GAAkB;EAAA,IAAdC,IAAI,uEAAG,EAAE;EAC9B,IAAIC,EAAE,GAAG,EAAE;EACX;EACA,IAAIC,CAAC,GAAGF,IAAI;EACZ,OAAOE,CAAC,EAAE,EAAE;IACV;IACAD,EAAE,IAAIH,WAAW,CAAEK,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE,GAAI,CAAC,CAAC;EAC7C;EACA,OAAOH,EAAE;AACX,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}