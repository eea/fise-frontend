{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Trancsaction reducer.\n * @module reducers/transactions/transactions\n */\nimport { GET_TRANSACTIONS, REVERT_TRANSACTIONS } from '../../constants/ActionTypes';\nvar initialState = {\n  transactions_recieved: [],\n  get: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  revert: {\n    error: undefined,\n    loaded: false,\n    loading: false\n  }\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Transaction reducer.\n * @function transactions\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function transactions() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case \"\".concat(REVERT_TRANSACTIONS, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, getRequestKey(action.type), {\n        loading: true,\n        loaded: false,\n        error: undefined\n      }));\n    case \"\".concat(GET_TRANSACTIONS, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, getRequestKey(action.type), {\n        loading: true,\n        loaded: false,\n        error: null\n      }));\n    case \"\".concat(GET_TRANSACTIONS, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        transactions_recieved: action.result\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: true,\n        error: null\n      }));\n    case \"\".concat(REVERT_TRANSACTIONS, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, getRequestKey(action.type), {\n        loading: false,\n        loaded: true,\n        error: null\n      }));\n    case \"\".concat(GET_TRANSACTIONS, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        transactions_recieved: []\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: false,\n        error: action.error\n      }));\n    case \"\".concat(REVERT_TRANSACTIONS, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, getRequestKey(action.type), {\n        loading: false,\n        loaded: false,\n        error: action.error\n      }));\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_TRANSACTIONS","REVERT_TRANSACTIONS","initialState","transactions_recieved","get","error","loaded","loading","revert","undefined","getRequestKey","actionType","split","toLowerCase","transactions","state","action","type","result"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/transactions/transactions.js"],"sourcesContent":["/**\n * Trancsaction reducer.\n * @module reducers/transactions/transactions\n */\nimport {\n  GET_TRANSACTIONS,\n  REVERT_TRANSACTIONS,\n} from '../../constants/ActionTypes';\n\nconst initialState = {\n  transactions_recieved: [],\n  get: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  revert: {\n    error: undefined,\n    loaded: false,\n    loading: false,\n  },\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Transaction reducer.\n * @function transactions\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function transactions(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${REVERT_TRANSACTIONS}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: undefined,\n        },\n      };\n\n    case `${GET_TRANSACTIONS}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n\n    case `${GET_TRANSACTIONS}_SUCCESS`:\n      return {\n        ...state,\n        transactions_recieved: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n\n    case `${REVERT_TRANSACTIONS}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n\n    case `${GET_TRANSACTIONS}_FAIL`:\n      return {\n        ...state,\n        transactions_recieved: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n\n    case `${REVERT_TRANSACTIONS}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,SACEA,gBAAgB,EAChBC,mBAAmB,QACd,6BAA6B;AAEpC,IAAMC,YAAY,GAAG;EACnBC,qBAAqB,EAAE,EAAE;EACzBC,GAAG,EAAE;IACHC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;EACX,CAAC;EACDC,MAAM,EAAE;IACNH,KAAK,EAAEI,SAAS;IAChBH,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,aAAa,CAACC,UAAU,EAAE;EACjC,OAAOA,UAAU,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,YAAY,GAAoC;EAAA,IAAnCC,KAAK,uEAAGb,YAAY;EAAA,IAAEc,MAAM,uEAAG,CAAC,CAAC;EACpE,QAAQA,MAAM,CAACC,IAAI;IACjB,eAAQhB,mBAAmB;MACzB,uCACKc,KAAK,2BACPL,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,EAAG;QAC5BV,OAAO,EAAE,IAAI;QACbD,MAAM,EAAE,KAAK;QACbD,KAAK,EAAEI;MACT,CAAC;IAGL,eAAQT,gBAAgB;MACtB,uCACKe,KAAK,2BACPL,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,EAAG;QAC5BV,OAAO,EAAE,IAAI;QACbD,MAAM,EAAE,KAAK;QACbD,KAAK,EAAE;MACT,CAAC;IAGL,eAAQL,gBAAgB;MACtB,uCACKe,KAAK;QACRZ,qBAAqB,EAAEa,MAAM,CAACE;MAAM,GACnCR,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,EAAG;QAC5BV,OAAO,EAAE,KAAK;QACdD,MAAM,EAAE,IAAI;QACZD,KAAK,EAAE;MACT,CAAC;IAGL,eAAQJ,mBAAmB;MACzB,uCACKc,KAAK,2BACPL,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,EAAG;QAC5BV,OAAO,EAAE,KAAK;QACdD,MAAM,EAAE,IAAI;QACZD,KAAK,EAAE;MACT,CAAC;IAGL,eAAQL,gBAAgB;MACtB,uCACKe,KAAK;QACRZ,qBAAqB,EAAE;MAAE,GACxBO,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,EAAG;QAC5BV,OAAO,EAAE,KAAK;QACdD,MAAM,EAAE,KAAK;QACbD,KAAK,EAAEW,MAAM,CAACX;MAChB,CAAC;IAGL,eAAQJ,mBAAmB;MACzB,uCACKc,KAAK,2BACPL,aAAa,CAACM,MAAM,CAACC,IAAI,CAAC,EAAG;QAC5BV,OAAO,EAAE,KAAK;QACdD,MAAM,EAAE,KAAK;QACbD,KAAK,EAAEW,MAAM,CAACX;MAChB,CAAC;IAGL;MACE,OAAOU,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}