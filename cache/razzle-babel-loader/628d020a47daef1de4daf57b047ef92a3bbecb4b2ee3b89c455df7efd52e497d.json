{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-block-style/src/Widgets/Stretch.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n/**\n * StretchWidget component.\n * To benefit from styling integration, use with a field named 'Stretch'\n * @module components/manage/Widgets/StretchWidget\n */\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport StretchBlock from '../Blocks/StretchBlock';\nconst StretchWidget = props => {\n  const {\n    id,\n    onChange,\n    value\n  } = props;\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    className: \"align-widget\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"align-tools\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(StretchBlock, {\n    stretch: value,\n    onChangeBlock: (block, {\n      stretch\n    }) => onChange(id, stretch),\n    data: {\n      stretch: value\n    },\n    block: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })));\n};\nexport default injectIntl(StretchWidget);","map":{"version":3,"names":["React","injectIntl","FormFieldWrapper","StretchBlock","StretchWidget","props","id","onChange","value","block","stretch"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-block-style/src/Widgets/Stretch.jsx"],"sourcesContent":["/**\n * StretchWidget component.\n * To benefit from styling integration, use with a field named 'Stretch'\n * @module components/manage/Widgets/StretchWidget\n */\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport StretchBlock from '../Blocks/StretchBlock';\n\nconst StretchWidget = (props) => {\n  const { id, onChange, value } = props;\n\n  return (\n    <FormFieldWrapper {...props} className=\"align-widget\">\n      <div className=\"align-tools\">\n        <StretchBlock\n          stretch={value}\n          onChangeBlock={(block, { stretch }) => onChange(id, stretch)}\n          data={{ stretch: value }}\n          block={id}\n        />\n      </div>\n    </FormFieldWrapper>\n  );\n};\n\nexport default injectIntl(StretchWidget);\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,YAAY;AAEvC,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,OAAOC,YAAY,MAAM,wBAAwB;AAEjD,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/B,MAAM;IAAEC,EAAE;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAGH,KAAK;EAErC,OACE,MAAC,gBAAgB,eAAKA,KAAK;IAAE,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACnD;IAAK,SAAS,EAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC1B,MAAC,YAAY;IACX,OAAO,EAAEG,KAAM;IACf,aAAa,EAAE,CAACC,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAKH,QAAQ,CAACD,EAAE,EAAEI,OAAO,CAAE;IAC7D,IAAI,EAAE;MAAEA,OAAO,EAAEF;IAAM,CAAE;IACzB,KAAK,EAAEF,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACV,CACE,CACW;AAEvB,CAAC;AAED,eAAeL,UAAU,CAACG,aAAa,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}