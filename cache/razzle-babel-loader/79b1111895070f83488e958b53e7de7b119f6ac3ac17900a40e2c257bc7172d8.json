{"ast":null,"code":"import React from 'react';\nexport function getOptions(props) {\n  let options = {};\n  for (let key in props) {\n    if (key !== 'children' && typeof props[key] !== 'undefined' && !key.match(/^on[A-Z]/)) {\n      options[key] = props[key];\n    }\n  }\n  return options;\n}\nfunction getPropsKey(eventName) {\n  return 'on' + eventName.replace(/(:[a-z])/g, $1 => $1.toUpperCase()).replace(/^[a-z]/, $1 => $1.toUpperCase()).replace(':', '');\n}\nexport function getEvents(events, props) {\n  let prop2EventMap = {};\n  for (let key in events) {\n    prop2EventMap[getPropsKey(key)] = key;\n  }\n  let ret = {};\n  for (let propName in props) {\n    let eventName = prop2EventMap[propName];\n    let prop = props[propName];\n    if (typeof prop !== 'undefined' && propName.match(/^on[A-Z]/) && eventName) {\n      ret[eventName] = prop;\n    }\n  }\n  return ret;\n}\nexport function findChild(children, childType) {\n  let found;\n  let childrenArr = React.Children.toArray(children);\n  for (let i = 0; i < childrenArr.length; i++) {\n    let child = childrenArr[i];\n    if (child.type === childType) {\n      found = child;\n      break;\n    }\n  }\n  return found;\n}\nexport function isEqual(arg1, arg2) {\n  try {\n    return JSON.stringify(arg1) === JSON.stringify(arg2);\n  } catch {\n    return false;\n  }\n}\nexport function assign(target, sources) {\n  let newTarget = {};\n  Object.keys(target).forEach(key => {\n    newTarget[key] = sources[key];\n  });\n  return newTarget;\n}","map":{"version":3,"names":["React","getOptions","props","options","key","match","getPropsKey","eventName","replace","$1","toUpperCase","getEvents","events","prop2EventMap","ret","propName","prop","findChild","children","childType","found","childrenArr","Children","toArray","i","length","child","type","isEqual","arg1","arg2","JSON","stringify","assign","target","sources","newTarget","Object","keys","forEach"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-openlayers-map/src/helpers.js"],"sourcesContent":["import React from 'react';\n\nexport function getOptions(props) {\n  let options = {};\n\n  for (let key in props) {\n    if (\n      key !== 'children' &&\n      typeof props[key] !== 'undefined' &&\n      !key.match(/^on[A-Z]/)\n    ) {\n      options[key] = props[key];\n    }\n  }\n\n  return options;\n}\n\nfunction getPropsKey(eventName) {\n  return (\n    'on' +\n    eventName\n      .replace(/(:[a-z])/g, ($1) => $1.toUpperCase())\n      .replace(/^[a-z]/, ($1) => $1.toUpperCase())\n      .replace(':', '')\n  );\n}\n\nexport function getEvents(events, props) {\n  let prop2EventMap = {};\n  for (let key in events) {\n    prop2EventMap[getPropsKey(key)] = key;\n  }\n\n  let ret = {};\n  for (let propName in props) {\n    let eventName = prop2EventMap[propName];\n    let prop = props[propName];\n    if (\n      typeof prop !== 'undefined' &&\n      propName.match(/^on[A-Z]/) &&\n      eventName\n    ) {\n      ret[eventName] = prop;\n    }\n  }\n\n  return ret;\n}\n\nexport function findChild(children, childType) {\n  let found;\n  let childrenArr = React.Children.toArray(children);\n  for (let i = 0; i < childrenArr.length; i++) {\n    let child = childrenArr[i];\n    if (child.type === childType) {\n      found = child;\n      break;\n    }\n  }\n  return found;\n}\n\nexport function isEqual(arg1, arg2) {\n  try {\n    return JSON.stringify(arg1) === JSON.stringify(arg2);\n  } catch {\n    return false;\n  }\n}\n\nexport function assign(target, sources) {\n  let newTarget = {};\n\n  Object.keys(target).forEach((key) => {\n    newTarget[key] = sources[key];\n  });\n\n  return newTarget;\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,UAAU,CAACC,KAAK,EAAE;EAChC,IAAIC,OAAO,GAAG,CAAC,CAAC;EAEhB,KAAK,IAAIC,GAAG,IAAIF,KAAK,EAAE;IACrB,IACEE,GAAG,KAAK,UAAU,IAClB,OAAOF,KAAK,CAACE,GAAG,CAAC,KAAK,WAAW,IACjC,CAACA,GAAG,CAACC,KAAK,CAAC,UAAU,CAAC,EACtB;MACAF,OAAO,CAACC,GAAG,CAAC,GAAGF,KAAK,CAACE,GAAG,CAAC;IAC3B;EACF;EAEA,OAAOD,OAAO;AAChB;AAEA,SAASG,WAAW,CAACC,SAAS,EAAE;EAC9B,OACE,IAAI,GACJA,SAAS,CACNC,OAAO,CAAC,WAAW,EAAGC,EAAE,IAAKA,EAAE,CAACC,WAAW,EAAE,CAAC,CAC9CF,OAAO,CAAC,QAAQ,EAAGC,EAAE,IAAKA,EAAE,CAACC,WAAW,EAAE,CAAC,CAC3CF,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;AAEvB;AAEA,OAAO,SAASG,SAAS,CAACC,MAAM,EAAEV,KAAK,EAAE;EACvC,IAAIW,aAAa,GAAG,CAAC,CAAC;EACtB,KAAK,IAAIT,GAAG,IAAIQ,MAAM,EAAE;IACtBC,aAAa,CAACP,WAAW,CAACF,GAAG,CAAC,CAAC,GAAGA,GAAG;EACvC;EAEA,IAAIU,GAAG,GAAG,CAAC,CAAC;EACZ,KAAK,IAAIC,QAAQ,IAAIb,KAAK,EAAE;IAC1B,IAAIK,SAAS,GAAGM,aAAa,CAACE,QAAQ,CAAC;IACvC,IAAIC,IAAI,GAAGd,KAAK,CAACa,QAAQ,CAAC;IAC1B,IACE,OAAOC,IAAI,KAAK,WAAW,IAC3BD,QAAQ,CAACV,KAAK,CAAC,UAAU,CAAC,IAC1BE,SAAS,EACT;MACAO,GAAG,CAACP,SAAS,CAAC,GAAGS,IAAI;IACvB;EACF;EAEA,OAAOF,GAAG;AACZ;AAEA,OAAO,SAASG,SAAS,CAACC,QAAQ,EAAEC,SAAS,EAAE;EAC7C,IAAIC,KAAK;EACT,IAAIC,WAAW,GAAGrB,KAAK,CAACsB,QAAQ,CAACC,OAAO,CAACL,QAAQ,CAAC;EAClD,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,WAAW,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IAC3C,IAAIE,KAAK,GAAGL,WAAW,CAACG,CAAC,CAAC;IAC1B,IAAIE,KAAK,CAACC,IAAI,KAAKR,SAAS,EAAE;MAC5BC,KAAK,GAAGM,KAAK;MACb;IACF;EACF;EACA,OAAON,KAAK;AACd;AAEA,OAAO,SAASQ,OAAO,CAACC,IAAI,EAAEC,IAAI,EAAE;EAClC,IAAI;IACF,OAAOC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,KAAKE,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC;EACtD,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;AACF;AAEA,OAAO,SAASG,MAAM,CAACC,MAAM,EAAEC,OAAO,EAAE;EACtC,IAAIC,SAAS,GAAG,CAAC,CAAC;EAElBC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACK,OAAO,CAAEnC,GAAG,IAAK;IACnCgC,SAAS,CAAChC,GAAG,CAAC,GAAG+B,OAAO,CAAC/B,GAAG,CAAC;EAC/B,CAAC,CAAC;EAEF,OAAOgC,SAAS;AAClB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}