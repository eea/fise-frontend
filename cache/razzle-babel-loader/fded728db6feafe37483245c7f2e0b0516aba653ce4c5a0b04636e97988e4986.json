{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/Portlets/PortletManagerRenderer.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getPortlets } from '../actions';\nimport config from '@plone/volto/registry';\nimport { normalize } from './utils';\nimport { getBaseUrl } from '@plone/volto/helpers';\nexport function renderPortlet(portlet, props) {\n  var portlets = config.settings.portlets;\n  var PortletRenderer = portlets.renderers[portlet['@type']] || portlets.renderers[\"default\"];\n  return __jsx(PortletRenderer, _extends({\n    portlet: portlet\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  }));\n}\nvar PortletManagerRenderer = /*#__PURE__*/function (_Component) {\n  _inherits(PortletManagerRenderer, _Component);\n  var _super = _createSuper(PortletManagerRenderer);\n  function PortletManagerRenderer() {\n    _classCallCheck(this, PortletManagerRenderer);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PortletManagerRenderer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var url = getBaseUrl(this.props.pathname || '');\n      var prevUrl = getBaseUrl(prevProps.pathname || '');\n      if (this.props.pathname && prevUrl !== url) {\n        this.props.getPortlets(url, this.props.name);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      var portlets = this.props.portletmanagers[this.props.name] || [];\n      return __jsx(\"div\", {\n        id: \"portlets-\".concat(normalize(this.props.name)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, portlets.map(function (portlet) {\n        return __jsx(\"div\", {\n          className: \"portlet\",\n          key: portlet['@id'],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }\n        }, renderPortlet(portlet));\n      }));\n    }\n  }]);\n  return PortletManagerRenderer;\n}(Component);\nexport default connect(function (state, props) {\n  return {\n    portletmanagers: state.portlets.managers\n  };\n}, {\n  getPortlets: getPortlets\n})(PortletManagerRenderer);","map":{"version":3,"names":["React","Component","connect","getPortlets","config","normalize","getBaseUrl","renderPortlet","portlet","props","portlets","settings","PortletRenderer","renderers","PortletManagerRenderer","prevProps","prevState","url","pathname","prevUrl","name","portletmanagers","map","state","managers"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/Portlets/PortletManagerRenderer.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getPortlets } from '../actions';\nimport config from '@plone/volto/registry';\nimport { normalize } from './utils';\nimport { getBaseUrl } from '@plone/volto/helpers';\n\nexport function renderPortlet(portlet, props) {\n  const portlets = config.settings.portlets;\n  const PortletRenderer =\n    portlets.renderers[portlet['@type']] || portlets.renderers.default;\n  return <PortletRenderer portlet={portlet} {...props} />;\n}\n\nclass PortletManagerRenderer extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    const url = getBaseUrl(this.props.pathname || '');\n    const prevUrl = getBaseUrl(prevProps.pathname || '');\n    if (this.props.pathname && prevUrl !== url) {\n      this.props.getPortlets(url, this.props.name);\n    }\n  }\n\n  render() {\n    const portlets = this.props.portletmanagers[this.props.name] || [];\n    return (\n      <div id={`portlets-${normalize(this.props.name)}`}>\n        {portlets.map((portlet) => (\n          <div className=\"portlet\" key={portlet['@id']}>\n            {renderPortlet(portlet)}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state, props) => ({\n    portletmanagers: state.portlets.managers,\n  }),\n  {\n    getPortlets,\n  },\n)(PortletManagerRenderer);\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,WAAW,QAAQ,YAAY;AACxC,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,SAAS,QAAQ,SAAS;AACnC,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,OAAO,SAASC,aAAa,CAACC,OAAO,EAAEC,KAAK,EAAE;EAC5C,IAAMC,QAAQ,GAAGN,MAAM,CAACO,QAAQ,CAACD,QAAQ;EACzC,IAAME,eAAe,GACnBF,QAAQ,CAACG,SAAS,CAACL,OAAO,CAAC,OAAO,CAAC,CAAC,IAAIE,QAAQ,CAACG,SAAS,WAAQ;EACpE,OAAO,MAAC,eAAe;IAAC,OAAO,EAAEL;EAAQ,GAAKC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI;AACzD;AAAC,IAEKK,sBAAsB;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAC1B,4BAAmBC,SAAS,EAAEC,SAAS,EAAE;MACvC,IAAMC,GAAG,GAAGX,UAAU,CAAC,IAAI,CAACG,KAAK,CAACS,QAAQ,IAAI,EAAE,CAAC;MACjD,IAAMC,OAAO,GAAGb,UAAU,CAACS,SAAS,CAACG,QAAQ,IAAI,EAAE,CAAC;MACpD,IAAI,IAAI,CAACT,KAAK,CAACS,QAAQ,IAAIC,OAAO,KAAKF,GAAG,EAAE;QAC1C,IAAI,CAACR,KAAK,CAACN,WAAW,CAACc,GAAG,EAAE,IAAI,CAACR,KAAK,CAACW,IAAI,CAAC;MAC9C;IACF;EAAC;IAAA;IAAA,OAED,kBAAS;MAAA;MACP,IAAMV,QAAQ,GAAG,IAAI,CAACD,KAAK,CAACY,eAAe,CAAC,IAAI,CAACZ,KAAK,CAACW,IAAI,CAAC,IAAI,EAAE;MAClE,OACE;QAAK,EAAE,qBAAcf,SAAS,CAAC,IAAI,CAACI,KAAK,CAACW,IAAI,CAAC,CAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC/CV,QAAQ,CAACY,GAAG,CAAC,UAACd,OAAO;QAAA,OACpB;UAAK,SAAS,EAAC,SAAS;UAAC,GAAG,EAAEA,OAAO,CAAC,KAAK,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAC1CD,aAAa,CAACC,OAAO,CAAC,CACnB;MAAA,CACP,CAAC,CACE;IAEV;EAAC;EAAA;AAAA,EApBkCP,SAAS;AAuB9C,eAAeC,OAAO,CACpB,UAACqB,KAAK,EAAEd,KAAK;EAAA,OAAM;IACjBY,eAAe,EAAEE,KAAK,CAACb,QAAQ,CAACc;EAClC,CAAC;AAAA,CAAC,EACF;EACErB,WAAW,EAAXA;AACF,CAAC,CACF,CAACW,sBAAsB,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}