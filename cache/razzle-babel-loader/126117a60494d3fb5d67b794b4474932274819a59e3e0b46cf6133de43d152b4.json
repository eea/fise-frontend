{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/editor/plugins/Blockquote/index.js\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { BlockButton } from 'volto-slate/editor/ui';\nimport quoteIcon from '@plone/volto/icons/quote.svg';\n\n// TODO: this needs to use constants for el type\n\nexport const BlockquoteElement = ({\n  attributes,\n  children,\n  element\n}) => {\n  // the 'callout' class is defined in file 'blocks.less'\n  // TODO: move the style out of it into a `blockquote` tag name selector\n  return __jsx(\"blockquote\", _extends({}, attributes, {\n    className: \"callout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }), children);\n};\nexport default function install(config) {\n  const {\n    slate\n  } = config.settings;\n  slate.buttons['blockquote'] = props => __jsx(BlockButton, _extends({\n    format: \"blockquote\",\n    icon: quoteIcon,\n    title: \"Blockquote\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }));\n  slate.elements['blockquote'] = BlockquoteElement;\n  slate.toolbarButtons.push('blockquote');\n  slate.expandedToolbarButtons.push('blockquote');\n  return config;\n}","map":{"version":3,"names":["React","BlockButton","quoteIcon","BlockquoteElement","attributes","children","element","install","config","slate","settings","buttons","props","elements","toolbarButtons","push","expandedToolbarButtons"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/editor/plugins/Blockquote/index.js"],"sourcesContent":["import React from 'react';\nimport { BlockButton } from 'volto-slate/editor/ui';\nimport quoteIcon from '@plone/volto/icons/quote.svg';\n\n// TODO: this needs to use constants for el type\n\nexport const BlockquoteElement = ({ attributes, children, element }) => {\n  // the 'callout' class is defined in file 'blocks.less'\n  // TODO: move the style out of it into a `blockquote` tag name selector\n  return (\n    <blockquote {...attributes} className=\"callout\">\n      {children}\n    </blockquote>\n  );\n};\n\nexport default function install(config) {\n  const { slate } = config.settings;\n\n  slate.buttons['blockquote'] = (props) => (\n    <BlockButton\n      format=\"blockquote\"\n      icon={quoteIcon}\n      title=\"Blockquote\"\n      {...props}\n    />\n  );\n  slate.elements['blockquote'] = BlockquoteElement;\n\n  slate.toolbarButtons.push('blockquote');\n  slate.expandedToolbarButtons.push('blockquote');\n\n  return config;\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,uBAAuB;AACnD,OAAOC,SAAS,MAAM,8BAA8B;;AAEpD;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;EAAEC,UAAU;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EACtE;EACA;EACA,OACE,iCAAgBF,UAAU;IAAE,SAAS,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAC5CC,QAAQ,CACE;AAEjB,CAAC;AAED,eAAe,SAASE,OAAO,CAACC,MAAM,EAAE;EACtC,MAAM;IAAEC;EAAM,CAAC,GAAGD,MAAM,CAACE,QAAQ;EAEjCD,KAAK,CAACE,OAAO,CAAC,YAAY,CAAC,GAAIC,KAAK,IAClC,MAAC,WAAW;IACV,MAAM,EAAC,YAAY;IACnB,IAAI,EAAEV,SAAU;IAChB,KAAK,EAAC;EAAY,GACdU,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEZ;EACDH,KAAK,CAACI,QAAQ,CAAC,YAAY,CAAC,GAAGV,iBAAiB;EAEhDM,KAAK,CAACK,cAAc,CAACC,IAAI,CAAC,YAAY,CAAC;EACvCN,KAAK,CAACO,sBAAsB,CAACD,IAAI,CAAC,YAAY,CAAC;EAE/C,OAAOP,MAAM;AACf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}