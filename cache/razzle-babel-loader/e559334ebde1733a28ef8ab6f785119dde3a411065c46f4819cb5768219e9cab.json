{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { defineMessages } from 'react-intl'; // , defineMessages\nimport { makeInlineElementPlugin } from '@plone/volto-slate/elementEditor';\nimport { DataEntitySchema } from './schema';\nimport { withDataEntity } from './extensions';\nimport { DATAENTITY } from '../constants';\nimport { DataEntityElement } from './render';\nimport SchemaProvider from './SchemaProvider';\nimport collectionSVG from '@plone/volto/icons/collection.svg';\nimport './styles.less';\nvar messages = defineMessages({\n  edit: {\n    \"id\": \"Edit data entity\",\n    \"defaultMessage\": \"Edit data entity\"\n  },\n  \"delete\": {\n    \"id\": \"Remove data entity\",\n    \"defaultMessage\": \"Remove data entity\"\n  }\n});\nexport default function install(config) {\n  var opts = {\n    pluginId: DATAENTITY,\n    elementType: DATAENTITY,\n    element: DataEntityElement,\n    isInlineElement: true,\n    editSchema: DataEntitySchema,\n    schemaProvider: SchemaProvider,\n    extensions: [withDataEntity],\n    hasValue: function hasValue(data) {\n      return !!data.provider_url;\n    },\n    toolbarButtonIcon: collectionSVG,\n    title: 'Data entity',\n    messages: messages\n  };\n  var _makeInlineElementPlu = makeInlineElementPlugin(opts),\n    _makeInlineElementPlu2 = _slicedToArray(_makeInlineElementPlu, 1),\n    installDataEntityEditor = _makeInlineElementPlu2[0];\n  config = installDataEntityEditor(config);\n  var slate = config.settings.slate;\n  slate.toolbarButtons = [].concat(_toConsumableArray(slate.toolbarButtons || []), ['dataentity']);\n  slate.expandedToolbarButtons = [].concat(_toConsumableArray(slate.expandedToolbarButtons || []), ['dataentity']);\n  return config;\n}","map":{"version":3,"names":["defineMessages","makeInlineElementPlugin","DataEntitySchema","withDataEntity","DATAENTITY","DataEntityElement","SchemaProvider","collectionSVG","messages","edit","install","config","opts","pluginId","elementType","element","isInlineElement","editSchema","schemaProvider","extensions","hasValue","data","provider_url","toolbarButtonIcon","title","installDataEntityEditor","slate","settings","toolbarButtons","expandedToolbarButtons"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate-dataentity/src/DataEntity/index.js"],"sourcesContent":["import { defineMessages } from 'react-intl'; // , defineMessages\nimport { makeInlineElementPlugin } from '@plone/volto-slate/elementEditor';\nimport { DataEntitySchema } from './schema';\nimport { withDataEntity } from './extensions';\nimport { DATAENTITY } from '../constants';\nimport { DataEntityElement } from './render';\nimport SchemaProvider from './SchemaProvider';\nimport collectionSVG from '@plone/volto/icons/collection.svg';\n\nimport './styles.less';\n\nconst messages = defineMessages({\n  edit: {\n    id: 'Edit data entity',\n    defaultMessage: 'Edit data entity',\n  },\n  delete: {\n    id: 'Remove data entity',\n    defaultMessage: 'Remove data entity',\n  },\n});\n\nexport default function install(config) {\n  const opts = {\n    pluginId: DATAENTITY,\n    elementType: DATAENTITY,\n    element: DataEntityElement,\n    isInlineElement: true,\n    editSchema: DataEntitySchema,\n    schemaProvider: SchemaProvider,\n    extensions: [withDataEntity],\n    hasValue: (data) => !!data.provider_url,\n    toolbarButtonIcon: collectionSVG,\n    title: 'Data entity',\n    messages,\n  };\n  const [installDataEntityEditor] = makeInlineElementPlugin(opts);\n  config = installDataEntityEditor(config);\n\n  const { slate } = config.settings;\n\n  slate.toolbarButtons = [...(slate.toolbarButtons || []), 'dataentity'];\n  slate.expandedToolbarButtons = [\n    ...(slate.expandedToolbarButtons || []),\n    'dataentity',\n  ];\n\n  return config;\n}\n"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,YAAY,CAAC,CAAC;AAC7C,SAASC,uBAAuB,QAAQ,kCAAkC;AAC1E,SAASC,gBAAgB,QAAQ,UAAU;AAC3C,SAASC,cAAc,QAAQ,cAAc;AAC7C,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,iBAAiB,QAAQ,UAAU;AAC5C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,aAAa,MAAM,mCAAmC;AAE7D,OAAO,eAAe;AAEtB,IAAMC,QAAQ,GAAGR,cAAc,CAAC;EAC9BS,IAAI;IAAA;IAAA;EAAA,CAGH;EACD;IAAA;IAAA;EAAA;AAIF,CAAC,CAAC;AAEF,eAAe,SAASC,OAAO,CAACC,MAAM,EAAE;EACtC,IAAMC,IAAI,GAAG;IACXC,QAAQ,EAAET,UAAU;IACpBU,WAAW,EAAEV,UAAU;IACvBW,OAAO,EAAEV,iBAAiB;IAC1BW,eAAe,EAAE,IAAI;IACrBC,UAAU,EAAEf,gBAAgB;IAC5BgB,cAAc,EAAEZ,cAAc;IAC9Ba,UAAU,EAAE,CAAChB,cAAc,CAAC;IAC5BiB,QAAQ,EAAE,kBAACC,IAAI;MAAA,OAAK,CAAC,CAACA,IAAI,CAACC,YAAY;IAAA;IACvCC,iBAAiB,EAAEhB,aAAa;IAChCiB,KAAK,EAAE,aAAa;IACpBhB,QAAQ,EAARA;EACF,CAAC;EACD,4BAAkCP,uBAAuB,CAACW,IAAI,CAAC;IAAA;IAAxDa,uBAAuB;EAC9Bd,MAAM,GAAGc,uBAAuB,CAACd,MAAM,CAAC;EAExC,IAAQe,KAAK,GAAKf,MAAM,CAACgB,QAAQ,CAAzBD,KAAK;EAEbA,KAAK,CAACE,cAAc,gCAAQF,KAAK,CAACE,cAAc,IAAI,EAAE,IAAG,YAAY,EAAC;EACtEF,KAAK,CAACG,sBAAsB,gCACtBH,KAAK,CAACG,sBAAsB,IAAI,EAAE,IACtC,YAAY,EACb;EAED,OAAOlB,MAAM;AACf"},"metadata":{"react-intl":{"messages":[{"id":"Edit data entity","defaultMessage":"Edit data entity"},{"id":"Remove data entity","defaultMessage":"Remove data entity"}]}},"sourceType":"module","externalDependencies":[]}