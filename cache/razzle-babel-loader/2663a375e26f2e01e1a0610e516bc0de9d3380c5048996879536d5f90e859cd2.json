{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Rules/EditRule.jsx\";\nvar __jsx = React.createElement;\n/**\n * Edit content rule component.\n * @module components/manage/Controlpanels/Rules/EditRule\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getParentUrl, Helmet, getBaseUrl } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Checkbox, Container, Form, Grid, Segment } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { Icon, Toolbar, Field } from '@plone/volto/components';\nimport { getControlPanelRule, editRule, getContentRulesEvents } from '@plone/volto/actions';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\nvar messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  configRule: {\n    \"id\": \"Configure Content Rule\",\n    \"defaultMessage\": \"Configure Content Rule\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  edit: {\n    \"id\": \"Edit\",\n    \"defaultMessage\": \"Rule edited\"\n  }\n});\n\n/**\n * EditRule class.\n * @class EditRule\n * @extends Component\n */\nvar EditRule = /*#__PURE__*/function (_Component) {\n  _inherits(EditRule, _Component);\n  var _super = _createSuper(EditRule);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  function EditRule(props) {\n    var _this;\n    _classCallCheck(this, EditRule);\n    _this = _super.call(this, props);\n    _this.state = {\n      id: '',\n      isClient: false,\n      title: '',\n      description: '',\n      event: '',\n      cascading: false,\n      stop: false,\n      enabled: false,\n      invalidForm: true,\n      invalidTitle: false,\n      invalidEvent: false\n    };\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(EditRule, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props, _this$props$match, _this$props$match$par;\n      this.setState({\n        isClient: true\n      });\n      this.props.getControlPanelRule(getBaseUrl(this.props.pathname), (_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$match = _this$props.match) === null || _this$props$match === void 0 ? void 0 : (_this$props$match$par = _this$props$match.params) === null || _this$props$match$par === void 0 ? void 0 : _this$props$match$par.id);\n      this.props.getContentRulesEvents(getBaseUrl(this.props.pathname));\n    }\n\n    /**\n     * Component did mount\n     * @method componentDidUpdate\n     * @returns {undefined}\n     */\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.rule !== this.props.rule) {\n        var _ref = this.props.rule.item || {},\n          title = _ref.title,\n          description = _ref.description,\n          event = _ref.event,\n          cascading = _ref.cascading,\n          stop = _ref.stop,\n          enabled = _ref.enabled,\n          id = _ref.id;\n        this.setState({\n          id: id,\n          title: title,\n          description: description,\n          event: event,\n          cascading: cascading,\n          stop: stop,\n          enabled: enabled\n        });\n      }\n      if (prevState.title !== this.state.title || prevState.event !== this.state.event) {\n        if (this.state.title && this.state.event) {\n          this.setState({\n            invalidForm: false,\n            invalidTitle: false,\n            invalidEvent: false\n          });\n        } else {\n          if (!this.state.title) {\n            this.setState({\n              invalidForm: true,\n              invalidTitle: true\n            });\n          }\n          if (!this.state.event) {\n            this.setState({\n              invalidForm: true,\n              invalidEvent: true\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Component will receive props\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Next properties\n     * @returns {undefined}\n     */\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.rule.edit.loading && nextProps.rule.edit.loaded) {\n        var _this$props2, _this$props2$match, _this$props2$match$pa;\n        toast.success(__jsx(Toast, {\n          success: true,\n          title: this.props.intl.formatMessage(messages.success),\n          content: this.props.intl.formatMessage(messages.edit),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 9\n          }\n        }));\n        this.props.getControlPanelRule(getBaseUrl(this.props.pathname), (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : (_this$props2$match = _this$props2.match) === null || _this$props2$match === void 0 ? void 0 : (_this$props2$match$pa = _this$props2$match.params) === null || _this$props2$match$pa === void 0 ? void 0 : _this$props2$match$pa.id);\n      }\n    }\n\n    /**\n     * Back/Cancel handler\n     * @method onCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.props.history.push(getParentUrl(getParentUrl(this.props.pathname)));\n    }\n\n    /**\n     * Update rule handler\n     * @method handleUpdate\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate() {\n      var _this$state = this.state,\n        id = _this$state.id,\n        title = _this$state.title,\n        description = _this$state.description,\n        event = _this$state.event,\n        cascading = _this$state.cascading,\n        stop = _this$state.stop,\n        enabled = _this$state.enabled,\n        invalidForm = _this$state.invalidForm;\n      var data = {\n        title: title,\n        description: description,\n        event: event,\n        cascading: cascading,\n        enabled: enabled,\n        stop: stop\n      };\n      if (!invalidForm) {\n        this.props.editRule(getBaseUrl(this.props.pathname), data, id);\n      }\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$events,\n        _this$props$events2,\n        _this$props$events3,\n        _this2 = this;\n      var _this$state2 = this.state,\n        title = _this$state2.title,\n        description = _this$state2.description,\n        event = _this$state2.event,\n        cascading = _this$state2.cascading,\n        stop = _this$state2.stop,\n        enabled = _this$state2.enabled;\n      var triggeringEvents = (_this$props$events = this.props.events) !== null && _this$props$events !== void 0 && _this$props$events.items && ((_this$props$events2 = this.props.events) === null || _this$props$events2 === void 0 ? void 0 : _this$props$events2.items.length) > 0 ? (_this$props$events3 = this.props.events) === null || _this$props$events3 === void 0 ? void 0 : _this$props$events3.items.map(function (event) {\n        return [event.title, event.token];\n      }) : '';\n      return __jsx(\"div\", {\n        id: \"page-rule-edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 7\n        }\n      }, __jsx(Helmet, {\n        title: this.props.intl.formatMessage(messages.configRule),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      }), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }\n      }, __jsx(\"article\", {\n        id: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }\n      }, __jsx(Segment.Group, {\n        raised: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      }, __jsx(Segment, {\n        className: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Edit Rule\",\n        defaultMessage: \"Edit Rule\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }\n      })), __jsx(Segment, {\n        className: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Use the form below to define the new content rule\",\n        defaultMessage: \"Use the form below to define the new content rule\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      })), __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }\n      }, __jsx(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      }, __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 19\n        }\n      }, __jsx(Grid.Row, {\n        stretched: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }\n      }, __jsx(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 23\n        }\n      }, __jsx(Field, {\n        title: 'Title',\n        description: \"Please set a descriptive title for the rule.\",\n        value: title,\n        required: true,\n        onChange: function onChange(e, t) {\n          return _this2.setState({\n            title: t\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }\n      }))), __jsx(Grid.Row, {\n        stretched: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }\n      }, __jsx(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 23\n        }\n      }, __jsx(Field, {\n        title: 'Description',\n        description: \"Enter a short description of the rule and its purpose.\",\n        value: description,\n        onChange: function onChange(e, d) {\n          return _this2.setState({\n            description: d\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }\n      }))), __jsx(Grid.Row, {\n        stretched: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }\n      }, __jsx(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 23\n        }\n      }, __jsx(Field, {\n        required: true,\n        title: 'Triggering event',\n        description: \"The rule will execute when the following event occurs.\",\n        choices: triggeringEvents,\n        value: event,\n        onChange: function onChange(e, v) {\n          return _this2.setState({\n            event: v\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }\n      })))))), __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }\n      }, __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }\n      }, __jsx(Checkbox, {\n        onChange: function onChange(e, _ref2) {\n          var checked = _ref2.checked;\n          return _this2.setState({\n            enabled: checked\n          });\n        },\n        label: 'Enabled',\n        checked: enabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 19\n        }\n      }), __jsx(\"p\", {\n        style: {\n          color: '#878f93',\n          paddingTop: '0.7rem',\n          paddingBottom: '0.7rem',\n          fontSize: '0.9rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Whether or not the rule is currently enabled\",\n        defaultMessage: \"Whether or not the rule is currently enabled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }\n      })))), __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }\n      }, __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }\n      }, __jsx(Checkbox, {\n        onChange: function onChange(e, _ref3) {\n          var checked = _ref3.checked;\n          return _this2.setState({\n            stop: checked\n          });\n        },\n        label: 'Stop Executing rules',\n        checked: stop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 19\n        }\n      }), __jsx(\"p\", {\n        style: {\n          color: '#878f93',\n          paddingTop: '0.7rem',\n          paddingBottom: '0.7rem',\n          fontSize: '0.9rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Whether or not execution of further rules should stop after this rule is executed\",\n        defaultMessage: \"Whether or not execution of further rules should stop after this rule is executed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }\n      })))), __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }\n      }, __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }\n      }, __jsx(Checkbox, {\n        onChange: function onChange(e, _ref4) {\n          var checked = _ref4.checked;\n          return _this2.setState({\n            cascading: checked\n          });\n        },\n        label: 'Cascading rule',\n        checked: cascading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 19\n        }\n      }), __jsx(\"p\", {\n        style: {\n          color: '#878f93',\n          paddingTop: '0.7rem',\n          paddingBottom: '0.7rem',\n          fontSize: '0.9rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\",\n        defaultMessage: \"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }\n      })))), __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 15\n        }\n      }, __jsx(Button, {\n        onClick: function onClick() {\n          return _this2.handleUpdate();\n        },\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 17\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Save\",\n        defaultMessage: \"Save\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 19\n        }\n      })), __jsx(Button, {\n        onClick: function onClick() {\n          return _this2.onCancel();\n        },\n        secondary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 17\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Cancel\",\n        defaultMessage: \"Cancel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 19\n        }\n      }))), __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 15\n        }\n      }, this.state.invalidTitle && __jsx(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Title field error. Value not provided or already existing.\",\n        defaultMessage: \"Title field error. Value not provided or already existing.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }\n      })), this.state.invalidEvent && __jsx(\"p\", {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Triggering event field error. Please select a value\",\n        defaultMessage: \"Triggering event field error. Please select a value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }\n      })))))), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(Link, {\n          className: \"item\",\n          to: \"#\",\n          onClick: function onClick() {\n            return _this2.onCancel();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }\n        }, __jsx(Icon, {\n          name: backSVG,\n          className: \"contents circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.back),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 19\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return EditRule;\n}(Component);\n_defineProperty(EditRule, \"propTypes\", {\n  getContentRulesEvents: PropTypes.func.isRequired,\n  editRule: PropTypes.func.isRequired,\n  getControlPanelRule: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect(function (state, props) {\n  return {\n    events: state.contentrulesevents,\n    rule: state.controlpanelrule,\n    pathname: props.location.pathname\n  };\n}, {\n  getControlPanelRule: getControlPanelRule,\n  getContentRulesEvents: getContentRulesEvents,\n  editRule: editRule\n}))(EditRule);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","getParentUrl","Helmet","getBaseUrl","Portal","Button","Checkbox","Container","Form","Grid","Segment","FormattedMessage","defineMessages","injectIntl","Icon","Toolbar","Field","getControlPanelRule","editRule","getContentRulesEvents","toast","Toast","backSVG","messages","back","configRule","success","edit","EditRule","props","state","id","isClient","title","description","event","cascading","stop","enabled","invalidForm","invalidTitle","invalidEvent","setState","pathname","match","params","prevProps","prevState","rule","item","nextProps","loading","loaded","intl","formatMessage","history","push","data","triggeringEvents","events","items","length","map","token","e","t","d","v","display","flexDirection","checked","color","paddingTop","paddingBottom","fontSize","handleUpdate","onCancel","document","getElementById","func","isRequired","contentrulesevents","controlpanelrule","location"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Rules/EditRule.jsx"],"sourcesContent":["/**\n * Edit content rule component.\n * @module components/manage/Controlpanels/Rules/EditRule\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getParentUrl, Helmet, getBaseUrl } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Form,\n  Grid,\n  Segment,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { Icon, Toolbar, Field } from '@plone/volto/components';\nimport {\n  getControlPanelRule,\n  editRule,\n  getContentRulesEvents,\n} from '@plone/volto/actions';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  configRule: {\n    id: 'Configure Content Rule',\n    defaultMessage: 'Configure Content Rule',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  edit: {\n    id: 'Edit',\n    defaultMessage: 'Rule edited',\n  },\n});\n\n/**\n * EditRule class.\n * @class EditRule\n * @extends Component\n */\nclass EditRule extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getContentRulesEvents: PropTypes.func.isRequired,\n    editRule: PropTypes.func.isRequired,\n    getControlPanelRule: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      isClient: false,\n      title: '',\n      description: '',\n      event: '',\n      cascading: false,\n      stop: false,\n      enabled: false,\n      invalidForm: true,\n      invalidTitle: false,\n      invalidEvent: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({ isClient: true });\n    this.props.getControlPanelRule(\n      getBaseUrl(this.props.pathname),\n      this.props?.match?.params?.id,\n    );\n    this.props.getContentRulesEvents(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.rule !== this.props.rule) {\n      const { title, description, event, cascading, stop, enabled, id } =\n        this.props.rule.item || {};\n      this.setState({\n        id,\n        title,\n        description,\n        event,\n        cascading,\n        stop,\n        enabled,\n      });\n    }\n\n    if (\n      prevState.title !== this.state.title ||\n      prevState.event !== this.state.event\n    ) {\n      if (this.state.title && this.state.event) {\n        this.setState({\n          invalidForm: false,\n          invalidTitle: false,\n          invalidEvent: false,\n        });\n      } else {\n        if (!this.state.title) {\n          this.setState({ invalidForm: true, invalidTitle: true });\n        }\n        if (!this.state.event) {\n          this.setState({ invalidForm: true, invalidEvent: true });\n        }\n      }\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.rule.edit.loading && nextProps.rule.edit.loaded) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.edit)}\n        />,\n      );\n      this.props.getControlPanelRule(\n        getBaseUrl(this.props.pathname),\n        this.props?.match?.params?.id,\n      );\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(getParentUrl(this.props.pathname)));\n  }\n\n  /**\n   * Update rule handler\n   * @method handleUpdate\n   * @returns {undefined}\n   */\n  handleUpdate() {\n    const {\n      id,\n      title,\n      description,\n      event,\n      cascading,\n      stop,\n      enabled,\n      invalidForm,\n    } = this.state;\n    const data = { title, description, event, cascading, enabled, stop };\n\n    if (!invalidForm) {\n      this.props.editRule(getBaseUrl(this.props.pathname), data, id);\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { title, description, event, cascading, stop, enabled } = this.state;\n\n    const triggeringEvents =\n      this.props.events?.items && this.props.events?.items.length > 0\n        ? this.props.events?.items.map((event) => [event.title, event.token])\n        : '';\n\n    return (\n      <div id=\"page-rule-edit\">\n        <Helmet title={this.props.intl.formatMessage(messages.configRule)} />\n        <Container>\n          <article id=\"content\">\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage id=\"Edit Rule\" defaultMessage=\"Edit Rule\" />\n              </Segment>\n              <Segment className=\"secondary\">\n                <FormattedMessage\n                  id=\"Use the form below to define the new content rule\"\n                  defaultMessage=\"Use the form below to define the new content rule\"\n                />\n              </Segment>\n              <Segment>\n                <Form>\n                  <Grid>\n                    <Grid.Row stretched>\n                      <Grid.Column>\n                        <Field\n                          title={'Title'}\n                          description=\"Please set a descriptive title for the rule.\"\n                          value={title}\n                          required\n                          onChange={(e, t) => this.setState({ title: t })}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row stretched>\n                      <Grid.Column>\n                        <Field\n                          title={'Description'}\n                          description=\"Enter a short description of the rule and its purpose.\"\n                          value={description}\n                          onChange={(e, d) => this.setState({ description: d })}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row stretched>\n                      <Grid.Column>\n                        <Field\n                          required\n                          title={'Triggering event'}\n                          description=\"The rule will execute when the following event occurs.\"\n                          choices={triggeringEvents}\n                          value={event}\n                          onChange={(e, v) => this.setState({ event: v })}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form>\n              </Segment>\n              <Segment>\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <Checkbox\n                    onChange={(e, { checked }) =>\n                      this.setState({ enabled: checked })\n                    }\n                    label={'Enabled'}\n                    checked={enabled}\n                  />\n                  <p\n                    style={{\n                      color: '#878f93',\n                      paddingTop: '0.7rem',\n                      paddingBottom: '0.7rem',\n                      fontSize: '0.9rem',\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"Whether or not the rule is currently enabled\"\n                      defaultMessage=\"Whether or not the rule is currently enabled\"\n                    />\n                  </p>\n                </div>\n              </Segment>\n              <Segment>\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <Checkbox\n                    onChange={(e, { checked }) =>\n                      this.setState({ stop: checked })\n                    }\n                    label={'Stop Executing rules'}\n                    checked={stop}\n                  />\n                  <p\n                    style={{\n                      color: '#878f93',\n                      paddingTop: '0.7rem',\n                      paddingBottom: '0.7rem',\n                      fontSize: '0.9rem',\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"Whether or not execution of further rules should stop after this rule is executed\"\n                      defaultMessage=\"Whether or not execution of further rules should stop after this rule is executed\"\n                    />\n                  </p>\n                </div>\n              </Segment>\n              <Segment>\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <Checkbox\n                    onChange={(e, { checked }) =>\n                      this.setState({ cascading: checked })\n                    }\n                    label={'Cascading rule'}\n                    checked={cascading}\n                  />\n                  <p\n                    style={{\n                      color: '#878f93',\n                      paddingTop: '0.7rem',\n                      paddingBottom: '0.7rem',\n                      fontSize: '0.9rem',\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\"\n                      defaultMessage=\"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\"\n                    />\n                  </p>\n                </div>\n              </Segment>\n              <Segment>\n                <Button onClick={() => this.handleUpdate()} primary>\n                  <FormattedMessage id=\"Save\" defaultMessage=\"Save\" />\n                </Button>\n                <Button onClick={() => this.onCancel()} secondary>\n                  <FormattedMessage id=\"Cancel\" defaultMessage=\"Cancel\" />\n                </Button>\n              </Segment>\n              <Segment>\n                {this.state.invalidTitle && (\n                  <p style={{ color: 'red' }}>\n                    <FormattedMessage\n                      id=\"Title field error. Value not provided or already existing.\"\n                      defaultMessage=\"Title field error. Value not provided or already existing.\"\n                    />\n                  </p>\n                )}\n                {this.state.invalidEvent && (\n                  <p style={{ color: 'red' }}>\n                    <FormattedMessage\n                      id=\"Triggering event field error. Please select a value\"\n                      defaultMessage=\"Triggering event field error. Please select a value\"\n                    />\n                  </p>\n                )}\n              </Segment>\n            </Segment.Group>\n          </article>\n        </Container>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link className=\"item\" to=\"#\" onClick={() => this.onCancel()}>\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      events: state.contentrulesevents,\n      rule: state.controlpanelrule,\n      pathname: props.location.pathname,\n    }),\n    { getControlPanelRule, getContentRulesEvents, editRule },\n  ),\n)(EditRule);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"Configure Content Rule","defaultMessage":"Configure Content Rule"},{"id":"Success","defaultMessage":"Success"},{"id":"Edit","defaultMessage":"Rule edited"},{"id":"Edit Rule","defaultMessage":"Edit Rule"},{"id":"Use the form below to define the new content rule","defaultMessage":"Use the form below to define the new content rule"},{"id":"Whether or not the rule is currently enabled","defaultMessage":"Whether or not the rule is currently enabled"},{"id":"Whether or not execution of further rules should stop after this rule is executed","defaultMessage":"Whether or not execution of further rules should stop after this rule is executed"},{"id":"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops","defaultMessage":"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Title field error. Value not provided or already existing.","defaultMessage":"Title field error. Value not provided or already existing."},{"id":"Triggering event field error. Please select a value","defaultMessage":"Triggering event field error. Please select a value"}]}},"sourceType":"module","externalDependencies":[]}