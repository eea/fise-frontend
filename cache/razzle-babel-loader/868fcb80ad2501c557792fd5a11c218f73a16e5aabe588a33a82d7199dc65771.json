{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { GET_BLOCKDATA } from '../constants';\nexport default function blockdata() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var result = action.result;\n  switch (action.type) {\n    case \"\".concat(GET_BLOCKDATA, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, action.blockid, _objectSpread(_objectSpread({}, state[action.blockid]), {}, {\n        data: null,\n        error: null,\n        loaded: false,\n        loading: true\n      })));\n    case \"\".concat(GET_BLOCKDATA, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, action.blockid, _objectSpread(_objectSpread({}, state[action.blockid]), {}, {\n        data: null,\n        error: action.error,\n        loaded: false,\n        loading: true\n      })));\n    case \"\".concat(GET_BLOCKDATA, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, action.blockid, _objectSpread(_objectSpread({}, state[action.blockid]), {}, {\n        data: result['data'],\n        error: null,\n        loaded: true,\n        loading: false\n      })));\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_BLOCKDATA","blockdata","state","action","result","type","blockid","data","error","loaded","loading"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/reducers/blockdata.js"],"sourcesContent":["import { GET_BLOCKDATA } from '../constants';\n\nexport default function blockdata(state = {}, action = {}) {\n  let { result } = action;\n  switch (action.type) {\n    case `${GET_BLOCKDATA}_PENDING`:\n      return {\n        ...state,\n        [action.blockid]: {\n          ...state[action.blockid],\n          data: null,\n          error: null,\n          loaded: false,\n          loading: true,\n        },\n      };\n    case `${GET_BLOCKDATA}_FAIL`:\n      return {\n        ...state,\n        [action.blockid]: {\n          ...state[action.blockid],\n          data: null,\n          error: action.error,\n          loaded: false,\n          loading: true,\n        },\n      };\n    case `${GET_BLOCKDATA}_SUCCESS`:\n      return {\n        ...state,\n        [action.blockid]: {\n          ...state[action.blockid],\n          data: result['data'],\n          error: null,\n          loaded: true,\n          loading: false,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,cAAc;AAE5C,eAAe,SAASC,SAAS,GAA0B;EAAA,IAAzBC,KAAK,uEAAG,CAAC,CAAC;EAAA,IAAEC,MAAM,uEAAG,CAAC,CAAC;EACvD,IAAMC,MAAM,GAAKD,MAAM,CAAjBC,MAAM;EACZ,QAAQD,MAAM,CAACE,IAAI;IACjB,eAAQL,aAAa;MACnB,uCACKE,KAAK,2BACPC,MAAM,CAACG,OAAO,kCACVJ,KAAK,CAACC,MAAM,CAACG,OAAO,CAAC;QACxBC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,IAAI;QACXC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAGnB,eAAQV,aAAa;MACnB,uCACKE,KAAK,2BACPC,MAAM,CAACG,OAAO,kCACVJ,KAAK,CAACC,MAAM,CAACG,OAAO,CAAC;QACxBC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAEL,MAAM,CAACK,KAAK;QACnBC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAGnB,eAAQV,aAAa;MACnB,uCACKE,KAAK,2BACPC,MAAM,CAACG,OAAO,kCACVJ,KAAK,CAACC,MAAM,CAACG,OAAO,CAAC;QACxBC,IAAI,EAAEH,MAAM,CAAC,MAAM,CAAC;QACpBI,KAAK,EAAE,IAAI;QACXC,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MAAK;IAGpB;MACE,OAAOR,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}