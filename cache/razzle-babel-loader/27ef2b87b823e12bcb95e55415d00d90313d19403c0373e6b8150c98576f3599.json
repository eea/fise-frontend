{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _isArray from \"lodash/isArray\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/blocks/Item/Edit.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport config from '@plone/volto/registry';\nimport { BlockDataForm, SidebarPortal } from '@plone/volto/components';\nimport SlateEditor from '@plone/volto-slate/editor/SlateEditor';\nimport { handleKey } from '@plone/volto-slate/blocks/Text/keyboard';\nimport { uploadContent, saveSlateBlockSelection } from '@plone/volto-slate/actions';\nimport Item from './Item';\nimport getSchema from './schema';\nexport var createSlateParagraph = function createSlateParagraph(text) {\n  return _isArray(text) ? text : config.settings.slate.defaultValue();\n};\nvar Edit = function Edit(props) {\n  _s();\n  var slate = config.settings.slate;\n  var _props$data = props.data,\n    data = _props$data === void 0 ? {} : _props$data,\n    _props$block = props.block,\n    block = _props$block === void 0 ? null : _props$block,\n    _props$selected = props.selected,\n    selected = _props$selected === void 0 ? false : _props$selected,\n    index = props.index,\n    properties = props.properties,\n    onChangeBlock = props.onChangeBlock,\n    onSelectBlock = props.onSelectBlock;\n  var description = data.description;\n  var schema = React.useMemo(function () {\n    return getSchema(props);\n  }, [props]);\n  var withBlockProperties = React.useCallback(function (editor) {\n    editor.getBlockProps = function () {\n      return props;\n    };\n    return editor;\n  }, [props]);\n  var handleFocus = React.useCallback(function () {\n    if (!selected) {\n      onSelectBlock(block);\n    }\n  }, [onSelectBlock, selected, block]);\n  return __jsx(React.Fragment, null, __jsx(Item, _extends({}, data, {\n    mode: \"edit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), __jsx(SlateEditor, {\n    index: index,\n    properties: properties,\n    extensions: slate.textblockExtensions,\n    renderExtensions: [withBlockProperties],\n    value: createSlateParagraph(description),\n    onChange: function onChange(description) {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        description: description\n      }));\n    },\n    block: block,\n    onFocus: handleFocus,\n    onKeyDown: handleKey,\n    selected: selected,\n    placeholder: \"Add item description...\",\n    slateSettings: slate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), __jsx(SidebarPortal, {\n    selected: selected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(BlockDataForm, {\n    block: block,\n    schema: schema,\n    title: schema.title,\n    onChangeField: function onChangeField(id, value) {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, _defineProperty({}, id, value)));\n    },\n    formData: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })));\n};\n_s(Edit, \"KUNh+n914xw+Wi2B9u0abjyFxAE=\");\n_c = Edit;\nexport default connect(function (state, props) {\n  var _state$slate_block_se, _state$upload_content, _state$upload_content2, _state$upload_content3, _state$upload_content4;\n  var blockId = props.block;\n  return {\n    defaultSelection: blockId ? (_state$slate_block_se = state.slate_block_selections) === null || _state$slate_block_se === void 0 ? void 0 : _state$slate_block_se[blockId] : null,\n    uploadRequest: ((_state$upload_content = state.upload_content) === null || _state$upload_content === void 0 ? void 0 : (_state$upload_content2 = _state$upload_content[props.block]) === null || _state$upload_content2 === void 0 ? void 0 : _state$upload_content2.upload) || {},\n    uploadedContent: ((_state$upload_content3 = state.upload_content) === null || _state$upload_content3 === void 0 ? void 0 : (_state$upload_content4 = _state$upload_content3[props.block]) === null || _state$upload_content4 === void 0 ? void 0 : _state$upload_content4.data) || {}\n  };\n}, {\n  uploadContent: uploadContent,\n  saveSlateBlockSelection: saveSlateBlockSelection // needed as editor blockProps\n})(Edit);\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","connect","config","BlockDataForm","SidebarPortal","SlateEditor","handleKey","uploadContent","saveSlateBlockSelection","Item","getSchema","createSlateParagraph","text","settings","slate","defaultValue","Edit","props","data","block","selected","index","properties","onChangeBlock","onSelectBlock","description","schema","useMemo","withBlockProperties","useCallback","editor","getBlockProps","handleFocus","textblockExtensions","title","id","value","state","blockId","defaultSelection","slate_block_selections","uploadRequest","upload_content","upload","uploadedContent"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/blocks/Item/Edit.jsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { isArray } from 'lodash';\nimport config from '@plone/volto/registry';\nimport { BlockDataForm, SidebarPortal } from '@plone/volto/components';\nimport SlateEditor from '@plone/volto-slate/editor/SlateEditor';\nimport { handleKey } from '@plone/volto-slate/blocks/Text/keyboard';\nimport {\n  uploadContent,\n  saveSlateBlockSelection,\n} from '@plone/volto-slate/actions';\n\nimport Item from './Item';\nimport getSchema from './schema';\n\nexport const createSlateParagraph = (text) => {\n  return isArray(text) ? text : config.settings.slate.defaultValue();\n};\n\nconst Edit = (props) => {\n  const { slate } = config.settings;\n  const {\n    data = {},\n    block = null,\n    selected = false,\n    index,\n    properties,\n    onChangeBlock,\n    onSelectBlock,\n  } = props;\n  const { description } = data;\n  const schema = React.useMemo(() => getSchema(props), [props]);\n\n  const withBlockProperties = React.useCallback(\n    (editor) => {\n      editor.getBlockProps = () => props;\n      return editor;\n    },\n    [props],\n  );\n\n  const handleFocus = React.useCallback(() => {\n    if (!selected) {\n      onSelectBlock(block);\n    }\n  }, [onSelectBlock, selected, block]);\n\n  return (\n    <>\n      <Item {...data} mode=\"edit\">\n        <SlateEditor\n          index={index}\n          properties={properties}\n          extensions={slate.textblockExtensions}\n          renderExtensions={[withBlockProperties]}\n          value={createSlateParagraph(description)}\n          onChange={(description) => {\n            onChangeBlock(block, {\n              ...data,\n              description,\n            });\n          }}\n          block={block}\n          onFocus={handleFocus}\n          onKeyDown={handleKey}\n          selected={selected}\n          placeholder=\"Add item description...\"\n          slateSettings={slate}\n        />\n      </Item>\n      <SidebarPortal selected={selected}>\n        <BlockDataForm\n          block={block}\n          schema={schema}\n          title={schema.title}\n          onChangeField={(id, value) => {\n            onChangeBlock(block, {\n              ...data,\n              [id]: value,\n            });\n          }}\n          formData={data}\n        />\n      </SidebarPortal>\n    </>\n  );\n};\n\nexport default connect(\n  (state, props) => {\n    const blockId = props.block;\n    return {\n      defaultSelection: blockId\n        ? state.slate_block_selections?.[blockId]\n        : null,\n      uploadRequest: state.upload_content?.[props.block]?.upload || {},\n      uploadedContent: state.upload_content?.[props.block]?.data || {},\n    };\n  },\n  {\n    uploadContent,\n    saveSlateBlockSelection, // needed as editor blockProps\n  },\n)(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}