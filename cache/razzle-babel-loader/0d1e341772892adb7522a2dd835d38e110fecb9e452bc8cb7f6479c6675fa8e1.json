{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Rules/components/VariableModal.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { getVocabulary } from '@plone/volto/actions';\nimport { injectIntl } from 'react-intl';\nimport { compose } from 'redux';\nimport { ModalForm } from '@plone/volto/components';\nvar setSchema = function setSchema(name) {\n  var choices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  switch (name) {\n    //conditions\n    case 'Content type':\n      return {\n        fieldsets: [{\n          id: 'default',\n          title: 'default',\n          fields: ['check_types']\n        }],\n        properties: {\n          check_types: {\n            title: 'Content Types',\n            isMulti: true,\n            \"default\": choices && choices.length > 0 ? choices[0] : '',\n            choices: choices\n          }\n        },\n        required: ['check_types']\n      };\n    case 'File Extension':\n      return {\n        fieldsets: [{\n          id: 'default',\n          title: 'default',\n          fields: ['file_extension']\n        }],\n        properties: {\n          file_extension: {\n            title: 'File Extension',\n            type: 'string'\n          }\n        },\n        required: ['file_extension']\n      };\n    case 'Workflow state':\n      return {\n        fieldsets: [{\n          id: 'default',\n          title: 'default',\n          fields: ['wf_states']\n        }],\n        properties: {\n          wf_states: {\n            title: 'Workflow State',\n            isMulti: true,\n            \"default\": choices && choices.length > 0 ? choices[0] : '',\n            choices: choices\n          }\n        },\n        required: ['wf_states']\n      };\n    case \"User's group\":\n      return {\n        fieldsets: [{\n          id: 'default',\n          title: 'default',\n          fields: ['group_names']\n        }],\n        properties: {\n          group_names: {\n            title: 'Groups',\n            isMulti: true,\n            \"default\": choices && choices.length > 0 ? choices[0] : '',\n            choices: choices\n          }\n        },\n        required: ['group_names']\n      };\n    case \"User's role\":\n      return {\n        fieldsets: [{\n          id: 'default',\n          title: 'default',\n          fields: ['role_names']\n        }],\n        properties: {\n          role_names: {\n            title: 'Roles',\n            isMulti: true,\n            \"default\": choices && choices.length > 0 ? choices[0] : '',\n            choices: choices\n          }\n        },\n        required: ['role_names']\n      };\n    case 'TALES expression':\n      return {\n        fieldsets: [{\n          id: 'default',\n          title: 'default',\n          fields: ['tales_expression']\n        }],\n        properties: {\n          tales_expression: {\n            title: 'File Extension',\n            type: 'string'\n          }\n        },\n        required: ['tales_expression']\n      };\n    // actions\n    case 'Logger':\n      return {\n        title: 'Logger',\n        fieldsets: [{\n          id: 'default',\n          title: 'Logger Action',\n          fields: ['targetLogger', 'Level', 'message']\n        }],\n        properties: {\n          targetLogger: {\n            title: 'Logger name',\n            type: 'string'\n          },\n          Level: {\n            title: 'Logging level',\n            type: 'string'\n          },\n          message: {\n            title: 'Message',\n            type: 'string'\n          }\n        },\n        required: ['targetLogger', 'Level', 'message']\n      };\n    case 'Notify user':\n      return {\n        title: 'Notify user',\n        fieldsets: [{\n          id: 'default',\n          title: 'Message',\n          fields: ['message', 'message_type']\n        }],\n        properties: {\n          message: {\n            title: 'Message',\n            type: 'string'\n          },\n          message_type: {\n            title: 'Message Type',\n            \"default\": ['info', 'info'],\n            choices: [['info', 'info'], ['warning', 'warning'], ['error', 'error']]\n          }\n        },\n        required: ['message', 'message_type']\n      };\n    case 'Copy to folder':\n      return {\n        title: 'Target folder: ',\n        fieldsets: [{\n          id: 'default',\n          title: 'Target folder: ',\n          fields: ['target_folder']\n        }],\n        properties: {\n          target_folder: {\n            title: 'Target folder: ',\n            widget: 'internal_url'\n          }\n        },\n        required: ['target_folder']\n      };\n    case 'Move to folder':\n      return {\n        title: 'Target folder: ',\n        fieldsets: [{\n          id: 'default',\n          title: 'Target folder: ',\n          fields: ['target_folder']\n        }],\n        properties: {\n          target_folder: {\n            title: 'Target folder: ',\n            widget: 'internal_url'\n          }\n        },\n        required: ['target_folder']\n      };\n    case 'Delete object':\n      return {\n        title: 'Delete',\n        fieldsets: [{\n          id: 'default',\n          title: 'Target folder: ',\n          fields: []\n        }],\n        properties: {},\n        required: []\n      };\n    case 'Transition workflow state':\n      return {\n        fieldsets: [{\n          id: 'default',\n          title: 'Transition workflow state',\n          fields: ['transition']\n        }],\n        properties: {\n          transition: {\n            title: 'Transition workflow state',\n            isMulti: true,\n            \"default\": choices && choices.length > 0 ? choices[0] : '',\n            choices: choices\n          }\n        },\n        required: ['transition']\n      };\n    case 'Send email':\n      return {\n        title: 'Send mail',\n        fieldsets: [{\n          id: 'default',\n          title: 'Send mail',\n          fields: ['subject', 'source', 'recipients', 'exclude_actor', 'message']\n        }],\n        properties: {\n          message: {\n            title: 'Message',\n            widget: 'textarea'\n          },\n          subject: {\n            title: 'Subject',\n            type: 'string'\n          },\n          source: {\n            title: 'Email source',\n            type: 'string'\n          },\n          recipients: {\n            title: 'Email Recipients',\n            type: 'string'\n          },\n          exclude_actor: {\n            title: 'Exclude actor from recipients',\n            description: 'Do not send the email to the user that did the action.',\n            type: 'boolean'\n          }\n        },\n        required: ['subject', 'recipients', 'message']\n      };\n    case 'Version object':\n      return {\n        title: 'Send mail',\n        fieldsets: [{\n          id: 'default',\n          title: 'Send mail',\n          fields: ['comment']\n        }],\n        properties: {\n          comment: {\n            title: 'Comment',\n            type: 'string'\n          }\n        },\n        required: ['comment']\n      };\n    case 'IMSv4: Retract and rename old Indicator':\n      return {\n        title: 'Delete',\n        fieldsets: [{\n          id: 'default',\n          title: 'Target folder: ',\n          fields: []\n        }],\n        properties: {},\n        required: []\n      };\n    default:\n      return '';\n  }\n};\nvar detectVocabulary = function detectVocabulary(type) {\n  switch (type) {\n    case 'Content type':\n      return 'plone.app.vocabularies.ReallyUserFriendlyTypes';\n    case 'Workflow state':\n      return 'plone.app.vocabularies.WorkflowStates';\n    case \"User's group\":\n      return 'plone.app.vocabularies.Groups';\n    case \"User's role\":\n      return 'plone.app.vocabularies.Roles';\n    case 'Transition workflow state':\n      return 'plone.app.vocabularies.WorkflowTransitions';\n    default:\n      return '';\n  }\n};\nvar VariableModal = function VariableModal(_ref) {\n  _s();\n  var open = _ref.open,\n    type = _ref.type,\n    onClose = _ref.onClose,\n    onOpen = _ref.onOpen,\n    onSave = _ref.onSave,\n    value = _ref.value,\n    vocabularies = _ref.vocabularies,\n    getVocabulary = _ref.getVocabulary,\n    action = _ref.action,\n    formData = _ref.formData;\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    vocabularyName = _React$useState2[0],\n    setVocabularyName = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    inputSchema = _React$useState4[0],\n    setInputSchema = _React$useState4[1];\n  var _ref2 = value || {},\n    _ref2$addview = _ref2.addview,\n    addview = _ref2$addview === void 0 ? '' : _ref2$addview;\n  React.useEffect(function () {\n    if (value !== null && value !== void 0 && value.title) {\n      var detectedVocab = detectVocabulary(value.title);\n      if (detectedVocab) {\n        setVocabularyName(detectedVocab);\n        getVocabulary({\n          vocabNameOrURL: detectedVocab\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value, open, formData]);\n  React.useEffect(function () {\n    //reset input schema to rehydrate options\n    setInputSchema('');\n    var vocabularyOptions = vocabularyName && vocabularies && vocabularies[vocabularyName] && vocabularies[vocabularyName].items ? vocabularies[vocabularyName].items.map(function (item, i) {\n      return [item.value, item.label];\n    }) : [];\n    //set schema with the new options from vocabulary\n    setInputSchema(setSchema(value.title, vocabularyOptions));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [vocabularies, open, formData, value]);\n  var handleSave = function handleSave(v) {\n    if (action === 'add') {\n      onSave(_objectSpread(_objectSpread({}, v), {}, {\n        type: addview\n      }));\n    }\n    if (action === 'edit') {\n      onSave(v);\n    }\n    setInputSchema('');\n    onClose();\n  };\n  var handleClose = function handleClose() {\n    setInputSchema('');\n    setVocabularyName('');\n    onClose();\n  };\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 5\n    }\n  }, inputSchema && action === 'add' && __jsx(ModalForm, {\n    dimmer: __jsx(Modal.Dimmer, {\n      style: {\n        zIndex: 99\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 19\n      }\n    }),\n    open: open,\n    onSubmit: function onSubmit(data) {\n      return handleSave(data);\n    },\n    onCancel: handleClose,\n    title: \"Add \".concat(value.title, \" \").concat(type),\n    schema: inputSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }\n  }), inputSchema && action === 'edit' && formData && __jsx(ModalForm, {\n    dimmer: __jsx(Modal.Dimmer, {\n      style: {\n        zIndex: 99\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 19\n      }\n    }),\n    open: open,\n    onSubmit: function onSubmit(data) {\n      return handleSave(data);\n    },\n    onCancel: handleClose,\n    formData: formData ? formData : '',\n    title: \"Add \".concat(value.title, \" \").concat(type),\n    schema: inputSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }\n  }));\n};\n_s(VariableModal, \"TR/GFr6pZViL9vmUGc/TWb0z1s4=\");\n_c = VariableModal;\nexport default compose(injectIntl, connect(function (state, props) {\n  return {\n    vocabularies: state.vocabularies\n  };\n}, {\n  getVocabulary: getVocabulary\n}))(VariableModal);\nvar _c;\n$RefreshReg$(_c, \"VariableModal\");","map":{"version":3,"names":["React","Modal","connect","getVocabulary","injectIntl","compose","ModalForm","setSchema","name","choices","fieldsets","id","title","fields","properties","check_types","isMulti","length","required","file_extension","type","wf_states","group_names","role_names","tales_expression","targetLogger","Level","message","message_type","target_folder","widget","transition","subject","source","recipients","exclude_actor","description","comment","detectVocabulary","VariableModal","open","onClose","onOpen","onSave","value","vocabularies","action","formData","useState","vocabularyName","setVocabularyName","inputSchema","setInputSchema","addview","useEffect","detectedVocab","vocabNameOrURL","vocabularyOptions","items","map","item","i","label","handleSave","v","handleClose","zIndex","data","state","props"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Rules/components/VariableModal.jsx"],"sourcesContent":["import React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\n\nimport { getVocabulary } from '@plone/volto/actions';\nimport { injectIntl } from 'react-intl';\nimport { compose } from 'redux';\n\nimport { ModalForm } from '@plone/volto/components';\n\nconst setSchema = (name, choices = '') => {\n  switch (name) {\n    //conditions\n    case 'Content type':\n      return {\n        fieldsets: [\n          {\n            id: 'default',\n            title: 'default',\n            fields: ['check_types'],\n          },\n        ],\n        properties: {\n          check_types: {\n            title: 'Content Types',\n            isMulti: true,\n            default: choices && choices.length > 0 ? choices[0] : '',\n            choices: choices,\n          },\n        },\n        required: ['check_types'],\n      };\n    case 'File Extension':\n      return {\n        fieldsets: [\n          {\n            id: 'default',\n            title: 'default',\n            fields: ['file_extension'],\n          },\n        ],\n        properties: {\n          file_extension: {\n            title: 'File Extension',\n            type: 'string',\n          },\n        },\n        required: ['file_extension'],\n      };\n    case 'Workflow state':\n      return {\n        fieldsets: [\n          {\n            id: 'default',\n            title: 'default',\n            fields: ['wf_states'],\n          },\n        ],\n        properties: {\n          wf_states: {\n            title: 'Workflow State',\n            isMulti: true,\n            default: choices && choices.length > 0 ? choices[0] : '',\n            choices: choices,\n          },\n        },\n        required: ['wf_states'],\n      };\n    case \"User's group\":\n      return {\n        fieldsets: [\n          {\n            id: 'default',\n            title: 'default',\n            fields: ['group_names'],\n          },\n        ],\n        properties: {\n          group_names: {\n            title: 'Groups',\n            isMulti: true,\n            default: choices && choices.length > 0 ? choices[0] : '',\n            choices: choices,\n          },\n        },\n        required: ['group_names'],\n      };\n    case \"User's role\":\n      return {\n        fieldsets: [\n          {\n            id: 'default',\n            title: 'default',\n            fields: ['role_names'],\n          },\n        ],\n        properties: {\n          role_names: {\n            title: 'Roles',\n            isMulti: true,\n            default: choices && choices.length > 0 ? choices[0] : '',\n            choices: choices,\n          },\n        },\n        required: ['role_names'],\n      };\n    case 'TALES expression':\n      return {\n        fieldsets: [\n          {\n            id: 'default',\n            title: 'default',\n            fields: ['tales_expression'],\n          },\n        ],\n        properties: {\n          tales_expression: {\n            title: 'File Extension',\n            type: 'string',\n          },\n        },\n        required: ['tales_expression'],\n      };\n    // actions\n    case 'Logger':\n      return {\n        title: 'Logger',\n        fieldsets: [\n          {\n            id: 'default',\n            title: 'Logger Action',\n            fields: ['targetLogger', 'Level', 'message'],\n          },\n        ],\n        properties: {\n          targetLogger: {\n            title: 'Logger name',\n            type: 'string',\n          },\n          Level: {\n            title: 'Logging level',\n            type: 'string',\n          },\n          message: {\n            title: 'Message',\n            type: 'string',\n          },\n        },\n        required: ['targetLogger', 'Level', 'message'],\n      };\n    case 'Notify user':\n      return {\n        title: 'Notify user',\n        fieldsets: [\n          {\n            id: 'default',\n            title: 'Message',\n            fields: ['message', 'message_type'],\n          },\n        ],\n        properties: {\n          message: {\n            title: 'Message',\n            type: 'string',\n          },\n          message_type: {\n            title: 'Message Type',\n            default: ['info', 'info'],\n            choices: [\n              ['info', 'info'],\n              ['warning', 'warning'],\n              ['error', 'error'],\n            ],\n          },\n        },\n        required: ['message', 'message_type'],\n      };\n    case 'Copy to folder':\n      return {\n        title: 'Target folder: ',\n        fieldsets: [\n          {\n            id: 'default',\n            title: 'Target folder: ',\n            fields: ['target_folder'],\n          },\n        ],\n        properties: {\n          target_folder: {\n            title: 'Target folder: ',\n            widget: 'internal_url',\n          },\n        },\n        required: ['target_folder'],\n      };\n    case 'Move to folder':\n      return {\n        title: 'Target folder: ',\n        fieldsets: [\n          {\n            id: 'default',\n            title: 'Target folder: ',\n            fields: ['target_folder'],\n          },\n        ],\n        properties: {\n          target_folder: {\n            title: 'Target folder: ',\n            widget: 'internal_url',\n          },\n        },\n        required: ['target_folder'],\n      };\n    case 'Delete object':\n      return {\n        title: 'Delete',\n        fieldsets: [\n          {\n            id: 'default',\n            title: 'Target folder: ',\n            fields: [],\n          },\n        ],\n        properties: {},\n        required: [],\n      };\n    case 'Transition workflow state':\n      return {\n        fieldsets: [\n          {\n            id: 'default',\n            title: 'Transition workflow state',\n            fields: ['transition'],\n          },\n        ],\n        properties: {\n          transition: {\n            title: 'Transition workflow state',\n            isMulti: true,\n            default: choices && choices.length > 0 ? choices[0] : '',\n            choices: choices,\n          },\n        },\n        required: ['transition'],\n      };\n    case 'Send email':\n      return {\n        title: 'Send mail',\n        fieldsets: [\n          {\n            id: 'default',\n            title: 'Send mail',\n            fields: [\n              'subject',\n              'source',\n              'recipients',\n              'exclude_actor',\n              'message',\n            ],\n          },\n        ],\n        properties: {\n          message: {\n            title: 'Message',\n            widget: 'textarea',\n          },\n          subject: {\n            title: 'Subject',\n            type: 'string',\n          },\n          source: {\n            title: 'Email source',\n            type: 'string',\n          },\n          recipients: {\n            title: 'Email Recipients',\n            type: 'string',\n          },\n          exclude_actor: {\n            title: 'Exclude actor from recipients',\n            description:\n              'Do not send the email to the user that did the action.',\n            type: 'boolean',\n          },\n        },\n        required: ['subject', 'recipients', 'message'],\n      };\n    case 'Version object':\n      return {\n        title: 'Send mail',\n        fieldsets: [\n          {\n            id: 'default',\n            title: 'Send mail',\n            fields: ['comment'],\n          },\n        ],\n        properties: {\n          comment: {\n            title: 'Comment',\n            type: 'string',\n          },\n        },\n        required: ['comment'],\n      };\n    case 'IMSv4: Retract and rename old Indicator':\n      return {\n        title: 'Delete',\n        fieldsets: [\n          {\n            id: 'default',\n            title: 'Target folder: ',\n            fields: [],\n          },\n        ],\n        properties: {},\n        required: [],\n      };\n\n    default:\n      return '';\n  }\n};\n\nconst detectVocabulary = (type) => {\n  switch (type) {\n    case 'Content type':\n      return 'plone.app.vocabularies.ReallyUserFriendlyTypes';\n    case 'Workflow state':\n      return 'plone.app.vocabularies.WorkflowStates';\n    case \"User's group\":\n      return 'plone.app.vocabularies.Groups';\n    case \"User's role\":\n      return 'plone.app.vocabularies.Roles';\n    case 'Transition workflow state':\n      return 'plone.app.vocabularies.WorkflowTransitions';\n    default:\n      return '';\n  }\n};\n\nconst VariableModal = ({\n  open,\n  type,\n  onClose,\n  onOpen,\n  onSave,\n  value,\n  vocabularies,\n  getVocabulary,\n  action,\n  formData,\n}) => {\n  const [vocabularyName, setVocabularyName] = React.useState('');\n  const [inputSchema, setInputSchema] = React.useState('');\n\n  const { addview = '' } = value || {};\n\n  React.useEffect(() => {\n    if (value?.title) {\n      const detectedVocab = detectVocabulary(value.title);\n      if (detectedVocab) {\n        setVocabularyName(detectedVocab);\n\n        getVocabulary({ vocabNameOrURL: detectedVocab });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value, open, formData]);\n\n  React.useEffect(() => {\n    //reset input schema to rehydrate options\n    setInputSchema('');\n    const vocabularyOptions =\n      vocabularyName &&\n      vocabularies &&\n      vocabularies[vocabularyName] &&\n      vocabularies[vocabularyName].items\n        ? vocabularies[vocabularyName].items.map((item, i) => {\n            return [item.value, item.label];\n          })\n        : [];\n    //set schema with the new options from vocabulary\n    setInputSchema(setSchema(value.title, vocabularyOptions));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [vocabularies, open, formData, value]);\n\n  const handleSave = (v) => {\n    if (action === 'add') {\n      onSave({ ...v, type: addview });\n    }\n    if (action === 'edit') {\n      onSave(v);\n    }\n    setInputSchema('');\n    onClose();\n  };\n\n  const handleClose = () => {\n    setInputSchema('');\n    setVocabularyName('');\n    onClose();\n  };\n\n  return (\n    <div>\n      {inputSchema && action === 'add' && (\n        <ModalForm\n          dimmer={<Modal.Dimmer style={{ zIndex: 99 }} />}\n          open={open}\n          onSubmit={(data) => handleSave(data)}\n          onCancel={handleClose}\n          title={`Add ${value.title} ${type}`}\n          schema={inputSchema}\n        />\n      )}\n      {inputSchema && action === 'edit' && formData && (\n        <ModalForm\n          dimmer={<Modal.Dimmer style={{ zIndex: 99 }} />}\n          open={open}\n          onSubmit={(data) => handleSave(data)}\n          onCancel={handleClose}\n          formData={formData ? formData : ''}\n          title={`Add ${value.title} ${type}`}\n          schema={inputSchema}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      vocabularies: state.vocabularies,\n    }),\n    { getVocabulary },\n  ),\n)(VariableModal);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}