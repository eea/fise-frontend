{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport React from 'react';\nimport { openlayers } from '..';\nimport { getOptions, getEvents, assign } from '../helpers';\nimport { withMapContext } from '../hocs';\nvar layer = openlayers.layer,\n  source = openlayers.source;\nvar Tile = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tile, _React$Component);\n  var _super = _createSuper(Tile);\n  function Tile(props) {\n    var _this;\n    _classCallCheck(this, Tile);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"layer\", undefined);\n    _defineProperty(_assertThisInitialized(_this), \"options\", {\n      className: undefined,\n      extent: undefined,\n      map: undefined,\n      maxResolution: undefined,\n      maxZoom: undefined,\n      minResolution: undefined,\n      minZoom: undefined,\n      opacity: undefined,\n      preload: undefined,\n      source: undefined,\n      useInterimTilesOnError: undefined,\n      visible: undefined,\n      zIndex: undefined\n    });\n    _defineProperty(_assertThisInitialized(_this), \"events\", {\n      'change:extent': undefined,\n      'change:maxResolution': undefined,\n      'change:maxZoom': undefined,\n      'change:minResolution': undefined,\n      'change:minZoom': undefined,\n      'change:opacity': undefined,\n      'change:preload': undefined,\n      'change:source': undefined,\n      'change:useInterimTilesOnError': undefined,\n      'change:visible': undefined,\n      'change:zIndex': undefined,\n      error: undefined,\n      postrender: undefined,\n      precompose: undefined,\n      propertychange: undefined\n    });\n    _this.options = getOptions(assign(_this.options, _this.props));\n    _this.addLayer = _this.addLayer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(Tile, [{\n    key: \"addLayer\",\n    value: function addLayer() {\n      var mapRendered = this.props.mapRendered;\n      var events = getEvents(this.events, this.props);\n      this.options.source = this.options.source || new source.OSM();\n      this.layer = new layer.Tile(this.options);\n      for (var event in events) {\n        this.layer.on(event, events[event]);\n      }\n      if (!mapRendered) {\n        this.props.addLayer(this.layer);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.addLayer();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (__SERVER__ || !this.layer) return;\n      this.layer.dispose();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return '';\n    }\n  }]);\n  return Tile;\n}(React.Component);\nexport default _c = withMapContext(Tile);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","openlayers","getOptions","getEvents","assign","withMapContext","layer","source","Tile","props","undefined","className","extent","map","maxResolution","maxZoom","minResolution","minZoom","opacity","preload","useInterimTilesOnError","visible","zIndex","error","postrender","precompose","propertychange","options","addLayer","bind","mapRendered","events","OSM","event","on","__SERVER__","dispose","Component"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-openlayers-map/src/Layers/Tile.jsx"],"sourcesContent":["import React from 'react';\nimport { openlayers } from '..';\nimport { getOptions, getEvents, assign } from '../helpers';\nimport { withMapContext } from '../hocs';\n\nconst { layer, source } = openlayers;\n\nclass Tile extends React.Component {\n  layer = undefined;\n\n  options = {\n    className: undefined,\n    extent: undefined,\n    map: undefined,\n    maxResolution: undefined,\n    maxZoom: undefined,\n    minResolution: undefined,\n    minZoom: undefined,\n    opacity: undefined,\n    preload: undefined,\n    source: undefined,\n    useInterimTilesOnError: undefined,\n    visible: undefined,\n    zIndex: undefined,\n  };\n\n  events = {\n    'change:extent': undefined,\n    'change:maxResolution': undefined,\n    'change:maxZoom': undefined,\n    'change:minResolution': undefined,\n    'change:minZoom': undefined,\n    'change:opacity': undefined,\n    'change:preload': undefined,\n    'change:source': undefined,\n    'change:useInterimTilesOnError': undefined,\n    'change:visible': undefined,\n    'change:zIndex': undefined,\n    error: undefined,\n    postrender: undefined,\n    precompose: undefined,\n    propertychange: undefined,\n  };\n\n  constructor(props) {\n    super(props);\n    this.options = getOptions(assign(this.options, this.props));\n    this.addLayer = this.addLayer.bind(this);\n  }\n\n  addLayer() {\n    const { mapRendered } = this.props;\n    let events = getEvents(this.events, this.props);\n    this.options.source = this.options.source || new source.OSM();\n    this.layer = new layer.Tile(this.options);\n    for (let event in events) {\n      this.layer.on(event, events[event]);\n    }\n    if (!mapRendered) {\n      this.props.addLayer(this.layer);\n    }\n  }\n\n  componentDidMount() {\n    this.addLayer();\n  }\n\n  componentWillUnmount() {\n    if (__SERVER__ || !this.layer) return;\n    this.layer.dispose();\n  }\n\n  render() {\n    return '';\n  }\n}\n\nexport default withMapContext(Tile);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}