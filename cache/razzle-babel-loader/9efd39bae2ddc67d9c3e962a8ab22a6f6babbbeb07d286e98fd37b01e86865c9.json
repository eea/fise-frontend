{"ast":null,"code":"import _keys from \"lodash/keys\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-slate-zotero/src/plugins/zotero/editor/InlineForm.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Card, Message, Segment, List, Button } from 'semantic-ui-react';\nimport clearSVG from '@plone/volto/icons/delete.svg';\nimport { Icon } from '@plone/volto/components';\nvar messages = defineMessages({\n  editValues: {\n    \"id\": \"Edit values\",\n    \"defaultMessage\": \"Edit values\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  thereWereSomeErrors: {\n    \"id\": \"There were some errors\",\n    \"defaultMessage\": \"There were some errors\"\n  }\n});\nvar InlineForm = function InlineForm(_ref) {\n  var description = _ref.description,\n    error = _ref.error,\n    _ref$errors = _ref.errors,\n    errors = _ref$errors === void 0 ? {} : _ref$errors,\n    updatedFormData = _ref.updatedFormData,\n    title = _ref.title,\n    icon = _ref.icon,\n    headerActions = _ref.headerActions,\n    deleteItem = _ref.deleteItem,\n    intl = _ref.intl;\n  var _ = intl.formatMessage;\n  return __jsx(Segment.Group, {\n    raised: true,\n    className: \"form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    className: \"header pulled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, icon, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, title || _(messages.editValues)), headerActions), description && __jsx(Segment, {\n    secondary: true,\n    className: \"attached\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, description), _keys(errors).length > 0 && __jsx(Message, {\n    icon: \"warning\",\n    negative: true,\n    attached: true,\n    header: _(messages.error),\n    content: _(messages.thereWereSomeErrors),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), error && __jsx(Message, {\n    icon: \"warning\",\n    negative: true,\n    attached: true,\n    header: _(messages.error),\n    content: error.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    id: \"blockform-fieldset-default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(Segment, {\n    className: \"attached slate-toolbar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(Card.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Citation\"), __jsx(Card.Description, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, updatedFormData && updatedFormData.footnoteTitle && __jsx(List, {\n    divided: true,\n    relaxed: true,\n    className: \"button-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, __jsx(List.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, __jsx(List.Content, {\n    floated: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 23\n    }\n  }, __jsx(Button, {\n    as: \"a\",\n    size: \"tiny\",\n    className: \"ui compact icon toggle button\",\n    icon: __jsx(Icon, {\n      name: clearSVG,\n      size: \"24px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }),\n    onClick: function onClick() {\n      return deleteItem(-1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  })), __jsx(List.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }, __jsx(List.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, updatedFormData.footnoteTitle, ' '))), updatedFormData.extra && updatedFormData.extra.map(function (item, index) {\n    return __jsx(List.Item, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, __jsx(List.Content, {\n      floated: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 27\n      }\n    }, __jsx(Button, {\n      as: \"a\",\n      size: \"tiny\",\n      className: \"ui compact icon toggle button\",\n      icon: __jsx(Icon, {\n        name: clearSVG,\n        size: \"24px\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }\n      }),\n      onClick: function onClick() {\n        return deleteItem(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    })), __jsx(List.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 27\n      }\n    }, __jsx(List.Header, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, item.footnoteTitle, \" \")));\n  }))))))));\n};\n_c = InlineForm;\nInlineForm.defaultProps = {\n  block: null,\n  description: null,\n  formData: null,\n  onChangeField: null,\n  error: null,\n  errors: {},\n  schema: {}\n};\nInlineForm.propTypes = {\n  block: PropTypes.string,\n  description: PropTypes.string,\n  schema: PropTypes.shape({\n    fieldsets: PropTypes.arrayOf(PropTypes.shape({\n      fields: PropTypes.arrayOf(PropTypes.string),\n      id: PropTypes.string,\n      title: PropTypes.string\n    })),\n    properties: PropTypes.objectOf(PropTypes.any),\n    definitions: PropTypes.objectOf(PropTypes.any),\n    required: PropTypes.arrayOf(PropTypes.string)\n  }),\n  formData: PropTypes.objectOf(PropTypes.any),\n  pathname: PropTypes.string,\n  onChangeField: PropTypes.func,\n  error: PropTypes.shape({\n    message: PropTypes.string\n  })\n};\nexport default _c2 = injectIntl(InlineForm, {\n  forwardRef: true\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"InlineForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["PropTypes","React","defineMessages","injectIntl","Card","Message","Segment","List","Button","clearSVG","Icon","messages","editValues","error","thereWereSomeErrors","InlineForm","description","errors","updatedFormData","title","icon","headerActions","deleteItem","intl","_","formatMessage","length","message","footnoteTitle","extra","map","item","index","defaultProps","block","formData","onChangeField","schema","propTypes","string","shape","fieldsets","arrayOf","fields","id","properties","objectOf","any","definitions","required","pathname","func","forwardRef"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate-zotero/src/plugins/zotero/editor/InlineForm.jsx"],"sourcesContent":["import { keys } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Card, Message, Segment, List, Button } from 'semantic-ui-react';\nimport clearSVG from '@plone/volto/icons/delete.svg';\nimport { Icon } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  editValues: {\n    id: 'Edit values',\n    defaultMessage: 'Edit values',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  thereWereSomeErrors: {\n    id: 'There were some errors',\n    defaultMessage: 'There were some errors',\n  },\n});\n\nconst InlineForm = ({\n  description,\n  error, // Such as {message: \"It's not good\"}\n  errors = {},\n  updatedFormData,\n  title,\n  icon,\n  headerActions,\n  deleteItem,\n  intl,\n}) => {\n  const _ = intl.formatMessage;\n\n  return (\n    <Segment.Group raised className=\"form\">\n      <header className=\"header pulled\">\n        {icon}\n        <h2>{title || _(messages.editValues)}</h2>\n        {headerActions}\n      </header>\n      {description && (\n        <Segment secondary className=\"attached\">\n          {description}\n        </Segment>\n      )}\n      {keys(errors).length > 0 && (\n        <Message\n          icon=\"warning\"\n          negative\n          attached\n          header={_(messages.error)}\n          content={_(messages.thereWereSomeErrors)}\n        />\n      )}\n      {error && (\n        <Message\n          icon=\"warning\"\n          negative\n          attached\n          header={_(messages.error)}\n          content={error.message}\n        />\n      )}\n\n      <div id={`blockform-fieldset-default`}>\n        <Segment className=\"attached slate-toolbar\">\n          <Card fluid>\n            <Card.Content>\n              <Card.Header>Citation</Card.Header>\n              <Card.Description>\n                {updatedFormData && updatedFormData.footnoteTitle && (\n                  <List divided relaxed className=\"button-wrapper\">\n                    {/* saved footnotes*/}\n                    <List.Item>\n                      <List.Content floated=\"right\">\n                        <Button\n                          as=\"a\"\n                          size=\"tiny\"\n                          className=\"ui compact icon toggle button\"\n                          icon={<Icon name={clearSVG} size=\"24px\" />}\n                          onClick={() => deleteItem(-1)}\n                        ></Button>\n                      </List.Content>\n                      <List.Content>\n                        <List.Header>\n                          {updatedFormData.footnoteTitle}{' '}\n                        </List.Header>\n                      </List.Content>\n                    </List.Item>\n\n                    {/* new footnotes*/}\n                    {updatedFormData.extra &&\n                      updatedFormData.extra.map((item, index) => (\n                        <List.Item>\n                          <List.Content floated=\"right\">\n                            <Button\n                              as=\"a\"\n                              size=\"tiny\"\n                              className=\"ui compact icon toggle button\"\n                              icon={<Icon name={clearSVG} size=\"24px\" />}\n                              onClick={() => deleteItem(index)}\n                            ></Button>\n                          </List.Content>\n                          <List.Content>\n                            <List.Header>{item.footnoteTitle} </List.Header>\n                          </List.Content>\n                        </List.Item>\n                      ))}\n                  </List>\n                )}\n              </Card.Description>\n            </Card.Content>\n          </Card>\n        </Segment>\n      </div>\n    </Segment.Group>\n  );\n};\n\nInlineForm.defaultProps = {\n  block: null,\n  description: null,\n  formData: null,\n  onChangeField: null,\n  error: null,\n  errors: {},\n  schema: {},\n};\n\nInlineForm.propTypes = {\n  block: PropTypes.string,\n  description: PropTypes.string,\n  schema: PropTypes.shape({\n    fieldsets: PropTypes.arrayOf(\n      PropTypes.shape({\n        fields: PropTypes.arrayOf(PropTypes.string),\n        id: PropTypes.string,\n        title: PropTypes.string,\n      }),\n    ),\n    properties: PropTypes.objectOf(PropTypes.any),\n    definitions: PropTypes.objectOf(PropTypes.any),\n    required: PropTypes.arrayOf(PropTypes.string),\n  }),\n  formData: PropTypes.objectOf(PropTypes.any),\n  pathname: PropTypes.string,\n  onChangeField: PropTypes.func,\n  error: PropTypes.shape({\n    message: PropTypes.string,\n  }),\n};\n\nexport default injectIntl(InlineForm, { forwardRef: true });\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Edit values","defaultMessage":"Edit values"},{"id":"Error","defaultMessage":"Error"},{"id":"There were some errors","defaultMessage":"There were some errors"}]}},"sourceType":"module","externalDependencies":[]}