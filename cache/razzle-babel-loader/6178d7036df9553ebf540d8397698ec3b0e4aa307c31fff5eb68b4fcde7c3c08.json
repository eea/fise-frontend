{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-listing-block/src/blocks/Listing/item-templates/ItemTemplates.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport cx from 'classnames';\nimport { ConditionalLink, FormattedDate } from '@plone/volto/components';\nimport { getVoltoStyles } from '@eeacms/volto-listing-block/schema-utils';\nimport PreviewImage from '@eeacms/volto-listing-block/PreviewImage';\nconst BodyText = ({\n  item,\n  hasDate,\n  hasDescription\n}) => {\n  return __jsx(\"div\", {\n    className: \"listing-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: 'listing-header',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, item.title ? item.title : item.id), hasDate && item.effective && __jsx(\"p\", {\n    className: 'listing-date',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedDate, {\n    date: item.effective,\n    format: {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  })), hasDescription && __jsx(\"p\", {\n    className: 'listing-description',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, item.description));\n};\nconst BasicItem = props => {\n  const {\n    item,\n    styles,\n    className,\n    itemModel = {},\n    isEditMode = false\n  } = props;\n  const {\n    hasImage,\n    imageOnRightSide,\n    hasDate,\n    hasDescription\n  } = itemModel;\n  return __jsx(\"div\", {\n    className: cx('u-item listing-item', getVoltoStyles(styles), className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: `wrapper ${imageOnRightSide ? 'right-image' : 'left-image'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"slot-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(ConditionalLink, {\n    item: item,\n    condition: !isEditMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, hasImage ? imageOnRightSide ? __jsx(React.Fragment, null, __jsx(BodyText, {\n    item: item,\n    hasDescription: hasDescription,\n    hasDate: hasDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }), __jsx(\"div\", {\n    className: \"image-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, __jsx(PreviewImage, {\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"image-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, __jsx(PreviewImage, {\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  })), __jsx(BodyText, {\n    item: item,\n    hasDescription: hasDescription,\n    hasDate: hasDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  })) : __jsx(BodyText, {\n    item: item,\n    hasDescription: hasDescription,\n    hasDate: hasDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    className: \"slot-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, item === null || item === void 0 ? void 0 : item.extra)));\n};\nexport const DefaultItemLayout = props => {\n  return __jsx(BasicItem, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }\n  }));\n};","map":{"version":3,"names":["cx","ConditionalLink","FormattedDate","getVoltoStyles","PreviewImage","BodyText","item","hasDate","hasDescription","title","id","effective","year","month","day","description","BasicItem","props","styles","className","itemModel","isEditMode","hasImage","imageOnRightSide","extra","DefaultItemLayout"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-listing-block/src/blocks/Listing/item-templates/ItemTemplates.jsx"],"sourcesContent":["import cx from 'classnames';\nimport { ConditionalLink, FormattedDate } from '@plone/volto/components';\n\nimport { getVoltoStyles } from '@eeacms/volto-listing-block/schema-utils';\n\nimport PreviewImage from '@eeacms/volto-listing-block/PreviewImage';\n\nconst BodyText = ({ item, hasDate, hasDescription }) => {\n  return (\n    <div className=\"listing-body\">\n      <h3 className={'listing-header'}>{item.title ? item.title : item.id}</h3>\n      {hasDate && item.effective && (\n        <p className={'listing-date'}>\n          <FormattedDate\n            date={item.effective}\n            format={{\n              year: 'numeric',\n              month: 'short',\n              day: 'numeric',\n            }}\n          />\n        </p>\n      )}\n      {hasDescription && (\n        <p className={'listing-description'}>{item.description}</p>\n      )}\n    </div>\n  );\n};\n\nconst BasicItem = (props) => {\n  const { item, styles, className, itemModel = {}, isEditMode = false } = props;\n  const { hasImage, imageOnRightSide, hasDate, hasDescription } = itemModel;\n\n  return (\n    <div\n      className={cx('u-item listing-item', getVoltoStyles(styles), className)}\n    >\n      <div\n        className={`wrapper ${imageOnRightSide ? 'right-image' : 'left-image'}`}\n      >\n        <div className=\"slot-top\">\n          <ConditionalLink item={item} condition={!isEditMode}>\n            {hasImage ? (\n              imageOnRightSide ? (\n                <>\n                  <BodyText\n                    item={item}\n                    hasDescription={hasDescription}\n                    hasDate={hasDate}\n                  />\n                  <div className=\"image-wrapper\">\n                    <PreviewImage item={item} />\n                  </div>\n                </>\n              ) : (\n                <>\n                  <div className=\"image-wrapper\">\n                    <PreviewImage item={item} />\n                  </div>\n                  <BodyText\n                    item={item}\n                    hasDescription={hasDescription}\n                    hasDate={hasDate}\n                  />\n                </>\n              )\n            ) : (\n              <BodyText\n                item={item}\n                hasDescription={hasDescription}\n                hasDate={hasDate}\n              />\n            )}\n          </ConditionalLink>\n        </div>\n        <div className=\"slot-bottom\">{item?.extra}</div>\n      </div>\n    </div>\n  );\n};\n\nexport const DefaultItemLayout = (props) => {\n  return <BasicItem {...props} />;\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}