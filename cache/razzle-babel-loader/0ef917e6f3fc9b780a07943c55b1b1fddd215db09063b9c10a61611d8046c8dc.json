{"ast":null,"code":"import _map from \"lodash/map\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport _groupBy from \"lodash/groupBy\";\nimport _toPairs from \"lodash/toPairs\";\nimport _remove from \"lodash/remove\";\nimport _filter from \"lodash/filter\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/manage/Widgets/DataQueryWidget.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * QuerystringWidget component.\n * @module components/manage/Widgets/QuerystringWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Button, Form, Grid, Input, Label } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { getQuerystring } from '@plone/volto/actions';\nimport { Icon } from '@plone/volto/components';\nimport { format, parse } from 'date-fns';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport cx from 'classnames';\nimport { Option, DropdownIndicator, selectTheme, customSelectStyles } from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport { DATACONNECTOR_PARAMS_GROUP } from '@eeacms/volto-datablocks/constants';\nimport { defaultOperations, defaultOperators } from './operations';\nfunction filterIndexes(indexes) {\n  const res = {};\n  Object.keys(indexes).forEach(k => {\n    if (indexes[k].group === DATACONNECTOR_PARAMS_GROUP) res[k] = indexes[k];\n  });\n  return res;\n}\nconst messages = defineMessages({\n  Criteria: {\n    \"id\": \"Criteria\",\n    \"defaultMessage\": \"Criteria\"\n  },\n  AddCriteria: {\n    \"id\": \"Add criteria\",\n    \"defaultMessage\": \"Add criteria\"\n  },\n  select: {\n    \"id\": \"querystring-widget-select\",\n    \"defaultMessage\": \"Select\\u2026\"\n  }\n});\n\n/**\n * QuerystringWidget component class.\n * @class QuerystringWidget\n * @extends Component\n */\nclass QuerystringWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      visual: false,\n      indexes: null\n    };\n    this.initializeIndexes = this.initializeIndexes.bind(this);\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.getWidget = this.getWidget.bind(this);\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n    this.props.getQuerystring();\n    if (this.props.indexesLoaded) {\n      this.initializeIndexes();\n    }\n  }\n\n  /**\n   * Component did update lifecycle method\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate() {\n    if (this.props.indexesLoaded && !this.state.indexes) {\n      this.initializeIndexes();\n    }\n  }\n\n  /**\n   * Initialize indexes\n   * @method initializeIndexes\n   * @returns undefined.\n   */\n  initializeIndexes() {\n    const value = this.props.value;\n    const indexes = {};\n    if (value !== null && value !== void 0 && value.length) {\n      value.forEach(param => {\n        if (!this.props.indexes[param.i] && !indexes[param.i]) {\n          indexes[param.i] = {\n            enabled: true,\n            group: 'Custom',\n            operations: defaultOperations,\n            operators: defaultOperators,\n            sortable: false,\n            title: param.i,\n            values: {}\n          };\n        }\n      });\n    }\n    this.setState({\n      indexes\n    });\n  }\n\n  /**\n   * Get correct widget\n   * @method getWidget\n   * @param {Object} row Row object.\n   * @param {number} index Row index.\n   * @returns {Object} Widget.\n   */\n  getWidget(row, index, Select) {\n    var _row$v;\n    const props = {\n      fluid: true,\n      value: row.v,\n      onChange: data => this.onChangeValue(index, data.target.value)\n    };\n    const indexes = _objectSpread(_objectSpread({}, this.props.indexes), this.state.indexes);\n    const values = indexes[row.i].values;\n    switch (indexes[row.i].operators[row.o].widget) {\n      case null:\n        return __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 16\n          }\n        });\n      case 'TextWidget':\n        return __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 11\n          }\n        }, __jsx(Input, _extends({}, props, {\n          onChange: data => this.onChangeValue(index, [data.target.value]),\n          value: (_row$v = row.v) === null || _row$v === void 0 ? void 0 : _row$v[0],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }\n        })));\n      case 'DateWidget':\n        return __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 11\n          }\n        }, __jsx(Input, _extends({\n          type: \"date\"\n        }, props, {\n          value: format(parse(row.v), 'YYYY-MM-DD'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }\n        })));\n      case 'DateRangeWidget':\n        // 2 date inputs\n        return __jsx(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 11\n          }\n        }, __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }\n        }, __jsx(Input, _extends({\n          type: \"date\"\n        }, props, {\n          value: format(parse(row.v[0]), 'YYYY-MM-DD'),\n          onChange: data => this.onChangeValue(index, [data.target.value, row.v[1]]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }\n        }))), __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }\n        }, __jsx(Input, _extends({\n          type: \"date\"\n        }, props, {\n          value: format(parse(row.v[1]), 'YYYY-MM-DD'),\n          onChange: data => this.onChangeValue(index, [row.v[0], data.target.value]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }\n        }))));\n      case 'RelativeDateWidget':\n        return __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 11\n          }\n        }, __jsx(Input, _extends({\n          step: 1,\n          type: \"number\"\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }\n        })));\n      case 'MultipleSelectionWidget':\n        return __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto',\n            maxWidth: '93%'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 11\n          }\n        }, __jsx(Select, _extends({}, props, {\n          className: \"react-select-container\",\n          classNamePrefix: \"react-select\",\n          options: values ? _map(_toPairs(values), value => ({\n            label: value[1].title,\n            value: value[0]\n          })) : [],\n          styles: customSelectStyles,\n          placeholder: this.props.intl.formatMessage(messages.select),\n          theme: selectTheme,\n          components: {\n            DropdownIndicator,\n            Option\n          },\n          onChange: data => {\n            this.onChangeValue(index, _map(data, item => item.value));\n          },\n          isMulti: true,\n          value: _map(row.v, value => {\n            var _values$value;\n            return {\n              label: (values === null || values === void 0 ? void 0 : (_values$value = values[value]) === null || _values$value === void 0 ? void 0 : _values$value.title) || value,\n              value\n            };\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }\n        })));\n      case 'ReferenceWidget':\n      default:\n        // if (row.o === 'plone.app.querystring.operation.string.relativePath') {\n        //   props.onChange = data => this.onChangeValue(index, data.target.value);\n        // }\n        return __jsx(Form.Field, {\n          style: {\n            flex: '1 0 auto'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 11\n          }\n        }, __jsx(Input, _extends({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }\n        })));\n    }\n  }\n\n  /**\n   * Change value handler\n   * @method onChangeValue\n   * @param {Number} index Index of the row.\n   * @param {String|Array} value Value of the row.\n   * @returns {undefined}\n   */\n  onChangeValue(index, value) {\n    this.props.onChange(this.props.id, _map(this.props.value, (row, i) => index === i ? _objectSpread(_objectSpread({}, row), {}, {\n      v: value\n    }) : row));\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      required,\n      description,\n      error,\n      value,\n      onChange,\n      onEdit,\n      fieldSet,\n      reactSelect,\n      reactSelectCreateable,\n      intl\n    } = this.props;\n    const indexes = _objectSpread(_objectSpread({}, this.props.indexes), this.state.indexes);\n    const Select = reactSelect.default;\n    const Creatable = reactSelectCreateable.default;\n    return __jsx(Form.Field, {\n      inline: true,\n      required: required,\n      error: error.length > 0,\n      className: cx('query-widget', description ? 'help' : ''),\n      id: `${fieldSet || 'field'}-${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 7\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }\n    }, __jsx(Grid.Column, {\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"simple-field-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 15\n      }\n    }, intl.formatMessage(messages.Criteria)))), __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }\n    }, __jsx(Grid.Column, {\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }\n    }, indexes && this.state.indexes && !_isEmpty(indexes) && _map(value, (row, index) => {\n      var _indexes$row$i;\n      return __jsx(Form.Group, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 19\n        }\n      }, __jsx(\"div\", {\n        className: \"main-fields-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }\n      }, __jsx(Form.Field, {\n        style: {\n          flex: '1 0 auto',\n          marginRight: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 23\n        }\n      }, __jsx(Creatable, {\n        id: `field-${id}`,\n        name: id,\n        disabled: onEdit !== null,\n        className: \"react-select-container\",\n        classNamePrefix: \"react-select\",\n        options: _map(_toPairs(_groupBy(_toPairs(indexes), item => item[1].group)), group => ({\n          label: group[0],\n          options: _map(group[1], field => ({\n            label: field[1].title,\n            value: field[0]\n          }))\n        })),\n        styles: customSelectStyles,\n        theme: selectTheme,\n        placeholder: intl.formatMessage(messages.select),\n        components: {\n          DropdownIndicator,\n          Option\n        },\n        value: {\n          value: row.i,\n          label: (_indexes$row$i = indexes[row.i]) === null || _indexes$row$i === void 0 ? void 0 : _indexes$row$i.title\n        },\n        onCreateOption: key => {\n          if (!this.state.indexes) return;\n          if (!this.state.indexes[key]) {\n            this.setState({\n              indexes: _objectSpread(_objectSpread({}, this.state.indexes), {}, {\n                [key]: {\n                  enabled: true,\n                  group: 'Custom',\n                  operations: defaultOperations,\n                  operators: defaultOperators,\n                  sortable: false,\n                  title: key,\n                  values: {}\n                }\n              })\n            });\n          }\n          onChange(id, _map(value, (curRow, curIndex) => curIndex === index ? {\n            i: key,\n            o: defaultOperations[0],\n            v: ''\n          } : curRow));\n        },\n        onChange: data => onChange(id, _map(value, (curRow, curIndex) => curIndex === index ? {\n          i: data.value,\n          o: indexes[data.value].operations[0],\n          v: ''\n        } : curRow)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }\n      })), __jsx(Form.Field, {\n        style: {\n          flex: '1 0 auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 23\n        }\n      }, __jsx(Select, {\n        id: `field-${id}`,\n        name: id,\n        disabled: onEdit !== null,\n        className: \"react-select-container\",\n        classNamePrefix: \"react-select\",\n        options: _map(indexes[row.i].operations, operation => ({\n          value: operation,\n          label: indexes[row.i].operators[operation].title\n        })),\n        styles: customSelectStyles,\n        theme: selectTheme,\n        placeholder: intl.formatMessage(messages.select),\n        components: {\n          DropdownIndicator,\n          Option\n        },\n        value: {\n          value: row.o,\n          label: indexes[row.i].operators[row.o].title\n        },\n        onChange: data => onChange(id, _map(value, (curRow, curIndex) => curIndex === index ? {\n          i: row.i,\n          o: data.value,\n          v: ''\n        } : curRow)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 25\n        }\n      })), !indexes[row.i].operators[row.o].widget && __jsx(Button, {\n        onClick: event => {\n          onChange(id, _remove(value, (v, i) => i !== index));\n          event.preventDefault();\n        },\n        style: {\n          background: 'none',\n          paddingRight: 0,\n          paddingLeft: 0,\n          margin: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 25\n        }\n      }, __jsx(Icon, {\n        name: clearSVG,\n        size: \"24px\",\n        className: \"close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 27\n        }\n      }))), this.getWidget(row, index, Creatable), indexes[row.i].operators[row.o].widget && __jsx(Button, {\n        onClick: event => {\n          onChange(id, _remove(value, (v, i) => i !== index));\n          event.preventDefault();\n        },\n        style: {\n          background: 'none',\n          paddingRight: 0,\n          paddingLeft: 0,\n          margin: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 23\n        }\n      }, __jsx(Icon, {\n        name: clearSVG,\n        size: \"24px\",\n        className: \"close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 25\n        }\n      })));\n    }), __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Field, {\n      style: {\n        flex: '1 0 auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 17\n      }\n    }, __jsx(Creatable, {\n      id: `field-${id}`,\n      name: id,\n      disabled: onEdit !== null,\n      className: \"react-select-container\",\n      classNamePrefix: \"react-select\",\n      placeholder: intl.formatMessage(messages.AddCriteria),\n      options: [..._map(_toPairs(_groupBy(_toPairs(indexes), item => item[1].group)), group => ({\n        label: group[0],\n        options: _map(_filter(group[1], item => item[1].enabled), field => ({\n          label: field[1].title,\n          value: field[0]\n        }))\n      }))],\n      styles: customSelectStyles,\n      theme: selectTheme,\n      components: {\n        DropdownIndicator,\n        Option\n      },\n      value: null,\n      onCreateOption: key => {\n        if (!this.state.indexes) return;\n        if (!this.state.indexes[key]) {\n          this.setState({\n            indexes: _objectSpread(_objectSpread({}, this.state.indexes), {}, {\n              [key]: {\n                enabled: true,\n                group: 'Custom',\n                operations: defaultOperations,\n                operators: defaultOperators,\n                sortable: false,\n                title: key,\n                values: {}\n              }\n            })\n          });\n        }\n        onChange(id, [...(value || []), {\n          i: key,\n          o: defaultOperations[0],\n          v: ''\n        }]);\n      },\n      onChange: data => {\n        onChange(id, [...(value || []), {\n          i: data.value,\n          o: indexes[data.value].operations[0],\n          v: ''\n        }]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 19\n      }\n    }))), _map(error, message => __jsx(Label, {\n      key: message,\n      basic: true,\n      color: \"red\",\n      pointing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 17\n      }\n    }, message)))), description && __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 13\n      }\n    }, __jsx(Grid.Column, {\n      stretched: true,\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 15\n      }\n    }, __jsx(\"p\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 17\n      }\n    }, description)))));\n  }\n}\n_defineProperty(QuerystringWidget, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.array,\n  focus: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  getQuerystring: PropTypes.func.isRequired\n});\n_defineProperty(QuerystringWidget, \"defaultProps\", {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n  focus: false\n});\nexport default compose(injectIntl, injectLazyLibs(['reactSelect', 'reactSelectCreateable']), connect(state => ({\n  indexes: filterIndexes(state.querystring.indexes),\n  indexesLoaded: state.querystring.loaded\n}), {\n  getQuerystring\n}))(QuerystringWidget);","map":{"version":3,"names":["React","Component","PropTypes","compose","connect","Button","Form","Grid","Input","Label","defineMessages","injectIntl","getQuerystring","Icon","format","parse","injectLazyLibs","cx","Option","DropdownIndicator","selectTheme","customSelectStyles","clearSVG","DATACONNECTOR_PARAMS_GROUP","defaultOperations","defaultOperators","filterIndexes","indexes","res","Object","keys","forEach","k","group","messages","Criteria","AddCriteria","select","QuerystringWidget","constructor","props","state","visual","initializeIndexes","bind","onChangeValue","getWidget","componentDidMount","focus","node","indexesLoaded","componentDidUpdate","value","length","param","i","enabled","operations","operators","sortable","title","values","setState","row","index","Select","fluid","v","onChange","data","target","o","widget","flex","maxWidth","label","intl","formatMessage","item","id","render","required","description","error","onEdit","fieldSet","reactSelect","reactSelectCreateable","default","Creatable","marginRight","options","field","key","curRow","curIndex","operation","event","preventDefault","background","paddingRight","paddingLeft","margin","message","string","isRequired","bool","arrayOf","array","func","onDelete","querystring","loaded"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/manage/Widgets/DataQueryWidget.jsx"],"sourcesContent":["/**\n * QuerystringWidget component.\n * @module components/manage/Widgets/QuerystringWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Button, Form, Grid, Input, Label } from 'semantic-ui-react';\nimport { filter, remove, toPairs, groupBy, isEmpty, map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { getQuerystring } from '@plone/volto/actions';\nimport { Icon } from '@plone/volto/components';\nimport { format, parse } from 'date-fns';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport cx from 'classnames';\n\nimport {\n  Option,\n  DropdownIndicator,\n  selectTheme,\n  customSelectStyles,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\n\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport { DATACONNECTOR_PARAMS_GROUP } from '@eeacms/volto-datablocks/constants';\n\nimport { defaultOperations, defaultOperators } from './operations';\n\nfunction filterIndexes(indexes) {\n  const res = {};\n  Object.keys(indexes).forEach((k) => {\n    if (indexes[k].group === DATACONNECTOR_PARAMS_GROUP) res[k] = indexes[k];\n  });\n  return res;\n}\n\nconst messages = defineMessages({\n  Criteria: {\n    id: 'Criteria',\n    defaultMessage: 'Criteria',\n  },\n  AddCriteria: {\n    id: 'Add criteria',\n    defaultMessage: 'Add criteria',\n  },\n  select: {\n    id: 'querystring-widget-select',\n    defaultMessage: 'Select…',\n  },\n});\n\n/**\n * QuerystringWidget component class.\n * @class QuerystringWidget\n * @extends Component\n */\nclass QuerystringWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.array,\n    focus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n    getQuerystring: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: null,\n    onChange: null,\n    onEdit: null,\n    onDelete: null,\n    focus: false,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs EditComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      visual: false,\n      indexes: null,\n    };\n    this.initializeIndexes = this.initializeIndexes.bind(this);\n    this.onChangeValue = this.onChangeValue.bind(this);\n    this.getWidget = this.getWidget.bind(this);\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n    this.props.getQuerystring();\n    if (this.props.indexesLoaded) {\n      this.initializeIndexes();\n    }\n  }\n\n  /**\n   * Component did update lifecycle method\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate() {\n    if (this.props.indexesLoaded && !this.state.indexes) {\n      this.initializeIndexes();\n    }\n  }\n\n  /**\n   * Initialize indexes\n   * @method initializeIndexes\n   * @returns undefined.\n   */\n  initializeIndexes() {\n    const value = this.props.value;\n    const indexes = {};\n    if (value?.length) {\n      value.forEach((param) => {\n        if (!this.props.indexes[param.i] && !indexes[param.i]) {\n          indexes[param.i] = {\n            enabled: true,\n            group: 'Custom',\n            operations: defaultOperations,\n            operators: defaultOperators,\n            sortable: false,\n            title: param.i,\n            values: {},\n          };\n        }\n      });\n    }\n    this.setState({ indexes });\n  }\n\n  /**\n   * Get correct widget\n   * @method getWidget\n   * @param {Object} row Row object.\n   * @param {number} index Row index.\n   * @returns {Object} Widget.\n   */\n  getWidget(row, index, Select) {\n    const props = {\n      fluid: true,\n      value: row.v,\n      onChange: (data) => this.onChangeValue(index, data.target.value),\n    };\n\n    const indexes = { ...this.props.indexes, ...this.state.indexes };\n\n    const values = indexes[row.i].values;\n\n    switch (indexes[row.i].operators[row.o].widget) {\n      case null:\n        return <span />;\n      case 'TextWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input\n              {...props}\n              onChange={(data) =>\n                this.onChangeValue(index, [data.target.value])\n              }\n              value={row.v?.[0]}\n            />\n          </Form.Field>\n        );\n      case 'DateWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input\n              type=\"date\"\n              {...props}\n              value={format(parse(row.v), 'YYYY-MM-DD')}\n            />\n          </Form.Field>\n        );\n      case 'DateRangeWidget': // 2 date inputs\n        return (\n          <React.Fragment>\n            <Form.Field style={{ flex: '1 0 auto' }}>\n              <Input\n                type=\"date\"\n                {...props}\n                value={format(parse(row.v[0]), 'YYYY-MM-DD')}\n                onChange={(data) =>\n                  this.onChangeValue(index, [data.target.value, row.v[1]])\n                }\n              />\n            </Form.Field>\n            <Form.Field style={{ flex: '1 0 auto' }}>\n              <Input\n                type=\"date\"\n                {...props}\n                value={format(parse(row.v[1]), 'YYYY-MM-DD')}\n                onChange={(data) =>\n                  this.onChangeValue(index, [row.v[0], data.target.value])\n                }\n              />\n            </Form.Field>\n          </React.Fragment>\n        );\n      case 'RelativeDateWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input step={1} type=\"number\" {...props} />\n          </Form.Field>\n        );\n      case 'MultipleSelectionWidget':\n        return (\n          <Form.Field style={{ flex: '1 0 auto', maxWidth: '93%' }}>\n            <Select\n              {...props}\n              className=\"react-select-container\"\n              classNamePrefix=\"react-select\"\n              options={\n                values\n                  ? map(toPairs(values), (value) => ({\n                      label: value[1].title,\n                      value: value[0],\n                    }))\n                  : []\n              }\n              styles={customSelectStyles}\n              placeholder={this.props.intl.formatMessage(messages.select)}\n              theme={selectTheme}\n              components={{ DropdownIndicator, Option }}\n              onChange={(data) => {\n                this.onChangeValue(\n                  index,\n                  map(data, (item) => item.value),\n                );\n              }}\n              isMulti={true}\n              value={map(row.v, (value) => ({\n                label: values?.[value]?.title || value,\n                value,\n              }))}\n            />\n          </Form.Field>\n        );\n      case 'ReferenceWidget':\n      default:\n        // if (row.o === 'plone.app.querystring.operation.string.relativePath') {\n        //   props.onChange = data => this.onChangeValue(index, data.target.value);\n        // }\n        return (\n          <Form.Field style={{ flex: '1 0 auto' }}>\n            <Input {...props} />\n          </Form.Field>\n        );\n    }\n  }\n\n  /**\n   * Change value handler\n   * @method onChangeValue\n   * @param {Number} index Index of the row.\n   * @param {String|Array} value Value of the row.\n   * @returns {undefined}\n   */\n  onChangeValue(index, value) {\n    this.props.onChange(\n      this.props.id,\n      map(this.props.value, (row, i) =>\n        index === i\n          ? {\n              ...row,\n              v: value,\n            }\n          : row,\n      ),\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      required,\n      description,\n      error,\n      value,\n      onChange,\n      onEdit,\n      fieldSet,\n      reactSelect,\n      reactSelectCreateable,\n      intl,\n    } = this.props;\n\n    const indexes = { ...this.props.indexes, ...this.state.indexes };\n\n    const Select = reactSelect.default;\n    const Creatable = reactSelectCreateable.default;\n\n    return (\n      <Form.Field\n        inline\n        required={required}\n        error={error.length > 0}\n        className={cx('query-widget', description ? 'help' : '')}\n        id={`${fieldSet || 'field'}-${id}`}\n      >\n        <Grid>\n          <Grid.Row stretched>\n            <Grid.Column width=\"12\">\n              <div className=\"simple-field-name\">\n                {intl.formatMessage(messages.Criteria)}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row stretched>\n            <Grid.Column width=\"12\">\n              {indexes &&\n                this.state.indexes &&\n                !isEmpty(indexes) &&\n                map(value, (row, index) => (\n                  <Form.Group key={index}>\n                    <div className=\"main-fields-wrapper\">\n                      <Form.Field\n                        style={{ flex: '1 0 auto', marginRight: '10px' }}\n                      >\n                        <Creatable\n                          id={`field-${id}`}\n                          name={id}\n                          disabled={onEdit !== null}\n                          className=\"react-select-container\"\n                          classNamePrefix=\"react-select\"\n                          options={map(\n                            toPairs(\n                              groupBy(\n                                toPairs(indexes),\n                                (item) => item[1].group,\n                              ),\n                            ),\n                            (group) => ({\n                              label: group[0],\n                              options: map(group[1], (field) => ({\n                                label: field[1].title,\n                                value: field[0],\n                              })),\n                            }),\n                          )}\n                          styles={customSelectStyles}\n                          theme={selectTheme}\n                          placeholder={intl.formatMessage(messages.select)}\n                          components={{ DropdownIndicator, Option }}\n                          value={{\n                            value: row.i,\n                            label: indexes[row.i]?.title,\n                          }}\n                          onCreateOption={(key) => {\n                            if (!this.state.indexes) return;\n                            if (!this.state.indexes[key]) {\n                              this.setState({\n                                indexes: {\n                                  ...this.state.indexes,\n                                  [key]: {\n                                    enabled: true,\n                                    group: 'Custom',\n                                    operations: defaultOperations,\n                                    operators: defaultOperators,\n                                    sortable: false,\n                                    title: key,\n                                    values: {},\n                                  },\n                                },\n                              });\n                            }\n                            onChange(\n                              id,\n                              map(value, (curRow, curIndex) =>\n                                curIndex === index\n                                  ? {\n                                      i: key,\n                                      o: defaultOperations[0],\n                                      v: '',\n                                    }\n                                  : curRow,\n                              ),\n                            );\n                          }}\n                          onChange={(data) =>\n                            onChange(\n                              id,\n                              map(value, (curRow, curIndex) =>\n                                curIndex === index\n                                  ? {\n                                      i: data.value,\n                                      o: indexes[data.value].operations[0],\n                                      v: '',\n                                    }\n                                  : curRow,\n                              ),\n                            )\n                          }\n                        />\n                      </Form.Field>\n                      <Form.Field style={{ flex: '1 0 auto' }}>\n                        <Select\n                          id={`field-${id}`}\n                          name={id}\n                          disabled={onEdit !== null}\n                          className=\"react-select-container\"\n                          classNamePrefix=\"react-select\"\n                          options={map(\n                            indexes[row.i].operations,\n                            (operation) => ({\n                              value: operation,\n                              label: indexes[row.i].operators[operation].title,\n                            }),\n                          )}\n                          styles={customSelectStyles}\n                          theme={selectTheme}\n                          placeholder={intl.formatMessage(messages.select)}\n                          components={{ DropdownIndicator, Option }}\n                          value={{\n                            value: row.o,\n                            label: indexes[row.i].operators[row.o].title,\n                          }}\n                          onChange={(data) =>\n                            onChange(\n                              id,\n                              map(value, (curRow, curIndex) =>\n                                curIndex === index\n                                  ? {\n                                      i: row.i,\n                                      o: data.value,\n                                      v: '',\n                                    }\n                                  : curRow,\n                              ),\n                            )\n                          }\n                        />\n                      </Form.Field>\n                      {!indexes[row.i].operators[row.o].widget && (\n                        <Button\n                          onClick={(event) => {\n                            onChange(\n                              id,\n                              remove(value, (v, i) => i !== index),\n                            );\n                            event.preventDefault();\n                          }}\n                          style={{\n                            background: 'none',\n                            paddingRight: 0,\n                            paddingLeft: 0,\n                            margin: 0,\n                          }}\n                        >\n                          <Icon name={clearSVG} size=\"24px\" className=\"close\" />\n                        </Button>\n                      )}\n                    </div>\n                    {this.getWidget(row, index, Creatable)}\n                    {indexes[row.i].operators[row.o].widget && (\n                      <Button\n                        onClick={(event) => {\n                          onChange(\n                            id,\n                            remove(value, (v, i) => i !== index),\n                          );\n                          event.preventDefault();\n                        }}\n                        style={{\n                          background: 'none',\n                          paddingRight: 0,\n                          paddingLeft: 0,\n                          margin: 0,\n                        }}\n                      >\n                        <Icon name={clearSVG} size=\"24px\" className=\"close\" />\n                      </Button>\n                    )}\n                  </Form.Group>\n                ))}\n              <Form.Group>\n                <Form.Field style={{ flex: '1 0 auto' }}>\n                  <Creatable\n                    id={`field-${id}`}\n                    name={id}\n                    disabled={onEdit !== null}\n                    className=\"react-select-container\"\n                    classNamePrefix=\"react-select\"\n                    placeholder={intl.formatMessage(messages.AddCriteria)}\n                    options={[\n                      ...map(\n                        toPairs(\n                          groupBy(toPairs(indexes), (item) => item[1].group),\n                        ),\n                        (group) => ({\n                          label: group[0],\n                          options: map(\n                            filter(group[1], (item) => item[1].enabled),\n                            (field) => ({\n                              label: field[1].title,\n                              value: field[0],\n                            }),\n                          ),\n                        }),\n                      ),\n                    ]}\n                    styles={customSelectStyles}\n                    theme={selectTheme}\n                    components={{ DropdownIndicator, Option }}\n                    value={null}\n                    onCreateOption={(key) => {\n                      if (!this.state.indexes) return;\n                      if (!this.state.indexes[key]) {\n                        this.setState({\n                          indexes: {\n                            ...this.state.indexes,\n                            [key]: {\n                              enabled: true,\n                              group: 'Custom',\n                              operations: defaultOperations,\n                              operators: defaultOperators,\n                              sortable: false,\n                              title: key,\n                              values: {},\n                            },\n                          },\n                        });\n                      }\n                      onChange(id, [\n                        ...(value || []),\n                        {\n                          i: key,\n                          o: defaultOperations[0],\n                          v: '',\n                        },\n                      ]);\n                    }}\n                    onChange={(data) => {\n                      onChange(id, [\n                        ...(value || []),\n                        {\n                          i: data.value,\n                          o: indexes[data.value].operations[0],\n                          v: '',\n                        },\n                      ]);\n                    }}\n                  />\n                </Form.Field>\n              </Form.Group>\n              {map(error, (message) => (\n                <Label key={message} basic color=\"red\" pointing>\n                  {message}\n                </Label>\n              ))}\n            </Grid.Column>\n          </Grid.Row>\n          {description && (\n            <Grid.Row stretched>\n              <Grid.Column stretched width=\"12\">\n                <p className=\"help\">{description}</p>\n              </Grid.Column>\n            </Grid.Row>\n          )}\n        </Grid>\n      </Form.Field>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['reactSelect', 'reactSelectCreateable']),\n  connect(\n    (state) => ({\n      indexes: filterIndexes(state.querystring.indexes),\n      indexesLoaded: state.querystring.loaded,\n    }),\n    { getQuerystring },\n  ),\n)(QuerystringWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Criteria","defaultMessage":"Criteria"},{"id":"Add criteria","defaultMessage":"Add criteria"},{"id":"querystring-widget-select","defaultMessage":"Select…"}]}},"sourceType":"module","externalDependencies":[]}