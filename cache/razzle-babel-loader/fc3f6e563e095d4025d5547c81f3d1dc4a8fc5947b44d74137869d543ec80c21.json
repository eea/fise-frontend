{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";\nimport _keys from \"lodash/keys\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Add/Add.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Add container.\n * @module components/manage/Add/Add\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BodyClass, Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Button, Grid, Menu } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport { v4 as uuid } from 'uuid';\nimport qs from 'query-string';\nimport { toast } from 'react-toastify';\nimport { createContent, getSchema, changeLanguage } from '@plone/volto/actions';\nimport { Form, Icon, Toolbar, Sidebar, Toast, TranslationObject } from '@plone/volto/components';\nimport { getBaseUrl, hasBlocksData, flattenToAppURL, getBlocksFieldname, getBlocksLayoutFieldname, getLanguageIndependentFields, langmap, normalizeLanguageName } from '@plone/volto/helpers';\nimport { preloadLazyLibs } from '@plone/volto/helpers/Loadable';\nimport config from '@plone/volto/registry';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nconst messages = defineMessages({\n  add: {\n    \"id\": \"Add {type}\",\n    \"defaultMessage\": \"Add {type}\"\n  },\n  save: {\n    \"id\": \"Save\",\n    \"defaultMessage\": \"Save\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  translateTo: {\n    \"id\": \"Translate to {lang}\",\n    \"defaultMessage\": \"Translate to {lang}\"\n  }\n});\n\n/**\n * Add class.\n * @class Add\n * @extends Component\n */\nclass Add extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    var _config$blocks;\n    super(props);\n    _defineProperty(this, \"form\", /*#__PURE__*/React.createRef());\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    if ((_config$blocks = config.blocks) !== null && _config$blocks !== void 0 && _config$blocks.initialBlocks[props.type]) {\n      this.initialBlocksLayout = config.blocks.initialBlocks[props.type].map(item => uuid());\n      this.initialBlocks = this.initialBlocksLayout.reduce((acc, value, index) => _objectSpread(_objectSpread({}, acc), {}, {\n        [value]: {\n          '@type': config.blocks.initialBlocks[props.type][index]\n        }\n      }), {});\n    }\n    this.state = {\n      isClient: false,\n      error: null,\n      formSelected: 'addForm'\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSchema(this.props.type, getBaseUrl(this.props.pathname));\n    this.setState({\n      isClient: true\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.createRequest.loading && nextProps.createRequest.loaded && nextProps.content['@type'] === this.props.type) {\n      this.props.history.push(this.props.returnUrl || flattenToAppURL(nextProps.content['@id']));\n    }\n    if (this.props.createRequest.loading && nextProps.createRequest.error) {\n      var _nextProps$createRequ, _nextProps$createRequ2, _nextProps$createRequ3, _DOMParser$parseFromS, _DOMParser$parseFromS2;\n      const message = ((_nextProps$createRequ = nextProps.createRequest.error.response) === null || _nextProps$createRequ === void 0 ? void 0 : (_nextProps$createRequ2 = _nextProps$createRequ.body) === null || _nextProps$createRequ2 === void 0 ? void 0 : _nextProps$createRequ2.message) || ((_nextProps$createRequ3 = nextProps.createRequest.error.response) === null || _nextProps$createRequ3 === void 0 ? void 0 : _nextProps$createRequ3.text);\n      const error = ((_DOMParser$parseFromS = new DOMParser().parseFromString(message, 'text/html')) === null || _DOMParser$parseFromS === void 0 ? void 0 : (_DOMParser$parseFromS2 = _DOMParser$parseFromS.all[0]) === null || _DOMParser$parseFromS2 === void 0 ? void 0 : _DOMParser$parseFromS2.textContent) || message;\n      this.setState({\n        error: error\n      });\n      toast.error(__jsx(Toast, {\n        error: true,\n        title: this.props.intl.formatMessage(messages.error),\n        content: `${nextProps.createRequest.error.status}:  ${error}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    var _this$props$location, _this$props$location$;\n    this.props.createContent(getBaseUrl(this.props.pathname), _objectSpread(_objectSpread({}, data), {}, {\n      '@static_behaviors': this.props.schema.definitions ? _keys(this.props.schema.definitions) : null,\n      '@type': this.props.type\n    }, config.settings.isMultilingual && ((_this$props$location = this.props.location) === null || _this$props$location === void 0 ? void 0 : (_this$props$location$ = _this$props$location.state) === null || _this$props$location$ === void 0 ? void 0 : _this$props$location$.translationOf) && {\n      translation_of: this.props.location.state.translationOf,\n      language: this.props.location.state.language\n    }));\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    var _this$props$location2, _this$props$location3;\n    if ((_this$props$location2 = this.props.location) !== null && _this$props$location2 !== void 0 && (_this$props$location3 = _this$props$location2.state) !== null && _this$props$location3 !== void 0 && _this$props$location3.translationOf) {\n      var _this$props$location4, _this$props$location5;\n      const language = this.props.location.state.languageFrom;\n      const langFileName = normalizeLanguageName(language);\n      import('@root/../locales/' + langFileName + '.json').then(locale => {\n        this.props.changeLanguage(language, locale.default);\n      });\n      this.props.history.push((_this$props$location4 = this.props.location) === null || _this$props$location4 === void 0 ? void 0 : (_this$props$location5 = _this$props$location4.state) === null || _this$props$location5 === void 0 ? void 0 : _this$props$location5.translationOf);\n    } else {\n      this.props.history.push(getBaseUrl(this.props.pathname));\n    }\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.props.schemaRequest.loaded) {\n      var _this$props$location6, _this$props$location7, _langmap$this$props$l, _this$props$location8, _this$props$location9, _this$props$schema$pr, _this$props$schema$pr2, _this$props$schema$pr3, _this$props$schema$pr4, _this$props$schema$pr5, _this$props$schema$pr6, _this$props, _this$props$schema;\n      const visual = hasBlocksData(this.props.schema.properties);\n      const blocksFieldname = getBlocksFieldname(this.props.schema.properties);\n      const blocksLayoutFieldname = getBlocksLayoutFieldname(this.props.schema.properties);\n      const translationObject = (_this$props$location6 = this.props.location) === null || _this$props$location6 === void 0 ? void 0 : (_this$props$location7 = _this$props$location6.state) === null || _this$props$location7 === void 0 ? void 0 : _this$props$location7.translationObject;\n      const translateTo = translationObject ? langmap === null || langmap === void 0 ? void 0 : (_langmap$this$props$l = langmap[(_this$props$location8 = this.props.location) === null || _this$props$location8 === void 0 ? void 0 : (_this$props$location9 = _this$props$location8.state) === null || _this$props$location9 === void 0 ? void 0 : _this$props$location9.language]) === null || _langmap$this$props$l === void 0 ? void 0 : _langmap$this$props$l.nativeName : null;\n\n      // Lookup initialBlocks and initialBlocksLayout within schema\n      const schemaBlocks = (_this$props$schema$pr = this.props.schema.properties[blocksFieldname]) === null || _this$props$schema$pr === void 0 ? void 0 : _this$props$schema$pr.default;\n      const schemaBlocksLayout = (_this$props$schema$pr2 = this.props.schema.properties[blocksLayoutFieldname]) === null || _this$props$schema$pr2 === void 0 ? void 0 : (_this$props$schema$pr3 = _this$props$schema$pr2.default) === null || _this$props$schema$pr3 === void 0 ? void 0 : _this$props$schema$pr3.items;\n      let initialBlocks = this.initialBlocks;\n      let initialBlocksLayout = this.initialBlocksLayout;\n      if (!_isEmpty(schemaBlocksLayout) && !_isEmpty(schemaBlocks)) {\n        initialBlocks = {};\n        initialBlocksLayout = [];\n        schemaBlocksLayout.forEach(value => {\n          if (!_isEmpty(schemaBlocks[value])) {\n            let newUid = uuid();\n            initialBlocksLayout.push(newUid);\n            initialBlocks[newUid] = schemaBlocks[value];\n            initialBlocks[newUid].block = newUid;\n\n            // Layout ID - keep a reference to the original block id within layout\n            initialBlocks[newUid]['@layout'] = value;\n          }\n        });\n      }\n      //copy blocks from translationObject\n      if (translationObject && blocksFieldname && blocksLayoutFieldname) {\n        initialBlocks = {};\n        initialBlocksLayout = [];\n        const originalBlocks = JSON.parse(JSON.stringify(translationObject[blocksFieldname]));\n        const originalBlocksLayout = translationObject[blocksLayoutFieldname].items;\n        originalBlocksLayout.forEach(value => {\n          if (!_isEmpty(originalBlocks[value])) {\n            let newUid = uuid();\n            initialBlocksLayout.push(newUid);\n            initialBlocks[newUid] = originalBlocks[value];\n            initialBlocks[newUid].block = newUid;\n\n            // Layout ID - keep a reference to the original block id within layout\n            initialBlocks[newUid]['@canonical'] = value;\n          }\n        });\n      }\n      const lifData = () => {\n        const data = {};\n        if (translationObject) {\n          getLanguageIndependentFields(this.props.schema).forEach(lif => data[lif] = translationObject[lif]);\n        }\n        return data;\n      };\n      const pageAdd = __jsx(\"div\", {\n        id: \"page-add\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 9\n        }\n      }, __jsx(Helmet, {\n        title: this.props.intl.formatMessage(messages.add, {\n          type: this.props.type\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }\n      }), __jsx(Form, {\n        ref: this.form,\n        key: \"translated-or-new-content-form\",\n        schema: this.props.schema,\n        type: this.props.type,\n        formData: _objectSpread(_objectSpread(_objectSpread({}, blocksFieldname && {\n          [blocksFieldname]: initialBlocks || ((_this$props$schema$pr4 = this.props.schema.properties[blocksFieldname]) === null || _this$props$schema$pr4 === void 0 ? void 0 : _this$props$schema$pr4.default)\n        }), blocksLayoutFieldname && {\n          [blocksLayoutFieldname]: {\n            items: initialBlocksLayout || ((_this$props$schema$pr5 = this.props.schema.properties[blocksLayoutFieldname]) === null || _this$props$schema$pr5 === void 0 ? void 0 : (_this$props$schema$pr6 = _this$props$schema$pr5.default) === null || _this$props$schema$pr6 === void 0 ? void 0 : _this$props$schema$pr6.items)\n          }\n        }), lifData()),\n        requestError: this.state.error,\n        onSubmit: this.onSubmit,\n        hideActions: true,\n        pathname: this.props.pathname,\n        visual: visual,\n        title: (_this$props = this.props) !== null && _this$props !== void 0 && (_this$props$schema = _this$props.schema) !== null && _this$props$schema !== void 0 && _this$props$schema.title ? this.props.intl.formatMessage(messages.add, {\n          type: this.props.schema.title\n        }) : null,\n        loading: this.props.createRequest.loading,\n        isFormSelected: this.state.formSelected === 'addForm',\n        onSelectForm: () => {\n          this.setState({\n            formSelected: 'addForm'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }\n      }), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(React.Fragment, null, __jsx(Button, {\n          id: \"toolbar-save\",\n          className: \"save\",\n          \"aria-label\": this.props.intl.formatMessage(messages.save),\n          onClick: () => this.form.current.onSubmit(),\n          loading: this.props.createRequest.loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 21\n          }\n        }, __jsx(Icon, {\n          name: saveSVG,\n          className: \"circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.save),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 23\n          }\n        })), __jsx(Button, {\n          className: \"cancel\",\n          onClick: () => this.onCancel(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 21\n          }\n        }, __jsx(Icon, {\n          name: clearSVG,\n          className: \"circled\",\n          \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.cancel),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 23\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 15\n        }\n      })), visual && this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('sidebar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }\n      }, __jsx(Sidebar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 15\n        }\n      })));\n      return translationObject ? __jsx(React.Fragment, null, __jsx(BodyClass, {\n        className: \"babel-view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }\n      }), __jsx(Grid, {\n        celled: \"internally\",\n        stackable: true,\n        columns: 2,\n        id: \"page-add-translation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }\n      }, __jsx(Grid.Column, {\n        className: \"source-object\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }\n      }, __jsx(TranslationObject, {\n        translationObject: translationObject,\n        schema: this.props.schema,\n        pathname: this.props.pathname,\n        visual: visual,\n        isFormSelected: this.state.formSelected === 'translationObjectForm',\n        onSelectForm: () => {\n          this.setState({\n            formSelected: 'translationObjectForm'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 15\n        }\n      })), __jsx(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"new-translation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 15\n        }\n      }, __jsx(Menu, {\n        pointing: true,\n        secondary: true,\n        attached: true,\n        tabular: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 17\n        }\n      }, __jsx(Menu.Item, {\n        name: translateTo.toUpperCase(),\n        active: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 19\n        }\n      }, `${this.props.intl.formatMessage(messages.translateTo, {\n        lang: translateTo\n      })}`)), pageAdd)))) : pageAdd;\n    }\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 12\n      }\n    });\n  }\n}\n_defineProperty(Add, \"propTypes\", {\n  createContent: PropTypes.func.isRequired,\n  getSchema: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  schema: PropTypes.objectOf(PropTypes.any),\n  content: PropTypes.shape({\n    // eslint-disable-line react/no-unused-prop-types\n    '@id': PropTypes.string,\n    '@type': PropTypes.string\n  }),\n  returnUrl: PropTypes.string,\n  createRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  schemaRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  type: PropTypes.string,\n  location: PropTypes.objectOf(PropTypes.any)\n});\n_defineProperty(Add, \"defaultProps\", {\n  schema: null,\n  content: null,\n  returnUrl: null,\n  type: 'Default'\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  createRequest: state.content.create,\n  schemaRequest: state.schema,\n  content: state.content.data,\n  schema: state.schema.schema,\n  pathname: props.location.pathname,\n  returnUrl: qs.parse(props.location.search).return_url,\n  type: qs.parse(props.location.search).type\n}), {\n  createContent,\n  getSchema,\n  changeLanguage\n}), preloadLazyLibs('cms'))(Add);","map":{"version":3,"names":["React","Component","PropTypes","BodyClass","Helmet","connect","compose","defineMessages","injectIntl","Button","Grid","Menu","Portal","v4","uuid","qs","toast","createContent","getSchema","changeLanguage","Form","Icon","Toolbar","Sidebar","Toast","TranslationObject","getBaseUrl","hasBlocksData","flattenToAppURL","getBlocksFieldname","getBlocksLayoutFieldname","getLanguageIndependentFields","langmap","normalizeLanguageName","preloadLazyLibs","config","saveSVG","clearSVG","messages","add","save","cancel","error","translateTo","Add","constructor","props","createRef","onCancel","bind","onSubmit","blocks","initialBlocks","type","initialBlocksLayout","map","item","reduce","acc","value","index","state","isClient","formSelected","componentDidMount","pathname","setState","UNSAFE_componentWillReceiveProps","nextProps","createRequest","loading","loaded","content","history","push","returnUrl","message","response","body","text","DOMParser","parseFromString","all","textContent","intl","formatMessage","status","data","schema","definitions","settings","isMultilingual","location","translationOf","translation_of","language","languageFrom","langFileName","then","locale","default","render","schemaRequest","visual","properties","blocksFieldname","blocksLayoutFieldname","translationObject","nativeName","schemaBlocks","schemaBlocksLayout","items","forEach","newUid","block","originalBlocks","JSON","parse","stringify","originalBlocksLayout","lifData","lif","pageAdd","form","title","document","getElementById","current","toUpperCase","lang","func","isRequired","string","objectOf","any","shape","bool","create","search","return_url"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Add/Add.jsx"],"sourcesContent":["/**\n * Add container.\n * @module components/manage/Add/Add\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BodyClass, Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { keys, isEmpty } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Button, Grid, Menu } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport { v4 as uuid } from 'uuid';\nimport qs from 'query-string';\nimport { toast } from 'react-toastify';\n\nimport { createContent, getSchema, changeLanguage } from '@plone/volto/actions';\nimport {\n  Form,\n  Icon,\n  Toolbar,\n  Sidebar,\n  Toast,\n  TranslationObject,\n} from '@plone/volto/components';\nimport {\n  getBaseUrl,\n  hasBlocksData,\n  flattenToAppURL,\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  getLanguageIndependentFields,\n  langmap,\n  normalizeLanguageName,\n} from '@plone/volto/helpers';\n\nimport { preloadLazyLibs } from '@plone/volto/helpers/Loadable';\n\nimport config from '@plone/volto/registry';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  add: {\n    id: 'Add {type}',\n    defaultMessage: 'Add {type}',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  translateTo: {\n    id: 'Translate to {lang}',\n    defaultMessage: 'Translate to {lang}',\n  },\n});\n\n/**\n * Add class.\n * @class Add\n * @extends Component\n */\nclass Add extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    createContent: PropTypes.func.isRequired,\n    getSchema: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    schema: PropTypes.objectOf(PropTypes.any),\n    content: PropTypes.shape({\n      // eslint-disable-line react/no-unused-prop-types\n      '@id': PropTypes.string,\n      '@type': PropTypes.string,\n    }),\n    returnUrl: PropTypes.string,\n    createRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    schemaRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    type: PropTypes.string,\n    location: PropTypes.objectOf(PropTypes.any),\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    schema: null,\n    content: null,\n    returnUrl: null,\n    type: 'Default',\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    if (config.blocks?.initialBlocks[props.type]) {\n      this.initialBlocksLayout = config.blocks.initialBlocks[\n        props.type\n      ].map((item) => uuid());\n      this.initialBlocks = this.initialBlocksLayout.reduce(\n        (acc, value, index) => ({\n          ...acc,\n          [value]: { '@type': config.blocks.initialBlocks[props.type][index] },\n        }),\n        {},\n      );\n    }\n    this.state = {\n      isClient: false,\n      error: null,\n      formSelected: 'addForm',\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSchema(this.props.type, getBaseUrl(this.props.pathname));\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.createRequest.loading &&\n      nextProps.createRequest.loaded &&\n      nextProps.content['@type'] === this.props.type\n    ) {\n      this.props.history.push(\n        this.props.returnUrl || flattenToAppURL(nextProps.content['@id']),\n      );\n    }\n\n    if (this.props.createRequest.loading && nextProps.createRequest.error) {\n      const message =\n        nextProps.createRequest.error.response?.body?.message ||\n        nextProps.createRequest.error.response?.text;\n\n      const error =\n        new DOMParser().parseFromString(message, 'text/html')?.all[0]\n          ?.textContent || message;\n\n      this.setState({ error: error });\n\n      toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.error)}\n          content={`${nextProps.createRequest.error.status}:  ${error}`}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.createContent(getBaseUrl(this.props.pathname), {\n      ...data,\n      '@static_behaviors': this.props.schema.definitions\n        ? keys(this.props.schema.definitions)\n        : null,\n      '@type': this.props.type,\n      ...(config.settings.isMultilingual &&\n        this.props.location?.state?.translationOf && {\n          translation_of: this.props.location.state.translationOf,\n          language: this.props.location.state.language,\n        }),\n    });\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    if (this.props.location?.state?.translationOf) {\n      const language = this.props.location.state.languageFrom;\n      const langFileName = normalizeLanguageName(language);\n      import('@root/../locales/' + langFileName + '.json').then((locale) => {\n        this.props.changeLanguage(language, locale.default);\n      });\n      this.props.history.push(this.props.location?.state?.translationOf);\n    } else {\n      this.props.history.push(getBaseUrl(this.props.pathname));\n    }\n  }\n\n  form = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.props.schemaRequest.loaded) {\n      const visual = hasBlocksData(this.props.schema.properties);\n      const blocksFieldname = getBlocksFieldname(this.props.schema.properties);\n      const blocksLayoutFieldname = getBlocksLayoutFieldname(\n        this.props.schema.properties,\n      );\n      const translationObject = this.props.location?.state?.translationObject;\n\n      const translateTo = translationObject\n        ? langmap?.[this.props.location?.state?.language]?.nativeName\n        : null;\n\n      // Lookup initialBlocks and initialBlocksLayout within schema\n      const schemaBlocks = this.props.schema.properties[blocksFieldname]\n        ?.default;\n      const schemaBlocksLayout = this.props.schema.properties[\n        blocksLayoutFieldname\n      ]?.default?.items;\n      let initialBlocks = this.initialBlocks;\n      let initialBlocksLayout = this.initialBlocksLayout;\n\n      if (!isEmpty(schemaBlocksLayout) && !isEmpty(schemaBlocks)) {\n        initialBlocks = {};\n        initialBlocksLayout = [];\n        schemaBlocksLayout.forEach((value) => {\n          if (!isEmpty(schemaBlocks[value])) {\n            let newUid = uuid();\n            initialBlocksLayout.push(newUid);\n            initialBlocks[newUid] = schemaBlocks[value];\n            initialBlocks[newUid].block = newUid;\n\n            // Layout ID - keep a reference to the original block id within layout\n            initialBlocks[newUid]['@layout'] = value;\n          }\n        });\n      }\n      //copy blocks from translationObject\n      if (translationObject && blocksFieldname && blocksLayoutFieldname) {\n        initialBlocks = {};\n        initialBlocksLayout = [];\n        const originalBlocks = JSON.parse(\n          JSON.stringify(translationObject[blocksFieldname]),\n        );\n        const originalBlocksLayout =\n          translationObject[blocksLayoutFieldname].items;\n\n        originalBlocksLayout.forEach((value) => {\n          if (!isEmpty(originalBlocks[value])) {\n            let newUid = uuid();\n            initialBlocksLayout.push(newUid);\n            initialBlocks[newUid] = originalBlocks[value];\n            initialBlocks[newUid].block = newUid;\n\n            // Layout ID - keep a reference to the original block id within layout\n            initialBlocks[newUid]['@canonical'] = value;\n          }\n        });\n      }\n\n      const lifData = () => {\n        const data = {};\n        if (translationObject) {\n          getLanguageIndependentFields(this.props.schema).forEach(\n            (lif) => (data[lif] = translationObject[lif]),\n          );\n        }\n        return data;\n      };\n\n      const pageAdd = (\n        <div id=\"page-add\">\n          <Helmet\n            title={this.props.intl.formatMessage(messages.add, {\n              type: this.props.type,\n            })}\n          />\n          <Form\n            ref={this.form}\n            key=\"translated-or-new-content-form\"\n            schema={this.props.schema}\n            type={this.props.type}\n            formData={{\n              ...(blocksFieldname && {\n                [blocksFieldname]:\n                  initialBlocks ||\n                  this.props.schema.properties[blocksFieldname]?.default,\n              }),\n              ...(blocksLayoutFieldname && {\n                [blocksLayoutFieldname]: {\n                  items:\n                    initialBlocksLayout ||\n                    this.props.schema.properties[blocksLayoutFieldname]?.default\n                      ?.items,\n                },\n              }),\n              // Copy the Language Independent Fields values from the to-be translated content\n              // into the default values of the translated content Add form.\n              ...lifData(),\n            }}\n            requestError={this.state.error}\n            onSubmit={this.onSubmit}\n            hideActions\n            pathname={this.props.pathname}\n            visual={visual}\n            title={\n              this.props?.schema?.title\n                ? this.props.intl.formatMessage(messages.add, {\n                    type: this.props.schema.title,\n                  })\n                : null\n            }\n            loading={this.props.createRequest.loading}\n            isFormSelected={this.state.formSelected === 'addForm'}\n            onSelectForm={() => {\n              this.setState({ formSelected: 'addForm' });\n            }}\n          />\n          {this.state.isClient && (\n            <Portal node={document.getElementById('toolbar')}>\n              <Toolbar\n                pathname={this.props.pathname}\n                hideDefaultViewButtons\n                inner={\n                  <>\n                    <Button\n                      id=\"toolbar-save\"\n                      className=\"save\"\n                      aria-label={this.props.intl.formatMessage(messages.save)}\n                      onClick={() => this.form.current.onSubmit()}\n                      loading={this.props.createRequest.loading}\n                    >\n                      <Icon\n                        name={saveSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.save)}\n                      />\n                    </Button>\n                    <Button className=\"cancel\" onClick={() => this.onCancel()}>\n                      <Icon\n                        name={clearSVG}\n                        className=\"circled\"\n                        aria-label={this.props.intl.formatMessage(\n                          messages.cancel,\n                        )}\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.cancel)}\n                      />\n                    </Button>\n                  </>\n                }\n              />\n            </Portal>\n          )}\n          {visual && this.state.isClient && (\n            <Portal node={document.getElementById('sidebar')}>\n              <Sidebar />\n            </Portal>\n          )}\n        </div>\n      );\n\n      return translationObject ? (\n        <>\n          <BodyClass className=\"babel-view\" />\n          <Grid\n            celled=\"internally\"\n            stackable\n            columns={2}\n            id=\"page-add-translation\"\n          >\n            <Grid.Column className=\"source-object\">\n              <TranslationObject\n                translationObject={translationObject}\n                schema={this.props.schema}\n                pathname={this.props.pathname}\n                visual={visual}\n                isFormSelected={\n                  this.state.formSelected === 'translationObjectForm'\n                }\n                onSelectForm={() => {\n                  this.setState({\n                    formSelected: 'translationObjectForm',\n                  });\n                }}\n              />\n            </Grid.Column>\n            <Grid.Column>\n              <div className=\"new-translation\">\n                <Menu pointing secondary attached tabular>\n                  <Menu.Item name={translateTo.toUpperCase()} active={true}>\n                    {`${this.props.intl.formatMessage(messages.translateTo, {\n                      lang: translateTo,\n                    })}`}\n                  </Menu.Item>\n                </Menu>\n                {pageAdd}\n              </div>\n            </Grid.Column>\n          </Grid>\n        </>\n      ) : (\n        pageAdd\n      );\n    }\n    return <div />;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      createRequest: state.content.create,\n      schemaRequest: state.schema,\n      content: state.content.data,\n      schema: state.schema.schema,\n      pathname: props.location.pathname,\n      returnUrl: qs.parse(props.location.search).return_url,\n      type: qs.parse(props.location.search).type,\n    }),\n    { createContent, getSchema, changeLanguage },\n  ),\n  preloadLazyLibs('cms'),\n)(Add);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Add {type}","defaultMessage":"Add {type}"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Error","defaultMessage":"Error"},{"id":"Translate to {lang}","defaultMessage":"Translate to {lang}"}]}},"sourceType":"module","externalDependencies":[]}