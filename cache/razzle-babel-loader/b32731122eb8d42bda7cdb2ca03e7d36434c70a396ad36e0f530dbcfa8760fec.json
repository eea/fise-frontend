{"ast":null,"code":"import _isNil from \"lodash/isNil\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Blocks/CustomConnectedBlock/View.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React, { useMemo } from 'react';\nimport { compose } from 'redux';\nimport config from '@plone/volto/registry';\nimport { VisibilitySensor } from '@eeacms/volto-datablocks/components';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport './style.less';\nconst DefaultView = props => __jsx(React.Fragment, null, props.mode === 'edit' && !props.data.type ? __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }\n}, \"Please select a block type from sidebar\") : props.mode === 'edit' && props.data.type ? __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}, \"Block type selected: \", props.data.type) : '');\nconst View = props => {\n  const type = props.data.type;\n  const CustomView = useMemo(() => {\n    var _config$blocks$blocks, _config$blocks$blocks2;\n    return ((_config$blocks$blocks = config.blocks.blocksConfig.custom_connected_block.blocks) === null || _config$blocks$blocks === void 0 ? void 0 : (_config$blocks$blocks2 = _config$blocks$blocks[type]) === null || _config$blocks$blocks2 === void 0 ? void 0 : _config$blocks$blocks2.view) || null;\n  }, [type]);\n  const RenderCustomConnectedBlock = useMemo(() => {\n    return CustomView || DefaultView;\n  }, [CustomView]);\n  return __jsx(RenderCustomConnectedBlock, _extends({}, props, {\n    mode: props.mode,\n    placeholder: !_isNil(props.provider_data) ? props.data.placeholder : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }));\n};\nconst BlockView = compose(connectToProviderData(props => {\n  var _props$data;\n  return {\n    provider_url: (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.provider_url\n  };\n}))(View);\nexport { View };\nexport default (props => {\n  return __jsx(VisibilitySensor, {\n    Placeholder: () => __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 42\n      }\n    }, \"loading....\\xA0\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(BlockView, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  })));\n});","map":{"version":3,"names":["React","useMemo","compose","config","VisibilitySensor","connectToProviderData","DefaultView","props","mode","data","type","View","CustomView","blocks","blocksConfig","custom_connected_block","view","RenderCustomConnectedBlock","provider_data","placeholder","BlockView","provider_url"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Blocks/CustomConnectedBlock/View.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { isNil } from 'lodash';\nimport { compose } from 'redux';\nimport config from '@plone/volto/registry';\nimport { VisibilitySensor } from '@eeacms/volto-datablocks/components';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport './style.less';\n\nconst DefaultView = (props) => (\n  <>\n    {props.mode === 'edit' && !props.data.type ? (\n      <p>Please select a block type from sidebar</p>\n    ) : props.mode === 'edit' && props.data.type ? (\n      <p>Block type selected: {props.data.type}</p>\n    ) : (\n      ''\n    )}\n  </>\n);\n\nconst View = (props) => {\n  const type = props.data.type;\n\n  const CustomView = useMemo(() => {\n    return (\n      config.blocks.blocksConfig.custom_connected_block.blocks?.[type]?.view ||\n      null\n    );\n  }, [type]);\n\n  const RenderCustomConnectedBlock = useMemo(() => {\n    return CustomView || DefaultView;\n  }, [CustomView]);\n\n  return (\n    <RenderCustomConnectedBlock\n      {...props}\n      mode={props.mode}\n      placeholder={!isNil(props.provider_data) ? props.data.placeholder : null}\n    />\n  );\n};\n\nconst BlockView = compose(\n  connectToProviderData((props) => ({\n    provider_url: props.data?.provider_url,\n  })),\n)(View);\n\nexport { View };\n\nexport default (props) => {\n  return (\n    <VisibilitySensor Placeholder={() => <div>loading....&nbsp;</div>}>\n      <BlockView {...props} />\n    </VisibilitySensor>\n  );\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAEtC,SAASC,OAAO,QAAQ,OAAO;AAC/B,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,SAASC,qBAAqB,QAAQ,+BAA+B;AACrE,OAAO,cAAc;AAErB,MAAMC,WAAW,GAAIC,KAAK,IACxB,4BACGA,KAAK,CAACC,IAAI,KAAK,MAAM,IAAI,CAACD,KAAK,CAACE,IAAI,CAACC,IAAI,GACxC;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,6CAA8C,GAC5CH,KAAK,CAACC,IAAI,KAAK,MAAM,IAAID,KAAK,CAACE,IAAI,CAACC,IAAI,GAC1C;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,4BAAyBH,KAAK,CAACE,IAAI,CAACC,IAAI,CAAK,GAE7C,EACD,CAEJ;AAED,MAAMC,IAAI,GAAIJ,KAAK,IAAK;EACtB,MAAMG,IAAI,GAAGH,KAAK,CAACE,IAAI,CAACC,IAAI;EAE5B,MAAME,UAAU,GAAGX,OAAO,CAAC,MAAM;IAAA;IAC/B,OACE,0BAAAE,MAAM,CAACU,MAAM,CAACC,YAAY,CAACC,sBAAsB,CAACF,MAAM,oFAAxD,sBAA2DH,IAAI,CAAC,2DAAhE,uBAAkEM,IAAI,KACtE,IAAI;EAER,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,MAAMO,0BAA0B,GAAGhB,OAAO,CAAC,MAAM;IAC/C,OAAOW,UAAU,IAAIN,WAAW;EAClC,CAAC,EAAE,CAACM,UAAU,CAAC,CAAC;EAEhB,OACE,MAAC,0BAA0B,eACrBL,KAAK;IACT,IAAI,EAAEA,KAAK,CAACC,IAAK;IACjB,WAAW,EAAE,CAAC,OAAMD,KAAK,CAACW,aAAa,CAAC,GAAGX,KAAK,CAACE,IAAI,CAACU,WAAW,GAAG,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACzE;AAEN,CAAC;AAED,MAAMC,SAAS,GAAGlB,OAAO,CACvBG,qBAAqB,CAAEE,KAAK;EAAA;EAAA,OAAM;IAChCc,YAAY,iBAAEd,KAAK,CAACE,IAAI,gDAAV,YAAYY;EAC5B,CAAC;AAAA,CAAC,CAAC,CACJ,CAACV,IAAI,CAAC;AAEP,SAASA,IAAI;AAEb,gBAAgBJ,KAAK,IAAK;EACxB,OACE,MAAC,gBAAgB;IAAC,WAAW,EAAE,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,qBAA6B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAChE,MAAC,SAAS,eAAKA,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,CACP;AAEvB,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}