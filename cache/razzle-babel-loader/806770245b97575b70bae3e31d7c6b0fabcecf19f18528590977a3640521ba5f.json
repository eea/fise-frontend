{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { SET_TABLEAU_API } from '@eeacms/volto-tableau/constants';\nconst initialState = {\n  loading: {},\n  loaded: {},\n  errors: {}\n};\nexport default function tableau(state = initialState, action = {}) {\n  const loading = _objectSpread({}, state.loading);\n  const loaded = _objectSpread({}, state.loaded);\n  const errors = _objectSpread({}, state.errors);\n  switch (action.type) {\n    case `${SET_TABLEAU_API}_PENDING`:\n      loading[action.version] = true;\n      loaded[action.version] = false;\n      errors[action.version] = false;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: _objectSpread({}, loading),\n        loaded: _objectSpread({}, loaded),\n        errors: _objectSpread({}, errors)\n      });\n    case `${SET_TABLEAU_API}_SUCCESS`:\n      loading[action.version] = false;\n      loaded[action.version] = true;\n      errors[action.version] = false;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [action.version]: action.api,\n        loading: _objectSpread({}, loading),\n        loaded: _objectSpread({}, loaded),\n        errors: _objectSpread({}, errors)\n      });\n    case `${SET_TABLEAU_API}_FAILED`:\n      loading[action.version] = false;\n      loaded[action.version] = false;\n      errors[action.version] = true;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: _objectSpread({}, loading),\n        loaded: _objectSpread({}, loaded),\n        errors: _objectSpread({}, errors)\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["SET_TABLEAU_API","initialState","loading","loaded","errors","tableau","state","action","type","version","api"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-tableau/src/store.js"],"sourcesContent":["import { SET_TABLEAU_API } from '@eeacms/volto-tableau/constants';\n\nconst initialState = {\n  loading: {},\n  loaded: {},\n  errors: {},\n};\n\nexport default function tableau(state = initialState, action = {}) {\n  const loading = { ...state.loading };\n  const loaded = { ...state.loaded };\n  const errors = { ...state.errors };\n\n  switch (action.type) {\n    case `${SET_TABLEAU_API}_PENDING`:\n      loading[action.version] = true;\n      loaded[action.version] = false;\n      errors[action.version] = false;\n\n      return {\n        ...state,\n        loading: {\n          ...loading,\n        },\n        loaded: {\n          ...loaded,\n        },\n        errors: {\n          ...errors,\n        },\n      };\n\n    case `${SET_TABLEAU_API}_SUCCESS`:\n      loading[action.version] = false;\n      loaded[action.version] = true;\n      errors[action.version] = false;\n      return {\n        ...state,\n        [action.version]: action.api,\n        loading: {\n          ...loading,\n        },\n        loaded: {\n          ...loaded,\n        },\n        errors: {\n          ...errors,\n        },\n      };\n\n    case `${SET_TABLEAU_API}_FAILED`:\n      loading[action.version] = false;\n      loaded[action.version] = false;\n      errors[action.version] = true;\n\n      return {\n        ...state,\n        loading: {\n          ...loading,\n        },\n        loaded: {\n          ...loaded,\n        },\n        errors: {\n          ...errors,\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;AAAA,SAASA,eAAe,QAAQ,iCAAiC;AAEjE,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,CAAC,CAAC;EACXC,MAAM,EAAE,CAAC,CAAC;EACVC,MAAM,EAAE,CAAC;AACX,CAAC;AAED,eAAe,SAASC,OAAO,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,GAAG,CAAC,CAAC,EAAE;EACjE,MAAML,OAAO,qBAAQI,KAAK,CAACJ,OAAO,CAAE;EACpC,MAAMC,MAAM,qBAAQG,KAAK,CAACH,MAAM,CAAE;EAClC,MAAMC,MAAM,qBAAQE,KAAK,CAACF,MAAM,CAAE;EAElC,QAAQG,MAAM,CAACC,IAAI;IACjB,KAAM,GAAER,eAAgB,UAAS;MAC/BE,OAAO,CAACK,MAAM,CAACE,OAAO,CAAC,GAAG,IAAI;MAC9BN,MAAM,CAACI,MAAM,CAACE,OAAO,CAAC,GAAG,KAAK;MAC9BL,MAAM,CAACG,MAAM,CAACE,OAAO,CAAC,GAAG,KAAK;MAE9B,uCACKH,KAAK;QACRJ,OAAO,oBACFA,OAAO,CACX;QACDC,MAAM,oBACDA,MAAM,CACV;QACDC,MAAM,oBACDA,MAAM;MACV;IAGL,KAAM,GAAEJ,eAAgB,UAAS;MAC/BE,OAAO,CAACK,MAAM,CAACE,OAAO,CAAC,GAAG,KAAK;MAC/BN,MAAM,CAACI,MAAM,CAACE,OAAO,CAAC,GAAG,IAAI;MAC7BL,MAAM,CAACG,MAAM,CAACE,OAAO,CAAC,GAAG,KAAK;MAC9B,uCACKH,KAAK;QACR,CAACC,MAAM,CAACE,OAAO,GAAGF,MAAM,CAACG,GAAG;QAC5BR,OAAO,oBACFA,OAAO,CACX;QACDC,MAAM,oBACDA,MAAM,CACV;QACDC,MAAM,oBACDA,MAAM;MACV;IAGL,KAAM,GAAEJ,eAAgB,SAAQ;MAC9BE,OAAO,CAACK,MAAM,CAACE,OAAO,CAAC,GAAG,KAAK;MAC/BN,MAAM,CAACI,MAAM,CAACE,OAAO,CAAC,GAAG,KAAK;MAC9BL,MAAM,CAACG,MAAM,CAACE,OAAO,CAAC,GAAG,IAAI;MAE7B,uCACKH,KAAK;QACRJ,OAAO,oBACFA,OAAO,CACX;QACDC,MAAM,oBACDA,MAAM,CACV;QACDC,MAAM,oBACDA,MAAM;MACV;IAGL;MACE,OAAOE,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}