{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/start-client.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport '@plone/volto/config'; // This is the bootstrap for the global config - client side\nimport '@root/theme';\nimport React from 'react';\nimport { hydrate } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { IntlProvider } from 'react-intl-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { ReduxAsyncConnect } from '@plone/volto/helpers/AsyncConnect';\nimport { loadableReady } from '@loadable/component';\nimport { CookiesProvider } from 'react-cookie';\nimport debug from 'debug';\nimport routes from '@root/routes';\nimport config from '@plone/volto/registry';\nimport configureStore from '@plone/volto/store';\nimport { Api, persistAuthToken, ScrollToTop } from '@plone/volto/helpers';\nexport var history = createBrowserHistory();\nfunction reactIntlErrorHandler(error) {\n  debug('i18n')(error);\n}\nexport default (function () {\n  var api = new Api();\n  var store = configureStore(window.__data, history, api);\n  persistAuthToken(store);\n\n  // On Cypress we expose the history, the store and the settings\n  // so we can access from Cypress and manipulate them\n  if (window.Cypress) {\n    window.appHistory = history;\n    window.store = store;\n    window.settings = config.settings;\n  }\n\n  // Setup the client registry from the SSR response values, presents in the `window.env`\n  // variable. This is key for the Seamless mode to work.\n  if (window.env.apiPath) {\n    config.settings.apiPath = window.env.apiPath;\n  }\n  if (window.env.publicURL) {\n    config.settings.publicURL = window.env.publicURL;\n  }\n  // There are some cases that the client needs to know the internal server URL\n  // too, as some helpers (isInternalURL and flattenToAppURL) need to be aware of it.\n  // This is specially important when the hydration of the store coming from the first SSR\n  // request happens, since there all the server URLs might be the internalApiPath ones,\n  // and the client should be able to take care of them properly.\n  if (window.env.RAZZLE_INTERNAL_API_PATH) {\n    config.settings.internalApiPath = window.env.RAZZLE_INTERNAL_API_PATH;\n  }\n  // TODO: To be removed when the use of the legacy traverse is deprecated.\n  if (window.env.RAZZLE_LEGACY_TRAVERSE) {\n    config.settings.legacyTraverse = true;\n  }\n  loadableReady(function () {\n    hydrate(__jsx(CookiesProvider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, __jsx(Provider, {\n      store: store,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, __jsx(IntlProvider, {\n      onError: reactIntlErrorHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, __jsx(ConnectedRouter, {\n      history: history,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, __jsx(ScrollToTop, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, __jsx(ReduxAsyncConnect, {\n      routes: routes,\n      helpers: api,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    })))))), document.getElementById('main'));\n  });\n});","map":{"version":3,"names":["React","hydrate","Provider","IntlProvider","ConnectedRouter","createBrowserHistory","ReduxAsyncConnect","loadableReady","CookiesProvider","debug","routes","config","configureStore","Api","persistAuthToken","ScrollToTop","history","reactIntlErrorHandler","error","api","store","window","__data","Cypress","appHistory","settings","env","apiPath","publicURL","RAZZLE_INTERNAL_API_PATH","internalApiPath","RAZZLE_LEGACY_TRAVERSE","legacyTraverse","document","getElementById"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/start-client.jsx"],"sourcesContent":["import '@plone/volto/config'; // This is the bootstrap for the global config - client side\nimport '@root/theme';\nimport React from 'react';\nimport { hydrate } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { IntlProvider } from 'react-intl-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { ReduxAsyncConnect } from '@plone/volto/helpers/AsyncConnect';\nimport { loadableReady } from '@loadable/component';\nimport { CookiesProvider } from 'react-cookie';\nimport debug from 'debug';\nimport routes from '@root/routes';\nimport config from '@plone/volto/registry';\n\nimport configureStore from '@plone/volto/store';\nimport { Api, persistAuthToken, ScrollToTop } from '@plone/volto/helpers';\n\nexport const history = createBrowserHistory();\n\nfunction reactIntlErrorHandler(error) {\n  debug('i18n')(error);\n}\n\nexport default () => {\n  const api = new Api();\n\n  const store = configureStore(window.__data, history, api);\n  persistAuthToken(store);\n\n  // On Cypress we expose the history, the store and the settings\n  // so we can access from Cypress and manipulate them\n  if (window.Cypress) {\n    window.appHistory = history;\n    window.store = store;\n    window.settings = config.settings;\n  }\n\n  // Setup the client registry from the SSR response values, presents in the `window.env`\n  // variable. This is key for the Seamless mode to work.\n  if (window.env.apiPath) {\n    config.settings.apiPath = window.env.apiPath;\n  }\n  if (window.env.publicURL) {\n    config.settings.publicURL = window.env.publicURL;\n  }\n  // There are some cases that the client needs to know the internal server URL\n  // too, as some helpers (isInternalURL and flattenToAppURL) need to be aware of it.\n  // This is specially important when the hydration of the store coming from the first SSR\n  // request happens, since there all the server URLs might be the internalApiPath ones,\n  // and the client should be able to take care of them properly.\n  if (window.env.RAZZLE_INTERNAL_API_PATH) {\n    config.settings.internalApiPath = window.env.RAZZLE_INTERNAL_API_PATH;\n  }\n  // TODO: To be removed when the use of the legacy traverse is deprecated.\n  if (window.env.RAZZLE_LEGACY_TRAVERSE) {\n    config.settings.legacyTraverse = true;\n  }\n\n  loadableReady(() => {\n    hydrate(\n      <CookiesProvider>\n        <Provider store={store}>\n          <IntlProvider onError={reactIntlErrorHandler}>\n            <ConnectedRouter history={history}>\n              <ScrollToTop>\n                <ReduxAsyncConnect routes={routes} helpers={api} />\n              </ScrollToTop>\n            </ConnectedRouter>\n          </IntlProvider>\n        </Provider>\n      </CookiesProvider>,\n      document.getElementById('main'),\n    );\n  });\n};\n"],"mappings":";;;AAAA,OAAO,qBAAqB,CAAC,CAAC;AAC9B,OAAO,aAAa;AACpB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,eAAe,QAAQ,wBAAwB;AACxD,SAASC,oBAAoB,QAAQ,SAAS;AAC9C,SAASC,iBAAiB,QAAQ,mCAAmC;AACrE,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,eAAe,QAAQ,cAAc;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,OAAOC,cAAc,MAAM,oBAAoB;AAC/C,SAASC,GAAG,EAAEC,gBAAgB,EAAEC,WAAW,QAAQ,sBAAsB;AAEzE,OAAO,IAAMC,OAAO,GAAGX,oBAAoB,EAAE;AAE7C,SAASY,qBAAqB,CAACC,KAAK,EAAE;EACpCT,KAAK,CAAC,MAAM,CAAC,CAACS,KAAK,CAAC;AACtB;AAEA,gBAAe,YAAM;EACnB,IAAMC,GAAG,GAAG,IAAIN,GAAG,EAAE;EAErB,IAAMO,KAAK,GAAGR,cAAc,CAACS,MAAM,CAACC,MAAM,EAAEN,OAAO,EAAEG,GAAG,CAAC;EACzDL,gBAAgB,CAACM,KAAK,CAAC;;EAEvB;EACA;EACA,IAAIC,MAAM,CAACE,OAAO,EAAE;IAClBF,MAAM,CAACG,UAAU,GAAGR,OAAO;IAC3BK,MAAM,CAACD,KAAK,GAAGA,KAAK;IACpBC,MAAM,CAACI,QAAQ,GAAGd,MAAM,CAACc,QAAQ;EACnC;;EAEA;EACA;EACA,IAAIJ,MAAM,CAACK,GAAG,CAACC,OAAO,EAAE;IACtBhB,MAAM,CAACc,QAAQ,CAACE,OAAO,GAAGN,MAAM,CAACK,GAAG,CAACC,OAAO;EAC9C;EACA,IAAIN,MAAM,CAACK,GAAG,CAACE,SAAS,EAAE;IACxBjB,MAAM,CAACc,QAAQ,CAACG,SAAS,GAAGP,MAAM,CAACK,GAAG,CAACE,SAAS;EAClD;EACA;EACA;EACA;EACA;EACA;EACA,IAAIP,MAAM,CAACK,GAAG,CAACG,wBAAwB,EAAE;IACvClB,MAAM,CAACc,QAAQ,CAACK,eAAe,GAAGT,MAAM,CAACK,GAAG,CAACG,wBAAwB;EACvE;EACA;EACA,IAAIR,MAAM,CAACK,GAAG,CAACK,sBAAsB,EAAE;IACrCpB,MAAM,CAACc,QAAQ,CAACO,cAAc,GAAG,IAAI;EACvC;EAEAzB,aAAa,CAAC,YAAM;IAClBN,OAAO,CACL,MAAC,eAAe;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACd,MAAC,QAAQ;MAAC,KAAK,EAAEmB,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACrB,MAAC,YAAY;MAAC,OAAO,EAAEH,qBAAsB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC3C,MAAC,eAAe;MAAC,OAAO,EAAED,OAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAChC,MAAC,WAAW;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACV,MAAC,iBAAiB;MAAC,MAAM,EAAEN,MAAO;MAAC,OAAO,EAAES,GAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACvC,CACE,CACL,CACN,CACK,EAClBc,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAChC;EACH,CAAC,CAAC;AACJ,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}