{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-listing-block/src/blocks/Listing/item-templates/SearchItemTemplate.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport cx from 'classnames';\nimport PreviewImage from '@eeacms/volto-listing-block/PreviewImage';\nconst BodyText = ({\n  item,\n  hasDescription\n}) => {\n  return __jsx(\"div\", {\n    className: \"listing-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: 'listing-header',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, item.title ? item.title : item.id), hasDescription && __jsx(\"p\", {\n    className: 'listing-description',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, item.description), (item === null || item === void 0 ? void 0 : item.extra) && __jsx(\"div\", {\n    className: \"slot-bottom\",\n    style: {\n      marginTop: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, item === null || item === void 0 ? void 0 : item.extra));\n};\nconst getStyles = props => {\n  const {\n    itemModel = {}\n  } = props;\n  const res = {};\n  if (itemModel.maxDescription) {\n    res[`max-${itemModel.maxDescription}-lines`] = true;\n  }\n  return res;\n};\nconst BasicItem = props => {\n  const {\n    item,\n    styles,\n    className,\n    itemModel = {}\n  } = props;\n  const {\n    hasImage,\n    hasDate,\n    hasDescription,\n    imageOnRightSide\n  } = itemModel;\n  return __jsx(\"div\", {\n    className: cx('u-item listing-item result-item', styles === null || styles === void 0 ? void 0 : styles.theme, getStyles(props), className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"slot-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, item === null || item === void 0 ? void 0 : item.meta), __jsx(\"div\", {\n    className: \"slot-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, hasImage ? imageOnRightSide ? __jsx(React.Fragment, null, __jsx(BodyText, {\n    item: item,\n    hasDescription: hasDescription,\n    hasDate: hasDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: 'image-wrapper right',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, __jsx(PreviewImage, {\n    item: item,\n    preview_image_url: item.preview_image_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: 'image-wrapper left',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, __jsx(PreviewImage, {\n    item: item,\n    preview_image_url: item.preview_image_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  })), __jsx(BodyText, {\n    item: item,\n    hasDescription: hasDescription,\n    hasDate: hasDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })) : __jsx(BodyText, {\n    item: item,\n    hasDescription: hasDescription,\n    hasDate: hasDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }))));\n};\nexport const SearchItemLayout = props => {\n  return __jsx(BasicItem, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }\n  }));\n};","map":{"version":3,"names":["cx","PreviewImage","BodyText","item","hasDescription","title","id","description","extra","marginTop","getStyles","props","itemModel","res","maxDescription","BasicItem","styles","className","hasImage","hasDate","imageOnRightSide","theme","meta","preview_image_url","SearchItemLayout"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-listing-block/src/blocks/Listing/item-templates/SearchItemTemplate.jsx"],"sourcesContent":["import cx from 'classnames';\nimport PreviewImage from '@eeacms/volto-listing-block/PreviewImage';\n\nconst BodyText = ({ item, hasDescription }) => {\n  return (\n    <div className=\"listing-body\">\n      <h3 className={'listing-header'}>{item.title ? item.title : item.id}</h3>\n      {hasDescription && (\n        <p className={'listing-description'}>{item.description}</p>\n      )}\n\n      {item?.extra && (\n        <div className=\"slot-bottom\" style={{ marginTop: 'auto' }}>\n          {item?.extra}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (props) => {\n  const { itemModel = {} } = props;\n  const res = {};\n  if (itemModel.maxDescription) {\n    res[`max-${itemModel.maxDescription}-lines`] = true;\n  }\n  return res;\n};\n\nconst BasicItem = (props) => {\n  const { item, styles, className, itemModel = {} } = props;\n  const { hasImage, hasDate, hasDescription, imageOnRightSide } = itemModel;\n\n  return (\n    <div\n      className={cx(\n        'u-item listing-item result-item',\n        styles?.theme,\n        getStyles(props),\n        className,\n      )}\n    >\n      <div className=\"wrapper\">\n        <div className=\"slot-head\">{item?.meta}</div>\n        <div className=\"slot-top\">\n          {hasImage ? (\n            imageOnRightSide ? (\n              <>\n                <BodyText\n                  item={item}\n                  hasDescription={hasDescription}\n                  hasDate={hasDate}\n                />\n                <div className={'image-wrapper right'}>\n                  <PreviewImage\n                    item={item}\n                    preview_image_url={item.preview_image_url}\n                  />\n                </div>\n              </>\n            ) : (\n              <>\n                <div className={'image-wrapper left'}>\n                  <PreviewImage\n                    item={item}\n                    preview_image_url={item.preview_image_url}\n                  />\n                </div>\n                <BodyText\n                  item={item}\n                  hasDescription={hasDescription}\n                  hasDate={hasDate}\n                />\n              </>\n            )\n          ) : (\n            <BodyText\n              item={item}\n              hasDescription={hasDescription}\n              hasDate={hasDate}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const SearchItemLayout = (props) => {\n  return <BasicItem {...props} />;\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}