{"ast":null,"code":"import config from '@plone/volto/registry';\nexport var SplitterSchema = function SplitterSchema() {\n  return {\n    title: 'Splitter Block (DEPRECATED)',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['title', 'style', 'class_name']\n    }, {\n      id: 'advanced',\n      title: 'Advanced',\n      fields: ['color']\n    }],\n    properties: {\n      title: {\n        title: 'Section title',\n        description: 'Filling in will create an entry in the Table of Contents',\n        widget: 'string'\n      },\n      style: {\n        title: 'Style',\n        choices: config.blocks.blocksConfig.splitter.styles.map(function (style) {\n          return [style.id, style.title];\n        })\n      },\n      color: {\n        title: 'Color',\n        widget: 'style_simple_color',\n        available_colors: config.settings.available_colors\n      },\n      class_name: {\n        title: 'Class',\n        choices: [['primary', 'Primary'], ['secondary', 'Secondary']]\n      }\n    },\n    required: []\n  };\n};\n_c = SplitterSchema;\nvar _c;\n$RefreshReg$(_c, \"SplitterSchema\");","map":{"version":3,"names":["config","SplitterSchema","title","fieldsets","id","fields","properties","description","widget","style","choices","blocks","blocksConfig","splitter","styles","map","color","available_colors","settings","class_name","required"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-block-divider/src/deprecated/Splitter/schema.js"],"sourcesContent":["import config from '@plone/volto/registry';\n\nexport const SplitterSchema = () => ({\n  title: 'Splitter Block (DEPRECATED)',\n\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: ['title', 'style', 'class_name'],\n    },\n    {\n      id: 'advanced',\n      title: 'Advanced',\n      fields: ['color'],\n    },\n  ],\n\n  properties: {\n    title: {\n      title: 'Section title',\n      description: 'Filling in will create an entry in the Table of Contents',\n      widget: 'string',\n    },\n    style: {\n      title: 'Style',\n      choices: config.blocks.blocksConfig.splitter.styles.map((style) => [\n        style.id,\n        style.title,\n      ]),\n    },\n    color: {\n      title: 'Color',\n      widget: 'style_simple_color',\n      available_colors: config.settings.available_colors,\n    },\n    class_name: {\n      title: 'Class',\n      choices: [\n        ['primary', 'Primary'],\n        ['secondary', 'Secondary'],\n      ],\n    },\n  },\n\n  required: [],\n});\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,uBAAuB;AAE1C,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAc;EAAA,OAAU;IACnCC,KAAK,EAAE,6BAA6B;IAEpCC,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbF,KAAK,EAAE,SAAS;MAChBG,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,YAAY;IACzC,CAAC,EACD;MACED,EAAE,EAAE,UAAU;MACdF,KAAK,EAAE,UAAU;MACjBG,MAAM,EAAE,CAAC,OAAO;IAClB,CAAC,CACF;IAEDC,UAAU,EAAE;MACVJ,KAAK,EAAE;QACLA,KAAK,EAAE,eAAe;QACtBK,WAAW,EAAE,0DAA0D;QACvEC,MAAM,EAAE;MACV,CAAC;MACDC,KAAK,EAAE;QACLP,KAAK,EAAE,OAAO;QACdQ,OAAO,EAAEV,MAAM,CAACW,MAAM,CAACC,YAAY,CAACC,QAAQ,CAACC,MAAM,CAACC,GAAG,CAAC,UAACN,KAAK;UAAA,OAAK,CACjEA,KAAK,CAACL,EAAE,EACRK,KAAK,CAACP,KAAK,CACZ;QAAA;MACH,CAAC;MACDc,KAAK,EAAE;QACLd,KAAK,EAAE,OAAO;QACdM,MAAM,EAAE,oBAAoB;QAC5BS,gBAAgB,EAAEjB,MAAM,CAACkB,QAAQ,CAACD;MACpC,CAAC;MACDE,UAAU,EAAE;QACVjB,KAAK,EAAE,OAAO;QACdQ,OAAO,EAAE,CACP,CAAC,SAAS,EAAE,SAAS,CAAC,EACtB,CAAC,WAAW,EAAE,WAAW,CAAC;MAE9B;IACF,CAAC;IAEDU,QAAQ,EAAE;EACZ,CAAC;AAAA,CAAC;AAAC,KA5CUnB,cAAc;AAAA;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}