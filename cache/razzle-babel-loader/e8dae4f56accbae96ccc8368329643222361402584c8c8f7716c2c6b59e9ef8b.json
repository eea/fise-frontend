{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Breadcrumbs/Breadcrumbs.jsx\";\nvar __jsx = React.createElement;\n/**\n * Breadcrumbs components.\n * @module components/theme/Breadcrumbs/Breadcrumbs\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, Container, Segment } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport { getBreadcrumbs } from '@plone/volto/actions';\nimport { getBaseUrl, hasApiExpander } from '@plone/volto/helpers';\nimport homeSVG from '@plone/volto/icons/home.svg';\nvar messages = defineMessages({\n  home: {\n    \"id\": \"Home\",\n    \"defaultMessage\": \"Home\"\n  },\n  breadcrumbs: {\n    \"id\": \"Breadcrumbs\",\n    \"defaultMessage\": \"Breadcrumbs\"\n  }\n});\n\n/**\n * Breadcrumbs container class.\n */\nexport var BreadcrumbsComponent = /*#__PURE__*/function (_Component) {\n  _inherits(BreadcrumbsComponent, _Component);\n  var _super = _createSuper(BreadcrumbsComponent);\n  function BreadcrumbsComponent() {\n    _classCallCheck(this, BreadcrumbsComponent);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BreadcrumbsComponent, [{\n    key: \"componentDidMount\",\n    value:\n    /**\n     * Property types.\n     * @property {Object} propTypes Property types.\n     * @static\n     */\n\n    function componentDidMount() {\n      if (!hasApiExpander('breadcrumbs', getBaseUrl(this.props.pathname))) {\n        this.props.getBreadcrumbs(getBaseUrl(this.props.pathname));\n      }\n    }\n\n    /**\n     * Component will receive props\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Next properties\n     * @returns {undefined}\n     */\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.pathname !== this.props.pathname) {\n        if (!hasApiExpander('breadcrumbs', getBaseUrl(this.props.pathname))) {\n          this.props.getBreadcrumbs(getBaseUrl(nextProps.pathname));\n        }\n      }\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      return __jsx(Segment, {\n        role: \"navigation\",\n        \"aria-label\": this.props.intl.formatMessage(messages.breadcrumbs),\n        className: \"breadcrumbs\",\n        secondary: true,\n        vertical: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, __jsx(Breadcrumb, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, __jsx(Link, {\n        to: this.props.root || '/',\n        className: \"section\",\n        title: this.props.intl.formatMessage(messages.home),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, __jsx(Icon, {\n        name: homeSVG,\n        size: \"18px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      })), this.props.items.map(function (item, index, items) {\n        return [__jsx(Breadcrumb.Divider, {\n          key: \"divider-\".concat(item.url),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }\n        }), index < items.length - 1 ? __jsx(Link, {\n          key: item.url,\n          to: item.url,\n          className: \"section\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }\n        }, item.title) : __jsx(Breadcrumb.Section, {\n          key: item.url,\n          active: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }\n        }, item.title)];\n      }))));\n    }\n  }]);\n  return BreadcrumbsComponent;\n}(Component);\n_defineProperty(BreadcrumbsComponent, \"propTypes\", {\n  getBreadcrumbs: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  root: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    url: PropTypes.string\n  })).isRequired\n});\nexport default compose(injectIntl, connect(function (state) {\n  return {\n    items: state.breadcrumbs.items,\n    root: state.breadcrumbs.root\n  };\n}, {\n  getBreadcrumbs: getBreadcrumbs\n}))(BreadcrumbsComponent);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","Breadcrumb","Container","Segment","defineMessages","injectIntl","Icon","getBreadcrumbs","getBaseUrl","hasApiExpander","homeSVG","messages","home","breadcrumbs","BreadcrumbsComponent","props","pathname","nextProps","intl","formatMessage","root","items","map","item","index","url","length","title","func","isRequired","string","arrayOf","shape","state"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Breadcrumbs/Breadcrumbs.jsx"],"sourcesContent":["/**\n * Breadcrumbs components.\n * @module components/theme/Breadcrumbs/Breadcrumbs\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, Container, Segment } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Icon } from '@plone/volto/components';\nimport { getBreadcrumbs } from '@plone/volto/actions';\nimport { getBaseUrl, hasApiExpander } from '@plone/volto/helpers';\n\nimport homeSVG from '@plone/volto/icons/home.svg';\n\nconst messages = defineMessages({\n  home: {\n    id: 'Home',\n    defaultMessage: 'Home',\n  },\n  breadcrumbs: {\n    id: 'Breadcrumbs',\n    defaultMessage: 'Breadcrumbs',\n  },\n});\n\n/**\n * Breadcrumbs container class.\n */\nexport class BreadcrumbsComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getBreadcrumbs: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    root: PropTypes.string,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        url: PropTypes.string,\n      }),\n    ).isRequired,\n  };\n\n  componentDidMount() {\n    if (!hasApiExpander('breadcrumbs', getBaseUrl(this.props.pathname))) {\n      this.props.getBreadcrumbs(getBaseUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      if (!hasApiExpander('breadcrumbs', getBaseUrl(this.props.pathname))) {\n        this.props.getBreadcrumbs(getBaseUrl(nextProps.pathname));\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Segment\n        role=\"navigation\"\n        aria-label={this.props.intl.formatMessage(messages.breadcrumbs)}\n        className=\"breadcrumbs\"\n        secondary\n        vertical\n      >\n        <Container>\n          <Breadcrumb>\n            <Link\n              to={this.props.root || '/'}\n              className=\"section\"\n              title={this.props.intl.formatMessage(messages.home)}\n            >\n              <Icon name={homeSVG} size=\"18px\" />\n            </Link>\n            {this.props.items.map((item, index, items) => [\n              <Breadcrumb.Divider key={`divider-${item.url}`} />,\n              index < items.length - 1 ? (\n                <Link key={item.url} to={item.url} className=\"section\">\n                  {item.title}\n                </Link>\n              ) : (\n                <Breadcrumb.Section key={item.url} active>\n                  {item.title}\n                </Breadcrumb.Section>\n              ),\n            ])}\n          </Breadcrumb>\n        </Container>\n      </Segment>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      items: state.breadcrumbs.items,\n      root: state.breadcrumbs.root,\n    }),\n    { getBreadcrumbs },\n  ),\n)(BreadcrumbsComponent);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Home","defaultMessage":"Home"},{"id":"Breadcrumbs","defaultMessage":"Breadcrumbs"}]}},"sourceType":"module","externalDependencies":[]}