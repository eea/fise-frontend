{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { serializeNodes } from 'volto-slate/editor/render';\nimport config from '@plone/volto/registry';\nvar TextBlockView = function TextBlockView(props) {\n  var id = props.id,\n    data = props.data,\n    _props$styling = props.styling,\n    styling = _props$styling === void 0 ? {} : _props$styling;\n  var value = data.value,\n    override_toc = data.override_toc;\n  var metadata = props.metadata || props.properties;\n  return serializeNodes(value, function (node, path) {\n    var res = _objectSpread({}, styling);\n    if (node.type) {\n      if (config.settings.slate.topLevelTargetElements.includes(node.type) || override_toc) {\n        res.id = id;\n      }\n    }\n    return res;\n  }, {\n    metadata: metadata\n  });\n};\n_c = TextBlockView;\nexport default TextBlockView;\nvar _c;\n$RefreshReg$(_c, \"TextBlockView\");","map":{"version":3,"names":["serializeNodes","config","TextBlockView","props","id","data","styling","value","override_toc","metadata","properties","node","path","res","type","settings","slate","topLevelTargetElements","includes"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/blocks/Text/TextBlockView.jsx"],"sourcesContent":["import { serializeNodes } from 'volto-slate/editor/render';\nimport config from '@plone/volto/registry';\n\nconst TextBlockView = (props) => {\n  const { id, data, styling = {} } = props;\n  const { value, override_toc } = data;\n  const metadata = props.metadata || props.properties;\n  return serializeNodes(\n    value,\n    (node, path) => {\n      const res = { ...styling };\n      if (node.type) {\n        if (\n          config.settings.slate.topLevelTargetElements.includes(node.type) ||\n          override_toc\n        ) {\n          res.id = id;\n        }\n      }\n      return res;\n    },\n    { metadata: metadata },\n  );\n};\n\nexport default TextBlockView;\n"],"mappings":";AAAA,SAASA,cAAc,QAAQ,2BAA2B;AAC1D,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,KAAK,EAAK;EAC/B,IAAQC,EAAE,GAAyBD,KAAK,CAAhCC,EAAE;IAAEC,IAAI,GAAmBF,KAAK,CAA5BE,IAAI;IAAA,iBAAmBF,KAAK,CAAtBG,OAAO;IAAPA,OAAO,+BAAG,CAAC,CAAC;EAC9B,IAAQC,KAAK,GAAmBF,IAAI,CAA5BE,KAAK;IAAEC,YAAY,GAAKH,IAAI,CAArBG,YAAY;EAC3B,IAAMC,QAAQ,GAAGN,KAAK,CAACM,QAAQ,IAAIN,KAAK,CAACO,UAAU;EACnD,OAAOV,cAAc,CACnBO,KAAK,EACL,UAACI,IAAI,EAAEC,IAAI,EAAK;IACd,IAAMC,GAAG,qBAAQP,OAAO,CAAE;IAC1B,IAAIK,IAAI,CAACG,IAAI,EAAE;MACb,IACEb,MAAM,CAACc,QAAQ,CAACC,KAAK,CAACC,sBAAsB,CAACC,QAAQ,CAACP,IAAI,CAACG,IAAI,CAAC,IAChEN,YAAY,EACZ;QACAK,GAAG,CAACT,EAAE,GAAGA,EAAE;MACb;IACF;IACA,OAAOS,GAAG;EACZ,CAAC,EACD;IAAEJ,QAAQ,EAAEA;EAAS,CAAC,CACvB;AACH,CAAC;AAAC,KApBIP,aAAa;AAsBnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}