{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-eea-map/src/components/ExtraViews.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { UniversalLink, Icon } from '@plone/volto/components';\nimport LegendWidget from './widgets/LegendWidget';\nimport { serializeNodes } from 'volto-slate/editor/render';\nimport rightKeySVG from '@plone/volto/icons/right-key.svg';\nimport downKeySVG from '@plone/volto/icons/down-key.svg';\nconst SourcesWidget = ({\n  data\n}) => {\n  const [expand, setExpand] = React.useState(true);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    className: \"legend-action\",\n    onClick: () => setExpand(!expand),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: expand ? downKeySVG : rightKeySVG,\n    title: expand ? 'Collapse' : 'Expand',\n    size: \"17px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }), \"Sources:\")), expand && __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, data.map((param, i) => __jsx(\"li\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"map_source_param_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, __jsx(UniversalLink, {\n    className: \"map_source_title\",\n    href: param.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, param.title), \",\", __jsx(\"span\", {\n    className: \"map_source_description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, param.organisation))))));\n};\nconst ExtraViews = ({\n  data\n}) => {\n  const {\n    map_data = {},\n    description,\n    show_legend,\n    show_viewer,\n    show_sources,\n    data_provenance = {}\n  } = data;\n  return __jsx(\"div\", {\n    className: \"extra-eea-map-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, show_legend && map_data && __jsx(LegendWidget, {\n    data: map_data,\n    show_viewer: show_viewer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), show_sources && __jsx(React.Fragment, null, data_provenance && data_provenance.data && data_provenance.data.length > 0 ? __jsx(SourcesWidget, {\n    data: data_provenance.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }) : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Data provenance is not set for visualization used or page\")), description && serializeNodes(description));\n};\nexport default ExtraViews;","map":{"version":3,"names":["React","UniversalLink","Icon","LegendWidget","serializeNodes","rightKeySVG","downKeySVG","SourcesWidget","data","expand","setExpand","useState","map","param","i","link","title","organisation","ExtraViews","map_data","description","show_legend","show_viewer","show_sources","data_provenance","length"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-eea-map/src/components/ExtraViews.jsx"],"sourcesContent":["import React from 'react';\nimport { UniversalLink, Icon } from '@plone/volto/components';\n\nimport LegendWidget from './widgets/LegendWidget';\nimport { serializeNodes } from 'volto-slate/editor/render';\n\nimport rightKeySVG from '@plone/volto/icons/right-key.svg';\nimport downKeySVG from '@plone/volto/icons/down-key.svg';\n\nconst SourcesWidget = ({ data }) => {\n  const [expand, setExpand] = React.useState(true);\n\n  return (\n    <div>\n      <button className=\"legend-action\" onClick={() => setExpand(!expand)}>\n        <h3>\n          <Icon\n            name={expand ? downKeySVG : rightKeySVG}\n            title={expand ? 'Collapse' : 'Expand'}\n            size=\"17px\"\n          />\n          Sources:\n        </h3>\n      </button>\n      {expand && (\n        <ul>\n          {data.map((param, i) => (\n            <li key={i}>\n              <div className=\"map_source_param_container\">\n                <UniversalLink className=\"map_source_title\" href={param.link}>\n                  {param.title}\n                </UniversalLink>\n                ,\n                <span className=\"map_source_description\">\n                  {param.organisation}\n                </span>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nconst ExtraViews = ({ data }) => {\n  const {\n    map_data = {},\n    description,\n    show_legend,\n    show_viewer,\n    show_sources,\n    data_provenance = {},\n  } = data;\n\n  return (\n    <div className=\"extra-eea-map-content\">\n      {show_legend && map_data && (\n        <LegendWidget data={map_data} show_viewer={show_viewer} />\n      )}\n      {show_sources && (\n        <>\n          {data_provenance &&\n          data_provenance.data &&\n          data_provenance.data.length > 0 ? (\n            <SourcesWidget data={data_provenance.data} />\n          ) : (\n            <p>Data provenance is not set for visualization used or page</p>\n          )}\n        </>\n      )}\n      {description && serializeNodes(description)}\n    </div>\n  );\n};\n\nexport default ExtraViews;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,IAAI,QAAQ,yBAAyB;AAE7D,OAAOC,YAAY,MAAM,wBAAwB;AACjD,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,OAAOC,WAAW,MAAM,kCAAkC;AAC1D,OAAOC,UAAU,MAAM,iCAAiC;AAExD,MAAMC,aAAa,GAAG,CAAC;EAAEC;AAAK,CAAC,KAAK;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAC,IAAI,CAAC;EAEhD,OACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAQ,SAAS,EAAC,eAAe;IAAC,OAAO,EAAE,MAAMD,SAAS,CAAC,CAACD,MAAM,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAClE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,IAAI;IACH,IAAI,EAAEA,MAAM,GAAGH,UAAU,GAAGD,WAAY;IACxC,KAAK,EAAEI,MAAM,GAAG,UAAU,GAAG,QAAS;IACtC,IAAI,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACX,aAEC,CACE,EACRA,MAAM,IACL;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGD,IAAI,CAACI,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,KACjB;IAAI,GAAG,EAAEA,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACT;IAAK,SAAS,EAAC,4BAA4B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACzC,MAAC,aAAa;IAAC,SAAS,EAAC,kBAAkB;IAAC,IAAI,EAAED,KAAK,CAACE,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC1DF,KAAK,CAACG,KAAK,CACE,OAEhB;IAAM,SAAS,EAAC,wBAAwB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrCH,KAAK,CAACI,YAAY,CACd,CACH,CAET,CAAC,CAEL,CACG;AAEV,CAAC;AAED,MAAMC,UAAU,GAAG,CAAC;EAAEV;AAAK,CAAC,KAAK;EAC/B,MAAM;IACJW,QAAQ,GAAG,CAAC,CAAC;IACbC,WAAW;IACXC,WAAW;IACXC,WAAW;IACXC,YAAY;IACZC,eAAe,GAAG,CAAC;EACrB,CAAC,GAAGhB,IAAI;EAER,OACE;IAAK,SAAS,EAAC,uBAAuB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACnCa,WAAW,IAAIF,QAAQ,IACtB,MAAC,YAAY;IAAC,IAAI,EAAEA,QAAS;IAAC,WAAW,EAAEG,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACxD,EACAC,YAAY,IACX,4BACGC,eAAe,IAChBA,eAAe,CAAChB,IAAI,IACpBgB,eAAe,CAAChB,IAAI,CAACiB,MAAM,GAAG,CAAC,GAC7B,MAAC,aAAa;IAAC,IAAI,EAAED,eAAe,CAAChB,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,GAE7C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,+DACD,CAEJ,EACAY,WAAW,IAAIhB,cAAc,CAACgB,WAAW,CAAC,CACvC;AAEV,CAAC;AAED,eAAeF,UAAU"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}