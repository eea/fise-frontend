{"ast":null,"code":"import _last from \"lodash/last\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/ContentTypes.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Content Types component.\n * @module components/manage/Controlpanels/ContentTypes\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getParentUrl } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Confirm, Container, Table, Button, Header } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { Error, Icon, ModalForm, Toolbar, Toast, ContentTypesActions } from '@plone/volto/components';\nimport { getControlpanel, postControlpanel, deleteControlpanel } from '@plone/volto/actions';\nimport { getId } from '@plone/volto/helpers';\nimport addSVG from '@plone/volto/icons/add-document.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  add: {\n    \"id\": \"Add\",\n    \"defaultMessage\": \"Add\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  yes: {\n    \"id\": \"Yes\",\n    \"defaultMessage\": \"Yes\"\n  },\n  no: {\n    \"id\": \"No\",\n    \"defaultMessage\": \"No\"\n  },\n  addTypeFormTitle: {\n    \"id\": \"Add new content type\",\n    \"defaultMessage\": \"Add new content type\"\n  },\n  addTypeButtonTitle: {\n    \"id\": \"Add new content type\",\n    \"defaultMessage\": \"Add new content type\"\n  },\n  addTypeFormTitleTitle: {\n    \"id\": \"Title\",\n    \"defaultMessage\": \"Title\"\n  },\n  addTypeFormDescriptionTitle: {\n    \"id\": \"Description\",\n    \"defaultMessage\": \"Description\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  typeCreated: {\n    \"id\": \"Content type created\",\n    \"defaultMessage\": \"Content type created\"\n  },\n  deleteConfirmTitle: {\n    \"id\": \"Delete Type\",\n    \"defaultMessage\": \"Delete Type\"\n  },\n  typeDeleted: {\n    \"id\": \"Content type deleted\",\n    \"defaultMessage\": \"Content type deleted\"\n  }\n});\n\n/**\n * ContentTypes class.\n * @class ContentTypes\n * @extends Component\n */\nclass ContentTypes extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Types\n   */\n  constructor(props) {\n    super(props);\n    this.onAddTypeSubmit = this.onAddTypeSubmit.bind(this);\n    this.onAddTypeError = this.onAddTypeError.bind(this);\n    this.onAddTypeSuccess = this.onAddTypeSuccess.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onLayout = this.onLayout.bind(this);\n    this.onSchema = this.onSchema.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteTypeSuccess = this.onDeleteTypeSuccess.bind(this);\n    this.state = {\n      showAddType: false,\n      addTypeError: '',\n      showDelete: false,\n      typeToDelete: undefined,\n      error: null,\n      isClient: false\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlpanel(this.props.id);\n    this.setState({\n      isClient: true\n    });\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Get\n    if (this.props.cpanelRequest.get.loading && nextProps.cpanelRequest.get.error) {\n      this.setState({\n        error: nextProps.cpanelRequest.get.error\n      });\n    }\n\n    // Create\n    if (this.props.cpanelRequest.post.loading && nextProps.cpanelRequest.post.loaded) {\n      this.props.getControlpanel(this.props.id);\n      this.onAddTypeSuccess();\n    }\n    if (this.props.cpanelRequest.post.loading && nextProps.cpanelRequest.post.error) {\n      this.onAddTypeError(nextProps.cpanelRequest.post.error);\n    }\n\n    // Delete\n    if (this.props.cpanelRequest.delete.loading && nextProps.cpanelRequest.delete.loaded) {\n      this.props.getControlpanel(this.props.id);\n      this.onDeleteTypeSuccess();\n    }\n  }\n\n  /** Add  */\n\n  /**\n   * @param {object} data Form data from the ModalForm.\n   * @param {func} callback to set new form data in the ModalForm\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onAddTypeSubmit(data, callback) {\n    this.props.postControlpanel(this.props.id, data);\n    this.setState({\n      addTypeSetFormDataCallback: callback\n    });\n  }\n\n  /**\n   * Handle Errors after postControlpanel()\n   *\n   * @param {*} error object. Requires the property .message\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onAddTypeError(error) {\n    this.setState({\n      addTypeError: error.message\n    });\n  }\n\n  /**\n   * Handle Success after postControlpanel()\n   *\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onAddTypeSuccess() {\n    this.state.addTypeSetFormDataCallback({});\n    this.setState({\n      showAddType: false,\n      addTypeError: undefined,\n      addTypeSetFormDataCallback: undefined\n    });\n    toast.success(__jsx(Toast, {\n      success: true,\n      title: this.props.intl.formatMessage(messages.success),\n      content: this.props.intl.formatMessage(messages.typeCreated),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  /** Edit  */\n  /**\n   * @param {*} event Event object.\n   * @param {*} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onEdit(event, {\n    value\n  }) {\n    this.props.history.push(value);\n  }\n\n  /**\n   * Layout button click\n   * @param {*} event\n   * @param {string} value\n   * @returns {undefined}\n   */\n  onLayout(event, {\n    value\n  }) {\n    this.props.history.push(value);\n  }\n\n  /** Delete */\n  /**\n   * @param {*} event Event object.\n   * @param {*} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDelete(event, {\n    value\n  }) {\n    if (value) {\n      this.setState({\n        showDelete: true,\n        typeToDelete: value\n      });\n    }\n  }\n\n  /** Folder\n   * @param {Object} event Event object.\n   * @param {string} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onSchema(event, {\n    value\n  }) {\n    if (value) {\n      this.props.history.push(`${this.props.pathname}/${value}/schema`);\n    }\n  }\n\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDeleteOk() {\n    const item = getId(this.state.typeToDelete);\n    this.props.deleteControlpanel(this.props.id, item);\n    this.setState({\n      showDelete: false,\n      typeToDelete: undefined\n    });\n  }\n\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      typeToDelete: undefined\n    });\n  }\n\n  /**\n   * Handle Success after deleteControlpanel()\n   *\n   * @method onDeleteTypeSuccess\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDeleteTypeSuccess() {\n    toast.success(__jsx(Toast, {\n      success: true,\n      title: this.props.intl.formatMessage(messages.success),\n      content: this.props.intl.formatMessage(messages.typeDeleted),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 7\n      }\n    }));\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    // Error\n    if (this.state.error) {\n      return __jsx(Error, {\n        error: this.state.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 14\n        }\n      });\n    }\n    if (!this.props.controlpanel) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 14\n        }\n      });\n    }\n    return __jsx(Container, {\n      className: \"types-control-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }\n    }, __jsx(Confirm, {\n      open: this.state.showDelete,\n      header: this.props.intl.formatMessage(messages.deleteConfirmTitle),\n      cancelButton: this.props.intl.formatMessage(messages.no),\n      confirmButton: this.props.intl.formatMessage(messages.yes),\n      content: __jsx(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 15\n        }\n      }, __jsx(\"ul\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 17\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Do you really want to delete the type {typename}?\",\n        defaultMessage: \"Do you really want to delete type {typename}?\",\n        values: {\n          typename: __jsx(\"b\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 33\n            }\n          }, getId(this.state.typeToDelete || ''))\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 19\n        }\n      }))),\n      onCancel: this.onDeleteCancel,\n      onConfirm: this.onDeleteOk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }\n    }), __jsx(ModalForm, {\n      open: this.state.showAddType,\n      className: \"modal\",\n      onSubmit: this.onAddTypeSubmit,\n      submitError: this.state.addTypeError,\n      onCancel: () => this.setState({\n        showAddType: false\n      }),\n      title: this.props.intl.formatMessage(messages.addTypeFormTitle),\n      loading: this.props.cpanelRequest.post.loading,\n      schema: {\n        fieldsets: [{\n          id: 'default',\n          title: 'Content type',\n          fields: ['title', 'description']\n        }],\n        properties: {\n          title: {\n            title: this.props.intl.formatMessage(messages.addTypeFormTitleTitle),\n            type: 'string',\n            description: ''\n          },\n          description: {\n            title: this.props.intl.formatMessage(messages.addTypeFormDescriptionTitle),\n            type: 'string',\n            description: ''\n          }\n        },\n        required: ['title']\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }\n    })), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }\n    }, __jsx(\"article\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }\n    }, __jsx(Header, {\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }\n    }, this.props.controlpanel.title), __jsx(\"section\", {\n      id: \"content-core\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }\n    }, __jsx(Table, {\n      compact: true,\n      singleLine: true,\n      striped: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 15\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 19\n      }\n    }, __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Type\",\n      defaultMessage: \"Type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 23\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Description\",\n      defaultMessage: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 23\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Items\",\n      defaultMessage: \"Items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 23\n      }\n    })), __jsx(Table.HeaderCell, {\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Actions\",\n      defaultMessage: \"Actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 23\n      }\n    })))), __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }\n    }, this.props.controlpanel.items.map(item => __jsx(Table.Row, {\n      key: item['@id'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 21\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 23\n      }\n    }, __jsx(Link, {\n      to: `${this.props.pathname}/${item['id']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 25\n      }\n    }, item.title)), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 23\n      }\n    }, item.description), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 23\n      }\n    }, item.count), __jsx(Table.Cell, {\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 23\n      }\n    }, __jsx(ContentTypesActions, {\n      item: item,\n      path: this.props.pathname,\n      onEdit: this.onEdit,\n      onDelete: this.onDelete,\n      onSchema: this.onSchema,\n      onLayout: this.onLayout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 25\n      }\n    }))))))))), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(React.Fragment, null, __jsx(Link, {\n        to: getParentUrl(this.props.pathname),\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        size: \"30px\",\n        className: \"contents circled\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 21\n        }\n      })), __jsx(Button, {\n        className: \"add\",\n        \"aria-label\": this.props.intl.formatMessage(messages.add),\n        tabIndex: 0,\n        id: \"toolbar-add\",\n        onClick: () => {\n          this.setState({\n            showAddType: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: addSVG,\n        title: this.props.intl.formatMessage(messages.addTypeButtonTitle),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 21\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n_defineProperty(ContentTypes, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  getControlpanel: PropTypes.func.isRequired,\n  postControlpanel: PropTypes.func.isRequired,\n  deleteControlpanel: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  cpanelRequest: PropTypes.objectOf(PropTypes.any).isRequired,\n  controlpanel: PropTypes.shape({\n    '@id': PropTypes.string,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      '@id': PropTypes.string,\n      title: PropTypes.string,\n      description: PropTypes.string,\n      count: PropTypes.integer\n    }))\n  })\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  controlpanel: state.controlpanels.controlpanel,\n  cpanelRequest: state.controlpanels,\n  pathname: props.location.pathname,\n  id: _last(props.location.pathname.split('/'))\n}), {\n  getControlpanel,\n  postControlpanel,\n  deleteControlpanel\n}))(ContentTypes);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","getParentUrl","Portal","Confirm","Container","Table","Button","Header","toast","FormattedMessage","defineMessages","injectIntl","Error","Icon","ModalForm","Toolbar","Toast","ContentTypesActions","getControlpanel","postControlpanel","deleteControlpanel","getId","addSVG","backSVG","messages","add","back","yes","no","addTypeFormTitle","addTypeButtonTitle","addTypeFormTitleTitle","addTypeFormDescriptionTitle","success","typeCreated","deleteConfirmTitle","typeDeleted","ContentTypes","constructor","props","onAddTypeSubmit","bind","onAddTypeError","onAddTypeSuccess","onEdit","onLayout","onSchema","onDelete","onDeleteCancel","onDeleteOk","onDeleteTypeSuccess","state","showAddType","addTypeError","showDelete","typeToDelete","undefined","error","isClient","componentDidMount","id","setState","UNSAFE_componentWillReceiveProps","nextProps","cpanelRequest","get","loading","post","loaded","delete","data","callback","addTypeSetFormDataCallback","message","intl","formatMessage","event","value","history","push","pathname","item","render","controlpanel","typename","fieldsets","title","fields","properties","type","description","required","items","map","count","document","getElementById","string","isRequired","func","objectOf","any","shape","arrayOf","integer","controlpanels","location","split"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/ContentTypes.jsx"],"sourcesContent":["/**\n * Content Types component.\n * @module components/manage/Controlpanels/ContentTypes\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getParentUrl } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { last } from 'lodash';\nimport { Confirm, Container, Table, Button, Header } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport {\n  Error,\n  Icon,\n  ModalForm,\n  Toolbar,\n  Toast,\n  ContentTypesActions,\n} from '@plone/volto/components';\nimport {\n  getControlpanel,\n  postControlpanel,\n  deleteControlpanel,\n} from '@plone/volto/actions';\nimport { getId } from '@plone/volto/helpers';\n\nimport addSVG from '@plone/volto/icons/add-document.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  add: {\n    id: 'Add',\n    defaultMessage: 'Add',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  yes: {\n    id: 'Yes',\n    defaultMessage: 'Yes',\n  },\n  no: {\n    id: 'No',\n    defaultMessage: 'No',\n  },\n  addTypeFormTitle: {\n    id: 'Add new content type',\n    defaultMessage: 'Add new content type',\n  },\n  addTypeButtonTitle: {\n    id: 'Add new content type',\n    defaultMessage: 'Add new content type',\n  },\n  addTypeFormTitleTitle: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  addTypeFormDescriptionTitle: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  typeCreated: {\n    id: 'Content type created',\n    defaultMessage: 'Content type created',\n  },\n  deleteConfirmTitle: {\n    id: 'Delete Type',\n    defaultMessage: 'Delete Type',\n  },\n  typeDeleted: {\n    id: 'Content type deleted',\n    defaultMessage: 'Content type deleted',\n  },\n});\n\n/**\n * ContentTypes class.\n * @class ContentTypes\n * @extends Component\n */\nclass ContentTypes extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    getControlpanel: PropTypes.func.isRequired,\n    postControlpanel: PropTypes.func.isRequired,\n    deleteControlpanel: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    cpanelRequest: PropTypes.objectOf(PropTypes.any).isRequired,\n    controlpanel: PropTypes.shape({\n      '@id': PropTypes.string,\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          '@id': PropTypes.string,\n          title: PropTypes.string,\n          description: PropTypes.string,\n          count: PropTypes.integer,\n        }),\n      ),\n    }),\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Types\n   */\n  constructor(props) {\n    super(props);\n    this.onAddTypeSubmit = this.onAddTypeSubmit.bind(this);\n    this.onAddTypeError = this.onAddTypeError.bind(this);\n    this.onAddTypeSuccess = this.onAddTypeSuccess.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onLayout = this.onLayout.bind(this);\n    this.onSchema = this.onSchema.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteTypeSuccess = this.onDeleteTypeSuccess.bind(this);\n\n    this.state = {\n      showAddType: false,\n      addTypeError: '',\n      showDelete: false,\n      typeToDelete: undefined,\n      error: null,\n      isClient: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlpanel(this.props.id);\n    this.setState({ isClient: true });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Get\n    if (\n      this.props.cpanelRequest.get.loading &&\n      nextProps.cpanelRequest.get.error\n    ) {\n      this.setState({\n        error: nextProps.cpanelRequest.get.error,\n      });\n    }\n\n    // Create\n    if (\n      this.props.cpanelRequest.post.loading &&\n      nextProps.cpanelRequest.post.loaded\n    ) {\n      this.props.getControlpanel(this.props.id);\n      this.onAddTypeSuccess();\n    }\n    if (\n      this.props.cpanelRequest.post.loading &&\n      nextProps.cpanelRequest.post.error\n    ) {\n      this.onAddTypeError(nextProps.cpanelRequest.post.error);\n    }\n\n    // Delete\n    if (\n      this.props.cpanelRequest.delete.loading &&\n      nextProps.cpanelRequest.delete.loaded\n    ) {\n      this.props.getControlpanel(this.props.id);\n      this.onDeleteTypeSuccess();\n    }\n  }\n\n  /** Add  */\n\n  /**\n   * @param {object} data Form data from the ModalForm.\n   * @param {func} callback to set new form data in the ModalForm\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onAddTypeSubmit(data, callback) {\n    this.props.postControlpanel(this.props.id, data);\n    this.setState({\n      addTypeSetFormDataCallback: callback,\n    });\n  }\n\n  /**\n   * Handle Errors after postControlpanel()\n   *\n   * @param {*} error object. Requires the property .message\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onAddTypeError(error) {\n    this.setState({\n      addTypeError: error.message,\n    });\n  }\n\n  /**\n   * Handle Success after postControlpanel()\n   *\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onAddTypeSuccess() {\n    this.state.addTypeSetFormDataCallback({});\n    this.setState({\n      showAddType: false,\n      addTypeError: undefined,\n      addTypeSetFormDataCallback: undefined,\n    });\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.typeCreated)}\n      />,\n    );\n  }\n\n  /** Edit  */\n  /**\n   * @param {*} event Event object.\n   * @param {*} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onEdit(event, { value }) {\n    this.props.history.push(value);\n  }\n\n  /**\n   * Layout button click\n   * @param {*} event\n   * @param {string} value\n   * @returns {undefined}\n   */\n  onLayout(event, { value }) {\n    this.props.history.push(value);\n  }\n\n  /** Delete */\n  /**\n   * @param {*} event Event object.\n   * @param {*} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDelete(event, { value }) {\n    if (value) {\n      this.setState({\n        showDelete: true,\n        typeToDelete: value,\n      });\n    }\n  }\n\n  /** Folder\n   * @param {Object} event Event object.\n   * @param {string} { value }\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onSchema(event, { value }) {\n    if (value) {\n      this.props.history.push(`${this.props.pathname}/${value}/schema`);\n    }\n  }\n\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDeleteOk() {\n    const item = getId(this.state.typeToDelete);\n    this.props.deleteControlpanel(this.props.id, item);\n    this.setState({\n      showDelete: false,\n      typeToDelete: undefined,\n    });\n  }\n\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      typeToDelete: undefined,\n    });\n  }\n\n  /**\n   * Handle Success after deleteControlpanel()\n   *\n   * @method onDeleteTypeSuccess\n   * @memberof ContentTypes\n   * @returns {undefined}\n   */\n  onDeleteTypeSuccess() {\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.typeDeleted)}\n      />,\n    );\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    // Error\n    if (this.state.error) {\n      return <Error error={this.state.error} />;\n    }\n\n    if (!this.props.controlpanel) {\n      return <div />;\n    }\n    return (\n      <Container className=\"types-control-panel\">\n        <div className=\"container\">\n          <Confirm\n            open={this.state.showDelete}\n            header={this.props.intl.formatMessage(messages.deleteConfirmTitle)}\n            cancelButton={this.props.intl.formatMessage(messages.no)}\n            confirmButton={this.props.intl.formatMessage(messages.yes)}\n            content={\n              <div className=\"content\">\n                <ul className=\"content\">\n                  <FormattedMessage\n                    id=\"Do you really want to delete the type {typename}?\"\n                    defaultMessage=\"Do you really want to delete type {typename}?\"\n                    values={{\n                      typename: <b>{getId(this.state.typeToDelete || '')}</b>,\n                    }}\n                  />\n                </ul>\n              </div>\n            }\n            onCancel={this.onDeleteCancel}\n            onConfirm={this.onDeleteOk}\n          />\n          <ModalForm\n            open={this.state.showAddType}\n            className=\"modal\"\n            onSubmit={this.onAddTypeSubmit}\n            submitError={this.state.addTypeError}\n            onCancel={() => this.setState({ showAddType: false })}\n            title={this.props.intl.formatMessage(messages.addTypeFormTitle)}\n            loading={this.props.cpanelRequest.post.loading}\n            schema={{\n              fieldsets: [\n                {\n                  id: 'default',\n                  title: 'Content type',\n                  fields: ['title', 'description'],\n                },\n              ],\n              properties: {\n                title: {\n                  title: this.props.intl.formatMessage(\n                    messages.addTypeFormTitleTitle,\n                  ),\n                  type: 'string',\n                  description: '',\n                },\n                description: {\n                  title: this.props.intl.formatMessage(\n                    messages.addTypeFormDescriptionTitle,\n                  ),\n                  type: 'string',\n                  description: '',\n                },\n              },\n              required: ['title'],\n            }}\n          />\n        </div>\n        <Container>\n          <article id=\"content\">\n            <Header disabled>{this.props.controlpanel.title}</Header>\n            <section id=\"content-core\">\n              <Table compact singleLine striped>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Type\" defaultMessage=\"Type\" />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>\n                      <FormattedMessage\n                        id=\"Description\"\n                        defaultMessage=\"Description\"\n                      />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Items\" defaultMessage=\"Items\" />\n                    </Table.HeaderCell>\n                    <Table.HeaderCell textAlign=\"right\">\n                      <FormattedMessage id=\"Actions\" defaultMessage=\"Actions\" />\n                    </Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {this.props.controlpanel.items.map((item) => (\n                    <Table.Row key={item['@id']}>\n                      <Table.Cell>\n                        <Link to={`${this.props.pathname}/${item['id']}`}>\n                          {item.title}\n                        </Link>\n                      </Table.Cell>\n                      <Table.Cell>{item.description}</Table.Cell>\n                      <Table.Cell>{item.count}</Table.Cell>\n                      <Table.Cell textAlign=\"right\">\n                        <ContentTypesActions\n                          item={item}\n                          path={this.props.pathname}\n                          onEdit={this.onEdit}\n                          onDelete={this.onDelete}\n                          onSchema={this.onSchema}\n                          onLayout={this.onLayout}\n                        />\n                      </Table.Cell>\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n            </section>\n          </article>\n        </Container>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Link to={getParentUrl(this.props.pathname)} className=\"item\">\n                    <Icon\n                      name={backSVG}\n                      size=\"30px\"\n                      className=\"contents circled\"\n                      title={this.props.intl.formatMessage(messages.back)}\n                    />\n                  </Link>\n                  <Button\n                    className=\"add\"\n                    aria-label={this.props.intl.formatMessage(messages.add)}\n                    tabIndex={0}\n                    id=\"toolbar-add\"\n                    onClick={() => {\n                      this.setState({ showAddType: true });\n                    }}\n                  >\n                    <Icon\n                      name={addSVG}\n                      title={this.props.intl.formatMessage(\n                        messages.addTypeButtonTitle,\n                      )}\n                    />\n                  </Button>\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      controlpanel: state.controlpanels.controlpanel,\n      cpanelRequest: state.controlpanels,\n      pathname: props.location.pathname,\n      id: last(props.location.pathname.split('/')),\n    }),\n    {\n      getControlpanel,\n      postControlpanel,\n      deleteControlpanel,\n    },\n  ),\n)(ContentTypes);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Add","defaultMessage":"Add"},{"id":"Back","defaultMessage":"Back"},{"id":"Yes","defaultMessage":"Yes"},{"id":"No","defaultMessage":"No"},{"id":"Add new content type","defaultMessage":"Add new content type"},{"id":"Title","defaultMessage":"Title"},{"id":"Description","defaultMessage":"Description"},{"id":"Success","defaultMessage":"Success"},{"id":"Content type created","defaultMessage":"Content type created"},{"id":"Delete Type","defaultMessage":"Delete Type"},{"id":"Content type deleted","defaultMessage":"Content type deleted"},{"id":"Do you really want to delete the type {typename}?","defaultMessage":"Do you really want to delete type {typename}?"},{"id":"Type","defaultMessage":"Type"},{"id":"Items","defaultMessage":"Items"},{"id":"Actions","defaultMessage":"Actions"}]}},"sourceType":"module","externalDependencies":[]}