{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/Collection/TilesListing.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { FormattedDate } from 'react-intl';\nimport { Item } from 'semantic-ui-react';\nimport { Placeholder } from 'semantic-ui-react';\n// import { Breadcrumb } from 'semantic-ui-react';\n// import { Link } from 'react-router-dom';\n// import { flattenToAppURL } from '@plone/volto/helpers';\n\nclass TilesListing extends Component {\n  render() {\n    const {\n      items\n    } = this.props;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"tile-listing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, __jsx(Item.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, items.length ? items.map(item => __jsx(Item, {\n      key: item['@id'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, __jsx(Item.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 19\n      }\n    }, __jsx(Item.Header, {\n      as: \"a\",\n      href: item.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, __jsx(\"h3\", {\n      className: \"tile-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 23\n      }\n    }, item.Title || item.title)), __jsx(Item.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, item.description), __jsx(Item.Extra, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, __jsx(\"span\", {\n      className: \"muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }\n    }, \"Updated:\"), __jsx(FormattedDate, {\n      value: item.ModificationDate,\n      day: \"2-digit\",\n      month: \"long\",\n      year: \"numeric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }\n    }))))) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"No results.\"), __jsx(Placeholder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, __jsx(Placeholder.Header, {\n      image: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, __jsx(Placeholder.Line, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), __jsx(Placeholder.Line, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    })), __jsx(Placeholder.Paragraph, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, __jsx(Placeholder.Line, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), __jsx(Placeholder.Line, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    })))))));\n  }\n}\nexport default TilesListing;","map":{"version":3,"names":["React","Component","FormattedDate","Item","Placeholder","TilesListing","render","items","props","length","map","item","url","Title","title","description","ModificationDate"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/Collection/TilesListing.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { FormattedDate } from 'react-intl';\nimport { Item } from 'semantic-ui-react';\nimport { Placeholder } from 'semantic-ui-react';\n// import { Breadcrumb } from 'semantic-ui-react';\n// import { Link } from 'react-router-dom';\n// import { flattenToAppURL } from '@plone/volto/helpers';\n\nclass TilesListing extends Component {\n  render() {\n    const { items } = this.props;\n\n    return (\n      <div>\n        <div className=\"tile-listing\">\n          <Item.Group>\n            {items.length ? (\n              items.map((item) => (\n                <Item key={item['@id']}>\n                  <Item.Content>\n                    <Item.Header as=\"a\" href={item.url}>\n                      <h3 className=\"tile-title\">{item.Title || item.title}</h3>\n                    </Item.Header>\n                    {/* {item['@components'] && item['@components'].breadcrumbs && (\n                      <Breadcrumb>\n                        {item['@components'].breadcrumbs.items\n                          .slice(0, -1)\n                          .map((item, index, items) => [\n                            index < items.length - 1 ? (\n                              <Breadcrumb.Section>\n                                <Link\n                                  key={item.url}\n                                  to={flattenToAppURL(item['@id'])}\n                                >\n                                  {item.title}\n                                </Link>\n                                <Breadcrumb.Divider\n                                  key={`divider-${item.url}`}\n                                />\n                              </Breadcrumb.Section>\n                            ) : (\n                              <Breadcrumb.Section>\n                                <Link\n                                  key={item.url}\n                                  to={flattenToAppURL(item['@id'])}\n                                >\n                                  {item.title}\n                                </Link>\n                              </Breadcrumb.Section>\n                            ),\n                          ])}\n                      </Breadcrumb>\n                    )} */}\n                    <Item.Description>{item.description}</Item.Description>\n                    <Item.Extra>\n                      <span className=\"muted\">Updated:</span>\n                      <FormattedDate\n                        value={item.ModificationDate}\n                        day=\"2-digit\"\n                        month=\"long\"\n                        year=\"numeric\"\n                      />\n                    </Item.Extra>\n                  </Item.Content>\n                </Item>\n              ))\n            ) : (\n              <div>\n                <p>No results.</p>\n                <Placeholder>\n                  <Placeholder.Header image>\n                    <Placeholder.Line />\n                    <Placeholder.Line />\n                  </Placeholder.Header>\n                  <Placeholder.Paragraph>\n                    <Placeholder.Line />\n                    <Placeholder.Line />\n                  </Placeholder.Paragraph>\n                </Placeholder>\n              </div>\n            )}\n          </Item.Group>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TilesListing;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,aAAa,QAAQ,YAAY;AAC1C,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C;AACA;AACA;;AAEA,MAAMC,YAAY,SAASJ,SAAS,CAAC;EACnCK,MAAM,GAAG;IACP,MAAM;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACC,KAAK;IAE5B,OACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE;MAAK,SAAS,EAAC,cAAc;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC3B,MAAC,IAAI,CAAC,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACRD,KAAK,CAACE,MAAM,GACXF,KAAK,CAACG,GAAG,CAAEC,IAAI,IACb,MAAC,IAAI;MAAC,GAAG,EAAEA,IAAI,CAAC,KAAK,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACrB,MAAC,IAAI,CAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACX,MAAC,IAAI,CAAC,MAAM;MAAC,EAAE,EAAC,GAAG;MAAC,IAAI,EAAEA,IAAI,CAACC,GAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACjC;MAAI,SAAS,EAAC,YAAY;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAED,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACG,KAAK,CAAM,CAC9C,EA+Bd,MAAC,IAAI,CAAC,WAAW;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAEH,IAAI,CAACI,WAAW,CAAoB,EACvD,MAAC,IAAI,CAAC,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACT;MAAM,SAAS,EAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,cAAgB,EACvC,MAAC,aAAa;MACZ,KAAK,EAAEJ,IAAI,CAACK,gBAAiB;MAC7B,GAAG,EAAC,SAAS;MACb,KAAK,EAAC,MAAM;MACZ,IAAI,EAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACd,CACS,CACA,CAElB,CAAC,GAEF;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,iBAAkB,EAClB,MAAC,WAAW;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACV,MAAC,WAAW,CAAC,MAAM;MAAC,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACvB,MAAC,WAAW,CAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,EACpB,MAAC,WAAW,CAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACD,EACrB,MAAC,WAAW,CAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACpB,MAAC,WAAW,CAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,EACpB,MAAC,WAAW,CAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACE,CACZ,CAEjB,CACU,CACT,CACF;EAEV;AACF;AAEA,eAAeX,YAAY"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}