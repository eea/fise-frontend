{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-object-widget/src/Widget/AttachedImageWidget.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport loadable from '@loadable/component';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Dimmer, Loader, Message, Button, Input } from 'semantic-ui-react';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport { createContent } from '@plone/volto/actions';\nimport { flattenToAppURL, getBaseUrl, isInternalURL } from '@plone/volto/helpers';\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\nimport './style.css';\nconst Dropzone = loadable({\n  resolved: {},\n  chunkName() {\n    return \"react-dropzone\";\n  },\n  isReady(props) {\n    var key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: () => import( /* webpackChunkName: \"react-dropzone\" */'react-dropzone'),\n  requireAsync(props) {\n    var _this = this;\n    var key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(function (resolved) {\n      _this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync(props) {\n    var id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-dropzone\");\n    }\n    return eval('require.resolve')(\"react-dropzone\");\n  }\n});\nconst messages = defineMessages({\n  AttachedImageWidgetInputPlaceholder: {\n    \"id\": \"Browse the site, drop an image, or type an URL\",\n    \"defaultMessage\": \"Browse the site, drop an image, or type an URL\"\n  }\n});\nexport class AttachedImageWidget extends Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"state\", {\n      uploading: false,\n      url: '',\n      dragging: false\n    });\n    _defineProperty(this, \"onUploadImage\", e => {\n      e.stopPropagation();\n      const file = e.target.files[0];\n      this.setState({\n        uploading: true\n      });\n      readAsDataURL(file).then(data => {\n        const fields = data.match(/^data:(.*);(.*),(.*)$/);\n        this.props.createContent(getBaseUrl(this.props.pathname), {\n          '@type': 'Image',\n          title: file.name,\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file.name\n          }\n        }, this.props.block);\n      });\n    });\n    _defineProperty(this, \"onChangeUrl\", ({\n      target\n    }) => {\n      this.setState({\n        url: target.value\n      });\n    });\n    _defineProperty(this, \"onSubmitUrl\", () => {\n      this.props.onChange(this.props.id, flattenToAppURL(this.state.url));\n    });\n    _defineProperty(this, \"resetSubmitUrl\", () => {\n      this.setState({\n        url: ''\n      });\n    });\n    _defineProperty(this, \"onDrop\", file => {\n      this.setState({\n        uploading: true\n      });\n      readAsDataURL(file[0]).then(data => {\n        const fields = data.match(/^data:(.*);(.*),(.*)$/);\n        this.props.createContent(getBaseUrl(this.props.pathname), {\n          '@type': 'Image',\n          title: file[0].name,\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file[0].name\n          }\n        }, this.props.block);\n      });\n    });\n    _defineProperty(this, \"onDragEnter\", () => {\n      this.setState({\n        dragging: true\n      });\n    });\n    _defineProperty(this, \"onDragLeave\", () => {\n      this.setState({\n        dragging: false\n      });\n    });\n    _defineProperty(this, \"node\", /*#__PURE__*/React.createRef());\n  }\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded && this.state.uploading) {\n      this.setState({\n        uploading: false\n      });\n      this.props.onChange(this.props.id, nextProps.content['@id']);\n    }\n  }\n\n  /**\n   * @param {*} nextProps\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps, nextState) {\n    return !_isEqual(this.props.value, nextProps.value) || !_isEqual(this.state, nextState);\n  }\n\n  /**\n   * Upload image handler (not used), but useful in case that we want a button\n   * not powered by react-dropzone\n   * @method onUploadImage\n   * @returns {undefined}\n   */\n\n  render() {\n    const placeholder = this.props.placeholder || this.props.intl.formatMessage(messages.AttachedImageWidgetInputPlaceholder);\n    return __jsx(FormFieldWrapper, _extends({\n      columns: 1,\n      className: \"field-attached-image\"\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }\n    }), __jsx(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }, this.props.title)), this.props.value && __jsx(\"div\", {\n      className: \"preview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: isInternalURL(this.props.value) ? `${flattenToAppURL(this.props.value)}/@@images/image/preview` : this.props.value,\n      alt: \"Preview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      basic: true,\n      icon: true,\n      className: \"cancel\",\n      onClick: e => {\n        e.stopPropagation();\n        this.setState({\n          url: ''\n        }, () => {\n          this.onSubmitUrl();\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: clearSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    })))), !this.props.value && __jsx(Dropzone, {\n      noClick: true,\n      onDrop: this.onDrop,\n      onDragEnter: this.onDragEnter,\n      onDragLeave: this.onDragLeave,\n      className: \"dropzone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => __jsx(\"div\", _extends({}, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    }), __jsx(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, this.state.dragging && __jsx(Dimmer, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 43\n      }\n    }), this.state.uploading && __jsx(Dimmer, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }\n    }, __jsx(Loader, {\n      indeterminate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 23\n      }\n    }, \"Uploading image\")), __jsx(\"div\", {\n      className: \"no-image-wrapper\",\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 19\n      }\n    }, __jsx(\"img\", {\n      src: imageBlockSVG,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      className: \"toolbar-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 23\n      }\n    }, __jsx(Button, {\n      basic: true,\n      icon: true,\n      onClick: e => {\n        e.stopPropagation();\n        e.preventDefault();\n        this.props.openObjectBrowser({\n          mode: 'image',\n          currentPath: this.props.pathname,\n          onSelectItem: url => {\n            this.setState({\n              url\n            });\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }, __jsx(Icon, {\n      name: navTreeSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 27\n      }\n    })), __jsx(Button, {\n      as: \"label\",\n      basic: true,\n      icon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 25\n      }\n    }, __jsx(Icon, {\n      name: uploadSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 27\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps({\n      type: 'file',\n      onChange: this.onUploadImage,\n      style: {\n        display: 'none'\n      }\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 27\n      }\n    })))), __jsx(\"div\", {\n      style: {\n        flexGrow: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 23\n      }\n    }), __jsx(Input, {\n      onChange: this.onChangeUrl,\n      placeholder: placeholder,\n      value: this.state.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 23\n      }\n    }), __jsx(\"div\", {\n      style: {\n        flexGrow: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 23\n      }\n    }), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 23\n      }\n    }, this.state.url && __jsx(Button, {\n      basic: true,\n      icon: true,\n      secondary: true,\n      className: \"cancel\",\n      onClick: e => {\n        e.stopPropagation();\n        this.setState({\n          url: ''\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 27\n      }\n    }, __jsx(Icon, {\n      name: clearSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 29\n      }\n    })), __jsx(Button, {\n      basic: true,\n      icon: true,\n      primary: true,\n      disabled: !this.state.url,\n      onClick: e => {\n        e.stopPropagation();\n        this.onSubmitUrl();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    }, __jsx(Icon, {\n      name: aheadSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 27\n      }\n    })))))))));\n  }\n}\n_defineProperty(AttachedImageWidget, \"propTypes\", {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  value: PropTypes.any,\n  block: PropTypes.string.isRequired,\n  request: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  pathname: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, withObjectBrowser, connect((state, props) => {\n  var _state$content$subreq;\n  return {\n    pathname: state.router.location.pathname,\n    request: state.content.subrequests[props.block] || {},\n    content: (_state$content$subreq = state.content.subrequests[props.block]) === null || _state$content$subreq === void 0 ? void 0 : _state$content$subreq.data\n  };\n}, {\n  createContent\n}))(AttachedImageWidget);","map":{"version":3,"names":["loadable","PropTypes","React","Component","connect","compose","readAsDataURL","defineMessages","injectIntl","Dimmer","Loader","Message","Button","Input","FormFieldWrapper","Icon","withObjectBrowser","createContent","flattenToAppURL","getBaseUrl","isInternalURL","imageBlockSVG","clearSVG","navTreeSVG","aheadSVG","uploadSVG","Dropzone","messages","AttachedImageWidgetInputPlaceholder","AttachedImageWidget","uploading","url","dragging","e","stopPropagation","file","target","files","setState","then","data","fields","match","props","pathname","title","name","image","encoding","filename","block","value","onChange","id","state","createRef","UNSAFE_componentWillReceiveProps","nextProps","request","loading","loaded","content","shouldComponentUpdate","nextState","render","placeholder","intl","formatMessage","onSubmitUrl","onDrop","onDragEnter","onDragLeave","getRootProps","getInputProps","textAlign","preventDefault","openObjectBrowser","mode","currentPath","onSelectItem","type","onUploadImage","style","display","flexGrow","onChangeUrl","string","any","isRequired","shape","bool","func","router","location","subrequests"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-object-widget/src/Widget/AttachedImageWidget.jsx"],"sourcesContent":["import { isEqual } from 'lodash';\nimport loadable from '@loadable/component';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { readAsDataURL } from 'promise-file-reader';\n\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Dimmer, Loader, Message, Button, Input } from 'semantic-ui-react';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport { createContent } from '@plone/volto/actions';\nimport {\n  flattenToAppURL,\n  getBaseUrl,\n  isInternalURL,\n} from '@plone/volto/helpers';\n\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\n\nimport './style.css';\n\nconst Dropzone = loadable(() => import('react-dropzone'));\n\nconst messages = defineMessages({\n  AttachedImageWidgetInputPlaceholder: {\n    id: 'Browse the site, drop an image, or type an URL',\n    defaultMessage: 'Browse the site, drop an image, or type an URL',\n  },\n});\n\nexport class AttachedImageWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string,\n    title: PropTypes.string,\n    value: PropTypes.any,\n    block: PropTypes.string.isRequired,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    openObjectBrowser: PropTypes.func.isRequired,\n  };\n\n  state = {\n    uploading: false,\n    url: '',\n    dragging: false,\n  };\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.request.loading &&\n      nextProps.request.loaded &&\n      this.state.uploading\n    ) {\n      this.setState({\n        uploading: false,\n      });\n      this.props.onChange(this.props.id, nextProps.content['@id']);\n    }\n  }\n\n  /**\n   * @param {*} nextProps\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      !isEqual(this.props.value, nextProps.value) ||\n      !isEqual(this.state, nextState)\n    );\n  }\n\n  /**\n   * Upload image handler (not used), but useful in case that we want a button\n   * not powered by react-dropzone\n   * @method onUploadImage\n   * @returns {undefined}\n   */\n  onUploadImage = (e) => {\n    e.stopPropagation();\n    const file = e.target.files[0];\n    this.setState({\n      uploading: true,\n    });\n    readAsDataURL(file).then((data) => {\n      const fields = data.match(/^data:(.*);(.*),(.*)$/);\n      this.props.createContent(\n        getBaseUrl(this.props.pathname),\n        {\n          '@type': 'Image',\n          title: file.name,\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file.name,\n          },\n        },\n        this.props.block,\n      );\n    });\n  };\n\n  /**\n   * Change url handler\n   * @method onChangeUrl\n   * @param {Object} target Target object\n   * @returns {undefined}\n   */\n  onChangeUrl = ({ target }) => {\n    this.setState({\n      url: target.value,\n    });\n  };\n\n  /**\n   * Submit url handler\n   * @method onSubmitUrl\n   * @param {object} e Event\n   * @returns {undefined}\n   */\n  onSubmitUrl = () => {\n    this.props.onChange(this.props.id, flattenToAppURL(this.state.url));\n  };\n\n  resetSubmitUrl = () => {\n    this.setState({\n      url: '',\n    });\n  };\n\n  /**\n   * Drop handler\n   * @method onDrop\n   * @param {array} files File objects\n   * @returns {undefined}\n   */\n  onDrop = (file) => {\n    this.setState({\n      uploading: true,\n    });\n\n    readAsDataURL(file[0]).then((data) => {\n      const fields = data.match(/^data:(.*);(.*),(.*)$/);\n      this.props.createContent(\n        getBaseUrl(this.props.pathname),\n        {\n          '@type': 'Image',\n          title: file[0].name,\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file[0].name,\n          },\n        },\n        this.props.block,\n      );\n    });\n  };\n\n  onDragEnter = () => {\n    this.setState({ dragging: true });\n  };\n\n  onDragLeave = () => {\n    this.setState({ dragging: false });\n  };\n\n  node = React.createRef();\n\n  render() {\n    const placeholder =\n      this.props.placeholder ||\n      this.props.intl.formatMessage(\n        messages.AttachedImageWidgetInputPlaceholder,\n      );\n\n    return (\n      <FormFieldWrapper\n        columns={1}\n        className=\"field-attached-image\"\n        {...this.props}\n      >\n        <div className=\"wrapper\">\n          <label>{this.props.title}</label>\n        </div>\n        {this.props.value && (\n          <div className=\"preview\">\n            <img\n              src={\n                isInternalURL(this.props.value)\n                  ? `${flattenToAppURL(\n                      this.props.value,\n                    )}/@@images/image/preview`\n                  : this.props.value\n              }\n              alt=\"Preview\"\n            />\n            <Button.Group>\n              <Button\n                basic\n                icon\n                className=\"cancel\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  this.setState({ url: '' }, () => {\n                    this.onSubmitUrl();\n                  });\n                }}\n              >\n                <Icon name={clearSVG} size=\"30px\" />\n              </Button>\n            </Button.Group>\n          </div>\n        )}\n        {!this.props.value && (\n          <Dropzone\n            noClick\n            onDrop={this.onDrop}\n            onDragEnter={this.onDragEnter}\n            onDragLeave={this.onDragLeave}\n            className=\"dropzone\"\n          >\n            {({ getRootProps, getInputProps }) => (\n              <div {...getRootProps()}>\n                <Message>\n                  {this.state.dragging && <Dimmer active></Dimmer>}\n                  {this.state.uploading && (\n                    <Dimmer active>\n                      <Loader indeterminate>Uploading image</Loader>\n                    </Dimmer>\n                  )}\n                  <div\n                    className=\"no-image-wrapper\"\n                    style={{ textAlign: 'center' }}\n                  >\n                    <img src={imageBlockSVG} alt=\"\" />\n                    <div className=\"toolbar-inner\">\n                      <Button.Group>\n                        <Button\n                          basic\n                          icon\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            e.preventDefault();\n                            this.props.openObjectBrowser({\n                              mode: 'image',\n                              currentPath: this.props.pathname,\n                              onSelectItem: (url) => {\n                                this.setState({ url });\n                              },\n                            });\n                          }}\n                        >\n                          <Icon name={navTreeSVG} size=\"24px\" />\n                        </Button>\n                        <Button as=\"label\" basic icon>\n                          <Icon name={uploadSVG} size=\"24px\" />\n                          <input\n                            {...getInputProps({\n                              type: 'file',\n                              onChange: this.onUploadImage,\n                              style: { display: 'none' },\n                            })}\n                          />\n                        </Button>\n                      </Button.Group>\n                      <div style={{ flexGrow: 1 }} />\n                      <Input\n                        onChange={this.onChangeUrl}\n                        placeholder={placeholder}\n                        value={this.state.url}\n                      />\n                      <div style={{ flexGrow: 1 }} />\n                      <Button.Group>\n                        {this.state.url && (\n                          <Button\n                            basic\n                            icon\n                            secondary\n                            className=\"cancel\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              this.setState({ url: '' });\n                            }}\n                          >\n                            <Icon name={clearSVG} size=\"24px\" />\n                          </Button>\n                        )}\n                        <Button\n                          basic\n                          icon\n                          primary\n                          disabled={!this.state.url}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            this.onSubmitUrl();\n                          }}\n                        >\n                          <Icon name={aheadSVG} size=\"24px\" />\n                        </Button>\n                      </Button.Group>\n                    </div>\n                  </div>\n                </Message>\n              </div>\n            )}\n          </Dropzone>\n        )}\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  withObjectBrowser,\n  connect(\n    (state, props) => ({\n      pathname: state.router.location.pathname,\n      request: state.content.subrequests[props.block] || {},\n      content: state.content.subrequests[props.block]?.data,\n    }),\n    {\n      createContent,\n    },\n  ),\n)(AttachedImageWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Browse the site, drop an image, or type an URL","defaultMessage":"Browse the site, drop an image, or type an URL"}]}},"sourceType":"module","externalDependencies":[]}