{"ast":null,"code":"import _range from \"lodash/range\";\nimport _map from \"lodash/map\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/Widgets/CollectionYears.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * CollectionYears component.\n * @module components/manage/Widgets/CollectionYears\n */\n\nimport React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { Form, Grid, Label, Icon as IconOld, Dropdown } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nconst messages = defineMessages({\n  default: {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  idTitle: {\n    \"id\": \"Short Name\",\n    \"defaultMessage\": \"Short Name\"\n  },\n  idDescription: {\n    \"id\": \"Used for programmatic access to the fieldset.\",\n    \"defaultMessage\": \"Used for programmatic access to the fieldset.\"\n  },\n  title: {\n    \"id\": \"Title\",\n    \"defaultMessage\": \"Title\"\n  },\n  description: {\n    \"id\": \"Description\",\n    \"defaultMessage\": \"Description\"\n  },\n  required: {\n    \"id\": \"Required\",\n    \"defaultMessage\": \"Required\"\n  }\n});\nconst currentYear = new Date().getFullYear();\nconst years = _range(1929, currentYear).map(y => ({\n  text: y,\n  value: y\n}));\n\n/**\n * CollectionYears component class.\n * @class CollectionYears\n * @extends Component\n */\nclass CollectionYears extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  // static propTypes = {\n  //   id: PropTypes.string.isRequired,\n  //   title: PropTypes.string.isRequired,\n  //   description: PropTypes.string,\n  //   required: PropTypes.bool,\n  //   error: PropTypes.arrayOf(PropTypes.string),\n  //   value: PropTypes.string,\n  //   focus: PropTypes.bool,\n  //   onChange: PropTypes.func,\n  //   onEdit: PropTypes.func,\n  //   onDelete: PropTypes.func,\n  //   icon: PropTypes.shape({\n  //     xmlns: PropTypes.string,\n  //     viewBox: PropTypes.string,\n  //     content: PropTypes.string,\n  //   }),\n  //   iconAction: PropTypes.func,\n  // };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      title,\n      required,\n      description,\n      error,\n      value,\n      // onChange,\n      onEdit,\n      onDelete,\n      intl,\n      icon,\n      iconAction,\n      fieldSet\n    } = this.props;\n    const schema = {\n      fieldsets: [{\n        id: 'default',\n        title: intl.formatMessage(messages.default),\n        fields: ['title', 'id', 'description', 'required']\n      }],\n      properties: {\n        id: {\n          type: 'string',\n          title: intl.formatMessage(messages.idTitle),\n          description: intl.formatMessage(messages.idDescription)\n        },\n        title: {\n          type: 'string',\n          title: intl.formatMessage(messages.title)\n        },\n        description: {\n          type: 'string',\n          widget: 'textarea',\n          title: intl.formatMessage(messages.description)\n        },\n        required: {\n          type: 'boolean',\n          title: intl.formatMessage(messages.required)\n        }\n      },\n      required: ['id', 'title']\n    };\n    return __jsx(Form.Field, {\n      inline: true,\n      required: required,\n      error: error.length > 0,\n      className: description ? 'help text' : 'text',\n      id: `${fieldSet || 'field'}-${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, __jsx(Grid.Column, {\n      width: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, __jsx(\"label\", {\n      htmlFor: `field-${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, onEdit && __jsx(\"i\", {\n      \"aria-hidden\": \"true\",\n      className: \"grey bars icon drag handle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }), title))), __jsx(Grid.Column, {\n      width: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, onEdit && __jsx(\"div\", {\n      className: \"toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, __jsx(\"button\", {\n      className: \"item ui noborder button\",\n      onClick: () => onEdit(id, schema),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }, __jsx(IconOld, {\n      name: \"write square\",\n      size: \"large\",\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    })), __jsx(\"button\", {\n      \"aria-label\": \"Delete\",\n      className: \"item ui noborder button\",\n      onClick: () => onDelete(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }\n    }, __jsx(IconOld, {\n      name: \"close\",\n      size: \"large\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }))), __jsx(Dropdown, {\n      placeholder: \"Start Year\",\n      search: true,\n      selection: true,\n      options: years,\n      value: value && value.start_year,\n      onChange: (e, data) => this.props.onChange(id, {\n        end_year: value && value.end_year,\n        start_year: data.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }), __jsx(Dropdown, {\n      placeholder: \"End Year\",\n      search: true,\n      selection: true,\n      options: years,\n      value: value && value.end_year,\n      onChange: (e, data) => this.props.onChange(id, {\n        end_year: data.value,\n        start_year: value && value.start_year\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }), _map(error, message => __jsx(Label, {\n      key: message,\n      basic: true,\n      color: \"red\",\n      pointing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, message)), icon && iconAction && __jsx(\"button\", {\n      onClick: iconAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      name: icon,\n      size: \"18px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }\n    })))), description && __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }, __jsx(Grid.Column, {\n      stretched: true,\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 15\n      }\n    }, __jsx(\"p\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }\n    }, description)))));\n  }\n}\n_defineProperty(CollectionYears, \"defaultProps\", {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n  focus: false,\n  icon: null,\n  iconAction: null\n});\nexport default injectIntl(CollectionYears);","map":{"version":3,"names":["React","Component","Form","Grid","Label","Icon","IconOld","Dropdown","defineMessages","injectIntl","messages","default","idTitle","idDescription","title","description","required","currentYear","Date","getFullYear","years","map","y","text","value","CollectionYears","componentDidMount","props","focus","node","render","id","error","onEdit","onDelete","intl","icon","iconAction","fieldSet","schema","fieldsets","formatMessage","fields","properties","type","widget","length","start_year","e","data","onChange","end_year","message"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/Widgets/CollectionYears.jsx"],"sourcesContent":["/**\n * CollectionYears component.\n * @module components/manage/Widgets/CollectionYears\n */\n\nimport React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport {\n  Form,\n  Grid,\n  Label,\n  Icon as IconOld,\n  Dropdown,\n} from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport { range } from 'lodash';\n\nconst messages = defineMessages({\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  idTitle: {\n    id: 'Short Name',\n    defaultMessage: 'Short Name',\n  },\n  idDescription: {\n    id: 'Used for programmatic access to the fieldset.',\n    defaultMessage: 'Used for programmatic access to the fieldset.',\n  },\n  title: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  description: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  required: {\n    id: 'Required',\n    defaultMessage: 'Required',\n  },\n});\n\nconst currentYear = new Date().getFullYear();\nconst years = range(1929, currentYear).map((y) => ({\n  text: y,\n  value: y,\n}));\n\n/**\n * CollectionYears component class.\n * @class CollectionYears\n * @extends Component\n */\nclass CollectionYears extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  // static propTypes = {\n  //   id: PropTypes.string.isRequired,\n  //   title: PropTypes.string.isRequired,\n  //   description: PropTypes.string,\n  //   required: PropTypes.bool,\n  //   error: PropTypes.arrayOf(PropTypes.string),\n  //   value: PropTypes.string,\n  //   focus: PropTypes.bool,\n  //   onChange: PropTypes.func,\n  //   onEdit: PropTypes.func,\n  //   onDelete: PropTypes.func,\n  //   icon: PropTypes.shape({\n  //     xmlns: PropTypes.string,\n  //     viewBox: PropTypes.string,\n  //     content: PropTypes.string,\n  //   }),\n  //   iconAction: PropTypes.func,\n  // };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: null,\n    onChange: null,\n    onEdit: null,\n    onDelete: null,\n    focus: false,\n    icon: null,\n    iconAction: null,\n  };\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      title,\n      required,\n      description,\n      error,\n      value,\n      // onChange,\n      onEdit,\n      onDelete,\n      intl,\n      icon,\n      iconAction,\n      fieldSet,\n    } = this.props;\n\n    const schema = {\n      fieldsets: [\n        {\n          id: 'default',\n          title: intl.formatMessage(messages.default),\n          fields: ['title', 'id', 'description', 'required'],\n        },\n      ],\n      properties: {\n        id: {\n          type: 'string',\n          title: intl.formatMessage(messages.idTitle),\n          description: intl.formatMessage(messages.idDescription),\n        },\n        title: {\n          type: 'string',\n          title: intl.formatMessage(messages.title),\n        },\n        description: {\n          type: 'string',\n          widget: 'textarea',\n          title: intl.formatMessage(messages.description),\n        },\n        required: {\n          type: 'boolean',\n          title: intl.formatMessage(messages.required),\n        },\n      },\n      required: ['id', 'title'],\n    };\n\n    return (\n      <Form.Field\n        inline\n        required={required}\n        error={error.length > 0}\n        className={description ? 'help text' : 'text'}\n        id={`${fieldSet || 'field'}-${id}`}\n      >\n        <Grid>\n          <Grid.Row stretched>\n            <Grid.Column width=\"4\">\n              <div className=\"wrapper\">\n                <label htmlFor={`field-${id}`}>\n                  {onEdit && (\n                    <i\n                      aria-hidden=\"true\"\n                      className=\"grey bars icon drag handle\"\n                    />\n                  )}\n                  {title}\n                </label>\n              </div>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              {onEdit && (\n                <div className=\"toolbar\">\n                  <button\n                    className=\"item ui noborder button\"\n                    onClick={() => onEdit(id, schema)}\n                  >\n                    <IconOld name=\"write square\" size=\"large\" color=\"blue\" />\n                  </button>\n                  <button\n                    aria-label=\"Delete\"\n                    className=\"item ui noborder button\"\n                    onClick={() => onDelete(id)}\n                  >\n                    <IconOld name=\"close\" size=\"large\" color=\"red\" />\n                  </button>\n                </div>\n              )}\n\n              <Dropdown\n                placeholder=\"Start Year\"\n                search\n                selection\n                options={years}\n                value={value && value.start_year}\n                onChange={(e, data) =>\n                  this.props.onChange(id, {\n                    end_year: value && value.end_year,\n                    start_year: data.value,\n                  })\n                }\n              />\n\n              <Dropdown\n                placeholder=\"End Year\"\n                search\n                selection\n                options={years}\n                value={value && value.end_year}\n                onChange={(e, data) =>\n                  this.props.onChange(id, {\n                    end_year: data.value,\n                    start_year: value && value.start_year,\n                  })\n                }\n              />\n              {map(error, (message) => (\n                <Label key={message} basic color=\"red\" pointing>\n                  {message}\n                </Label>\n              ))}\n              {icon && iconAction && (\n                <button onClick={iconAction}>\n                  <Icon name={icon} size=\"18px\" />\n                </button>\n              )}\n            </Grid.Column>\n          </Grid.Row>\n          {description && (\n            <Grid.Row stretched>\n              <Grid.Column stretched width=\"12\">\n                <p className=\"help\">{description}</p>\n              </Grid.Column>\n            </Grid.Row>\n          )}\n        </Grid>\n      </Form.Field>\n    );\n  }\n}\n\nexport default injectIntl(CollectionYears);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Default","defaultMessage":"Default"},{"id":"Short Name","defaultMessage":"Short Name"},{"id":"Used for programmatic access to the fieldset.","defaultMessage":"Used for programmatic access to the fieldset."},{"id":"Title","defaultMessage":"Title"},{"id":"Description","defaultMessage":"Description"},{"id":"Required","defaultMessage":"Required"}]}},"sourceType":"module","externalDependencies":[]}