{"ast":null,"code":"import _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { Node } from 'slate';\nimport { isCursorAtBlockStart, isCursorAtBlockEnd, getNextVoltoBlock, getPreviousVoltoBlock, createDefaultBlock } from '@plone/volto-slate/utils';\n\n/**\n * goUp.\n *\n * @param {}\n */\nexport function goUp(_ref) {\n  var editor = _ref.editor,\n    event = _ref.event;\n  if (isCursorAtBlockStart(editor)) {\n    var _prev$;\n    var props = editor.getBlockProps();\n    var onFocusPreviousBlock = props.onFocusPreviousBlock,\n      block = props.block,\n      blockNode = props.blockNode;\n\n    // const { formContext } = editor;\n    // const properties = formContext.contextData.formData;\n    var _editor$getBlockProps = editor.getBlockProps(),\n      properties = _editor$getBlockProps.properties;\n    var prev = getPreviousVoltoBlock(props.index, properties);\n    if (!prev || ((_prev$ = prev[0]) === null || _prev$ === void 0 ? void 0 : _prev$['@type']) !== 'slate') return onFocusPreviousBlock(block, blockNode.current);\n    var _prev = _slicedToArray(prev, 2),\n      slateBlock = _prev[0],\n      id = _prev[1];\n    var pseudoEditor = {\n      children: slateBlock.value || [createDefaultBlock()]\n    };\n    var match = Node.last(pseudoEditor, []);\n    if (!match) return onFocusPreviousBlock(block, blockNode.current);\n    var _match = _slicedToArray(match, 2),\n      node = _match[0],\n      path = _match[1];\n    var point = {\n      path: path,\n      offset: ((node === null || node === void 0 ? void 0 : node.text) || '').length\n    };\n    var selection = {\n      anchor: point,\n      focus: point\n    };\n    props.saveSlateBlockSelection(id, selection);\n    return onFocusPreviousBlock(block, blockNode.current);\n  }\n}\n\n/**\n * goDown.\n *\n * @param {}\n */\nexport function goDown(_ref2) {\n  var editor = _ref2.editor,\n    event = _ref2.event;\n  if (isCursorAtBlockEnd(editor)) {\n    var _next$;\n    var props = editor.getBlockProps();\n    var onFocusNextBlock = props.onFocusNextBlock,\n      block = props.block,\n      blockNode = props.blockNode;\n\n    // const { formContext } = editor;\n    // const properties = formContext.contextData.formData;\n    var _editor$getBlockProps2 = editor.getBlockProps(),\n      properties = _editor$getBlockProps2.properties;\n    var next = getNextVoltoBlock(props.index, properties);\n    if (!next || ((_next$ = next[0]) === null || _next$ === void 0 ? void 0 : _next$['@type']) !== 'slate') return onFocusNextBlock(block, blockNode.current);\n    var _next = _slicedToArray(next, 2),\n      slateBlock = _next[0],\n      id = _next[1];\n    var pseudoEditor = {\n      children: slateBlock.value || [createDefaultBlock()]\n    };\n    var match = Node.first(pseudoEditor, []);\n    if (!match) return onFocusNextBlock(block, blockNode.current);\n    var path = match[1];\n    var point = {\n      path: path,\n      offset: 0\n    };\n    var selection = {\n      anchor: point,\n      focus: point\n    };\n    props.saveSlateBlockSelection(id, selection);\n    return onFocusNextBlock(block, blockNode.current);\n  }\n}\nexport function traverseBlocks(opts) {\n  var event = opts.event;\n  event.preventDefault();\n  // return event.shiftKey ? goUp(opts) : goDown(opts);\n  return true;\n}","map":{"version":3,"names":["Node","isCursorAtBlockStart","isCursorAtBlockEnd","getNextVoltoBlock","getPreviousVoltoBlock","createDefaultBlock","goUp","editor","event","props","getBlockProps","onFocusPreviousBlock","block","blockNode","properties","prev","index","current","slateBlock","id","pseudoEditor","children","value","match","last","node","path","point","offset","text","length","selection","anchor","focus","saveSlateBlockSelection","goDown","onFocusNextBlock","next","first","traverseBlocks","opts","preventDefault"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/packages/volto-slate/src/blocks/Text/keyboard/traverseBlocks.js"],"sourcesContent":["import { Node } from 'slate';\nimport {\n  isCursorAtBlockStart,\n  isCursorAtBlockEnd,\n  getNextVoltoBlock,\n  getPreviousVoltoBlock,\n  createDefaultBlock,\n} from '@plone/volto-slate/utils';\n\n/**\n * goUp.\n *\n * @param {}\n */\nexport function goUp({ editor, event }) {\n  if (isCursorAtBlockStart(editor)) {\n    const props = editor.getBlockProps();\n    const { onFocusPreviousBlock, block, blockNode } = props;\n\n    // const { formContext } = editor;\n    // const properties = formContext.contextData.formData;\n    const { properties } = editor.getBlockProps();\n\n    const prev = getPreviousVoltoBlock(props.index, properties);\n    if (!prev || prev[0]?.['@type'] !== 'slate')\n      return onFocusPreviousBlock(block, blockNode.current);\n\n    const [slateBlock, id] = prev;\n    const pseudoEditor = {\n      children: slateBlock.value || [createDefaultBlock()],\n    };\n    const match = Node.last(pseudoEditor, []);\n    if (!match) return onFocusPreviousBlock(block, blockNode.current);\n\n    const [node, path] = match;\n    const point = { path, offset: (node?.text || '').length };\n    const selection = { anchor: point, focus: point };\n    props.saveSlateBlockSelection(id, selection);\n    return onFocusPreviousBlock(block, blockNode.current);\n  }\n}\n\n/**\n * goDown.\n *\n * @param {}\n */\nexport function goDown({ editor, event }) {\n  if (isCursorAtBlockEnd(editor)) {\n    const props = editor.getBlockProps();\n    const { onFocusNextBlock, block, blockNode } = props;\n\n    // const { formContext } = editor;\n    // const properties = formContext.contextData.formData;\n    const { properties } = editor.getBlockProps();\n\n    const next = getNextVoltoBlock(props.index, properties);\n    if (!next || next[0]?.['@type'] !== 'slate')\n      return onFocusNextBlock(block, blockNode.current);\n\n    const [slateBlock, id] = next;\n    const pseudoEditor = {\n      children: slateBlock.value || [createDefaultBlock()],\n    };\n    const match = Node.first(pseudoEditor, []);\n    if (!match) return onFocusNextBlock(block, blockNode.current);\n\n    const path = match[1];\n    const point = { path, offset: 0 };\n    const selection = { anchor: point, focus: point };\n    props.saveSlateBlockSelection(id, selection);\n    return onFocusNextBlock(block, blockNode.current);\n  }\n}\n\nexport function traverseBlocks(opts) {\n  const { event } = opts;\n  event.preventDefault();\n  // return event.shiftKey ? goUp(opts) : goDown(opts);\n  return true;\n}\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}