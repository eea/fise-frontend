{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Groups/RenderGroups.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Users controlpanel groups.\n * @module components/manage/Controlpanels/UsersControlpanelGroups\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Dropdown, Table, Checkbox } from 'semantic-ui-react';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport { Icon } from '@plone/volto/components';\n\n/**\n * UsersControlpanelGroups class.\n * @class UsersControlpanelGroups\n * @extends Component\n */\nclass RenderGroups extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"isAuthGroup\", roleId => {\n      return this.props.inheritedRole.includes(roleId);\n    });\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /**\n   * @param {*} event\n   * @param {*} { value }\n   * @memberof UsersControlpanelUser\n   */\n  onChange(event, {\n    value\n  }) {\n    const [group, role] = value.split('.');\n    this.props.updateGroups(group, role);\n  }\n\n  /**\n   *@param {*}\n   *@returns {Boolean}\n   *@memberof RenderGroups\n   */\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return __jsx(Table.Row, {\n      key: this.props.group.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, this.props.group.groupname), this.props.roles.map(role => __jsx(Table.Cell, {\n      key: role.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, this.props.inheritedRole && this.props.inheritedRole.includes(role.id) && this.props.group.roles.includes('Authenticated') ? __jsx(Icon, {\n      name: ploneSVG,\n      size: \"20px\",\n      color: \"#007EB1\",\n      title: 'plone-svg',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }) : __jsx(Checkbox, {\n      checked: this.props.group.id === 'AuthenticatedUsers' ? this.isAuthGroup(role.id) : this.props.group.roles.includes(role.id),\n      onChange: this.onChange,\n      value: `${this.props.group.id}.${role.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }))), __jsx(Table.Cell, {\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, __jsx(Dropdown, {\n      icon: \"ellipsis horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, __jsx(Dropdown.Menu, {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, __jsx(Dropdown.Item, {\n      onClick: this.props.onDelete,\n      value: this.props.group['@id'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: trashSVG,\n      size: \"15px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }), __jsx(FormattedMessage, {\n      id: \"Delete\",\n      defaultMessage: \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }))))));\n  }\n}\n_defineProperty(RenderGroups, \"propTypes\", {\n  //single group\n  group: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    email: PropTypes.string,\n    groupname: PropTypes.string,\n    roles: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired,\n  roles: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string\n  })).isRequired,\n  inheritedRole: PropTypes.array,\n  onDelete: PropTypes.func.isRequired\n});\nexport default injectIntl(RenderGroups);","map":{"version":3,"names":["PropTypes","React","Component","FormattedMessage","injectIntl","Dropdown","Table","Checkbox","trashSVG","ploneSVG","Icon","RenderGroups","constructor","props","roleId","inheritedRole","includes","onChange","bind","event","value","group","role","split","updateGroups","render","title","groupname","roles","map","id","isAuthGroup","onDelete","shape","string","description","email","arrayOf","isRequired","array","func"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Groups/RenderGroups.jsx"],"sourcesContent":["/**\n * Users controlpanel groups.\n * @module components/manage/Controlpanels/UsersControlpanelGroups\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Dropdown, Table, Checkbox } from 'semantic-ui-react';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport ploneSVG from '@plone/volto/icons/plone.svg';\nimport { Icon } from '@plone/volto/components';\n\n/**\n * UsersControlpanelGroups class.\n * @class UsersControlpanelGroups\n * @extends Component\n */\nclass RenderGroups extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    //single group\n    group: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      email: PropTypes.string,\n      groupname: PropTypes.string,\n      roles: PropTypes.arrayOf(PropTypes.string),\n    }).isRequired,\n\n    roles: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n      }),\n    ).isRequired,\n    inheritedRole: PropTypes.array,\n    onDelete: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /**\n   * @param {*} event\n   * @param {*} { value }\n   * @memberof UsersControlpanelUser\n   */\n  onChange(event, { value }) {\n    const [group, role] = value.split('.');\n    this.props.updateGroups(group, role);\n  }\n\n  /**\n   *@param {*}\n   *@returns {Boolean}\n   *@memberof RenderGroups\n   */\n  isAuthGroup = (roleId) => {\n    return this.props.inheritedRole.includes(roleId);\n  };\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Table.Row key={this.props.group.title}>\n        <Table.Cell>{this.props.group.groupname}</Table.Cell>\n        {this.props.roles.map((role) => (\n          <Table.Cell key={role.id}>\n            {this.props.inheritedRole &&\n            this.props.inheritedRole.includes(role.id) &&\n            this.props.group.roles.includes('Authenticated') ? (\n              <Icon\n                name={ploneSVG}\n                size=\"20px\"\n                color=\"#007EB1\"\n                title={'plone-svg'}\n              />\n            ) : (\n              <Checkbox\n                checked={\n                  this.props.group.id === 'AuthenticatedUsers'\n                    ? this.isAuthGroup(role.id)\n                    : this.props.group.roles.includes(role.id)\n                }\n                onChange={this.onChange}\n                value={`${this.props.group.id}.${role.id}`}\n              />\n            )}\n          </Table.Cell>\n        ))}\n        <Table.Cell textAlign=\"right\">\n          <Dropdown icon=\"ellipsis horizontal\">\n            <Dropdown.Menu className=\"left\">\n              <Dropdown.Item\n                onClick={this.props.onDelete}\n                value={this.props.group['@id']}\n              >\n                <Icon name={trashSVG} size=\"15px\" />\n                <FormattedMessage id=\"Delete\" defaultMessage=\"Delete\" />\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nexport default injectIntl(RenderGroups);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Delete","defaultMessage":"Delete"}]}},"sourceType":"module","externalDependencies":[]}