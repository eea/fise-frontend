{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport React from 'react';\nimport { openlayers } from '..';\nimport { getOptions, getEvents, assign } from '../helpers';\nimport { withMapContext } from '../hocs';\nvar layer = openlayers.layer;\nvar Vector = /*#__PURE__*/function (_React$Component) {\n  _inherits(Vector, _React$Component);\n  var _super = _createSuper(Vector);\n  function Vector(props) {\n    var _this;\n    _classCallCheck(this, Vector);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"layer\", undefined);\n    _defineProperty(_assertThisInitialized(_this), \"options\", {\n      className: undefined,\n      declutter: undefined,\n      extent: undefined,\n      map: undefined,\n      maxResolution: undefined,\n      maxZoom: undefined,\n      minResolution: undefined,\n      minZoom: undefined,\n      opacity: undefined,\n      renderBuffer: undefined,\n      renderOrder: undefined,\n      source: undefined,\n      style: undefined,\n      updateWhileAnimating: undefined,\n      updateWhileInteracting: undefined,\n      visible: undefined,\n      zIndex: undefined\n    });\n    _defineProperty(_assertThisInitialized(_this), \"events\", {\n      'change:extent': undefined,\n      'change:maxResolution': undefined,\n      'change:maxZoom': undefined,\n      'change:minResolution': undefined,\n      'change:minZoom': undefined,\n      'change:opacity': undefined,\n      'change:source': undefined,\n      'change:visible': undefined,\n      'change:zIndex': undefined,\n      change: undefined,\n      error: undefined,\n      postrender: undefined,\n      prerender: undefined,\n      propertychange: undefined\n    });\n    _this.options = getOptions(assign(_this.options, _this.props));\n    _this.addLayer = _this.addLayer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(Vector, [{\n    key: \"addLayer\",\n    value: function addLayer() {\n      var mapRendered = this.props.mapRendered;\n      var events = getEvents(this.events, this.props);\n      this.layer = new layer.Vector(this.options);\n      for (var event in events) {\n        this.layer.on(event, events[event]);\n      }\n      if (!mapRendered) {\n        this.props.addLayer(this.layer);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.addLayer();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (__SERVER__ || !this.layer) return;\n      this.layer.dispose();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n  return Vector;\n}(React.Component);\nexport default _c = withMapContext(Vector);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","openlayers","getOptions","getEvents","assign","withMapContext","layer","Vector","props","undefined","className","declutter","extent","map","maxResolution","maxZoom","minResolution","minZoom","opacity","renderBuffer","renderOrder","source","style","updateWhileAnimating","updateWhileInteracting","visible","zIndex","change","error","postrender","prerender","propertychange","options","addLayer","bind","mapRendered","events","event","on","__SERVER__","dispose","Component"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-openlayers-map/src/Layers/Vector.jsx"],"sourcesContent":["import React from 'react';\nimport { openlayers } from '..';\nimport { getOptions, getEvents, assign } from '../helpers';\nimport { withMapContext } from '../hocs';\n\nconst { layer } = openlayers;\n\nclass Vector extends React.Component {\n  layer = undefined;\n\n  options = {\n    className: undefined,\n    declutter: undefined,\n    extent: undefined,\n    map: undefined,\n    maxResolution: undefined,\n    maxZoom: undefined,\n    minResolution: undefined,\n    minZoom: undefined,\n    opacity: undefined,\n    renderBuffer: undefined,\n    renderOrder: undefined,\n    source: undefined,\n    style: undefined,\n    updateWhileAnimating: undefined,\n    updateWhileInteracting: undefined,\n    visible: undefined,\n    zIndex: undefined,\n  };\n\n  events = {\n    'change:extent': undefined,\n    'change:maxResolution': undefined,\n    'change:maxZoom': undefined,\n    'change:minResolution': undefined,\n    'change:minZoom': undefined,\n    'change:opacity': undefined,\n    'change:source': undefined,\n    'change:visible': undefined,\n    'change:zIndex': undefined,\n    change: undefined,\n    error: undefined,\n    postrender: undefined,\n    prerender: undefined,\n    propertychange: undefined,\n  };\n\n  constructor(props) {\n    super(props);\n    this.options = getOptions(assign(this.options, this.props));\n    this.addLayer = this.addLayer.bind(this);\n  }\n\n  addLayer() {\n    const { mapRendered } = this.props;\n    let events = getEvents(this.events, this.props);\n    this.layer = new layer.Vector(this.options);\n    for (let event in events) {\n      this.layer.on(event, events[event]);\n    }\n    if (!mapRendered) {\n      this.props.addLayer(this.layer);\n    }\n  }\n\n  componentDidMount() {\n    this.addLayer();\n  }\n\n  componentWillUnmount() {\n    if (__SERVER__ || !this.layer) return;\n    this.layer.dispose();\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withMapContext(Vector);\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,IAAI;AAC/B,SAASC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,YAAY;AAC1D,SAASC,cAAc,QAAQ,SAAS;AAExC,IAAQC,KAAK,GAAKL,UAAU,CAApBK,KAAK;AAAgB,IAEvBC,MAAM;EAAA;EAAA;EAwCV,gBAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IAAE,wDAxCPC,SAAS;IAAA,0DAEP;MACRC,SAAS,EAAED,SAAS;MACpBE,SAAS,EAAEF,SAAS;MACpBG,MAAM,EAAEH,SAAS;MACjBI,GAAG,EAAEJ,SAAS;MACdK,aAAa,EAAEL,SAAS;MACxBM,OAAO,EAAEN,SAAS;MAClBO,aAAa,EAAEP,SAAS;MACxBQ,OAAO,EAAER,SAAS;MAClBS,OAAO,EAAET,SAAS;MAClBU,YAAY,EAAEV,SAAS;MACvBW,WAAW,EAAEX,SAAS;MACtBY,MAAM,EAAEZ,SAAS;MACjBa,KAAK,EAAEb,SAAS;MAChBc,oBAAoB,EAAEd,SAAS;MAC/Be,sBAAsB,EAAEf,SAAS;MACjCgB,OAAO,EAAEhB,SAAS;MAClBiB,MAAM,EAAEjB;IACV,CAAC;IAAA,yDAEQ;MACP,eAAe,EAAEA,SAAS;MAC1B,sBAAsB,EAAEA,SAAS;MACjC,gBAAgB,EAAEA,SAAS;MAC3B,sBAAsB,EAAEA,SAAS;MACjC,gBAAgB,EAAEA,SAAS;MAC3B,gBAAgB,EAAEA,SAAS;MAC3B,eAAe,EAAEA,SAAS;MAC1B,gBAAgB,EAAEA,SAAS;MAC3B,eAAe,EAAEA,SAAS;MAC1BkB,MAAM,EAAElB,SAAS;MACjBmB,KAAK,EAAEnB,SAAS;MAChBoB,UAAU,EAAEpB,SAAS;MACrBqB,SAAS,EAAErB,SAAS;MACpBsB,cAAc,EAAEtB;IAClB,CAAC;IAIC,MAAKuB,OAAO,GAAG9B,UAAU,CAACE,MAAM,CAAC,MAAK4B,OAAO,EAAE,MAAKxB,KAAK,CAAC,CAAC;IAC3D,MAAKyB,QAAQ,GAAG,MAAKA,QAAQ,CAACC,IAAI,+BAAM;IAAC;EAC3C;EAAC;IAAA;IAAA,OAED,oBAAW;MACT,IAAQC,WAAW,GAAK,IAAI,CAAC3B,KAAK,CAA1B2B,WAAW;MACnB,IAAIC,MAAM,GAAGjC,SAAS,CAAC,IAAI,CAACiC,MAAM,EAAE,IAAI,CAAC5B,KAAK,CAAC;MAC/C,IAAI,CAACF,KAAK,GAAG,IAAIA,KAAK,CAACC,MAAM,CAAC,IAAI,CAACyB,OAAO,CAAC;MAC3C,KAAK,IAAIK,KAAK,IAAID,MAAM,EAAE;QACxB,IAAI,CAAC9B,KAAK,CAACgC,EAAE,CAACD,KAAK,EAAED,MAAM,CAACC,KAAK,CAAC,CAAC;MACrC;MACA,IAAI,CAACF,WAAW,EAAE;QAChB,IAAI,CAAC3B,KAAK,CAACyB,QAAQ,CAAC,IAAI,CAAC3B,KAAK,CAAC;MACjC;IACF;EAAC;IAAA;IAAA,OAED,6BAAoB;MAClB,IAAI,CAAC2B,QAAQ,EAAE;IACjB;EAAC;IAAA;IAAA,OAED,gCAAuB;MACrB,IAAIM,UAAU,IAAI,CAAC,IAAI,CAACjC,KAAK,EAAE;MAC/B,IAAI,CAACA,KAAK,CAACkC,OAAO,EAAE;IACtB;EAAC;IAAA;IAAA,OAED,kBAAS;MACP,OAAO,IAAI;IACb;EAAC;EAAA;AAAA,EArEkBxC,KAAK,CAACyC,SAAS;AAwEpC,oBAAepC,cAAc,CAACE,MAAM,CAAC;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}