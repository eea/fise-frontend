{"ast":null,"code":"import _map from \"lodash/map\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Aliases.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Moderate comments component.\n * @module components/manage/Controlpanels/Aliases\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getBaseUrl, getParentUrl, Helmet } from '@plone/volto/helpers';\nimport { removeAliases, addAliases, getAliases } from '@plone/volto/actions';\nimport { Portal } from 'react-portal';\nimport { Container, Button, Segment, Form, Checkbox, Header, Input, Radio, Message, Table, Pagination, Menu } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport DatetimeWidget from '@plone/volto/components/manage/Widgets/DatetimeWidget';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nconst messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  aliases: {\n    \"id\": \"URL Management\",\n    \"defaultMessage\": \"URL Management\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  successAdd: {\n    \"id\": \"Alias has been added\",\n    \"defaultMessage\": \"Alias has been added\"\n  }\n});\nconst filterChoices = [{\n  label: 'Both',\n  value: ''\n}, {\n  label: 'Automatically',\n  value: 'no'\n}, {\n  label: 'Manually',\n  value: 'yes'\n}];\nconst itemsPerPageChoices = [10, 25, 50, 'All'];\n\n/**\n * Aliases class.\n * @class Aliases\n * @extends Component\n */\nclass Aliases extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Aliases\n   */\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"handleRemoveAliases\", () => {\n      const items = this.state.aliasesToRemove.map(a => {\n        return {\n          path: a\n        };\n      });\n      this.props.removeAliases('', {\n        items\n      });\n      this.setState({\n        aliasesToRemove: []\n      });\n    });\n    this.state = {\n      isClient: false,\n      filterType: filterChoices[0],\n      createdBefore: null,\n      altUrlPath: '',\n      isAltUrlCorrect: false,\n      targetUrlPath: '',\n      isTargetUrlCorrect: false,\n      aliasesToRemove: [],\n      errorMessageAdd: '',\n      filterQuery: '',\n      aliases: [],\n      activePage: 1,\n      pages: '',\n      itemsPerPage: 10\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    const {\n      filterQuery,\n      filterType,\n      createdBefore,\n      itemsPerPage\n    } = this.state;\n    this.setState({\n      isClient: true\n    });\n    this.props.getAliases(getBaseUrl(this.props.pathname), {\n      query: filterQuery,\n      manual: filterType.value,\n      datetime: createdBefore,\n      batchSize: itemsPerPage\n    });\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      filterQuery,\n      filterType,\n      createdBefore,\n      itemsPerPage\n    } = this.state;\n    if (prevProps.aliases.items_total !== this.props.aliases.items_total || prevState.itemsPerPage !== this.state.itemsPerPage) {\n      const pages = Math.ceil(this.props.aliases.items_total / this.state.itemsPerPage);\n      if (pages === 0 || isNaN(pages)) {\n        this.setState({\n          pages: ''\n        });\n      } else {\n        this.setState({\n          pages\n        });\n      }\n    }\n    if (prevState.activePage !== this.state.activePage || prevState.itemsPerPage !== this.state.itemsPerPage) {\n      this.props.getAliases(getBaseUrl(this.props.pathname), {\n        query: filterQuery,\n        manual: filterType.value,\n        datetime: createdBefore,\n        batchSize: itemsPerPage === 'All' ? 999999999999 : itemsPerPage,\n        batchStart: (this.state.activePage - 1) * this.state.itemsPerPage\n      });\n    }\n    if (prevState.altUrlPath !== this.state.altUrlPath) {\n      if (this.state.altUrlPath.charAt(0) === '/') {\n        this.setState({\n          isAltUrlCorrect: true\n        });\n      } else {\n        this.setState({\n          isAltUrlCorrect: false\n        });\n      }\n    }\n    if (prevState.targetUrlPath !== this.state.targetUrlPath) {\n      if (this.state.targetUrlPath.charAt(0) === '/') {\n        this.setState({\n          isTargetUrlCorrect: true\n        });\n      } else {\n        this.setState({\n          isTargetUrlCorrect: false\n        });\n      }\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.aliases.add.loading && !nextProps.aliases.add.loaded) {\n      if (nextProps.aliases.add.error) {\n        this.setState({\n          errorMessageAdd: nextProps.aliases.add.error.response.body.message\n        });\n      }\n    }\n    if (this.props.aliases.add.loading && nextProps.aliases.add.loaded) {\n      const {\n        filterQuery,\n        filterType,\n        createdBefore,\n        itemsPerPage\n      } = this.state;\n      this.props.getAliases(getBaseUrl(this.props.pathname), {\n        query: filterQuery,\n        manual: filterType.value,\n        datetime: createdBefore,\n        batchSize: itemsPerPage\n      });\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.successAdd),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }));\n      if (!nextProps.aliases.add.error) {\n        this.setState({\n          errorMessageAdd: ''\n        });\n      }\n    }\n    if (this.props.aliases.remove.loading && nextProps.aliases.remove.loaded) {\n      const {\n        filterQuery,\n        filterType,\n        createdBefore,\n        itemsPerPage\n      } = this.state;\n      this.props.getAliases(getBaseUrl(this.props.pathname), {\n        query: filterQuery,\n        manual: filterType.value,\n        datetime: createdBefore,\n        batchSize: itemsPerPage\n      });\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Select filter type handler\n   * @method handleSelectFilterType\n   * @returns {undefined}\n   */\n  handleSelectFilterType(type) {\n    this.setState({\n      filterType: type\n    });\n  }\n\n  /**\n   * Select filter type handler\n   * @method handleFilterQueryChange\n   * @returns {undefined}\n   */\n  handleFilterQueryChange(query) {\n    this.setState({\n      filterQuery: query\n    });\n  }\n\n  /**\n   * Select Creation date handler\n   * @method handleCreateDate\n   * @returns {undefined}\n   */\n  handleCreateDate(date) {\n    this.setState({\n      createdBefore: date\n    });\n  }\n\n  /**\n   * Select Creation date handler\n   * @method handleSubmitFilter\n   * @returns {undefined}\n   */\n  handleSubmitFilter() {\n    const {\n      filterQuery,\n      filterType,\n      createdBefore,\n      itemsPerPage\n    } = this.state;\n    this.props.getAliases(getBaseUrl(this.props.pathname), {\n      query: filterQuery,\n      manual: filterType.value,\n      datetime: createdBefore,\n      batchSize: itemsPerPage\n    });\n  }\n\n  /**\n   * Alternative url handler\n   * @method handleAltUrlChange\n   * @returns {undefined}\n   */\n  handleAltUrlChange(url) {\n    this.setState({\n      altUrlPath: url\n    });\n  }\n\n  /**\n   * Target url handler\n   * @method handleTargetUrlChange\n   * @returns {undefined}\n   */\n  handleTargetUrlChange(url) {\n    this.setState({\n      targetUrlPath: url\n    });\n  }\n\n  /**\n   * New alias submit handler\n   * @method handleSubmitAlias\n   * @returns {undefined}\n   */\n  handleSubmitAlias() {\n    if (this.state.isAltUrlCorrect && this.state.isTargetUrlCorrect) {\n      this.props.addAliases('', {\n        items: [{\n          path: this.state.altUrlPath,\n          'redirect-to': this.state.targetUrlPath\n        }]\n      });\n      this.setState({\n        altUrlPath: '',\n        targetUrlPath: ''\n      });\n    }\n  }\n\n  /**\n   * Check to-remove aliases handler\n   * @method handleSubmitAlias\n   * @returns {undefined}\n   */\n  handleCheckAlias(alias) {\n    const aliases = this.state.aliasesToRemove;\n    if (aliases.includes(alias)) {\n      const index = aliases.indexOf(alias);\n      if (index > -1) {\n        let newAliasesArr = aliases;\n        newAliasesArr.splice(index, 1);\n        this.setState({\n          aliasesToRemove: newAliasesArr\n        });\n      }\n    } else {\n      this.setState({\n        aliasesToRemove: [...this.state.aliasesToRemove, alias]\n      });\n    }\n  }\n\n  /**\n   * Remove aliases handler\n   * @method handleRemoveAliases\n   * @returns {undefined}\n   */\n\n  /**\n   * Pagination change handler\n   * @method handlePageChange\n   * @returns {undefined}\n   */\n  handlePageChange(e, {\n    activePage\n  }) {\n    this.setState({\n      activePage\n    });\n  }\n\n  /**\n   * Items per page change handler\n   * @method handleItemsPerPage\n   * @returns {undefined}\n   */\n  handleItemsPerPage(e, {\n    value\n  }) {\n    this.setState({\n      itemsPerPage: value,\n      activePage: 1\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return __jsx(\"div\", {\n      id: \"page-aliases\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.aliases),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }\n    }), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }\n    }, __jsx(\"article\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }\n    }, __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"URL Management\",\n      defaultMessage: \"URL Management\",\n      values: {\n        title: __jsx(\"q\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 36\n          }\n        }, this.props.title)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    })), __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 15\n      }\n    }, __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 17\n      }\n    }, __jsx(Header, {\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Alternative url path (Required)\",\n      defaultMessage: \"Alternative url path (Required)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }\n    })), __jsx(\"p\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Enter the absolute path where the alternative url should exist. The path must start with '/'. Only urls that result in a 404 not found page will result in a redirect occurring.\",\n      defaultMessage: \"Enter the absolute path where the alternative url should exist. The path must start with '/'. Only urls that result in a 404 not found page will result in a redirect occurring.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }\n    })), __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 19\n      }\n    }, __jsx(Input, {\n      id: \"alternative-url-input\",\n      name: \"alternative-url-path\",\n      placeholder: \"/example\",\n      value: this.state.altUrlPath,\n      onChange: e => this.handleAltUrlChange(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 21\n      }\n    }), !this.state.isAltUrlCorrect && this.state.altUrlPath !== '' && __jsx(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Alternative url path must start with a slash.\",\n      defaultMessage: \"Alternative url path must start with a slash.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 27\n      }\n    }))), __jsx(Header, {\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Target Path (Required)\",\n      defaultMessage: \"Target Path (Required)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 21\n      }\n    })), __jsx(\"p\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Enter the absolute path of the target. The path must start with '/'. Target must exist or be an existing alternative url path to the target.\",\n      defaultMessage: \"Enter the absolute path of the target. The path must start with '/'. Target must exist or be an existing alternative url path to the target.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 21\n      }\n    })), __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 19\n      }\n    }, __jsx(Input, {\n      id: \"target-url-input\",\n      name: \"target-url-path\",\n      placeholder: \"/example\",\n      value: this.state.targetUrlPath,\n      onChange: e => this.handleTargetUrlChange(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 21\n      }\n    }), !this.state.isTargetUrlCorrect && this.state.targetUrlPath !== '' && __jsx(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Target url path must start with a slash.\",\n      defaultMessage: \"Target url path must start with a slash.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 27\n      }\n    }))), __jsx(Button, {\n      id: \"submit-alias\",\n      primary: true,\n      onClick: () => this.handleSubmitAlias(),\n      disabled: !this.state.isAltUrlCorrect || !this.state.isTargetUrlCorrect || this.state.altUrlPath === '' || this.state.targetUrlPath === '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Add\",\n      defaultMessage: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 21\n      }\n    })), this.state.errorMessageAdd && __jsx(Message, {\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 21\n      }\n    }, __jsx(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"ErrorHeader\",\n      defaultMessage: \"Error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 25\n      }\n    })), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 23\n      }\n    }, this.state.errorMessageAdd)))), __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 15\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }\n    }, __jsx(Header, {\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"All existing alternative urls for this site\",\n      defaultMessage: \"All existing alternative urls for this site\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 21\n      }\n    })), __jsx(Header, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Filter by prefix\",\n      defaultMessage: \"Filter by prefix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 21\n      }\n    })), __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 19\n      }\n    }, __jsx(Input, {\n      name: \"filter\",\n      placeholder: \"/example\",\n      value: this.state.filterQuery,\n      onChange: e => this.handleFilterQueryChange(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 21\n      }\n    })), __jsx(Header, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Manually or automatically added?\",\n      defaultMessage: \"Manually or automatically added?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 21\n      }\n    })), filterChoices.map((o, i) => __jsx(Form.Field, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 21\n      }\n    }, __jsx(Radio, {\n      label: o.label,\n      name: \"radioGroup\",\n      value: o.value,\n      checked: this.state.filterType === o,\n      onChange: () => this.handleSelectFilterType(o),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 23\n      }\n    }))), __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 19\n      }\n    }, __jsx(DatetimeWidget, {\n      id: \"created-before-date\",\n      title: 'Created before',\n      dateOnly: true,\n      value: this.state.createdBefore,\n      onChange: (id, value) => {\n        this.handleCreateDate(value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 21\n      }\n    })), __jsx(Button, {\n      onClick: () => this.handleSubmitFilter(),\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 19\n      }\n    }, \"Filter\"), __jsx(Header, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Alternative url path \\u2192 target url path (date and time of creation, manually created yes/no)\",\n      defaultMessage: \"Alternative url path \\u2192 target url path (date and time of creation, manually created yes/no)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 21\n      }\n    })), __jsx(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 19\n      }\n    }, __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 21\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 23\n      }\n    }, __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Select\",\n      defaultMessage: \"Select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 27\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Alias\",\n      defaultMessage: \"Alias\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 27\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Target\",\n      defaultMessage: \"Target\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 27\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Date\",\n      defaultMessage: \"Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 27\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Manual\",\n      defaultMessage: \"Manual\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 27\n      }\n    }))), this.props.aliases.items.length > 0 && this.props.aliases.items.map((alias, i) => __jsx(Table.Row, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 27\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 29\n      }\n    }, __jsx(Checkbox, {\n      onChange: (e, {\n        value\n      }) => this.handleCheckAlias(value),\n      checked: this.state.aliasesToRemove.includes(alias.path),\n      value: alias.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 31\n      }\n    })), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 29\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 31\n      }\n    }, alias.path)), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 29\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 31\n      }\n    }, alias['redirect-to'])), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 29\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 31\n      }\n    }, alias.datetime)), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 29\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 31\n      }\n    }, `${alias.manual}`)))))), __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        marginBottom: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 19\n      }\n    }, this.state.pages && __jsx(Pagination, {\n      boundaryRange: 0,\n      activePage: this.state.activePage,\n      ellipsisItem: null,\n      firstItem: null,\n      lastItem: null,\n      siblingRange: 1,\n      totalPages: this.state.pages,\n      onPageChange: (e, o) => this.handlePageChange(e, o),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 23\n      }\n    }), __jsx(Menu.Menu, {\n      position: \"right\",\n      style: {\n        display: 'flex',\n        marginLeft: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 21\n      }\n    }, __jsx(Menu.Item, {\n      style: {\n        color: 'grey'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Show\",\n      defaultMessage: \"Show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 25\n      }\n    }), \":\"), _map(itemsPerPageChoices, size => __jsx(Menu.Item, {\n      style: {\n        padding: '0 0.4em',\n        margin: '0em 0.357em',\n        cursor: 'pointer'\n      },\n      key: size,\n      value: size,\n      active: size === this.state.itemsPerPage,\n      onClick: (e, o) => this.handleItemsPerPage(e, o),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 25\n      }\n    }, size)))), __jsx(Button, {\n      disabled: this.state.aliasesToRemove.length === 0,\n      onClick: this.handleRemoveAliases,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Remove selected\",\n      defaultMessage: \"Remove selected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 21\n      }\n    }))))))), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(Link, {\n        className: \"item\",\n        to: \"#\",\n        onClick: () => this.onCancel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n_defineProperty(Aliases, \"propTypes\", {\n  addAliases: PropTypes.func.isRequired,\n  getAliases: PropTypes.func.isRequired,\n  removeAliases: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  aliases: state.aliases,\n  pathname: props.location.pathname\n}), {\n  addAliases,\n  getAliases,\n  removeAliases\n}))(Aliases);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","getBaseUrl","getParentUrl","Helmet","removeAliases","addAliases","getAliases","Portal","Container","Button","Segment","Form","Checkbox","Header","Input","Radio","Message","Table","Pagination","Menu","FormattedMessage","defineMessages","injectIntl","DatetimeWidget","Icon","Toolbar","backSVG","toast","Toast","messages","back","aliases","success","successAdd","filterChoices","label","value","itemsPerPageChoices","Aliases","constructor","props","items","state","aliasesToRemove","map","a","path","setState","isClient","filterType","createdBefore","altUrlPath","isAltUrlCorrect","targetUrlPath","isTargetUrlCorrect","errorMessageAdd","filterQuery","activePage","pages","itemsPerPage","componentDidMount","pathname","query","manual","datetime","batchSize","componentDidUpdate","prevProps","prevState","items_total","Math","ceil","isNaN","batchStart","charAt","UNSAFE_componentWillReceiveProps","nextProps","add","loading","loaded","error","response","body","message","intl","formatMessage","remove","onCancel","history","push","handleSelectFilterType","type","handleFilterQueryChange","handleCreateDate","date","handleSubmitFilter","handleAltUrlChange","url","handleTargetUrlChange","handleSubmitAlias","handleCheckAlias","alias","includes","index","indexOf","newAliasesArr","splice","handlePageChange","e","handleItemsPerPage","render","title","target","color","o","i","id","length","display","flexWrap","alignItems","marginBottom","marginLeft","size","padding","margin","cursor","handleRemoveAliases","document","getElementById","func","isRequired","location"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Aliases.jsx"],"sourcesContent":["/**\n * Moderate comments component.\n * @module components/manage/Controlpanels/Aliases\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getBaseUrl, getParentUrl, Helmet } from '@plone/volto/helpers';\nimport { removeAliases, addAliases, getAliases } from '@plone/volto/actions';\nimport { Portal } from 'react-portal';\nimport {\n  Container,\n  Button,\n  Segment,\n  Form,\n  Checkbox,\n  Header,\n  Input,\n  Radio,\n  Message,\n  Table,\n  Pagination,\n  Menu,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport DatetimeWidget from '@plone/volto/components/manage/Widgets/DatetimeWidget';\nimport { Icon, Toolbar } from '@plone/volto/components';\n\nimport backSVG from '@plone/volto/icons/back.svg';\nimport { map } from 'lodash';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  aliases: {\n    id: 'URL Management',\n    defaultMessage: 'URL Management',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  successAdd: {\n    id: 'Alias has been added',\n    defaultMessage: 'Alias has been added',\n  },\n});\n\nconst filterChoices = [\n  { label: 'Both', value: '' },\n  { label: 'Automatically', value: 'no' },\n  { label: 'Manually', value: 'yes' },\n];\n\nconst itemsPerPageChoices = [10, 25, 50, 'All'];\n\n/**\n * Aliases class.\n * @class Aliases\n * @extends Component\n */\nclass Aliases extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    addAliases: PropTypes.func.isRequired,\n    getAliases: PropTypes.func.isRequired,\n    removeAliases: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Aliases\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClient: false,\n      filterType: filterChoices[0],\n      createdBefore: null,\n      altUrlPath: '',\n      isAltUrlCorrect: false,\n      targetUrlPath: '',\n      isTargetUrlCorrect: false,\n      aliasesToRemove: [],\n      errorMessageAdd: '',\n      filterQuery: '',\n      aliases: [],\n      activePage: 1,\n      pages: '',\n      itemsPerPage: 10,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    const { filterQuery, filterType, createdBefore, itemsPerPage } = this.state;\n    this.setState({ isClient: true });\n    this.props.getAliases(getBaseUrl(this.props.pathname), {\n      query: filterQuery,\n      manual: filterType.value,\n      datetime: createdBefore,\n      batchSize: itemsPerPage,\n    });\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    const { filterQuery, filterType, createdBefore, itemsPerPage } = this.state;\n    if (\n      prevProps.aliases.items_total !== this.props.aliases.items_total ||\n      prevState.itemsPerPage !== this.state.itemsPerPage\n    ) {\n      const pages = Math.ceil(\n        this.props.aliases.items_total / this.state.itemsPerPage,\n      );\n\n      if (pages === 0 || isNaN(pages)) {\n        this.setState({ pages: '' });\n      } else {\n        this.setState({ pages });\n      }\n    }\n    if (\n      prevState.activePage !== this.state.activePage ||\n      prevState.itemsPerPage !== this.state.itemsPerPage\n    ) {\n      this.props.getAliases(getBaseUrl(this.props.pathname), {\n        query: filterQuery,\n        manual: filterType.value,\n        datetime: createdBefore,\n        batchSize: itemsPerPage === 'All' ? 999999999999 : itemsPerPage,\n        batchStart: (this.state.activePage - 1) * this.state.itemsPerPage,\n      });\n    }\n    if (prevState.altUrlPath !== this.state.altUrlPath) {\n      if (this.state.altUrlPath.charAt(0) === '/') {\n        this.setState({ isAltUrlCorrect: true });\n      } else {\n        this.setState({ isAltUrlCorrect: false });\n      }\n    }\n\n    if (prevState.targetUrlPath !== this.state.targetUrlPath) {\n      if (this.state.targetUrlPath.charAt(0) === '/') {\n        this.setState({ isTargetUrlCorrect: true });\n      } else {\n        this.setState({ isTargetUrlCorrect: false });\n      }\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.aliases.add.loading && !nextProps.aliases.add.loaded) {\n      if (nextProps.aliases.add.error) {\n        this.setState({\n          errorMessageAdd: nextProps.aliases.add.error.response.body.message,\n        });\n      }\n    }\n    if (this.props.aliases.add.loading && nextProps.aliases.add.loaded) {\n      const {\n        filterQuery,\n        filterType,\n        createdBefore,\n        itemsPerPage,\n      } = this.state;\n\n      this.props.getAliases(getBaseUrl(this.props.pathname), {\n        query: filterQuery,\n        manual: filterType.value,\n        datetime: createdBefore,\n        batchSize: itemsPerPage,\n      });\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.successAdd)}\n        />,\n      );\n      if (!nextProps.aliases.add.error) {\n        this.setState({\n          errorMessageAdd: '',\n        });\n      }\n    }\n    if (this.props.aliases.remove.loading && nextProps.aliases.remove.loaded) {\n      const {\n        filterQuery,\n        filterType,\n        createdBefore,\n        itemsPerPage,\n      } = this.state;\n\n      this.props.getAliases(getBaseUrl(this.props.pathname), {\n        query: filterQuery,\n        manual: filterType.value,\n        datetime: createdBefore,\n        batchSize: itemsPerPage,\n      });\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Select filter type handler\n   * @method handleSelectFilterType\n   * @returns {undefined}\n   */\n  handleSelectFilterType(type) {\n    this.setState({ filterType: type });\n  }\n\n  /**\n   * Select filter type handler\n   * @method handleFilterQueryChange\n   * @returns {undefined}\n   */\n  handleFilterQueryChange(query) {\n    this.setState({ filterQuery: query });\n  }\n\n  /**\n   * Select Creation date handler\n   * @method handleCreateDate\n   * @returns {undefined}\n   */\n  handleCreateDate(date) {\n    this.setState({ createdBefore: date });\n  }\n\n  /**\n   * Select Creation date handler\n   * @method handleSubmitFilter\n   * @returns {undefined}\n   */\n  handleSubmitFilter() {\n    const { filterQuery, filterType, createdBefore, itemsPerPage } = this.state;\n    this.props.getAliases(getBaseUrl(this.props.pathname), {\n      query: filterQuery,\n      manual: filterType.value,\n      datetime: createdBefore,\n      batchSize: itemsPerPage,\n    });\n  }\n\n  /**\n   * Alternative url handler\n   * @method handleAltUrlChange\n   * @returns {undefined}\n   */\n  handleAltUrlChange(url) {\n    this.setState({ altUrlPath: url });\n  }\n\n  /**\n   * Target url handler\n   * @method handleTargetUrlChange\n   * @returns {undefined}\n   */\n  handleTargetUrlChange(url) {\n    this.setState({ targetUrlPath: url });\n  }\n\n  /**\n   * New alias submit handler\n   * @method handleSubmitAlias\n   * @returns {undefined}\n   */\n  handleSubmitAlias() {\n    if (this.state.isAltUrlCorrect && this.state.isTargetUrlCorrect) {\n      this.props.addAliases('', {\n        items: [\n          {\n            path: this.state.altUrlPath,\n            'redirect-to': this.state.targetUrlPath,\n          },\n        ],\n      });\n      this.setState({ altUrlPath: '', targetUrlPath: '' });\n    }\n  }\n\n  /**\n   * Check to-remove aliases handler\n   * @method handleSubmitAlias\n   * @returns {undefined}\n   */\n  handleCheckAlias(alias) {\n    const aliases = this.state.aliasesToRemove;\n    if (aliases.includes(alias)) {\n      const index = aliases.indexOf(alias);\n      if (index > -1) {\n        let newAliasesArr = aliases;\n        newAliasesArr.splice(index, 1);\n        this.setState({ aliasesToRemove: newAliasesArr });\n      }\n    } else {\n      this.setState({\n        aliasesToRemove: [...this.state.aliasesToRemove, alias],\n      });\n    }\n  }\n\n  /**\n   * Remove aliases handler\n   * @method handleRemoveAliases\n   * @returns {undefined}\n   */\n  handleRemoveAliases = () => {\n    const items = this.state.aliasesToRemove.map((a) => {\n      return {\n        path: a,\n      };\n    });\n    this.props.removeAliases('', {\n      items,\n    });\n    this.setState({ aliasesToRemove: [] });\n  };\n\n  /**\n   * Pagination change handler\n   * @method handlePageChange\n   * @returns {undefined}\n   */\n  handlePageChange(e, { activePage }) {\n    this.setState({ activePage });\n  }\n\n  /**\n   * Items per page change handler\n   * @method handleItemsPerPage\n   * @returns {undefined}\n   */\n  handleItemsPerPage(e, { value }) {\n    this.setState({ itemsPerPage: value, activePage: 1 });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <div id=\"page-aliases\">\n        <Helmet title={this.props.intl.formatMessage(messages.aliases)} />\n        <Container>\n          <article id=\"content\">\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage\n                  id=\"URL Management\"\n                  defaultMessage=\"URL Management\"\n                  values={{ title: <q>{this.props.title}</q> }}\n                />\n              </Segment>\n              <Form>\n                <Segment>\n                  <Header size=\"medium\">\n                    <FormattedMessage\n                      id=\"Alternative url path (Required)\"\n                      defaultMessage=\"Alternative url path (Required)\"\n                    />\n                  </Header>\n                  <p className=\"help\">\n                    <FormattedMessage\n                      id=\"Enter the absolute path where the alternative url should exist. The path must start with '/'. Only urls that result in a 404 not found page will result in a redirect occurring.\"\n                      defaultMessage=\"Enter the absolute path where the alternative url should exist. The path must start with '/'. Only urls that result in a 404 not found page will result in a redirect occurring.\"\n                    />\n                  </p>\n                  <Form.Field>\n                    <Input\n                      id=\"alternative-url-input\"\n                      name=\"alternative-url-path\"\n                      placeholder=\"/example\"\n                      value={this.state.altUrlPath}\n                      onChange={(e) => this.handleAltUrlChange(e.target.value)}\n                    />\n                    {!this.state.isAltUrlCorrect &&\n                      this.state.altUrlPath !== '' && (\n                        <p style={{ color: 'red' }}>\n                          <FormattedMessage\n                            id=\"Alternative url path must start with a slash.\"\n                            defaultMessage=\"Alternative url path must start with a slash.\"\n                          />\n                        </p>\n                      )}\n                  </Form.Field>\n                  <Header size=\"medium\">\n                    <FormattedMessage\n                      id=\"Target Path (Required)\"\n                      defaultMessage=\"Target Path (Required)\"\n                    />\n                  </Header>\n                  <p className=\"help\">\n                    <FormattedMessage\n                      id=\"Enter the absolute path of the target. The path must start with '/'. Target must exist or be an existing alternative url path to the target.\"\n                      defaultMessage=\"Enter the absolute path of the target. The path must start with '/'. Target must exist or be an existing alternative url path to the target.\"\n                    />\n                  </p>\n                  <Form.Field>\n                    <Input\n                      id=\"target-url-input\"\n                      name=\"target-url-path\"\n                      placeholder=\"/example\"\n                      value={this.state.targetUrlPath}\n                      onChange={(e) =>\n                        this.handleTargetUrlChange(e.target.value)\n                      }\n                    />\n                    {!this.state.isTargetUrlCorrect &&\n                      this.state.targetUrlPath !== '' && (\n                        <p style={{ color: 'red' }}>\n                          <FormattedMessage\n                            id=\"Target url path must start with a slash.\"\n                            defaultMessage=\"Target url path must start with a slash.\"\n                          />\n                        </p>\n                      )}\n                  </Form.Field>\n                  <Button\n                    id=\"submit-alias\"\n                    primary\n                    onClick={() => this.handleSubmitAlias()}\n                    disabled={\n                      !this.state.isAltUrlCorrect ||\n                      !this.state.isTargetUrlCorrect ||\n                      this.state.altUrlPath === '' ||\n                      this.state.targetUrlPath === ''\n                    }\n                  >\n                    <FormattedMessage id=\"Add\" defaultMessage=\"Add\" />\n                  </Button>\n                  {this.state.errorMessageAdd && (\n                    <Message color=\"red\">\n                      <Message.Header>\n                        <FormattedMessage\n                          id=\"ErrorHeader\"\n                          defaultMessage=\"Error\"\n                        />\n                      </Message.Header>\n                      <p>{this.state.errorMessageAdd}</p>\n                    </Message>\n                  )}\n                </Segment>\n              </Form>\n              <Form>\n                <Segment className=\"primary\">\n                  <Header size=\"medium\">\n                    <FormattedMessage\n                      id=\"All existing alternative urls for this site\"\n                      defaultMessage=\"All existing alternative urls for this site\"\n                    />\n                  </Header>\n                  <Header size=\"small\">\n                    <FormattedMessage\n                      id=\"Filter by prefix\"\n                      defaultMessage=\"Filter by prefix\"\n                    />\n                  </Header>\n                  <Form.Field>\n                    <Input\n                      name=\"filter\"\n                      placeholder=\"/example\"\n                      value={this.state.filterQuery}\n                      onChange={(e) =>\n                        this.handleFilterQueryChange(e.target.value)\n                      }\n                    />\n                  </Form.Field>\n                  <Header size=\"small\">\n                    <FormattedMessage\n                      id=\"Manually or automatically added?\"\n                      defaultMessage=\"Manually or automatically added?\"\n                    />\n                  </Header>\n                  {filterChoices.map((o, i) => (\n                    <Form.Field key={i}>\n                      <Radio\n                        label={o.label}\n                        name=\"radioGroup\"\n                        value={o.value}\n                        checked={this.state.filterType === o}\n                        onChange={() => this.handleSelectFilterType(o)}\n                      />\n                    </Form.Field>\n                  ))}\n                  <Form.Field>\n                    <DatetimeWidget\n                      id=\"created-before-date\"\n                      title={'Created before'}\n                      dateOnly={true}\n                      value={this.state.createdBefore}\n                      onChange={(id, value) => {\n                        this.handleCreateDate(value);\n                      }}\n                    />\n                  </Form.Field>\n                  <Button onClick={() => this.handleSubmitFilter()} primary>\n                    Filter\n                  </Button>\n                  <Header size=\"small\">\n                    <FormattedMessage\n                      id=\"Alternative url path → target url path (date and time of creation, manually created yes/no)\"\n                      defaultMessage=\"Alternative url path → target url path (date and time of creation, manually created yes/no)\"\n                    />\n                  </Header>\n\n                  <Table>\n                    <Table.Body>\n                      <Table.Row>\n                        <Table.HeaderCell>\n                          <FormattedMessage\n                            id=\"Select\"\n                            defaultMessage=\"Select\"\n                          />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                          <FormattedMessage id=\"Alias\" defaultMessage=\"Alias\" />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                          <FormattedMessage\n                            id=\"Target\"\n                            defaultMessage=\"Target\"\n                          />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                          <FormattedMessage id=\"Date\" defaultMessage=\"Date\" />\n                        </Table.HeaderCell>\n                        <Table.HeaderCell>\n                          <FormattedMessage\n                            id=\"Manual\"\n                            defaultMessage=\"Manual\"\n                          />\n                        </Table.HeaderCell>\n                      </Table.Row>\n                      {this.props.aliases.items.length > 0 &&\n                        this.props.aliases.items.map((alias, i) => (\n                          <Table.Row key={i}>\n                            <Table.Cell>\n                              <Checkbox\n                                onChange={(e, { value }) =>\n                                  this.handleCheckAlias(value)\n                                }\n                                checked={this.state.aliasesToRemove.includes(\n                                  alias.path,\n                                )}\n                                value={alias.path}\n                              />\n                            </Table.Cell>\n                            <Table.Cell>\n                              <p>{alias.path}</p>\n                            </Table.Cell>\n                            <Table.Cell>\n                              <p>{alias['redirect-to']}</p>\n                            </Table.Cell>\n                            <Table.Cell>\n                              <p>{alias.datetime}</p>\n                            </Table.Cell>\n                            <Table.Cell>\n                              <p>{`${alias.manual}`}</p>\n                            </Table.Cell>\n                          </Table.Row>\n                        ))}\n                    </Table.Body>\n                  </Table>\n                  <div\n                    style={{\n                      display: 'flex',\n                      flexWrap: 'wrap',\n                      alignItems: 'center',\n                      marginBottom: '20px',\n                    }}\n                  >\n                    {this.state.pages && (\n                      <Pagination\n                        boundaryRange={0}\n                        activePage={this.state.activePage}\n                        ellipsisItem={null}\n                        firstItem={null}\n                        lastItem={null}\n                        siblingRange={1}\n                        totalPages={this.state.pages}\n                        onPageChange={(e, o) => this.handlePageChange(e, o)}\n                      />\n                    )}\n                    <Menu.Menu\n                      position=\"right\"\n                      style={{ display: 'flex', marginLeft: 'auto' }}\n                    >\n                      <Menu.Item style={{ color: 'grey' }}>\n                        <FormattedMessage id=\"Show\" defaultMessage=\"Show\" />:\n                      </Menu.Item>\n                      {map(itemsPerPageChoices, (size) => (\n                        <Menu.Item\n                          style={{\n                            padding: '0 0.4em',\n                            margin: '0em 0.357em',\n                            cursor: 'pointer',\n                          }}\n                          key={size}\n                          value={size}\n                          active={size === this.state.itemsPerPage}\n                          onClick={(e, o) => this.handleItemsPerPage(e, o)}\n                        >\n                          {size}\n                        </Menu.Item>\n                      ))}\n                    </Menu.Menu>\n                  </div>\n                  <Button\n                    disabled={this.state.aliasesToRemove.length === 0}\n                    onClick={this.handleRemoveAliases}\n                    primary\n                  >\n                    <FormattedMessage\n                      id=\"Remove selected\"\n                      defaultMessage=\"Remove selected\"\n                    />\n                  </Button>\n                </Segment>\n              </Form>\n            </Segment.Group>\n          </article>\n        </Container>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link className=\"item\" to=\"#\" onClick={() => this.onCancel()}>\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      aliases: state.aliases,\n      pathname: props.location.pathname,\n    }),\n    { addAliases, getAliases, removeAliases },\n  ),\n)(Aliases);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"URL Management","defaultMessage":"URL Management"},{"id":"Success","defaultMessage":"Success"},{"id":"Alias has been added","defaultMessage":"Alias has been added"},{"id":"Alternative url path (Required)","defaultMessage":"Alternative url path (Required)"},{"id":"Enter the absolute path where the alternative url should exist. The path must start with '/'. Only urls that result in a 404 not found page will result in a redirect occurring.","defaultMessage":"Enter the absolute path where the alternative url should exist. The path must start with '/'. Only urls that result in a 404 not found page will result in a redirect occurring."},{"id":"Alternative url path must start with a slash.","defaultMessage":"Alternative url path must start with a slash."},{"id":"Target Path (Required)","defaultMessage":"Target Path (Required)"},{"id":"Enter the absolute path of the target. The path must start with '/'. Target must exist or be an existing alternative url path to the target.","defaultMessage":"Enter the absolute path of the target. The path must start with '/'. Target must exist or be an existing alternative url path to the target."},{"id":"Target url path must start with a slash.","defaultMessage":"Target url path must start with a slash."},{"id":"Add","defaultMessage":"Add"},{"id":"ErrorHeader","defaultMessage":"Error"},{"id":"All existing alternative urls for this site","defaultMessage":"All existing alternative urls for this site"},{"id":"Filter by prefix","defaultMessage":"Filter by prefix"},{"id":"Manually or automatically added?","defaultMessage":"Manually or automatically added?"},{"id":"Alternative url path → target url path (date and time of creation, manually created yes/no)","defaultMessage":"Alternative url path → target url path (date and time of creation, manually created yes/no)"},{"id":"Select","defaultMessage":"Select"},{"id":"Alias","defaultMessage":"Alias"},{"id":"Target","defaultMessage":"Target"},{"id":"Date","defaultMessage":"Date"},{"id":"Manual","defaultMessage":"Manual"},{"id":"Show","defaultMessage":"Show"},{"id":"Remove selected","defaultMessage":"Remove selected"}]}},"sourceType":"module","externalDependencies":[]}