{"ast":null,"code":"/**\n * Working copy actions.\n * @module actions/workingcopy/workingcopy\n */\n\nimport { APPLY_WORKING_COPY, CREATE_WORKING_COPY, REMOVE_WORKING_COPY } from '@plone/volto/constants/ActionTypes';\n\n/**\n * Create Working Copy function.\n * @function createWorkingCopy\n * @param {string} path The content path.\n * @returns {Object} Get workingcopy action.\n */\nexport function createWorkingCopy(path) {\n  return {\n    type: CREATE_WORKING_COPY,\n    request: {\n      op: 'post',\n      path: \"\".concat(path, \"/@workingcopy\")\n    }\n  };\n}\n\n/**\n * Apply Working Copy function.\n * @function applyWorkingCopy\n * @param {string} path The content path.\n * @returns {Object} Get workingcopy action.\n */\nexport function applyWorkingCopy(path) {\n  return {\n    type: APPLY_WORKING_COPY,\n    request: {\n      op: 'patch',\n      path: \"\".concat(path, \"/@workingcopy\")\n    }\n  };\n}\n\n/**\n * Remove Working Copy function.\n * @function removeWorkingCopy\n * @param {string} path The content path.\n * @returns {Object} Get workingcopy action.\n */\nexport function removeWorkingCopy(path) {\n  return {\n    type: REMOVE_WORKING_COPY,\n    request: {\n      op: 'del',\n      path: \"\".concat(path, \"/@workingcopy\")\n    }\n  };\n}","map":{"version":3,"names":["APPLY_WORKING_COPY","CREATE_WORKING_COPY","REMOVE_WORKING_COPY","createWorkingCopy","path","type","request","op","applyWorkingCopy","removeWorkingCopy"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/actions/workingcopy/workingcopy.js"],"sourcesContent":["/**\n * Working copy actions.\n * @module actions/workingcopy/workingcopy\n */\n\nimport {\n  APPLY_WORKING_COPY,\n  CREATE_WORKING_COPY,\n  REMOVE_WORKING_COPY,\n} from '@plone/volto/constants/ActionTypes';\n\n/**\n * Create Working Copy function.\n * @function createWorkingCopy\n * @param {string} path The content path.\n * @returns {Object} Get workingcopy action.\n */\nexport function createWorkingCopy(path) {\n  return {\n    type: CREATE_WORKING_COPY,\n    request: {\n      op: 'post',\n      path: `${path}/@workingcopy`,\n    },\n  };\n}\n\n/**\n * Apply Working Copy function.\n * @function applyWorkingCopy\n * @param {string} path The content path.\n * @returns {Object} Get workingcopy action.\n */\nexport function applyWorkingCopy(path) {\n  return {\n    type: APPLY_WORKING_COPY,\n    request: {\n      op: 'patch',\n      path: `${path}/@workingcopy`,\n    },\n  };\n}\n\n/**\n * Remove Working Copy function.\n * @function removeWorkingCopy\n * @param {string} path The content path.\n * @returns {Object} Get workingcopy action.\n */\nexport function removeWorkingCopy(path) {\n  return {\n    type: REMOVE_WORKING_COPY,\n    request: {\n      op: 'del',\n      path: `${path}/@workingcopy`,\n    },\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SACEA,kBAAkB,EAClBC,mBAAmB,EACnBC,mBAAmB,QACd,oCAAoC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiB,CAACC,IAAI,EAAE;EACtC,OAAO;IACLC,IAAI,EAAEJ,mBAAmB;IACzBK,OAAO,EAAE;MACPC,EAAE,EAAE,MAAM;MACVH,IAAI,YAAKA,IAAI;IACf;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,gBAAgB,CAACJ,IAAI,EAAE;EACrC,OAAO;IACLC,IAAI,EAAEL,kBAAkB;IACxBM,OAAO,EAAE;MACPC,EAAE,EAAE,OAAO;MACXH,IAAI,YAAKA,IAAI;IACf;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,iBAAiB,CAACL,IAAI,EAAE;EACtC,OAAO;IACLC,IAAI,EAAEH,mBAAmB;IACzBI,OAAO,EAAE;MACPC,EAAE,EAAE,KAAK;MACTH,IAAI,YAAKA,IAAI;IACf;EACF,CAAC;AACH"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}