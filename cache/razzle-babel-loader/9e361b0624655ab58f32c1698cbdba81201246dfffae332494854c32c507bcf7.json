{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _isEqual from \"lodash/isEqual\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/LeadImage/Edit.jsx\";\nvar __jsx = React.createElement;\n/**\n * Edit image block.\n * @module components/manage/Blocks/Image/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { Message } from 'semantic-ui-react';\nimport { LeadImageSidebar, SidebarPortal } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nvar messages = defineMessages({\n  ImageBlockInputPlaceholder: {\n    \"id\": \"Upload a lead image in the 'Lead Image' content field.\",\n    \"defaultMessage\": \"Upload a lead image in the 'Lead Image' content field.\"\n  }\n});\n\n/**\n * Edit image block class.\n * @class Edit\n * @extends Component\n */\nvar Edit = /*#__PURE__*/function (_Component) {\n  _inherits(Edit, _Component);\n  var _super = _createSuper(Edit);\n  function Edit() {\n    var _this;\n    _classCallCheck(this, Edit);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"node\", /*#__PURE__*/React.createRef());\n    return _this;\n  }\n  _createClass(Edit, [{\n    key: \"onAlignBlock\",\n    value:\n    /**\n     * Align block handler\n     * @method onAlignBlock\n     * @param {string} align Alignment option\n     * @returns {undefined}\n     */\n    function onAlignBlock(align) {\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        align: align\n      }));\n    }\n\n    /**\n     * @param {*} nextProps\n     * @returns {boolean}\n     * @memberof Edit\n     */\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.selected || !_isEqual(this.props.data, nextProps.data);\n    }\n  }, {\n    key: \"render\",\n    value:\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n    function render() {\n      var _this$props = this.props,\n        data = _this$props.data,\n        properties = _this$props.properties;\n      var placeholder = this.props.data.placeholder || this.props.intl.formatMessage(messages.ImageBlockInputPlaceholder);\n      return __jsx(\"div\", {\n        className: cx('block image align', {\n          center: !Boolean(data.align)\n        }, data.align),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, !properties.image && __jsx(Message, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, __jsx(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, __jsx(\"img\", {\n        src: imageBlockSVG,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }), __jsx(\"div\", {\n        className: \"message-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }, placeholder))), properties.image && __jsx(\"img\", {\n        className: cx({\n          'full-width': data.align === 'full'\n        }),\n        src: properties.image.data ? \"data:\".concat(properties.image['content-type'], \";base64,\").concat(properties.image.data) : flattenToAppURL(properties.image.download),\n        alt: data.image_caption || '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }), __jsx(SidebarPortal, {\n        selected: this.props.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, __jsx(LeadImageSidebar, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n  return Edit;\n}(Component);\n_defineProperty(Edit, \"propTypes\", {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  pathname: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired\n});\nexport default compose(injectIntl)(Edit);","map":{"version":3,"names":["React","Component","PropTypes","compose","defineMessages","injectIntl","cx","Message","LeadImageSidebar","SidebarPortal","flattenToAppURL","imageBlockSVG","messages","ImageBlockInputPlaceholder","Edit","createRef","align","props","onChangeBlock","block","data","nextProps","selected","properties","placeholder","intl","formatMessage","center","Boolean","image","download","image_caption","objectOf","any","isRequired","bool","string","index","number","pathname","func","openObjectBrowser"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/LeadImage/Edit.jsx"],"sourcesContent":["/**\n * Edit image block.\n * @module components/manage/Blocks/Image/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { Message } from 'semantic-ui-react';\nimport { isEqual } from 'lodash';\n\nimport { LeadImageSidebar, SidebarPortal } from '@plone/volto/components';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\n\nconst messages = defineMessages({\n  ImageBlockInputPlaceholder: {\n    id: \"Upload a lead image in the 'Lead Image' content field.\",\n    defaultMessage: \"Upload a lead image in the 'Lead Image' content field.\",\n  },\n});\n\n/**\n * Edit image block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    properties: PropTypes.objectOf(PropTypes.any).isRequired,\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    pathname: PropTypes.string.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    openObjectBrowser: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Align block handler\n   * @method onAlignBlock\n   * @param {string} align Alignment option\n   * @returns {undefined}\n   */\n  onAlignBlock(align) {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      align,\n    });\n  }\n\n  /**\n   * @param {*} nextProps\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps) {\n    return this.props.selected || !isEqual(this.props.data, nextProps.data);\n  }\n\n  node = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { data, properties } = this.props;\n    const placeholder =\n      this.props.data.placeholder ||\n      this.props.intl.formatMessage(messages.ImageBlockInputPlaceholder);\n\n    return (\n      <div\n        className={cx(\n          'block image align',\n          {\n            center: !Boolean(data.align),\n          },\n          data.align,\n        )}\n      >\n        {!properties.image && (\n          <Message>\n            <center>\n              <img src={imageBlockSVG} alt=\"\" />\n              <div className=\"message-text\">{placeholder}</div>\n            </center>\n          </Message>\n        )}\n        {properties.image && (\n          <img\n            className={cx({ 'full-width': data.align === 'full' })}\n            src={\n              properties.image.data\n                ? `data:${properties.image['content-type']};base64,${properties.image.data}`\n                : flattenToAppURL(properties.image.download)\n            }\n            alt={data.image_caption || ''}\n          />\n        )}\n        <SidebarPortal selected={this.props.selected}>\n          <LeadImageSidebar {...this.props} />\n        </SidebarPortal>\n      </div>\n    );\n  }\n}\n\nexport default compose(injectIntl)(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Upload a lead image in the 'Lead Image' content field.","defaultMessage":"Upload a lead image in the 'Lead Image' content field."}]}},"sourceType":"module","externalDependencies":[]}