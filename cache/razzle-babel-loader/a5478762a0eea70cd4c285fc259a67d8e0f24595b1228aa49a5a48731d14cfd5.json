{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SearchInput.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Input } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport loupeSVG from '@plone/volto/icons/zoom.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nvar messages = defineMessages({\n  search: {\n    \"id\": \"Search\",\n    \"defaultMessage\": \"Search\"\n  }\n});\nvar SearchInput = function SearchInput(props) {\n  _s();\n  var data = props.data,\n    searchText = props.searchText,\n    setSearchText = props.setSearchText,\n    isLive = props.isLive,\n    onTriggerSearch = props.onTriggerSearch;\n  var intl = useIntl();\n  return __jsx(\"div\", {\n    className: \"search-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(Input, {\n    id: \"\".concat(props.id, \"-searchtext\"),\n    value: searchText,\n    placeholder: data.searchInputPrompt || intl.formatMessage(messages.search),\n    fluid: true,\n    onKeyPress: function onKeyPress(event) {\n      if (isLive || event.key === 'Enter') onTriggerSearch(searchText);\n    },\n    onChange: function onChange(event, _ref) {\n      var value = _ref.value;\n      setSearchText(value);\n      if (isLive) {\n        onTriggerSearch(value);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"search-input-actions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, searchText && __jsx(Button, {\n    basic: true,\n    icon: true,\n    className: \"search-input-clear-icon-button\",\n    onClick: function onClick() {\n      setSearchText('');\n      onTriggerSearch('');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: clearSVG,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), isLive && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"divider\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    basic: true,\n    icon: true,\n    className: \"search-input-live-icon-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: loupeSVG,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  })))));\n};\n_s(SearchInput, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = SearchInput;\nexport default SearchInput;\nvar _c;\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"names":["React","Button","Input","defineMessages","useIntl","Icon","loupeSVG","clearSVG","messages","search","SearchInput","props","data","searchText","setSearchText","isLive","onTriggerSearch","intl","id","searchInputPrompt","formatMessage","event","key","value"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SearchInput.jsx"],"sourcesContent":["import React from 'react';\nimport { Button, Input } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport loupeSVG from '@plone/volto/icons/zoom.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  search: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n});\n\nconst SearchInput = (props) => {\n  const { data, searchText, setSearchText, isLive, onTriggerSearch } = props;\n  const intl = useIntl();\n\n  return (\n    <div className=\"search-input\">\n      <Input\n        id={`${props.id}-searchtext`}\n        value={searchText}\n        placeholder={\n          data.searchInputPrompt || intl.formatMessage(messages.search)\n        }\n        fluid\n        onKeyPress={(event) => {\n          if (isLive || event.key === 'Enter') onTriggerSearch(searchText);\n        }}\n        onChange={(event, { value }) => {\n          setSearchText(value);\n          if (isLive) {\n            onTriggerSearch(value);\n          }\n        }}\n      />\n\n      <div className=\"search-input-actions\">\n        {searchText && (\n          <Button\n            basic\n            icon\n            className=\"search-input-clear-icon-button\"\n            onClick={() => {\n              setSearchText('');\n              onTriggerSearch('');\n            }}\n          >\n            <Icon name={clearSVG} />\n          </Button>\n        )}\n        {isLive && (\n          <>\n            <div className=\"divider\" />\n            <Button basic icon className=\"search-input-live-icon-button\">\n              <Icon name={loupeSVG} />\n            </Button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchInput;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,QAAQ,mBAAmB;AACjD,SAASC,cAAc,EAAEC,OAAO,QAAQ,YAAY;AACpD,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,QAAQ,MAAM,8BAA8B;AAEnD,IAAMC,QAAQ,GAAGL,cAAc,CAAC;EAC9BM,MAAM;IAAA;IAAA;EAAA;AAIR,CAAC,CAAC;AAEF,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,KAAK,EAAK;EAAA;EAC7B,IAAQC,IAAI,GAAyDD,KAAK,CAAlEC,IAAI;IAAEC,UAAU,GAA6CF,KAAK,CAA5DE,UAAU;IAAEC,aAAa,GAA8BH,KAAK,CAAhDG,aAAa;IAAEC,MAAM,GAAsBJ,KAAK,CAAjCI,MAAM;IAAEC,eAAe,GAAKL,KAAK,CAAzBK,eAAe;EAChE,IAAMC,IAAI,GAAGb,OAAO,EAAE;EAEtB,OACE;IAAK,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC3B,MAAC,KAAK;IACJ,EAAE,YAAKO,KAAK,CAACO,EAAE,gBAAc;IAC7B,KAAK,EAAEL,UAAW;IAClB,WAAW,EACTD,IAAI,CAACO,iBAAiB,IAAIF,IAAI,CAACG,aAAa,CAACZ,QAAQ,CAACC,MAAM,CAC7D;IACD,KAAK;IACL,UAAU,EAAE,oBAACY,KAAK,EAAK;MACrB,IAAIN,MAAM,IAAIM,KAAK,CAACC,GAAG,KAAK,OAAO,EAAEN,eAAe,CAACH,UAAU,CAAC;IAClE,CAAE;IACF,QAAQ,EAAE,kBAACQ,KAAK,QAAgB;MAAA,IAAZE,KAAK,QAALA,KAAK;MACvBT,aAAa,CAACS,KAAK,CAAC;MACpB,IAAIR,MAAM,EAAE;QACVC,eAAe,CAACO,KAAK,CAAC;MACxB;IACF,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF,EAEF;IAAK,SAAS,EAAC,sBAAsB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAClCV,UAAU,IACT,MAAC,MAAM;IACL,KAAK;IACL,IAAI;IACJ,SAAS,EAAC,gCAAgC;IAC1C,OAAO,EAAE,mBAAM;MACbC,aAAa,CAAC,EAAE,CAAC;MACjBE,eAAe,CAAC,EAAE,CAAC;IACrB,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEF,MAAC,IAAI;IAAC,IAAI,EAAET,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAE3B,EACAQ,MAAM,IACL,4BACE;IAAK,SAAS,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC3B,MAAC,MAAM;IAAC,KAAK;IAAC,IAAI;IAAC,SAAS,EAAC,+BAA+B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC1D,MAAC,IAAI;IAAC,IAAI,EAAET,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACjB,CAEZ,CACG,CACF;AAEV,CAAC;AAAC,GAjDII,WAAW;EAAA,QAEFN,OAAO;AAAA;AAAA,KAFhBM,WAAW;AAmDjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[{"id":"Search","defaultMessage":"Search"}]}},"sourceType":"module","externalDependencies":[]}