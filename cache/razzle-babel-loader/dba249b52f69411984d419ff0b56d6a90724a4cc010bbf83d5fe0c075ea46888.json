{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport codeSVG from '@plone/volto/icons/code.svg';\nimport ItemEdit from './Edit';\nimport ItemView from './View';\nimport { stylingSchema } from './schema';\nexport default (config => {\n  config.blocks.blocksConfig.item = {\n    id: 'item',\n    title: 'Item',\n    icon: codeSVG,\n    group: 'common',\n    edit: ItemEdit,\n    view: ItemView,\n    blockHasOwnFocusManagement: true,\n    stylesSchema: stylingSchema,\n    enableStyling: true,\n    restricted: false,\n    mostUsed: false,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: []\n    }\n  };\n  config.settings.blocksWithFootnotesSupport = _objectSpread(_objectSpread({}, config.settings.blocksWithFootnotesSupport || {}), {}, {\n    item: ['description']\n  });\n  return config;\n});","map":{"version":3,"names":["codeSVG","ItemEdit","ItemView","stylingSchema","config","blocks","blocksConfig","item","id","title","icon","group","edit","view","blockHasOwnFocusManagement","stylesSchema","enableStyling","restricted","mostUsed","sidebarTab","security","addPermission","settings","blocksWithFootnotesSupport"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/blocks/Item/index.js"],"sourcesContent":["import codeSVG from '@plone/volto/icons/code.svg';\nimport ItemEdit from './Edit';\nimport ItemView from './View';\nimport { stylingSchema } from './schema';\n\nexport default (config) => {\n  config.blocks.blocksConfig.item = {\n    id: 'item',\n    title: 'Item',\n    icon: codeSVG,\n    group: 'common',\n    edit: ItemEdit,\n    view: ItemView,\n    blockHasOwnFocusManagement: true,\n    stylesSchema: stylingSchema,\n    enableStyling: true,\n    restricted: false,\n    mostUsed: false,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n  };\n\n  config.settings.blocksWithFootnotesSupport = {\n    ...(config.settings.blocksWithFootnotesSupport || {}),\n    item: ['description'],\n  };\n\n  return config;\n};\n"],"mappings":";;;AAAA,OAAOA,OAAO,MAAM,6BAA6B;AACjD,OAAOC,QAAQ,MAAM,QAAQ;AAC7B,OAAOC,QAAQ,MAAM,QAAQ;AAC7B,SAASC,aAAa,QAAQ,UAAU;AAExC,gBAAgBC,MAAM,IAAK;EACzBA,MAAM,CAACC,MAAM,CAACC,YAAY,CAACC,IAAI,GAAG;IAChCC,EAAE,EAAE,MAAM;IACVC,KAAK,EAAE,MAAM;IACbC,IAAI,EAAEV,OAAO;IACbW,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAEX,QAAQ;IACdY,IAAI,EAAEX,QAAQ;IACdY,0BAA0B,EAAE,IAAI;IAChCC,YAAY,EAAEZ,aAAa;IAC3Ba,aAAa,EAAE,IAAI;IACnBC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE;MACRC,aAAa,EAAE,EAAE;MACjBR,IAAI,EAAE;IACR;EACF,CAAC;EAEDT,MAAM,CAACkB,QAAQ,CAACC,0BAA0B,mCACpCnB,MAAM,CAACkB,QAAQ,CAACC,0BAA0B,IAAI,CAAC,CAAC;IACpDhB,IAAI,EAAE,CAAC,aAAa;EAAC,EACtB;EAED,OAAOH,MAAM;AACf,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}