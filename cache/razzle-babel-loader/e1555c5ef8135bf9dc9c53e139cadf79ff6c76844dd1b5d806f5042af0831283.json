{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectWithoutProperties from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"onChange\", \"value\"];\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Widgets/PickObjectWidget.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\n/*\n * A wrapper over ObjectBrowser because of API constraints\n */\n\nimport { TextWidget } from '@plone/volto/components'; //CheckboxWidget, Icon,\nimport { Link } from 'react-router-dom';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport React from 'react';\nvar ObjectBrowserWrapper = withObjectBrowser(_c = function _c(props) {\n  var id = props.id,\n    title = props.title,\n    value = props.value,\n    onSelectItem = props.onSelectItem,\n    openObjectBrowser = props.openObjectBrowser,\n    required = props.required,\n    onChangeBlock = props.onChangeBlock;\n  return __jsx(TextWidget, {\n    id: id,\n    title: value ? __jsx(Link, {\n      to: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 22\n      }\n    }, title) : title,\n    required: required,\n    value: value,\n    icon: value ? clearSVG : navTreeSVG,\n    iconAction: value ? function (id, value) {\n      return onSelectItem(null);\n    } : function () {\n      return openObjectBrowser({\n        mode: 'link',\n        onSelectItem: onSelectItem\n      });\n    },\n    onChange: function onChange(id, value) {\n      onChangeBlock(props.id, value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  });\n});\n_c2 = ObjectBrowserWrapper;\nvar ObjectBrowserAdapter = function ObjectBrowserAdapter(_ref) {\n  var onChange = _ref.onChange,\n    value = _ref.value,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return __jsx(ObjectBrowserWrapper, _extends({}, props, {\n    onSelectItem: function onSelectItem(value) {\n      return onChange(props.id, value);\n    },\n    onChangeBlock: onChange,\n    data: {\n      url: value\n    },\n    value: value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }));\n};\n_c3 = ObjectBrowserAdapter;\nexport default ObjectBrowserAdapter;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ObjectBrowserWrapper$withObjectBrowser\");\n$RefreshReg$(_c2, \"ObjectBrowserWrapper\");\n$RefreshReg$(_c3, \"ObjectBrowserAdapter\");","map":{"version":3,"names":["TextWidget","Link","clearSVG","navTreeSVG","withObjectBrowser","React","ObjectBrowserWrapper","props","id","title","value","onSelectItem","openObjectBrowser","required","onChangeBlock","mode","ObjectBrowserAdapter","onChange","url"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Widgets/PickObjectWidget.jsx"],"sourcesContent":["/*\n * A wrapper over ObjectBrowser because of API constraints\n */\n\nimport { TextWidget } from '@plone/volto/components'; //CheckboxWidget, Icon,\nimport { Link } from 'react-router-dom';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport React from 'react';\n\nconst ObjectBrowserWrapper = withObjectBrowser((props) => {\n  const {\n    id,\n    title,\n    value,\n    onSelectItem,\n    openObjectBrowser,\n    required,\n    onChangeBlock,\n  } = props;\n  return (\n    <TextWidget\n      id={id}\n      title={value ? <Link to={value}>{title}</Link> : title}\n      required={required}\n      value={value}\n      icon={value ? clearSVG : navTreeSVG}\n      iconAction={\n        value\n          ? (id, value) => onSelectItem(null)\n          : () => openObjectBrowser({ mode: 'link', onSelectItem })\n      }\n      onChange={(id, value) => {\n        onChangeBlock(props.id, value);\n      }}\n    />\n  );\n});\n\nconst ObjectBrowserAdapter = ({ onChange, value, ...props }) => {\n  return (\n    <ObjectBrowserWrapper\n      {...props}\n      onSelectItem={(value) => onChange(props.id, value)}\n      onChangeBlock={onChange}\n      data={{ url: value }}\n      value={value}\n    />\n  );\n};\n\nexport default ObjectBrowserAdapter;\n"],"mappings":";;;;;;AAAA;AACA;AACA;;AAEA,SAASA,UAAU,QAAQ,yBAAyB,CAAC,CAAC;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,iBAAiB,MAAM,sDAAsD;AACpF,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAMC,oBAAoB,GAAGF,iBAAiB,MAAC,YAACG,KAAK,EAAK;EACxD,IACEC,EAAE,GAOAD,KAAK,CAPPC,EAAE;IACFC,KAAK,GAMHF,KAAK,CANPE,KAAK;IACLC,KAAK,GAKHH,KAAK,CALPG,KAAK;IACLC,YAAY,GAIVJ,KAAK,CAJPI,YAAY;IACZC,iBAAiB,GAGfL,KAAK,CAHPK,iBAAiB;IACjBC,QAAQ,GAENN,KAAK,CAFPM,QAAQ;IACRC,aAAa,GACXP,KAAK,CADPO,aAAa;EAEf,OACE,MAAC,UAAU;IACT,EAAE,EAAEN,EAAG;IACP,KAAK,EAAEE,KAAK,GAAG,MAAC,IAAI;MAAC,EAAE,EAAEA,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAED,KAAK,CAAQ,GAAGA,KAAM;IACvD,QAAQ,EAAEI,QAAS;IACnB,KAAK,EAAEH,KAAM;IACb,IAAI,EAAEA,KAAK,GAAGR,QAAQ,GAAGC,UAAW;IACpC,UAAU,EACRO,KAAK,GACD,UAACF,EAAE,EAAEE,KAAK;MAAA,OAAKC,YAAY,CAAC,IAAI,CAAC;IAAA,IACjC;MAAA,OAAMC,iBAAiB,CAAC;QAAEG,IAAI,EAAE,MAAM;QAAEJ,YAAY,EAAZA;MAAa,CAAC,CAAC;IAAA,CAC5D;IACD,QAAQ,EAAE,kBAACH,EAAE,EAAEE,KAAK,EAAK;MACvBI,aAAa,CAACP,KAAK,CAACC,EAAE,EAAEE,KAAK,CAAC;IAChC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF;AAEN,CAAC,CAAC;AAAC,MA3BGJ,oBAAoB;AA6B1B,IAAMU,oBAAoB,GAAG,SAAvBA,oBAAoB,OAAsC;EAAA,IAAhCC,QAAQ,QAARA,QAAQ;IAAEP,KAAK,QAALA,KAAK;IAAKH,KAAK;EACvD,OACE,MAAC,oBAAoB,eACfA,KAAK;IACT,YAAY,EAAE,sBAACG,KAAK;MAAA,OAAKO,QAAQ,CAACV,KAAK,CAACC,EAAE,EAAEE,KAAK,CAAC;IAAA,CAAC;IACnD,aAAa,EAAEO,QAAS;IACxB,IAAI,EAAE;MAAEC,GAAG,EAAER;IAAM,CAAE;IACrB,KAAK,EAAEA,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACb;AAEN,CAAC;AAAC,MAVIM,oBAAoB;AAY1B,eAAeA,oBAAoB;AAAC;AAAA;AAAA;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}