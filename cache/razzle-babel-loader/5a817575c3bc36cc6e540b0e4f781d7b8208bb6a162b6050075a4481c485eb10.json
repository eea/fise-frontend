{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/ObjectListWidget.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Accordion, Button, Segment } from 'semantic-ui-react';\nimport { DragDropList, FormFieldWrapper, Icon } from '@plone/volto/components';\nimport ObjectWidget from '@plone/volto/components/manage/Widgets/ObjectWidget';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport addSVG from '@plone/volto/icons/add.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { v4 as uuid } from 'uuid';\nvar messages = defineMessages({\n  labelRemoveItem: {\n    \"id\": \"Remove item\",\n    \"defaultMessage\": \"Remove item\"\n  },\n  labelCollapseItem: {\n    \"id\": \"Collapse item\",\n    \"defaultMessage\": \"Collapse item\"\n  },\n  labelShowItem: {\n    \"id\": \"Show item\",\n    \"defaultMessage\": \"Show item\"\n  },\n  emptyObjectList: {\n    \"id\": \"Empty object list\",\n    \"defaultMessage\": \"Empty object list\"\n  },\n  add: {\n    \"id\": \"Add (object list)\",\n    \"defaultMessage\": \"Add\"\n  }\n});\n\n/**\n * This is a DataGridField-equivalent widget for schema-based values.\n * The shape of the items in the array is defined using a schema.\n *\n * ObjectListWidget can receive an optional `schemaExtender` prop which is\n * a function that can mutate the schema for each individual item in the array.\n * An example schema definition of the a field that renders with the\n * ObjectListWidget:\n *\n * ```jsx\n *  columns: {\n *    title: 'Columns',\n *    description: 'Leave empty to show all columns',\n *    schema: SomeItemSchema,\n *    widget: 'object_list',\n *    schemaExtender: (schema, data) => {\n *      const mutated = lodash.cloneDeep(schema);\n *      mutated.properties.extraField = {\n *        title: 'Extra field',\n *      }\n *      mutated.fieldsets[0].fields.push('extraField');\n *      return mutated;\n *    }\n *  },\n * ```\n */\nvar ObjectListWidget = function ObjectListWidget(props) {\n  _s();\n  var block = props.block,\n    fieldSet = props.fieldSet,\n    id = props.id,\n    schema = props.schema,\n    _props$value = props.value,\n    value = _props$value === void 0 ? [] : _props$value,\n    _onChange = props.onChange,\n    schemaExtender = props.schemaExtender;\n  var _React$useState = React.useState(value.length - 1),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    activeColumn = _React$useState2[0],\n    setActiveColumn = _React$useState2[1];\n  var intl = useIntl();\n  function handleChangeColumn(e, blockProps) {\n    var index = blockProps.index;\n    var newIndex = activeColumn === index ? -1 : index;\n    setActiveColumn(newIndex);\n  }\n  var objectSchema = typeof schema === 'function' ? schema(props) : schema;\n  var topLayerShadow = '0 1px 1px rgba(0,0,0,0.15)';\n  var secondLayer = ', 0 10px 0 -5px #eee, 0 10px 1px -4px rgba(0,0,0,0.15)';\n  var thirdLayer = ', 0 20px 0 -10px #eee, 0 20px 1px -9px rgba(0,0,0,0.15)';\n  return __jsx(\"div\", {\n    className: \"objectlist-widget\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, __jsx(FormFieldWrapper, _extends({}, props, {\n    noForInFieldLabel: true,\n    className: \"objectlist\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"add-item-button-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    compact: true,\n    icon: true,\n    \"aria-label\": objectSchema.addMessage || \"\".concat(intl.formatMessage(messages.add), \" \").concat(objectSchema.title),\n    onClick: function onClick(e) {\n      e.preventDefault();\n      _onChange(id, [].concat(_toConsumableArray(value), [{\n        '@id': uuid()\n      }]));\n      setActiveColumn(value.length);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: addSVG,\n    size: \"18px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), \"\\xA0\", objectSchema.addMessage || \"\".concat(intl.formatMessage(messages.add), \" \").concat(objectSchema.title))), value.length === 0 && __jsx(\"input\", {\n    \"aria-labelledby\": \"fieldset-\".concat(fieldSet || 'default', \"-field-label-\").concat(id),\n    type: \"hidden\",\n    value: intl.formatMessage(messages.emptyObjectList),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  })), __jsx(DragDropList, {\n    style: {\n      boxShadow: \"\".concat(topLayerShadow).concat(value.length > 1 ? secondLayer : '').concat(value.length > 2 ? thirdLayer : '')\n    },\n    forwardedAriaLabelledBy: \"fieldset-\".concat(fieldSet || 'default', \"-field-label-\").concat(id),\n    childList: value.map(function (o) {\n      return [o['@id'], o];\n    }),\n    onMoveItem: function onMoveItem(result) {\n      var source = result.source,\n        destination = result.destination;\n      if (!destination) {\n        return;\n      }\n      var first = value[source.index];\n      var second = value[destination.index];\n      value[destination.index] = first;\n      value[source.index] = second;\n      _onChange(id, value);\n      return true;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, function (_ref) {\n    var child = _ref.child,\n      childId = _ref.childId,\n      index = _ref.index,\n      draginfo = _ref.draginfo;\n    return __jsx(\"div\", _extends({\n      ref: draginfo.innerRef\n    }, draginfo.draggableProps, {\n      key: childId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }), __jsx(Accordion, {\n      key: index,\n      fluid: true,\n      styled: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, __jsx(Accordion.Title, {\n      active: activeColumn === index,\n      index: index,\n      onClick: handleChangeColumn,\n      \"aria-label\": \"\".concat(activeColumn === index ? intl.formatMessage(messages.labelCollapseItem) : intl.formatMessage(messages.labelShowItem), \" #\").concat(index + 1),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, __jsx(\"button\", _extends({\n      style: {\n        visibility: 'visible',\n        display: 'inline-block'\n      }\n    }, draginfo.dragHandleProps, {\n      className: \"drag handle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }), __jsx(Icon, {\n      name: dragSVG,\n      size: \"18px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"accordion-title-wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }, \"\".concat(objectSchema.title, \" #\").concat(index + 1)), __jsx(\"div\", {\n      className: \"accordion-tools\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }\n    }, __jsx(\"button\", {\n      \"aria-label\": \"\".concat(intl.formatMessage(messages.labelRemoveItem), \" #\").concat(index + 1),\n      onClick: function onClick() {\n        _onChange(id, value.filter(function (v, i) {\n          return i !== index;\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, __jsx(Icon, {\n      name: deleteSVG,\n      size: \"20px\",\n      color: \"#e40166\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 23\n      }\n    })), activeColumn === index ? __jsx(Icon, {\n      name: upSVG,\n      size: \"20px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 23\n      }\n    }) : __jsx(Icon, {\n      name: downSVG,\n      size: \"20px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }\n    }))), __jsx(Accordion.Content, {\n      active: activeColumn === index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, __jsx(Segment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }, __jsx(ObjectWidget, {\n      id: \"\".concat(id, \"-\").concat(index),\n      key: \"ow-\".concat(id, \"-\").concat(index),\n      block: block,\n      schema: schemaExtender ? schemaExtender(schema, child, intl) : objectSchema,\n      value: child,\n      onChange: function onChange(fi, fv) {\n        var newvalue = value.map(function (v, i) {\n          return i !== index ? v : fv;\n        });\n        _onChange(id, newvalue);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    })))));\n  }));\n};\n_s(ObjectListWidget, \"mBc6SkpT8fTRd9sU5EJm+HjZlGE=\", false, function () {\n  return [useIntl];\n});\n_c = ObjectListWidget;\nexport default ObjectListWidget;\nvar _c;\n$RefreshReg$(_c, \"ObjectListWidget\");","map":{"version":3,"names":["React","defineMessages","useIntl","Accordion","Button","Segment","DragDropList","FormFieldWrapper","Icon","ObjectWidget","upSVG","downSVG","deleteSVG","addSVG","dragSVG","v4","uuid","messages","labelRemoveItem","labelCollapseItem","labelShowItem","emptyObjectList","add","ObjectListWidget","props","block","fieldSet","id","schema","value","onChange","schemaExtender","useState","length","activeColumn","setActiveColumn","intl","handleChangeColumn","e","blockProps","index","newIndex","objectSchema","topLayerShadow","secondLayer","thirdLayer","addMessage","formatMessage","title","preventDefault","boxShadow","map","o","result","source","destination","first","second","child","childId","draginfo","innerRef","draggableProps","visibility","display","dragHandleProps","filter","v","i","fi","fv","newvalue"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/ObjectListWidget.jsx"],"sourcesContent":["import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Accordion, Button, Segment } from 'semantic-ui-react';\nimport { DragDropList, FormFieldWrapper, Icon } from '@plone/volto/components';\nimport ObjectWidget from '@plone/volto/components/manage/Widgets/ObjectWidget';\n\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport addSVG from '@plone/volto/icons/add.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { v4 as uuid } from 'uuid';\n\nconst messages = defineMessages({\n  labelRemoveItem: {\n    id: 'Remove item',\n    defaultMessage: 'Remove item',\n  },\n  labelCollapseItem: {\n    id: 'Collapse item',\n    defaultMessage: 'Collapse item',\n  },\n  labelShowItem: {\n    id: 'Show item',\n    defaultMessage: 'Show item',\n  },\n  emptyObjectList: {\n    id: 'Empty object list',\n    defaultMessage: 'Empty object list',\n  },\n  add: {\n    id: 'Add (object list)',\n    defaultMessage: 'Add',\n  },\n});\n\n/**\n * This is a DataGridField-equivalent widget for schema-based values.\n * The shape of the items in the array is defined using a schema.\n *\n * ObjectListWidget can receive an optional `schemaExtender` prop which is\n * a function that can mutate the schema for each individual item in the array.\n * An example schema definition of the a field that renders with the\n * ObjectListWidget:\n *\n * ```jsx\n *  columns: {\n *    title: 'Columns',\n *    description: 'Leave empty to show all columns',\n *    schema: SomeItemSchema,\n *    widget: 'object_list',\n *    schemaExtender: (schema, data) => {\n *      const mutated = lodash.cloneDeep(schema);\n *      mutated.properties.extraField = {\n *        title: 'Extra field',\n *      }\n *      mutated.fieldsets[0].fields.push('extraField');\n *      return mutated;\n *    }\n *  },\n * ```\n */\nconst ObjectListWidget = (props) => {\n  const {\n    block,\n    fieldSet,\n    id,\n    schema,\n    value = [],\n    onChange,\n    schemaExtender,\n  } = props;\n  const [activeColumn, setActiveColumn] = React.useState(value.length - 1);\n  const intl = useIntl();\n\n  function handleChangeColumn(e, blockProps) {\n    const { index } = blockProps;\n    const newIndex = activeColumn === index ? -1 : index;\n\n    setActiveColumn(newIndex);\n  }\n  const objectSchema = typeof schema === 'function' ? schema(props) : schema;\n\n  const topLayerShadow = '0 1px 1px rgba(0,0,0,0.15)';\n  const secondLayer = ', 0 10px 0 -5px #eee, 0 10px 1px -4px rgba(0,0,0,0.15)';\n  const thirdLayer = ', 0 20px 0 -10px #eee, 0 20px 1px -9px rgba(0,0,0,0.15)';\n\n  return (\n    <div className=\"objectlist-widget\">\n      <FormFieldWrapper {...props} noForInFieldLabel className=\"objectlist\">\n        <div className=\"add-item-button-wrapper\">\n          <Button\n            compact\n            icon\n            aria-label={\n              objectSchema.addMessage ||\n              `${intl.formatMessage(messages.add)} ${objectSchema.title}`\n            }\n            onClick={(e) => {\n              e.preventDefault();\n              onChange(id, [\n                ...value,\n                {\n                  '@id': uuid(),\n                },\n              ]);\n              setActiveColumn(value.length);\n            }}\n          >\n            <Icon name={addSVG} size=\"18px\" />\n            &nbsp;\n            {/* Custom addMessage in schema, else default to english */}\n            {objectSchema.addMessage ||\n              `${intl.formatMessage(messages.add)} ${objectSchema.title}`}\n          </Button>\n        </div>\n        {value.length === 0 && (\n          <input\n            aria-labelledby={`fieldset-${\n              fieldSet || 'default'\n            }-field-label-${id}`}\n            type=\"hidden\"\n            value={intl.formatMessage(messages.emptyObjectList)}\n          />\n        )}\n      </FormFieldWrapper>\n      <DragDropList\n        style={{\n          boxShadow: `${topLayerShadow}${value.length > 1 ? secondLayer : ''}${\n            value.length > 2 ? thirdLayer : ''\n          }`,\n        }}\n        forwardedAriaLabelledBy={`fieldset-${\n          fieldSet || 'default'\n        }-field-label-${id}`}\n        childList={value.map((o) => [o['@id'], o])}\n        onMoveItem={(result) => {\n          const { source, destination } = result;\n          if (!destination) {\n            return;\n          }\n\n          const first = value[source.index];\n          const second = value[destination.index];\n          value[destination.index] = first;\n          value[source.index] = second;\n\n          onChange(id, value);\n          return true;\n        }}\n      >\n        {({ child, childId, index, draginfo }) => {\n          return (\n            <div\n              ref={draginfo.innerRef}\n              {...draginfo.draggableProps}\n              key={childId}\n            >\n              <Accordion key={index} fluid styled>\n                <Accordion.Title\n                  active={activeColumn === index}\n                  index={index}\n                  onClick={handleChangeColumn}\n                  aria-label={`${\n                    activeColumn === index\n                      ? intl.formatMessage(messages.labelCollapseItem)\n                      : intl.formatMessage(messages.labelShowItem)\n                  } #${index + 1}`}\n                >\n                  <button\n                    style={{\n                      visibility: 'visible',\n                      display: 'inline-block',\n                    }}\n                    {...draginfo.dragHandleProps}\n                    className=\"drag handle\"\n                  >\n                    <Icon name={dragSVG} size=\"18px\" />\n                  </button>\n\n                  <div className=\"accordion-title-wrapper\">\n                    {`${objectSchema.title} #${index + 1}`}\n                  </div>\n                  <div className=\"accordion-tools\">\n                    <button\n                      aria-label={`${intl.formatMessage(\n                        messages.labelRemoveItem,\n                      )} #${index + 1}`}\n                      onClick={() => {\n                        onChange(\n                          id,\n                          value.filter((v, i) => i !== index),\n                        );\n                      }}\n                    >\n                      <Icon name={deleteSVG} size=\"20px\" color=\"#e40166\" />\n                    </button>\n                    {activeColumn === index ? (\n                      <Icon name={upSVG} size=\"20px\" />\n                    ) : (\n                      <Icon name={downSVG} size=\"20px\" />\n                    )}\n                  </div>\n                </Accordion.Title>\n                <Accordion.Content active={activeColumn === index}>\n                  <Segment>\n                    <ObjectWidget\n                      id={`${id}-${index}`}\n                      key={`ow-${id}-${index}`}\n                      block={block}\n                      schema={\n                        schemaExtender\n                          ? schemaExtender(schema, child, intl)\n                          : objectSchema\n                      }\n                      value={child}\n                      onChange={(fi, fv) => {\n                        const newvalue = value.map((v, i) =>\n                          i !== index ? v : fv,\n                        );\n                        onChange(id, newvalue);\n                      }}\n                    />\n                  </Segment>\n                </Accordion.Content>\n              </Accordion>\n            </div>\n          );\n        }}\n      </DragDropList>\n    </div>\n  );\n};\nexport default ObjectListWidget;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Remove item","defaultMessage":"Remove item"},{"id":"Collapse item","defaultMessage":"Collapse item"},{"id":"Show item","defaultMessage":"Show item"},{"id":"Empty object list","defaultMessage":"Empty object list"},{"id":"Add (object list)","defaultMessage":"Add"}]}},"sourceType":"module","externalDependencies":[]}