{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/packages/volto-slate/src/editor/plugins/Blockquote/index.js\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { BlockButton } from '@plone/volto-slate/editor/ui';\nimport quoteIcon from '@plone/volto/icons/quote.svg';\n\n// TODO: this needs to use constants for el type\n\nexport var BlockquoteElement = function BlockquoteElement(_ref) {\n  var attributes = _ref.attributes,\n    children = _ref.children;\n  // the 'callout' class is defined in file 'blocks.less'\n  // TODO: move the style out of it into a `blockquote` tag name selector\n  return __jsx(\"blockquote\", _extends({}, attributes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }\n  }), children);\n};\n_c = BlockquoteElement;\nexport default function install(config) {\n  var _this2 = this;\n  var slate = config.settings.slate;\n  slate.buttons['blockquote'] = function (props) {\n    return __jsx(BlockButton, _extends({\n      format: \"blockquote\",\n      icon: quoteIcon,\n      title: \"Blockquote\"\n    }, props, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }\n    }));\n  };\n  slate.elements['blockquote'] = BlockquoteElement;\n  slate.toolbarButtons.push('blockquote');\n  slate.expandedToolbarButtons.push('blockquote');\n  return config;\n}\nvar _c;\n$RefreshReg$(_c, \"BlockquoteElement\");","map":{"version":3,"names":["React","BlockButton","quoteIcon","BlockquoteElement","attributes","children","install","config","slate","settings","buttons","props","elements","toolbarButtons","push","expandedToolbarButtons"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/packages/volto-slate/src/editor/plugins/Blockquote/index.js"],"sourcesContent":["import React from 'react';\nimport { BlockButton } from '@plone/volto-slate/editor/ui';\nimport quoteIcon from '@plone/volto/icons/quote.svg';\n\n// TODO: this needs to use constants for el type\n\nexport const BlockquoteElement = ({ attributes, children }) => {\n  // the 'callout' class is defined in file 'blocks.less'\n  // TODO: move the style out of it into a `blockquote` tag name selector\n  return <blockquote {...attributes}>{children}</blockquote>;\n};\n\nexport default function install(config) {\n  const { slate } = config.settings;\n\n  slate.buttons['blockquote'] = (props) => (\n    <BlockButton\n      format=\"blockquote\"\n      icon={quoteIcon}\n      title=\"Blockquote\"\n      {...props}\n    />\n  );\n  slate.elements['blockquote'] = BlockquoteElement;\n\n  slate.toolbarButtons.push('blockquote');\n  slate.expandedToolbarButtons.push('blockquote');\n\n  return config;\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,8BAA8B;AAC1D,OAAOC,SAAS,MAAM,8BAA8B;;AAEpD;;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,OAAiC;EAAA,IAA3BC,UAAU,QAAVA,UAAU;IAAEC,QAAQ,QAARA,QAAQ;EACtD;EACA;EACA,OAAO,iCAAgBD,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAAGC,QAAQ,CAAc;AAC5D,CAAC;AAAC,KAJWF,iBAAiB;AAM9B,eAAe,SAASG,OAAO,CAACC,MAAM,EAAE;EAAA;EACtC,IAAQC,KAAK,GAAKD,MAAM,CAACE,QAAQ,CAAzBD,KAAK;EAEbA,KAAK,CAACE,OAAO,CAAC,YAAY,CAAC,GAAG,UAACC,KAAK;IAAA,OAClC,MAAC,WAAW;MACV,MAAM,EAAC,YAAY;MACnB,IAAI,EAAET,SAAU;MAChB,KAAK,EAAC;IAAY,GACdS,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACT;EAAA,CACH;EACDH,KAAK,CAACI,QAAQ,CAAC,YAAY,CAAC,GAAGT,iBAAiB;EAEhDK,KAAK,CAACK,cAAc,CAACC,IAAI,CAAC,YAAY,CAAC;EACvCN,KAAK,CAACO,sBAAsB,CAACD,IAAI,CAAC,YAAY,CAAC;EAE/C,OAAOP,MAAM;AACf;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}