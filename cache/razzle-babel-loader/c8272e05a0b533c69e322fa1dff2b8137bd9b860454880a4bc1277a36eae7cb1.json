{"ast":null,"code":"import _regeneratorRuntime from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-eea-map/src/components/widgets/LegendWidget.jsx\",\n  _this = this,\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Grid } from 'semantic-ui-react';\nimport { fetchArcGISData, setLegendColumns } from '../../utils';\nimport { Icon } from '@plone/volto/components';\nimport { serializeNodes } from 'volto-slate/editor/render';\nimport rightKeySVG from '@plone/volto/icons/right-key.svg';\nimport downKeySVG from '@plone/volto/icons/down-key.svg';\nimport { withDeviceSize } from '../../hocs';\nimport codeSVG from '../../static/code-line.svg';\nvar LayerLegend = function LayerLegend(_ref) {\n  _s();\n  var data = _ref.data,\n    show_viewer = _ref.show_viewer;\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    legendRows = _React$useState2[0],\n    setLegendRows = _React$useState2[1];\n  var _data$map_service_url = data.map_service_url,\n    map_service_url = _data$map_service_url === void 0 ? '' : _data$map_service_url,\n    _data$layer = data.layer,\n    layer = _data$layer === void 0 ? {} : _data$layer;\n  var _ref2 = layer || {},\n    id = _ref2.id,\n    name = _ref2.name;\n  var fetchLegend = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(url, activeLayerID) {\n      var legendData, _legendData$layers, layers, selectedLayer;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetchArcGISData(url);\n            case 2:\n              legendData = _context.sent;\n              _legendData$layers = legendData.layers, layers = _legendData$layers === void 0 ? [] : _legendData$layers;\n              selectedLayer = layers.filter(function (l, i) {\n                return l.layerId === activeLayerID;\n              });\n              setLegendRows(selectedLayer[0].legend);\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function fetchLegend(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  React.useEffect(function () {\n    if (data.map_service_url && id !== undefined) {\n      fetchLegend(\"\".concat(data.map_service_url, \"/legend\"), id);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, data.map_service_url]);\n  return __jsx(Grid.Column, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(\"h5\", {\n    style: {\n      marginTop: '15px',\n      marginBottom: '5px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, name), show_viewer && map_service_url && __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    title: \"Open ArcGIS Service location\",\n    href: \"https://www.arcgis.com/home/webmap/viewer.html?url=\" + \"\".concat(map_service_url, \"&source=sd\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    size: \"tiny\",\n    className: \"extra-view-external-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, __jsx(Button.Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    className: \"extra-view-external-icon\",\n    src: codeSVG,\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }))))), data.description && serializeNodes(data.description), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, legendRows.length > 0 && legendRows.map(function (item, i) {\n    return __jsx(\"span\", {\n      key: i,\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      alt: \"alt\",\n      className: \"layer-legend-item-color\",\n      src: \"data:image/png;base64,\".concat(item.imageData),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), __jsx(\"span\", {\n      style: {\n        fontSize: '13px',\n        marginLeft: '5px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, item.label));\n  })));\n};\n_s(LayerLegend, \"AIoUhqc2TAS6TUfZnL74onOQAXA=\");\n_c = LayerLegend;\nvar LegendWidget = function LegendWidget(props) {\n  _s2();\n  var data = React.useMemo(function () {\n    return props.data;\n  }, [props.data]);\n  var _props$device = props.device,\n    device = _props$device === void 0 ? '' : _props$device,\n    _props$show_viewer = props.show_viewer,\n    show_viewer = _props$show_viewer === void 0 ? false : _props$show_viewer;\n  var _React$useState3 = React.useState(true),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    expand = _React$useState4[0],\n    setExpand = _React$useState4[1];\n  var _data$layers = data.layers,\n    layers = _data$layers === void 0 ? {} : _data$layers;\n  var map_layers = layers && layers.map_layers && layers.map_layers.length > 0 && layers.map_layers.length > 3 ? layers === null || layers === void 0 ? void 0 : layers.map_layers.slice(0, 3) : layers === null || layers === void 0 ? void 0 : layers.map_layers;\n  var visible_layers = map_layers ? map_layers.filter(function (l) {\n    var _l$map_layer;\n    return !(l !== null && l !== void 0 && (_l$map_layer = l.map_layer) !== null && _l$map_layer !== void 0 && _l$map_layer.hide);\n  }) : '';\n  var legendColumns = visible_layers && setLegendColumns(visible_layers.length, device);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"legend-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: \"legend-action\",\n    onClick: function onClick() {\n      return setExpand(!expand);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    role: \"presentation\",\n    className: \"legend-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: expand ? downKeySVG : rightKeySVG,\n    title: expand ? 'Collapse' : 'Expand',\n    size: \"17px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), \"Legend:\")), __jsx(Grid, {\n    columns: legendColumns,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, (!visible_layers || visible_layers.length === 0) && __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"No layer found for legend. Please add a map layer from editor.\"), expand && __jsx(Grid.Row, {\n    divided: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, visible_layers && visible_layers.length > 0 && visible_layers.map(function (l, i) {\n    return __jsx(LayerLegend, {\n      key: i,\n      data: l.map_layer,\n      show_viewer: show_viewer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    });\n  })))));\n};\n_s2(LegendWidget, \"VHwo8LyXoCYmxOrZ2LmaDUINScs=\");\n_c2 = LegendWidget;\nexport default _c4 = withDeviceSize(_c3 = /*#__PURE__*/React.memo(LegendWidget));\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LayerLegend\");\n$RefreshReg$(_c2, \"LegendWidget\");\n$RefreshReg$(_c3, \"%default%$withDeviceSize\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"names":["React","Button","Grid","fetchArcGISData","setLegendColumns","Icon","serializeNodes","rightKeySVG","downKeySVG","withDeviceSize","codeSVG","LayerLegend","data","show_viewer","useState","legendRows","setLegendRows","map_service_url","layer","id","name","fetchLegend","url","activeLayerID","legendData","layers","selectedLayer","filter","l","i","layerId","legend","useEffect","undefined","display","alignItems","justifyContent","marginTop","marginBottom","description","flexDirection","length","map","item","imageData","fontSize","marginLeft","label","LegendWidget","props","useMemo","device","expand","setExpand","map_layers","slice","visible_layers","map_layer","hide","legendColumns","memo"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-eea-map/src/components/widgets/LegendWidget.jsx"],"sourcesContent":["import React from 'react';\nimport { Button, Grid } from 'semantic-ui-react';\nimport { fetchArcGISData, setLegendColumns } from '../../utils';\nimport { Icon } from '@plone/volto/components';\nimport { serializeNodes } from 'volto-slate/editor/render';\n\nimport rightKeySVG from '@plone/volto/icons/right-key.svg';\nimport downKeySVG from '@plone/volto/icons/down-key.svg';\nimport { withDeviceSize } from '../../hocs';\n\nimport codeSVG from '../../static/code-line.svg';\n\nconst LayerLegend = ({ data, show_viewer }) => {\n  const [legendRows, setLegendRows] = React.useState([]);\n\n  const { map_service_url = '', layer = {} } = data;\n  const { id, name } = layer || {};\n\n  const fetchLegend = async (url, activeLayerID) => {\n    let legendData = await fetchArcGISData(url);\n\n    const { layers = [] } = legendData;\n    const selectedLayer = layers.filter((l, i) => l.layerId === activeLayerID);\n    setLegendRows(selectedLayer[0].legend);\n  };\n\n  React.useEffect(() => {\n    if (data.map_service_url && id !== undefined) {\n      fetchLegend(`${data.map_service_url}/legend`, id);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, data.map_service_url]);\n\n  return (\n    <Grid.Column>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <h5\n          style={{\n            marginTop: '15px',\n            marginBottom: '5px',\n          }}\n        >\n          {name}\n        </h5>\n        {show_viewer && map_service_url && (\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            title=\"Open ArcGIS Service location\"\n            href={\n              `https://www.arcgis.com/home/webmap/viewer.html?url=` +\n              `${map_service_url}&source=sd`\n            }\n          >\n            <Button size=\"tiny\" className=\"extra-view-external-button\">\n              <Button.Content>\n                <img\n                  className=\"extra-view-external-icon\"\n                  src={codeSVG}\n                  alt=\"\"\n                />\n              </Button.Content>\n            </Button>\n          </a>\n        )}\n      </div>\n      {data.description && serializeNodes(data.description)}\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        {legendRows.length > 0 &&\n          legendRows.map((item, i) => {\n            return (\n              <span key={i} style={{ display: 'flex', alignItems: 'center' }}>\n                <img\n                  alt=\"alt\"\n                  className=\"layer-legend-item-color\"\n                  src={`data:image/png;base64,${item.imageData}`}\n                />\n                <span style={{ fontSize: '13px', marginLeft: '5px' }}>\n                  {item.label}\n                </span>\n              </span>\n            );\n          })}\n      </div>\n    </Grid.Column>\n  );\n};\n\nconst LegendWidget = (props) => {\n  const data = React.useMemo(() => props.data, [props.data]);\n  const { device = '', show_viewer = false } = props;\n\n  const [expand, setExpand] = React.useState(true);\n\n  const { layers = {} } = data;\n  const map_layers =\n    layers &&\n    layers.map_layers &&\n    layers.map_layers.length > 0 &&\n    layers.map_layers.length > 3\n      ? layers?.map_layers.slice(0, 3)\n      : layers?.map_layers;\n\n  const visible_layers = map_layers\n    ? map_layers.filter((l) => !l?.map_layer?.hide)\n    : '';\n\n  const legendColumns =\n    visible_layers && setLegendColumns(visible_layers.length, device);\n  return (\n    <>\n      <div className=\"legend-container\">\n        <button className=\"legend-action\" onClick={() => setExpand(!expand)}>\n          <h3 role=\"presentation\" className=\"legend-title\">\n            <Icon\n              name={expand ? downKeySVG : rightKeySVG}\n              title={expand ? 'Collapse' : 'Expand'}\n              size=\"17px\"\n            />\n            Legend:\n          </h3>\n        </button>\n        <Grid columns={legendColumns}>\n          {(!visible_layers || visible_layers.length === 0) && (\n            <p>\n              No layer found for legend. Please add a map layer from editor.\n            </p>\n          )}\n          {expand && (\n            <Grid.Row divided>\n              {visible_layers &&\n                visible_layers.length > 0 &&\n                visible_layers.map((l, i) => (\n                  <LayerLegend\n                    key={i}\n                    data={l.map_layer}\n                    show_viewer={show_viewer}\n                  />\n                ))}\n            </Grid.Row>\n          )}\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default withDeviceSize(React.memo(LegendWidget));\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}