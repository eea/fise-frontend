{"ast":null,"code":"const _excluded = [\"format\", \"icon\"];\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/editor/ui/MarkButton.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport { useSlate } from 'slate-react';\nimport { isMarkActive, toggleMark } from 'volto-slate/utils';\nimport ToolbarButton from './ToolbarButton';\nconst MarkButton = _ref => {\n  let {\n      format,\n      icon\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const editor = useSlate();\n  return __jsx(ToolbarButton, _extends({}, props, {\n    active: isMarkActive(editor, format),\n    onMouseDown: event => {\n      event.preventDefault();\n      toggleMark(editor, format);\n    },\n    icon: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }));\n};\nexport default MarkButton;","map":{"version":3,"names":["React","useSlate","isMarkActive","toggleMark","ToolbarButton","MarkButton","format","icon","props","editor","event","preventDefault"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/editor/ui/MarkButton.jsx"],"sourcesContent":["import React from 'react';\nimport { useSlate } from 'slate-react';\n\nimport { isMarkActive, toggleMark } from 'volto-slate/utils';\nimport ToolbarButton from './ToolbarButton';\n\nconst MarkButton = ({ format, icon, ...props }) => {\n  const editor = useSlate();\n\n  return (\n    <ToolbarButton\n      {...props}\n      active={isMarkActive(editor, format)}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        toggleMark(editor, format);\n      }}\n      icon={icon}\n    />\n  );\n};\n\nexport default MarkButton;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AAEtC,SAASC,YAAY,EAAEC,UAAU,QAAQ,mBAAmB;AAC5D,OAAOC,aAAa,MAAM,iBAAiB;AAE3C,MAAMC,UAAU,GAAG,QAAgC;EAAA,IAA/B;MAAEC,MAAM;MAAEC;IAAe,CAAC;IAAPC,KAAK;EAC1C,MAAMC,MAAM,GAAGR,QAAQ,EAAE;EAEzB,OACE,MAAC,aAAa,eACRO,KAAK;IACT,MAAM,EAAEN,YAAY,CAACO,MAAM,EAAEH,MAAM,CAAE;IACrC,WAAW,EAAGI,KAAK,IAAK;MACtBA,KAAK,CAACC,cAAc,EAAE;MACtBR,UAAU,CAACM,MAAM,EAAEH,MAAM,CAAC;IAC5B,CAAE;IACF,IAAI,EAAEC,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACX;AAEN,CAAC;AAED,eAAeF,UAAU"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}