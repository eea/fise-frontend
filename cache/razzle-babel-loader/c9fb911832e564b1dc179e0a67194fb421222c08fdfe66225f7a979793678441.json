{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Rules/ConfigureRule.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Configure content rule component.\n * @module components/manage/Controlpanels/Rules/ConfigureRule\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getBaseUrl, getParentUrl, Helmet } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Card, Container, Dropdown, Grid, Segment } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { Icon, Toolbar, UniversalLink } from '@plone/volto/components';\nimport { getControlPanelRule, removeCondition, addCondition, editCondition, removeAction, addAction, editAction, getCondition, getAction, moveRuleCondition, moveRuleAction } from '@plone/volto/actions';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport upSVG from '@plone/volto/icons/up.svg';\nimport downSVG from '@plone/volto/icons/down.svg';\nimport VariableModal from './components/VariableModal';\nconst messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  configRule: {\n    \"id\": \"Configure content rule\",\n    \"defaultMessage\": \"Configure content rule\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  deleteCondition: {\n    \"id\": \"Delete condition\",\n    \"defaultMessage\": \"Condition deleted\"\n  },\n  addCondition: {\n    \"id\": \"Add condition\",\n    \"defaultMessage\": \"Condition added\"\n  },\n  deleteAction: {\n    \"id\": \"Delete action\",\n    \"defaultMessage\": \"Action deleted\"\n  },\n  addAction: {\n    \"id\": \"Add action\",\n    \"defaultMessage\": \"Action added\"\n  },\n  editAction: {\n    \"id\": \"Action changed\",\n    \"defaultMessage\": \"Action changed\"\n  },\n  editCondition: {\n    \"id\": \"Condition changed\",\n    \"defaultMessage\": \"Condition changed\"\n  },\n  move: {\n    \"id\": \"Position changed\",\n    \"defaultMessage\": \"Position changed\"\n  },\n  moveUp: {\n    \"id\": \"Move up\",\n    \"defaultMessage\": \"Move up\"\n  },\n  moveDown: {\n    \"id\": \"Move down\",\n    \"defaultMessage\": \"Move down\"\n  }\n});\n\n/**\n * ConfigureRule class.\n * @class ConfigureRule\n * @extends Component\n */\nclass ConfigureRule extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  constructor(props) {\n    super(props);\n    this.openConditionModal = this.openConditionModal.bind(this);\n    this.openActionModal = this.openActionModal.bind(this);\n    this.handleConditionAdd = this.handleConditionAdd.bind(this);\n    this.handleActionAdd = this.handleActionAdd.bind(this);\n    this.openEditCondition = this.openEditCondition.bind(this);\n    this.openEditAction = this.openEditAction.bind(this);\n    this.handleEditCondition = this.handleEditCondition.bind(this);\n    this.handleEditAction = this.handleEditAction.bind(this);\n    this.state = {\n      isClient: false,\n      openModal: false,\n      selConditionToAdd: '',\n      selActionToAdd: '',\n      selConditionToEdit: '',\n      selActionToEdit: '',\n      conditionFormData: '',\n      actionFormData: ''\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    var _this$props, _this$props$match, _this$props$match$par;\n    this.setState({\n      isClient: true\n    });\n    this.props.getControlPanelRule(getBaseUrl(this.props.pathname), (_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$match = _this$props.match) === null || _this$props$match === void 0 ? void 0 : (_this$props$match$par = _this$props$match.params) === null || _this$props$match$par === void 0 ? void 0 : _this$props$match$par.id);\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    var _this$props3, _this$props3$rule, _this$props4, _this$props4$rule, _this$props7, _this$props7$rule, _this$props8, _this$props8$rule;\n    if (this.state.selConditionToEdit && prevState.selConditionToEdit !== this.state.selConditionToEdit) {\n      var _this$props2, _this$props2$match, _this$props2$match$pa;\n      this.props.getCondition(getBaseUrl(this.props.pathname), (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : (_this$props2$match = _this$props2.match) === null || _this$props2$match === void 0 ? void 0 : (_this$props2$match$pa = _this$props2$match.params) === null || _this$props2$match$pa === void 0 ? void 0 : _this$props2$match$pa.id, this.state.selConditionToEdit.idx);\n    }\n    if ((_this$props3 = this.props) !== null && _this$props3 !== void 0 && (_this$props3$rule = _this$props3.rule) !== null && _this$props3$rule !== void 0 && _this$props3$rule.condition && ((_this$props4 = this.props) === null || _this$props4 === void 0 ? void 0 : (_this$props4$rule = _this$props4.rule) === null || _this$props4$rule === void 0 ? void 0 : _this$props4$rule.condition) !== (prevProps === null || prevProps === void 0 ? void 0 : prevProps.rule.condition)) {\n      var _this$props5, _this$props5$rule;\n      const conditionFormData = (_this$props5 = this.props) === null || _this$props5 === void 0 ? void 0 : (_this$props5$rule = _this$props5.rule) === null || _this$props5$rule === void 0 ? void 0 : _this$props5$rule.condition;\n      this.setState({\n        conditionFormData\n      });\n    }\n    if (this.state.selActionToEdit && prevState.selActionToEdit !== this.state.selActionToEdit) {\n      var _this$props6, _this$props6$match, _this$props6$match$pa;\n      this.props.getAction(getBaseUrl(this.props.pathname), (_this$props6 = this.props) === null || _this$props6 === void 0 ? void 0 : (_this$props6$match = _this$props6.match) === null || _this$props6$match === void 0 ? void 0 : (_this$props6$match$pa = _this$props6$match.params) === null || _this$props6$match$pa === void 0 ? void 0 : _this$props6$match$pa.id, this.state.selActionToEdit.idx);\n    }\n    if ((_this$props7 = this.props) !== null && _this$props7 !== void 0 && (_this$props7$rule = _this$props7.rule) !== null && _this$props7$rule !== void 0 && _this$props7$rule.action && ((_this$props8 = this.props) === null || _this$props8 === void 0 ? void 0 : (_this$props8$rule = _this$props8.rule) === null || _this$props8$rule === void 0 ? void 0 : _this$props8$rule.action) !== (prevProps === null || prevProps === void 0 ? void 0 : prevProps.rule.action)) {\n      var _this$props9, _this$props9$rule;\n      const actionFormData = (_this$props9 = this.props) === null || _this$props9 === void 0 ? void 0 : (_this$props9$rule = _this$props9.rule) === null || _this$props9$rule === void 0 ? void 0 : _this$props9$rule.action;\n      this.setState({\n        actionFormData\n      });\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.rule.move.loading && nextProps.rule.move.loaded) {\n      var _this$props10, _this$props10$match, _this$props10$match$p;\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.move),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      }));\n      this.props.getControlPanelRule(getBaseUrl(this.props.pathname), (_this$props10 = this.props) === null || _this$props10 === void 0 ? void 0 : (_this$props10$match = _this$props10.match) === null || _this$props10$match === void 0 ? void 0 : (_this$props10$match$p = _this$props10$match.params) === null || _this$props10$match$p === void 0 ? void 0 : _this$props10$match$p.id);\n    }\n    if (this.props.rule.deletecondition.loading && nextProps.rule.deletecondition.loaded) {\n      var _this$props11, _this$props11$match, _this$props11$match$p;\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.deleteCondition),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }\n      }));\n      this.props.getControlPanelRule(getBaseUrl(this.props.pathname), (_this$props11 = this.props) === null || _this$props11 === void 0 ? void 0 : (_this$props11$match = _this$props11.match) === null || _this$props11$match === void 0 ? void 0 : (_this$props11$match$p = _this$props11$match.params) === null || _this$props11$match$p === void 0 ? void 0 : _this$props11$match$p.id);\n    }\n    if (this.props.rule.editcondition.loading && nextProps.rule.editcondition.loaded) {\n      var _this$props12, _this$props12$match, _this$props12$match$p;\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.editCondition),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }\n      }));\n      this.props.getControlPanelRule(getBaseUrl(this.props.pathname), (_this$props12 = this.props) === null || _this$props12 === void 0 ? void 0 : (_this$props12$match = _this$props12.match) === null || _this$props12$match === void 0 ? void 0 : (_this$props12$match$p = _this$props12$match.params) === null || _this$props12$match$p === void 0 ? void 0 : _this$props12$match$p.id);\n    }\n    if (this.props.rule.editaction.loading && nextProps.rule.editaction.loaded) {\n      var _this$props13, _this$props13$match, _this$props13$match$p;\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.editAction),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 9\n        }\n      }));\n      this.props.getControlPanelRule(getBaseUrl(this.props.pathname), (_this$props13 = this.props) === null || _this$props13 === void 0 ? void 0 : (_this$props13$match = _this$props13.match) === null || _this$props13$match === void 0 ? void 0 : (_this$props13$match$p = _this$props13$match.params) === null || _this$props13$match$p === void 0 ? void 0 : _this$props13$match$p.id);\n    }\n    if (this.props.rule.addcondition.loading && nextProps.rule.addcondition.loaded) {\n      var _this$props14, _this$props14$match, _this$props14$match$p;\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.addCondition),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }\n      }));\n      this.props.getControlPanelRule(getBaseUrl(this.props.pathname), (_this$props14 = this.props) === null || _this$props14 === void 0 ? void 0 : (_this$props14$match = _this$props14.match) === null || _this$props14$match === void 0 ? void 0 : (_this$props14$match$p = _this$props14$match.params) === null || _this$props14$match$p === void 0 ? void 0 : _this$props14$match$p.id);\n    }\n    if (this.props.rule.deleteaction.loading && nextProps.rule.deleteaction.loaded) {\n      var _this$props15, _this$props15$match, _this$props15$match$p;\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.deleteAction),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 9\n        }\n      }));\n      this.props.getControlPanelRule(getBaseUrl(this.props.pathname), (_this$props15 = this.props) === null || _this$props15 === void 0 ? void 0 : (_this$props15$match = _this$props15.match) === null || _this$props15$match === void 0 ? void 0 : (_this$props15$match$p = _this$props15$match.params) === null || _this$props15$match$p === void 0 ? void 0 : _this$props15$match$p.id);\n    }\n    if (this.props.rule.addaction.loading && nextProps.rule.addaction.loaded) {\n      var _this$props16, _this$props16$match, _this$props16$match$p;\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.addAction),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }\n      }));\n      this.props.getControlPanelRule(getBaseUrl(this.props.pathname), (_this$props16 = this.props) === null || _this$props16 === void 0 ? void 0 : (_this$props16$match = _this$props16.match) === null || _this$props16$match === void 0 ? void 0 : (_this$props16$match$p = _this$props16$match.params) === null || _this$props16$match$p === void 0 ? void 0 : _this$props16$match$p.id);\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(getParentUrl(this.props.pathname)));\n  }\n\n  /**\n   * Remove condition handler\n   * @method handleRemoveCondition\n   * @returns {undefined}\n   */\n  handleRemoveCondition(conditionId) {\n    var _this$props17, _this$props17$match, _this$props17$match$p;\n    const ruleId = (_this$props17 = this.props) === null || _this$props17 === void 0 ? void 0 : (_this$props17$match = _this$props17.match) === null || _this$props17$match === void 0 ? void 0 : (_this$props17$match$p = _this$props17$match.params) === null || _this$props17$match$p === void 0 ? void 0 : _this$props17$match$p.id;\n    this.props.removeCondition(getBaseUrl(this.props.pathname), ruleId, conditionId);\n  }\n\n  /**\n   * Edit condition handler\n   * @method handleEditCondition\n   * @returns {undefined}\n   */\n  handleEditCondition(val) {\n    var _this$props18, _this$props18$match, _this$props18$match$p;\n    const ruleId = (_this$props18 = this.props) === null || _this$props18 === void 0 ? void 0 : (_this$props18$match = _this$props18.match) === null || _this$props18$match === void 0 ? void 0 : (_this$props18$match$p = _this$props18$match.params) === null || _this$props18$match$p === void 0 ? void 0 : _this$props18$match$p.id;\n    if (this.state.selConditionToEdit) {\n      this.props.editCondition(getBaseUrl(this.props.pathname), ruleId, val, this.state.selConditionToEdit.idx);\n    }\n  }\n\n  /**\n   * Edit action handler\n   * @method handleEditAction\n   * @returns {undefined}\n   */\n  handleEditAction(val) {\n    var _this$props19, _this$props19$match, _this$props19$match$p;\n    const ruleId = (_this$props19 = this.props) === null || _this$props19 === void 0 ? void 0 : (_this$props19$match = _this$props19.match) === null || _this$props19$match === void 0 ? void 0 : (_this$props19$match$p = _this$props19$match.params) === null || _this$props19$match$p === void 0 ? void 0 : _this$props19$match$p.id;\n    if (this.state.selActionToEdit) {\n      this.props.editAction(getBaseUrl(this.props.pathname), ruleId, val, this.state.selActionToEdit.idx);\n    }\n  }\n\n  /**\n   * open modal edit condition handler\n   * @method openEditCondition\n   * @returns {undefined}\n   */\n  openEditCondition(cond_id) {\n    this.setState({\n      selConditionToEdit: cond_id,\n      openModal: true,\n      selActionToEdit: ''\n    });\n  }\n\n  /**\n   * open modal edit action handler\n   * @method openEditAction\n   * @returns {undefined}\n   */\n  openEditAction(action_id) {\n    this.setState({\n      selActionToEdit: action_id,\n      openModal: true,\n      selConditionToEdit: ''\n    });\n  }\n\n  /**\n   * Add condition handler\n   * @method openConditionModal\n   * @returns {undefined}\n   */\n  openConditionModal() {\n    if (this.state.selConditionToAdd) {\n      this.setState({\n        openModal: true\n      });\n    }\n  }\n\n  /**\n   * Condition save handler\n   * @method handleConditionAdd\n   * @returns {undefined}\n   */\n  handleConditionAdd(val) {\n    var _this$props20, _this$props20$match, _this$props20$match$p;\n    const ruleId = (_this$props20 = this.props) === null || _this$props20 === void 0 ? void 0 : (_this$props20$match = _this$props20.match) === null || _this$props20$match === void 0 ? void 0 : (_this$props20$match$p = _this$props20$match.params) === null || _this$props20$match$p === void 0 ? void 0 : _this$props20$match$p.id;\n    this.props.addCondition(getBaseUrl(this.props.pathname), ruleId, val);\n    this.setState({\n      selConditionToAdd: ''\n    });\n  }\n\n  /**\n   * Add action handler\n   * @method openActionModal\n   * @returns {undefined}\n   */\n  openActionModal() {\n    this.setState({\n      openModal: true\n    });\n  }\n\n  /**\n   * Action save handler\n   * @method handleActionAdd\n   * @returns {undefined}\n   */\n  handleActionAdd(val) {\n    var _this$props21, _this$props21$match, _this$props21$match$p;\n    const ruleId = (_this$props21 = this.props) === null || _this$props21 === void 0 ? void 0 : (_this$props21$match = _this$props21.match) === null || _this$props21$match === void 0 ? void 0 : (_this$props21$match$p = _this$props21$match.params) === null || _this$props21$match$p === void 0 ? void 0 : _this$props21$match$p.id;\n    this.props.addAction(getBaseUrl(this.props.pathname), ruleId, val);\n    this.setState({\n      selConditionToAdd: ''\n    });\n  }\n\n  /**\n   * Remove action handler\n   * @method handleRemoveAction\n   * @returns {undefined}\n   */\n  handleRemoveAction(actionId) {\n    var _this$props22, _this$props22$match, _this$props22$match$p;\n    const ruleId = (_this$props22 = this.props) === null || _this$props22 === void 0 ? void 0 : (_this$props22$match = _this$props22.match) === null || _this$props22$match === void 0 ? void 0 : (_this$props22$match$p = _this$props22$match.params) === null || _this$props22$match$p === void 0 ? void 0 : _this$props22$match$p.id;\n    this.props.removeAction(getBaseUrl(this.props.pathname), ruleId, actionId);\n  }\n\n  /**\n   * Move action handler\n   * @method handleMoveAction\n   * @returns {undefined}\n   */\n  handleMoveAction(action, direction) {\n    var _this$props23, _this$props23$match, _this$props23$match$p;\n    const ruleId = (_this$props23 = this.props) === null || _this$props23 === void 0 ? void 0 : (_this$props23$match = _this$props23.match) === null || _this$props23$match === void 0 ? void 0 : (_this$props23$match$p = _this$props23$match.params) === null || _this$props23$match$p === void 0 ? void 0 : _this$props23$match$p.id;\n    this.props.moveRuleAction(getBaseUrl(this.props.pathname), {\n      'form.button.Move': direction === 'up' ? '_move_up' : '_move_down'\n    }, ruleId, action);\n  }\n\n  /**\n   * Move action handler\n   * @method handleMoveCondition\n   * @returns {undefined}\n   */\n  handleMoveCondition(condition, direction) {\n    var _this$props24, _this$props24$match, _this$props24$match$p;\n    const ruleId = (_this$props24 = this.props) === null || _this$props24 === void 0 ? void 0 : (_this$props24$match = _this$props24.match) === null || _this$props24$match === void 0 ? void 0 : (_this$props24$match$p = _this$props24$match.params) === null || _this$props24$match$p === void 0 ? void 0 : _this$props24$match$p.id;\n    this.props.moveRuleCondition(getBaseUrl(this.props.pathname), {\n      'form.button.Move': direction === 'up' ? '_move_up' : '_move_down'\n    }, ruleId, condition);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      item = {}\n    } = this.props.rule || {};\n    const {\n      actions = [],\n      addable_actions = [],\n      addable_conditions = [],\n      assignments = [],\n      conditions = [],\n      title = ''\n    } = item;\n    const conditions_options = addable_conditions.map(cond => {\n      return {\n        key: cond.title,\n        text: cond.title,\n        value: cond\n      };\n    });\n    const actions_options = addable_actions.map(act => {\n      return {\n        key: act.title,\n        text: act.title,\n        value: act\n      };\n    });\n    return __jsx(\"div\", {\n      id: \"page-rule-configure\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.configRule),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }\n    }), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }\n    }, __jsx(\"article\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 11\n      }\n    }, __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 13\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Configure Content Rule: {title}\",\n      defaultMessage: \"Configure Content Rule: {title}\",\n      values: {\n        title: __jsx(\"q\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 36\n          }\n        }, title)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      className: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Rules execute when a triggering event occurs. Rule actions will only be invoked if all the rule's conditions are met. You can add new actions and conditions using the buttons below.\",\n      defaultMessage: \"Rules execute when a triggering event occurs. Rule actions will only be invoked if all the rule's conditions are met. You can add new actions and conditions using the buttons below.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 15\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 17\n      }\n    }, __jsx(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 19\n      }\n    }, __jsx(Grid.Column, {\n      mobile: 16,\n      tablet: 16,\n      computer: 6,\n      largeScreen: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 21\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"If all of the following conditions are met:\",\n      defaultMessage: \"If all of the following conditions are met:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 25\n      }\n    })), conditions && conditions.length > 0 && __jsx(Card.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 25\n      }\n    }, conditions.map((cond, i) => {\n      return __jsx(Card, {\n        fluid: true,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 31\n        }\n      }, __jsx(Card.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 33\n        }\n      }, __jsx(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 35\n        }\n      }, __jsx(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 37\n        }\n      }, cond.title)), __jsx(Card.Description, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 35\n        }\n      }, cond.summary)), __jsx(Card.Content, {\n        extra: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 33\n        }\n      }, __jsx(Button, {\n        onClick: () => this.openEditCondition(cond),\n        compact: true,\n        size: \"tiny\",\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 35\n        }\n      }, \"Edit\"), __jsx(Button, {\n        onClick: () => this.handleRemoveCondition(cond.idx),\n        compact: true,\n        size: \"tiny\",\n        color: \"youtube\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 35\n        }\n      }, \"Remove\"), __jsx(Button, {\n        compact: true,\n        size: \"tiny\",\n        primary: true,\n        disabled: cond === null || cond === void 0 ? void 0 : cond.first,\n        onClick: () => this.handleMoveCondition(cond.idx, 'up'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 35\n        }\n      }, __jsx(Button.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 37\n        }\n      }, __jsx(Icon, {\n        name: upSVG,\n        size: \"10px\",\n        title: this.props.intl.formatMessage(messages.moveUp),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 39\n        }\n      }))), __jsx(Button, {\n        compact: true,\n        size: \"tiny\",\n        primary: true,\n        disabled: cond === null || cond === void 0 ? void 0 : cond.last,\n        onClick: () => this.handleMoveCondition(cond.idx, 'down'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 35\n        }\n      }, __jsx(Button.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 37\n        }\n      }, __jsx(Icon, {\n        name: downSVG,\n        size: \"10px\",\n        title: this.props.intl.formatMessage(messages.moveDown),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 39\n        }\n      })))));\n    })), __jsx(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 23\n      }\n    }, __jsx(\"h4\", {\n      style: {\n        marginTop: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Condition: \",\n      defaultMessage: \"Condition: \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 27\n      }\n    })), __jsx(Dropdown, {\n      style: {\n        margin: '5px 0'\n      },\n      placeholder: \"Select condition\",\n      fluid: true,\n      selection: true,\n      options: conditions_options,\n      value: this.state.selConditionToAdd,\n      onChange: (e, {\n        value\n      }) => this.setState({\n        selConditionToAdd: value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 25\n      }\n    }), __jsx(Button, {\n      compact: true,\n      onClick: this.openConditionModal,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Add\",\n      defaultMessage: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 27\n      }\n    })))), __jsx(Grid.Column, {\n      mobile: 16,\n      tablet: 16,\n      computer: 6,\n      largeScreen: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 21\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Perform the following actions:\",\n      defaultMessage: \"Perform the following actions:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 25\n      }\n    })), actions && actions.length > 0 && __jsx(Card.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 25\n      }\n    }, actions.map((action, i) => {\n      return __jsx(Card, {\n        fluid: true,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 31\n        }\n      }, __jsx(Card.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 33\n        }\n      }, __jsx(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 35\n        }\n      }, __jsx(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 37\n        }\n      }, action.title)), __jsx(Card.Description, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 35\n        }\n      }, action.summary)), __jsx(Card.Content, {\n        extra: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 33\n        }\n      }, __jsx(Button, {\n        onClick: () => this.openEditAction(action),\n        compact: true,\n        size: \"tiny\",\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 35\n        }\n      }, \"Edit\"), __jsx(Button, {\n        onClick: () => this.handleRemoveAction(action.idx),\n        compact: true,\n        size: \"tiny\",\n        color: \"youtube\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 35\n        }\n      }, \"Remove\"), __jsx(Button, {\n        compact: true,\n        size: \"tiny\",\n        primary: true,\n        disabled: action === null || action === void 0 ? void 0 : action.first,\n        onClick: () => this.handleMoveAction(action.idx, 'up'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 35\n        }\n      }, __jsx(Button.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 37\n        }\n      }, __jsx(Icon, {\n        name: upSVG,\n        size: \"10px\",\n        title: this.props.intl.formatMessage(messages.moveUp),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 39\n        }\n      }))), __jsx(Button, {\n        compact: true,\n        size: \"tiny\",\n        primary: true,\n        disabled: action === null || action === void 0 ? void 0 : action.last,\n        onClick: () => this.handleMoveAction(action.idx, 'down'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 35\n        }\n      }, __jsx(Button.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 37\n        }\n      }, __jsx(Icon, {\n        name: downSVG,\n        size: \"10px\",\n        title: this.props.intl.formatMessage(messages.moveDown),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 39\n        }\n      })))));\n    })), __jsx(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 23\n      }\n    }, __jsx(\"h4\", {\n      style: {\n        marginTop: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Action: \",\n      defaultMessage: \"Action: \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 27\n      }\n    })), __jsx(Dropdown, {\n      style: {\n        margin: '5px 0'\n      },\n      placeholder: \"Select action\",\n      fluid: true,\n      selection: true,\n      options: actions_options,\n      onChange: (e, {\n        value\n      }) => this.setState({\n        selActionToAdd: value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 25\n      }\n    }), __jsx(Button, {\n      compact: true,\n      onClick: () => this.openActionModal(),\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Add\",\n      defaultMessage: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 27\n      }\n    }))))), __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 19\n      }\n    }, __jsx(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 21\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Assignments\",\n      defaultMessage: \"Assignments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 25\n      }\n    })), __jsx(FormattedMessage, {\n      id: \"This rule is assigned to the following locations:\",\n      defaultMessage: \"This rule is assigned to the following locations:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 23\n      }\n    }), assignments.map((assignment, i) => __jsx(UniversalLink, {\n      key: i,\n      title: assignment.title,\n      href: getBaseUrl(assignment.url),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 25\n      }\n    }, assignment.title))))))))), this.state.selConditionToAdd && __jsx(VariableModal, {\n      open: this.state.openModal,\n      onClose: () => this.setState({\n        openModal: false,\n        selConditionToAdd: ''\n      }),\n      onOpen: () => this.setState({\n        openModal: true\n      }),\n      onSave: v => this.handleConditionAdd(v),\n      value: this.state.selConditionToAdd,\n      type: \"Condition\",\n      action: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 11\n      }\n    }), this.state.selActionToAdd && __jsx(VariableModal, {\n      open: this.state.openModal,\n      onClose: () => this.setState({\n        openModal: false,\n        selActionToAdd: ''\n      }),\n      onOpen: () => this.setState({\n        openModal: true\n      }),\n      onSave: v => this.handleActionAdd(v),\n      value: this.state.selActionToAdd,\n      type: \"Action\",\n      action: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 11\n      }\n    }), this.state.selConditionToEdit && this.state.conditionFormData && __jsx(VariableModal, {\n      open: this.state.openModal,\n      onClose: () => this.setState({\n        openModal: false,\n        selConditionToEdit: '',\n        conditionFormData: ''\n      }),\n      onOpen: () => this.setState({\n        openModal: true\n      }),\n      onSave: v => this.handleEditCondition(v),\n      value: this.state.selConditionToEdit,\n      formData: this.state.conditionFormData,\n      type: \"Condition\",\n      action: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 11\n      }\n    }), this.state.selActionToEdit && this.state.actionFormData && __jsx(VariableModal, {\n      open: this.state.openModal,\n      onClose: () => this.setState({\n        openModal: false,\n        selActionToEdit: '',\n        actionFormData: ''\n      }),\n      onOpen: () => this.setState({\n        openModal: true\n      }),\n      onSave: this.handleEditAction,\n      value: this.state.selActionToEdit,\n      formData: this.state.actionFormData,\n      type: \"Action\",\n      action: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 11\n      }\n    }), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(Link, {\n        className: \"item\",\n        to: \"#\",\n        onClick: () => this.onCancel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n_defineProperty(ConfigureRule, \"propTypes\", {\n  getControlPanelRule: PropTypes.func.isRequired,\n  removeCondition: PropTypes.func.isRequired,\n  addCondition: PropTypes.func.isRequired,\n  removeAction: PropTypes.func.isRequired,\n  addAction: PropTypes.func.isRequired,\n  moveRuleCondition: PropTypes.func.isRequired,\n  moveRuleAction: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  pathname: props.location.pathname,\n  rule: state.controlpanelrule\n}), {\n  getControlPanelRule,\n  removeCondition,\n  addCondition,\n  editCondition,\n  getCondition,\n  getAction,\n  removeAction,\n  addAction,\n  editAction,\n  moveRuleCondition,\n  moveRuleAction\n}))(ConfigureRule);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","getBaseUrl","getParentUrl","Helmet","Portal","Button","Card","Container","Dropdown","Grid","Segment","FormattedMessage","defineMessages","injectIntl","Icon","Toolbar","UniversalLink","getControlPanelRule","removeCondition","addCondition","editCondition","removeAction","addAction","editAction","getCondition","getAction","moveRuleCondition","moveRuleAction","toast","Toast","backSVG","upSVG","downSVG","VariableModal","messages","back","configRule","success","deleteCondition","deleteAction","move","moveUp","moveDown","ConfigureRule","constructor","props","openConditionModal","bind","openActionModal","handleConditionAdd","handleActionAdd","openEditCondition","openEditAction","handleEditCondition","handleEditAction","state","isClient","openModal","selConditionToAdd","selActionToAdd","selConditionToEdit","selActionToEdit","conditionFormData","actionFormData","componentDidMount","setState","pathname","match","params","id","componentDidUpdate","prevProps","prevState","idx","rule","condition","action","UNSAFE_componentWillReceiveProps","nextProps","loading","loaded","intl","formatMessage","deletecondition","editcondition","editaction","addcondition","deleteaction","addaction","onCancel","history","push","handleRemoveCondition","conditionId","ruleId","val","cond_id","action_id","handleRemoveAction","actionId","handleMoveAction","direction","handleMoveCondition","render","item","actions","addable_actions","addable_conditions","assignments","conditions","title","conditions_options","map","cond","key","text","value","actions_options","act","length","i","summary","first","last","marginTop","margin","e","assignment","url","v","document","getElementById","func","isRequired","location","controlpanelrule"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Rules/ConfigureRule.jsx"],"sourcesContent":["/**\n * Configure content rule component.\n * @module components/manage/Controlpanels/Rules/ConfigureRule\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getBaseUrl, getParentUrl, Helmet } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport {\n  Button,\n  Card,\n  Container,\n  Dropdown,\n  Grid,\n  Segment,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { Icon, Toolbar, UniversalLink } from '@plone/volto/components';\nimport {\n  getControlPanelRule,\n  removeCondition,\n  addCondition,\n  editCondition,\n  removeAction,\n  addAction,\n  editAction,\n  getCondition,\n  getAction,\n  moveRuleCondition,\n  moveRuleAction,\n} from '@plone/volto/actions';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\n\nimport backSVG from '@plone/volto/icons/back.svg';\nimport upSVG from '@plone/volto/icons/up.svg';\nimport downSVG from '@plone/volto/icons/down.svg';\nimport VariableModal from './components/VariableModal';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  configRule: {\n    id: 'Configure content rule',\n    defaultMessage: 'Configure content rule',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  deleteCondition: {\n    id: 'Delete condition',\n    defaultMessage: 'Condition deleted',\n  },\n  addCondition: {\n    id: 'Add condition',\n    defaultMessage: 'Condition added',\n  },\n  deleteAction: {\n    id: 'Delete action',\n    defaultMessage: 'Action deleted',\n  },\n  addAction: {\n    id: 'Add action',\n    defaultMessage: 'Action added',\n  },\n  editAction: {\n    id: 'Action changed',\n    defaultMessage: 'Action changed',\n  },\n  editCondition: {\n    id: 'Condition changed',\n    defaultMessage: 'Condition changed',\n  },\n  move: {\n    id: 'Position changed',\n    defaultMessage: 'Position changed',\n  },\n  moveUp: {\n    id: 'Move up',\n    defaultMessage: 'Move up',\n  },\n  moveDown: {\n    id: 'Move down',\n    defaultMessage: 'Move down',\n  },\n});\n\n/**\n * ConfigureRule class.\n * @class ConfigureRule\n * @extends Component\n */\nclass ConfigureRule extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getControlPanelRule: PropTypes.func.isRequired,\n    removeCondition: PropTypes.func.isRequired,\n    addCondition: PropTypes.func.isRequired,\n    removeAction: PropTypes.func.isRequired,\n    addAction: PropTypes.func.isRequired,\n    moveRuleCondition: PropTypes.func.isRequired,\n    moveRuleAction: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  constructor(props) {\n    super(props);\n    this.openConditionModal = this.openConditionModal.bind(this);\n    this.openActionModal = this.openActionModal.bind(this);\n    this.handleConditionAdd = this.handleConditionAdd.bind(this);\n    this.handleActionAdd = this.handleActionAdd.bind(this);\n    this.openEditCondition = this.openEditCondition.bind(this);\n    this.openEditAction = this.openEditAction.bind(this);\n    this.handleEditCondition = this.handleEditCondition.bind(this);\n    this.handleEditAction = this.handleEditAction.bind(this);\n\n    this.state = {\n      isClient: false,\n      openModal: false,\n      selConditionToAdd: '',\n      selActionToAdd: '',\n      selConditionToEdit: '',\n      selActionToEdit: '',\n      conditionFormData: '',\n      actionFormData: '',\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({ isClient: true });\n    this.props.getControlPanelRule(\n      getBaseUrl(this.props.pathname),\n      this.props?.match?.params?.id,\n    );\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.state.selConditionToEdit &&\n      prevState.selConditionToEdit !== this.state.selConditionToEdit\n    ) {\n      this.props.getCondition(\n        getBaseUrl(this.props.pathname),\n        this.props?.match?.params?.id,\n        this.state.selConditionToEdit.idx,\n      );\n    }\n    if (\n      this.props?.rule?.condition &&\n      this.props?.rule?.condition !== prevProps?.rule.condition\n    ) {\n      const conditionFormData = this.props?.rule?.condition;\n      this.setState({ conditionFormData });\n    }\n    if (\n      this.state.selActionToEdit &&\n      prevState.selActionToEdit !== this.state.selActionToEdit\n    ) {\n      this.props.getAction(\n        getBaseUrl(this.props.pathname),\n        this.props?.match?.params?.id,\n        this.state.selActionToEdit.idx,\n      );\n    }\n    if (\n      this.props?.rule?.action &&\n      this.props?.rule?.action !== prevProps?.rule.action\n    ) {\n      const actionFormData = this.props?.rule?.action;\n      this.setState({ actionFormData });\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.rule.move.loading && nextProps.rule.move.loaded) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.move)}\n        />,\n      );\n      this.props.getControlPanelRule(\n        getBaseUrl(this.props.pathname),\n        this.props?.match?.params?.id,\n      );\n    }\n    if (\n      this.props.rule.deletecondition.loading &&\n      nextProps.rule.deletecondition.loaded\n    ) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.deleteCondition)}\n        />,\n      );\n      this.props.getControlPanelRule(\n        getBaseUrl(this.props.pathname),\n        this.props?.match?.params?.id,\n      );\n    }\n    if (\n      this.props.rule.editcondition.loading &&\n      nextProps.rule.editcondition.loaded\n    ) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.editCondition)}\n        />,\n      );\n      this.props.getControlPanelRule(\n        getBaseUrl(this.props.pathname),\n        this.props?.match?.params?.id,\n      );\n    }\n    if (\n      this.props.rule.editaction.loading &&\n      nextProps.rule.editaction.loaded\n    ) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.editAction)}\n        />,\n      );\n      this.props.getControlPanelRule(\n        getBaseUrl(this.props.pathname),\n        this.props?.match?.params?.id,\n      );\n    }\n    if (\n      this.props.rule.addcondition.loading &&\n      nextProps.rule.addcondition.loaded\n    ) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.addCondition)}\n        />,\n      );\n      this.props.getControlPanelRule(\n        getBaseUrl(this.props.pathname),\n        this.props?.match?.params?.id,\n      );\n    }\n    if (\n      this.props.rule.deleteaction.loading &&\n      nextProps.rule.deleteaction.loaded\n    ) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.deleteAction)}\n        />,\n      );\n      this.props.getControlPanelRule(\n        getBaseUrl(this.props.pathname),\n        this.props?.match?.params?.id,\n      );\n    }\n    if (this.props.rule.addaction.loading && nextProps.rule.addaction.loaded) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.addAction)}\n        />,\n      );\n      this.props.getControlPanelRule(\n        getBaseUrl(this.props.pathname),\n        this.props?.match?.params?.id,\n      );\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(getParentUrl(this.props.pathname)));\n  }\n\n  /**\n   * Remove condition handler\n   * @method handleRemoveCondition\n   * @returns {undefined}\n   */\n  handleRemoveCondition(conditionId) {\n    const ruleId = this.props?.match?.params?.id;\n    this.props.removeCondition(\n      getBaseUrl(this.props.pathname),\n      ruleId,\n      conditionId,\n    );\n  }\n\n  /**\n   * Edit condition handler\n   * @method handleEditCondition\n   * @returns {undefined}\n   */\n  handleEditCondition(val) {\n    const ruleId = this.props?.match?.params?.id;\n    if (this.state.selConditionToEdit) {\n      this.props.editCondition(\n        getBaseUrl(this.props.pathname),\n        ruleId,\n        val,\n        this.state.selConditionToEdit.idx,\n      );\n    }\n  }\n\n  /**\n   * Edit action handler\n   * @method handleEditAction\n   * @returns {undefined}\n   */\n  handleEditAction(val) {\n    const ruleId = this.props?.match?.params?.id;\n    if (this.state.selActionToEdit) {\n      this.props.editAction(\n        getBaseUrl(this.props.pathname),\n        ruleId,\n        val,\n        this.state.selActionToEdit.idx,\n      );\n    }\n  }\n\n  /**\n   * open modal edit condition handler\n   * @method openEditCondition\n   * @returns {undefined}\n   */\n  openEditCondition(cond_id) {\n    this.setState({\n      selConditionToEdit: cond_id,\n      openModal: true,\n      selActionToEdit: '',\n    });\n  }\n\n  /**\n   * open modal edit action handler\n   * @method openEditAction\n   * @returns {undefined}\n   */\n  openEditAction(action_id) {\n    this.setState({\n      selActionToEdit: action_id,\n      openModal: true,\n      selConditionToEdit: '',\n    });\n  }\n\n  /**\n   * Add condition handler\n   * @method openConditionModal\n   * @returns {undefined}\n   */\n  openConditionModal() {\n    if (this.state.selConditionToAdd) {\n      this.setState({ openModal: true });\n    }\n  }\n\n  /**\n   * Condition save handler\n   * @method handleConditionAdd\n   * @returns {undefined}\n   */\n  handleConditionAdd(val) {\n    const ruleId = this.props?.match?.params?.id;\n    this.props.addCondition(getBaseUrl(this.props.pathname), ruleId, val);\n    this.setState({ selConditionToAdd: '' });\n  }\n\n  /**\n   * Add action handler\n   * @method openActionModal\n   * @returns {undefined}\n   */\n  openActionModal() {\n    this.setState({ openModal: true });\n  }\n\n  /**\n   * Action save handler\n   * @method handleActionAdd\n   * @returns {undefined}\n   */\n  handleActionAdd(val) {\n    const ruleId = this.props?.match?.params?.id;\n    this.props.addAction(getBaseUrl(this.props.pathname), ruleId, val);\n    this.setState({ selConditionToAdd: '' });\n  }\n\n  /**\n   * Remove action handler\n   * @method handleRemoveAction\n   * @returns {undefined}\n   */\n  handleRemoveAction(actionId) {\n    const ruleId = this.props?.match?.params?.id;\n    this.props.removeAction(getBaseUrl(this.props.pathname), ruleId, actionId);\n  }\n\n  /**\n   * Move action handler\n   * @method handleMoveAction\n   * @returns {undefined}\n   */\n  handleMoveAction(action, direction) {\n    const ruleId = this.props?.match?.params?.id;\n    this.props.moveRuleAction(\n      getBaseUrl(this.props.pathname),\n      {\n        'form.button.Move': direction === 'up' ? '_move_up' : '_move_down',\n      },\n      ruleId,\n      action,\n    );\n  }\n\n  /**\n   * Move action handler\n   * @method handleMoveCondition\n   * @returns {undefined}\n   */\n  handleMoveCondition(condition, direction) {\n    const ruleId = this.props?.match?.params?.id;\n    this.props.moveRuleCondition(\n      getBaseUrl(this.props.pathname),\n      {\n        'form.button.Move': direction === 'up' ? '_move_up' : '_move_down',\n      },\n      ruleId,\n      condition,\n    );\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { item = {} } = this.props.rule || {};\n    const {\n      actions = [],\n      addable_actions = [],\n      addable_conditions = [],\n      assignments = [],\n      conditions = [],\n      title = '',\n    } = item;\n    const conditions_options = addable_conditions.map((cond) => {\n      return { key: cond.title, text: cond.title, value: cond };\n    });\n\n    const actions_options = addable_actions.map((act) => {\n      return { key: act.title, text: act.title, value: act };\n    });\n    return (\n      <div id=\"page-rule-configure\">\n        <Helmet title={this.props.intl.formatMessage(messages.configRule)} />\n        <Container>\n          <article id=\"content\">\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage\n                  id=\"Configure Content Rule: {title}\"\n                  defaultMessage=\"Configure Content Rule: {title}\"\n                  values={{ title: <q>{title}</q> }}\n                />\n              </Segment>\n              <Segment className=\"secondary\">\n                <FormattedMessage\n                  id=\"Rules execute when a triggering event occurs. Rule actions will only be invoked if all the rule's conditions are met. You can add new actions and conditions using the buttons below.\"\n                  defaultMessage=\"Rules execute when a triggering event occurs. Rule actions will only be invoked if all the rule's conditions are met. You can add new actions and conditions using the buttons below.\"\n                />\n              </Segment>\n              <Segment>\n                <Grid>\n                  <Grid.Row>\n                    <Grid.Column\n                      mobile={16}\n                      tablet={16}\n                      computer={6}\n                      largeScreen={6}\n                    >\n                      <h4>\n                        <FormattedMessage\n                          id=\"If all of the following conditions are met:\"\n                          defaultMessage=\"If all of the following conditions are met:\"\n                        />\n                      </h4>\n\n                      {conditions && conditions.length > 0 && (\n                        <Card.Group>\n                          {conditions.map((cond, i) => {\n                            return (\n                              <Card fluid key={i}>\n                                <Card.Content>\n                                  <Card.Header>\n                                    <h4>{cond.title}</h4>\n                                  </Card.Header>\n                                  <Card.Description>\n                                    {cond.summary}\n                                  </Card.Description>\n                                </Card.Content>\n                                <Card.Content extra>\n                                  <Button\n                                    onClick={() => this.openEditCondition(cond)}\n                                    compact\n                                    size=\"tiny\"\n                                    primary\n                                  >\n                                    Edit\n                                  </Button>\n                                  <Button\n                                    onClick={() =>\n                                      this.handleRemoveCondition(cond.idx)\n                                    }\n                                    compact\n                                    size=\"tiny\"\n                                    color=\"youtube\"\n                                  >\n                                    Remove\n                                  </Button>\n                                  <Button\n                                    compact\n                                    size=\"tiny\"\n                                    primary\n                                    disabled={cond?.first}\n                                    onClick={() =>\n                                      this.handleMoveCondition(cond.idx, 'up')\n                                    }\n                                  >\n                                    <Button.Content>\n                                      <Icon\n                                        name={upSVG}\n                                        size=\"10px\"\n                                        title={this.props.intl.formatMessage(\n                                          messages.moveUp,\n                                        )}\n                                      />\n                                    </Button.Content>\n                                  </Button>\n                                  <Button\n                                    compact\n                                    size=\"tiny\"\n                                    primary\n                                    disabled={cond?.last}\n                                    onClick={() =>\n                                      this.handleMoveCondition(cond.idx, 'down')\n                                    }\n                                  >\n                                    <Button.Content>\n                                      <Icon\n                                        name={downSVG}\n                                        size=\"10px\"\n                                        title={this.props.intl.formatMessage(\n                                          messages.moveDown,\n                                        )}\n                                      />\n                                    </Button.Content>\n                                  </Button>\n                                </Card.Content>\n                              </Card>\n                            );\n                          })}\n                        </Card.Group>\n                      )}\n                      <Grid.Row>\n                        <h4 style={{ marginTop: '15px' }}>\n                          <FormattedMessage\n                            id=\"Condition: \"\n                            defaultMessage=\"Condition: \"\n                          />\n                        </h4>\n                        <Dropdown\n                          style={{ margin: '5px 0' }}\n                          placeholder=\"Select condition\"\n                          fluid\n                          selection\n                          options={conditions_options}\n                          value={this.state.selConditionToAdd}\n                          onChange={(e, { value }) =>\n                            this.setState({ selConditionToAdd: value })\n                          }\n                        />\n                        <Button\n                          compact\n                          onClick={this.openConditionModal}\n                          primary\n                        >\n                          <FormattedMessage id=\"Add\" defaultMessage=\"Add\" />\n                        </Button>\n                      </Grid.Row>\n                    </Grid.Column>\n                    <Grid.Column\n                      mobile={16}\n                      tablet={16}\n                      computer={6}\n                      largeScreen={6}\n                    >\n                      <h4>\n                        <FormattedMessage\n                          id=\"Perform the following actions:\"\n                          defaultMessage=\"Perform the following actions:\"\n                        />\n                      </h4>\n\n                      {actions && actions.length > 0 && (\n                        <Card.Group>\n                          {actions.map((action, i) => {\n                            return (\n                              <Card fluid key={i}>\n                                <Card.Content>\n                                  <Card.Header>\n                                    <h4>{action.title}</h4>\n                                  </Card.Header>\n                                  <Card.Description>\n                                    {action.summary}\n                                  </Card.Description>\n                                </Card.Content>\n                                <Card.Content extra>\n                                  <Button\n                                    onClick={() => this.openEditAction(action)}\n                                    compact\n                                    size=\"tiny\"\n                                    primary\n                                  >\n                                    Edit\n                                  </Button>\n                                  <Button\n                                    onClick={() =>\n                                      this.handleRemoveAction(action.idx)\n                                    }\n                                    compact\n                                    size=\"tiny\"\n                                    color=\"youtube\"\n                                  >\n                                    Remove\n                                  </Button>\n                                  <Button\n                                    compact\n                                    size=\"tiny\"\n                                    primary\n                                    disabled={action?.first}\n                                    onClick={() =>\n                                      this.handleMoveAction(action.idx, 'up')\n                                    }\n                                  >\n                                    <Button.Content>\n                                      <Icon\n                                        name={upSVG}\n                                        size=\"10px\"\n                                        title={this.props.intl.formatMessage(\n                                          messages.moveUp,\n                                        )}\n                                      />\n                                    </Button.Content>\n                                  </Button>\n                                  <Button\n                                    compact\n                                    size=\"tiny\"\n                                    primary\n                                    disabled={action?.last}\n                                    onClick={() =>\n                                      this.handleMoveAction(action.idx, 'down')\n                                    }\n                                  >\n                                    <Button.Content>\n                                      <Icon\n                                        name={downSVG}\n                                        size=\"10px\"\n                                        title={this.props.intl.formatMessage(\n                                          messages.moveDown,\n                                        )}\n                                      />\n                                    </Button.Content>\n                                  </Button>\n                                </Card.Content>\n                              </Card>\n                            );\n                          })}\n                        </Card.Group>\n                      )}\n\n                      <Grid.Row>\n                        <h4 style={{ marginTop: '15px' }}>\n                          <FormattedMessage\n                            id=\"Action: \"\n                            defaultMessage=\"Action: \"\n                          />\n                        </h4>\n                        <Dropdown\n                          style={{ margin: '5px 0' }}\n                          placeholder=\"Select action\"\n                          fluid\n                          selection\n                          options={actions_options}\n                          onChange={(e, { value }) =>\n                            this.setState({ selActionToAdd: value })\n                          }\n                        />\n                        <Button\n                          compact\n                          onClick={() => this.openActionModal()}\n                          primary\n                        >\n                          <FormattedMessage id=\"Add\" defaultMessage=\"Add\" />\n                        </Button>\n                      </Grid.Row>\n                    </Grid.Column>\n                  </Grid.Row>\n                  <Grid.Row stretched>\n                    <Grid.Column>\n                      <h4>\n                        <FormattedMessage\n                          id=\"Assignments\"\n                          defaultMessage=\"Assignments\"\n                        />\n                      </h4>\n                      <FormattedMessage\n                        id=\"This rule is assigned to the following locations:\"\n                        defaultMessage=\"This rule is assigned to the following locations:\"\n                      />\n                      {assignments.map((assignment, i) => (\n                        <UniversalLink\n                          key={i}\n                          title={assignment.title}\n                          href={getBaseUrl(assignment.url)}\n                        >\n                          {assignment.title}\n                        </UniversalLink>\n                      ))}\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Segment>\n            </Segment.Group>\n          </article>\n        </Container>\n        {this.state.selConditionToAdd && (\n          <VariableModal\n            open={this.state.openModal}\n            onClose={() =>\n              this.setState({ openModal: false, selConditionToAdd: '' })\n            }\n            onOpen={() => this.setState({ openModal: true })}\n            onSave={(v) => this.handleConditionAdd(v)}\n            value={this.state.selConditionToAdd}\n            type=\"Condition\"\n            action=\"add\"\n          />\n        )}\n        {this.state.selActionToAdd && (\n          <VariableModal\n            open={this.state.openModal}\n            onClose={() =>\n              this.setState({ openModal: false, selActionToAdd: '' })\n            }\n            onOpen={() => this.setState({ openModal: true })}\n            onSave={(v) => this.handleActionAdd(v)}\n            value={this.state.selActionToAdd}\n            type=\"Action\"\n            action=\"add\"\n          />\n        )}\n        {this.state.selConditionToEdit && this.state.conditionFormData && (\n          <VariableModal\n            open={this.state.openModal}\n            onClose={() =>\n              this.setState({\n                openModal: false,\n                selConditionToEdit: '',\n                conditionFormData: '',\n              })\n            }\n            onOpen={() => this.setState({ openModal: true })}\n            onSave={(v) => this.handleEditCondition(v)}\n            value={this.state.selConditionToEdit}\n            formData={this.state.conditionFormData}\n            type=\"Condition\"\n            action=\"edit\"\n          />\n        )}\n        {this.state.selActionToEdit && this.state.actionFormData && (\n          <VariableModal\n            open={this.state.openModal}\n            onClose={() =>\n              this.setState({\n                openModal: false,\n                selActionToEdit: '',\n                actionFormData: '',\n              })\n            }\n            onOpen={() => this.setState({ openModal: true })}\n            onSave={this.handleEditAction}\n            value={this.state.selActionToEdit}\n            formData={this.state.actionFormData}\n            type=\"Action\"\n            action=\"edit\"\n          />\n        )}\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link className=\"item\" to=\"#\" onClick={() => this.onCancel()}>\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      pathname: props.location.pathname,\n      rule: state.controlpanelrule,\n    }),\n    {\n      getControlPanelRule,\n      removeCondition,\n      addCondition,\n      editCondition,\n      getCondition,\n      getAction,\n      removeAction,\n      addAction,\n      editAction,\n      moveRuleCondition,\n      moveRuleAction,\n    },\n  ),\n)(ConfigureRule);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"Configure content rule","defaultMessage":"Configure content rule"},{"id":"Success","defaultMessage":"Success"},{"id":"Delete condition","defaultMessage":"Condition deleted"},{"id":"Add condition","defaultMessage":"Condition added"},{"id":"Delete action","defaultMessage":"Action deleted"},{"id":"Add action","defaultMessage":"Action added"},{"id":"Action changed","defaultMessage":"Action changed"},{"id":"Condition changed","defaultMessage":"Condition changed"},{"id":"Position changed","defaultMessage":"Position changed"},{"id":"Move up","defaultMessage":"Move up"},{"id":"Move down","defaultMessage":"Move down"},{"id":"Configure Content Rule: {title}","defaultMessage":"Configure Content Rule: {title}"},{"id":"Rules execute when a triggering event occurs. Rule actions will only be invoked if all the rule's conditions are met. You can add new actions and conditions using the buttons below.","defaultMessage":"Rules execute when a triggering event occurs. Rule actions will only be invoked if all the rule's conditions are met. You can add new actions and conditions using the buttons below."},{"id":"If all of the following conditions are met:","defaultMessage":"If all of the following conditions are met:"},{"id":"Condition: ","defaultMessage":"Condition: "},{"id":"Add","defaultMessage":"Add"},{"id":"Perform the following actions:","defaultMessage":"Perform the following actions:"},{"id":"Action: ","defaultMessage":"Action: "},{"id":"Assignments","defaultMessage":"Assignments"},{"id":"This rule is assigned to the following locations:","defaultMessage":"This rule is assigned to the following locations:"}]}},"sourceType":"module","externalDependencies":[]}