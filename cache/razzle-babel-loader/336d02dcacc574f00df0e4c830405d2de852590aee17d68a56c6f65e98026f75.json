{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/manage/Blocks/DottedTableChart/Edit.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { compose } from 'redux';\nimport { SidebarPortal } from '@plone/volto/components';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport DottedTableChartView from './View';\nimport { DottedTableChartSchema } from './schema';\nimport { DEFAULT_MAX_DOT_COUNT } from './constants';\nvar DottedTableChartEdit = /*#__PURE__*/function (_React$Component) {\n  _inherits(DottedTableChartEdit, _React$Component);\n  var _super = _createSuper(DottedTableChartEdit);\n  function DottedTableChartEdit() {\n    var _this;\n    _classCallCheck(this, DottedTableChartEdit);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"getSchema\", function () {\n      var provider_data = _this.props.provider_data || {};\n      var schema = DottedTableChartSchema();\n      var choices = Object.keys(provider_data).sort().map(function (n) {\n        return [n, n];\n      });\n      ['column_data', 'row_data', 'size_data'].forEach(function (n) {\n        return schema.properties[n].choices = choices;\n      });\n      var row_data = _this.props.data.row_data;\n      var possible_rows = Array.from(new Set(provider_data === null || provider_data === void 0 ? void 0 : provider_data[row_data])).sort();\n      schema.properties.row_colors.options = possible_rows.map(function (r) {\n        return {\n          id: r,\n          title: r\n        };\n      });\n      if (!_this.props.data.max_dot_count) {\n        _this.props.data.max_dot_count = DEFAULT_MAX_DOT_COUNT;\n      }\n      return schema;\n    });\n    return _this;\n  }\n  _createClass(DottedTableChartEdit, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        block = _this$props.block,\n        data = _this$props.data,\n        selected = _this$props.selected,\n        onChangeBlock = _this$props.onChangeBlock;\n      var schema = this.getSchema();\n      return __jsx(React.Fragment, null, __jsx(DottedTableChartView, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      })), __jsx(SidebarPortal, {\n        selected: selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, __jsx(InlineForm, {\n        schema: schema,\n        title: schema.title,\n        onChangeField: function onChangeField(id, value) {\n          onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, _defineProperty({}, id, value)));\n        },\n        formData: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n  return DottedTableChartEdit;\n}(React.Component);\nexport default compose(connectToProviderData(function (props) {\n  return {\n    provider_url: props.data.url || props.data.provider_url\n  };\n}))(DottedTableChartEdit);","map":{"version":3,"names":["React","compose","SidebarPortal","InlineForm","connectToProviderData","DottedTableChartView","DottedTableChartSchema","DEFAULT_MAX_DOT_COUNT","DottedTableChartEdit","provider_data","props","schema","choices","Object","keys","sort","map","n","forEach","properties","row_data","data","possible_rows","Array","from","Set","row_colors","options","r","id","title","max_dot_count","block","selected","onChangeBlock","getSchema","value","Component","provider_url","url"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/manage/Blocks/DottedTableChart/Edit.jsx"],"sourcesContent":["import React from 'react';\nimport { compose } from 'redux';\nimport { SidebarPortal } from '@plone/volto/components';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport DottedTableChartView from './View';\nimport { DottedTableChartSchema } from './schema';\nimport { DEFAULT_MAX_DOT_COUNT } from './constants';\n\nclass DottedTableChartEdit extends React.Component {\n  getSchema = () => {\n    const provider_data = this.props.provider_data || {};\n    const schema = DottedTableChartSchema();\n\n    const choices = Object.keys(provider_data)\n      .sort()\n      .map((n) => [n, n]);\n\n    ['column_data', 'row_data', 'size_data'].forEach(\n      (n) => (schema.properties[n].choices = choices),\n    );\n\n    const { row_data } = this.props.data;\n    const possible_rows = Array.from(new Set(provider_data?.[row_data])).sort();\n\n    schema.properties.row_colors.options = possible_rows.map((r) => ({\n      id: r,\n      title: r,\n    }));\n\n    if (!this.props.data.max_dot_count) {\n      this.props.data.max_dot_count = DEFAULT_MAX_DOT_COUNT;\n    }\n\n    return schema;\n  };\n\n  render() {\n    const { block, data, selected, onChangeBlock } = this.props;\n\n    const schema = this.getSchema();\n\n    return (\n      <>\n        <DottedTableChartView {...this.props} />\n\n        <SidebarPortal selected={selected}>\n          <InlineForm\n            schema={schema}\n            title={schema.title}\n            onChangeField={(id, value) => {\n              onChangeBlock(block, {\n                ...data,\n                [id]: value,\n              });\n            }}\n            formData={data}\n          />\n        </SidebarPortal>\n      </>\n    );\n  }\n}\n\nexport default compose(\n  connectToProviderData((props) => ({\n    provider_url: props.data.url || props.data.provider_url,\n  })),\n)(DottedTableChartEdit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}