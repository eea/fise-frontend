{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/customizations/volto/components/manage/Blocks/Block/BlocksForm.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport EditBlock from './Edit';\nimport { DragDropList } from '@plone/volto/components';\nimport { getBlocks } from '@plone/volto/helpers';\nimport { addBlock, insertBlock, changeBlock, deleteBlock, moveBlock, mutateBlock, nextBlockId, previousBlockId } from '@plone/volto/helpers';\nimport EditBlockWrapper from './EditBlockWrapper';\nimport { setSidebarTab } from '@plone/volto/actions';\nimport { useDispatch } from 'react-redux';\nimport { useDetectClickOutside } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nvar BlocksForm = function BlocksForm(props) {\n  _s();\n  var pathname = props.pathname,\n    onChangeField = props.onChangeField,\n    properties = props.properties,\n    onChangeFormData = props.onChangeFormData,\n    selectedBlock = props.selectedBlock,\n    multiSelected = props.multiSelected,\n    onSelectBlock = props.onSelectBlock,\n    allowedBlocks = props.allowedBlocks,\n    showRestricted = props.showRestricted,\n    title = props.title,\n    description = props.description,\n    metadata = props.metadata,\n    manage = props.manage,\n    children = props.children,\n    _props$isMainForm = props.isMainForm,\n    isMainForm = _props$isMainForm === void 0 ? true : _props$isMainForm,\n    _props$blocksConfig = props.blocksConfig,\n    blocksConfig = _props$blocksConfig === void 0 ? config.blocks.blocksConfig : _props$blocksConfig,\n    _props$editable = props.editable,\n    editable = _props$editable === void 0 ? true : _props$editable;\n  var blockList = getBlocks(properties);\n  var dispatch = useDispatch();\n  var ClickOutsideListener = function ClickOutsideListener() {\n    onSelectBlock(null);\n    dispatch(setSidebarTab(0));\n  };\n  var ref = useDetectClickOutside({\n    onTriggered: ClickOutsideListener,\n    triggerKeys: ['Escape'],\n    // Disabled feature for now https://github.com/plone/volto/pull/2389#issuecomment-830027413\n    disableClick: true,\n    disableKeys: !isMainForm\n  });\n  var handleKeyDown = function handleKeyDown(e, index, block, node) {\n    var _ref = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {},\n      _ref$disableEnter = _ref.disableEnter,\n      disableEnter = _ref$disableEnter === void 0 ? false : _ref$disableEnter,\n      _ref$disableArrowUp = _ref.disableArrowUp,\n      disableArrowUp = _ref$disableArrowUp === void 0 ? false : _ref$disableArrowUp,\n      _ref$disableArrowDown = _ref.disableArrowDown,\n      disableArrowDown = _ref$disableArrowDown === void 0 ? false : _ref$disableArrowDown;\n    var isMultipleSelection = e.shiftKey;\n    if (e.key === 'ArrowUp' && !disableArrowUp) {\n      onFocusPreviousBlock(block, node, isMultipleSelection);\n      e.preventDefault();\n    }\n    if (e.key === 'ArrowDown' && !disableArrowDown) {\n      onFocusNextBlock(block, node, isMultipleSelection);\n      e.preventDefault();\n    }\n    if (e.key === 'Enter' && !disableEnter) {\n      onAddBlock(config.settings.defaultBlockType, index + 1);\n      e.preventDefault();\n    }\n  };\n  var onFocusPreviousBlock = function onFocusPreviousBlock(currentBlock, blockNode, isMultipleSelection) {\n    var prev = previousBlockId(properties, currentBlock);\n    if (prev === null) return;\n    blockNode.blur();\n    onSelectBlock(prev, isMultipleSelection);\n  };\n  var onFocusNextBlock = function onFocusNextBlock(currentBlock, blockNode, isMultipleSelection) {\n    var next = nextBlockId(properties, currentBlock);\n    if (next === null) return;\n    blockNode.blur();\n    onSelectBlock(next, isMultipleSelection);\n  };\n  var onMutateBlock = function onMutateBlock(id, value) {\n    var newFormData = mutateBlock(properties, id, value);\n    onChangeFormData(newFormData);\n  };\n  var onInsertBlock = function onInsertBlock(id, value) {\n    var _insertBlock = insertBlock(properties, id, value),\n      _insertBlock2 = _slicedToArray(_insertBlock, 2),\n      newId = _insertBlock2[0],\n      newFormData = _insertBlock2[1];\n    onChangeFormData(newFormData);\n    return newId;\n  };\n  var onAddBlock = function onAddBlock(type, index) {\n    if (editable) {\n      var _addBlock = addBlock(properties, type, index),\n        _addBlock2 = _slicedToArray(_addBlock, 2),\n        id = _addBlock2[0],\n        newFormData = _addBlock2[1];\n      onChangeFormData(newFormData);\n      return id;\n    }\n  };\n  var onChangeBlock = function onChangeBlock(id, value) {\n    var newFormData = changeBlock(properties, id, value);\n    onChangeFormData(newFormData);\n  };\n  var onDeleteBlock = function onDeleteBlock(id, selectPrev) {\n    var previous = previousBlockId(properties, id);\n    var newFormData = deleteBlock(properties, id);\n    onChangeFormData(newFormData);\n    onSelectBlock(selectPrev ? previous : null);\n  };\n  var onMoveBlock = function onMoveBlock(dragIndex, hoverIndex) {\n    var newFormData = moveBlock(properties, dragIndex, hoverIndex);\n    onChangeFormData(newFormData);\n  };\n  var defaultBlockWrapper = function defaultBlockWrapper(_ref2, editBlock, blockProps) {\n    var draginfo = _ref2.draginfo;\n    return __jsx(EditBlockWrapper, {\n      draginfo: draginfo,\n      blockProps: blockProps,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }\n    }, editBlock);\n  };\n  var editBlockWrapper = children || defaultBlockWrapper;\n  return __jsx(\"div\", {\n    className: \"blocks-form\",\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, __jsx(\"fieldset\", {\n    className: \"invisible\",\n    disabled: !editable,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, __jsx(DragDropList, {\n    childList: blockList,\n    onMoveItem: function onMoveItem(result) {\n      var source = result.source,\n        destination = result.destination;\n      if (!destination) {\n        return;\n      }\n      var newFormData = moveBlock(properties, source.index, destination.index);\n      onChangeFormData(newFormData);\n      return true;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, function (dragProps) {\n    var child = dragProps.child,\n      childId = dragProps.childId,\n      index = dragProps.index;\n    var blockProps = {\n      allowedBlocks: allowedBlocks,\n      showRestricted: showRestricted,\n      block: childId,\n      data: child,\n      handleKeyDown: handleKeyDown,\n      id: childId,\n      formTitle: title,\n      formDescription: description,\n      index: index,\n      manage: manage,\n      onAddBlock: onAddBlock,\n      onInsertBlock: onInsertBlock,\n      onChangeBlock: onChangeBlock,\n      onChangeField: onChangeField,\n      onDeleteBlock: onDeleteBlock,\n      onFocusNextBlock: onFocusNextBlock,\n      onFocusPreviousBlock: onFocusPreviousBlock,\n      onMoveBlock: onMoveBlock,\n      onMutateBlock: onMutateBlock,\n      onSelectBlock: onSelectBlock,\n      pathname: pathname,\n      metadata: metadata,\n      properties: properties,\n      blocksConfig: blocksConfig,\n      selected: selectedBlock === childId,\n      multiSelected: multiSelected === null || multiSelected === void 0 ? void 0 : multiSelected.includes(childId),\n      type: child['@type'],\n      editable: editable\n    };\n    return editBlockWrapper(dragProps, __jsx(EditBlock, _extends({\n      key: childId\n    }, blockProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 15\n      }\n    })), blockProps);\n  })));\n};\n_s(BlocksForm, \"rKF3CsQEmWjVMjYKCYJFSEm65gM=\", false, function () {\n  return [useDispatch, useDetectClickOutside];\n});\n_c = BlocksForm;\nexport default BlocksForm;\nvar _c;\n$RefreshReg$(_c, \"BlocksForm\");","map":{"version":3,"names":["React","EditBlock","DragDropList","getBlocks","addBlock","insertBlock","changeBlock","deleteBlock","moveBlock","mutateBlock","nextBlockId","previousBlockId","EditBlockWrapper","setSidebarTab","useDispatch","useDetectClickOutside","config","BlocksForm","props","pathname","onChangeField","properties","onChangeFormData","selectedBlock","multiSelected","onSelectBlock","allowedBlocks","showRestricted","title","description","metadata","manage","children","isMainForm","blocksConfig","blocks","editable","blockList","dispatch","ClickOutsideListener","ref","onTriggered","triggerKeys","disableClick","disableKeys","handleKeyDown","e","index","block","node","disableEnter","disableArrowUp","disableArrowDown","isMultipleSelection","shiftKey","key","onFocusPreviousBlock","preventDefault","onFocusNextBlock","onAddBlock","settings","defaultBlockType","currentBlock","blockNode","prev","blur","next","onMutateBlock","id","value","newFormData","onInsertBlock","newId","type","onChangeBlock","onDeleteBlock","selectPrev","previous","onMoveBlock","dragIndex","hoverIndex","defaultBlockWrapper","editBlock","blockProps","draginfo","editBlockWrapper","result","source","destination","dragProps","child","childId","data","formTitle","formDescription","selected","includes"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/customizations/volto/components/manage/Blocks/Block/BlocksForm.jsx"],"sourcesContent":["import React from 'react';\nimport EditBlock from './Edit';\nimport { DragDropList } from '@plone/volto/components';\nimport { getBlocks } from '@plone/volto/helpers';\nimport {\n  addBlock,\n  insertBlock,\n  changeBlock,\n  deleteBlock,\n  moveBlock,\n  mutateBlock,\n  nextBlockId,\n  previousBlockId,\n} from '@plone/volto/helpers';\nimport EditBlockWrapper from './EditBlockWrapper';\nimport { setSidebarTab } from '@plone/volto/actions';\nimport { useDispatch } from 'react-redux';\nimport { useDetectClickOutside } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nconst BlocksForm = (props) => {\n  const {\n    pathname,\n    onChangeField,\n    properties,\n    onChangeFormData,\n    selectedBlock,\n    multiSelected,\n    onSelectBlock,\n    allowedBlocks,\n    showRestricted,\n    title,\n    description,\n    metadata,\n    manage,\n    children,\n    isMainForm = true,\n    blocksConfig = config.blocks.blocksConfig,\n    editable = true,\n  } = props;\n\n  const blockList = getBlocks(properties);\n\n  const dispatch = useDispatch();\n\n  const ClickOutsideListener = () => {\n    onSelectBlock(null);\n    dispatch(setSidebarTab(0));\n  };\n\n  const ref = useDetectClickOutside({\n    onTriggered: ClickOutsideListener,\n    triggerKeys: ['Escape'],\n    // Disabled feature for now https://github.com/plone/volto/pull/2389#issuecomment-830027413\n    disableClick: true,\n    disableKeys: !isMainForm,\n  });\n\n  const handleKeyDown = (\n    e,\n    index,\n    block,\n    node,\n    {\n      disableEnter = false,\n      disableArrowUp = false,\n      disableArrowDown = false,\n    } = {},\n  ) => {\n    const isMultipleSelection = e.shiftKey;\n    if (e.key === 'ArrowUp' && !disableArrowUp) {\n      onFocusPreviousBlock(block, node, isMultipleSelection);\n      e.preventDefault();\n    }\n    if (e.key === 'ArrowDown' && !disableArrowDown) {\n      onFocusNextBlock(block, node, isMultipleSelection);\n      e.preventDefault();\n    }\n    if (e.key === 'Enter' && !disableEnter) {\n      onAddBlock(config.settings.defaultBlockType, index + 1);\n      e.preventDefault();\n    }\n  };\n\n  const onFocusPreviousBlock = (\n    currentBlock,\n    blockNode,\n    isMultipleSelection,\n  ) => {\n    const prev = previousBlockId(properties, currentBlock);\n    if (prev === null) return;\n\n    blockNode.blur();\n\n    onSelectBlock(prev, isMultipleSelection);\n  };\n\n  const onFocusNextBlock = (currentBlock, blockNode, isMultipleSelection) => {\n    const next = nextBlockId(properties, currentBlock);\n    if (next === null) return;\n\n    blockNode.blur();\n\n    onSelectBlock(next, isMultipleSelection);\n  };\n\n  const onMutateBlock = (id, value) => {\n    const newFormData = mutateBlock(properties, id, value);\n    onChangeFormData(newFormData);\n  };\n\n  const onInsertBlock = (id, value) => {\n    const [newId, newFormData] = insertBlock(properties, id, value);\n    onChangeFormData(newFormData);\n    return newId;\n  };\n\n  const onAddBlock = (type, index) => {\n    if (editable) {\n      const [id, newFormData] = addBlock(properties, type, index);\n      onChangeFormData(newFormData);\n      return id;\n    }\n  };\n\n  const onChangeBlock = (id, value) => {\n    const newFormData = changeBlock(properties, id, value);\n    onChangeFormData(newFormData);\n  };\n\n  const onDeleteBlock = (id, selectPrev) => {\n    const previous = previousBlockId(properties, id);\n\n    const newFormData = deleteBlock(properties, id);\n    onChangeFormData(newFormData);\n\n    onSelectBlock(selectPrev ? previous : null);\n  };\n\n  const onMoveBlock = (dragIndex, hoverIndex) => {\n    const newFormData = moveBlock(properties, dragIndex, hoverIndex);\n    onChangeFormData(newFormData);\n  };\n\n  const defaultBlockWrapper = ({ draginfo }, editBlock, blockProps) => (\n    <EditBlockWrapper draginfo={draginfo} blockProps={blockProps}>\n      {editBlock}\n    </EditBlockWrapper>\n  );\n\n  const editBlockWrapper = children || defaultBlockWrapper;\n\n  return (\n    <div className=\"blocks-form\" ref={ref}>\n      <fieldset className=\"invisible\" disabled={!editable}>\n        <DragDropList\n          childList={blockList}\n          onMoveItem={(result) => {\n            const { source, destination } = result;\n            if (!destination) {\n              return;\n            }\n            const newFormData = moveBlock(\n              properties,\n              source.index,\n              destination.index,\n            );\n            onChangeFormData(newFormData);\n            return true;\n          }}\n        >\n          {(dragProps) => {\n            const { child, childId, index } = dragProps;\n            const blockProps = {\n              allowedBlocks,\n              showRestricted,\n              block: childId,\n              data: child,\n              handleKeyDown,\n              id: childId,\n              formTitle: title,\n              formDescription: description,\n              index,\n              manage,\n              onAddBlock,\n              onInsertBlock,\n              onChangeBlock,\n              onChangeField,\n              onDeleteBlock,\n              onFocusNextBlock,\n              onFocusPreviousBlock,\n              onMoveBlock,\n              onMutateBlock,\n              onSelectBlock,\n              pathname,\n              metadata,\n              properties,\n              blocksConfig,\n              selected: selectedBlock === childId,\n              multiSelected: multiSelected?.includes(childId),\n              type: child['@type'],\n              editable,\n            };\n            return editBlockWrapper(\n              dragProps,\n              <EditBlock key={childId} {...blockProps} />,\n              blockProps,\n            );\n          }}\n        </DragDropList>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default BlocksForm;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}