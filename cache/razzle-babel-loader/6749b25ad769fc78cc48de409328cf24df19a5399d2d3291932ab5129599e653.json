{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/customizations/volto/components/theme/Logo/Logo.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\n/**\n * Logo component.\n * @module components/theme/Logo/Logo\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport LogoImage from '@plone/volto/components/theme/Logo/Logo.svg';\nimport LogoImageSm from './Logo-sm.svg';\nimport LogoImageWithoutText from './LogoImg.svg';\nimport LogoImageSmWithoutText from './LogoImg-sm.svg';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { Placeholder } from 'semantic-ui-react';\nvar messages = defineMessages({\n  site: {\n    \"id\": \"Site\",\n    \"defaultMessage\": \"Site\"\n  },\n  plonesite: {\n    \"id\": \"Plone Site\",\n    \"defaultMessage\": \"Plone Site\"\n  }\n});\n\n/**\n * Logo component class.\n * @function Logo\n * @param {Object} intl Intl object\n * @returns {string} Markup of the component.\n */\nvar Logo = function Logo(_ref) {\n  var intl = _ref.intl;\n  return __jsx(Link, {\n    to: \"/\",\n    title: intl.formatMessage(messages.site),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, __jsx(LazyLoadImage, {\n    className: \"logoImage tablet logoImageWithText computer large screen widescreen only\"\n    // alt={image.alt}\n    ,\n    height: 80,\n    effect: \"blur\",\n    src: LogoImage,\n    alt: intl.formatMessage(messages.plonesite),\n    title: intl.formatMessage(messages.plonesite),\n    visibleByDefault: true,\n    placeholder: __jsx(Placeholder, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder.Image, {\n      rectangular: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), __jsx(LazyLoadImage, {\n    className: \"logoImageSm tablet logoImageWithText computer large screen widescreen only\"\n    // alt={image.alLogoImageSmWithoutTextt}\n    ,\n    height: 65,\n    effect: \"blur\",\n    src: LogoImageSm,\n    alt: intl.formatMessage(messages.plonesite),\n    title: intl.formatMessage(messages.plonesite),\n    visibleByDefault: true,\n    placeholder: __jsx(Placeholder, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder.Image, {\n      rectangular: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), __jsx(LazyLoadImage, {\n    className: \"logoImage computer hidden large screen hidden widescreen hidden\"\n    // alt={image.alt}\n    ,\n    height: 80,\n    effect: \"blur\",\n    src: LogoImageWithoutText,\n    alt: intl.formatMessage(messages.plonesite),\n    title: intl.formatMessage(messages.plonesite),\n    visibleByDefault: true,\n    placeholder: __jsx(Placeholder, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder.Image, {\n      rectangular: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }), __jsx(LazyLoadImage, {\n    className: \"logoImageSm computer hidden large screen hidden widescreen hidden\"\n    // alt={image.alt}\n    ,\n    height: 65,\n    effect: \"blur\",\n    src: LogoImageSmWithoutText,\n    alt: intl.formatMessage(messages.plonesite),\n    title: intl.formatMessage(messages.plonesite),\n    visibleByDefault: true,\n    placeholder: __jsx(Placeholder, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, __jsx(Placeholder.Image, {\n      rectangular: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = Logo;\nLogo.propTypes = {};\nexport default _c2 = injectIntl(Logo);\nvar _c, _c2;\n$RefreshReg$(_c, \"Logo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","Link","defineMessages","injectIntl","LogoImage","LogoImageSm","LogoImageWithoutText","LogoImageSmWithoutText","LazyLoadImage","Placeholder","messages","site","plonesite","Logo","intl","formatMessage","propTypes"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/customizations/volto/components/theme/Logo/Logo.jsx"],"sourcesContent":["/**\n * Logo component.\n * @module components/theme/Logo/Logo\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport LogoImage from '@plone/volto/components/theme/Logo/Logo.svg';\nimport LogoImageSm from './Logo-sm.svg';\nimport LogoImageWithoutText from './LogoImg.svg';\nimport LogoImageSmWithoutText from './LogoImg-sm.svg';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { Placeholder } from 'semantic-ui-react';\n\nconst messages = defineMessages({\n  site: {\n    id: 'Site',\n    defaultMessage: 'Site',\n  },\n  plonesite: {\n    id: 'Plone Site',\n    defaultMessage: 'Plone Site',\n  },\n});\n\n/**\n * Logo component class.\n * @function Logo\n * @param {Object} intl Intl object\n * @returns {string} Markup of the component.\n */\nconst Logo = ({ intl }) => (\n  <Link to=\"/\" title={intl.formatMessage(messages.site)}>\n    <LazyLoadImage\n      className=\"logoImage tablet logoImageWithText computer large screen widescreen only\"\n      // alt={image.alt}\n      height={80}\n      effect=\"blur\"\n      src={LogoImage}\n      alt={intl.formatMessage(messages.plonesite)}\n      title={intl.formatMessage(messages.plonesite)}\n      visibleByDefault={true}\n      placeholder={\n        <Placeholder>\n          <Placeholder.Image rectangular />\n        </Placeholder>\n      }\n    />\n    <LazyLoadImage\n      className=\"logoImageSm tablet logoImageWithText computer large screen widescreen only\"\n      // alt={image.alLogoImageSmWithoutTextt}\n      height={65}\n      effect=\"blur\"\n      src={LogoImageSm}\n      alt={intl.formatMessage(messages.plonesite)}\n      title={intl.formatMessage(messages.plonesite)}\n      visibleByDefault={true}\n      placeholder={\n        <Placeholder>\n          <Placeholder.Image rectangular />\n        </Placeholder>\n      }\n    />\n    <LazyLoadImage\n      className=\"logoImage computer hidden large screen hidden widescreen hidden\"\n      // alt={image.alt}\n      height={80}\n      effect=\"blur\"\n      src={LogoImageWithoutText}\n      alt={intl.formatMessage(messages.plonesite)}\n      title={intl.formatMessage(messages.plonesite)}\n      visibleByDefault={true}\n      placeholder={\n        <Placeholder>\n          <Placeholder.Image rectangular />\n        </Placeholder>\n      }\n    />\n    <LazyLoadImage\n      className=\"logoImageSm computer hidden large screen hidden widescreen hidden\"\n      // alt={image.alt}\n      height={65}\n      effect=\"blur\"\n      src={LogoImageSmWithoutText}\n      alt={intl.formatMessage(messages.plonesite)}\n      title={intl.formatMessage(messages.plonesite)}\n      visibleByDefault={true}\n      placeholder={\n        <Placeholder>\n          <Placeholder.Image rectangular />\n        </Placeholder>\n      }\n    />\n  </Link>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nLogo.propTypes = {};\n\nexport default injectIntl(Logo);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Site","defaultMessage":"Site"},{"id":"Plone Site","defaultMessage":"Plone Site"}]}},"sourceType":"module","externalDependencies":[]}