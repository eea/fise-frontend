{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Preferences/PersonalInformation.jsx\";\nvar __jsx = React.createElement;\n/**\n * Personal information component.\n * @module components/manage/Preferences/PersonalInformation\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectIntl } from 'react-intl';\nimport { withRouter } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport { messages } from '@plone/volto/helpers';\nimport { Form, Toast } from '@plone/volto/components';\nimport { getUser, updateUser, getUserSchema } from '@plone/volto/actions';\n\n/**\n * PersonalInformation class.\n * @class PersonalInformation\n * @extends Component\n */\nvar PersonalInformation = /*#__PURE__*/function (_Component) {\n  _inherits(PersonalInformation, _Component);\n  var _super = _createSuper(PersonalInformation);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ChangePassword\n   */\n  function PersonalInformation(props) {\n    var _this;\n    _classCallCheck(this, PersonalInformation);\n    _this = _super.call(this, props);\n    _this.onCancel = _this.onCancel.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(PersonalInformation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getUser(this.props.userId);\n      this.props.getUserSchema();\n    }\n\n    /**\n     * Submit handler\n     * @method onSubmit\n     * @param {object} data Form data.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(data) {\n      // We don't want the user to change his login name/username or the roles\n      // from this form\n      // Backend will complain anyways, but we clean the data here before it does\n      delete data.id;\n      delete data.username;\n      delete data.roles;\n      this.props.updateUser(this.props.userId, data);\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.saved),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }));\n      if (this.props.closeMenu) this.props.closeMenu();\n    }\n\n    /**\n     * Cancel handler\n     * @method onCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      if (this.props.closeMenu) this.props.closeMenu();else this.props.history.goBack();\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props, _this$props$userschem, _this$props2;\n      return ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$userschem = _this$props.userschema) === null || _this$props$userschem === void 0 ? void 0 : _this$props$userschem.loaded) && __jsx(Form, {\n        formData: this.props.user,\n        schema: (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.userschema.userschema,\n        onSubmit: this.onSubmit,\n        onCancel: this.onCancel,\n        loading: this.props.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n  return PersonalInformation;\n}(Component);\n_defineProperty(PersonalInformation, \"propTypes\", {\n  user: PropTypes.shape({\n    fullname: PropTypes.string,\n    email: PropTypes.string,\n    home_page: PropTypes.string,\n    location: PropTypes.string\n  }).isRequired,\n  updateUser: PropTypes.func.isRequired,\n  getUser: PropTypes.func.isRequired,\n  userId: PropTypes.string.isRequired,\n  loaded: PropTypes.bool.isRequired,\n  loading: PropTypes.bool,\n  closeMenu: PropTypes.func,\n  getUserSchema: PropTypes.func.isRequired\n});\nexport default compose(withRouter, injectIntl, connect(function (state, props) {\n  return {\n    user: state.users.user,\n    userId: state.userSession.token ? jwtDecode(state.userSession.token).sub : '',\n    loaded: state.users.get.loaded,\n    loading: state.users.update.loading,\n    userschema: state.userschema\n  };\n}, {\n  getUser: getUser,\n  updateUser: updateUser,\n  getUserSchema: getUserSchema\n}))(PersonalInformation);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","injectIntl","withRouter","jwtDecode","toast","messages","Form","Toast","getUser","updateUser","getUserSchema","PersonalInformation","props","onCancel","bind","onSubmit","userId","data","id","username","roles","success","intl","formatMessage","saved","closeMenu","history","goBack","userschema","loaded","user","loading","shape","fullname","string","email","home_page","location","isRequired","func","bool","state","users","userSession","token","sub","get","update"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Preferences/PersonalInformation.jsx"],"sourcesContent":["/**\n * Personal information component.\n * @module components/manage/Preferences/PersonalInformation\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectIntl } from 'react-intl';\nimport { withRouter } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport { messages } from '@plone/volto/helpers';\nimport { Form, Toast } from '@plone/volto/components';\nimport { getUser, updateUser, getUserSchema } from '@plone/volto/actions';\n\n/**\n * PersonalInformation class.\n * @class PersonalInformation\n * @extends Component\n */\nclass PersonalInformation extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    user: PropTypes.shape({\n      fullname: PropTypes.string,\n      email: PropTypes.string,\n      home_page: PropTypes.string,\n      location: PropTypes.string,\n    }).isRequired,\n    updateUser: PropTypes.func.isRequired,\n    getUser: PropTypes.func.isRequired,\n    userId: PropTypes.string.isRequired,\n    loaded: PropTypes.bool.isRequired,\n    loading: PropTypes.bool,\n    closeMenu: PropTypes.func,\n    getUserSchema: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ChangePassword\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getUser(this.props.userId);\n    this.props.getUserSchema();\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    // We don't want the user to change his login name/username or the roles\n    // from this form\n    // Backend will complain anyways, but we clean the data here before it does\n    delete data.id;\n    delete data.username;\n    delete data.roles;\n    this.props.updateUser(this.props.userId, data);\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.saved)}\n      />,\n    );\n    if (this.props.closeMenu) this.props.closeMenu();\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    if (this.props.closeMenu) this.props.closeMenu();\n    else this.props.history.goBack();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      this.props?.userschema?.loaded && (\n        <Form\n          formData={this.props.user}\n          schema={this.props?.userschema.userschema}\n          onSubmit={this.onSubmit}\n          onCancel={this.onCancel}\n          loading={this.props.loading}\n        />\n      )\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      user: state.users.user,\n      userId: state.userSession.token\n        ? jwtDecode(state.userSession.token).sub\n        : '',\n      loaded: state.users.get.loaded,\n      loading: state.users.update.loading,\n      userschema: state.userschema,\n    }),\n    { getUser, updateUser, getUserSchema },\n  ),\n)(PersonalInformation);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}