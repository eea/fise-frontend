{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/hocs/connectToProviderData.js\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React, { useEffect, useCallback, useMemo, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { connect, useDispatch } from 'react-redux';\nimport hash from 'object-hash';\nimport { getDataFromProvider } from '../actions';\nimport { getProviderUrl, getConnectorPath, getForm, getDataQuery } from '../helpers';\nimport { ConnectorContext } from './';\nconst getInitialPagination = (config = {}) => {\n  var _config$pagination, _config$pagination2;\n  return {\n    activePage: 1,\n    enabled: ((_config$pagination = config.pagination) === null || _config$pagination === void 0 ? void 0 : _config$pagination.enabled) || false,\n    itemsPerPage: ((_config$pagination2 = config.pagination) === null || _config$pagination2 === void 0 ? void 0 : _config$pagination2.itemsPerPage) || 5,\n    prevPage: null,\n    totalItems: null,\n    lastPage: Infinity,\n    data: {}\n  };\n};\n\n/**\n * connectToProviderData.\n *\n * @param {} getProviderUrl\n */\nexport function connectToProviderData(getConfig = () => ({})) {\n  return WrappedComponent => {\n    return connect(state => ({\n      content: state.content.data,\n      connected_data_parameters: state.connected_data_parameters,\n      data_providers: state.data_providers\n    }))(withRouter(props => {\n      var _props$data_providers, _props$data_providers2, _props$data_providers3, _props$data_providers4, _props$data_providers5, _props$data_providers6, _props$data_providers7, _props$data_providers8, _props$data_providers9, _props$data_providers10, _props$data_providers11, _props$data_providers12, _props$data_providers13, _props$data_providers14, _props$data_providers15, _props$data_providers16, _config$pagination3, _config$pagination4;\n      const dispatch = useDispatch();\n      const params = useParams();\n      const config = useMemo(() => getConfig(props), [props]);\n      const {\n        0: mounted,\n        1: setMounted\n      } = useState(false);\n      const {\n        0: state,\n        1: setState\n      } = useState({});\n      const {\n        0: pagination,\n        1: setPagination\n      } = useState(getInitialPagination(config));\n      const prevHashValue = useRef(null);\n      const provider_url = useMemo(() => getProviderUrl(config.provider_url), [config.provider_url]);\n      const form = useMemo(() => getForm(_objectSpread(_objectSpread({}, props), {}, {\n        pagination,\n        extraQuery: state.extraQuery,\n        extraConditions: state.extraConditions\n      })), [props, pagination, state.extraQuery, state.extraConditions]);\n      const data_query = useMemo(() => getDataQuery(_objectSpread(_objectSpread({}, props), {}, {\n        params,\n        pagination,\n        provider_url\n      })), [props, params, pagination, provider_url]);\n      const hashValue = useMemo(() => {\n        const _hash_1 = hash(form);\n        const _hash_2 = hash(data_query);\n        return hash(_hash_1 + _hash_2);\n      }, [form, data_query]);\n      const connectorPath = useMemo(() => getConnectorPath(provider_url, hashValue), [provider_url, hashValue]);\n      const provider_data = provider_url ? (_props$data_providers = props.data_providers) === null || _props$data_providers === void 0 ? void 0 : (_props$data_providers2 = _props$data_providers.data) === null || _props$data_providers2 === void 0 ? void 0 : (_props$data_providers3 = _props$data_providers2[provider_url]) === null || _props$data_providers3 === void 0 ? void 0 : _props$data_providers3[hashValue] : null;\n      const prev_provider_data = provider_url ? (_props$data_providers4 = props.data_providers) === null || _props$data_providers4 === void 0 ? void 0 : (_props$data_providers5 = _props$data_providers4.data) === null || _props$data_providers5 === void 0 ? void 0 : (_props$data_providers6 = _props$data_providers5[provider_url]) === null || _props$data_providers6 === void 0 ? void 0 : _props$data_providers6[prevHashValue.current] : null;\n      const provider_metadata = provider_url ? (_props$data_providers7 = props.data_providers) === null || _props$data_providers7 === void 0 ? void 0 : (_props$data_providers8 = _props$data_providers7.metadata) === null || _props$data_providers8 === void 0 ? void 0 : (_props$data_providers9 = _props$data_providers8[provider_url]) === null || _props$data_providers9 === void 0 ? void 0 : _props$data_providers9[hashValue] : null;\n      const prev_provider_metadata = provider_url ? (_props$data_providers10 = props.data_providers) === null || _props$data_providers10 === void 0 ? void 0 : (_props$data_providers11 = _props$data_providers10.metadata) === null || _props$data_providers11 === void 0 ? void 0 : (_props$data_providers12 = _props$data_providers11[provider_url]) === null || _props$data_providers12 === void 0 ? void 0 : _props$data_providers12[prevHashValue.current] : null;\n      const isPending = provider_url ? (_props$data_providers13 = props.data_providers) === null || _props$data_providers13 === void 0 ? void 0 : (_props$data_providers14 = _props$data_providers13.pendingConnectors) === null || _props$data_providers14 === void 0 ? void 0 : _props$data_providers14[connectorPath] : false;\n      const isFailed = provider_url ? (_props$data_providers15 = props.data_providers) === null || _props$data_providers15 === void 0 ? void 0 : (_props$data_providers16 = _props$data_providers15.failedConnectors) === null || _props$data_providers16 === void 0 ? void 0 : _props$data_providers16[connectorPath] : false;\n      const activePageHasData = pagination.enabled ? !!pagination.data[pagination.activePage] : false;\n      const readyToDispatch = mounted && provider_url && !provider_data && !isPending && !isFailed;\n      const updatePagination = useCallback(data => {\n        const newPagination = _objectSpread(_objectSpread({}, pagination), data);\n        if (data.activePage && data.activePage !== pagination.activePage) {\n          newPagination.prevPage = pagination.activePage;\n        }\n        setPagination(_objectSpread({}, newPagination));\n      }, [pagination]);\n      useEffect(() => {\n        if (!isPending) {\n          prevHashValue.current = hashValue;\n        }\n        /* eslint-disable-next-line */\n      }, [isPending]);\n      useEffect(() => {\n        setPagination(getInitialPagination(config));\n        /* eslint-disable-next-line */\n      }, [(_config$pagination3 = config.pagination) === null || _config$pagination3 === void 0 ? void 0 : _config$pagination3.enabled, (_config$pagination4 = config.pagination) === null || _config$pagination4 === void 0 ? void 0 : _config$pagination4.itemsPerPage]);\n      useEffect(() => {\n        let newPagination = _objectSpread({}, pagination);\n        if (!mounted && __CLIENT__) {\n          setMounted(true);\n        }\n        if (readyToDispatch) {\n          dispatch(getDataFromProvider(provider_url, form, data_query, hashValue));\n        }\n        if (provider_data && !isPending && pagination.enabled && !activePageHasData) {\n          var _provider_data$Object;\n          const dataLength = ((_provider_data$Object = provider_data[Object.keys(provider_data)[0]]) === null || _provider_data$Object === void 0 ? void 0 : _provider_data$Object.length) || 0;\n          newPagination.totalItems = (pagination.totalItems || 0) + dataLength;\n          newPagination = _objectSpread(_objectSpread({}, newPagination), {}, {\n            activePage: !dataLength && pagination.activePage > 1 ? pagination.prevPage : pagination.activePage,\n            prevPage: !dataLength && pagination.activePage > 1 ? null : pagination.prevPage,\n            data: _objectSpread(_objectSpread({}, pagination.data), {}, {\n              [pagination.activePage]: provider_data\n            })\n          });\n          if (!dataLength && pagination.activePage > 1) {\n            newPagination.lastPage = pagination.prevPage;\n          } else if (dataLength < pagination.itemsPerPage) {\n            newPagination.lastPage = pagination.activePage;\n          }\n          setPagination(_objectSpread({}, newPagination));\n        } else if (provider_data && !isPending && pagination.enabled && activePageHasData && !_isEqual(provider_data, pagination.data[pagination.activePage])) {\n          var _provider_data$Object2;\n          const dataLength = ((_provider_data$Object2 = provider_data[Object.keys(provider_data)[0]]) === null || _provider_data$Object2 === void 0 ? void 0 : _provider_data$Object2.length) || 0;\n          newPagination.totalItems = dataLength;\n          newPagination = _objectSpread(_objectSpread({}, newPagination), {}, {\n            activePage: 1,\n            prevPage: null,\n            data: {\n              1: pagination.activePage > 1 ? pagination.data[pagination.activePage] : provider_data\n            }\n          });\n          if (dataLength < newPagination.itemsPerPage && pagination.activePage === 1) {\n            newPagination.lastPage = pagination.activePage;\n          } else {\n            newPagination.lastPage = Infinity;\n          }\n          setPagination(_objectSpread({}, newPagination));\n        }\n      }, [activePageHasData, config, data_query, dispatch, form, hashValue, isPending, mounted, pagination, provider_data, provider_url, readyToDispatch]);\n      return __jsx(ConnectorContext.Provider, {\n        value: {\n          state,\n          setState\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }\n      }, __jsx(WrappedComponent, _extends({}, props, {\n        provider_data: pagination.enabled ? provider_data : provider_data || prev_provider_data,\n        prev_provider_data: prev_provider_data,\n        provider_metadata: provider_metadata,\n        prev_provider_metadata: prev_provider_metadata,\n        loadingProviderData: isPending,\n        updatePagination: updatePagination,\n        pagination: pagination,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      })));\n    }));\n  };\n}\nexport default connectToProviderData;","map":{"version":3,"names":["React","useEffect","useCallback","useMemo","useState","useRef","useParams","withRouter","connect","useDispatch","hash","getDataFromProvider","getProviderUrl","getConnectorPath","getForm","getDataQuery","ConnectorContext","getInitialPagination","config","activePage","enabled","pagination","itemsPerPage","prevPage","totalItems","lastPage","Infinity","data","connectToProviderData","getConfig","WrappedComponent","state","content","connected_data_parameters","data_providers","props","dispatch","params","mounted","setMounted","setState","setPagination","prevHashValue","provider_url","form","extraQuery","extraConditions","data_query","hashValue","_hash_1","_hash_2","connectorPath","provider_data","prev_provider_data","current","provider_metadata","metadata","prev_provider_metadata","isPending","pendingConnectors","isFailed","failedConnectors","activePageHasData","readyToDispatch","updatePagination","newPagination","__CLIENT__","dataLength","Object","keys","length"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/hocs/connectToProviderData.js"],"sourcesContent":["import React, {\n  useEffect,\n  useCallback,\n  useMemo,\n  useState,\n  useRef,\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { connect, useDispatch } from 'react-redux';\nimport { isEqual } from 'lodash';\nimport hash from 'object-hash';\nimport { getDataFromProvider } from '../actions';\nimport {\n  getProviderUrl,\n  getConnectorPath,\n  getForm,\n  getDataQuery,\n} from '../helpers';\nimport { ConnectorContext } from './';\n\nconst getInitialPagination = (config = {}) => {\n  return {\n    activePage: 1,\n    enabled: config.pagination?.enabled || false,\n    itemsPerPage: config.pagination?.itemsPerPage || 5,\n    prevPage: null,\n    totalItems: null,\n    lastPage: Infinity,\n    data: {},\n  };\n};\n\n/**\n * connectToProviderData.\n *\n * @param {} getProviderUrl\n */\nexport function connectToProviderData(getConfig = () => ({})) {\n  return (WrappedComponent) => {\n    return connect((state) => ({\n      content: state.content.data,\n      connected_data_parameters: state.connected_data_parameters,\n      data_providers: state.data_providers,\n    }))(\n      withRouter((props) => {\n        const dispatch = useDispatch();\n        const params = useParams();\n        const config = useMemo(() => getConfig(props), [props]);\n        const [mounted, setMounted] = useState(false);\n        const [state, setState] = useState({});\n        const [pagination, setPagination] = useState(\n          getInitialPagination(config),\n        );\n        const prevHashValue = useRef(null);\n\n        const provider_url = useMemo(\n          () => getProviderUrl(config.provider_url),\n          [config.provider_url],\n        );\n\n        const form = useMemo(\n          () =>\n            getForm({\n              ...props,\n              pagination,\n              extraQuery: state.extraQuery,\n              extraConditions: state.extraConditions,\n            }),\n          [props, pagination, state.extraQuery, state.extraConditions],\n        );\n        const data_query = useMemo(\n          () => getDataQuery({ ...props, params, pagination, provider_url }),\n          [props, params, pagination, provider_url],\n        );\n\n        const hashValue = useMemo(() => {\n          const _hash_1 = hash(form);\n          const _hash_2 = hash(data_query);\n          return hash(_hash_1 + _hash_2);\n        }, [form, data_query]);\n\n        const connectorPath = useMemo(\n          () => getConnectorPath(provider_url, hashValue),\n          [provider_url, hashValue],\n        );\n\n        const provider_data = provider_url\n          ? props.data_providers?.data?.[provider_url]?.[hashValue]\n          : null;\n\n        const prev_provider_data = provider_url\n          ? props.data_providers?.data?.[provider_url]?.[prevHashValue.current]\n          : null;\n\n        const provider_metadata = provider_url\n          ? props.data_providers?.metadata?.[provider_url]?.[hashValue]\n          : null;\n\n        const prev_provider_metadata = provider_url\n          ? props.data_providers?.metadata?.[provider_url]?.[\n              prevHashValue.current\n            ]\n          : null;\n\n        const isPending = provider_url\n          ? props.data_providers?.pendingConnectors?.[connectorPath]\n          : false;\n\n        const isFailed = provider_url\n          ? props.data_providers?.failedConnectors?.[connectorPath]\n          : false;\n\n        const activePageHasData = pagination.enabled\n          ? !!pagination.data[pagination.activePage]\n          : false;\n\n        const readyToDispatch =\n          mounted && provider_url && !provider_data && !isPending && !isFailed;\n\n        const updatePagination = useCallback(\n          (data) => {\n            const newPagination = { ...pagination, ...data };\n            if (data.activePage && data.activePage !== pagination.activePage) {\n              newPagination.prevPage = pagination.activePage;\n            }\n            setPagination({ ...newPagination });\n          },\n          [pagination],\n        );\n\n        useEffect(() => {\n          if (!isPending) {\n            prevHashValue.current = hashValue;\n          }\n          /* eslint-disable-next-line */\n        }, [isPending]);\n\n        useEffect(() => {\n          setPagination(getInitialPagination(config));\n          /* eslint-disable-next-line */\n        }, [config.pagination?.enabled, config.pagination?.itemsPerPage]);\n\n        useEffect(() => {\n          let newPagination = { ...pagination };\n\n          if (!mounted && __CLIENT__) {\n            setMounted(true);\n          }\n\n          if (readyToDispatch) {\n            dispatch(\n              getDataFromProvider(provider_url, form, data_query, hashValue),\n            );\n          }\n\n          if (\n            provider_data &&\n            !isPending &&\n            pagination.enabled &&\n            !activePageHasData\n          ) {\n            const dataLength =\n              provider_data[Object.keys(provider_data)[0]]?.length || 0;\n            newPagination.totalItems =\n              (pagination.totalItems || 0) + dataLength;\n            newPagination = {\n              ...newPagination,\n              activePage:\n                !dataLength && pagination.activePage > 1\n                  ? pagination.prevPage\n                  : pagination.activePage,\n              prevPage:\n                !dataLength && pagination.activePage > 1\n                  ? null\n                  : pagination.prevPage,\n              data: {\n                ...pagination.data,\n                [pagination.activePage]: provider_data,\n              },\n            };\n            if (!dataLength && pagination.activePage > 1) {\n              newPagination.lastPage = pagination.prevPage;\n            } else if (dataLength < pagination.itemsPerPage) {\n              newPagination.lastPage = pagination.activePage;\n            }\n            setPagination({ ...newPagination });\n          } else if (\n            provider_data &&\n            !isPending &&\n            pagination.enabled &&\n            activePageHasData &&\n            !isEqual(provider_data, pagination.data[pagination.activePage])\n          ) {\n            const dataLength =\n              provider_data[Object.keys(provider_data)[0]]?.length || 0;\n            newPagination.totalItems = dataLength;\n            newPagination = {\n              ...newPagination,\n              activePage: 1,\n              prevPage: null,\n              data: {\n                1:\n                  pagination.activePage > 1\n                    ? pagination.data[pagination.activePage]\n                    : provider_data,\n              },\n            };\n            if (\n              dataLength < newPagination.itemsPerPage &&\n              pagination.activePage === 1\n            ) {\n              newPagination.lastPage = pagination.activePage;\n            } else {\n              newPagination.lastPage = Infinity;\n            }\n            setPagination({ ...newPagination });\n          }\n        }, [\n          activePageHasData,\n          config,\n          data_query,\n          dispatch,\n          form,\n          hashValue,\n          isPending,\n          mounted,\n          pagination,\n          provider_data,\n          provider_url,\n          readyToDispatch,\n        ]);\n\n        return (\n          <ConnectorContext.Provider value={{ state, setState }}>\n            <WrappedComponent\n              {...props}\n              provider_data={\n                pagination.enabled\n                  ? provider_data\n                  : provider_data || prev_provider_data\n              }\n              prev_provider_data={prev_provider_data}\n              provider_metadata={provider_metadata}\n              prev_provider_metadata={prev_provider_metadata}\n              loadingProviderData={isPending}\n              updatePagination={updatePagination}\n              pagination={pagination}\n            />\n          </ConnectorContext.Provider>\n        );\n      }),\n    );\n  };\n}\n\nexport default connectToProviderData;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}