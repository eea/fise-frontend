{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/components/manage/Blocks/SimpleDataTable/templates/expandable/PopupMap.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { compose } from 'redux';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport { Map } from '@eeacms/volto-openlayers-map/Map';\nimport { Layers, Layer } from '@eeacms/volto-openlayers-map/Layers';\nimport { openlayers } from '@eeacms/volto-openlayers-map';\nconst getLayerBaseURL = () => 'https://services.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}';\nconst getProviderDataLength = provider_data => {\n  var _provider_data$Object;\n  return provider_data ? ((_provider_data$Object = provider_data[Object.keys(provider_data)[0]]) === null || _provider_data$Object === void 0 ? void 0 : _provider_data$Object.length) || 0 : 0;\n};\nconst PopupMap = ({\n  rowData,\n  provider_data,\n  mapData\n}) => {\n  const [mapRendered, setMapRendered] = React.useState(false);\n  const [mapCenter, setMapCenter] = React.useState([9, 45]);\n  const mapRef = React.useRef();\n  const [selectedData, setSelectedData] = React.useState([]);\n  const [featuresData, setFeaturesData] = React.useState([]);\n  const {\n    proj,\n    source,\n    style\n  } = openlayers;\n  React.useEffect(() => {\n    const {\n      long,\n      lat\n    } = mapData;\n    const allLong = selectedData.length > 0 ? selectedData.map(i => i[long]) : '';\n    const allLat = selectedData.length > 0 ? selectedData.map(i => i[lat]) : '';\n    const minLong = allLong && allLong.length > 0 ? Math.min(...allLong) : '';\n    const maxLong = allLong && allLong.length > 0 ? Math.max(...allLong) : '';\n    const minLat = allLong && allLong.length > 0 ? Math.min(...allLat) : '';\n    const maxLat = allLong && allLong.length > 0 ? Math.max(...allLat) : '';\n    const centerLat = minLat && maxLat ? (minLat + maxLat) / 2 : '';\n    const centerLong = minLong && maxLong ? (minLong + maxLong) / 2 : '';\n    if (centerLat && centerLong) {\n      setMapCenter([centerLong, centerLat]);\n      centerToPosition({\n        longitude: centerLong,\n        latitude: centerLat\n      }, 5);\n    }\n  }, [selectedData, mapData]);\n  React.useEffect(() => {\n    const {\n      long,\n      lat\n    } = mapData;\n    const provider_data_length = getProviderDataLength(provider_data);\n    const newMapData = [];\n    const newFeaturesData = [];\n    if (provider_data_length) {\n      const keys = Object.keys(provider_data);\n      Array(provider_data_length).fill().forEach((_, i) => {\n        const obj = {};\n        keys.forEach(key => {\n          obj[key] = provider_data[key][i];\n        });\n        newMapData.push(obj);\n        newFeaturesData.push(new openlayers.ol.Feature(new openlayers.geom.Point(openlayers.proj.fromLonLat([obj[long], obj[lat]]))));\n      });\n    }\n    setSelectedData(newMapData);\n    setFeaturesData(newFeaturesData);\n    /* eslint-disable-next-line */\n  }, [provider_data, mapData]);\n\n  // const countries =\n  //   provider_data && provider_data[mapData.country]\n  //     ? provider_data[mapData.country]\n  //     : '';\n\n  //const uniqueCountries = [...new Set(countries)];\n\n  const centerToPosition = (position, zoom) => {\n    const {\n      proj\n    } = openlayers;\n    return mapRef.current.getView().animate({\n      center: proj.fromLonLat([position.longitude, position.latitude]),\n      duration: 1000,\n      zoom\n    });\n  };\n  if (!provider_data) {\n    return 'Loading..';\n  }\n  return __jsx(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, selectedData.length > 0 ? __jsx(Map, {\n    ref: data => {\n      mapRef.current = data === null || data === void 0 ? void 0 : data.map;\n      if (data !== null && data !== void 0 && data.mapRendered && !mapRendered) {\n        setMapRendered(true);\n      }\n    },\n    view: {\n      center: proj.fromLonLat(mapCenter),\n      showFullExtent: true,\n      minZoom: 1,\n      zoom: 2\n    },\n    renderer: \"webgl\"\n    // onPointermove={this.onPointermove}\n    // onClick={this.onClick}\n    // onMoveend={this.onMoveend}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(Layers, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, __jsx(Layer.Tile, {\n    source: new source.XYZ({\n      url: getLayerBaseURL()\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), __jsx(Layer.Vector, {\n    source: new source.Vector({\n      features: featuresData\n    }),\n    style: new style.Style({\n      image: new style.Circle({\n        radius: 6,\n        fill: new style.Fill({\n          color: '#058373'\n        }),\n        stroke: new style.Stroke({\n          color: 'black',\n          width: 1\n        }),\n        zIndex: 0\n      }),\n      text: new style.Text({\n        font: '12px Calibri,sans-serif',\n        fill: new style.Fill({\n          color: '#000'\n        }),\n        stroke: new style.Stroke({\n          color: '#fff',\n          width: 2\n        })\n      })\n    }),\n    title: \"1.Sites\",\n    zIndex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }))) : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \"No data available for map.\"));\n};\nexport default compose(connectToProviderData(props => {\n  return {\n    provider_url: props.providerUrl\n  };\n}))(PopupMap);","map":{"version":3,"names":["React","compose","connectToProviderData","Map","Layers","Layer","openlayers","getLayerBaseURL","getProviderDataLength","provider_data","Object","keys","length","PopupMap","rowData","mapData","mapRendered","setMapRendered","useState","mapCenter","setMapCenter","mapRef","useRef","selectedData","setSelectedData","featuresData","setFeaturesData","proj","source","style","useEffect","long","lat","allLong","map","i","allLat","minLong","Math","min","maxLong","max","minLat","maxLat","centerLat","centerLong","centerToPosition","longitude","latitude","provider_data_length","newMapData","newFeaturesData","Array","fill","forEach","_","obj","key","push","ol","Feature","geom","Point","fromLonLat","position","zoom","current","getView","animate","center","duration","data","showFullExtent","minZoom","XYZ","url","Vector","features","Style","image","Circle","radius","Fill","color","stroke","Stroke","width","zIndex","text","Text","font","props","provider_url","providerUrl"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/components/manage/Blocks/SimpleDataTable/templates/expandable/PopupMap.jsx"],"sourcesContent":["import React from 'react';\nimport { compose } from 'redux';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport { Map } from '@eeacms/volto-openlayers-map/Map';\nimport { Layers, Layer } from '@eeacms/volto-openlayers-map/Layers';\nimport { openlayers } from '@eeacms/volto-openlayers-map';\n\nconst getLayerBaseURL = () =>\n  'https://services.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}';\n\nconst getProviderDataLength = (provider_data) => {\n  return provider_data\n    ? provider_data[Object.keys(provider_data)[0]]?.length || 0\n    : 0;\n};\n\nconst PopupMap = ({ rowData, provider_data, mapData }) => {\n  const [mapRendered, setMapRendered] = React.useState(false);\n  const [mapCenter, setMapCenter] = React.useState([9, 45]);\n  const mapRef = React.useRef();\n\n  const [selectedData, setSelectedData] = React.useState([]);\n  const [featuresData, setFeaturesData] = React.useState([]);\n\n  const { proj, source, style } = openlayers;\n\n  React.useEffect(() => {\n    const { long, lat } = mapData;\n    const allLong =\n      selectedData.length > 0 ? selectedData.map((i) => i[long]) : '';\n    const allLat =\n      selectedData.length > 0 ? selectedData.map((i) => i[lat]) : '';\n    const minLong = allLong && allLong.length > 0 ? Math.min(...allLong) : '';\n    const maxLong = allLong && allLong.length > 0 ? Math.max(...allLong) : '';\n    const minLat = allLong && allLong.length > 0 ? Math.min(...allLat) : '';\n    const maxLat = allLong && allLong.length > 0 ? Math.max(...allLat) : '';\n\n    const centerLat = minLat && maxLat ? (minLat + maxLat) / 2 : '';\n    const centerLong = minLong && maxLong ? (minLong + maxLong) / 2 : '';\n\n    if (centerLat && centerLong) {\n      setMapCenter([centerLong, centerLat]);\n      centerToPosition({ longitude: centerLong, latitude: centerLat }, 5);\n    }\n  }, [selectedData, mapData]);\n\n  React.useEffect(() => {\n    const { long, lat } = mapData;\n    const provider_data_length = getProviderDataLength(provider_data);\n    const newMapData = [];\n    const newFeaturesData = [];\n    if (provider_data_length) {\n      const keys = Object.keys(provider_data);\n      Array(provider_data_length)\n        .fill()\n        .forEach((_, i) => {\n          const obj = {};\n          keys.forEach((key) => {\n            obj[key] = provider_data[key][i];\n          });\n          newMapData.push(obj);\n\n          newFeaturesData.push(\n            new openlayers.ol.Feature(\n              new openlayers.geom.Point(\n                openlayers.proj.fromLonLat([obj[long], obj[lat]]),\n              ),\n            ),\n          );\n        });\n    }\n    setSelectedData(newMapData);\n\n    setFeaturesData(newFeaturesData);\n    /* eslint-disable-next-line */\n  }, [provider_data, mapData]);\n\n  // const countries =\n  //   provider_data && provider_data[mapData.country]\n  //     ? provider_data[mapData.country]\n  //     : '';\n\n  //const uniqueCountries = [...new Set(countries)];\n\n  const centerToPosition = (position, zoom) => {\n    const { proj } = openlayers;\n    return mapRef.current.getView().animate({\n      center: proj.fromLonLat([position.longitude, position.latitude]),\n      duration: 1000,\n      zoom,\n    });\n  };\n\n  if (!provider_data) {\n    return 'Loading..';\n  }\n  return (\n    <div className=\"map-container\">\n      {selectedData.length > 0 ? (\n        <Map\n          ref={(data) => {\n            mapRef.current = data?.map;\n            if (data?.mapRendered && !mapRendered) {\n              setMapRendered(true);\n            }\n          }}\n          view={{\n            center: proj.fromLonLat(mapCenter),\n            showFullExtent: true,\n            minZoom: 1,\n            zoom: 2,\n          }}\n          renderer=\"webgl\"\n          // onPointermove={this.onPointermove}\n          // onClick={this.onClick}\n          // onMoveend={this.onMoveend}\n        >\n          <Layers>\n            <Layer.Tile\n              source={\n                new source.XYZ({\n                  url: getLayerBaseURL(),\n                })\n              }\n            />\n            <Layer.Vector\n              source={\n                new source.Vector({\n                  features: featuresData,\n                })\n              }\n              style={\n                new style.Style({\n                  image: new style.Circle({\n                    radius: 6,\n                    fill: new style.Fill({ color: '#058373' }),\n                    stroke: new style.Stroke({ color: 'black', width: 1 }),\n                    zIndex: 0,\n                  }),\n                  text: new style.Text({\n                    font: '12px Calibri,sans-serif',\n                    fill: new style.Fill({ color: '#000' }),\n                    stroke: new style.Stroke({\n                      color: '#fff',\n                      width: 2,\n                    }),\n                  }),\n                })\n              }\n              title=\"1.Sites\"\n              zIndex={1}\n            />\n          </Layers>\n        </Map>\n      ) : (\n        <p>No data available for map.</p>\n      )}\n    </div>\n  );\n};\n\nexport default compose(\n  connectToProviderData((props) => {\n    return {\n      provider_url: props.providerUrl,\n    };\n  }),\n)(PopupMap);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}