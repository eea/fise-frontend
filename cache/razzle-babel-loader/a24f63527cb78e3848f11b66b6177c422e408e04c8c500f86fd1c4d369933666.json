{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { CHANGE_MAP_DATA, GET_MAP_DATA } from '../constants';\nvar initialState = [];\nexport var addMapDataToState = function addMapDataToState() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var existingIdIndex;\n\n  //check for existing mapData on the same page element and edits it\n  var hasMapData = state.filter(function (element, index) {\n    if (element.id === action.mapData.id) {\n      existingIdIndex = index;\n      return element;\n    }\n    return undefined;\n  });\n  if (hasMapData.length !== 0) {\n    var beforeId = _toConsumableArray(state).slice(0, existingIdIndex);\n    var afterId = _toConsumableArray(state).slice(existingIdIndex + 1, state.length);\n    var newState = [].concat(_toConsumableArray(beforeId), [action.mapData], _toConsumableArray(afterId));\n    return newState;\n  } else return [].concat(_toConsumableArray(state), [action.mapData]);\n};\nexport default function updateMapData() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case \"\".concat(CHANGE_MAP_DATA):\n      return action.mapData;\n    case \"\".concat(GET_MAP_DATA):\n      return action.mapData;\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["CHANGE_MAP_DATA","GET_MAP_DATA","initialState","addMapDataToState","state","action","existingIdIndex","hasMapData","filter","element","index","id","mapData","undefined","length","beforeId","slice","afterId","newState","updateMapData","type"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/reducers/map_data.js"],"sourcesContent":["import { CHANGE_MAP_DATA, GET_MAP_DATA } from '../constants';\n\nconst initialState = [];\n\nexport const addMapDataToState = (state = initialState, action) => {\n  let existingIdIndex;\n\n  //check for existing mapData on the same page element and edits it\n  const hasMapData = state.filter((element, index) => {\n    if (element.id === action.mapData.id) {\n      existingIdIndex = index;\n      return element;\n    }\n    return undefined;\n  });\n\n  if (hasMapData.length !== 0) {\n    const beforeId = [...state].slice(0, existingIdIndex);\n    const afterId = [...state].slice(existingIdIndex + 1, state.length);\n    const newState = [...beforeId, action.mapData, ...afterId];\n\n    return newState;\n  } else return [...state, action.mapData];\n};\n\nexport default function updateMapData(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${CHANGE_MAP_DATA}`:\n      return action.mapData;\n    case `${GET_MAP_DATA}`:\n      return action.mapData;\n    default:\n      return state;\n  }\n}\n"],"mappings":";AAAA,SAASA,eAAe,EAAEC,YAAY,QAAQ,cAAc;AAE5D,IAAMC,YAAY,GAAG,EAAE;AAEvB,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,GAAqC;EAAA,IAAjCC,KAAK,uEAAGF,YAAY;EAAA,IAAEG,MAAM;EAC5D,IAAIC,eAAe;;EAEnB;EACA,IAAMC,UAAU,GAAGH,KAAK,CAACI,MAAM,CAAC,UAACC,OAAO,EAAEC,KAAK,EAAK;IAClD,IAAID,OAAO,CAACE,EAAE,KAAKN,MAAM,CAACO,OAAO,CAACD,EAAE,EAAE;MACpCL,eAAe,GAAGI,KAAK;MACvB,OAAOD,OAAO;IAChB;IACA,OAAOI,SAAS;EAClB,CAAC,CAAC;EAEF,IAAIN,UAAU,CAACO,MAAM,KAAK,CAAC,EAAE;IAC3B,IAAMC,QAAQ,GAAG,mBAAIX,KAAK,EAAEY,KAAK,CAAC,CAAC,EAAEV,eAAe,CAAC;IACrD,IAAMW,OAAO,GAAG,mBAAIb,KAAK,EAAEY,KAAK,CAACV,eAAe,GAAG,CAAC,EAAEF,KAAK,CAACU,MAAM,CAAC;IACnE,IAAMI,QAAQ,gCAAOH,QAAQ,IAAEV,MAAM,CAACO,OAAO,sBAAKK,OAAO,EAAC;IAE1D,OAAOC,QAAQ;EACjB,CAAC,MAAM,oCAAWd,KAAK,IAAEC,MAAM,CAACO,OAAO;AACzC,CAAC;AAED,eAAe,SAASO,aAAa,GAAoC;EAAA,IAAnCf,KAAK,uEAAGF,YAAY;EAAA,IAAEG,MAAM,uEAAG,CAAC,CAAC;EACrE,QAAQA,MAAM,CAACe,IAAI;IACjB,eAAQpB,eAAe;MACrB,OAAOK,MAAM,CAACO,OAAO;IACvB,eAAQX,YAAY;MAClB,OAAOI,MAAM,CAACO,OAAO;IACvB;MACE,OAAOR,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}