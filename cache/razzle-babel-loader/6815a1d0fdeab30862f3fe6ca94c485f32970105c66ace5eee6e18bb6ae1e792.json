{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _isArray from \"lodash/isArray\";\nvar Config = /*#__PURE__*/function () {\n  function Config() {\n    _classCallCheck(this, Config);\n    if (!Config.instance) {\n      this._data = {};\n      Config.instance = this;\n    }\n    return Config.instance;\n  }\n  _createClass(Config, [{\n    key: \"set\",\n    value: function set(registry, item) {\n      this._data[registry] = item;\n    }\n  }, {\n    key: \"get\",\n    value: function get(registry) {\n      return this._data[registry];\n    }\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._data.settings;\n    },\n    set: function set(settings) {\n      this._data.settings = settings;\n    }\n  }, {\n    key: \"blocks\",\n    get: function get() {\n      return this._data.blocks;\n    },\n    set: function set(blocks) {\n      this._data.blocks = blocks;\n    }\n  }, {\n    key: \"views\",\n    get: function get() {\n      return this._data.views;\n    },\n    set: function set(views) {\n      this._data.views = views;\n    }\n  }, {\n    key: \"widgets\",\n    get: function get() {\n      return this._data.widgets;\n    },\n    set: function set(widgets) {\n      this._data.widgets = widgets;\n    }\n  }, {\n    key: \"addonReducers\",\n    get: function get() {\n      return this._data.addonReducers;\n    },\n    set: function set(addonReducers) {\n      this._data.addonReducers = addonReducers;\n    }\n  }, {\n    key: \"addonRoutes\",\n    get: function get() {\n      return this._data.addonRoutes;\n    },\n    set: function set(addonRoutes) {\n      this._data.addonRoutes = addonRoutes;\n    }\n  }, {\n    key: \"appExtras\",\n    get: function get() {\n      return this._data.appExtras;\n    },\n    set: function set(appExtras) {\n      this._data.appExtras = appExtras;\n    }\n  }, {\n    key: \"slots\",\n    get: function get() {\n      return this._data.slots;\n    },\n    set: function set(slots) {\n      this._data.slots = slots;\n    }\n  }, {\n    key: \"components\",\n    get: function get() {\n      return this._data.components;\n    },\n    set: function set(components) {\n      this._data.components = components;\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(_ref) {\n      var name = _ref.name,\n        _ref$dependencies = _ref.dependencies,\n        dependencies = _ref$dependencies === void 0 ? '' : _ref$dependencies;\n      if (typeof arguments[0] === 'object') {\n        var depsString;\n        if (dependencies && _isArray(dependencies)) {\n          depsString = dependencies.join('+');\n        } else {\n          depsString = dependencies;\n        }\n        var componentName = \"\".concat(name).concat(depsString ? \"|\".concat(depsString) : '');\n        return this._data.components[componentName] || {};\n      } else {\n        // Shortcut notation, accepting a lonely string as argument\n        return this._data.components[arguments[0]] || {};\n      }\n    }\n  }, {\n    key: \"registerComponent\",\n    value: function registerComponent(_ref2) {\n      var name = _ref2.name,\n        component = _ref2.component,\n        _ref2$dependencies = _ref2.dependencies,\n        dependencies = _ref2$dependencies === void 0 ? '' : _ref2$dependencies;\n      var depsString;\n      if (!component) {\n        throw new Error('No component provided');\n      } else {\n        if (dependencies && _isArray(dependencies)) {\n          depsString = dependencies.join('+');\n        } else {\n          depsString = dependencies;\n        }\n        var componentName = \"\".concat(name).concat(depsString ? \"|\".concat(depsString) : '');\n        this._data.components[componentName] = {\n          component: component\n        };\n      }\n    }\n  }]);\n  return Config;\n}();\nvar instance = new Config();\nObject.freeze(instance);\nexport default instance;","map":{"version":3,"names":["Config","instance","_data","registry","item","settings","blocks","views","widgets","addonReducers","addonRoutes","appExtras","slots","components","name","dependencies","arguments","depsString","join","componentName","component","Error","Object","freeze"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/registry.js"],"sourcesContent":["import { isArray } from 'lodash';\n\nclass Config {\n  constructor() {\n    if (!Config.instance) {\n      this._data = {};\n      Config.instance = this;\n    }\n\n    return Config.instance;\n  }\n\n  set(registry, item) {\n    this._data[registry] = item;\n  }\n\n  get(registry) {\n    return this._data[registry];\n  }\n\n  get settings() {\n    return this._data.settings;\n  }\n\n  set settings(settings) {\n    this._data.settings = settings;\n  }\n\n  get blocks() {\n    return this._data.blocks;\n  }\n\n  set blocks(blocks) {\n    this._data.blocks = blocks;\n  }\n\n  get views() {\n    return this._data.views;\n  }\n\n  set views(views) {\n    this._data.views = views;\n  }\n\n  get widgets() {\n    return this._data.widgets;\n  }\n\n  set widgets(widgets) {\n    this._data.widgets = widgets;\n  }\n\n  get addonReducers() {\n    return this._data.addonReducers;\n  }\n\n  set addonReducers(addonReducers) {\n    this._data.addonReducers = addonReducers;\n  }\n\n  get addonRoutes() {\n    return this._data.addonRoutes;\n  }\n\n  set addonRoutes(addonRoutes) {\n    this._data.addonRoutes = addonRoutes;\n  }\n\n  get appExtras() {\n    return this._data.appExtras;\n  }\n\n  set appExtras(appExtras) {\n    this._data.appExtras = appExtras;\n  }\n\n  get slots() {\n    return this._data.slots;\n  }\n\n  set slots(slots) {\n    this._data.slots = slots;\n  }\n\n  get components() {\n    return this._data.components;\n  }\n\n  set components(components) {\n    this._data.components = components;\n  }\n\n  getComponent({ name, dependencies = '' }) {\n    if (typeof arguments[0] === 'object') {\n      let depsString;\n      if (dependencies && isArray(dependencies)) {\n        depsString = dependencies.join('+');\n      } else {\n        depsString = dependencies;\n      }\n      const componentName = `${name}${depsString ? `|${depsString}` : ''}`;\n\n      return this._data.components[componentName] || {};\n    } else {\n      // Shortcut notation, accepting a lonely string as argument\n      return this._data.components[arguments[0]] || {};\n    }\n  }\n\n  registerComponent({ name, component, dependencies = '' }) {\n    let depsString;\n    if (!component) {\n      throw new Error('No component provided');\n    } else {\n      if (dependencies && isArray(dependencies)) {\n        depsString = dependencies.join('+');\n      } else {\n        depsString = dependencies;\n      }\n      const componentName = `${name}${depsString ? `|${depsString}` : ''}`;\n\n      this._data.components[componentName] = { component };\n    }\n  }\n}\n\nconst instance = new Config();\nObject.freeze(instance);\n\nexport default instance;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}