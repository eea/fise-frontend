{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _remove from \"lodash/remove\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/widgets/BlocksBrowser/BlocksBrowserWidget.jsx\";\nvar __jsx = React.createElement;\n/**\n * BlocksBrowserWidget component.\n * @module components/manage/Widgets/BlocksBrowserWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { Label, Popup, Button } from 'semantic-ui-react';\nimport withBlocksBrowser from './BlocksBrowser';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport homeSVG from '@plone/volto/icons/home.svg';\nimport './style.less';\nvar messages = defineMessages({\n  placeholder: {\n    \"id\": \"No items selected\",\n    \"defaultMessage\": \"No items selected\"\n  },\n  edit: {\n    \"id\": \"Edit\",\n    \"defaultMessage\": \"Edit\"\n  },\n  \"delete\": {\n    \"id\": \"Delete\",\n    \"defaultMessage\": \"Delete\"\n  },\n  openObjectBrowser: {\n    \"id\": \"Open object browser\",\n    \"defaultMessage\": \"Open object browser\"\n  }\n});\n\n/**\n * BlocksBrowserWidget component class.\n * @class BlocksBrowserWidget\n * @extends Component\n */\nvar BlocksBrowserWidget = /*#__PURE__*/function (_Component) {\n  _inherits(BlocksBrowserWidget, _Component);\n  var _super = _createSuper(BlocksBrowserWidget);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  function BlocksBrowserWidget(props) {\n    var _this;\n    _classCallCheck(this, BlocksBrowserWidget);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"removeItem\", function (item) {\n      var value = _toConsumableArray(_this.props.value);\n      _remove(value, function (_item) {\n        return _item['id'] === item['id'];\n      });\n      _this.props.onChange(_this.props.id, value);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (item) {\n      var _this$props$widgetOpt, _this$props$widgetOpt2;\n      var value = [];\n      value = value.filter(function (item) {\n        return item != null;\n      });\n      var maxSize = ((_this$props$widgetOpt = _this.props.widgetOptions) === null || _this$props$widgetOpt === void 0 ? void 0 : (_this$props$widgetOpt2 = _this$props$widgetOpt.pattern_options) === null || _this$props$widgetOpt2 === void 0 ? void 0 : _this$props$widgetOpt2.maximumSelectionSize) || -1;\n      if (maxSize === 1 && value.length === 1) {\n        value = []; //enable replace of selected item with another value, if maxsize is 1\n      }\n\n      var exists = false;\n      var index = -1;\n      value.forEach(function (_item, _index) {\n        if (_item['id'] === item['id']) {\n          exists = true;\n          index = _index;\n        }\n      });\n      if (!exists) {\n        // add item\n        // Check if we want to filter the attributes of the selected item\n        var resultantItem = item;\n        if (_this.props.selectedItemAttrs) {\n          var allowedItemKeys = [].concat(_toConsumableArray(_this.props.selectedItemAttrs), [\n          // Add the required attributes for the widget to work\n          'id', 'parentId', 'title', 'type']);\n          resultantItem = Object.keys(item).filter(function (key) {\n            return allowedItemKeys.includes(key);\n          }).reduce(function (obj, key) {\n            obj[key] = item[key];\n            return obj;\n          }, {});\n        }\n        // Add required id field, just in case\n        resultantItem = _objectSpread(_objectSpread({}, resultantItem), {}, {\n          id: item['id']\n        });\n        value.push(resultantItem);\n        _this.props.onChange(_this.props.id, value);\n      } else {\n        //remove item\n        value.splice(index, 1);\n        _this.props.onChange(_this.props.id, value);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"showObjectBrowser\", function (ev) {\n      var _this$props$widgetOpt3, _this$props$widgetOpt4, _this$props$widgetOpt5, _this$props$widgetOpt6;\n      ev.preventDefault();\n      _this.props.openObjectBrowser({\n        onSelectItem: function onSelectItem(item) {\n          _this.onChange(item);\n        },\n        propDataName: 'value',\n        selectableTypes: (_this$props$widgetOpt3 = _this.props.widgetOptions) === null || _this$props$widgetOpt3 === void 0 ? void 0 : (_this$props$widgetOpt4 = _this$props$widgetOpt3.pattern_options) === null || _this$props$widgetOpt4 === void 0 ? void 0 : _this$props$widgetOpt4.selectableTypes,\n        maximumSelectionSize: (_this$props$widgetOpt5 = _this.props.widgetOptions) === null || _this$props$widgetOpt5 === void 0 ? void 0 : (_this$props$widgetOpt6 = _this$props$widgetOpt5.pattern_options) === null || _this$props$widgetOpt6 === void 0 ? void 0 : _this$props$widgetOpt6.maximumSelectionSize\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectedItemsRefClick\", function (e) {\n      if (_this.props.isDisabled) {\n        return;\n      }\n      if (e.target.contains(_this.selectedItemsRef.current) || e.target.contains(_this.placeholderRef.current)) {\n        _this.showObjectBrowser(e);\n      }\n    });\n    _this.selectedItemsRef = /*#__PURE__*/React.createRef();\n    _this.placeholderRef = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n  _createClass(BlocksBrowserWidget, [{\n    key: \"renderLabel\",\n    value: function renderLabel(item) {\n      return __jsx(Popup, {\n        key: item['id'],\n        content: __jsx(React.Fragment, null, __jsx(Icon, {\n          name: homeSVG,\n          size: \"18px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }\n        }), item['id']),\n        trigger: __jsx(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 18\n          }\n        }, item['title']),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value:\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n    function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        id = _this$props.id,\n        description = _this$props.description,\n        fieldSet = _this$props.fieldSet,\n        value = _this$props.value,\n        onChange = _this$props.onChange,\n        isDisabled = _this$props.isDisabled;\n      var icon = clearSVG;\n      var iconAction = function iconAction(e) {\n        e.preventDefault();\n        onChange(id, []);\n      };\n      var items = value ? value.filter(function (item) {\n        return item != null;\n      }) : [];\n      return __jsx(FormFieldWrapper, _extends({}, this.props, {\n        className: description ? 'help text' : 'text',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 7\n        }\n      }), __jsx(\"div\", {\n        className: \"objectbrowser-field\",\n        \"aria-labelledby\": \"fieldset-\".concat(fieldSet, \"-field-label-\").concat(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"selected-values\",\n        onClick: this.handleSelectedItemsRefClick,\n        onKeyDown: this.handleSelectedItemsRefClick,\n        role: \"searchbox\",\n        tabIndex: 0,\n        ref: this.selectedItemsRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }\n      }, items.map(function (item) {\n        return _this2.renderLabel(item);\n      }), items.length === 0 && __jsx(\"div\", {\n        className: \"placeholder\",\n        ref: this.placeholderRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }\n      }, this.props.intl.formatMessage(messages.placeholder))), __jsx(Button, {\n        \"aria-label\": this.props.intl.formatMessage(messages.openObjectBrowser),\n        onClick: iconAction,\n        className: \"action\",\n        disabled: isDisabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }\n      }, __jsx(Icon, {\n        name: icon,\n        size: \"18px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n  return BlocksBrowserWidget;\n}(Component);\n_defineProperty(BlocksBrowserWidget, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.object]),\n  onChange: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired\n});\n_defineProperty(BlocksBrowserWidget, \"defaultProps\", {\n  description: null,\n  required: false,\n  error: [],\n  value: []\n});\nexport default compose(injectIntl, withBlocksBrowser)(BlocksBrowserWidget);","map":{"version":3,"names":["React","Component","PropTypes","compose","Label","Popup","Button","withBlocksBrowser","defineMessages","injectIntl","Icon","FormFieldWrapper","clearSVG","homeSVG","messages","placeholder","edit","openObjectBrowser","BlocksBrowserWidget","props","item","value","_item","onChange","id","filter","maxSize","widgetOptions","pattern_options","maximumSelectionSize","length","exists","index","forEach","_index","resultantItem","selectedItemAttrs","allowedItemKeys","Object","keys","key","includes","reduce","obj","push","splice","ev","preventDefault","onSelectItem","propDataName","selectableTypes","e","isDisabled","target","contains","selectedItemsRef","current","placeholderRef","showObjectBrowser","createRef","description","fieldSet","icon","iconAction","items","handleSelectedItemsRefClick","map","renderLabel","intl","formatMessage","string","isRequired","title","required","bool","error","arrayOf","oneOfType","object","func"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/widgets/BlocksBrowser/BlocksBrowserWidget.jsx"],"sourcesContent":["/**\n * BlocksBrowserWidget component.\n * @module components/manage/Widgets/BlocksBrowserWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { remove } from 'lodash';\n\nimport { Label, Popup, Button } from 'semantic-ui-react';\nimport withBlocksBrowser from './BlocksBrowser';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport homeSVG from '@plone/volto/icons/home.svg';\n\nimport './style.less';\n\nconst messages = defineMessages({\n  placeholder: {\n    id: 'No items selected',\n    defaultMessage: 'No items selected',\n  },\n  edit: {\n    id: 'Edit',\n    defaultMessage: 'Edit',\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n  openObjectBrowser: {\n    id: 'Open object browser',\n    defaultMessage: 'Open object browser',\n  },\n});\n\n/**\n * BlocksBrowserWidget component class.\n * @class BlocksBrowserWidget\n * @extends Component\n */\nclass BlocksBrowserWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.object),\n      PropTypes.object,\n    ]),\n    onChange: PropTypes.func.isRequired,\n    openObjectBrowser: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: [],\n  };\n\n  constructor(props) {\n    super(props);\n    this.selectedItemsRef = React.createRef();\n    this.placeholderRef = React.createRef();\n  }\n  renderLabel(item) {\n    return (\n      <Popup\n        key={item['id']}\n        content={\n          <>\n            <Icon name={homeSVG} size=\"18px\" />\n            {item['id']}\n          </>\n        }\n        trigger={<Label>{item['title']}</Label>}\n      />\n    );\n  }\n\n  removeItem = (item) => {\n    let value = [...this.props.value];\n    remove(value, function (_item) {\n      return _item['id'] === item['id'];\n    });\n    this.props.onChange(this.props.id, value);\n  };\n\n  onChange = (item) => {\n    let value = [];\n    value = value.filter((item) => item != null);\n    const maxSize =\n      this.props.widgetOptions?.pattern_options?.maximumSelectionSize || -1;\n    if (maxSize === 1 && value.length === 1) {\n      value = []; //enable replace of selected item with another value, if maxsize is 1\n    }\n    let exists = false;\n    let index = -1;\n    value.forEach((_item, _index) => {\n      if (_item['id'] === item['id']) {\n        exists = true;\n        index = _index;\n      }\n    });\n    if (!exists) {\n      // add item\n      // Check if we want to filter the attributes of the selected item\n      let resultantItem = item;\n      if (this.props.selectedItemAttrs) {\n        const allowedItemKeys = [\n          ...this.props.selectedItemAttrs,\n          // Add the required attributes for the widget to work\n          'id',\n          'parentId',\n          'title',\n          'type',\n        ];\n        resultantItem = Object.keys(item)\n          .filter((key) => allowedItemKeys.includes(key))\n          .reduce((obj, key) => {\n            obj[key] = item[key];\n            return obj;\n          }, {});\n      }\n      // Add required id field, just in case\n      resultantItem = { ...resultantItem, id: item['id'] };\n      value.push(resultantItem);\n      this.props.onChange(this.props.id, value);\n    } else {\n      //remove item\n      value.splice(index, 1);\n      this.props.onChange(this.props.id, value);\n    }\n  };\n\n  showObjectBrowser = (ev) => {\n    ev.preventDefault();\n    this.props.openObjectBrowser({\n      onSelectItem: (item) => {\n        this.onChange(item);\n      },\n      propDataName: 'value',\n      selectableTypes: this.props.widgetOptions?.pattern_options\n        ?.selectableTypes,\n      maximumSelectionSize: this.props.widgetOptions?.pattern_options\n        ?.maximumSelectionSize,\n    });\n  };\n\n  handleSelectedItemsRefClick = (e) => {\n    if (this.props.isDisabled) {\n      return;\n    }\n\n    if (\n      e.target.contains(this.selectedItemsRef.current) ||\n      e.target.contains(this.placeholderRef.current)\n    ) {\n      this.showObjectBrowser(e);\n    }\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      description,\n      fieldSet,\n      value,\n      onChange,\n      isDisabled,\n    } = this.props;\n\n    let icon = clearSVG;\n    let iconAction = (e) => {\n      e.preventDefault();\n      onChange(id, []);\n    };\n\n    let items = value ? value.filter((item) => item != null) : [];\n\n    return (\n      <FormFieldWrapper\n        {...this.props}\n        className={description ? 'help text' : 'text'}\n      >\n        <div\n          className=\"objectbrowser-field\"\n          aria-labelledby={`fieldset-${fieldSet}-field-label-${id}`}\n        >\n          <div\n            className=\"selected-values\"\n            onClick={this.handleSelectedItemsRefClick}\n            onKeyDown={this.handleSelectedItemsRefClick}\n            role=\"searchbox\"\n            tabIndex={0}\n            ref={this.selectedItemsRef}\n          >\n            {items.map((item) => this.renderLabel(item))}\n\n            {items.length === 0 && (\n              <div className=\"placeholder\" ref={this.placeholderRef}>\n                {this.props.intl.formatMessage(messages.placeholder)}\n              </div>\n            )}\n          </div>\n\n          <Button\n            aria-label={this.props.intl.formatMessage(\n              messages.openObjectBrowser,\n            )}\n            onClick={iconAction}\n            className=\"action\"\n            disabled={isDisabled}\n          >\n            <Icon name={icon} size=\"18px\" />\n          </Button>\n        </div>\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default compose(injectIntl, withBlocksBrowser)(BlocksBrowserWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"No items selected","defaultMessage":"No items selected"},{"id":"Edit","defaultMessage":"Edit"},{"id":"Delete","defaultMessage":"Delete"},{"id":"Open object browser","defaultMessage":"Open object browser"}]}},"sourceType":"module","externalDependencies":[]}