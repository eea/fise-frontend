{"ast":null,"code":"const _excluded = [\"item\", \"preview_image_url\", \"preview_image\", \"size\", \"label\"];\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-listing-block/src/PreviewImage.js\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n// TODO: see if possible to replace with Volto's PreviewImage component\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Image } from 'semantic-ui-react';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport DefaultImageSVG from './default-image.svg';\nconst getSrc = (item, size) => flattenToAppURL(`${item['@id']}/@@images/${item.image_field}/${size}`);\n\n// TODO: do we still need volto-depiction compatibility?\n// import DefaultImageSVG from '@plone/volto/components/manage/Blocks/Listing/default-image.svg';\n// const makeImage = (item, style) => (\n//   <img\n//     style={style}\n//     src={\n//       item[settings.listingPreviewImageField]\n//         ? flattenToAppURL(\n//             item[settings.listingPreviewImageField].scales.preview.download,\n//           )\n//         : settings.depiction\n//         ? flattenToAppURL(item['@id'] + settings.depiction)\n//         : DefaultImageSVG\n//     }\n//     alt={item.title}\n//   />\n// );\n\n/**\n * Renders a preview image for a catalog brain result item.\n *\n */\nfunction PreviewImage(props) {\n  const {\n      item,\n      preview_image_url,\n      preview_image,\n      size = 'preview',\n      label\n    } = props,\n    rest = _objectWithoutProperties(props, _excluded);\n  const src = preview_image !== null && preview_image !== void 0 && preview_image[0] ? getSrc(preview_image[0], size) : item.image_field ? getSrc(item, size) : DefaultImageSVG;\n  return __jsx(Image, _extends({\n    src: preview_image_url || src,\n    alt: item.title\n  }, rest, {\n    label: label ? {\n      as: 'a',\n      ribbon: label.side,\n      content: label.text,\n      color: label.color\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }));\n}\nPreviewImage.propTypes = {\n  size: PropTypes.string,\n  item: PropTypes.shape({\n    '@id': PropTypes.string.isRequired,\n    image_field: PropTypes.string,\n    title: PropTypes.string.isRequired\n  })\n};\nexport default PreviewImage;","map":{"version":3,"names":["React","PropTypes","Image","flattenToAppURL","DefaultImageSVG","getSrc","item","size","image_field","PreviewImage","props","preview_image_url","preview_image","label","rest","src","title","as","ribbon","side","content","text","color","propTypes","string","shape","isRequired"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-listing-block/src/PreviewImage.js"],"sourcesContent":["// TODO: see if possible to replace with Volto's PreviewImage component\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Image } from 'semantic-ui-react';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport DefaultImageSVG from './default-image.svg';\n\nconst getSrc = (item, size) =>\n  flattenToAppURL(`${item['@id']}/@@images/${item.image_field}/${size}`);\n\n// TODO: do we still need volto-depiction compatibility?\n// import DefaultImageSVG from '@plone/volto/components/manage/Blocks/Listing/default-image.svg';\n// const makeImage = (item, style) => (\n//   <img\n//     style={style}\n//     src={\n//       item[settings.listingPreviewImageField]\n//         ? flattenToAppURL(\n//             item[settings.listingPreviewImageField].scales.preview.download,\n//           )\n//         : settings.depiction\n//         ? flattenToAppURL(item['@id'] + settings.depiction)\n//         : DefaultImageSVG\n//     }\n//     alt={item.title}\n//   />\n// );\n\n/**\n * Renders a preview image for a catalog brain result item.\n *\n */\nfunction PreviewImage(props) {\n  const {\n    item,\n    preview_image_url,\n    preview_image,\n    size = 'preview',\n    label,\n    ...rest\n  } = props;\n  const src = preview_image?.[0]\n    ? getSrc(preview_image[0], size)\n    : item.image_field\n    ? getSrc(item, size)\n    : DefaultImageSVG;\n\n  return (\n    <Image\n      src={preview_image_url || src}\n      alt={item.title}\n      {...rest}\n      label={\n        label\n          ? {\n              as: 'a',\n              ribbon: label.side,\n              content: label.text,\n              color: label.color,\n            }\n          : null\n      }\n    />\n  );\n}\n\nPreviewImage.propTypes = {\n  size: PropTypes.string,\n  item: PropTypes.shape({\n    '@id': PropTypes.string.isRequired,\n    image_field: PropTypes.string,\n    title: PropTypes.string.isRequired,\n  }),\n};\n\nexport default PreviewImage;\n"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,KAAK,QAAQ,mBAAmB;AACzC,SAASC,eAAe,QAAQ,sBAAsB;AAEtD,OAAOC,eAAe,MAAM,qBAAqB;AAEjD,MAAMC,MAAM,GAAG,CAACC,IAAI,EAAEC,IAAI,KACxBJ,eAAe,CAAE,GAAEG,IAAI,CAAC,KAAK,CAAE,aAAYA,IAAI,CAACE,WAAY,IAAGD,IAAK,EAAC,CAAC;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAASE,YAAY,CAACC,KAAK,EAAE;EAC3B,MAAM;MACJJ,IAAI;MACJK,iBAAiB;MACjBC,aAAa;MACbL,IAAI,GAAG,SAAS;MAChBM;IAEF,CAAC,GAAGH,KAAK;IADJI,IAAI,4BACLJ,KAAK;EACT,MAAMK,GAAG,GAAGH,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAG,CAAC,CAAC,GAC1BP,MAAM,CAACO,aAAa,CAAC,CAAC,CAAC,EAAEL,IAAI,CAAC,GAC9BD,IAAI,CAACE,WAAW,GAChBH,MAAM,CAACC,IAAI,EAAEC,IAAI,CAAC,GAClBH,eAAe;EAEnB,OACE,MAAC,KAAK;IACJ,GAAG,EAAEO,iBAAiB,IAAII,GAAI;IAC9B,GAAG,EAAET,IAAI,CAACU;EAAM,GACZF,IAAI;IACR,KAAK,EACHD,KAAK,GACD;MACEI,EAAE,EAAE,GAAG;MACPC,MAAM,EAAEL,KAAK,CAACM,IAAI;MAClBC,OAAO,EAAEP,KAAK,CAACQ,IAAI;MACnBC,KAAK,EAAET,KAAK,CAACS;IACf,CAAC,GACD,IACL;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACD;AAEN;AAEAb,YAAY,CAACc,SAAS,GAAG;EACvBhB,IAAI,EAAEN,SAAS,CAACuB,MAAM;EACtBlB,IAAI,EAAEL,SAAS,CAACwB,KAAK,CAAC;IACpB,KAAK,EAAExB,SAAS,CAACuB,MAAM,CAACE,UAAU;IAClClB,WAAW,EAAEP,SAAS,CAACuB,MAAM;IAC7BR,KAAK,EAAEf,SAAS,CAACuB,MAAM,CAACE;EAC1B,CAAC;AACH,CAAC;AAED,eAAejB,YAAY"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}