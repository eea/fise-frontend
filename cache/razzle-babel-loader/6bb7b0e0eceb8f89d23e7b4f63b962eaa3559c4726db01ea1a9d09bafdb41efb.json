{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _uniq from \"lodash/uniq\";\nimport _union from \"lodash/union\";\nimport _map from \"lodash/map\";\nimport _keys from \"lodash/keys\";\nimport _concat from \"lodash/concat\";\nimport _compact from \"lodash/compact\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/IdWidget.jsx\";\nvar __jsx = React.createElement;\n/**\n * IdWidget component.\n * @module components/manage/Widgets/IdWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Input } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Icon, FormFieldWrapper } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nimport { getQuerystring } from '@plone/volto/actions';\nvar messages = defineMessages({\n  reservedId: {\n    \"id\": \"This is a reserved name and can't be used\",\n    \"defaultMessage\": \"This is a reserved name and can't be used\"\n  },\n  invalidCharacters: {\n    \"id\": \"Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \\\"-\\\", \\\"_\\\", and \\\".\\\" are allowed.\",\n    \"defaultMessage\": \"Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \\\"-\\\", \\\"_\\\", and \\\".\\\" are allowed.\"\n  }\n});\n\n/**\n * The id widget.\n *\n * This is the id widget to handle for example the short name field.\n */\nvar IdWidget = /*#__PURE__*/function (_Component) {\n  _inherits(IdWidget, _Component);\n  var _super = _createSuper(IdWidget);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Actions\n   */\n  function IdWidget(props) {\n    var _this;\n    _classCallCheck(this, IdWidget);\n    _this = _super.call(this, props);\n    _this.state = {\n      error: [],\n      reservedIds: _compact(_uniq(_union(config.settings.reservedIds, _map(config.settings.nonContentRoutes, function (route) {\n        return String(route).replace(/[^a-z-]/g, '');\n      }))))\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_this));\n    _this.fieldValidation = _this.fieldValidation.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(IdWidget, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.focus) {\n        this.node.focus();\n      }\n      this.props.getQuerystring();\n      this.fieldValidation(this.props.value);\n    }\n\n    /**\n     * Field validation.\n     * @method fieldValidation\n     * @param {string} value New value\n     * @returns {undefined}\n     */\n  }, {\n    key: \"fieldValidation\",\n    value: function fieldValidation(value) {\n      var error = [];\n\n      // Check reserved id's\n      if (this.state.reservedIds.indexOf(value) !== -1) {\n        error.push(this.props.intl.formatMessage(messages.reservedId));\n      }\n\n      // Check invalid characters\n      if (!/^[.a-z0-9_-]*$/.test(value)) {\n        error.push(this.props.intl.formatMessage(messages.invalidCharacters));\n      }\n\n      // Check indexes\n      if (this.props.indexes.indexOf(value) !== -1) {\n        error.push(this.props.intl.formatMessage(messages.reservedId));\n      }\n      this.setState({\n        error: error\n      });\n    }\n\n    /**\n     * Handle the field change.\n     * @method handleChange\n     * @param {Object} event Event object\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(_ref) {\n      var target = _ref.target;\n      this.fieldValidation(target.value);\n      this.props.onChange(this.props.id, target.value === '' ? undefined : target.value);\n    }\n\n    /**\n     * Handle the field blur.\n     * @method handleBlur\n     * @param {Object} event Event object\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(_ref2) {\n      var target = _ref2.target;\n      this.fieldValidation(target.value);\n      this.props.onBlur(this.props.id, target.value === '' ? undefined : target.value);\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        id = _this$props.id,\n        value = _this$props.value,\n        _onClick = _this$props.onClick,\n        icon = _this$props.icon,\n        iconAction = _this$props.iconAction,\n        minLength = _this$props.minLength,\n        maxLength = _this$props.maxLength,\n        placeholder = _this$props.placeholder;\n      var props = _objectSpread(_objectSpread({}, this.props), {}, {\n        error: _concat(this.props.error, this.state.error)\n      });\n      return __jsx(FormFieldWrapper, _extends({}, props, {\n        className: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 7\n        }\n      }), __jsx(Input, {\n        id: \"field-\".concat(id),\n        name: id,\n        value: value || '',\n        disabled: this.props.isDisabled,\n        icon: icon || null,\n        placeholder: placeholder,\n        onChange: this.handleChange,\n        onBlur: this.handleBlur,\n        onClick: function onClick() {\n          return _onClick();\n        },\n        ref: function ref(node) {\n          _this2.node = node;\n        },\n        minLength: minLength || null,\n        maxLength: maxLength || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }\n      }), icon && iconAction && __jsx(\"button\", {\n        className: \"field-\".concat(id, \"-action-button\"),\n        onClick: iconAction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }\n      }, __jsx(Icon, {\n        name: icon,\n        size: \"18px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return IdWidget;\n}(Component);\n_defineProperty(IdWidget, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  focus: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  icon: PropTypes.shape({\n    xmlns: PropTypes.string,\n    viewBox: PropTypes.string,\n    content: PropTypes.string\n  }),\n  iconAction: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string\n});\n_defineProperty(IdWidget, \"defaultProps\", {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: function onChange() {},\n  onBlur: function onBlur() {},\n  onClick: function onClick() {},\n  onEdit: null,\n  onDelete: null,\n  focus: false,\n  icon: null,\n  iconAction: null,\n  minLength: null,\n  maxLength: null\n});\nexport default compose(injectIntl, connect(function (state, props) {\n  return {\n    indexes: _keys(state.querystring.indexes)\n  };\n}, {\n  getQuerystring: getQuerystring\n}))(IdWidget);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Input","defineMessages","injectIntl","Icon","FormFieldWrapper","config","getQuerystring","messages","reservedId","invalidCharacters","IdWidget","props","state","error","reservedIds","settings","nonContentRoutes","route","String","replace","handleChange","bind","handleBlur","fieldValidation","focus","node","value","indexOf","push","intl","formatMessage","test","indexes","setState","target","onChange","id","undefined","onBlur","onClick","icon","iconAction","minLength","maxLength","placeholder","isDisabled","string","isRequired","title","description","required","bool","arrayOf","func","onEdit","onDelete","shape","xmlns","viewBox","content","number","wrapped","querystring"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/IdWidget.jsx"],"sourcesContent":["/**\n * IdWidget component.\n * @module components/manage/Widgets/IdWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Input } from 'semantic-ui-react';\nimport { compact, concat, keys, map, union, uniq } from 'lodash';\n\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Icon, FormFieldWrapper } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nimport { getQuerystring } from '@plone/volto/actions';\n\nconst messages = defineMessages({\n  reservedId: {\n    id: \"This is a reserved name and can't be used\",\n    defaultMessage: \"This is a reserved name and can't be used\",\n  },\n  invalidCharacters: {\n    id:\n      'Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \"-\", \"_\", and \".\" are allowed.',\n    defaultMessage:\n      'Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \"-\", \"_\", and \".\" are allowed.',\n  },\n});\n\n/**\n * The id widget.\n *\n * This is the id widget to handle for example the short name field.\n */\nclass IdWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.string,\n    focus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    onClick: PropTypes.func,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n    icon: PropTypes.shape({\n      xmlns: PropTypes.string,\n      viewBox: PropTypes.string,\n      content: PropTypes.string,\n    }),\n    iconAction: PropTypes.func,\n    minLength: PropTypes.number,\n    maxLength: PropTypes.number,\n    wrapped: PropTypes.bool,\n    placeholder: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: null,\n    onChange: () => {},\n    onBlur: () => {},\n    onClick: () => {},\n    onEdit: null,\n    onDelete: null,\n    focus: false,\n    icon: null,\n    iconAction: null,\n    minLength: null,\n    maxLength: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Actions\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: [],\n      reservedIds: compact(\n        uniq(\n          union(\n            config.settings.reservedIds,\n            map(config.settings.nonContentRoutes, (route) =>\n              String(route).replace(/[^a-z-]/g, ''),\n            ),\n          ),\n        ),\n      ),\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.fieldValidation = this.fieldValidation.bind(this);\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n    this.props.getQuerystring();\n    this.fieldValidation(this.props.value);\n  }\n\n  /**\n   * Field validation.\n   * @method fieldValidation\n   * @param {string} value New value\n   * @returns {undefined}\n   */\n  fieldValidation(value) {\n    const error = [];\n\n    // Check reserved id's\n    if (this.state.reservedIds.indexOf(value) !== -1) {\n      error.push(this.props.intl.formatMessage(messages.reservedId));\n    }\n\n    // Check invalid characters\n    if (!/^[.a-z0-9_-]*$/.test(value)) {\n      error.push(this.props.intl.formatMessage(messages.invalidCharacters));\n    }\n\n    // Check indexes\n    if (this.props.indexes.indexOf(value) !== -1) {\n      error.push(this.props.intl.formatMessage(messages.reservedId));\n    }\n\n    this.setState({ error });\n  }\n\n  /**\n   * Handle the field change.\n   * @method handleChange\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  handleChange({ target }) {\n    this.fieldValidation(target.value);\n    this.props.onChange(\n      this.props.id,\n      target.value === '' ? undefined : target.value,\n    );\n  }\n\n  /**\n   * Handle the field blur.\n   * @method handleBlur\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  handleBlur({ target }) {\n    this.fieldValidation(target.value);\n    this.props.onBlur(\n      this.props.id,\n      target.value === '' ? undefined : target.value,\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      value,\n      onClick,\n      icon,\n      iconAction,\n      minLength,\n      maxLength,\n      placeholder,\n    } = this.props;\n\n    const props = {\n      ...this.props,\n      error: concat(this.props.error, this.state.error),\n    };\n\n    return (\n      <FormFieldWrapper {...props} className=\"text\">\n        <Input\n          id={`field-${id}`}\n          name={id}\n          value={value || ''}\n          disabled={this.props.isDisabled}\n          icon={icon || null}\n          placeholder={placeholder}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onClick={() => onClick()}\n          ref={(node) => {\n            this.node = node;\n          }}\n          minLength={minLength || null}\n          maxLength={maxLength || null}\n        />\n        {icon && iconAction && (\n          <button className={`field-${id}-action-button`} onClick={iconAction}>\n            <Icon name={icon} size=\"18px\" />\n          </button>\n        )}\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      indexes: keys(state.querystring.indexes),\n    }),\n    {\n      getQuerystring,\n    },\n  ),\n)(IdWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"This is a reserved name and can't be used","defaultMessage":"This is a reserved name and can't be used"},{"id":"Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \"-\", \"_\", and \".\" are allowed.","defaultMessage":"Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \"-\", \"_\", and \".\" are allowed."}]}},"sourceType":"module","externalDependencies":[]}