{"ast":null,"code":"import _omit from \"lodash/omit\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport { QUICK_RESET_SEARCH_CONTENT, QUICK_SEARCH_CONTENT } from '../constants';\nconst initialState = {\n  error: null,\n  items: [],\n  total: 0,\n  loaded: false,\n  loading: false,\n  batching: {},\n  subrequests: {}\n};\n\n/**\n * Search reducer.\n * @function search\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function search(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${QUICK_SEARCH_CONTENT}_PENDING`:\n      return action.subrequest ? _objectSpread(_objectSpread({}, state), {}, {\n        subrequests: _objectSpread(_objectSpread({}, state.subrequests), {}, {\n          [action.subrequest]: _objectSpread(_objectSpread({}, state.subrequests[action.subrequest] || {\n            items: [],\n            total: 0,\n            batching: {}\n          }), {}, {\n            error: null,\n            loaded: false,\n            loading: true\n          })\n        })\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loading: true,\n        loaded: false\n      });\n    case `${QUICK_SEARCH_CONTENT}_SUCCESS`:\n      const items = action.result.items.filter(item => {\n        item['@id'] = flattenToAppURL(item['@id']);\n        let ok = true;\n        action.filters && Object.entries(action.filters).forEach(([filterKey, filter]) => {\n          if (!filter.includes(item[filterKey])) {\n            ok = false;\n          }\n        });\n        return ok;\n      });\n      return action.subrequest ? _objectSpread(_objectSpread({}, state), {}, {\n        subrequests: _objectSpread(_objectSpread({}, state.subrequests), {}, {\n          [action.subrequest]: {\n            error: null,\n            items: items,\n            total: action.result.items_total,\n            loaded: true,\n            loading: false,\n            batching: _objectSpread({}, action.result.batching)\n          }\n        })\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        items: items,\n        total: action.result.items_total,\n        loaded: true,\n        loading: false,\n        batching: _objectSpread({}, action.result.batching)\n      });\n    case `${QUICK_SEARCH_CONTENT}_FAIL`:\n      return action.subrequest ? _objectSpread(_objectSpread({}, state), {}, {\n        subrequests: _objectSpread(_objectSpread({}, state.subrequests), {}, {\n          [action.subrequest]: {\n            error: action.error,\n            items: [],\n            total: 0,\n            loading: false,\n            loaded: false,\n            batching: {}\n          }\n        })\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        items: [],\n        total: 0,\n        loading: false,\n        loaded: false,\n        batching: {}\n      });\n    case QUICK_RESET_SEARCH_CONTENT:\n      return action.subrequest ? _objectSpread(_objectSpread({}, state), {}, {\n        subrequests: _omit(state.subrequests, [action.subrequest])\n      }) : _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        items: [],\n        total: 0,\n        loading: false,\n        loaded: false,\n        batching: {}\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["flattenToAppURL","QUICK_RESET_SEARCH_CONTENT","QUICK_SEARCH_CONTENT","initialState","error","items","total","loaded","loading","batching","subrequests","search","state","action","type","subrequest","result","filter","item","ok","filters","Object","entries","forEach","filterKey","includes","items_total"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/reducers/quicksearch.js"],"sourcesContent":["/**\n * Search reducer.\n * @module reducers/search/search\n */\n\nimport { omit } from 'lodash';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport { QUICK_RESET_SEARCH_CONTENT, QUICK_SEARCH_CONTENT } from '../constants';\n\nconst initialState = {\n  error: null,\n  items: [],\n  total: 0,\n  loaded: false,\n  loading: false,\n  batching: {},\n  subrequests: {},\n};\n\n/**\n * Search reducer.\n * @function search\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function search(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${QUICK_SEARCH_CONTENT}_PENDING`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                ...(state.subrequests[action.subrequest] || {\n                  items: [],\n                  total: 0,\n                  batching: {},\n                }),\n                error: null,\n                loaded: false,\n                loading: true,\n              },\n            },\n          }\n        : {\n            ...state,\n            error: null,\n            loading: true,\n            loaded: false,\n          };\n    case `${QUICK_SEARCH_CONTENT}_SUCCESS`:\n      const items = action.result.items.filter((item) => {\n        item['@id'] = flattenToAppURL(item['@id']);\n        let ok = true;\n        action.filters &&\n          Object.entries(action.filters).forEach(([filterKey, filter]) => {\n            if (!filter.includes(item[filterKey])) {\n              ok = false;\n            }\n          });\n        return ok;\n      });\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                error: null,\n                items: items,\n                total: action.result.items_total,\n                loaded: true,\n                loading: false,\n                batching: { ...action.result.batching },\n              },\n            },\n          }\n        : {\n            ...state,\n            error: null,\n            items: items,\n            total: action.result.items_total,\n            loaded: true,\n            loading: false,\n            batching: { ...action.result.batching },\n          };\n    case `${QUICK_SEARCH_CONTENT}_FAIL`:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: {\n              ...state.subrequests,\n              [action.subrequest]: {\n                error: action.error,\n                items: [],\n                total: 0,\n                loading: false,\n                loaded: false,\n                batching: {},\n              },\n            },\n          }\n        : {\n            ...state,\n            error: action.error,\n            items: [],\n            total: 0,\n            loading: false,\n            loaded: false,\n            batching: {},\n          };\n    case QUICK_RESET_SEARCH_CONTENT:\n      return action.subrequest\n        ? {\n            ...state,\n            subrequests: omit(state.subrequests, [action.subrequest]),\n          }\n        : {\n            ...state,\n            error: null,\n            items: [],\n            total: 0,\n            loading: false,\n            loaded: false,\n            batching: {},\n          };\n    default:\n      return state;\n  }\n}\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}