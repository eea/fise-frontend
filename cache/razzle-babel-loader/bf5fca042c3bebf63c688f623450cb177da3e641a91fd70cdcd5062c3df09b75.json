{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/View/TabularView.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\n/**\n * Tabular view component.\n * @module components/theme/View/TabularView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { UniversalLink } from '@plone/volto/components';\nimport { Container, Table } from 'semantic-ui-react';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * Tabular view component class.\n * @function TabularView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\nvar TabularView = function TabularView(_ref) {\n  var content = _ref.content;\n  return __jsx(Container, {\n    className: \"view-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, __jsx(\"article\", {\n    id: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"documentFirstHeading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, content.title), content.description && __jsx(\"p\", {\n    className: \"documentDescription\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, content.description)), __jsx(\"section\", {\n    id: \"content-core\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Table, {\n    celled: true,\n    padded: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(Table.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, __jsx(Table.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Table.HeaderCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Title\",\n    defaultMessage: \"Title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })), __jsx(Table.HeaderCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Description\",\n    defaultMessage: \"Description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), __jsx(Table.HeaderCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Type\",\n    defaultMessage: \"Type\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), __jsx(Table.HeaderCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"State\",\n    defaultMessage: \"State\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })))), __jsx(Table.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, content.items.map(function (item) {\n    return __jsx(Table.Row, {\n      key: item.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, __jsx(UniversalLink, {\n      item: item,\n      className: \"summary url\",\n      title: item['@type'],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, item.title)), __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, item.description), __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, item['@type']), __jsx(Table.Cell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, item.review_state));\n  }))))));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = TabularView;\nTabularView.propTypes = {\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Child items of the object\n     */\n    items: PropTypes.arrayOf(PropTypes.shape({\n      /**\n       * Title of the item\n       */\n      title: PropTypes.string,\n      /**\n       * Description of the item\n       */\n      description: PropTypes.string,\n      /**\n       * Url of the item\n       */\n      url: PropTypes.string,\n      /**\n       * Review state of the item\n       */\n      review_state: PropTypes.string,\n      /**\n       * Type of the item\n       */\n      '@type': PropTypes.string\n    }))\n  }).isRequired\n};\nexport default TabularView;\nvar _c;\n$RefreshReg$(_c, \"TabularView\");","map":{"version":3,"names":["React","PropTypes","UniversalLink","Container","Table","FormattedMessage","TabularView","content","title","description","items","map","item","url","review_state","propTypes","shape","string","arrayOf","isRequired"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/View/TabularView.jsx"],"sourcesContent":["/**\n * Tabular view component.\n * @module components/theme/View/TabularView\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { UniversalLink } from '@plone/volto/components';\nimport { Container, Table } from 'semantic-ui-react';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * Tabular view component class.\n * @function TabularView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\nconst TabularView = ({ content }) => (\n  <Container className=\"view-wrapper\">\n    <article id=\"content\">\n      <header>\n        <h1 className=\"documentFirstHeading\">{content.title}</h1>\n        {content.description && (\n          <p className=\"documentDescription\">{content.description}</p>\n        )}\n      </header>\n      <section id=\"content-core\">\n        <Table celled padded>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>\n                <FormattedMessage id=\"Title\" defaultMessage=\"Title\" />\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <FormattedMessage\n                  id=\"Description\"\n                  defaultMessage=\"Description\"\n                />\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <FormattedMessage id=\"Type\" defaultMessage=\"Type\" />\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <FormattedMessage id=\"State\" defaultMessage=\"State\" />\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {content.items.map((item) => (\n              <Table.Row key={item.url}>\n                <Table.Cell>\n                  <UniversalLink\n                    item={item}\n                    className=\"summary url\"\n                    title={item['@type']}\n                  >\n                    {item.title}\n                  </UniversalLink>\n                </Table.Cell>\n                <Table.Cell>{item.description}</Table.Cell>\n                <Table.Cell>{item['@type']}</Table.Cell>\n                <Table.Cell>{item.review_state}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </section>\n    </article>\n  </Container>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nTabularView.propTypes = {\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Child items of the object\n     */\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        /**\n         * Title of the item\n         */\n        title: PropTypes.string,\n        /**\n         * Description of the item\n         */\n        description: PropTypes.string,\n        /**\n         * Url of the item\n         */\n        url: PropTypes.string,\n        /**\n         * Review state of the item\n         */\n        review_state: PropTypes.string,\n        /**\n         * Type of the item\n         */\n        '@type': PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n};\n\nexport default TabularView;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Title","defaultMessage":"Title"},{"id":"Description","defaultMessage":"Description"},{"id":"Type","defaultMessage":"Type"},{"id":"State","defaultMessage":"State"}]}},"sourceType":"module","externalDependencies":[]}