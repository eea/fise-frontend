{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Types reducer.\n * @module reducers/types/types\n */\n\nimport { GET_TYPES } from '@plone/volto/constants/ActionTypes';\nvar initialState = {\n  error: null,\n  loaded: false,\n  loading: false,\n  types: []\n};\n\n/**\n * Types reducer.\n * @function types\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function types() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case \"\".concat(GET_TYPES, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loading: true,\n        loaded: false\n      });\n    case \"\".concat(GET_TYPES, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loading: false,\n        loaded: true,\n        types: action.result\n      });\n    case \"\".concat(GET_TYPES, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        loading: false,\n        loaded: false,\n        types: []\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_TYPES","initialState","error","loaded","loading","types","state","action","type","result"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/types/types.js"],"sourcesContent":["/**\n * Types reducer.\n * @module reducers/types/types\n */\n\nimport { GET_TYPES } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  loaded: false,\n  loading: false,\n  types: [],\n};\n\n/**\n * Types reducer.\n * @function types\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function types(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_TYPES}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loading: true,\n        loaded: false,\n      };\n    case `${GET_TYPES}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        loading: false,\n        loaded: true,\n        types: action.result,\n      };\n    case `${GET_TYPES}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n        loaded: false,\n        types: [],\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,QAAQ,oCAAoC;AAE9D,IAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,KAAK,GAAoC;EAAA,IAAnCC,KAAK,uEAAGL,YAAY;EAAA,IAAEM,MAAM,uEAAG,CAAC,CAAC;EAC7D,QAAQA,MAAM,CAACC,IAAI;IACjB,eAAQR,SAAS;MACf,uCACKM,KAAK;QACRJ,KAAK,EAAE,IAAI;QACXE,OAAO,EAAE,IAAI;QACbD,MAAM,EAAE;MAAK;IAEjB,eAAQH,SAAS;MACf,uCACKM,KAAK;QACRJ,KAAK,EAAE,IAAI;QACXE,OAAO,EAAE,KAAK;QACdD,MAAM,EAAE,IAAI;QACZE,KAAK,EAAEE,MAAM,CAACE;MAAM;IAExB,eAAQT,SAAS;MACf,uCACKM,KAAK;QACRJ,KAAK,EAAEK,MAAM,CAACL,KAAK;QACnBE,OAAO,EAAE,KAAK;QACdD,MAAM,EAAE,KAAK;QACbE,KAAK,EAAE;MAAE;IAEb;MACE,OAAOC,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}