{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Listing/ListingData.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { BlockDataForm } from '@plone/volto/components';\nimport { schemaListing } from './schema';\nvar ListingData = function ListingData(props) {\n  _s();\n  var data = props.data,\n    block = props.block,\n    onChangeBlock = props.onChangeBlock;\n  var intl = useIntl();\n  var schema = schemaListing(_objectSpread(_objectSpread({}, props), {}, {\n    intl: intl\n  }));\n  return __jsx(BlockDataForm, {\n    schema: schema,\n    title: schema.title,\n    onChangeField: function onChangeField(id, value) {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, _defineProperty({}, id, value)));\n    },\n    formData: data,\n    block: block,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  });\n};\n_s(ListingData, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = ListingData;\nListingData.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired\n};\nexport default ListingData;\nvar _c;\n$RefreshReg$(_c, \"ListingData\");","map":{"version":3,"names":["React","PropTypes","useIntl","BlockDataForm","schemaListing","ListingData","props","data","block","onChangeBlock","intl","schema","title","id","value","propTypes","objectOf","any","isRequired","string","func"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Listing/ListingData.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { BlockDataForm } from '@plone/volto/components';\nimport { schemaListing } from './schema';\n\nconst ListingData = (props) => {\n  const { data, block, onChangeBlock } = props;\n  const intl = useIntl();\n  const schema = schemaListing({ ...props, intl });\n\n  return (\n    <BlockDataForm\n      schema={schema}\n      title={schema.title}\n      onChangeField={(id, value) => {\n        onChangeBlock(block, {\n          ...data,\n          [id]: value,\n        });\n      }}\n      formData={data}\n      block={block}\n    />\n  );\n};\n\nListingData.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n};\n\nexport default ListingData;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,aAAa,QAAQ,UAAU;AAExC,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,KAAK,EAAK;EAAA;EAC7B,IAAQC,IAAI,GAA2BD,KAAK,CAApCC,IAAI;IAAEC,KAAK,GAAoBF,KAAK,CAA9BE,KAAK;IAAEC,aAAa,GAAKH,KAAK,CAAvBG,aAAa;EAClC,IAAMC,IAAI,GAAGR,OAAO,EAAE;EACtB,IAAMS,MAAM,GAAGP,aAAa,iCAAME,KAAK;IAAEI,IAAI,EAAJA;EAAI,GAAG;EAEhD,OACE,MAAC,aAAa;IACZ,MAAM,EAAEC,MAAO;IACf,KAAK,EAAEA,MAAM,CAACC,KAAM;IACpB,aAAa,EAAE,uBAACC,EAAE,EAAEC,KAAK,EAAK;MAC5BL,aAAa,CAACD,KAAK,kCACdD,IAAI,2BACNM,EAAE,EAAGC,KAAK,GACX;IACJ,CAAE;IACF,QAAQ,EAAEP,IAAK;IACf,KAAK,EAAEC,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACb;AAEN,CAAC;AAAC,GAnBIH,WAAW;EAAA,QAEFH,OAAO;AAAA;AAAA,KAFhBG,WAAW;AAqBjBA,WAAW,CAACU,SAAS,GAAG;EACtBR,IAAI,EAAEN,SAAS,CAACe,QAAQ,CAACf,SAAS,CAACgB,GAAG,CAAC,CAACC,UAAU;EAClDV,KAAK,EAAEP,SAAS,CAACkB,MAAM,CAACD,UAAU;EAClCT,aAAa,EAAER,SAAS,CAACmB,IAAI,CAACF;AAChC,CAAC;AAED,eAAeb,WAAW;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}