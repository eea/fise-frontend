{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Rules/Rules.jsx\";\nvar __jsx = React.createElement;\n/**\n * Moderate content rules component.\n * @module components/manage/Controlpanels/Rules/Rules\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getBaseUrl, getParentUrl, Helmet } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Checkbox, Container, Form, Header, Segment, Table } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nimport { getControlPanelRules, deleteControlPanelRule, getContentRulesEvents, editRule } from '@plone/volto/actions';\nimport backSVG from '@plone/volto/icons/back.svg';\nvar messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  rules: {\n    \"id\": \"Content Rules\",\n    \"defaultMessage\": \"Content Rules\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  \"delete\": {\n    \"id\": \"Deleted\",\n    \"defaultMessage\": \"Deleted\"\n  },\n  enable: {\n    \"id\": \"Rule enable changed\",\n    \"defaultMessage\": \"Rule enable changed\"\n  }\n});\n\n/**\n * Rules class.\n * @class Rules\n * @extends Component\n */\nvar Rules = /*#__PURE__*/function (_Component) {\n  _inherits(Rules, _Component);\n  var _super = _createSuper(Rules);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  function Rules(props) {\n    var _this;\n    _classCallCheck(this, Rules);\n    _this = _super.call(this, props);\n    _this.state = {\n      isClient: false,\n      selectedFilters: [],\n      selectedRules: []\n    };\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(Rules, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n      this.props.getContentRulesEvents(getBaseUrl(this.props.pathname));\n      this.setState({\n        isClient: true\n      });\n    }\n\n    /**\n     * Component did mount\n     * @method componentDidUpdate\n     * @returns {undefined}\n     */\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n      if (prevProps.rules !== this.props.rules && this.props.rules.items) {\n        this.setState({\n          selectedRules: this.props.rules.items\n        });\n      }\n      if (prevState.selectedFilters !== this.state.selectedFilters && this.props.rules.items) {\n        if (this.state.selectedFilters.length > 0) {\n          var filteredRules = this.props.rules.items.filter(function (rule) {\n            return _this2.state.selectedFilters.includes(rule.trigger);\n          });\n          this.setState({\n            selectedRules: filteredRules\n          });\n        } else {\n          this.setState({\n            selectedRules: this.props.rules.items\n          });\n        }\n      }\n    }\n\n    /**\n     * Component will receive props\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Next properties\n     * @returns {undefined}\n     */\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.indivRule.edit.loading && nextProps.indivRule.edit.loaded) {\n        toast.success(__jsx(Toast, {\n          success: true,\n          title: this.props.intl.formatMessage(messages.success),\n          content: this.props.intl.formatMessage(messages.enable),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 9\n          }\n        }));\n        this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n      }\n      if (this.props.indivRule[\"delete\"].loading && nextProps.indivRule[\"delete\"].loaded) {\n        this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n        toast.success(__jsx(Toast, {\n          success: true,\n          title: this.props.intl.formatMessage(messages.success),\n          content: this.props.intl.formatMessage(messages[\"delete\"]),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 9\n          }\n        }));\n      }\n    }\n\n    /**\n     * Back/Cancel handler\n     * @method onCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.props.history.push(getParentUrl(this.props.pathname));\n    }\n\n    /**\n     * Select filter type handler\n     * @method handleSelectFilterType\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleSelectFilterType\",\n    value: function handleSelectFilterType(type) {\n      this.setState({\n        filterType: type\n      });\n    }\n\n    /**\n     * Add Rule handler\n     * @method handleAddRule\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleAddRule\",\n    value: function handleAddRule() {\n      this.props.history.push(\"\".concat(this.props.pathname, \"/add\"));\n    }\n\n    /**\n     * Configure Rule handler\n     * @method handleConfigure\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleConfigure\",\n    value: function handleConfigure(ruleId) {\n      this.props.history.push(\"\".concat(this.props.pathname, \"/\").concat(ruleId, \"/configure\"));\n    }\n\n    /**\n     * Edit Rule handler\n     * @method handleEdit\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleEdit\",\n    value: function handleEdit(ruleId) {\n      this.props.history.push(\"\".concat(this.props.pathname, \"/\").concat(ruleId, \"/edit\"));\n    }\n\n    /**\n     * Delete Rule handler\n     * @method handleDelete\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(ruleId) {\n      this.props.deleteControlPanelRule(getBaseUrl(this.props.pathname), ruleId);\n    }\n\n    /**\n     * Set filter handler\n     * @method handleSetFilters\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleSetFilters\",\n    value: function handleSetFilters(value) {\n      if (!this.state.selectedFilters.includes(value)) {\n        this.setState({\n          selectedFilters: [].concat(_toConsumableArray(this.state.selectedFilters), [value])\n        });\n      } else {\n        this.setState({\n          selectedFilters: this.state.selectedFilters.filter(function (f) {\n            return f !== value;\n          })\n        });\n      }\n    }\n\n    /**\n     *Enable rule handler\n     * @method handleEnableRule\n     * @returns {undefined}\n     */\n  }, {\n    key: \"handleEnableRule\",\n    value: function handleEnableRule(rule) {\n      var id = rule.id,\n        cascading = rule.cascading,\n        description = rule.description,\n        enabled = rule.enabled,\n        event = rule.event,\n        stop = rule.stop,\n        title = rule.title;\n      this.props.editRule(getBaseUrl(this.props.pathname), {\n        id: id,\n        cascading: cascading,\n        description: description,\n        enabled: !enabled,\n        event: event,\n        stop: stop,\n        title: title\n      }, id);\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      return __jsx(\"div\", {\n        id: \"page-rules\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 7\n        }\n      }, __jsx(Helmet, {\n        title: this.props.intl.formatMessage(messages.rules),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 9\n        }\n      }), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 9\n        }\n      }, __jsx(\"article\", {\n        id: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }\n      }, __jsx(Segment.Group, {\n        raised: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }\n      }, __jsx(Segment, {\n        className: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Content Rules\",\n        defaultMessage: \"Content Rules\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }\n      })), __jsx(Segment, {\n        className: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu.\",\n        defaultMessage: \"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }\n      })), __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }\n      }, __jsx(Header, {\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 17\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Filter Rules:\",\n        defaultMessage: \"Filter Rules:\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 19\n        }\n      })), __jsx(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 19\n        }\n      }, this.props.events && this.props.events.items && this.props.events.items.length > 0 && this.props.events.items.map(function (event) {\n        return {\n          label: event.title,\n          value: event.title\n        };\n      }).map(function (o, i) {\n        return __jsx(Form.Field, {\n          style: {\n            marginRight: '15px'\n          },\n          key: i,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 27\n          }\n        }, __jsx(Checkbox, {\n          onChange: function onChange(e, _ref) {\n            var value = _ref.value;\n            return _this3.handleSetFilters(value);\n          },\n          checked: _this3.state.selectedFilters.includes[o.value],\n          value: o.value,\n          label: o.label,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }\n        }));\n      }))), __jsx(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 17\n        }\n      }, __jsx(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 19\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }\n      }, __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 23\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Content Rule\",\n        defaultMessage: \"Content Rule\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 23\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Event\",\n        defaultMessage: \"Event\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 25\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 23\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Status\",\n        defaultMessage: \"Status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 25\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 23\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Actions\",\n        defaultMessage: \"Actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 25\n        }\n      }))), this.state.selectedRules && this.state.selectedRules.length > 0 && this.state.selectedRules.map(function (rule, i) {\n        return __jsx(Table.Row, {\n          key: i,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 25\n          }\n        }, __jsx(Table.Cell, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 27\n          }\n        }, __jsx(\"p\", {\n          style: {\n            fontSize: '16px'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 29\n          }\n        }, rule.title), __jsx(\"p\", {\n          style: {\n            fontSize: '14px'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 29\n          }\n        }, rule.description)), __jsx(Table.Cell, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 27\n          }\n        }, __jsx(\"p\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 29\n          }\n        }, rule.trigger)), __jsx(Table.Cell, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 27\n          }\n        }, __jsx(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 29\n          }\n        }, __jsx(Checkbox, {\n          onChange: function onChange(e, o) {\n            return _this3.handleEnableRule(rule);\n          },\n          checked: rule.enabled,\n          value: rule.enabled,\n          label: \"enabled\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 31\n          }\n        }), !rule.assigned && __jsx(\"p\", {\n          style: {\n            marginLeft: '5px',\n            padding: '3px',\n            backgroundColor: '#ffc106',\n            borderRadius: '5px',\n            fontSize: '10px',\n            fontWeight: 'bold'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 33\n          }\n        }, \"not assigned\"))), __jsx(Table.Cell, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 27\n          }\n        }, __jsx(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          size: \"mini\",\n          primary: true,\n          onClick: function onClick() {\n            return _this3.handleConfigure(rule.id);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 31\n          }\n        }, \"Configure\"), __jsx(Button, {\n          size: \"mini\",\n          secondary: true,\n          onClick: function onClick() {\n            return _this3.handleEdit(rule.id);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 31\n          }\n        }, \"Edit\"), __jsx(Button, {\n          size: \"mini\",\n          color: \"youtube\",\n          onClick: function onClick() {\n            return _this3.handleDelete(rule.id);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 31\n          }\n        }, \"Delete\"))));\n      }))), __jsx(Button, {\n        onClick: function onClick() {\n          return _this3.handleAddRule();\n        },\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 17\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Add content rule\",\n        defaultMessage: \"Add content rule\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 19\n        }\n      })))))), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(Link, {\n          className: \"item\",\n          to: \"#\",\n          onClick: function onClick() {\n            return _this3.onCancel();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }\n        }, __jsx(Icon, {\n          name: backSVG,\n          className: \"contents circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.back),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 19\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return Rules;\n}(Component);\n_defineProperty(Rules, \"propTypes\", {\n  getControlPanelRules: PropTypes.func.isRequired,\n  deleteControlPanelRule: PropTypes.func.isRequired,\n  getContentRulesEvents: PropTypes.func.isRequired,\n  editRule: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect(function (state, props) {\n  return {\n    indivRule: state.controlpanelrule,\n    rules: state.controlpanelrules,\n    events: state.contentrulesevents,\n    pathname: props.location.pathname\n  };\n}, {\n  getControlPanelRules: getControlPanelRules,\n  deleteControlPanelRule: deleteControlPanelRule,\n  getContentRulesEvents: getContentRulesEvents,\n  editRule: editRule\n}))(Rules);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","getBaseUrl","getParentUrl","Helmet","Portal","Button","Checkbox","Container","Form","Header","Segment","Table","FormattedMessage","defineMessages","injectIntl","Icon","Toolbar","toast","Toast","getControlPanelRules","deleteControlPanelRule","getContentRulesEvents","editRule","backSVG","messages","back","rules","success","enable","Rules","props","state","isClient","selectedFilters","selectedRules","pathname","setState","prevProps","prevState","items","length","filteredRules","filter","rule","includes","trigger","nextProps","indivRule","edit","loading","loaded","intl","formatMessage","history","push","type","filterType","ruleId","value","f","id","cascading","description","enabled","event","stop","title","display","flexWrap","events","map","label","o","i","marginRight","e","handleSetFilters","fontSize","alignItems","handleEnableRule","assigned","marginLeft","padding","backgroundColor","borderRadius","fontWeight","handleConfigure","handleEdit","handleDelete","handleAddRule","document","getElementById","onCancel","func","isRequired","controlpanelrule","controlpanelrules","contentrulesevents","location"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Rules/Rules.jsx"],"sourcesContent":["/**\n * Moderate content rules component.\n * @module components/manage/Controlpanels/Rules/Rules\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getBaseUrl, getParentUrl, Helmet } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Form,\n  Header,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\n\nimport {\n  getControlPanelRules,\n  deleteControlPanelRule,\n  getContentRulesEvents,\n  editRule,\n} from '@plone/volto/actions';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  rules: {\n    id: 'Content Rules',\n    defaultMessage: 'Content Rules',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  delete: {\n    id: 'Deleted',\n    defaultMessage: 'Deleted',\n  },\n  enable: {\n    id: 'Rule enable changed',\n    defaultMessage: 'Rule enable changed',\n  },\n});\n\n/**\n * Rules class.\n * @class Rules\n * @extends Component\n */\nclass Rules extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getControlPanelRules: PropTypes.func.isRequired,\n    deleteControlPanelRule: PropTypes.func.isRequired,\n    getContentRulesEvents: PropTypes.func.isRequired,\n    editRule: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClient: false,\n      selectedFilters: [],\n      selectedRules: [],\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n    this.props.getContentRulesEvents(getBaseUrl(this.props.pathname));\n\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.rules !== this.props.rules && this.props.rules.items) {\n      this.setState({ selectedRules: this.props.rules.items });\n    }\n    if (\n      prevState.selectedFilters !== this.state.selectedFilters &&\n      this.props.rules.items\n    ) {\n      if (this.state.selectedFilters.length > 0) {\n        let filteredRules = this.props.rules.items.filter((rule) =>\n          this.state.selectedFilters.includes(rule.trigger),\n        );\n        this.setState({\n          selectedRules: filteredRules,\n        });\n      } else {\n        this.setState({ selectedRules: this.props.rules.items });\n      }\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.indivRule.edit.loading && nextProps.indivRule.edit.loaded) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.enable)}\n        />,\n      );\n      this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n    }\n    if (\n      this.props.indivRule.delete.loading &&\n      nextProps.indivRule.delete.loaded\n    ) {\n      this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.delete)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Select filter type handler\n   * @method handleSelectFilterType\n   * @returns {undefined}\n   */\n  handleSelectFilterType(type) {\n    this.setState({ filterType: type });\n  }\n\n  /**\n   * Add Rule handler\n   * @method handleAddRule\n   * @returns {undefined}\n   */\n  handleAddRule() {\n    this.props.history.push(`${this.props.pathname}/add`);\n  }\n\n  /**\n   * Configure Rule handler\n   * @method handleConfigure\n   * @returns {undefined}\n   */\n  handleConfigure(ruleId) {\n    this.props.history.push(`${this.props.pathname}/${ruleId}/configure`);\n  }\n\n  /**\n   * Edit Rule handler\n   * @method handleEdit\n   * @returns {undefined}\n   */\n  handleEdit(ruleId) {\n    this.props.history.push(`${this.props.pathname}/${ruleId}/edit`);\n  }\n\n  /**\n   * Delete Rule handler\n   * @method handleDelete\n   * @returns {undefined}\n   */\n  handleDelete(ruleId) {\n    this.props.deleteControlPanelRule(getBaseUrl(this.props.pathname), ruleId);\n  }\n\n  /**\n   * Set filter handler\n   * @method handleSetFilters\n   * @returns {undefined}\n   */\n  handleSetFilters(value) {\n    if (!this.state.selectedFilters.includes(value)) {\n      this.setState({\n        selectedFilters: [...this.state.selectedFilters, value],\n      });\n    } else {\n      this.setState({\n        selectedFilters: this.state.selectedFilters.filter((f) => f !== value),\n      });\n    }\n  }\n\n  /**\n   *Enable rule handler\n   * @method handleEnableRule\n   * @returns {undefined}\n   */\n  handleEnableRule(rule) {\n    const { id, cascading, description, enabled, event, stop, title } = rule;\n    this.props.editRule(\n      getBaseUrl(this.props.pathname),\n      { id, cascading, description, enabled: !enabled, event, stop, title },\n      id,\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <div id=\"page-rules\">\n        <Helmet title={this.props.intl.formatMessage(messages.rules)} />\n        <Container>\n          <article id=\"content\">\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage\n                  id=\"Content Rules\"\n                  defaultMessage=\"Content Rules\"\n                />\n              </Segment>\n              <Segment className=\"secondary\">\n                <FormattedMessage\n                  id=\"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu.\"\n                  defaultMessage=\"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu.\"\n                />\n              </Segment>\n              {/* <Segment>\n                <Checkbox\n                  // onChange={(e, { value }) => console.log(value)}\n                  //checked={}\n                  value={'disable-globally'}\n                  label=\"Disable globally\"\n                />\n              </Segment> */}\n              {/* <Segment className=\"secondary\">\n                <FormattedMessage\n                  id=\"Whether or not content rules should be disabled globally. If this is selected, no rules will be executed anywhere in the portal.\"\n                  defaultMessage=\"Whether or not content rules should be disabled globally. If this is selected, no rules will be executed anywhere in the portal.\"\n                />\n              </Segment> */}\n              <Segment>\n                <Header size=\"small\">\n                  <FormattedMessage\n                    id=\"Filter Rules:\"\n                    defaultMessage=\"Filter Rules:\"\n                  />\n                </Header>\n                <Form>\n                  <div\n                    style={{\n                      display: 'flex',\n                      flexWrap: 'wrap',\n                    }}\n                  >\n                    {this.props.events &&\n                      this.props.events.items &&\n                      this.props.events.items.length > 0 &&\n                      this.props.events.items\n                        .map((event) => {\n                          return { label: event.title, value: event.title };\n                        })\n                        .map((o, i) => (\n                          <Form.Field style={{ marginRight: '15px' }} key={i}>\n                            <Checkbox\n                              onChange={(e, { value }) =>\n                                this.handleSetFilters(value)\n                              }\n                              checked={\n                                this.state.selectedFilters.includes[o.value]\n                              }\n                              value={o.value}\n                              label={o.label}\n                            />\n                          </Form.Field>\n                        ))}\n                  </div>\n                </Form>\n                <Table>\n                  <Table.Body>\n                    <Table.Row>\n                      <Table.HeaderCell>\n                        <FormattedMessage\n                          id=\"Content Rule\"\n                          defaultMessage=\"Content Rule\"\n                        />\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>\n                        <FormattedMessage id=\"Event\" defaultMessage=\"Event\" />\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>\n                        <FormattedMessage id=\"Status\" defaultMessage=\"Status\" />\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>\n                        <FormattedMessage\n                          id=\"Actions\"\n                          defaultMessage=\"Actions\"\n                        />\n                      </Table.HeaderCell>\n                    </Table.Row>\n                    {this.state.selectedRules &&\n                      this.state.selectedRules.length > 0 &&\n                      this.state.selectedRules.map((rule, i) => (\n                        <Table.Row key={i}>\n                          <Table.Cell>\n                            <p style={{ fontSize: '16px' }}>{rule.title}</p>\n                            <p style={{ fontSize: '14px' }}>\n                              {rule.description}\n                            </p>\n                          </Table.Cell>\n                          <Table.Cell>\n                            <p>{rule.trigger}</p>\n                          </Table.Cell>\n                          <Table.Cell>\n                            <div\n                              style={{ display: 'flex', alignItems: 'center' }}\n                            >\n                              <Checkbox\n                                onChange={(e, o) => this.handleEnableRule(rule)}\n                                checked={rule.enabled}\n                                value={rule.enabled}\n                                label=\"enabled\"\n                              />\n                              {!rule.assigned && (\n                                <p\n                                  style={{\n                                    marginLeft: '5px',\n                                    padding: '3px',\n                                    backgroundColor: '#ffc106',\n                                    borderRadius: '5px',\n                                    fontSize: '10px',\n                                    fontWeight: 'bold',\n                                  }}\n                                >\n                                  not assigned\n                                </p>\n                              )}\n                            </div>\n                          </Table.Cell>\n                          <Table.Cell>\n                            <div style={{ display: 'flex' }}>\n                              <Button\n                                size=\"mini\"\n                                primary\n                                onClick={() => this.handleConfigure(rule.id)}\n                              >\n                                Configure\n                              </Button>\n                              <Button\n                                size=\"mini\"\n                                secondary\n                                onClick={() => this.handleEdit(rule.id)}\n                              >\n                                Edit\n                              </Button>\n                              <Button\n                                size=\"mini\"\n                                color=\"youtube\"\n                                onClick={() => this.handleDelete(rule.id)}\n                              >\n                                Delete\n                              </Button>\n                            </div>\n                          </Table.Cell>\n                        </Table.Row>\n                      ))}\n                  </Table.Body>\n                </Table>\n                <Button onClick={() => this.handleAddRule()} primary>\n                  <FormattedMessage\n                    id=\"Add content rule\"\n                    defaultMessage=\"Add content rule\"\n                  />\n                </Button>\n              </Segment>\n            </Segment.Group>\n          </article>\n        </Container>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link className=\"item\" to=\"#\" onClick={() => this.onCancel()}>\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      indivRule: state.controlpanelrule,\n      rules: state.controlpanelrules,\n      events: state.contentrulesevents,\n\n      pathname: props.location.pathname,\n    }),\n    {\n      getControlPanelRules,\n      deleteControlPanelRule,\n      getContentRulesEvents,\n      editRule,\n    },\n  ),\n)(Rules);\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,EAAEC,YAAY,EAAEC,MAAM,QAAQ,sBAAsB;AACvE,SAASC,MAAM,QAAQ,cAAc;AACrC,SACEC,MAAM,EACNC,QAAQ,EACRC,SAAS,EACTC,IAAI,EACJC,MAAM,EACNC,OAAO,EACPC,KAAK,QACA,mBAAmB;AAC1B,SAASC,gBAAgB,EAAEC,cAAc,EAAEC,UAAU,QAAQ,YAAY;AACzE,SAASC,IAAI,EAAEC,OAAO,QAAQ,yBAAyB;AACvD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,KAAK,QAAQ,yBAAyB;AAE/C,SACEC,oBAAoB,EACpBC,sBAAsB,EACtBC,qBAAqB,EACrBC,QAAQ,QACH,sBAAsB;AAE7B,OAAOC,OAAO,MAAM,6BAA6B;AAEjD,IAAMC,QAAQ,GAAGX,cAAc,CAAC;EAC9BY,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,KAAK;IAAA;IAAA;EAAA,CAGJ;EACDC,OAAO;IAAA;IAAA;EAAA,CAGN;EACD;IAAA;IAAA;EAAA,CAGC;EACDC,MAAM;IAAA;IAAA;EAAA;AAIR,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AAJA,IAKMC,KAAK;EAAA;EAAA;EACT;AACF;AACA;AACA;AACA;;EAQE;AACF;AACA;AACA;AACA;AACA;EACE,eAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IACX,MAAKC,KAAK,GAAG;MACXC,QAAQ,EAAE,KAAK;MACfC,eAAe,EAAE,EAAE;MACnBC,aAAa,EAAE;IACjB,CAAC;IAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,6BAAoB;MAClB,IAAI,CAACJ,KAAK,CAACX,oBAAoB,CAAClB,UAAU,CAAC,IAAI,CAAC6B,KAAK,CAACK,QAAQ,CAAC,CAAC;MAChE,IAAI,CAACL,KAAK,CAACT,qBAAqB,CAACpB,UAAU,CAAC,IAAI,CAAC6B,KAAK,CAACK,QAAQ,CAAC,CAAC;MAEjE,IAAI,CAACC,QAAQ,CAAC;QAAEJ,QAAQ,EAAE;MAAK,CAAC,CAAC;IACnC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,4BAAmBK,SAAS,EAAEC,SAAS,EAAE;MAAA;MACvC,IAAID,SAAS,CAACX,KAAK,KAAK,IAAI,CAACI,KAAK,CAACJ,KAAK,IAAI,IAAI,CAACI,KAAK,CAACJ,KAAK,CAACa,KAAK,EAAE;QAClE,IAAI,CAACH,QAAQ,CAAC;UAAEF,aAAa,EAAE,IAAI,CAACJ,KAAK,CAACJ,KAAK,CAACa;QAAM,CAAC,CAAC;MAC1D;MACA,IACED,SAAS,CAACL,eAAe,KAAK,IAAI,CAACF,KAAK,CAACE,eAAe,IACxD,IAAI,CAACH,KAAK,CAACJ,KAAK,CAACa,KAAK,EACtB;QACA,IAAI,IAAI,CAACR,KAAK,CAACE,eAAe,CAACO,MAAM,GAAG,CAAC,EAAE;UACzC,IAAIC,aAAa,GAAG,IAAI,CAACX,KAAK,CAACJ,KAAK,CAACa,KAAK,CAACG,MAAM,CAAC,UAACC,IAAI;YAAA,OACrD,MAAI,CAACZ,KAAK,CAACE,eAAe,CAACW,QAAQ,CAACD,IAAI,CAACE,OAAO,CAAC;UAAA,EAClD;UACD,IAAI,CAACT,QAAQ,CAAC;YACZF,aAAa,EAAEO;UACjB,CAAC,CAAC;QACJ,CAAC,MAAM;UACL,IAAI,CAACL,QAAQ,CAAC;YAAEF,aAAa,EAAE,IAAI,CAACJ,KAAK,CAACJ,KAAK,CAACa;UAAM,CAAC,CAAC;QAC1D;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA;IAAA,OAMA,0CAAiCO,SAAS,EAAE;MAC1C,IAAI,IAAI,CAAChB,KAAK,CAACiB,SAAS,CAACC,IAAI,CAACC,OAAO,IAAIH,SAAS,CAACC,SAAS,CAACC,IAAI,CAACE,MAAM,EAAE;QACxEjC,KAAK,CAACU,OAAO,CACX,MAAC,KAAK;UACJ,OAAO;UACP,KAAK,EAAE,IAAI,CAACG,KAAK,CAACqB,IAAI,CAACC,aAAa,CAAC5B,QAAQ,CAACG,OAAO,CAAE;UACvD,OAAO,EAAE,IAAI,CAACG,KAAK,CAACqB,IAAI,CAACC,aAAa,CAAC5B,QAAQ,CAACI,MAAM,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACxD,CACH;QACD,IAAI,CAACE,KAAK,CAACX,oBAAoB,CAAClB,UAAU,CAAC,IAAI,CAAC6B,KAAK,CAACK,QAAQ,CAAC,CAAC;MAClE;MACA,IACE,IAAI,CAACL,KAAK,CAACiB,SAAS,UAAO,CAACE,OAAO,IACnCH,SAAS,CAACC,SAAS,UAAO,CAACG,MAAM,EACjC;QACA,IAAI,CAACpB,KAAK,CAACX,oBAAoB,CAAClB,UAAU,CAAC,IAAI,CAAC6B,KAAK,CAACK,QAAQ,CAAC,CAAC;QAEhElB,KAAK,CAACU,OAAO,CACX,MAAC,KAAK;UACJ,OAAO;UACP,KAAK,EAAE,IAAI,CAACG,KAAK,CAACqB,IAAI,CAACC,aAAa,CAAC5B,QAAQ,CAACG,OAAO,CAAE;UACvD,OAAO,EAAE,IAAI,CAACG,KAAK,CAACqB,IAAI,CAACC,aAAa,CAAC5B,QAAQ,UAAO,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACxD,CACH;MACH;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,oBAAW;MACT,IAAI,CAACM,KAAK,CAACuB,OAAO,CAACC,IAAI,CAACpD,YAAY,CAAC,IAAI,CAAC4B,KAAK,CAACK,QAAQ,CAAC,CAAC;IAC5D;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,gCAAuBoB,IAAI,EAAE;MAC3B,IAAI,CAACnB,QAAQ,CAAC;QAAEoB,UAAU,EAAED;MAAK,CAAC,CAAC;IACrC;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,yBAAgB;MACd,IAAI,CAACzB,KAAK,CAACuB,OAAO,CAACC,IAAI,WAAI,IAAI,CAACxB,KAAK,CAACK,QAAQ,UAAO;IACvD;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,yBAAgBsB,MAAM,EAAE;MACtB,IAAI,CAAC3B,KAAK,CAACuB,OAAO,CAACC,IAAI,WAAI,IAAI,CAACxB,KAAK,CAACK,QAAQ,cAAIsB,MAAM,gBAAa;IACvE;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,oBAAWA,MAAM,EAAE;MACjB,IAAI,CAAC3B,KAAK,CAACuB,OAAO,CAACC,IAAI,WAAI,IAAI,CAACxB,KAAK,CAACK,QAAQ,cAAIsB,MAAM,WAAQ;IAClE;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,sBAAaA,MAAM,EAAE;MACnB,IAAI,CAAC3B,KAAK,CAACV,sBAAsB,CAACnB,UAAU,CAAC,IAAI,CAAC6B,KAAK,CAACK,QAAQ,CAAC,EAAEsB,MAAM,CAAC;IAC5E;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,0BAAiBC,KAAK,EAAE;MACtB,IAAI,CAAC,IAAI,CAAC3B,KAAK,CAACE,eAAe,CAACW,QAAQ,CAACc,KAAK,CAAC,EAAE;QAC/C,IAAI,CAACtB,QAAQ,CAAC;UACZH,eAAe,+BAAM,IAAI,CAACF,KAAK,CAACE,eAAe,IAAEyB,KAAK;QACxD,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,IAAI,CAACtB,QAAQ,CAAC;UACZH,eAAe,EAAE,IAAI,CAACF,KAAK,CAACE,eAAe,CAACS,MAAM,CAAC,UAACiB,CAAC;YAAA,OAAKA,CAAC,KAAKD,KAAK;UAAA;QACvE,CAAC,CAAC;MACJ;IACF;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,0BAAiBf,IAAI,EAAE;MACrB,IAAQiB,EAAE,GAA0DjB,IAAI,CAAhEiB,EAAE;QAAEC,SAAS,GAA+ClB,IAAI,CAA5DkB,SAAS;QAAEC,WAAW,GAAkCnB,IAAI,CAAjDmB,WAAW;QAAEC,OAAO,GAAyBpB,IAAI,CAApCoB,OAAO;QAAEC,KAAK,GAAkBrB,IAAI,CAA3BqB,KAAK;QAAEC,IAAI,GAAYtB,IAAI,CAApBsB,IAAI;QAAEC,KAAK,GAAKvB,IAAI,CAAduB,KAAK;MAC/D,IAAI,CAACpC,KAAK,CAACR,QAAQ,CACjBrB,UAAU,CAAC,IAAI,CAAC6B,KAAK,CAACK,QAAQ,CAAC,EAC/B;QAAEyB,EAAE,EAAFA,EAAE;QAAEC,SAAS,EAATA,SAAS;QAAEC,WAAW,EAAXA,WAAW;QAAEC,OAAO,EAAE,CAACA,OAAO;QAAEC,KAAK,EAALA,KAAK;QAAEC,IAAI,EAAJA,IAAI;QAAEC,KAAK,EAALA;MAAM,CAAC,EACrEN,EAAE,CACH;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,kBAAS;MAAA;MACP,OACE;QAAK,EAAE,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAClB,MAAC,MAAM;QAAC,KAAK,EAAE,IAAI,CAAC9B,KAAK,CAACqB,IAAI,CAACC,aAAa,CAAC5B,QAAQ,CAACE,KAAK,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,EAChE,MAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACR;QAAS,EAAE,EAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACnB,MAAC,OAAO,CAAC,KAAK;QAAC,MAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACnB,MAAC,OAAO;QAAC,SAAS,EAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC1B,MAAC,gBAAgB;QACf,EAAE,EAAC,eAAe;QAClB,cAAc,EAAC,eAAe;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAC9B,CACM,EACV,MAAC,OAAO;QAAC,SAAS,EAAC,WAAW;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC5B,MAAC,gBAAgB;QACf,EAAE,EAAC,sQAAsQ;QACzQ,cAAc,EAAC,sQAAsQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACrR,CACM,EAeV,MAAC,OAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACN,MAAC,MAAM;QAAC,IAAI,EAAC,OAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAClB,MAAC,gBAAgB;QACf,EAAE,EAAC,eAAe;QAClB,cAAc,EAAC,eAAe;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAC9B,CACK,EACT,MAAC,IAAI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACH;QACE,KAAK,EAAE;UACLyC,OAAO,EAAE,MAAM;UACfC,QAAQ,EAAE;QACZ,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAED,IAAI,CAACtC,KAAK,CAACuC,MAAM,IAChB,IAAI,CAACvC,KAAK,CAACuC,MAAM,CAAC9B,KAAK,IACvB,IAAI,CAACT,KAAK,CAACuC,MAAM,CAAC9B,KAAK,CAACC,MAAM,GAAG,CAAC,IAClC,IAAI,CAACV,KAAK,CAACuC,MAAM,CAAC9B,KAAK,CACpB+B,GAAG,CAAC,UAACN,KAAK,EAAK;QACd,OAAO;UAAEO,KAAK,EAAEP,KAAK,CAACE,KAAK;UAAER,KAAK,EAAEM,KAAK,CAACE;QAAM,CAAC;MACnD,CAAC,CAAC,CACDI,GAAG,CAAC,UAACE,CAAC,EAAEC,CAAC;QAAA,OACR,MAAC,IAAI,CAAC,KAAK;UAAC,KAAK,EAAE;YAAEC,WAAW,EAAE;UAAO,CAAE;UAAC,GAAG,EAAED,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACjD,MAAC,QAAQ;UACP,QAAQ,EAAE,kBAACE,CAAC;YAAA,IAAIjB,KAAK,QAALA,KAAK;YAAA,OACnB,MAAI,CAACkB,gBAAgB,CAAClB,KAAK,CAAC;UAAA,CAC7B;UACD,OAAO,EACL,MAAI,CAAC3B,KAAK,CAACE,eAAe,CAACW,QAAQ,CAAC4B,CAAC,CAACd,KAAK,CAC5C;UACD,KAAK,EAAEc,CAAC,CAACd,KAAM;UACf,KAAK,EAAEc,CAAC,CAACD,KAAM;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACf,CACS;MAAA,CACd,CAAC,CACF,CACD,EACP,MAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACJ,MAAC,KAAK,CAAC,IAAI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACT,MAAC,KAAK,CAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACR,MAAC,KAAK,CAAC,UAAU;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACf,MAAC,gBAAgB;QACf,EAAE,EAAC,cAAc;QACjB,cAAc,EAAC,cAAc;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAC7B,CACe,EACnB,MAAC,KAAK,CAAC,UAAU;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACf,MAAC,gBAAgB;QAAC,EAAE,EAAC,OAAO;QAAC,cAAc,EAAC,OAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CACrC,EACnB,MAAC,KAAK,CAAC,UAAU;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACf,MAAC,gBAAgB;QAAC,EAAE,EAAC,QAAQ;QAAC,cAAc,EAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CACvC,EACnB,MAAC,KAAK,CAAC,UAAU;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACf,MAAC,gBAAgB;QACf,EAAE,EAAC,SAAS;QACZ,cAAc,EAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACxB,CACe,CACT,EACX,IAAI,CAACxC,KAAK,CAACG,aAAa,IACvB,IAAI,CAACH,KAAK,CAACG,aAAa,CAACM,MAAM,GAAG,CAAC,IACnC,IAAI,CAACT,KAAK,CAACG,aAAa,CAACoC,GAAG,CAAC,UAAC3B,IAAI,EAAE8B,CAAC;QAAA,OACnC,MAAC,KAAK,CAAC,GAAG;UAAC,GAAG,EAAEA,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAChB,MAAC,KAAK,CAAC,IAAI;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACT;UAAG,KAAK,EAAE;YAAEI,QAAQ,EAAE;UAAO,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAElC,IAAI,CAACuB,KAAK,CAAK,EAChD;UAAG,KAAK,EAAE;YAAEW,QAAQ,EAAE;UAAO,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAC5BlC,IAAI,CAACmB,WAAW,CACf,CACO,EACb,MAAC,KAAK,CAAC,IAAI;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAInB,IAAI,CAACE,OAAO,CAAK,CACV,EACb,MAAC,KAAK,CAAC,IAAI;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACT;UACE,KAAK,EAAE;YAAEsB,OAAO,EAAE,MAAM;YAAEW,UAAU,EAAE;UAAS,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAEjD,MAAC,QAAQ;UACP,QAAQ,EAAE,kBAACH,CAAC,EAAEH,CAAC;YAAA,OAAK,MAAI,CAACO,gBAAgB,CAACpC,IAAI,CAAC;UAAA,CAAC;UAChD,OAAO,EAAEA,IAAI,CAACoB,OAAQ;UACtB,KAAK,EAAEpB,IAAI,CAACoB,OAAQ;UACpB,KAAK,EAAC,SAAS;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACf,EACD,CAACpB,IAAI,CAACqC,QAAQ,IACb;UACE,KAAK,EAAE;YACLC,UAAU,EAAE,KAAK;YACjBC,OAAO,EAAE,KAAK;YACdC,eAAe,EAAE,SAAS;YAC1BC,YAAY,EAAE,KAAK;YACnBP,QAAQ,EAAE,MAAM;YAChBQ,UAAU,EAAE;UACd,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,kBAIL,CACG,CACK,EACb,MAAC,KAAK,CAAC,IAAI;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACT;UAAK,KAAK,EAAE;YAAElB,OAAO,EAAE;UAAO,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAC9B,MAAC,MAAM;UACL,IAAI,EAAC,MAAM;UACX,OAAO;UACP,OAAO,EAAE;YAAA,OAAM,MAAI,CAACmB,eAAe,CAAC3C,IAAI,CAACiB,EAAE,CAAC;UAAA,CAAC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,eAGtC,EACT,MAAC,MAAM;UACL,IAAI,EAAC,MAAM;UACX,SAAS;UACT,OAAO,EAAE;YAAA,OAAM,MAAI,CAAC2B,UAAU,CAAC5C,IAAI,CAACiB,EAAE,CAAC;UAAA,CAAC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,UAGjC,EACT,MAAC,MAAM;UACL,IAAI,EAAC,MAAM;UACX,KAAK,EAAC,SAAS;UACf,OAAO,EAAE;YAAA,OAAM,MAAI,CAAC4B,YAAY,CAAC7C,IAAI,CAACiB,EAAE,CAAC;UAAA,CAAC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,YAGnC,CACL,CACK,CACH;MAAA,CACb,CAAC,CACO,CACP,EACR,MAAC,MAAM;QAAC,OAAO,EAAE;UAAA,OAAM,MAAI,CAAC6B,aAAa,EAAE;QAAA,CAAC;QAAC,OAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAClD,MAAC,gBAAgB;QACf,EAAE,EAAC,kBAAkB;QACrB,cAAc,EAAC,kBAAkB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACjC,CACK,CACD,CACI,CACR,CACA,EACX,IAAI,CAAC1D,KAAK,CAACC,QAAQ,IAClB,MAAC,MAAM;QAAC,IAAI,EAAE0D,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC/C,MAAC,OAAO;QACN,QAAQ,EAAE,IAAI,CAAC7D,KAAK,CAACK,QAAS;QAC9B,sBAAsB;QACtB,KAAK,EACH,MAAC,IAAI;UAAC,SAAS,EAAC,MAAM;UAAC,EAAE,EAAC,GAAG;UAAC,OAAO,EAAE;YAAA,OAAM,MAAI,CAACyD,QAAQ,EAAE;UAAA,CAAC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAC3D,MAAC,IAAI;UACH,IAAI,EAAErE,OAAQ;UACd,SAAS,EAAC,kBAAkB;UAC5B,IAAI,EAAC,MAAM;UACX,KAAK,EAAE,IAAI,CAACO,KAAK,CAACqB,IAAI,CAACC,aAAa,CAAC5B,QAAQ,CAACC,IAAI,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACpD,CAEL;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACD,CAEL,CACG;IAEV;EAAC;EAAA;AAAA,EA3XiB7B,SAAS;AAAA,gBAAvBiC,KAAK,eAMU;EACjBV,oBAAoB,EAAEtB,SAAS,CAACgG,IAAI,CAACC,UAAU;EAC/C1E,sBAAsB,EAAEvB,SAAS,CAACgG,IAAI,CAACC,UAAU;EACjDzE,qBAAqB,EAAExB,SAAS,CAACgG,IAAI,CAACC,UAAU;EAChDxE,QAAQ,EAAEzB,SAAS,CAACgG,IAAI,CAACC;AAC3B,CAAC;AAmXH,eAAe/F,OAAO,CACpBe,UAAU,EACVhB,OAAO,CACL,UAACiC,KAAK,EAAED,KAAK;EAAA,OAAM;IACjBiB,SAAS,EAAEhB,KAAK,CAACgE,gBAAgB;IACjCrE,KAAK,EAAEK,KAAK,CAACiE,iBAAiB;IAC9B3B,MAAM,EAAEtC,KAAK,CAACkE,kBAAkB;IAEhC9D,QAAQ,EAAEL,KAAK,CAACoE,QAAQ,CAAC/D;EAC3B,CAAC;AAAA,CAAC,EACF;EACEhB,oBAAoB,EAApBA,oBAAoB;EACpBC,sBAAsB,EAAtBA,sBAAsB;EACtBC,qBAAqB,EAArBA,qBAAqB;EACrBC,QAAQ,EAARA;AACF,CAAC,CACF,CACF,CAACO,KAAK,CAAC"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"Content Rules","defaultMessage":"Content Rules"},{"id":"Success","defaultMessage":"Success"},{"id":"Deleted","defaultMessage":"Deleted"},{"id":"Rule enable changed","defaultMessage":"Rule enable changed"},{"id":"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu.","defaultMessage":"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu."},{"id":"Filter Rules:","defaultMessage":"Filter Rules:"},{"id":"Content Rule","defaultMessage":"Content Rule"},{"id":"Event","defaultMessage":"Event"},{"id":"Status","defaultMessage":"Status"},{"id":"Actions","defaultMessage":"Actions"},{"id":"Add content rule","defaultMessage":"Add content rule"}]}},"sourceType":"module","externalDependencies":[]}