{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/View/LinkView.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Link View.\n * @module components/theme/View/LinkView\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isInternalURL, flattenToAppURL } from '@plone/volto/helpers';\nimport { Container } from 'semantic-ui-react';\nimport { UniversalLink } from '@plone/volto/components';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * View container class.\n * @class View\n * @extends Component\n */\nclass LinkView extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  componentDidMount() {\n    if (!this.props.token) {\n      const {\n        remoteUrl\n      } = this.props.content;\n      if (isInternalURL(remoteUrl)) {\n        this.props.history.replace(flattenToAppURL(remoteUrl));\n      } else if (!__SERVER__) {\n        window.location.href = flattenToAppURL(remoteUrl);\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      remoteUrl\n    } = this.props.content;\n    return __jsx(Container, {\n      id: \"page-document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      className: \"documentFirstHeading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, this.props.content.title), this.props.content.description && __jsx(\"p\", {\n      className: \"documentDescription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, this.props.content.description), remoteUrl && __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"The link address is:\",\n      defaultMessage: \"The link address is:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }), ' ', __jsx(UniversalLink, {\n      href: remoteUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, flattenToAppURL(remoteUrl))));\n  }\n}\n_defineProperty(LinkView, \"propTypes\", {\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    remoteUrl: PropTypes.string\n  }),\n  token: PropTypes.string\n});\n_defineProperty(LinkView, \"defaultProps\", {\n  content: null,\n  token: null\n});\nexport default LinkView;","map":{"version":3,"names":["React","Component","PropTypes","isInternalURL","flattenToAppURL","Container","UniversalLink","FormattedMessage","LinkView","componentDidMount","props","token","remoteUrl","content","history","replace","__SERVER__","window","location","href","render","title","description","shape","string"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/View/LinkView.jsx"],"sourcesContent":["/**\n * Link View.\n * @module components/theme/View/LinkView\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { isInternalURL, flattenToAppURL } from '@plone/volto/helpers';\nimport { Container } from 'semantic-ui-react';\nimport { UniversalLink } from '@plone/volto/components';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * View container class.\n * @class View\n * @extends Component\n */\nclass LinkView extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    content: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      remoteUrl: PropTypes.string,\n    }),\n    token: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    content: null,\n    token: null,\n  };\n\n  componentDidMount() {\n    if (!this.props.token) {\n      const { remoteUrl } = this.props.content;\n      if (isInternalURL(remoteUrl)) {\n        this.props.history.replace(flattenToAppURL(remoteUrl));\n      } else if (!__SERVER__) {\n        window.location.href = flattenToAppURL(remoteUrl);\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { remoteUrl } = this.props.content;\n    return (\n      <Container id=\"page-document\">\n        <h1 className=\"documentFirstHeading\">{this.props.content.title}</h1>\n        {this.props.content.description && (\n          <p className=\"documentDescription\">\n            {this.props.content.description}\n          </p>\n        )}\n        {remoteUrl && (\n          <p>\n            <FormattedMessage\n              id=\"The link address is:\"\n              defaultMessage=\"The link address is:\"\n            />{' '}\n            <UniversalLink href={remoteUrl}>\n              {flattenToAppURL(remoteUrl)}\n            </UniversalLink>\n          </p>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default LinkView;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,aAAa,EAAEC,eAAe,QAAQ,sBAAsB;AACrE,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,gBAAgB,QAAQ,YAAY;;AAE7C;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,SAASP,SAAS,CAAC;EAC/B;AACF;AACA;AACA;AACA;;EAUE;AACF;AACA;AACA;AACA;;EAMEQ,iBAAiB,GAAG;IAClB,IAAI,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,EAAE;MACrB,MAAM;QAAEC;MAAU,CAAC,GAAG,IAAI,CAACF,KAAK,CAACG,OAAO;MACxC,IAAIV,aAAa,CAACS,SAAS,CAAC,EAAE;QAC5B,IAAI,CAACF,KAAK,CAACI,OAAO,CAACC,OAAO,CAACX,eAAe,CAACQ,SAAS,CAAC,CAAC;MACxD,CAAC,MAAM,IAAI,CAACI,UAAU,EAAE;QACtBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGf,eAAe,CAACQ,SAAS,CAAC;MACnD;IACF;EACF;;EAEA;AACF;AACA;AACA;AACA;EACEQ,MAAM,GAAG;IACP,MAAM;MAAER;IAAU,CAAC,GAAG,IAAI,CAACF,KAAK,CAACG,OAAO;IACxC,OACE,MAAC,SAAS;MAAC,EAAE,EAAC,eAAe;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC3B;MAAI,SAAS,EAAC,sBAAsB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAE,IAAI,CAACH,KAAK,CAACG,OAAO,CAACQ,KAAK,CAAM,EACnE,IAAI,CAACX,KAAK,CAACG,OAAO,CAACS,WAAW,IAC7B;MAAG,SAAS,EAAC,qBAAqB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC/B,IAAI,CAACZ,KAAK,CAACG,OAAO,CAACS,WAAW,CAElC,EACAV,SAAS,IACR;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACE,MAAC,gBAAgB;MACf,EAAE,EAAC,sBAAsB;MACzB,cAAc,EAAC,sBAAsB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACrC,EAAC,GAAG,EACN,MAAC,aAAa;MAAC,IAAI,EAAEA,SAAU;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC5BR,eAAe,CAACQ,SAAS,CAAC,CACb,CAEnB,CACS;EAEhB;AACF;AAAC,gBAjEKJ,QAAQ,eAMO;EACjBK,OAAO,EAAEX,SAAS,CAACqB,KAAK,CAAC;IACvBF,KAAK,EAAEnB,SAAS,CAACsB,MAAM;IACvBF,WAAW,EAAEpB,SAAS,CAACsB,MAAM;IAC7BZ,SAAS,EAAEV,SAAS,CAACsB;EACvB,CAAC,CAAC;EACFb,KAAK,EAAET,SAAS,CAACsB;AACnB,CAAC;AAAA,gBAbGhB,QAAQ,kBAoBU;EACpBK,OAAO,EAAE,IAAI;EACbF,KAAK,EAAE;AACT,CAAC;AA4CH,eAAeH,QAAQ"},"metadata":{"react-intl":{"messages":[{"id":"The link address is:","defaultMessage":"The link address is:"}]}},"sourceType":"module","externalDependencies":[]}