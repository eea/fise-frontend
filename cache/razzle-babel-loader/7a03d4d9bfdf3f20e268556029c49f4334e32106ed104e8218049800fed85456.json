{"ast":null,"code":"import _map from \"lodash/map\";\nimport _isEqual from \"lodash/isEqual\";\nimport _filter from \"lodash/filter\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Diff/Diff.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Diff component.\n * @module components/manage/Diff/Diff\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Container, Button, Dropdown, Grid, Table } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { getDiff, getSchema, getHistory } from '@plone/volto/actions';\nimport { getBaseUrl, getBlocksFieldname, getBlocksLayoutFieldname, hasBlocksData } from '@plone/volto/helpers';\nimport { DiffField, FormattedDate, Icon, Toolbar, Unauthorized } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  diff: {\n    \"id\": \"Diff\",\n    \"defaultMessage\": \"Diff\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  split: {\n    \"id\": \"Split\",\n    \"defaultMessage\": \"Split\"\n  },\n  unified: {\n    \"id\": \"Unified\",\n    \"defaultMessage\": \"Unified\"\n  }\n});\n\n/**\n * Diff class.\n * @class Diff\n * @extends Component\n */\nclass Diff extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  constructor(props) {\n    super(props);\n    this.onChangeOne = this.onChangeOne.bind(this);\n    this.onChangeTwo = this.onChangeTwo.bind(this);\n    this.onSelectView = this.onSelectView.bind(this);\n    this.state = {\n      isClient: false\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSchema(this.props.type);\n    this.props.getHistory(getBaseUrl(this.props.pathname));\n    this.props.getDiff(getBaseUrl(this.props.pathname), this.props.one, this.props.two);\n    this.setState({\n      isClient: true\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.pathname !== nextProps.pathname || this.props.one !== nextProps.one || this.props.two !== nextProps.two) {\n      this.props.getDiff(getBaseUrl(nextProps.pathname), nextProps.one, nextProps.two);\n    }\n  }\n\n  /**\n   * On select view handler\n   * @method onSelectView\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onSelectView(event, {\n    value\n  }) {\n    this.props.history.push(`${this.props.pathname}?one=${this.props.one}&two=${this.props.two}&view=${value}`);\n  }\n\n  /**\n   * On change one handler\n   * @method onChangeOne\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onChangeOne(event, {\n    value\n  }) {\n    this.props.history.push(`${this.props.pathname}?one=${value}&two=${this.props.two}&view=${this.props.view}`);\n  }\n\n  /**\n   * On change two handler\n   * @method onChangeTwo\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onChangeTwo(event, {\n    value\n  }) {\n    this.props.history.push(`${this.props.pathname}?one=${this.props.one}&two=${value}&view=${this.props.view}`);\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$error;\n    const versions = _map(_filter(this.props.historyEntries, entry => 'version' in entry), (entry, index) => ({\n      text: __jsx(React.Fragment, null, index === 0 ? 'Current' : entry.version, \"\\xA0(\", __jsx(FormattedDate, {\n        date: entry.time,\n        long: true,\n        className: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }\n      }), \", \\xA0\", entry.actor.fullname, \")\"),\n      value: `${entry.version}`,\n      key: `${entry.version}`\n    }));\n    return ((_this$props$error = this.props.error) === null || _this$props$error === void 0 ? void 0 : _this$props$error.status) === 401 ? __jsx(Unauthorized, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }\n    }) : __jsx(Container, {\n      id: \"page-diff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.diff),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Difference between revision {one} and {two} of {title}\",\n      defaultMessage: \"Difference between revision {one} and {two} of {title}\",\n      values: {\n        one: this.props.one,\n        two: this.props.two,\n        title: this.props.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    })), __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }, __jsx(Grid.Column, {\n      width: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"You can view the difference of the revisions below.\",\n      defaultMessage: \"You can view the difference of the revisions below.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }))), __jsx(Grid.Column, {\n      width: 3,\n      textAlign: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }\n    }, __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, _map([{\n      id: 'split',\n      label: this.props.intl.formatMessage(messages.split)\n    }, {\n      id: 'unified',\n      label: this.props.intl.formatMessage(messages.unified)\n    }], view => __jsx(Button, {\n      key: view.id,\n      value: view.id,\n      active: this.props.view === view.id,\n      onClick: this.onSelectView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, view.label))))), this.props.historyEntries.length > 0 && __jsx(Table, {\n      basic: \"very\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }\n    }, __jsx(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 15\n      }\n    }, __jsx(Table.HeaderCell, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Base\",\n      defaultMessage: \"Base\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 19\n      }\n    }), __jsx(Dropdown, {\n      onChange: this.onChangeOne,\n      value: this.props.one,\n      selection: true,\n      fluid: true,\n      options: versions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 19\n      }\n    })), __jsx(Table.HeaderCell, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Compare\",\n      defaultMessage: \"Compare\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 19\n      }\n    }), __jsx(Dropdown, {\n      onChange: this.onChangeTwo,\n      value: this.props.two,\n      selection: true,\n      fluid: true,\n      options: versions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    }))))), this.props.schema && this.props.data.length > 0 && _map(this.props.schema.fieldsets, fieldset => _map(fieldset.fields, field => !_isEqual(this.props.data[0][field], this.props.data[1][field]) && field !== getBlocksFieldname(this.props.data[0]) && field !== getBlocksLayoutFieldname(this.props.data[0]) && __jsx(DiffField, {\n      key: field,\n      one: this.props.data[0][field],\n      two: this.props.data[1][field],\n      schema: this.props.schema.properties[field],\n      view: this.props.view,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 19\n      }\n    }))), this.props.schema && this.props.data.length > 0 && hasBlocksData(this.props.data[0]) && (!_isEqual(this.props.data[0][getBlocksFieldname(this.props.data[0])], this.props.data[1][getBlocksFieldname(this.props.data[1])]) || !_isEqual(this.props.data[0][getBlocksLayoutFieldname(this.props.data[0])], this.props.data[1][getBlocksLayoutFieldname(this.props.data[1])])) && __jsx(DiffField, {\n      one: this.props.data[0][getBlocksFieldname(this.props.data[0])],\n      two: this.props.data[1][getBlocksFieldname(this.props.data[1])],\n      contentOne: this.props.data[0],\n      contentTwo: this.props.data[1],\n      schema: this.props.schema.properties[getBlocksFieldname(this.props.data[0])],\n      view: this.props.view,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }\n    }), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(Link, {\n        to: `${getBaseUrl(this.props.pathname)}/historyview`,\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n_defineProperty(Diff, \"propTypes\", {\n  getDiff: PropTypes.func.isRequired,\n  getSchema: PropTypes.func.isRequired,\n  getHistory: PropTypes.func.isRequired,\n  schema: PropTypes.objectOf(PropTypes.any),\n  error: PropTypes.objectOf(PropTypes.any),\n  pathname: PropTypes.string.isRequired,\n  one: PropTypes.string.isRequired,\n  two: PropTypes.string.isRequired,\n  view: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string\n  })).isRequired,\n  historyEntries: PropTypes.arrayOf(PropTypes.shape({\n    version: PropTypes.number,\n    time: PropTypes.string,\n    actor: PropTypes.shape({\n      fullname: PropTypes.string\n    })\n  })).isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n});\n_defineProperty(Diff, \"defaultProps\", {\n  schema: null\n});\nexport default compose(withRouter, injectIntl, connect((state, props) => {\n  var _state$content$data, _state$content$data2;\n  return {\n    data: state.diff.data,\n    historyEntries: state.history.entries,\n    schema: state.schema.schema,\n    error: state.diff.error,\n    pathname: props.location.pathname,\n    one: qs.parse(props.location.search).one,\n    two: qs.parse(props.location.search).two,\n    view: qs.parse(props.location.search).view || 'split',\n    title: (_state$content$data = state.content.data) === null || _state$content$data === void 0 ? void 0 : _state$content$data.title,\n    type: (_state$content$data2 = state.content.data) === null || _state$content$data2 === void 0 ? void 0 : _state$content$data2['@type']\n  };\n}, {\n  getDiff,\n  getSchema,\n  getHistory\n}))(Diff);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","connect","compose","Container","Button","Dropdown","Grid","Table","Link","withRouter","Portal","FormattedMessage","defineMessages","injectIntl","qs","getDiff","getSchema","getHistory","getBaseUrl","getBlocksFieldname","getBlocksLayoutFieldname","hasBlocksData","DiffField","FormattedDate","Icon","Toolbar","Unauthorized","backSVG","messages","diff","back","split","unified","Diff","constructor","props","onChangeOne","bind","onChangeTwo","onSelectView","state","isClient","componentDidMount","type","pathname","one","two","setState","UNSAFE_componentWillReceiveProps","nextProps","event","value","history","push","view","render","versions","historyEntries","entry","index","text","version","time","actor","fullname","key","error","status","intl","formatMessage","title","id","label","length","schema","data","fieldsets","fieldset","fields","field","properties","document","getElementById","func","isRequired","objectOf","any","string","arrayOf","shape","number","entries","location","parse","search","content"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Diff/Diff.jsx"],"sourcesContent":["/**\n * Diff component.\n * @module components/manage/Diff/Diff\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { filter, isEqual, map } from 'lodash';\nimport { Container, Button, Dropdown, Grid, Table } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\n\nimport { getDiff, getSchema, getHistory } from '@plone/volto/actions';\nimport {\n  getBaseUrl,\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  hasBlocksData,\n} from '@plone/volto/helpers';\nimport {\n  DiffField,\n  FormattedDate,\n  Icon,\n  Toolbar,\n  Unauthorized,\n} from '@plone/volto/components';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  diff: {\n    id: 'Diff',\n    defaultMessage: 'Diff',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  split: {\n    id: 'Split',\n    defaultMessage: 'Split',\n  },\n  unified: {\n    id: 'Unified',\n    defaultMessage: 'Unified',\n  },\n});\n\n/**\n * Diff class.\n * @class Diff\n * @extends Component\n */\nclass Diff extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getDiff: PropTypes.func.isRequired,\n    getSchema: PropTypes.func.isRequired,\n    getHistory: PropTypes.func.isRequired,\n    schema: PropTypes.objectOf(PropTypes.any),\n    error: PropTypes.objectOf(PropTypes.any),\n    pathname: PropTypes.string.isRequired,\n    one: PropTypes.string.isRequired,\n    two: PropTypes.string.isRequired,\n    view: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n      }),\n    ).isRequired,\n    historyEntries: PropTypes.arrayOf(\n      PropTypes.shape({\n        version: PropTypes.number,\n        time: PropTypes.string,\n        actor: PropTypes.shape({ fullname: PropTypes.string }),\n      }),\n    ).isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    schema: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  constructor(props) {\n    super(props);\n    this.onChangeOne = this.onChangeOne.bind(this);\n    this.onChangeTwo = this.onChangeTwo.bind(this);\n    this.onSelectView = this.onSelectView.bind(this);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSchema(this.props.type);\n    this.props.getHistory(getBaseUrl(this.props.pathname));\n    this.props.getDiff(\n      getBaseUrl(this.props.pathname),\n      this.props.one,\n      this.props.two,\n    );\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.pathname !== nextProps.pathname ||\n      this.props.one !== nextProps.one ||\n      this.props.two !== nextProps.two\n    ) {\n      this.props.getDiff(\n        getBaseUrl(nextProps.pathname),\n        nextProps.one,\n        nextProps.two,\n      );\n    }\n  }\n\n  /**\n   * On select view handler\n   * @method onSelectView\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onSelectView(event, { value }) {\n    this.props.history.push(\n      `${this.props.pathname}?one=${this.props.one}&two=${this.props.two}&view=${value}`,\n    );\n  }\n\n  /**\n   * On change one handler\n   * @method onChangeOne\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onChangeOne(event, { value }) {\n    this.props.history.push(\n      `${this.props.pathname}?one=${value}&two=${this.props.two}&view=${this.props.view}`,\n    );\n  }\n\n  /**\n   * On change two handler\n   * @method onChangeTwo\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onChangeTwo(event, { value }) {\n    this.props.history.push(\n      `${this.props.pathname}?one=${this.props.one}&two=${value}&view=${this.props.view}`,\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const versions = map(\n      filter(this.props.historyEntries, (entry) => 'version' in entry),\n      (entry, index) => ({\n        text: (\n          <>\n            {index === 0 ? 'Current' : entry.version}&nbsp;(\n            <FormattedDate date={entry.time} long className=\"text\" />, &nbsp;\n            {entry.actor.fullname})\n          </>\n        ),\n        value: `${entry.version}`,\n        key: `${entry.version}`,\n      }),\n    );\n\n    return this.props.error?.status === 401 ? (\n      <Unauthorized />\n    ) : (\n      <Container id=\"page-diff\">\n        <Helmet title={this.props.intl.formatMessage(messages.diff)} />\n        <h1>\n          <FormattedMessage\n            id=\"Difference between revision {one} and {two} of {title}\"\n            defaultMessage=\"Difference between revision {one} and {two} of {title}\"\n            values={{\n              one: this.props.one,\n              two: this.props.two,\n              title: this.props.title,\n            }}\n          />\n        </h1>\n        <Grid>\n          <Grid.Column width={9}>\n            <p className=\"description\">\n              <FormattedMessage\n                id=\"You can view the difference of the revisions below.\"\n                defaultMessage=\"You can view the difference of the revisions below.\"\n              />\n            </p>\n          </Grid.Column>\n          <Grid.Column width={3} textAlign=\"right\">\n            <Button.Group>\n              {map(\n                [\n                  {\n                    id: 'split',\n                    label: this.props.intl.formatMessage(messages.split),\n                  },\n                  {\n                    id: 'unified',\n                    label: this.props.intl.formatMessage(messages.unified),\n                  },\n                ],\n                (view) => (\n                  <Button\n                    key={view.id}\n                    value={view.id}\n                    active={this.props.view === view.id}\n                    onClick={this.onSelectView}\n                  >\n                    {view.label}\n                  </Button>\n                ),\n              )}\n            </Button.Group>\n          </Grid.Column>\n        </Grid>\n        {this.props.historyEntries.length > 0 && (\n          <Table basic=\"very\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width={6}>\n                  <FormattedMessage id=\"Base\" defaultMessage=\"Base\" />\n                  <Dropdown\n                    onChange={this.onChangeOne}\n                    value={this.props.one}\n                    selection\n                    fluid\n                    options={versions}\n                  />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={6}>\n                  <FormattedMessage id=\"Compare\" defaultMessage=\"Compare\" />\n                  <Dropdown\n                    onChange={this.onChangeTwo}\n                    value={this.props.two}\n                    selection\n                    fluid\n                    options={versions}\n                  />\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n          </Table>\n        )}\n        {this.props.schema &&\n          this.props.data.length > 0 &&\n          map(this.props.schema.fieldsets, (fieldset) =>\n            map(\n              fieldset.fields,\n              (field) =>\n                !isEqual(\n                  this.props.data[0][field],\n                  this.props.data[1][field],\n                ) &&\n                field !== getBlocksFieldname(this.props.data[0]) &&\n                field !== getBlocksLayoutFieldname(this.props.data[0]) && (\n                  <DiffField\n                    key={field}\n                    one={this.props.data[0][field]}\n                    two={this.props.data[1][field]}\n                    schema={this.props.schema.properties[field]}\n                    view={this.props.view}\n                  />\n                ),\n            ),\n          )}\n        {this.props.schema &&\n          this.props.data.length > 0 &&\n          hasBlocksData(this.props.data[0]) &&\n          (!isEqual(\n            this.props.data[0][getBlocksFieldname(this.props.data[0])],\n            this.props.data[1][getBlocksFieldname(this.props.data[1])],\n          ) ||\n            !isEqual(\n              this.props.data[0][getBlocksLayoutFieldname(this.props.data[0])],\n              this.props.data[1][getBlocksLayoutFieldname(this.props.data[1])],\n            )) && (\n            <DiffField\n              one={this.props.data[0][getBlocksFieldname(this.props.data[0])]}\n              two={this.props.data[1][getBlocksFieldname(this.props.data[1])]}\n              contentOne={this.props.data[0]}\n              contentTwo={this.props.data[1]}\n              schema={\n                this.props.schema.properties[\n                  getBlocksFieldname(this.props.data[0])\n                ]\n              }\n              view={this.props.view}\n            />\n          )}\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link\n                  to={`${getBaseUrl(this.props.pathname)}/historyview`}\n                  className=\"item\"\n                >\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      data: state.diff.data,\n      historyEntries: state.history.entries,\n      schema: state.schema.schema,\n      error: state.diff.error,\n      pathname: props.location.pathname,\n      one: qs.parse(props.location.search).one,\n      two: qs.parse(props.location.search).two,\n      view: qs.parse(props.location.search).view || 'split',\n      title: state.content.data?.title,\n      type: state.content.data?.['@type'],\n    }),\n    { getDiff, getSchema, getHistory },\n  ),\n)(Diff);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Diff","defaultMessage":"Diff"},{"id":"Back","defaultMessage":"Back"},{"id":"Split","defaultMessage":"Split"},{"id":"Unified","defaultMessage":"Unified"},{"id":"Difference between revision {one} and {two} of {title}","defaultMessage":"Difference between revision {one} and {two} of {title}"},{"id":"You can view the difference of the revisions below.","defaultMessage":"You can view the difference of the revisions below."},{"id":"Base","defaultMessage":"Base"},{"id":"Compare","defaultMessage":"Compare"}]}},"sourceType":"module","externalDependencies":[]}