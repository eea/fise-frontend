{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/widgets/BlocksBrowser/BlocksBrowser.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport BlocksBrowserBody from './BlocksBrowserBody';\nimport ReactDOM from 'react-dom';\nvar DEFAULT_TIMEOUT = 500;\nvar withBlocksBrowser = function withBlocksBrowser(WrappedComponent) {\n  var _class;\n  return _class = /*#__PURE__*/function (_React$Component) {\n    _inherits(_class, _React$Component);\n    var _super = _createSuper(_class);\n    /**\n     * Default properties\n     * @property {Object} defaultProps Default properties.\n     * @static\n     */\n\n    function _class() {\n      var _this;\n      _classCallCheck(this, _class);\n      _this = _super.call(this);\n      _defineProperty(_assertThisInitialized(_this), \"openObjectBrowser\", function () {\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$onSelectItem = _ref.onSelectItem,\n          onSelectItem = _ref$onSelectItem === void 0 ? null : _ref$onSelectItem,\n          _ref$dataName = _ref.dataName,\n          dataName = _ref$dataName === void 0 ? null : _ref$dataName,\n          _ref$overlay = _ref.overlay,\n          overlay = _ref$overlay === void 0 ? null : _ref$overlay,\n          _ref$propDataName = _ref.propDataName,\n          propDataName = _ref$propDataName === void 0 ? null : _ref$propDataName,\n          selectableTypes = _ref.selectableTypes,\n          maximumSelectionSize = _ref.maximumSelectionSize;\n        return _this.setState(function () {\n          return {\n            isObjectBrowserOpen: true,\n            onSelectItem: onSelectItem,\n            dataName: dataName,\n            overlay: overlay,\n            propDataName: propDataName,\n            selectableTypes: selectableTypes,\n            maximumSelectionSize: maximumSelectionSize\n          };\n        });\n      });\n      _defineProperty(_assertThisInitialized(_this), \"closeObjectBrowser\", function () {\n        return _this.setState({\n          isObjectBrowserOpen: false\n        });\n      });\n      _this.state = {\n        isObjectBrowserOpen: false\n      };\n      return _this;\n    }\n\n    /**\n     * openObjectBrowser\n     * @function openObjectBrowser\n     * @param {Object} object ObjectBrowser configuration.\n     * @param {string} object.dataName Name of the block data property to write the selected item.\n     * @param {string} object.onSelectItem Function that will be called on item selection.\n     * @param {string} object.overlay Boolean to show overlay background on content when opening objectBrowser.\n     *\n     * Usage:\n     *\n     * this.props.openObjectBrowser();\n     *\n     * this.props.openObjectBrowser({mode: 'link'});\n     *\n     * this.props.openObjectBrowser({\n     *   dataName: 'myfancydatafield'\n     *   });\n     *\n     * this.props.openObjectBrowser({\n     *   onSelectItem: url =>\n     *     this.props.onChangeBlock(this.props.block, {\n     *       ...this.props.data,\n     *       myfancydatafield: url,\n     *     }),\n     *   });\n     */\n    _createClass(_class, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props$pathname, _this$props$location;\n        var contextURL = (_this$props$pathname = this.props.pathname) !== null && _this$props$pathname !== void 0 ? _this$props$pathname : (_this$props$location = this.props.location) === null || _this$props$location === void 0 ? void 0 : _this$props$location.pathname;\n        return __jsx(React.Fragment, null, __jsx(WrappedComponent, _extends({}, this.props, {\n          isObjectBrowserOpen: this.state.isObjectBrowserOpen,\n          openObjectBrowser: this.openObjectBrowser,\n          closeObjectBrowser: this.closeObjectBrowser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }\n        })), __jsx(React.Fragment, null, __jsx(CSSTransition, {\n          \"in\": this.state.isObjectBrowserOpen && this.state.overlay,\n          timeout: DEFAULT_TIMEOUT,\n          classNames: \"overlay-container\",\n          unmountOnExit: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        }, __jsx(React.Fragment, null, __CLIENT__ && /*#__PURE__*/ReactDOM.createPortal(__jsx(\"div\", {\n          className: \"overlay-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }\n        }), document.body))), __jsx(CSSTransition, {\n          \"in\": this.state.isObjectBrowserOpen,\n          timeout: DEFAULT_TIMEOUT,\n          classNames: \"sidebar-container\",\n          unmountOnExit: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        }, __jsx(BlocksBrowserBody, _extends({}, this.props, {\n          data: this.state.propDataName ? this.props[this.state.propDataName] : _objectSpread(_objectSpread({}, this.props.data), {}, {\n            contextURL: contextURL\n          }),\n          closeObjectBrowser: this.closeObjectBrowser,\n          onSelectItem: this.state.onSelectItem,\n          dataName: this.state.dataName,\n          selectableTypes: this.state.selectableTypes,\n          maximumSelectionSize: this.state.maximumSelectionSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }\n        })))));\n      }\n    }]);\n    return _class;\n  }(React.Component), _defineProperty(_class, \"defaultProps\", {\n    onChangeBlock: function onChangeBlock() {},\n    data: {},\n    block: new Date().getTime() + ''\n  }), _class;\n};\nexport default withBlocksBrowser;","map":{"version":3,"names":["React","CSSTransition","BlocksBrowserBody","ReactDOM","DEFAULT_TIMEOUT","withBlocksBrowser","WrappedComponent","onSelectItem","dataName","overlay","propDataName","selectableTypes","maximumSelectionSize","setState","isObjectBrowserOpen","state","contextURL","props","pathname","location","openObjectBrowser","closeObjectBrowser","__CLIENT__","createPortal","document","body","data","Component","onChangeBlock","block","Date","getTime"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/widgets/BlocksBrowser/BlocksBrowser.jsx"],"sourcesContent":["import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport BlocksBrowserBody from './BlocksBrowserBody';\nimport ReactDOM from 'react-dom';\n\nconst DEFAULT_TIMEOUT = 500;\n\nconst withBlocksBrowser = (WrappedComponent) =>\n  class extends React.Component {\n    /**\n     * Default properties\n     * @property {Object} defaultProps Default properties.\n     * @static\n     */\n    static defaultProps = {\n      onChangeBlock: () => {},\n      data: {},\n      block: new Date().getTime() + '',\n    };\n\n    constructor() {\n      super();\n      this.state = { isObjectBrowserOpen: false };\n    }\n\n    /**\n     * openObjectBrowser\n     * @function openObjectBrowser\n     * @param {Object} object ObjectBrowser configuration.\n     * @param {string} object.dataName Name of the block data property to write the selected item.\n     * @param {string} object.onSelectItem Function that will be called on item selection.\n     * @param {string} object.overlay Boolean to show overlay background on content when opening objectBrowser.\n     *\n     * Usage:\n     *\n     * this.props.openObjectBrowser();\n     *\n     * this.props.openObjectBrowser({mode: 'link'});\n     *\n     * this.props.openObjectBrowser({\n     *   dataName: 'myfancydatafield'\n     *   });\n     *\n     * this.props.openObjectBrowser({\n     *   onSelectItem: url =>\n     *     this.props.onChangeBlock(this.props.block, {\n     *       ...this.props.data,\n     *       myfancydatafield: url,\n     *     }),\n     *   });\n     */\n    openObjectBrowser = ({\n      onSelectItem = null,\n      dataName = null,\n      overlay = null,\n      propDataName = null,\n      selectableTypes,\n      maximumSelectionSize,\n    } = {}) =>\n      this.setState(() => ({\n        isObjectBrowserOpen: true,\n        onSelectItem,\n        dataName,\n        overlay,\n        propDataName,\n        selectableTypes,\n        maximumSelectionSize,\n      }));\n\n    closeObjectBrowser = () => this.setState({ isObjectBrowserOpen: false });\n\n    render() {\n      let contextURL = this.props.pathname ?? this.props.location?.pathname;\n      return (\n        <>\n          <WrappedComponent\n            {...this.props}\n            isObjectBrowserOpen={this.state.isObjectBrowserOpen}\n            openObjectBrowser={this.openObjectBrowser}\n            closeObjectBrowser={this.closeObjectBrowser}\n          />\n\n          <>\n            <CSSTransition\n              in={this.state.isObjectBrowserOpen && this.state.overlay}\n              timeout={DEFAULT_TIMEOUT}\n              classNames=\"overlay-container\"\n              unmountOnExit\n            >\n              <>\n                {__CLIENT__ &&\n                  ReactDOM.createPortal(\n                    <div className=\"overlay-container\"></div>,\n                    document.body,\n                  )}\n              </>\n            </CSSTransition>\n            <CSSTransition\n              in={this.state.isObjectBrowserOpen}\n              timeout={DEFAULT_TIMEOUT}\n              classNames=\"sidebar-container\"\n              unmountOnExit\n            >\n              <BlocksBrowserBody\n                {...this.props}\n                data={\n                  this.state.propDataName\n                    ? this.props[this.state.propDataName]\n                    : { ...this.props.data, contextURL }\n                }\n                closeObjectBrowser={this.closeObjectBrowser}\n                onSelectItem={this.state.onSelectItem}\n                dataName={this.state.dataName}\n                selectableTypes={this.state.selectableTypes}\n                maximumSelectionSize={this.state.maximumSelectionSize}\n              />\n            </CSSTransition>\n          </>\n        </>\n      );\n    }\n  };\nexport default withBlocksBrowser;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}