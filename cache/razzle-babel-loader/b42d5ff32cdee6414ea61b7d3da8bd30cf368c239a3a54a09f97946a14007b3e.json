{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-columns-block/src/Widgets/QuadSize.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Field, FormFieldWrapper } from '@plone/volto/components';\nimport { Grid } from 'semantic-ui-react';\nimport { Slider } from './Slider';\nconst messages = defineMessages({\n  labelUnit: {\n    \"id\": \"Unit\",\n    \"defaultMessage\": \"Unit\"\n  },\n  labelPercentage: {\n    \"id\": \"Percentage\",\n    \"defaultMessage\": \"Percentage\"\n  },\n  labelSize: {\n    \"id\": \"Size\",\n    \"defaultMessage\": \"Size\"\n  },\n  labelCustomize: {\n    \"id\": \"Customize\",\n    \"defaultMessage\": \"Customize\"\n  }\n});\nconst getFields = intl => {\n  return {\n    unitField: {\n      title: intl.formatMessage(messages.labelUnit),\n      columns: 2,\n      placeholder: intl.formatMessage(messages.labelUnit),\n      defaultValue: 'px',\n      choices: [['px', 'px'], ['%', 'percentage'], ['em', 'em'], ['rem', 'rem']]\n    }\n  };\n};\nconst getMax = unit => {\n  switch (unit) {\n    case '%':\n      return 100;\n    case 'px':\n      return 100;\n    case 'em':\n      return 24;\n    case 'rem':\n      return 24;\n    default:\n      return 10;\n  }\n};\nconst QuadSizeWidget = props => {\n  const intl = useIntl();\n  const {\n    value = {},\n    id,\n    onChange,\n    sliderSettings = {\n      max: 12,\n      min: 0,\n      step: 1,\n      start: 0\n    }\n  } = props;\n  const {\n    top = 0,\n    right = 0,\n    bottom = 0,\n    left = 0,\n    unit = 'px',\n    unlock = false\n  } = value;\n  const settings = _objectSpread(_objectSpread({}, sliderSettings), {}, {\n    max: getMax(unit)\n  });\n  const fields = getFields(intl);\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }), __jsx(Field, _extends({\n    columns: 2,\n    id: `${id}-unit`\n  }, fields.unitField, {\n    onChange: (fid, val) => onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n      unit: val\n    })),\n    value: value.unit || 'px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  })), unlock ? __jsx(Grid, {\n    columns: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(Grid.Column, {\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), __jsx(Grid.Column, {\n    width: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, __jsx(Slider, {\n    settings: _objectSpread({\n      onChange: val => onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n        top: val\n      }))\n    }, settings),\n    value: top,\n    extra: __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 22\n      }\n    }, top),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })), __jsx(Grid.Column, {\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), __jsx(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, __jsx(Slider, {\n    settings: _objectSpread({\n      onChange: val => onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n        left: val\n      }))\n    }, settings),\n    value: left,\n    extra: __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 22\n      }\n    }, left),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  })), __jsx(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, __jsx(Slider, {\n    settings: _objectSpread({\n      onChange: val => onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n        right: val\n      }))\n    }, settings),\n    value: right,\n    extra: __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 22\n      }\n    }, right),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  })), __jsx(Grid.Column, {\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), __jsx(Grid.Column, {\n    width: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, __jsx(Slider, {\n    settings: _objectSpread({\n      onChange: val => onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n        bottom: val\n      }))\n    }, settings),\n    extra: __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 22\n      }\n    }, bottom),\n    value: bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  })), __jsx(Grid.Column, {\n    width: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  })) : __jsx(Field, {\n    id: `${id}-slider`,\n    settings: settings,\n    onChange: (fid, val) => {\n      onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n        top: val,\n        left: val,\n        bottom: val,\n        right: val\n      }));\n    },\n    value: top,\n    title: intl.formatMessage(messages.labelSize),\n    widget: \"slider\",\n    columns: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }), __jsx(Field, {\n    id: `${id}-lockSize`,\n    onChange: (fid, val) => onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n      unlock: val\n    })),\n    value: unlock,\n    title: intl.formatMessage(messages.labelCustomize),\n    type: \"boolean\",\n    columns: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }));\n};\nexport default QuadSizeWidget;","map":{"version":3,"names":["React","defineMessages","useIntl","Field","FormFieldWrapper","Grid","Slider","messages","labelUnit","labelPercentage","labelSize","labelCustomize","getFields","intl","unitField","title","formatMessage","columns","placeholder","defaultValue","choices","getMax","unit","QuadSizeWidget","props","value","id","onChange","sliderSettings","max","min","step","start","top","right","bottom","left","unlock","settings","fields","fid","val"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-columns-block/src/Widgets/QuadSize.jsx"],"sourcesContent":["import React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Field, FormFieldWrapper } from '@plone/volto/components';\nimport { Grid } from 'semantic-ui-react';\nimport { Slider } from './Slider';\n\nconst messages = defineMessages({\n  labelUnit: {\n    id: 'Unit',\n    defaultMessage: 'Unit',\n  },\n  labelPercentage: {\n    id: 'Percentage',\n    defaultMessage: 'Percentage',\n  },\n  labelSize: {\n    id: 'Size',\n    defaultMessage: 'Size',\n  },\n  labelCustomize: {\n    id: 'Customize',\n    defaultMessage: 'Customize',\n  },\n});\n\nconst getFields = (intl) => {\n  return {\n    unitField: {\n      title: intl.formatMessage(messages.labelUnit),\n      columns: 2,\n      placeholder: intl.formatMessage(messages.labelUnit),\n      defaultValue: 'px',\n      choices: [\n        ['px', 'px'],\n        ['%', 'percentage'],\n        ['em', 'em'],\n        ['rem', 'rem'],\n      ],\n    },\n  };\n};\n\nconst getMax = (unit) => {\n  switch (unit) {\n    case '%':\n      return 100;\n    case 'px':\n      return 100;\n    case 'em':\n      return 24;\n    case 'rem':\n      return 24;\n    default:\n      return 10;\n  }\n};\n\nconst QuadSizeWidget = (props) => {\n  const intl = useIntl();\n  const {\n    value = {},\n    id,\n    onChange,\n    sliderSettings = {\n      max: 12,\n      min: 0,\n      step: 1,\n      start: 0,\n    },\n  } = props;\n  const {\n    top = 0,\n    right = 0,\n    bottom = 0,\n    left = 0,\n    unit = 'px',\n    unlock = false,\n  } = value;\n  const settings = {\n    ...sliderSettings,\n    max: getMax(unit),\n  };\n  const fields = getFields(intl);\n\n  return (\n    <FormFieldWrapper {...props}>\n      <Field\n        columns={2}\n        id={`${id}-unit`}\n        {...fields.unitField}\n        onChange={(fid, val) => onChange(id, { ...value, unit: val })}\n        value={value.unit || 'px'}\n      />\n\n      {unlock ? (\n        <Grid columns={2}>\n          <Grid.Column width={3}></Grid.Column>\n          <Grid.Column width={6}>\n            <Slider\n              settings={{\n                onChange: (val) => onChange(id, { ...value, top: val }),\n                ...settings,\n              }}\n              value={top}\n              extra={<strong>{top}</strong>}\n            />\n          </Grid.Column>\n          <Grid.Column width={3}></Grid.Column>\n          <Grid.Column>\n            <Slider\n              settings={{\n                onChange: (val) => onChange(id, { ...value, left: val }),\n                ...settings,\n              }}\n              value={left}\n              extra={<strong>{left}</strong>}\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <Slider\n              settings={{\n                onChange: (val) => onChange(id, { ...value, right: val }),\n                ...settings,\n              }}\n              value={right}\n              extra={<strong>{right}</strong>}\n            />\n          </Grid.Column>\n          <Grid.Column width={3}></Grid.Column>\n          <Grid.Column width={6}>\n            <Slider\n              settings={{\n                onChange: (val) => onChange(id, { ...value, bottom: val }),\n                ...settings,\n              }}\n              extra={<strong>{bottom}</strong>}\n              value={bottom}\n            />\n          </Grid.Column>\n          <Grid.Column width={3}></Grid.Column>\n        </Grid>\n      ) : (\n        <Field\n          id={`${id}-slider`}\n          settings={settings}\n          onChange={(fid, val) => {\n            onChange(id, {\n              ...value,\n              top: val,\n              left: val,\n              bottom: val,\n              right: val,\n            });\n          }}\n          value={top}\n          title={intl.formatMessage(messages.labelSize)}\n          widget=\"slider\"\n          columns={2}\n        />\n      )}\n\n      <Field\n        id={`${id}-lockSize`}\n        onChange={(fid, val) => onChange(id, { ...value, unlock: val })}\n        value={unlock}\n        title={intl.formatMessage(messages.labelCustomize)}\n        type=\"boolean\"\n        columns={1}\n      />\n    </FormFieldWrapper>\n  );\n};\n\nexport default QuadSizeWidget;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Unit","defaultMessage":"Unit"},{"id":"Percentage","defaultMessage":"Percentage"},{"id":"Size","defaultMessage":"Size"},{"id":"Customize","defaultMessage":"Customize"}]}},"sourceType":"module","externalDependencies":[]}