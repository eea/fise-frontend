{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-plotlycharts/src/ConnectedChart/ConnectedChart.jsx\";\nvar __jsx = React.createElement;\n/*\n * The most basic connected block chart\n */\n\nimport React from 'react';\nimport { compose } from 'redux';\nimport loadable from '@loadable/component';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport { updateChartDataFromProvider } from '@eeacms/volto-datablocks/helpers';\nimport { Sources } from '@eeacms/volto-datablocks/Utils';\nimport { connectBlockToVisualization } from '@eeacms/volto-plotlycharts/hocs';\nimport config from '@plone/volto/registry';\nvar LoadablePlotly = loadable({\n  resolved: {},\n  chunkName: function chunkName() {\n    return \"react-plotly\";\n  },\n  isReady: function isReady(props) {\n    var key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: function importAsync() {\n    return import( /* webpackChunkName: \"react-plotly\" */'react-plotly.js');\n  },\n  requireAsync: function requireAsync(props) {\n    var _this = this;\n    var key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(function (resolved) {\n      _this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync: function requireSync(props) {\n    var id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve: function resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-plotly.js\");\n    }\n    return eval('require.resolve')(\"react-plotly.js\");\n  }\n});\n\n/*\n * ConnectedChart\n */\n_c = LoadablePlotly;\nfunction ConnectedChart(props) {\n  var _props$data$use_live_, _props$data, _props$data$with_sour, _props$data2, _chartData$layout, _chartData$layout2, _props$data3, _props$data4, _props$data5;\n  var hoverFormatXY = props.hoverFormatXY,\n    loadingVisualizationData = props.loadingVisualizationData,\n    provider_data = props.provider_data,\n    provider_metadata = props.provider_metadata,\n    visualization = props.visualization,\n    visualization_data = props.visualization_data,\n    width = props.width,\n    _props$height = props.height,\n    height = _props$height === void 0 ? 450 : _props$height;\n  var use_live_data = (_props$data$use_live_ = (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.use_live_data) !== null && _props$data$use_live_ !== void 0 ? _props$data$use_live_ : true;\n  var with_sources = (_props$data$with_sour = (_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.with_sources) !== null && _props$data$with_sour !== void 0 ? _props$data$with_sour : true;\n  var chartData = (visualization === null || visualization === void 0 ? void 0 : visualization.chartData) || (visualization_data === null || visualization_data === void 0 ? void 0 : visualization_data.chartData) || {};\n  var layout = _objectSpread(_objectSpread({}, chartData.layout || {}), {}, {\n    autosize: true,\n    dragmode: false,\n    font: _objectSpread(_objectSpread({}, ((_chartData$layout = chartData.layout) === null || _chartData$layout === void 0 ? void 0 : _chartData$layout.font) || {}), {}, {\n      family: config.settings.chartLayoutFontFamily || \"'Roboto', sans-serif\"\n    }),\n    margin: _objectSpread({\n      l: 80,\n      // default: 80\n      r: 80,\n      // default: 80\n      b: 80,\n      // default: 80\n      t: 100\n    }, ((_chartData$layout2 = chartData.layout) === null || _chartData$layout2 === void 0 ? void 0 : _chartData$layout2.margin) || {})\n  });\n  delete layout.width;\n  delete layout.height;\n  if (layout.xaxis) {\n    layout.xaxis = _objectSpread(_objectSpread({}, layout.xaxis), {}, {\n      hoverformat: hoverFormatXY || layout.xaxis.hoverformat || layout.xaxis.tickformat || ''\n    });\n  }\n  if (layout.yaxis) {\n    layout.yaxis = _objectSpread(_objectSpread({}, layout.yaxis), {}, {\n      hoverformat: hoverFormatXY || layout.xaxis.hoverformat || layout.xaxis.tickformat || ''\n    });\n  }\n  var data = provider_data && use_live_data ? updateChartDataFromProvider(chartData.data || [], provider_data) : chartData.data || [];\n  data = data.map(function (trace) {\n    return _objectSpread(_objectSpread({}, trace), {}, {\n      textfont: _objectSpread(_objectSpread({}, trace.textfont), {}, {\n        family: config.settings.chartDataFontFamily || \"'Roboto', sans-serif\"\n      })\n    });\n  });\n  if (loadingVisualizationData) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 12\n      }\n    }, \"Loading chart...\");\n  }\n  return !Object.keys(chartData).length ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, \"No valid data.\") : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"connected-chart-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(LoadablePlotly, {\n    useResizeHandler: true,\n    data: data,\n    layout: layout,\n    frames: [],\n    config: {\n      displayModeBar: false,\n      editable: false,\n      responsive: true\n    },\n    style: {\n      width: width ? width + 'px' : '100%',\n      height: height + 'px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })), with_sources && props.data ? __jsx(Sources, {\n    data: {\n      data_query: props.data.data_query\n    },\n    sources: props.data.chartSources,\n    title: ((_props$data3 = props.data) === null || _props$data3 === void 0 ? void 0 : _props$data3.vis_url) || ((_props$data4 = props.data) === null || _props$data4 === void 0 ? void 0 : _props$data4.provider_url) || ((_props$data5 = props.data) === null || _props$data5 === void 0 ? void 0 : _props$data5.title),\n    provider_data: provider_data,\n    provider_metadata: provider_metadata,\n    download_button: props.data.download_button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }) : '');\n}\n_c2 = ConnectedChart;\nexport default compose(connectBlockToVisualization(function (props) {\n  var _props$data6, _props$data$use_live_2, _props$data7;\n  return {\n    vis_url: ((_props$data6 = props.data) === null || _props$data6 === void 0 ? void 0 : _props$data6.vis_url) || null,\n    use_live_data: (_props$data$use_live_2 = (_props$data7 = props.data) === null || _props$data7 === void 0 ? void 0 : _props$data7.use_live_data) !== null && _props$data$use_live_2 !== void 0 ? _props$data$use_live_2 : true\n  };\n}), connectToProviderData(function (props) {\n  var _props$data$use_live_3, _props$data8, _props$visualization, _props$visualization_, _props$data9;\n  var use_live_data = (_props$data$use_live_3 = (_props$data8 = props.data) === null || _props$data8 === void 0 ? void 0 : _props$data8.use_live_data) !== null && _props$data$use_live_3 !== void 0 ? _props$data$use_live_3 : true;\n  if (!use_live_data) return {};\n  return {\n    provider_url: ((_props$visualization = props.visualization) === null || _props$visualization === void 0 ? void 0 : _props$visualization.provider_url) || ((_props$visualization_ = props.visualization_data) === null || _props$visualization_ === void 0 ? void 0 : _props$visualization_.provider_url) || ((_props$data9 = props.data) === null || _props$data9 === void 0 ? void 0 : _props$data9.provider_url)\n  };\n}))(ConnectedChart);\nvar _c, _c2;\n$RefreshReg$(_c, \"LoadablePlotly\");\n$RefreshReg$(_c2, \"ConnectedChart\");","map":{"version":3,"names":["React","compose","loadable","connectToProviderData","updateChartDataFromProvider","Sources","connectBlockToVisualization","config","LoadablePlotly","ConnectedChart","props","hoverFormatXY","loadingVisualizationData","provider_data","provider_metadata","visualization","visualization_data","width","height","use_live_data","data","with_sources","chartData","layout","autosize","dragmode","font","family","settings","chartLayoutFontFamily","margin","l","r","b","t","xaxis","hoverformat","tickformat","yaxis","map","trace","textfont","chartDataFontFamily","Object","keys","length","displayModeBar","editable","responsive","data_query","chartSources","vis_url","provider_url","title","download_button"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-plotlycharts/src/ConnectedChart/ConnectedChart.jsx"],"sourcesContent":["/*\n * The most basic connected block chart\n */\n\nimport React from 'react';\nimport { compose } from 'redux';\nimport loadable from '@loadable/component';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport { updateChartDataFromProvider } from '@eeacms/volto-datablocks/helpers';\nimport { Sources } from '@eeacms/volto-datablocks/Utils';\nimport { connectBlockToVisualization } from '@eeacms/volto-plotlycharts/hocs';\n\nimport config from '@plone/volto/registry';\n\nconst LoadablePlotly = loadable(() => import('react-plotly.js'));\n\n/*\n * ConnectedChart\n */\nfunction ConnectedChart(props) {\n  const {\n    hoverFormatXY,\n    loadingVisualizationData,\n    provider_data,\n    provider_metadata,\n    visualization,\n    visualization_data,\n    width,\n    height = 450,\n  } = props;\n  const use_live_data = props.data?.use_live_data ?? true;\n  const with_sources = props.data?.with_sources ?? true;\n\n  const chartData =\n    visualization?.chartData || visualization_data?.chartData || {};\n\n  const layout = {\n    ...(chartData.layout || {}),\n    autosize: true,\n    dragmode: false,\n    font: {\n      ...(chartData.layout?.font || {}),\n      family: config.settings.chartLayoutFontFamily || \"'Roboto', sans-serif\",\n    },\n    margin: {\n      l: 80, // default: 80\n      r: 80, // default: 80\n      b: 80, // default: 80\n      t: 100, // default: 100\n      ...(chartData.layout?.margin || {}),\n    },\n  };\n\n  delete layout.width;\n  delete layout.height;\n\n  if (layout.xaxis) {\n    layout.xaxis = {\n      ...layout.xaxis,\n      hoverformat:\n        hoverFormatXY ||\n        layout.xaxis.hoverformat ||\n        layout.xaxis.tickformat ||\n        '',\n    };\n  }\n  if (layout.yaxis) {\n    layout.yaxis = {\n      ...layout.yaxis,\n      hoverformat:\n        hoverFormatXY ||\n        layout.xaxis.hoverformat ||\n        layout.xaxis.tickformat ||\n        '',\n    };\n  }\n\n  let data =\n    provider_data && use_live_data\n      ? updateChartDataFromProvider(chartData.data || [], provider_data)\n      : chartData.data || [];\n\n  data = data.map((trace) => ({\n    ...trace,\n    textfont: {\n      ...trace.textfont,\n      family: config.settings.chartDataFontFamily || \"'Roboto', sans-serif\",\n    },\n  }));\n\n  if (loadingVisualizationData) {\n    return <div>Loading chart...</div>;\n  }\n\n  return !Object.keys(chartData).length ? (\n    <div>No valid data.</div>\n  ) : (\n    <>\n      <div className=\"connected-chart-wrapper\">\n        <LoadablePlotly\n          useResizeHandler\n          data={data}\n          layout={layout}\n          frames={[]}\n          config={{\n            displayModeBar: false,\n            editable: false,\n            responsive: true,\n          }}\n          style={{\n            width: width ? width + 'px' : '100%',\n            height: height + 'px',\n          }}\n        />\n      </div>\n      {with_sources && props.data ? (\n        <Sources\n          data={{ data_query: props.data.data_query }}\n          sources={props.data.chartSources}\n          title={\n            props.data?.vis_url || props.data?.provider_url || props.data?.title\n          }\n          provider_data={provider_data}\n          provider_metadata={provider_metadata}\n          download_button={props.data.download_button}\n        />\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default compose(\n  connectBlockToVisualization((props) => ({\n    vis_url: props.data?.vis_url || null,\n    use_live_data: props.data?.use_live_data ?? true,\n  })),\n  connectToProviderData((props) => {\n    const use_live_data = props.data?.use_live_data ?? true;\n    if (!use_live_data) return {};\n    return {\n      provider_url:\n        props.visualization?.provider_url ||\n        props.visualization_data?.provider_url ||\n        props.data?.provider_url,\n    };\n  }),\n)(ConnectedChart);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}