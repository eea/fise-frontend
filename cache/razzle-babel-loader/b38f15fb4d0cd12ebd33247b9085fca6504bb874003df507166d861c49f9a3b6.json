{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _isEqual from \"lodash/isEqual\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/components/ElementEditor/PluginEditor.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\n/* eslint no-console: [\"error\", { allow: [\"error\"] }] */\nimport { Icon as VoltoIcon, InlineForm } from '@plone/volto/components';\nimport briefcaseSVG from '@plone/volto/icons/briefcase.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ReactEditor } from 'slate-react';\nimport { setPluginOptions } from 'volto-slate/actions';\nimport BaseSchemaProvider from './SchemaProvider';\nvar PluginEditor = function PluginEditor(props) {\n  _s();\n  var editor = props.editor,\n    schemaProvider = props.schemaProvider,\n    pluginId = props.pluginId,\n    getActiveElement = props.getActiveElement,\n    isActiveElement = props.isActiveElement,\n    insertElement = props.insertElement,\n    unwrapElement = props.unwrapElement,\n    hasValue = props.hasValue,\n    onChangeValues = props.onChangeValues;\n  var dispatch = useDispatch();\n  var _React$useState = React.useState({}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    formData = _React$useState2[0],\n    setFormData = _React$useState2[1];\n  var active = getActiveElement(editor);\n  if (!active) {\n    console.error('Active element not found, this will crash');\n  }\n  var _active = _slicedToArray(active, 1),\n    elementNode = _active[0];\n  var isElement = isActiveElement(editor);\n\n  // Update the form data based on the current element\n  var elRef = React.useRef(null);\n  if (isElement && !_isEqual(elementNode, elRef.current)) {\n    elRef.current = elementNode;\n    setFormData(elementNode.data || {});\n  } else if (!isElement) {\n    elRef.current = null;\n  }\n  var saveDataToEditor = React.useCallback(function (formData) {\n    if (hasValue(formData)) {\n      // hasValue(formData) = !!formData.footnote\n      insertElement(editor, formData);\n    } else {\n      unwrapElement(editor);\n    }\n  }, [editor, insertElement, unwrapElement, hasValue]);\n  var checkForCancel = function checkForCancel() {\n    if (!hasValue(elementNode.data)) {\n      unwrapElement(editor);\n    }\n  };\n  var SchemaProvider = schemaProvider ? schemaProvider : BaseSchemaProvider;\n  var pid = \"\".concat(editor.uid, \"-\").concat(pluginId);\n  return __jsx(SchemaProvider, _extends({}, props, {\n    data: formData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }), function (schema) {\n    return __jsx(InlineForm, {\n      schema: schema,\n      title: schema.title,\n      icon: __jsx(VoltoIcon, {\n        size: \"24px\",\n        name: briefcaseSVG,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }),\n      onChangeField: function onChangeField(id, value) {\n        if (!onChangeValues) {\n          return setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, id, value)));\n        }\n        return onChangeValues(id, value, formData, setFormData);\n      },\n      formData: formData,\n      headerActions: __jsx(React.Fragment, null, __jsx(\"button\", {\n        onClick: function onClick() {\n          saveDataToEditor(formData);\n          dispatch(setPluginOptions(pid, {\n            show_sidebar_editor: false\n          }));\n          ReactEditor.focus(editor);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, __jsx(VoltoIcon, {\n        size: \"24px\",\n        name: checkSVG,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      })), __jsx(\"button\", {\n        onClick: function onClick() {\n          checkForCancel();\n          dispatch(setPluginOptions(pid, {\n            show_sidebar_editor: false\n          }));\n          setFormData({});\n          ReactEditor.focus(editor);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }, __jsx(VoltoIcon, {\n        size: \"24px\",\n        name: clearSVG,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }))),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    });\n  });\n};\n_s(PluginEditor, \"IuIRh+ZSnBaCV7Wod99X8j09KrM=\", false, function () {\n  return [useDispatch];\n});\n_c = PluginEditor;\nexport default PluginEditor;\nvar _c;\n$RefreshReg$(_c, \"PluginEditor\");","map":{"version":3,"names":["Icon","VoltoIcon","InlineForm","briefcaseSVG","checkSVG","clearSVG","React","useDispatch","ReactEditor","setPluginOptions","BaseSchemaProvider","PluginEditor","props","editor","schemaProvider","pluginId","getActiveElement","isActiveElement","insertElement","unwrapElement","hasValue","onChangeValues","dispatch","useState","formData","setFormData","active","console","error","elementNode","isElement","elRef","useRef","current","data","saveDataToEditor","useCallback","checkForCancel","SchemaProvider","pid","uid","schema","title","id","value","show_sidebar_editor","focus"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/components/ElementEditor/PluginEditor.jsx"],"sourcesContent":["/* eslint no-console: [\"error\", { allow: [\"error\"] }] */\nimport { Icon as VoltoIcon, InlineForm } from '@plone/volto/components';\nimport briefcaseSVG from '@plone/volto/icons/briefcase.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport { isEqual } from 'lodash';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ReactEditor } from 'slate-react';\nimport { setPluginOptions } from 'volto-slate/actions';\nimport BaseSchemaProvider from './SchemaProvider';\n\nconst PluginEditor = (props) => {\n  const {\n    editor,\n    schemaProvider,\n    pluginId,\n    getActiveElement,\n    isActiveElement,\n    insertElement,\n    unwrapElement,\n    hasValue,\n    onChangeValues,\n  } = props;\n\n  const dispatch = useDispatch();\n  const [formData, setFormData] = React.useState({});\n\n  const active = getActiveElement(editor);\n\n  if (!active) {\n    console.error('Active element not found, this will crash');\n  }\n  const [elementNode] = active;\n  const isElement = isActiveElement(editor);\n\n  // Update the form data based on the current element\n  const elRef = React.useRef(null);\n\n  if (isElement && !isEqual(elementNode, elRef.current)) {\n    elRef.current = elementNode;\n    setFormData(elementNode.data || {});\n  } else if (!isElement) {\n    elRef.current = null;\n  }\n\n  const saveDataToEditor = React.useCallback(\n    (formData) => {\n      if (hasValue(formData)) {\n        // hasValue(formData) = !!formData.footnote\n        insertElement(editor, formData);\n      } else {\n        unwrapElement(editor);\n      }\n    },\n    [editor, insertElement, unwrapElement, hasValue],\n  );\n\n  const checkForCancel = () => {\n    if (!hasValue(elementNode.data)) {\n      unwrapElement(editor);\n    }\n  };\n\n  const SchemaProvider = schemaProvider ? schemaProvider : BaseSchemaProvider;\n\n  const pid = `${editor.uid}-${pluginId}`;\n  return (\n    <SchemaProvider {...props} data={formData}>\n      {(schema) => (\n        <InlineForm\n          schema={schema}\n          title={schema.title}\n          icon={<VoltoIcon size=\"24px\" name={briefcaseSVG} />}\n          onChangeField={(id, value) => {\n            if (!onChangeValues) {\n              return setFormData({\n                ...formData,\n                [id]: value,\n              });\n            }\n            return onChangeValues(id, value, formData, setFormData);\n          }}\n          formData={formData}\n          headerActions={\n            <>\n              <button\n                onClick={() => {\n                  saveDataToEditor(formData);\n                  dispatch(\n                    setPluginOptions(pid, {\n                      show_sidebar_editor: false,\n                    }),\n                  );\n                  ReactEditor.focus(editor);\n                }}\n              >\n                <VoltoIcon size=\"24px\" name={checkSVG} />\n              </button>\n              <button\n                onClick={() => {\n                  checkForCancel();\n                  dispatch(\n                    setPluginOptions(pid, {\n                      show_sidebar_editor: false,\n                    }),\n                  );\n                  setFormData({});\n                  ReactEditor.focus(editor);\n                }}\n              >\n                <VoltoIcon size=\"24px\" name={clearSVG} />\n              </button>\n            </>\n          }\n        />\n      )}\n    </SchemaProvider>\n  );\n};\n\nexport default PluginEditor;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}