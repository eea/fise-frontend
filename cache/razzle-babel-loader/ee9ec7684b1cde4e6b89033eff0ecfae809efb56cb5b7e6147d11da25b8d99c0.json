{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/Widgets/WidthBasedLayoutProvider.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport componentQueries from 'react-component-queries';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nvar WidthBasedLayoutProvider = function WidthBasedLayoutProvider(WrappedComponent) {\n  return function (props) {\n    return __jsx(WrappedComponent, _extends({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 10\n      }\n    }));\n  };\n};\nvar connectedWidthProvider = compose(connect(function (state) {\n  var _state$mosaic_width;\n  return {\n    mosaic_width: (_state$mosaic_width = state.mosaic_width) === null || _state$mosaic_width === void 0 ? void 0 : _state$mosaic_width.items\n  };\n}), componentQueries({\n  queries: [function (_ref, _ref2) {\n    var width = _ref.width;\n    var mosaic_width = _ref2.mosaic_width;\n    return {\n      layout_type: function () {\n        // const width = 120\n        // windowWidth - gridLayoutWidth = margins\n        var mosaic_breakpoints = {\n          tablet: 767,\n          desktop: 1200,\n          widescreen: 1600\n        };\n\n        // console.log('props in queries', width, mosaic_width);\n        var windowWidth = __CLIENT__ && window.innerWidth;\n        var margins = windowWidth - mosaic_width;\n        var breakpoint = function breakpoint(screentype) {\n          return windowWidth ? mosaic_breakpoints[screentype] - margins : mosaic_breakpoints[screentype];\n        };\n\n        /*\n        console.debug(\n          'breakpoints',\n          width,\n          '====>',\n          'widescreen =>',\n          breakpoint('widescreen'),\n          'desktop =>',\n          breakpoint('desktop'),\n          'tablet =>',\n          breakpoint('tablet'),\n          'Window =>',\n          windowWidth,\n          'mosaic =>',\n          mosaic_width,\n          'margins =>',\n          margins,\n        );*/\n\n        if (__SERVER__) {\n          return 'widescreen';\n        }\n        if (width > breakpoint('widescreen')) {\n          return 'widescreen';\n        }\n        if (width > breakpoint('desktop')) {\n          return 'desktop';\n        }\n        if (width > breakpoint('tablet')) {\n          return 'tablet';\n        }\n        return 'phone';\n      }()\n    };\n  }]\n}), WidthBasedLayoutProvider);\nexport default connectedWidthProvider;","map":{"version":3,"names":["React","componentQueries","compose","connect","WidthBasedLayoutProvider","WrappedComponent","props","connectedWidthProvider","state","mosaic_width","items","queries","width","layout_type","mosaic_breakpoints","tablet","desktop","widescreen","windowWidth","__CLIENT__","window","innerWidth","margins","breakpoint","screentype","__SERVER__"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/Widgets/WidthBasedLayoutProvider.jsx"],"sourcesContent":["import React from 'react';\nimport componentQueries from 'react-component-queries';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nconst WidthBasedLayoutProvider = (WrappedComponent) => (props) => {\n  return <WrappedComponent {...props} />;\n};\n\nconst connectedWidthProvider = compose(\n  connect((state) => ({\n    mosaic_width: state.mosaic_width?.items,\n  })),\n  componentQueries({\n    queries: [\n      ({ width }, { mosaic_width }) => ({\n        layout_type: (() => {\n          // const width = 120\n          // windowWidth - gridLayoutWidth = margins\n          const mosaic_breakpoints = {\n            tablet: 767,\n            desktop: 1200,\n            widescreen: 1600,\n          };\n\n          // console.log('props in queries', width, mosaic_width);\n          const windowWidth = __CLIENT__ && window.innerWidth;\n          const margins = windowWidth - mosaic_width;\n          const breakpoint = (screentype) =>\n            windowWidth\n              ? mosaic_breakpoints[screentype] - margins\n              : mosaic_breakpoints[screentype];\n\n          /*\n\t  console.debug(\n            'breakpoints',\n            width,\n            '====>',\n            'widescreen =>',\n            breakpoint('widescreen'),\n            'desktop =>',\n            breakpoint('desktop'),\n            'tablet =>',\n            breakpoint('tablet'),\n            'Window =>',\n            windowWidth,\n            'mosaic =>',\n            mosaic_width,\n            'margins =>',\n            margins,\n          );*/\n\n          if (__SERVER__) {\n            return 'widescreen';\n          }\n          if (width > breakpoint('widescreen')) {\n            return 'widescreen';\n          }\n          if (width > breakpoint('desktop')) {\n            return 'desktop';\n          }\n          if (width > breakpoint('tablet')) {\n            return 'tablet';\n          }\n          return 'phone';\n        })(),\n      }),\n    ],\n  }),\n  WidthBasedLayoutProvider,\n);\n\nexport default connectedWidthProvider;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,yBAAyB;AACtD,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,OAAO,QAAQ,aAAa;AAErC,IAAMC,wBAAwB,GAAG,SAA3BA,wBAAwB,CAAIC,gBAAgB;EAAA,OAAK,UAACC,KAAK,EAAK;IAChE,OAAO,MAAC,gBAAgB,eAAKA,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAI;EACxC,CAAC;AAAA;AAED,IAAMC,sBAAsB,GAAGL,OAAO,CACpCC,OAAO,CAAC,UAACK,KAAK;EAAA;EAAA,OAAM;IAClBC,YAAY,yBAAED,KAAK,CAACC,YAAY,wDAAlB,oBAAoBC;EACpC,CAAC;AAAA,CAAC,CAAC,EACHT,gBAAgB,CAAC;EACfU,OAAO,EAAE,CACP;IAAA,IAAGC,KAAK,QAALA,KAAK;IAAA,IAAMH,YAAY,SAAZA,YAAY;IAAA,OAAQ;MAChCI,WAAW,EAAG,YAAM;QAClB;QACA;QACA,IAAMC,kBAAkB,GAAG;UACzBC,MAAM,EAAE,GAAG;UACXC,OAAO,EAAE,IAAI;UACbC,UAAU,EAAE;QACd,CAAC;;QAED;QACA,IAAMC,WAAW,GAAGC,UAAU,IAAIC,MAAM,CAACC,UAAU;QACnD,IAAMC,OAAO,GAAGJ,WAAW,GAAGT,YAAY;QAC1C,IAAMc,UAAU,GAAG,SAAbA,UAAU,CAAIC,UAAU;UAAA,OAC5BN,WAAW,GACPJ,kBAAkB,CAACU,UAAU,CAAC,GAAGF,OAAO,GACxCR,kBAAkB,CAACU,UAAU,CAAC;QAAA;;QAEpC;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;QAEU,IAAIC,UAAU,EAAE;UACd,OAAO,YAAY;QACrB;QACA,IAAIb,KAAK,GAAGW,UAAU,CAAC,YAAY,CAAC,EAAE;UACpC,OAAO,YAAY;QACrB;QACA,IAAIX,KAAK,GAAGW,UAAU,CAAC,SAAS,CAAC,EAAE;UACjC,OAAO,SAAS;QAClB;QACA,IAAIX,KAAK,GAAGW,UAAU,CAAC,QAAQ,CAAC,EAAE;UAChC,OAAO,QAAQ;QACjB;QACA,OAAO,OAAO;MAChB,CAAC;IACH,CAAC;EAAA,CAAC;AAEN,CAAC,CAAC,EACFnB,wBAAwB,CACzB;AAED,eAAeG,sBAAsB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}