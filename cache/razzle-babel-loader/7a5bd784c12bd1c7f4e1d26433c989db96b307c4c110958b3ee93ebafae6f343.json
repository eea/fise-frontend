{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _without from \"lodash/without\";\nimport _omit from \"lodash/omit\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-tabs-block/src/widgets/TabsWidget.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { v4 as uuid } from 'uuid';\nimport move from 'lodash-move';\nimport { Icon, FormFieldWrapper } from '@plone/volto/components';\nimport { DragDropList } from '@plone/volto/components';\nimport { emptyTab } from '@eeacms/volto-tabs-block/helpers';\nimport { StyleWrapperEdit } from '@eeacms/volto-block-style/StyleWrapper';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport themeSVG from '@plone/volto/icons/theme.svg';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport plusSVG from '@plone/volto/icons/circle-plus.svg';\nexport function moveColumn(formData, source, destination) {\n  var _formData$blocks_layo;\n  return _objectSpread(_objectSpread({}, formData), {}, {\n    blocks_layout: {\n      items: move((_formData$blocks_layo = formData.blocks_layout) === null || _formData$blocks_layo === void 0 ? void 0 : _formData$blocks_layo.items, source, destination)\n    }\n  });\n}\nvar empty = function empty() {\n  return [uuid(), emptyTab()];\n};\nvar TabsWidget = function TabsWidget(props) {\n  _s();\n  var _value$blocks_layout;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    blockStyleVisible = _React$useState2[0],\n    setBlockStyleVisible = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    activeTabId = _React$useState4[0],\n    setActiveTabId = _React$useState4[1];\n  var _props$value = props.value,\n    value = _props$value === void 0 ? {} : _props$value,\n    id = props.id,\n    onChange = props.onChange;\n  var _value$blocks = value.blocks,\n    blocks = _value$blocks === void 0 ? {} : _value$blocks;\n  var tabsList = (((_value$blocks_layout = value.blocks_layout) === null || _value$blocks_layout === void 0 ? void 0 : _value$blocks_layout.items) || []).map(function (id) {\n    return [id, blocks[id]];\n  });\n  var activeTabData = blocks[activeTabId] || {};\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    draggable: false,\n    className: \"drag-drop-list-widget\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"tabs-area\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(DragDropList, {\n    childList: tabsList,\n    onMoveItem: function onMoveItem(result) {\n      var source = result.source,\n        destination = result.destination;\n      if (!destination) {\n        return;\n      }\n      var newFormData = moveColumn(value, source.index, destination.index);\n      onChange(id, newFormData);\n      return true;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, function (dragProps) {\n    var _value$blocks_layout2, _value$blocks_layout3;\n    var childId = dragProps.childId,\n      child = dragProps.child,\n      index = dragProps.index,\n      draginfo = dragProps.draginfo;\n    return __jsx(\"div\", _extends({\n      ref: draginfo.innerRef\n    }, draginfo.draggableProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", _extends({\n      style: {\n        visibility: 'visible',\n        display: 'inline-block'\n      }\n    }, draginfo.dragHandleProps, {\n      className: \"drag handle wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }), __jsx(Icon, {\n      name: dragSVG,\n      size: \"18px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"tab-area\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: \"label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, child.title || \"Tab \".concat(index + 1)), __jsx(\"button\", {\n      onClick: function onClick() {\n        setActiveTabId(childId);\n        setBlockStyleVisible(true);\n      },\n      title: \"Apply style\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, __jsx(Icon, {\n      name: themeSVG,\n      size: \"18px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }\n    })), ((_value$blocks_layout2 = value.blocks_layout) === null || _value$blocks_layout2 === void 0 ? void 0 : (_value$blocks_layout3 = _value$blocks_layout2.items) === null || _value$blocks_layout3 === void 0 ? void 0 : _value$blocks_layout3.length) > 1 ? __jsx(\"button\", {\n      onClick: function onClick() {\n        var _value$blocks_layout4;\n        var newFormData = _objectSpread(_objectSpread({}, value), {}, {\n          blocks: _omit(_objectSpread({}, value.blocks), [childId]),\n          blocks_layout: _objectSpread(_objectSpread({}, value.blocks_layout), {}, {\n            items: _without(_toConsumableArray((_value$blocks_layout4 = value.blocks_layout) === null || _value$blocks_layout4 === void 0 ? void 0 : _value$blocks_layout4.items), childId)\n          })\n        });\n        onChange(id, newFormData);\n      },\n      title: \"Delete tab\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }\n    }, __jsx(Icon, {\n      name: trashSVG,\n      size: \"18px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    })) : '')));\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      var _value$blocks_layout5;\n      var _empty = empty(),\n        _empty2 = _slicedToArray(_empty, 2),\n        newId = _empty2[0],\n        newData = _empty2[1];\n      onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n        blocks: _objectSpread(_objectSpread({}, value.blocks), {}, _defineProperty({}, newId, newData)),\n        blocks_layout: _objectSpread(_objectSpread({}, value.blocks_layout), {}, {\n          items: [].concat(_toConsumableArray((_value$blocks_layout5 = value.blocks_layout) === null || _value$blocks_layout5 === void 0 ? void 0 : _value$blocks_layout5.items), [newId])\n        })\n      }));\n    },\n    title: \"Add new tab\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: plusSVG,\n    size: \"18px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }))), __jsx(StyleWrapperEdit, _extends({}, props, {\n    selected: activeTabId,\n    isVisible: blockStyleVisible,\n    setIsVisible: function setIsVisible(value) {\n      setActiveTabId(null);\n      setBlockStyleVisible(value);\n    },\n    data: _objectSpread(_objectSpread(_objectSpread({}, activeTabData === null || activeTabData === void 0 ? void 0 : activeTabData.styles), activeTabData.align ? {\n      align: activeTabData.align\n    } : {}), activeTabData.size ? {\n      size: activeTabData.size\n    } : {}),\n    choices: [],\n    onChangeValue: function onChangeValue(styleId, styleValue) {\n      return onChange(id, _objectSpread(_objectSpread({}, value), {}, {\n        blocks: _objectSpread(_objectSpread({}, value.blocks), {}, _defineProperty({}, activeTabId, _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, activeTabData || {}), styleId === 'align' ? {\n          align: styleValue\n        } : {}), styleId === 'size' ? {\n          size: styleValue\n        } : {}), styleId === 'customId' ? {\n          id: styleValue\n        } : {}), {}, {\n          styles: _objectSpread(_objectSpread({}, activeTabData === null || activeTabData === void 0 ? void 0 : activeTabData.styles), {}, _defineProperty({}, styleId, styleValue))\n        })))\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  })));\n};\n_s(TabsWidget, \"FtbZVF+/+TNJBPfxJ3NPvYian+M=\");\n_c = TabsWidget;\nexport default TabsWidget;\nvar _c;\n$RefreshReg$(_c, \"TabsWidget\");","map":{"version":3,"names":["React","v4","uuid","move","Icon","FormFieldWrapper","DragDropList","emptyTab","StyleWrapperEdit","dragSVG","themeSVG","trashSVG","plusSVG","moveColumn","formData","source","destination","blocks_layout","items","empty","TabsWidget","props","useState","blockStyleVisible","setBlockStyleVisible","activeTabId","setActiveTabId","value","id","onChange","blocks","tabsList","map","activeTabData","result","newFormData","index","dragProps","childId","child","draginfo","innerRef","draggableProps","position","visibility","display","dragHandleProps","title","length","newId","newData","styles","align","size","styleId","styleValue"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-tabs-block/src/widgets/TabsWidget.jsx"],"sourcesContent":["import React from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { omit, without } from 'lodash';\nimport move from 'lodash-move';\nimport { Icon, FormFieldWrapper } from '@plone/volto/components';\nimport { DragDropList } from '@plone/volto/components';\nimport { emptyTab } from '@eeacms/volto-tabs-block/helpers';\nimport { StyleWrapperEdit } from '@eeacms/volto-block-style/StyleWrapper';\n\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport themeSVG from '@plone/volto/icons/theme.svg';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nimport plusSVG from '@plone/volto/icons/circle-plus.svg';\n\nexport function moveColumn(formData, source, destination) {\n  return {\n    ...formData,\n    blocks_layout: {\n      items: move(formData.blocks_layout?.items, source, destination),\n    },\n  };\n}\n\nconst empty = () => {\n  return [uuid(), emptyTab()];\n};\n\nconst TabsWidget = (props) => {\n  const [blockStyleVisible, setBlockStyleVisible] = React.useState(false);\n  const [activeTabId, setActiveTabId] = React.useState(0);\n  const { value = {}, id, onChange } = props;\n  const { blocks = {} } = value;\n  const tabsList = (value.blocks_layout?.items || []).map((id) => [\n    id,\n    blocks[id],\n  ]);\n  const activeTabData = blocks[activeTabId] || {};\n\n  return (\n    <FormFieldWrapper\n      {...props}\n      draggable={false}\n      className=\"drag-drop-list-widget\"\n    >\n      <div className=\"tabs-area\">\n        <DragDropList\n          childList={tabsList}\n          onMoveItem={(result) => {\n            const { source, destination } = result;\n            if (!destination) {\n              return;\n            }\n            const newFormData = moveColumn(\n              value,\n              source.index,\n              destination.index,\n            );\n            onChange(id, newFormData);\n            return true;\n          }}\n        >\n          {(dragProps) => {\n            const { childId, child, index, draginfo } = dragProps;\n            return (\n              <div ref={draginfo.innerRef} {...draginfo.draggableProps}>\n                <div style={{ position: 'relative' }}>\n                  <div\n                    style={{\n                      visibility: 'visible',\n                      display: 'inline-block',\n                    }}\n                    {...draginfo.dragHandleProps}\n                    className=\"drag handle wrapper\"\n                  >\n                    <Icon name={dragSVG} size=\"18px\" />\n                  </div>\n                  <div className=\"tab-area\">\n                    <div className=\"label\">\n                      {child.title || `Tab ${index + 1}`}\n                    </div>\n                    <button\n                      onClick={() => {\n                        setActiveTabId(childId);\n                        setBlockStyleVisible(true);\n                      }}\n                      title=\"Apply style\"\n                    >\n                      <Icon name={themeSVG} size=\"18px\" />\n                    </button>\n                    {value.blocks_layout?.items?.length > 1 ? (\n                      <button\n                        onClick={() => {\n                          const newFormData = {\n                            ...value,\n                            blocks: omit({ ...value.blocks }, [childId]),\n                            blocks_layout: {\n                              ...value.blocks_layout,\n                              items: without(\n                                [...value.blocks_layout?.items],\n                                childId,\n                              ),\n                            },\n                          };\n                          onChange(id, newFormData);\n                        }}\n                        title=\"Delete tab\"\n                      >\n                        <Icon name={trashSVG} size=\"18px\" />\n                      </button>\n                    ) : (\n                      ''\n                    )}\n                  </div>\n                </div>\n              </div>\n            );\n          }}\n        </DragDropList>\n        <button\n          onClick={() => {\n            const [newId, newData] = empty();\n            onChange(id, {\n              ...value,\n              blocks: {\n                ...value.blocks,\n                [newId]: newData,\n              },\n              blocks_layout: {\n                ...value.blocks_layout,\n                items: [...value.blocks_layout?.items, newId],\n              },\n            });\n          }}\n          title=\"Add new tab\"\n        >\n          <Icon name={plusSVG} size=\"18px\" />\n        </button>\n      </div>\n      <StyleWrapperEdit\n        {...props}\n        selected={activeTabId}\n        isVisible={blockStyleVisible}\n        setIsVisible={(value) => {\n          setActiveTabId(null);\n          setBlockStyleVisible(value);\n        }}\n        data={{\n          ...activeTabData?.styles,\n          ...(activeTabData.align ? { align: activeTabData.align } : {}),\n          ...(activeTabData.size ? { size: activeTabData.size } : {}),\n        }}\n        choices={[]}\n        onChangeValue={(styleId, styleValue) =>\n          onChange(id, {\n            ...value,\n            blocks: {\n              ...value.blocks,\n              [activeTabId]: {\n                ...(activeTabData || {}),\n                ...(styleId === 'align' ? { align: styleValue } : {}),\n                ...(styleId === 'size' ? { size: styleValue } : {}),\n                ...(styleId === 'customId' ? { id: styleValue } : {}),\n                styles: {\n                  ...activeTabData?.styles,\n                  [styleId]: styleValue,\n                },\n              },\n            },\n          })\n        }\n      />\n    </FormFieldWrapper>\n  );\n};\n\nexport default TabsWidget;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}