{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Querystring reducer.\n * @module reducers/querystring/querystring\n */\n\nimport { GET_QUERYSTRING } from '@plone/volto/constants/ActionTypes';\nvar initialState = {\n  error: null,\n  indexes: {},\n  sortable_indexes: {},\n  loaded: false,\n  loading: false\n};\n\n/**\n * Querystring reducer.\n * @function querystring\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function querystring() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case \"\".concat(GET_QUERYSTRING, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case \"\".concat(GET_QUERYSTRING, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        indexes: action.result.indexes,\n        sortable_indexes: action.result.sortable_indexes,\n        loaded: true,\n        loading: false\n      });\n    case \"\".concat(GET_QUERYSTRING, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        indexes: {},\n        sortable_indexes: {},\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_QUERYSTRING","initialState","error","indexes","sortable_indexes","loaded","loading","querystring","state","action","type","result"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/querystring/querystring.js"],"sourcesContent":["/**\n * Querystring reducer.\n * @module reducers/querystring/querystring\n */\n\nimport { GET_QUERYSTRING } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  indexes: {},\n  sortable_indexes: {},\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Querystring reducer.\n * @function querystring\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function querystring(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_QUERYSTRING}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${GET_QUERYSTRING}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        indexes: action.result.indexes,\n        sortable_indexes: action.result.sortable_indexes,\n        loaded: true,\n        loading: false,\n      };\n    case `${GET_QUERYSTRING}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        indexes: {},\n        sortable_indexes: {},\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA,SAASA,eAAe,QAAQ,oCAAoC;AAEpE,IAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE,CAAC,CAAC;EACXC,gBAAgB,EAAE,CAAC,CAAC;EACpBC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,WAAW,GAAoC;EAAA,IAAnCC,KAAK,uEAAGP,YAAY;EAAA,IAAEQ,MAAM,uEAAG,CAAC,CAAC;EACnE,QAAQA,MAAM,CAACC,IAAI;IACjB,eAAQV,eAAe;MACrB,uCACKQ,KAAK;QACRN,KAAK,EAAE,IAAI;QACXG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAEjB,eAAQN,eAAe;MACrB,uCACKQ,KAAK;QACRN,KAAK,EAAE,IAAI;QACXC,OAAO,EAAEM,MAAM,CAACE,MAAM,CAACR,OAAO;QAC9BC,gBAAgB,EAAEK,MAAM,CAACE,MAAM,CAACP,gBAAgB;QAChDC,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MAAK;IAElB,eAAQN,eAAe;MACrB,uCACKQ,KAAK;QACRN,KAAK,EAAEO,MAAM,CAACP,KAAK;QACnBC,OAAO,EAAE,CAAC,CAAC;QACXC,gBAAgB,EAAE,CAAC,CAAC;QACpBC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAK;IAElB;MACE,OAAOE,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}