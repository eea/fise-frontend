{"ast":null,"code":"import _debounce from \"lodash/debounce\";\nimport _isString from \"lodash/isString\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/components/ResponsiveContainer.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/*\n * Port of (MIT licensed)\n * https://github.com/recharts/recharts/blob/master/src/component/ResponsiveContainer.tsx\n * to JSX\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ReactResizeDetector from 'react-resize-detector';\nconst isPercent = value => _isString(value) && value.indexOf('%') === value.length - 1;\nfunction asNumber(value) {\n  if (_isString(value)) return value.toInteger();\n  return value;\n}\nclass ResponsiveContainer extends Component {\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"updateDimensionsImmediate\", () => {\n      if (!this.mounted) {\n        return;\n      }\n      const newSize = this.getContainerSize();\n      if (newSize) {\n        const {\n          containerWidth: oldWidth,\n          containerHeight: oldHeight\n        } = this.state;\n        const {\n          containerWidth,\n          containerHeight\n        } = newSize;\n        if (containerWidth !== oldWidth || containerHeight !== oldHeight) {\n          this.setState({\n            containerWidth,\n            containerHeight\n          });\n        }\n      }\n    });\n    this.state = {\n      containerWidth: -1,\n      containerHeight: -1\n    };\n    this.handleResize = props.debounce > 0 ? _debounce(this.updateDimensionsImmediate, props.debounce) : this.updateDimensionsImmediate;\n  }\n  componentDidMount() {\n    this.mounted = true;\n    const size = this.getContainerSize();\n    if (size) {\n      this.setState(size);\n    }\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  getContainerSize() {\n    if (!this.container) {\n      return null;\n    }\n    return {\n      containerWidth: this.container.clientWidth,\n      containerHeight: this.container.clientHeight\n    };\n  }\n  renderChildren(props) {\n    const {\n      containerWidth,\n      containerHeight\n    } = this.state;\n    const {\n      aspect,\n      width,\n      height,\n      // minWidth,\n      // minHeight,\n      maxHeight,\n      children\n    } = this.props;\n    let calculatedWidth = isPercent(width) ? containerWidth : asNumber(width);\n    let calculatedHeight = isPercent(height) ? containerHeight : asNumber(height);\n    if (aspect && aspect > 0) {\n      // Preserve the desired aspect ratio\n      if (calculatedWidth) {\n        // Will default to using width for aspect ratio\n        calculatedHeight = calculatedWidth / aspect;\n      } else if (calculatedHeight) {\n        // But we should also take height into consideration\n        calculatedWidth = calculatedHeight * aspect;\n      }\n\n      // if maxHeight is set, overwrite if calculatedHeight is greater than maxHeight\n      if (maxHeight && calculatedHeight > maxHeight) {\n        calculatedHeight = maxHeight;\n      }\n    }\n    return __CLIENT__ ? children({\n      parentWidth: calculatedWidth\n    }) : children;\n  }\n  render() {\n    const {\n      minWidth,\n      minHeight,\n      width,\n      height,\n      maxHeight,\n      id,\n      className\n    } = this.props;\n    const style = {\n      width,\n      height,\n      minWidth,\n      minHeight,\n      maxHeight\n    };\n    return __jsx(\"div\", {\n      id: id,\n      className: classNames('responsive-container', className),\n      ref: node => {\n        this.container = node;\n      },\n      style: _objectSpread({\n        minWidth: this.props.minWidth ? this.props.minWidth + 'px' : 'unset'\n      }, style),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, this.renderChildren(this.props), __jsx(ReactResizeDetector, {\n      handleWidth: true,\n      handleHeight: true,\n      onResize: this.handleResize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n_defineProperty(ResponsiveContainer, \"defaultProps\", {\n  width: '100%',\n  height: '100%',\n  debounce: 0,\n  visible: false\n});\nexport default ResponsiveContainer;","map":{"version":3,"names":["React","Component","classNames","ReactResizeDetector","isPercent","value","indexOf","length","asNumber","toInteger","ResponsiveContainer","constructor","props","mounted","newSize","getContainerSize","containerWidth","oldWidth","containerHeight","oldHeight","state","setState","handleResize","debounce","updateDimensionsImmediate","componentDidMount","size","componentWillUnmount","container","clientWidth","clientHeight","renderChildren","aspect","width","height","maxHeight","children","calculatedWidth","calculatedHeight","__CLIENT__","parentWidth","render","minWidth","minHeight","id","className","style","node","visible"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/components/ResponsiveContainer.jsx"],"sourcesContent":["/*\n * Port of (MIT licensed)\n * https://github.com/recharts/recharts/blob/master/src/component/ResponsiveContainer.tsx\n * to JSX\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ReactResizeDetector from 'react-resize-detector';\nimport { isString, debounce } from 'lodash';\n\nconst isPercent = (value) =>\n  isString(value) && value.indexOf('%') === value.length - 1;\n\nfunction asNumber(value) {\n  if (isString(value)) return value.toInteger();\n  return value;\n}\n\nclass ResponsiveContainer extends Component {\n  static defaultProps = {\n    width: '100%',\n    height: '100%',\n    debounce: 0,\n    visible: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      containerWidth: -1,\n      containerHeight: -1,\n    };\n\n    this.handleResize =\n      props.debounce > 0\n        ? debounce(this.updateDimensionsImmediate, props.debounce)\n        : this.updateDimensionsImmediate;\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    const size = this.getContainerSize();\n\n    if (size) {\n      this.setState(size);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  getContainerSize() {\n    if (!this.container) {\n      return null;\n    }\n\n    return {\n      containerWidth: this.container.clientWidth,\n      containerHeight: this.container.clientHeight,\n    };\n  }\n\n  updateDimensionsImmediate = () => {\n    if (!this.mounted) {\n      return;\n    }\n\n    const newSize = this.getContainerSize();\n\n    if (newSize) {\n      const {\n        containerWidth: oldWidth,\n        containerHeight: oldHeight,\n      } = this.state;\n      const { containerWidth, containerHeight } = newSize;\n\n      if (containerWidth !== oldWidth || containerHeight !== oldHeight) {\n        this.setState({ containerWidth, containerHeight });\n      }\n    }\n  };\n\n  renderChildren(props) {\n    const { containerWidth, containerHeight } = this.state;\n\n    const {\n      aspect,\n      width,\n      height,\n      // minWidth,\n      // minHeight,\n      maxHeight,\n      children,\n    } = this.props;\n\n    let calculatedWidth = isPercent(width) ? containerWidth : asNumber(width);\n    let calculatedHeight = isPercent(height)\n      ? containerHeight\n      : asNumber(height);\n\n    if (aspect && aspect > 0) {\n      // Preserve the desired aspect ratio\n      if (calculatedWidth) {\n        // Will default to using width for aspect ratio\n        calculatedHeight = calculatedWidth / aspect;\n      } else if (calculatedHeight) {\n        // But we should also take height into consideration\n        calculatedWidth = calculatedHeight * aspect;\n      }\n\n      // if maxHeight is set, overwrite if calculatedHeight is greater than maxHeight\n      if (maxHeight && calculatedHeight > maxHeight) {\n        calculatedHeight = maxHeight;\n      }\n    }\n    return __CLIENT__ ? children({ parentWidth: calculatedWidth }) : children;\n  }\n\n  render() {\n    const {\n      minWidth,\n      minHeight,\n      width,\n      height,\n      maxHeight,\n      id,\n      className,\n    } = this.props;\n    const style = { width, height, minWidth, minHeight, maxHeight };\n    return (\n      <div\n        id={id}\n        className={classNames('responsive-container', className)}\n        ref={(node) => {\n          this.container = node;\n        }}\n        style={{\n          minWidth: this.props.minWidth ? this.props.minWidth + 'px' : 'unset',\n          ...style,\n        }}\n      >\n        {this.renderChildren(this.props)}\n        <ReactResizeDetector\n          handleWidth\n          handleHeight\n          onResize={this.handleResize}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ResponsiveContainer;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}