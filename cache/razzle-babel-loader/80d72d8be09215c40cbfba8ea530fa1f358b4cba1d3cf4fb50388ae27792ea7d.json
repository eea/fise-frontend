{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport installDataQueryFilter from './components/manage/Blocks/DataQueryFilter';\nimport installDataConnectedEmbedBlock from './components/manage/Blocks/DataConnectedEmbedBlock';\nimport installDataTable from './components/manage/Blocks/SimpleDataTable';\nimport installDottedTableChart from './components/manage/Blocks/DottedTableChart';\nimport installCountryFlag from './components/manage/Blocks/CountryFlag';\nimport installCustomConnectedBlock from './components/manage/Blocks/CustomConnectedBlock';\nimport installConditionalDataBlock from './components/manage/Blocks/ConditionalDataBlock';\nimport { DataConnectorView } from './components';\nimport { DataQueryWidget, PickObjectWidget, SelectProviderPickWidget } from './components';\nimport { dataProvider } from './middlewares';\nimport * as addonReducers from './reducers';\nexport default (function (config) {\n  config.blocks.groupBlocksOrder = [].concat(_toConsumableArray(config.blocks.groupBlocksOrder), [{\n    id: 'data_blocks',\n    title: 'Data blocks'\n  }]);\n  config.views.contentTypesViews.discodataconnector = DataConnectorView;\n  config.widgets.id.data_query = DataQueryWidget;\n  config.widgets.widget.data_query = DataQueryWidget;\n  config.widgets.widget.object_by_path = PickObjectWidget;\n  config.widgets.widget.select_provider_pick = SelectProviderPickWidget;\n  config.settings.storeExtenders = [].concat(_toConsumableArray(config.settings.storeExtenders || []), [dataProvider]);\n  config.addonReducers = _objectSpread(_objectSpread({}, config.addonReducers), addonReducers);\n  return [installDataQueryFilter, installDataConnectedEmbedBlock, installDataTable, installDottedTableChart, installCountryFlag, installCustomConnectedBlock, installConditionalDataBlock].reduce(function (acc, apply) {\n    return apply(acc);\n  }, config);\n});","map":{"version":3,"names":["installDataQueryFilter","installDataConnectedEmbedBlock","installDataTable","installDottedTableChart","installCountryFlag","installCustomConnectedBlock","installConditionalDataBlock","DataConnectorView","DataQueryWidget","PickObjectWidget","SelectProviderPickWidget","dataProvider","addonReducers","config","blocks","groupBlocksOrder","id","title","views","contentTypesViews","discodataconnector","widgets","data_query","widget","object_by_path","select_provider_pick","settings","storeExtenders","reduce","acc","apply"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/index.js"],"sourcesContent":["import installDataQueryFilter from './components/manage/Blocks/DataQueryFilter';\nimport installDataConnectedEmbedBlock from './components/manage/Blocks/DataConnectedEmbedBlock';\nimport installDataTable from './components/manage/Blocks/SimpleDataTable';\nimport installDottedTableChart from './components/manage/Blocks/DottedTableChart';\nimport installCountryFlag from './components/manage/Blocks/CountryFlag';\nimport installCustomConnectedBlock from './components/manage/Blocks/CustomConnectedBlock';\nimport installConditionalDataBlock from './components/manage/Blocks/ConditionalDataBlock';\n\nimport { DataConnectorView } from './components';\nimport {\n  DataQueryWidget,\n  PickObjectWidget,\n  SelectProviderPickWidget,\n} from './components';\nimport { dataProvider } from './middlewares';\nimport * as addonReducers from './reducers';\n\nexport default (config) => {\n  config.blocks.groupBlocksOrder = [\n    ...config.blocks.groupBlocksOrder,\n    {\n      id: 'data_blocks',\n      title: 'Data blocks',\n    },\n  ];\n\n  config.views.contentTypesViews.discodataconnector = DataConnectorView;\n\n  config.widgets.id.data_query = DataQueryWidget;\n  config.widgets.widget.data_query = DataQueryWidget;\n  config.widgets.widget.object_by_path = PickObjectWidget;\n  config.widgets.widget.select_provider_pick = SelectProviderPickWidget;\n\n  config.settings.storeExtenders = [\n    ...(config.settings.storeExtenders || []),\n    dataProvider,\n  ];\n\n  config.addonReducers = {\n    ...config.addonReducers,\n    ...addonReducers,\n  };\n\n  return [\n    installDataQueryFilter,\n    installDataConnectedEmbedBlock,\n    installDataTable,\n    installDottedTableChart,\n    installCountryFlag,\n    installCustomConnectedBlock,\n    installConditionalDataBlock,\n  ].reduce((acc, apply) => apply(acc), config);\n};\n"],"mappings":";;AAAA,OAAOA,sBAAsB,MAAM,4CAA4C;AAC/E,OAAOC,8BAA8B,MAAM,oDAAoD;AAC/F,OAAOC,gBAAgB,MAAM,4CAA4C;AACzE,OAAOC,uBAAuB,MAAM,6CAA6C;AACjF,OAAOC,kBAAkB,MAAM,wCAAwC;AACvE,OAAOC,2BAA2B,MAAM,iDAAiD;AACzF,OAAOC,2BAA2B,MAAM,iDAAiD;AAEzF,SAASC,iBAAiB,QAAQ,cAAc;AAChD,SACEC,eAAe,EACfC,gBAAgB,EAChBC,wBAAwB,QACnB,cAAc;AACrB,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAO,KAAKC,aAAa,MAAM,YAAY;AAE3C,gBAAe,UAACC,MAAM,EAAK;EACzBA,MAAM,CAACC,MAAM,CAACC,gBAAgB,gCACzBF,MAAM,CAACC,MAAM,CAACC,gBAAgB,IACjC;IACEC,EAAE,EAAE,aAAa;IACjBC,KAAK,EAAE;EACT,CAAC,EACF;EAEDJ,MAAM,CAACK,KAAK,CAACC,iBAAiB,CAACC,kBAAkB,GAAGb,iBAAiB;EAErEM,MAAM,CAACQ,OAAO,CAACL,EAAE,CAACM,UAAU,GAAGd,eAAe;EAC9CK,MAAM,CAACQ,OAAO,CAACE,MAAM,CAACD,UAAU,GAAGd,eAAe;EAClDK,MAAM,CAACQ,OAAO,CAACE,MAAM,CAACC,cAAc,GAAGf,gBAAgB;EACvDI,MAAM,CAACQ,OAAO,CAACE,MAAM,CAACE,oBAAoB,GAAGf,wBAAwB;EAErEG,MAAM,CAACa,QAAQ,CAACC,cAAc,gCACxBd,MAAM,CAACa,QAAQ,CAACC,cAAc,IAAI,EAAE,IACxChB,YAAY,EACb;EAEDE,MAAM,CAACD,aAAa,mCACfC,MAAM,CAACD,aAAa,GACpBA,aAAa,CACjB;EAED,OAAO,CACLZ,sBAAsB,EACtBC,8BAA8B,EAC9BC,gBAAgB,EAChBC,uBAAuB,EACvBC,kBAAkB,EAClBC,2BAA2B,EAC3BC,2BAA2B,CAC5B,CAACsB,MAAM,CAAC,UAACC,GAAG,EAAEC,KAAK;IAAA,OAAKA,KAAK,CAACD,GAAG,CAAC;EAAA,GAAEhB,MAAM,CAAC;AAC9C,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}