{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-object-widget/src/Widget/ObjectListInlineWidget.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport { Accordion, Button, Segment } from 'semantic-ui-react';\nimport React from 'react';\nimport { Icon as VoltoIcon, FormFieldWrapper, DragDropList } from '@plone/volto/components';\nimport { ObjectWidget } from '@plone/volto/components';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport addSVG from '@plone/volto/icons/add.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { v4 as uuid } from 'uuid';\nimport './style.css';\nvar ObjectListInlineWidget = function ObjectListInlineWidget(props) {\n  var id = props.id,\n    schema = props.schema,\n    _props$value = props.value,\n    value = _props$value === void 0 ? [] : _props$value,\n    _onChange = props.onChange,\n    schemaExtender = props.schemaExtender,\n    _props$defaultData = props.defaultData,\n    defaultData = _props$defaultData === void 0 ? {} : _props$defaultData;\n  return __jsx(React.Fragment, null, __jsx(FormFieldWrapper, _extends({}, props, {\n    className: \"objectlist-inline-widget\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    compact: true,\n    onClick: function onClick() {\n      return _onChange(id, [].concat(_toConsumableArray(value), [_objectSpread({\n        '@id': uuid()\n      }, defaultData)]));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(VoltoIcon, {\n    name: addSVG,\n    size: \"12px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), \"Add \".concat(schema.title)))), __jsx(DragDropList, {\n    childList: value.map(function (o) {\n      return [o['@id'], o];\n    }),\n    onMoveItem: function onMoveItem(result) {\n      var source = result.source,\n        destination = result.destination;\n      if (!destination) {\n        return;\n      }\n      var first = value[source.index];\n      var second = value[destination.index];\n      value[destination.index] = first;\n      value[source.index] = second;\n      _onChange(id, value);\n      return true;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, function (_ref) {\n    var child = _ref.child,\n      childId = _ref.childId,\n      index = _ref.index,\n      draginfo = _ref.draginfo;\n    return __jsx(\"div\", _extends({\n      ref: draginfo.innerRef\n    }, draginfo.draggableProps, {\n      key: childId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }), __jsx(Segment.Group, {\n      raised: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, __jsx(Accordion, {\n      key: index,\n      fluid: true,\n      styled: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, __jsx(Accordion.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, __jsx(\"button\", _extends({\n      style: {\n        visibility: 'visible',\n        display: 'inline-block'\n      }\n    }, draginfo.dragHandleProps, {\n      className: \"drag handle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), __jsx(VoltoIcon, {\n      name: dragSVG,\n      size: \"18px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    })), \"\".concat(schema.title, \" #\").concat(index + 1), __jsx(\"button\", {\n      onClick: function onClick() {\n        _onChange(id, value.filter(function (v, i) {\n          return i !== index;\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, __jsx(VoltoIcon, {\n      name: deleteSVG,\n      size: \"16px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }\n    }))), __jsx(Accordion.Content, {\n      active: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, __jsx(Segment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, __jsx(ObjectWidget, {\n      id: \"\".concat(id, \"-\").concat(index),\n      key: \"ow-\".concat(id, \"-\").concat(index),\n      schema: schemaExtender ? schemaExtender(schema, child) : schema,\n      value: child,\n      onChange: function onChange(fi, fv) {\n        var newvalue = value.map(function (v, i) {\n          return i !== index ? v : fv;\n        });\n        _onChange(id, newvalue);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }\n    }))))));\n  }));\n};\n_c = ObjectListInlineWidget;\nexport default ObjectListInlineWidget;\nvar _c;\n$RefreshReg$(_c, \"ObjectListInlineWidget\");","map":{"version":3,"names":["Accordion","Button","Segment","React","Icon","VoltoIcon","FormFieldWrapper","DragDropList","ObjectWidget","deleteSVG","addSVG","dragSVG","v4","uuid","ObjectListInlineWidget","props","id","schema","value","onChange","schemaExtender","defaultData","title","map","o","result","source","destination","first","index","second","child","childId","draginfo","innerRef","draggableProps","visibility","display","dragHandleProps","filter","v","i","fi","fv","newvalue"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-object-widget/src/Widget/ObjectListInlineWidget.jsx"],"sourcesContent":["import { Accordion, Button, Segment } from 'semantic-ui-react';\n\nimport React from 'react';\nimport {\n  Icon as VoltoIcon,\n  FormFieldWrapper,\n  DragDropList,\n} from '@plone/volto/components';\nimport { ObjectWidget } from '@plone/volto/components';\n\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport addSVG from '@plone/volto/icons/add.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport { v4 as uuid } from 'uuid';\n\nimport './style.css';\n\nconst ObjectListInlineWidget = (props) => {\n  const {\n    id,\n    schema,\n    value = [],\n    onChange,\n    schemaExtender,\n    defaultData = {},\n  } = props;\n\n  return (\n    <>\n      <FormFieldWrapper {...props} className=\"objectlist-inline-widget\">\n        <div>\n          <Button\n            compact\n            onClick={() =>\n              onChange(id, [\n                ...value,\n                {\n                  '@id': uuid(),\n                  ...defaultData,\n                },\n              ])\n            }\n          >\n            <VoltoIcon name={addSVG} size=\"12px\" />\n            {`Add ${schema.title}`}\n          </Button>\n        </div>\n      </FormFieldWrapper>\n      <DragDropList\n        childList={value.map((o) => [o['@id'], o])}\n        onMoveItem={(result) => {\n          const { source, destination } = result;\n          if (!destination) {\n            return;\n          }\n\n          const first = value[source.index];\n          const second = value[destination.index];\n          value[destination.index] = first;\n          value[source.index] = second;\n\n          onChange(id, value);\n          return true;\n        }}\n      >\n        {({ child, childId, index, draginfo }) => {\n          return (\n            <div\n              ref={draginfo.innerRef}\n              {...draginfo.draggableProps}\n              key={childId}\n            >\n              <Segment.Group raised>\n                <Accordion key={index} fluid styled>\n                  <Accordion.Title>\n                    <button\n                      style={{\n                        visibility: 'visible',\n                        display: 'inline-block',\n                      }}\n                      {...draginfo.dragHandleProps}\n                      className=\"drag handle\"\n                    >\n                      <VoltoIcon name={dragSVG} size=\"18px\" />\n                    </button>\n\n                    {`${schema.title} #${index + 1}`}\n                    <button\n                      onClick={() => {\n                        onChange(\n                          id,\n                          value.filter((v, i) => i !== index),\n                        );\n                      }}\n                    >\n                      <VoltoIcon name={deleteSVG} size=\"16px\" />\n                    </button>\n                  </Accordion.Title>\n                  <Accordion.Content active>\n                    <Segment>\n                      <ObjectWidget\n                        id={`${id}-${index}`}\n                        key={`ow-${id}-${index}`}\n                        schema={\n                          schemaExtender\n                            ? schemaExtender(schema, child)\n                            : schema\n                        }\n                        value={child}\n                        onChange={(fi, fv) => {\n                          const newvalue = value.map((v, i) =>\n                            i !== index ? v : fv,\n                          );\n                          onChange(id, newvalue);\n                        }}\n                      />\n                    </Segment>\n                  </Accordion.Content>\n                </Accordion>\n              </Segment.Group>\n            </div>\n          );\n        }}\n      </DragDropList>\n    </>\n  );\n};\nexport default ObjectListInlineWidget;\n"],"mappings":";;;;;;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,OAAO,QAAQ,mBAAmB;AAE9D,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,IAAI,IAAIC,SAAS,EACjBC,gBAAgB,EAChBC,YAAY,QACP,yBAAyB;AAChC,SAASC,YAAY,QAAQ,yBAAyB;AAEtD,OAAOC,SAAS,MAAM,+BAA+B;AACrD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AAEjC,OAAO,aAAa;AAEpB,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAIC,KAAK,EAAK;EACxC,IACEC,EAAE,GAMAD,KAAK,CANPC,EAAE;IACFC,MAAM,GAKJF,KAAK,CALPE,MAAM;IAAA,eAKJF,KAAK,CAJPG,KAAK;IAALA,KAAK,6BAAG,EAAE;IACVC,SAAQ,GAGNJ,KAAK,CAHPI,QAAQ;IACRC,cAAc,GAEZL,KAAK,CAFPK,cAAc;IAAA,qBAEZL,KAAK,CADPM,WAAW;IAAXA,WAAW,mCAAG,CAAC,CAAC;EAGlB,OACE,4BACE,MAAC,gBAAgB,eAAKN,KAAK;IAAE,SAAS,EAAC,0BAA0B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAC/D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,MAAM;IACL,OAAO;IACP,OAAO,EAAE;MAAA,OACPI,SAAQ,CAACH,EAAE,+BACNE,KAAK;QAEN,KAAK,EAAEL,IAAI;MAAE,GACVQ,WAAW,IAEhB;IAAA,CACH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAED,MAAC,SAAS;IAAC,IAAI,EAAEX,MAAO;IAAC,IAAI,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,gBAC/BO,MAAM,CAACK,KAAK,EACb,CACL,CACW,EACnB,MAAC,YAAY;IACX,SAAS,EAAEJ,KAAK,CAACK,GAAG,CAAC,UAACC,CAAC;MAAA,OAAK,CAACA,CAAC,CAAC,KAAK,CAAC,EAAEA,CAAC,CAAC;IAAA,EAAE;IAC3C,UAAU,EAAE,oBAACC,MAAM,EAAK;MACtB,IAAQC,MAAM,GAAkBD,MAAM,CAA9BC,MAAM;QAAEC,WAAW,GAAKF,MAAM,CAAtBE,WAAW;MAC3B,IAAI,CAACA,WAAW,EAAE;QAChB;MACF;MAEA,IAAMC,KAAK,GAAGV,KAAK,CAACQ,MAAM,CAACG,KAAK,CAAC;MACjC,IAAMC,MAAM,GAAGZ,KAAK,CAACS,WAAW,CAACE,KAAK,CAAC;MACvCX,KAAK,CAACS,WAAW,CAACE,KAAK,CAAC,GAAGD,KAAK;MAChCV,KAAK,CAACQ,MAAM,CAACG,KAAK,CAAC,GAAGC,MAAM;MAE5BX,SAAQ,CAACH,EAAE,EAAEE,KAAK,CAAC;MACnB,OAAO,IAAI;IACb,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAED,gBAAyC;IAAA,IAAtCa,KAAK,QAALA,KAAK;MAAEC,OAAO,QAAPA,OAAO;MAAEH,KAAK,QAALA,KAAK;MAAEI,QAAQ,QAARA,QAAQ;IACjC,OACE;MACE,GAAG,EAAEA,QAAQ,CAACC;IAAS,GACnBD,QAAQ,CAACE,cAAc;MAC3B,GAAG,EAAEH,OAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,IAEb,MAAC,OAAO,CAAC,KAAK;MAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACnB,MAAC,SAAS;MAAC,GAAG,EAAEH,KAAM;MAAC,KAAK;MAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACjC,MAAC,SAAS,CAAC,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACd;MACE,KAAK,EAAE;QACLO,UAAU,EAAE,SAAS;QACrBC,OAAO,EAAE;MACX;IAAE,GACEJ,QAAQ,CAACK,eAAe;MAC5B,SAAS,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,IAEvB,MAAC,SAAS;MAAC,IAAI,EAAE3B,OAAQ;MAAC,IAAI,EAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACjC,YAELM,MAAM,CAACK,KAAK,eAAKO,KAAK,GAAG,CAAC,GAC9B;MACE,OAAO,EAAE,mBAAM;QACbV,SAAQ,CACNH,EAAE,EACFE,KAAK,CAACqB,MAAM,CAAC,UAACC,CAAC,EAAEC,CAAC;UAAA,OAAKA,CAAC,KAAKZ,KAAK;QAAA,EAAC,CACpC;MACH,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEF,MAAC,SAAS;MAAC,IAAI,EAAEpB,SAAU;MAAC,IAAI,EAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACnC,CACO,EAClB,MAAC,SAAS,CAAC,OAAO;MAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACvB,MAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACN,MAAC,YAAY;MACX,EAAE,YAAKO,EAAE,cAAIa,KAAK,CAAG;MACrB,GAAG,eAAQb,EAAE,cAAIa,KAAK,CAAG;MACzB,MAAM,EACJT,cAAc,GACVA,cAAc,CAACH,MAAM,EAAEc,KAAK,CAAC,GAC7Bd,MACL;MACD,KAAK,EAAEc,KAAM;MACb,QAAQ,EAAE,kBAACW,EAAE,EAAEC,EAAE,EAAK;QACpB,IAAMC,QAAQ,GAAG1B,KAAK,CAACK,GAAG,CAAC,UAACiB,CAAC,EAAEC,CAAC;UAAA,OAC9BA,CAAC,KAAKZ,KAAK,GAAGW,CAAC,GAAGG,EAAE;QAAA,EACrB;QACDxB,SAAQ,CAACH,EAAE,EAAE4B,QAAQ,CAAC;MACxB,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACF,CACM,CACQ,CACV,CACE,CACZ;EAEV,CAAC,CACY,CACd;AAEP,CAAC;AAAC,KA7GI9B,sBAAsB;AA8G5B,eAAeA,sBAAsB;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}