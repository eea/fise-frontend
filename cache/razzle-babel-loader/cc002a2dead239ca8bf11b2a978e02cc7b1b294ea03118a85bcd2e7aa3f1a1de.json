{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/components/theme/CountryView/CountryView.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Full view component.\n * @module components/theme/View/FullView\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { setFolderTabs } from '@eeacms/volto-forests-theme/actions';\n\n/**\n * Full view component class.\n * @function FullView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\n\nconst numberToWord = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n  10: 'ten',\n  11: 'eleven',\n  12: 'twelve'\n};\nconst mapDispatchToProps = {\n  // setFolderHeader,\n  setFolderTabs\n};\nclass FullView extends Component {\n  constructor(props) {\n    super(props);\n    this.getFolderHeader = this.getFolderHeader.bind(this);\n    this.renderTabs = this.renderTabs.bind(this);\n    this.state = {\n      tabs: null\n    };\n  }\n  getFolderHeader(nextContent) {\n    // const content = nextContent ? nextContent : this.props.content;\n    // const image =\n    //   content.items && content.items.find(c => c['@type'] === 'Image');\n    // const url = image && image.image.download;\n    // const inCountryFolder = true;\n    // this.props.setFolderHeader({ title, description, url, inCountryFolder });\n  }\n  renderTabs(nextContent) {\n    const items = nextContent ? nextContent.items : this.props.content.items;\n    const content = items.filter(i => i.title !== 'folder_info');\n    const tabs = __jsx(\"div\", {\n      className: 'ui item stackable tabs menu ' + numberToWord[content.length],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, content.map(item => __jsx(Link, {\n      key: item.url,\n      className: \"item\",\n      to: item.url,\n      title: item['@type'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, item.title)));\n    this.setState({\n      tabs: tabs\n    });\n    this.props.setFolderTabs(content);\n  }\n  componentDidMount() {\n    this.getFolderHeader();\n    this.renderTabs();\n  }\n  componentWillReceiveProps(nextProps) {\n    if (JSON.stringify(nextProps.content) !== JSON.stringify(this.props.content)) {\n      this.getFolderHeader(nextProps.content);\n      this.renderTabs(nextProps.content);\n    }\n  }\n  componentWillUnmount() {\n    // this.props.setFolderHeader({ inCountryFolder: false });\n  }\n  render() {\n    const content = this.props.content;\n    return __jsx(Container, {\n      className: \"view-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: content.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }), __jsx(\"article\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, __jsx(\"section\", {\n      id: \"content-core\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, this.state.tabs)));\n  }\n}\n_defineProperty(FullView, \"propTypes\", {\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Child items of the object\n     */\n    items: PropTypes.arrayOf(PropTypes.shape({\n      /**\n       * Title of the item\n       */\n      title: PropTypes.string,\n      /**\n       * Description of the item\n       */\n      description: PropTypes.string,\n      /**\n       * Url of the item\n       */\n      url: PropTypes.string,\n      /**\n       * Image of the item\n       */\n      image: PropTypes.object,\n      /**\n       * Image caption of the item\n       */\n      image_caption: PropTypes.string,\n      /**\n       * Type of the item\n       */\n      '@type': PropTypes.string\n    }))\n  }).isRequired\n});\nexport default connect(null, mapDispatchToProps)(FullView);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","Link","Container","connect","setFolderTabs","numberToWord","mapDispatchToProps","FullView","constructor","props","getFolderHeader","bind","renderTabs","state","tabs","nextContent","items","content","filter","i","title","length","map","item","url","setState","componentDidMount","componentWillReceiveProps","nextProps","JSON","stringify","componentWillUnmount","render","shape","string","description","arrayOf","image","object","image_caption","isRequired"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/components/theme/CountryView/CountryView.jsx"],"sourcesContent":["/**\n * Full view component.\n * @module components/theme/View/FullView\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { setFolderTabs } from '@eeacms/volto-forests-theme/actions';\n\n/**\n * Full view component class.\n * @function FullView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\n\nconst numberToWord = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n  10: 'ten',\n  11: 'eleven',\n  12: 'twelve',\n};\n\nconst mapDispatchToProps = {\n  // setFolderHeader,\n  setFolderTabs,\n};\n\nclass FullView extends Component {\n  static propTypes = {\n    /**\n     * Content of the object\n     */\n    content: PropTypes.shape({\n      /**\n       * Title of the object\n       */\n      title: PropTypes.string,\n      /**\n       * Description of the object\n       */\n      description: PropTypes.string,\n      /**\n       * Child items of the object\n       */\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          /**\n           * Title of the item\n           */\n          title: PropTypes.string,\n          /**\n           * Description of the item\n           */\n          description: PropTypes.string,\n          /**\n           * Url of the item\n           */\n          url: PropTypes.string,\n          /**\n           * Image of the item\n           */\n          image: PropTypes.object,\n          /**\n           * Image caption of the item\n           */\n          image_caption: PropTypes.string,\n          /**\n           * Type of the item\n           */\n          '@type': PropTypes.string,\n        }),\n      ),\n    }).isRequired,\n  };\n  constructor(props) {\n    super(props);\n    this.getFolderHeader = this.getFolderHeader.bind(this);\n    this.renderTabs = this.renderTabs.bind(this);\n\n    this.state = {\n      tabs: null,\n    };\n  }\n\n  getFolderHeader(nextContent) {\n    // const content = nextContent ? nextContent : this.props.content;\n    // const image =\n    //   content.items && content.items.find(c => c['@type'] === 'Image');\n    // const url = image && image.image.download;\n    // const inCountryFolder = true;\n    // this.props.setFolderHeader({ title, description, url, inCountryFolder });\n  }\n\n  renderTabs(nextContent) {\n    const items = nextContent ? nextContent.items : this.props.content.items;\n    const content = items.filter((i) => i.title !== 'folder_info');\n    const tabs = (\n      <div\n        className={\n          'ui item stackable tabs menu ' + numberToWord[content.length]\n        }\n      >\n        {content.map((item) => (\n          <Link\n            key={item.url}\n            className=\"item\"\n            to={item.url}\n            title={item['@type']}\n          >\n            {item.title}\n          </Link>\n        ))}\n      </div>\n    );\n    this.setState({\n      tabs: tabs,\n    });\n    this.props.setFolderTabs(content);\n  }\n\n  componentDidMount() {\n    this.getFolderHeader();\n    this.renderTabs();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      JSON.stringify(nextProps.content) !== JSON.stringify(this.props.content)\n    ) {\n      this.getFolderHeader(nextProps.content);\n      this.renderTabs(nextProps.content);\n    }\n  }\n\n  componentWillUnmount() {\n    // this.props.setFolderHeader({ inCountryFolder: false });\n  }\n\n  render() {\n    const content = this.props.content;\n    return (\n      <Container className=\"view-wrapper\">\n        <Helmet title={content.title} />\n        <article id=\"content\">\n          <section id=\"content-core\">{this.state.tabs}</section>\n        </article>\n      </Container>\n    );\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(FullView);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}