{"ast":null,"code":"import _join from \"lodash/join\";\nimport _nth from \"lodash/nth\";\nimport _last from \"lodash/last\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/ContentType.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Content Type component.\n * @module components/manage/Controlpanels/ContentType\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getParentUrl } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Header } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { Error, Form, Icon, Toolbar, Toast } from '@plone/volto/components';\nimport { getControlpanel, updateControlpanel } from '@plone/volto/actions';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nconst messages = defineMessages({\n  title: {\n    \"id\": \"{id} Content Type\",\n    \"defaultMessage\": \"{id} Content Type\"\n  },\n  changesSaved: {\n    \"id\": \"Changes saved.\",\n    \"defaultMessage\": \"Changes saved.\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  save: {\n    \"id\": \"Save\",\n    \"defaultMessage\": \"Save\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  info: {\n    \"id\": \"Info\",\n    \"defaultMessage\": \"Info\"\n  }\n});\n\n/**\n * ContentType class.\n * @class ContentType\n * @extends Component\n */\nclass ContentType extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentType\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      visual: false,\n      error: null,\n      isClient: false\n    };\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.form = /*#__PURE__*/React.createRef();\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlpanel(_join([this.props.parent, this.props.id], '/'));\n    this.setState({\n      isClient: true\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Control Panel GET\n    if (this.props.cpanelRequest.get.loading && nextProps.cpanelRequest.get.error) {\n      this.setState({\n        error: nextProps.cpanelRequest.get.error\n      });\n    }\n\n    // Control Panel PATCH\n    if (this.props.cpanelRequest.update.loading && nextProps.cpanelRequest.update.loaded) {\n      toast.info(__jsx(Toast, {\n        info: true,\n        title: this.props.intl.formatMessage(messages.info),\n        content: this.props.intl.formatMessage(messages.changesSaved),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.updateControlpanel(this.props.controlpanel['@id'], data);\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    // Error\n    if (this.state.error) {\n      return __jsx(Error, {\n        error: this.state.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 14\n        }\n      });\n    }\n    if (this.props.controlpanel) {\n      var _controlpanel$data, _controlpanel$data2;\n      let controlpanel = this.props.controlpanel;\n      if ((controlpanel === null || controlpanel === void 0 ? void 0 : (_controlpanel$data = controlpanel.data) === null || _controlpanel$data === void 0 ? void 0 : _controlpanel$data.filter_content_types) === false) {\n        controlpanel.data.filter_content_types = {\n          title: 'all',\n          token: 'all'\n        };\n      }\n      if ((controlpanel === null || controlpanel === void 0 ? void 0 : (_controlpanel$data2 = controlpanel.data) === null || _controlpanel$data2 === void 0 ? void 0 : _controlpanel$data2.filter_content_types) === true) {\n        var _controlpanel$data3;\n        if (((controlpanel === null || controlpanel === void 0 ? void 0 : (_controlpanel$data3 = controlpanel.data) === null || _controlpanel$data3 === void 0 ? void 0 : _controlpanel$data3.allowed_content_types) || []).length) {\n          controlpanel.data.filter_content_types = {\n            title: 'some',\n            token: 'some'\n          };\n        } else {\n          controlpanel.data.filter_content_types = {\n            title: 'none',\n            token: 'none'\n          };\n        }\n      }\n      return __jsx(\"div\", {\n        id: \"page-controlpanel\",\n        className: \"ui container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }\n      }, __jsx(Header, {\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      }, this.props.intl.formatMessage(messages.title, {\n        id: controlpanel.title\n      })), __jsx(Form, {\n        isEditForm: true,\n        ref: this.form,\n        schema: controlpanel.schema,\n        formData: controlpanel.data,\n        onSubmit: this.onSubmit,\n        onCancel: this.onCancel,\n        pathname: this.props.pathname,\n        visual: this.state.visual,\n        hideActions: true,\n        loading: this.props.cpanelRequest.update.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }\n      }), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(React.Fragment, null, __jsx(Button, {\n          id: \"toolbar-save\",\n          className: \"save\",\n          \"aria-label\": this.props.intl.formatMessage(messages.save),\n          onClick: () => this.form.current.onSubmit(),\n          disabled: this.props.cpanelRequest.update.loading,\n          loading: this.props.cpanelRequest.update.loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }\n        }, __jsx(Icon, {\n          name: saveSVG,\n          className: \"circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.save),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 23\n          }\n        })), __jsx(Button, {\n          className: \"cancel\",\n          \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n          onClick: () => this.onCancel(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 21\n          }\n        }, __jsx(Icon, {\n          name: clearSVG,\n          className: \"circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.cancel),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 23\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }\n      })));\n    }\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 12\n      }\n    });\n  }\n}\n_defineProperty(ContentType, \"propTypes\", {\n  updateControlpanel: PropTypes.func.isRequired,\n  getControlpanel: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  parent: PropTypes.string.isRequired,\n  cpanelRequest: PropTypes.objectOf(PropTypes.any).isRequired,\n  controlpanel: PropTypes.shape({\n    '@id': PropTypes.string,\n    data: PropTypes.object,\n    schema: PropTypes.object,\n    title: PropTypes.string\n  }),\n  pathname: PropTypes.string.isRequired\n});\n_defineProperty(ContentType, \"defaultProps\", {\n  controlpanel: null\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  controlpanel: state.controlpanels.controlpanel,\n  cpanelRequest: state.controlpanels,\n  pathname: props.location.pathname,\n  id: _last(props.location.pathname.split('/')),\n  parent: _nth(props.location.pathname.split('/'), -2)\n}), {\n  getControlpanel,\n  updateControlpanel\n}))(ContentType);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","getParentUrl","Portal","Button","Header","defineMessages","injectIntl","toast","Error","Form","Icon","Toolbar","Toast","getControlpanel","updateControlpanel","saveSVG","clearSVG","messages","title","changesSaved","back","save","cancel","info","ContentType","constructor","props","state","visual","error","isClient","onCancel","bind","onSubmit","form","createRef","componentDidMount","parent","id","setState","UNSAFE_componentWillReceiveProps","nextProps","cpanelRequest","get","loading","update","loaded","intl","formatMessage","data","controlpanel","history","push","pathname","render","filter_content_types","token","allowed_content_types","length","schema","document","getElementById","current","func","isRequired","string","objectOf","any","shape","object","controlpanels","location","split"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/ContentType.jsx"],"sourcesContent":["/**\n * Content Type component.\n * @module components/manage/Controlpanels/ContentType\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getParentUrl } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Header } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { last, nth, join } from 'lodash';\nimport { Error, Form, Icon, Toolbar, Toast } from '@plone/volto/components';\nimport { getControlpanel, updateControlpanel } from '@plone/volto/actions';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  title: {\n    id: '{id} Content Type',\n    defaultMessage: '{id} Content Type',\n  },\n  changesSaved: {\n    id: 'Changes saved.',\n    defaultMessage: 'Changes saved.',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  info: {\n    id: 'Info',\n    defaultMessage: 'Info',\n  },\n});\n\n/**\n * ContentType class.\n * @class ContentType\n * @extends Component\n */\nclass ContentType extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateControlpanel: PropTypes.func.isRequired,\n    getControlpanel: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    parent: PropTypes.string.isRequired,\n    cpanelRequest: PropTypes.objectOf(PropTypes.any).isRequired,\n    controlpanel: PropTypes.shape({\n      '@id': PropTypes.string,\n      data: PropTypes.object,\n      schema: PropTypes.object,\n      title: PropTypes.string,\n    }),\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    controlpanel: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentType\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visual: false,\n      error: null,\n      isClient: false,\n    };\n\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.form = React.createRef();\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlpanel(join([this.props.parent, this.props.id], '/'));\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // Control Panel GET\n    if (\n      this.props.cpanelRequest.get.loading &&\n      nextProps.cpanelRequest.get.error\n    ) {\n      this.setState({\n        error: nextProps.cpanelRequest.get.error,\n      });\n    }\n\n    // Control Panel PATCH\n    if (\n      this.props.cpanelRequest.update.loading &&\n      nextProps.cpanelRequest.update.loaded\n    ) {\n      toast.info(\n        <Toast\n          info\n          title={this.props.intl.formatMessage(messages.info)}\n          content={this.props.intl.formatMessage(messages.changesSaved)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.updateControlpanel(this.props.controlpanel['@id'], data);\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    // Error\n    if (this.state.error) {\n      return <Error error={this.state.error} />;\n    }\n\n    if (this.props.controlpanel) {\n      let controlpanel = this.props.controlpanel;\n      if (controlpanel?.data?.filter_content_types === false) {\n        controlpanel.data.filter_content_types = { title: 'all', token: 'all' };\n      }\n      if (controlpanel?.data?.filter_content_types === true) {\n        if ((controlpanel?.data?.allowed_content_types || []).length) {\n          controlpanel.data.filter_content_types = {\n            title: 'some',\n            token: 'some',\n          };\n        } else {\n          controlpanel.data.filter_content_types = {\n            title: 'none',\n            token: 'none',\n          };\n        }\n      }\n      return (\n        <div id=\"page-controlpanel\" className=\"ui container\">\n          <Header disabled>\n            {this.props.intl.formatMessage(messages.title, {\n              id: controlpanel.title,\n            })}\n          </Header>\n          <Form\n            isEditForm\n            ref={this.form}\n            schema={controlpanel.schema}\n            formData={controlpanel.data}\n            onSubmit={this.onSubmit}\n            onCancel={this.onCancel}\n            pathname={this.props.pathname}\n            visual={this.state.visual}\n            hideActions\n            loading={this.props.cpanelRequest.update.loading}\n          />\n          {this.state.isClient && (\n            <Portal node={document.getElementById('toolbar')}>\n              <Toolbar\n                pathname={this.props.pathname}\n                hideDefaultViewButtons\n                inner={\n                  <>\n                    <Button\n                      id=\"toolbar-save\"\n                      className=\"save\"\n                      aria-label={this.props.intl.formatMessage(messages.save)}\n                      onClick={() => this.form.current.onSubmit()}\n                      disabled={this.props.cpanelRequest.update.loading}\n                      loading={this.props.cpanelRequest.update.loading}\n                    >\n                      <Icon\n                        name={saveSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.save)}\n                      />\n                    </Button>\n                    <Button\n                      className=\"cancel\"\n                      aria-label={this.props.intl.formatMessage(\n                        messages.cancel,\n                      )}\n                      onClick={() => this.onCancel()}\n                    >\n                      <Icon\n                        name={clearSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.cancel)}\n                      />\n                    </Button>\n                  </>\n                }\n              />\n            </Portal>\n          )}\n        </div>\n      );\n    }\n    return <div />;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      controlpanel: state.controlpanels.controlpanel,\n      cpanelRequest: state.controlpanels,\n      pathname: props.location.pathname,\n      id: last(props.location.pathname.split('/')),\n      parent: nth(props.location.pathname.split('/'), -2),\n    }),\n    { getControlpanel, updateControlpanel },\n  ),\n)(ContentType);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"{id} Content Type","defaultMessage":"{id} Content Type"},{"id":"Changes saved.","defaultMessage":"Changes saved."},{"id":"Back","defaultMessage":"Back"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Info","defaultMessage":"Info"}]}},"sourceType":"module","externalDependencies":[]}