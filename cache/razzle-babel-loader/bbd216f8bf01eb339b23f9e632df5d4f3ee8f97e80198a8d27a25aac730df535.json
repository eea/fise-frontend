{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectWithoutProperties from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"itemModel\", \"item\"];\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/components/UniversalItem/UniversalItem.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport config from '@plone/volto/registry';\nimport { resolveExtension } from '@plone/volto/helpers/Extensions/withBlockExtensions';\nimport { Item } from './model';\nimport universalItemSchemaEnhancer from './schema';\nfunction UniversalItem(props) {\n  var _props$itemModel = props.itemModel,\n    itemModel = _props$itemModel === void 0 ? {} : _props$itemModel,\n    item = props.item,\n    rest = _objectWithoutProperties(props, _excluded);\n  var extension = resolveExtension('@type', config.blocks.blocksConfig.listing.extensions.itemTemplates, itemModel);\n  var ItemTemplate = extension.view;\n  return __jsx(ItemTemplate, _extends({\n    item: new Item(item),\n    itemModel: itemModel\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  }));\n}\n_c = UniversalItem;\nUniversalItem.schemaEnhancer = universalItemSchemaEnhancer;\nexport default UniversalItem;\nvar _c;\n$RefreshReg$(_c, \"UniversalItem\");","map":{"version":3,"names":["config","resolveExtension","Item","universalItemSchemaEnhancer","UniversalItem","props","itemModel","item","rest","extension","blocks","blocksConfig","listing","extensions","itemTemplates","ItemTemplate","view","schemaEnhancer"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/components/UniversalItem/UniversalItem.jsx"],"sourcesContent":["import config from '@plone/volto/registry';\nimport { resolveExtension } from '@plone/volto/helpers/Extensions/withBlockExtensions';\nimport { Item } from './model';\n\nimport universalItemSchemaEnhancer from './schema';\n\nfunction UniversalItem(props) {\n  const { itemModel = {}, item, ...rest } = props;\n  const extension = resolveExtension(\n    '@type',\n    config.blocks.blocksConfig.listing.extensions.itemTemplates,\n    itemModel,\n  );\n  const ItemTemplate = extension.view;\n\n  return <ItemTemplate item={new Item(item)} itemModel={itemModel} {...rest} />;\n}\n\nUniversalItem.schemaEnhancer = universalItemSchemaEnhancer;\n\nexport default UniversalItem;\n"],"mappings":";;;;;;AAAA,OAAOA,MAAM,MAAM,uBAAuB;AAC1C,SAASC,gBAAgB,QAAQ,qDAAqD;AACtF,SAASC,IAAI,QAAQ,SAAS;AAE9B,OAAOC,2BAA2B,MAAM,UAAU;AAElD,SAASC,aAAa,CAACC,KAAK,EAAE;EAC5B,uBAA0CA,KAAK,CAAvCC,SAAS;IAATA,SAAS,iCAAG,CAAC,CAAC;IAAEC,IAAI,GAAcF,KAAK,CAAvBE,IAAI;IAAKC,IAAI,4BAAKH,KAAK;EAC/C,IAAMI,SAAS,GAAGR,gBAAgB,CAChC,OAAO,EACPD,MAAM,CAACU,MAAM,CAACC,YAAY,CAACC,OAAO,CAACC,UAAU,CAACC,aAAa,EAC3DR,SAAS,CACV;EACD,IAAMS,YAAY,GAAGN,SAAS,CAACO,IAAI;EAEnC,OAAO,MAAC,YAAY;IAAC,IAAI,EAAE,IAAId,IAAI,CAACK,IAAI,CAAE;IAAC,SAAS,EAAED;EAAU,GAAKE,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI;AAC/E;AAAC,KAVQJ,aAAa;AAYtBA,aAAa,CAACa,cAAc,GAAGd,2BAA2B;AAE1D,eAAeC,aAAa;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}