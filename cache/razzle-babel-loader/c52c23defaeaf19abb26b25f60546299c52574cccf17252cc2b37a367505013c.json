{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Controlpanels reducer.\n * @module reducers/controlpanels/controlpanels\n */\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport { GET_CONTROLPANEL, POST_CONTROLPANEL, DELETE_CONTROLPANEL, LIST_CONTROLPANELS, UPDATE_CONTROLPANEL, SYSTEM_INFORMATION, DATABASE_INFORMATION } from '@plone/volto/constants/ActionTypes';\nvar initialState = {\n  get: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  post: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  \"delete\": {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  controlpanel: null,\n  controlpanels: [],\n  systeminformation: null,\n  databaseinformation: null\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Controlpanels reducer.\n * @function controlpanels\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function controlpanels() {\n  var _objectSpread6;\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case \"\".concat(GET_CONTROLPANEL, \"_PENDING\"):\n    case \"\".concat(LIST_CONTROLPANELS, \"_PENDING\"):\n    case \"\".concat(SYSTEM_INFORMATION, \"_PENDING\"):\n    case \"\".concat(DATABASE_INFORMATION, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        controlpanel: null\n      }, getRequestKey(action.type), {\n        loading: true,\n        loaded: false,\n        error: null\n      }));\n    case \"\".concat(POST_CONTROLPANEL, \"_PENDING\"):\n    case \"\".concat(UPDATE_CONTROLPANEL, \"_PENDING\"):\n    case \"\".concat(DELETE_CONTROLPANEL, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, getRequestKey(action.type), {\n        loading: true,\n        loaded: false,\n        error: null\n      }));\n    case \"\".concat(GET_CONTROLPANEL, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        controlpanel: _objectSpread(_objectSpread({}, action.result), {}, {\n          '@id': flattenToAppURL(action.result['@id'])\n        })\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: true,\n        error: null\n      }));\n    case \"\".concat(POST_CONTROLPANEL, \"_SUCCESS\"):\n    case \"\".concat(UPDATE_CONTROLPANEL, \"_SUCCESS\"):\n    case \"\".concat(DELETE_CONTROLPANEL, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, getRequestKey(action.type), {\n        loading: false,\n        loaded: true,\n        error: null\n      }));\n    case \"\".concat(LIST_CONTROLPANELS, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, (_objectSpread6 = {}, _defineProperty(_objectSpread6, getRequestKey(action.type), {\n        loading: false,\n        loaded: true,\n        error: null\n      }), _defineProperty(_objectSpread6, \"controlpanels\", action.result), _objectSpread6));\n    case \"\".concat(SYSTEM_INFORMATION, \"_SUCCESS\"):\n      {\n        var _objectSpread7;\n        return _objectSpread(_objectSpread({}, state), {}, (_objectSpread7 = {}, _defineProperty(_objectSpread7, getRequestKey(action.type), {\n          loading: false,\n          loaded: true,\n          error: null\n        }), _defineProperty(_objectSpread7, \"systeminformation\", action.result), _objectSpread7));\n      }\n    case \"\".concat(SYSTEM_INFORMATION, \"_FAIL\"):\n      {\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, getRequestKey(action.type), {\n          loading: false,\n          loaded: true,\n          error: action.error\n        }));\n      }\n    case \"\".concat(DATABASE_INFORMATION, \"_SUCCESS\"):\n      {\n        var _objectSpread9;\n        return _objectSpread(_objectSpread({}, state), {}, (_objectSpread9 = {}, _defineProperty(_objectSpread9, getRequestKey(action.type), {\n          loading: false,\n          loaded: true,\n          error: null\n        }), _defineProperty(_objectSpread9, \"databaseinformation\", action.result), _objectSpread9));\n      }\n    case \"\".concat(DATABASE_INFORMATION, \"_FAIL\"):\n      {\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, getRequestKey(action.type), {\n          loading: false,\n          loaded: true,\n          error: action.error\n        }));\n      }\n    case \"\".concat(GET_CONTROLPANEL, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        controlpanel: null\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: false,\n        error: action.error\n      }));\n    case \"\".concat(LIST_CONTROLPANELS, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        controlpanels: []\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: false,\n        error: action.error\n      }));\n    case \"\".concat(POST_CONTROLPANEL, \"_FAIL\"):\n    case \"\".concat(UPDATE_CONTROLPANEL, \"_FAIL\"):\n    case \"\".concat(DELETE_CONTROLPANEL, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, getRequestKey(action.type), {\n        loading: false,\n        loaded: false,\n        error: action.error\n      }));\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["flattenToAppURL","GET_CONTROLPANEL","POST_CONTROLPANEL","DELETE_CONTROLPANEL","LIST_CONTROLPANELS","UPDATE_CONTROLPANEL","SYSTEM_INFORMATION","DATABASE_INFORMATION","initialState","get","loaded","loading","error","list","update","post","controlpanel","controlpanels","systeminformation","databaseinformation","getRequestKey","actionType","split","toLowerCase","state","action","type","result"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/controlpanels/controlpanels.js"],"sourcesContent":["/**\n * Controlpanels reducer.\n * @module reducers/controlpanels/controlpanels\n */\nimport { flattenToAppURL } from '@plone/volto/helpers';\nimport {\n  GET_CONTROLPANEL,\n  POST_CONTROLPANEL,\n  DELETE_CONTROLPANEL,\n  LIST_CONTROLPANELS,\n  UPDATE_CONTROLPANEL,\n  SYSTEM_INFORMATION,\n  DATABASE_INFORMATION,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  post: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  controlpanel: null,\n  controlpanels: [],\n  systeminformation: null,\n  databaseinformation: null,\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Controlpanels reducer.\n * @function controlpanels\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function controlpanels(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_CONTROLPANEL}_PENDING`:\n    case `${LIST_CONTROLPANELS}_PENDING`:\n    case `${SYSTEM_INFORMATION}_PENDING`:\n    case `${DATABASE_INFORMATION}_PENDING`:\n      return {\n        ...state,\n        controlpanel: null,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${POST_CONTROLPANEL}_PENDING`:\n    case `${UPDATE_CONTROLPANEL}_PENDING`:\n    case `${DELETE_CONTROLPANEL}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_CONTROLPANEL}_SUCCESS`:\n      return {\n        ...state,\n        controlpanel: {\n          ...action.result,\n          '@id': flattenToAppURL(action.result['@id']),\n        },\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${POST_CONTROLPANEL}_SUCCESS`:\n    case `${UPDATE_CONTROLPANEL}_SUCCESS`:\n    case `${DELETE_CONTROLPANEL}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_CONTROLPANELS}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        controlpanels: action.result,\n      };\n    case `${SYSTEM_INFORMATION}_SUCCESS`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        systeminformation: action.result,\n      };\n    }\n    case `${SYSTEM_INFORMATION}_FAIL`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: action.error,\n        },\n      };\n    }\n    case `${DATABASE_INFORMATION}_SUCCESS`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n        databaseinformation: action.result,\n      };\n    }\n    case `${DATABASE_INFORMATION}_FAIL`: {\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: action.error,\n        },\n      };\n    }\n    case `${GET_CONTROLPANEL}_FAIL`:\n      return {\n        ...state,\n        controlpanel: null,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_CONTROLPANELS}_FAIL`:\n      return {\n        ...state,\n        controlpanels: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${POST_CONTROLPANEL}_FAIL`:\n    case `${UPDATE_CONTROLPANEL}_FAIL`:\n    case `${DELETE_CONTROLPANEL}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}