{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-block-divider/src/deprecated/Splitter/Widgets/SimpleColorPicker.jsx\",\n  _this2 = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport loadable from '@loadable/component';\nvar GithubPicker = loadable({\n  resolved: {},\n  chunkName: function chunkName() {\n    return \"react-color-lib-Github\";\n  },\n  isReady: function isReady(props) {\n    var key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: function importAsync() {\n    return import( /* webpackChunkName: \"react-color-lib-Github\" */'react-color/lib/Github');\n  },\n  requireAsync: function requireAsync(props) {\n    var _this = this;\n    var key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(function (resolved) {\n      _this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync: function requireSync(props) {\n    var id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve: function resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-color/lib/Github\");\n    }\n    return eval('require.resolve')(\"react-color/lib/Github\");\n  }\n});\n_c = GithubPicker;\nexport default _s(function (props) {\n  _s();\n  var id = props.id,\n    value = props.value,\n    onChange = props.onChange,\n    available_colors = props.available_colors;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    showPicker = _React$useState2[0],\n    setShowPicker = _React$useState2[1];\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    draggable: false,\n    className: \"simple-color-picker-widget\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(Button.Group, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    color: value,\n    style: {\n      backgroundColor: value\n    },\n    onClick: function onClick() {\n      return setShowPicker(true);\n    },\n    size: \"huge\",\n    title: \"Pick color\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, ''), __jsx(Button, {\n    compact: true,\n    style: {\n      paddingLeft: '8px',\n      paddingRight: '0px'\n    },\n    onClick: function onClick() {\n      return onChange(id, null);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: clearSVG,\n    size: \"18px\",\n    color: \"red\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }))), showPicker ? __jsx(GithubPicker, {\n    width: \"220px\",\n    triangle: \"top\",\n    className: \"color-picker\",\n    colors: available_colors,\n    color: value || '#000',\n    onChangeComplete: function onChangeComplete(value) {\n      setShowPicker(false);\n      onChange(id, value.hex);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }) : ''));\n}, \"PcDCImg70lXrYgxmpw3ewp/jgFc=\");\nvar _c;\n$RefreshReg$(_c, \"GithubPicker\");","map":{"version":3,"names":["React","FormFieldWrapper","Icon","Button","clearSVG","loadable","GithubPicker","props","id","value","onChange","available_colors","useState","showPicker","setShowPicker","backgroundColor","paddingLeft","paddingRight","hex"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-block-divider/src/deprecated/Splitter/Widgets/SimpleColorPicker.jsx"],"sourcesContent":["import React from 'react';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport loadable from '@loadable/component';\nconst GithubPicker = loadable(() => import('react-color/lib/Github'));\n\nexport default (props) => {\n  const { id, value, onChange, available_colors } = props;\n  const [showPicker, setShowPicker] = React.useState(false);\n\n  return (\n    <FormFieldWrapper\n      {...props}\n      draggable={false}\n      className=\"simple-color-picker-widget\"\n    >\n      <div>\n        <Button.Group>\n          <Button\n            color={value}\n            style={{ backgroundColor: value }}\n            onClick={() => setShowPicker(true)}\n            size=\"huge\"\n            title=\"Pick color\"\n          >\n            {''}\n          </Button>\n          <Button\n            compact\n            style={{ paddingLeft: '8px', paddingRight: '0px' }}\n            onClick={() => onChange(id, null)}\n          >\n            <Icon name={clearSVG} size=\"18px\" color=\"red\" />\n          </Button>\n        </Button.Group>\n\n        {showPicker ? (\n          <GithubPicker\n            width=\"220px\"\n            triangle=\"top\"\n            className=\"color-picker\"\n            colors={available_colors}\n            color={value || '#000'}\n            onChangeComplete={(value) => {\n              setShowPicker(false);\n              onChange(id, value.hex);\n            }}\n          />\n        ) : (\n          ''\n        )}\n      </div>\n    </FormFieldWrapper>\n  );\n};\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,IAAI,QAAQ,yBAAyB;AAChE,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,OAAOC,QAAQ,MAAM,8BAA8B;AAEnD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,IAAMC,YAAY,GAAGD,QAAQ;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;EAAA;EAAA,aAAC;IAAA,OAAM,MAAM,kDAAC,wBAAwB,CAAC;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;MAAA;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;MAAA;IAAA;IAAA;EAAA;EAAA;IAAA;MAAA;IAAA;IAAA;EAAA;AAAA,EAAC;AAAC,KAAhEC,YAAY;AAElB,kBAAe,UAACC,KAAK,EAAK;EAAA;EACxB,IAAQC,EAAE,GAAwCD,KAAK,CAA/CC,EAAE;IAAEC,KAAK,GAAiCF,KAAK,CAA3CE,KAAK;IAAEC,QAAQ,GAAuBH,KAAK,CAApCG,QAAQ;IAAEC,gBAAgB,GAAKJ,KAAK,CAA1BI,gBAAgB;EAC7C,sBAAoCX,KAAK,CAACY,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAlDC,UAAU;IAAEC,aAAa;EAEhC,OACE,MAAC,gBAAgB,eACXP,KAAK;IACT,SAAS,EAAE,KAAM;IACjB,SAAS,EAAC,4BAA4B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAEtC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,MAAM,CAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACX,MAAC,MAAM;IACL,KAAK,EAAEE,KAAM;IACb,KAAK,EAAE;MAAEM,eAAe,EAAEN;IAAM,CAAE;IAClC,OAAO,EAAE;MAAA,OAAMK,aAAa,CAAC,IAAI,CAAC;IAAA,CAAC;IACnC,IAAI,EAAC,MAAM;IACX,KAAK,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEjB,EAAE,CACI,EACT,MAAC,MAAM;IACL,OAAO;IACP,KAAK,EAAE;MAAEE,WAAW,EAAE,KAAK;MAAEC,YAAY,EAAE;IAAM,CAAE;IACnD,OAAO,EAAE;MAAA,OAAMP,QAAQ,CAACF,EAAE,EAAE,IAAI,CAAC;IAAA,CAAC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAElC,MAAC,IAAI;IAAC,IAAI,EAAEJ,QAAS;IAAC,IAAI,EAAC,MAAM;IAAC,KAAK,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACzC,CACI,EAEdS,UAAU,GACT,MAAC,YAAY;IACX,KAAK,EAAC,OAAO;IACb,QAAQ,EAAC,KAAK;IACd,SAAS,EAAC,cAAc;IACxB,MAAM,EAAEF,gBAAiB;IACzB,KAAK,EAAEF,KAAK,IAAI,MAAO;IACvB,gBAAgB,EAAE,0BAACA,KAAK,EAAK;MAC3BK,aAAa,CAAC,KAAK,CAAC;MACpBJ,QAAQ,CAACF,EAAE,EAAEC,KAAK,CAACS,GAAG,CAAC;IACzB,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF,GAEF,EACD,CACG,CACW;AAEvB,CAAC;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}