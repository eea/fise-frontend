{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/components/theme/NewsView/NewsItem.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image, Container } from 'semantic-ui-react';\nimport { getBlocksFieldname, getBlocksLayoutFieldname, hasBlocksData } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport { getBasePath } from '@eeacms/volto-forests-theme/helpers';\nconst NewsItem = ({\n  item\n}) => {\n  var _item$blocksLayoutFie, _item$blocksLayoutFie2;\n  const blocksFieldname = getBlocksFieldname(item);\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(item);\n  const prettyDate = time => {\n    let date = new Date(time);\n    const dtf = new Intl.DateTimeFormat('en-GB', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    });\n    const [{\n      value: da\n    },, {\n      value: mo\n    },, {\n      value: ye\n    }] = dtf.formatToParts(date);\n    return `${da} ${mo} ${ye}`;\n  };\n  const prettyDateTime = time => {\n    const dtf = Intl.DateTimeFormat('en-GB', {\n      // weekday: 'short',\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: false,\n      timeZone: 'Europe/Copenhagen',\n      timeZoneName: 'short'\n    });\n    const [{\n      value: da\n    },, {\n      value: mo\n    },, {\n      value: ye\n    },, {\n      value: hh\n    },, {\n      value: mm\n    },, {\n      value: tz\n    },,] = dtf.formatToParts(new Date(time));\n    return `${da} ${mo} ${ye} ${hh}:${mm} ${tz}`;\n  };\n  return __jsx(\"article\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: 'expanded article-body',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"article-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    className: \"article-headline\",\n    title: item.title,\n    to: getBasePath(item['@id']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, item.title)), __jsx(\"div\", {\n    className: 'meta-data',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, item.date && !(item.start && item.end) && __jsx(\"div\", {\n    className: \"text-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"format-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, \"Published: \"), __jsx(\"span\", {\n    className: \"format-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, prettyDate(item.date))), item.start && item.end && __jsx(\"div\", {\n    className: \"event-dates\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"text-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, __jsx(\"span\", {\n    className: \"format-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Starting: \"), __jsx(\"span\", {\n    className: \"format-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, prettyDateTime(item.start))), __jsx(\"div\", {\n    className: \"text-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, __jsx(\"span\", {\n    className: \"format-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Ending: \"), __jsx(\"span\", {\n    className: \"format-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, prettyDateTime(item.end)))), item.location && __jsx(\"div\", {\n    className: \"text-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"format-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, \"Location: \"), __jsx(\"span\", {\n    className: \"format-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, item.location)), item.year && __jsx(\"div\", {\n    className: \"text-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"format-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, \"Year: \"), __jsx(\"span\", {\n    className: \"format-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, item.year)))), item.image && __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, __jsx(Image, {\n    className: \"document-image\",\n    src: item.image.scales.thumb.download,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }))), __jsx(\"div\", {\n    className: \"article-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, item.description && __jsx(\"span\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, item.description), hasBlocksData(item) ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, item === null || item === void 0 ? void 0 : (_item$blocksLayoutFie = item[blocksLayoutFieldname]) === null || _item$blocksLayoutFie === void 0 ? void 0 : (_item$blocksLayoutFie2 = _item$blocksLayoutFie.items) === null || _item$blocksLayoutFie2 === void 0 ? void 0 : _item$blocksLayoutFie2.map(block => {\n    var _config$blocks$blocks, _item$blocksFieldname, _item$blocksFieldname2;\n    const Block = ((_config$blocks$blocks = config.blocks.blocksConfig[(_item$blocksFieldname = item[blocksFieldname]) === null || _item$blocksFieldname === void 0 ? void 0 : (_item$blocksFieldname2 = _item$blocksFieldname[block]) === null || _item$blocksFieldname2 === void 0 ? void 0 : _item$blocksFieldname2['@type']]) === null || _config$blocks$blocks === void 0 ? void 0 : _config$blocks$blocks['view']) || null;\n    return Block !== null && item[blocksFieldname][block]['@type'] !== 'title' ? __jsx(Block, {\n      key: block,\n      id: block,\n      properties: item,\n      data: item[blocksFieldname][block],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }) : '';\n  })) : __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, item.remoteUrl && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"The link address is:\", __jsx(\"a\", {\n    href: item.remoteUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, item.remoteUrl)), item.text && __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: item.text.data.replace(/a href=\"([^\"]*\\.[^\"]*)\"/g, `a href=\"${config.settings.apiPath}$1/download/file\"`)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  })))));\n};\nexport default NewsItem;","map":{"version":3,"names":["React","Link","Image","Container","getBlocksFieldname","getBlocksLayoutFieldname","hasBlocksData","config","getBasePath","NewsItem","item","blocksFieldname","blocksLayoutFieldname","prettyDate","time","date","Date","dtf","Intl","DateTimeFormat","day","month","year","value","da","mo","ye","formatToParts","prettyDateTime","hour","minute","hour12","timeZone","timeZoneName","hh","mm","tz","id","title","start","end","location","image","scales","thumb","download","description","items","map","block","Block","blocks","blocksConfig","remoteUrl","text","__html","data","replace","settings","apiPath"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/components/theme/NewsView/NewsItem.jsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image, Container } from 'semantic-ui-react';\nimport {\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  hasBlocksData,\n} from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport { getBasePath } from '@eeacms/volto-forests-theme/helpers';\n\nconst NewsItem = ({ item }) => {\n  const blocksFieldname = getBlocksFieldname(item);\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(item);\n\n  const prettyDate = (time) => {\n    let date = new Date(time);\n    const dtf = new Intl.DateTimeFormat('en-GB', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n    });\n    const [{ value: da }, , { value: mo }, , { value: ye }] = dtf.formatToParts(\n      date,\n    );\n    return `${da} ${mo} ${ye}`;\n  };\n\n  const prettyDateTime = (time) => {\n    const dtf = Intl.DateTimeFormat('en-GB', {\n      // weekday: 'short',\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: false,\n      timeZone: 'Europe/Copenhagen',\n      timeZoneName: 'short',\n    });\n\n    const [\n      { value: da },\n      ,\n      { value: mo },\n      ,\n      { value: ye },\n      ,\n      { value: hh },\n      ,\n      { value: mm },\n      ,\n      { value: tz },\n      ,\n    ] = dtf.formatToParts(new Date(time));\n\n    return `${da} ${mo} ${ye} ${hh}:${mm} ${tz}`;\n  };\n\n  return (\n    <article key={item.id}>\n      <div className={'expanded article-body'}>\n        <div className=\"article-header\">\n          <div className=\"content\">\n            <Link\n              className=\"article-headline\"\n              title={item.title}\n              to={getBasePath(item['@id'])}\n            >\n              <h3>{item.title}</h3>\n            </Link>\n            <div className={'meta-data'}>\n              {item.date && !(item.start && item.end) && (\n                <div className=\"text-tab\">\n                  <span className=\"format-text\">Published: </span>\n                  <span className=\"format-type\">{prettyDate(item.date)}</span>\n                </div>\n              )}\n              {item.start && item.end && (\n                <div className=\"event-dates\">\n                  <div className=\"text-tab\">\n                    <span className=\"format-text\">Starting: </span>\n                    <span className=\"format-type\">\n                      {prettyDateTime(item.start)}\n                    </span>\n                  </div>\n                  <div className=\"text-tab\">\n                    <span className=\"format-text\">Ending: </span>\n                    <span className=\"format-type\">\n                      {prettyDateTime(item.end)}\n                    </span>\n                  </div>\n                </div>\n              )}\n              {item.location && (\n                <div className=\"text-tab\">\n                  <span className=\"format-text\">Location: </span>\n                  <span className=\"format-type\">{item.location}</span>\n                </div>\n              )}\n              {item.year && (\n                <div className=\"text-tab\">\n                  <span className=\"format-text\">Year: </span>\n                  <span className=\"format-type\">{item.year}</span>\n                </div>\n              )}\n            </div>\n          </div>\n          {item.image && (\n            <div className=\"content\">\n              <Image\n                className=\"document-image\"\n                src={item.image.scales.thumb.download}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"article-content\">\n          {item.description && (\n            <span className=\"description\">{item.description}</span>\n          )}\n          {hasBlocksData(item) ? (\n            <div>\n              {item?.[blocksLayoutFieldname]?.items?.map((block) => {\n                const Block =\n                  config.blocks.blocksConfig[\n                    item[blocksFieldname]?.[block]?.['@type']\n                  ]?.['view'] || null;\n                return Block !== null &&\n                  item[blocksFieldname][block]['@type'] !== 'title' ? (\n                  <Block\n                    key={block}\n                    id={block}\n                    properties={item}\n                    data={item[blocksFieldname][block]}\n                  />\n                ) : (\n                  ''\n                );\n              })}\n            </div>\n          ) : (\n            <Container>\n              {item.remoteUrl && (\n                <span>\n                  The link address is:\n                  <a href={item.remoteUrl}>{item.remoteUrl}</a>\n                </span>\n              )}\n              {item.text && (\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: item.text.data.replace(\n                      /a href=\"([^\"]*\\.[^\"]*)\"/g,\n                      `a href=\"${config.settings.apiPath}$1/download/file\"`,\n                    ),\n                  }}\n                />\n              )}\n            </Container>\n          )}\n        </div>\n      </div>\n    </article>\n  );\n};\n\nexport default NewsItem;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}