{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _map from \"lodash/map\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Contents/ContentsItem.jsx\",\n  _this = this,\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nvar __jsx = React.createElement;\n/**\n * Contents item component.\n * @module components/manage/Contents/ContentsItem\n */\n\nimport React from 'react';\nimport { Button, Table, Menu, Divider } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useIntl, defineMessages, FormattedMessage } from 'react-intl';\nimport { Circle, FormattedDate, Icon, Popup } from '@plone/volto/components';\nimport { getContentIcon } from '@plone/volto/helpers';\nimport moreSVG from '@plone/volto/icons/more.svg';\nimport checkboxUncheckedSVG from '@plone/volto/icons/checkbox-unchecked.svg';\nimport checkboxCheckedSVG from '@plone/volto/icons/checkbox-checked.svg';\nimport cutSVG from '@plone/volto/icons/cut.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport copySVG from '@plone/volto/icons/copy.svg';\nimport showSVG from '@plone/volto/icons/show.svg';\nimport moveUpSVG from '@plone/volto/icons/move-up.svg';\nimport moveDownSVG from '@plone/volto/icons/move-down.svg';\nimport editingSVG from '@plone/volto/icons/editing.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport cx from 'classnames';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nvar messages = defineMessages({\n  \"private\": {\n    \"id\": \"private\",\n    \"defaultMessage\": \"Private\"\n  },\n  published: {\n    \"id\": \"published\",\n    \"defaultMessage\": \"Published\"\n  },\n  intranet: {\n    \"id\": \"intranet\",\n    \"defaultMessage\": \"Intranet\"\n  },\n  draft: {\n    \"id\": \"draft\",\n    \"defaultMessage\": \"Draft\"\n  },\n  no_workflow_state: {\n    \"id\": \"no workflow state\",\n    \"defaultMessage\": \"No workflow state\"\n  },\n  none: {\n    \"id\": \"None\",\n    \"defaultMessage\": \"None\"\n  }\n});\nfunction getColor(string) {\n  switch (string) {\n    case 'private':\n      return '#ed4033';\n    case 'published':\n      return '#007bc1';\n    case 'intranet':\n      return '#51aa55';\n    case 'draft':\n      return '#f6a808';\n    default:\n      return 'grey';\n  }\n}\n\n/**\n * Contents item component class.\n * @function ContentsItemComponent\n * @returns {string} Markup of the component.\n */\nexport var ContentsItemComponent = function ContentsItemComponent(_ref) {\n  _s();\n  var item = _ref.item,\n    selected = _ref.selected,\n    _onClick = _ref.onClick,\n    indexes = _ref.indexes,\n    onCut = _ref.onCut,\n    onCopy = _ref.onCopy,\n    onDelete = _ref.onDelete,\n    onMoveToTop = _ref.onMoveToTop,\n    onMoveToBottom = _ref.onMoveToBottom,\n    connectDragPreview = _ref.connectDragPreview,\n    connectDragSource = _ref.connectDragSource,\n    connectDropTarget = _ref.connectDropTarget,\n    isDragging = _ref.isDragging,\n    order = _ref.order;\n  var intl = useIntl();\n  return connectDropTarget(connectDragPreview(__jsx(\"tr\", {\n    key: item['@id'],\n    className: cx('', {\n      'dragging-row': isDragging\n    }),\n    \"aria-label\": item['@id'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(Table.Cell, {\n    className: cx('', {\n      'dragging-cell': isDragging\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, connectDragSource(__jsx(\"div\", {\n    style: {\n      display: 'inline-block'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    icon: true,\n    basic: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: dragSVG,\n    size: \"20px\",\n    color: \"#878f93\",\n    className: \"content drag handle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }))))), __jsx(Table.Cell, {\n    className: cx('', {\n      'dragging-cell': isDragging\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, selected ? __jsx(Button, {\n    icon: true,\n    basic: true,\n    \"aria-label\": \"Unchecked\",\n    onClick: function onClick(e) {\n      return _onClick(e, item['@id']);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: checkboxCheckedSVG,\n    color: \"#007eb1\",\n    size: \"24px\",\n    className: \"checked\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  })) : __jsx(Button, {\n    icon: true,\n    basic: true,\n    \"aria-label\": \"Checked\",\n    onClick: function onClick(e) {\n      return _onClick(e, item['@id']);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: checkboxUncheckedSVG,\n    color: \"#826a6a\",\n    size: \"24px\",\n    className: \"unchecked\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }))), __jsx(Table.Cell, {\n    className: cx('', {\n      'dragging-cell': isDragging\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    className: \"icon-align-name\",\n    to: \"\".concat(item['@id']).concat(item.is_folderish ? '/contents' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"expire-align\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    name: getContentIcon(item['@type'], item.is_folderish),\n    size: \"20px\",\n    className: \"icon-margin\",\n    color: \"#878f93\",\n    title: item['Type'] || item['@type'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }), ' ', __jsx(\"span\", {\n    title: item.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, \" \", item.title)), item.ExpirationDate !== 'None' && new Date(item.ExpirationDate).getTime() < new Date().getTime() && __jsx(Button, {\n    className: \"button-margin\",\n    size: \"mini\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Expired\",\n    defaultMessage: \"Expired\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  })))), _map(indexes, function (index) {\n    var _item$index$id;\n    return __jsx(Table.Cell, {\n      className: cx('', {\n        'dragging-cell': isDragging\n      }),\n      key: index.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, index.type === 'boolean' && (item[index.id] ? __jsx(FormattedMessage, {\n      id: \"Yes\",\n      defaultMessage: \"Yes\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }) : __jsx(FormattedMessage, {\n      id: \"No\",\n      defaultMessage: \"No\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    })), index.type === 'string' && index.id !== 'review_state' && item[index.id], index.id === 'review_state' && __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, __jsx(Circle, {\n      color: getColor(item[index.id]),\n      size: \"15px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    })), messages[item[index.id]] ? intl.formatMessage(messages[item[index.id]]) : item['review_title'] || item['review_state'] || intl.formatMessage(messages.no_workflow_state)), index.type === 'date' && __jsx(React.Fragment, null, item[index === null || index === void 0 ? void 0 : index.id] && item[index.id] !== 'None' ? __jsx(FormattedDate, {\n      date: item[index.id],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }) : intl.formatMessage(messages.none)), index.type === 'array' && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 15\n      }\n    }, (_item$index$id = item[index.id]) === null || _item$index$id === void 0 ? void 0 : _item$index$id.join(', ')));\n  }), __jsx(Table.Cell, {\n    className: cx('', {\n      'dragging-cell': isDragging\n    }),\n    textAlign: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, __jsx(Popup, {\n    menu: true,\n    position: \"bottom right\",\n    flowing: true,\n    basic: true,\n    on: \"click\",\n    popper: {\n      className: 'dropdown-popup'\n    },\n    trigger: __jsx(Icon, {\n      name: moreSVG,\n      className: \"dropdown-popup-trigger\",\n      size: \"24px\",\n      color: \"#007eb1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, __jsx(Menu, {\n    vertical: true,\n    borderless: true,\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    className: \"item icon-align\",\n    to: \"\".concat(item['@id'], \"/edit\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: editingSVG,\n    color: \"#007eb1\",\n    size: \"24px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }), ' ', __jsx(FormattedMessage, {\n    id: \"Edit\",\n    defaultMessage: \"Edit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  })), __jsx(Link, {\n    className: \"item right-dropdown icon-align\",\n    to: item['@id'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: showSVG,\n    color: \"#007eb1\",\n    size: \"24px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }), ' ', __jsx(FormattedMessage, {\n    id: \"View\",\n    defaultMessage: \"View\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  })), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }), __jsx(Menu.Item, {\n    onClick: onCut,\n    value: item['@id'],\n    className: \"right-dropdown icon-align\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: cutSVG,\n    color: \"#007eb1\",\n    size: \"24px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }), ' ', __jsx(FormattedMessage, {\n    id: \"Cut\",\n    defaultMessage: \"Cut\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  })), __jsx(Menu.Item, {\n    onClick: onCopy,\n    value: item['@id'],\n    className: \"right-dropdown icon-align\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: copySVG,\n    color: \"#007eb1\",\n    size: \"24px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }), ' ', __jsx(FormattedMessage, {\n    id: \"Copy\",\n    defaultMessage: \"Copy\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  })), __jsx(Menu.Item, {\n    onClick: onDelete,\n    value: item['@id'],\n    className: \"right-dropdown icon-align\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: deleteSVG,\n    color: \"#e40166\",\n    size: \"24px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }), ' ', __jsx(FormattedMessage, {\n    id: \"Delete\",\n    defaultMessage: \"Delete\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  })), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }), __jsx(Menu.Item, {\n    onClick: onMoveToTop,\n    value: order,\n    className: \"right-dropdown icon-align\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: moveUpSVG,\n    color: \"#007eb1\",\n    size: \"24px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }), ' ', __jsx(FormattedMessage, {\n    id: \"Move to top of folder\",\n    defaultMessage: \"Move to top of folder\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  })), __jsx(Menu.Item, {\n    onClick: onMoveToBottom,\n    value: order,\n    className: \"right-dropdown icon-align\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    name: moveDownSVG,\n    color: \"#007eb1\",\n    size: \"24px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }), ' ', __jsx(FormattedMessage, {\n    id: \"Move to bottom of folder\",\n    defaultMessage: \"Move to bottom of folder\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  }))))))));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_s(ContentsItemComponent, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = ContentsItemComponent;\nContentsItemComponent.propTypes = {\n  item: PropTypes.shape({\n    '@id': PropTypes.string,\n    title: PropTypes.string,\n    is_folderish: PropTypes.bool,\n    '@type': PropTypes.string\n  }).isRequired,\n  selected: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  indexes: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.string\n  })).isRequired,\n  onCut: PropTypes.func.isRequired,\n  onCopy: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onMoveToTop: PropTypes.func.isRequired,\n  onMoveToBottom: PropTypes.func.isRequired,\n  connectDragPreview: PropTypes.func.isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n  connectDropTarget: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  order: PropTypes.number.isRequired,\n  onOrderItem: PropTypes.func.isRequired\n};\nvar DragDropConnector = function DragDropConnector(props) {\n  _s2();\n  var _props$reactDnd = props.reactDnd,\n    DropTarget = _props$reactDnd.DropTarget,\n    DragSource = _props$reactDnd.DragSource;\n  var DndConnectedContentsItem = React.useMemo(function () {\n    return DropTarget('item', {\n      hover: function hover(props, monitor) {\n        var id = monitor.getItem().id;\n        var dragOrder = monitor.getItem().order;\n        var hoverOrder = props.order;\n        if (dragOrder === hoverOrder) {\n          return;\n        }\n        props.onOrderItem(id, dragOrder, hoverOrder - dragOrder, false);\n        monitor.getItem().order = hoverOrder;\n      },\n      drop: function drop(props, monitor) {\n        var id = monitor.getItem().id;\n        var dragOrder = monitor.getItem().startOrder;\n        var dropOrder = props.order;\n        if (dragOrder === dropOrder) {\n          return;\n        }\n        props.onOrderItem(id, dragOrder, dropOrder - dragOrder, true);\n        monitor.getItem().order = dropOrder;\n      }\n    }, function (connect) {\n      return {\n        connectDropTarget: connect.dropTarget()\n      };\n    })(DragSource('item', {\n      beginDrag: function beginDrag(props) {\n        return {\n          id: props.item['@id'],\n          order: props.order,\n          startOrder: props.order\n        };\n      }\n    }, function (connect, monitor) {\n      return {\n        connectDragSource: connect.dragSource(),\n        connectDragPreview: connect.dragPreview(),\n        isDragging: monitor.isDragging()\n      };\n    })(ContentsItemComponent));\n  }, [DragSource, DropTarget]);\n  return __jsx(DndConnectedContentsItem, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 10\n    }\n  }));\n};\n_s2(DragDropConnector, \"QU49Dd/8PiRoN0uSZ9ShTLalCpo=\");\n_c2 = DragDropConnector;\nexport default injectLazyLibs('reactDnd')(DragDropConnector);\nvar _c, _c2;\n$RefreshReg$(_c, \"ContentsItemComponent\");\n$RefreshReg$(_c2, \"DragDropConnector\");","map":{"version":3,"names":["React","Button","Table","Menu","Divider","Link","PropTypes","useIntl","defineMessages","FormattedMessage","Circle","FormattedDate","Icon","Popup","getContentIcon","moreSVG","checkboxUncheckedSVG","checkboxCheckedSVG","cutSVG","deleteSVG","copySVG","showSVG","moveUpSVG","moveDownSVG","editingSVG","dragSVG","cx","injectLazyLibs","messages","published","intranet","draft","no_workflow_state","none","getColor","string","ContentsItemComponent","item","selected","onClick","indexes","onCut","onCopy","onDelete","onMoveToTop","onMoveToBottom","connectDragPreview","connectDragSource","connectDropTarget","isDragging","order","intl","display","e","is_folderish","title","ExpirationDate","Date","getTime","index","id","type","formatMessage","join","className","propTypes","shape","bool","isRequired","func","arrayOf","number","onOrderItem","DragDropConnector","props","reactDnd","DropTarget","DragSource","DndConnectedContentsItem","useMemo","hover","monitor","getItem","dragOrder","hoverOrder","drop","startOrder","dropOrder","connect","dropTarget","beginDrag","dragSource","dragPreview"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Contents/ContentsItem.jsx"],"sourcesContent":["/**\n * Contents item component.\n * @module components/manage/Contents/ContentsItem\n */\n\nimport React from 'react';\nimport { Button, Table, Menu, Divider } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { map } from 'lodash';\nimport { useIntl, defineMessages, FormattedMessage } from 'react-intl';\nimport { Circle, FormattedDate, Icon, Popup } from '@plone/volto/components';\nimport { getContentIcon } from '@plone/volto/helpers';\nimport moreSVG from '@plone/volto/icons/more.svg';\nimport checkboxUncheckedSVG from '@plone/volto/icons/checkbox-unchecked.svg';\nimport checkboxCheckedSVG from '@plone/volto/icons/checkbox-checked.svg';\nimport cutSVG from '@plone/volto/icons/cut.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport copySVG from '@plone/volto/icons/copy.svg';\nimport showSVG from '@plone/volto/icons/show.svg';\nimport moveUpSVG from '@plone/volto/icons/move-up.svg';\nimport moveDownSVG from '@plone/volto/icons/move-down.svg';\nimport editingSVG from '@plone/volto/icons/editing.svg';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport cx from 'classnames';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nconst messages = defineMessages({\n  private: {\n    id: 'private',\n    defaultMessage: 'Private',\n  },\n  published: {\n    id: 'published',\n    defaultMessage: 'Published',\n  },\n  intranet: {\n    id: 'intranet',\n    defaultMessage: 'Intranet',\n  },\n  draft: {\n    id: 'draft',\n    defaultMessage: 'Draft',\n  },\n  no_workflow_state: {\n    id: 'no workflow state',\n    defaultMessage: 'No workflow state',\n  },\n  none: {\n    id: 'None',\n    defaultMessage: 'None',\n  },\n});\n\nfunction getColor(string) {\n  switch (string) {\n    case 'private':\n      return '#ed4033';\n    case 'published':\n      return '#007bc1';\n    case 'intranet':\n      return '#51aa55';\n    case 'draft':\n      return '#f6a808';\n    default:\n      return 'grey';\n  }\n}\n\n/**\n * Contents item component class.\n * @function ContentsItemComponent\n * @returns {string} Markup of the component.\n */\nexport const ContentsItemComponent = ({\n  item,\n  selected,\n  onClick,\n  indexes,\n  onCut,\n  onCopy,\n  onDelete,\n  onMoveToTop,\n  onMoveToBottom,\n  connectDragPreview,\n  connectDragSource,\n  connectDropTarget,\n  isDragging,\n  order,\n}) => {\n  const intl = useIntl();\n\n  return connectDropTarget(\n    connectDragPreview(\n      <tr\n        key={item['@id']}\n        className={cx('', { 'dragging-row': isDragging })}\n        aria-label={item['@id']}\n      >\n        <Table.Cell className={cx('', { 'dragging-cell': isDragging })}>\n          {connectDragSource(\n            <div style={{ display: 'inline-block' }}>\n              <Button icon basic>\n                <Icon\n                  name={dragSVG}\n                  size=\"20px\"\n                  color=\"#878f93\"\n                  className=\"content drag handle\"\n                />\n              </Button>\n            </div>,\n          )}\n        </Table.Cell>\n        <Table.Cell className={cx('', { 'dragging-cell': isDragging })}>\n          {selected ? (\n            <Button\n              icon\n              basic\n              aria-label=\"Unchecked\"\n              onClick={(e) => onClick(e, item['@id'])}\n            >\n              <Icon\n                name={checkboxCheckedSVG}\n                color=\"#007eb1\"\n                size=\"24px\"\n                className=\"checked\"\n              />\n            </Button>\n          ) : (\n            <Button\n              icon\n              basic\n              aria-label=\"Checked\"\n              onClick={(e) => onClick(e, item['@id'])}\n            >\n              <Icon\n                name={checkboxUncheckedSVG}\n                color=\"#826a6a\"\n                size=\"24px\"\n                className=\"unchecked\"\n              />\n            </Button>\n          )}\n        </Table.Cell>\n        <Table.Cell className={cx('', { 'dragging-cell': isDragging })}>\n          <Link\n            className=\"icon-align-name\"\n            to={`${item['@id']}${item.is_folderish ? '/contents' : ''}`}\n          >\n            <div className=\"expire-align\">\n              <Icon\n                name={getContentIcon(item['@type'], item.is_folderish)}\n                size=\"20px\"\n                className=\"icon-margin\"\n                color=\"#878f93\"\n                title={item['Type'] || item['@type']}\n              />{' '}\n              <span title={item.title}> {item.title}</span>\n            </div>\n            {item.ExpirationDate !== 'None' &&\n              new Date(item.ExpirationDate).getTime() <\n                new Date().getTime() && (\n                <Button className=\"button-margin\" size=\"mini\">\n                  <FormattedMessage id=\"Expired\" defaultMessage=\"Expired\" />\n                </Button>\n              )}\n          </Link>\n        </Table.Cell>\n        {map(indexes, (index) => (\n          <Table.Cell\n            className={cx('', { 'dragging-cell': isDragging })}\n            key={index.id}\n          >\n            {index.type === 'boolean' &&\n              (item[index.id] ? (\n                <FormattedMessage id=\"Yes\" defaultMessage=\"Yes\" />\n              ) : (\n                <FormattedMessage id=\"No\" defaultMessage=\"No\" />\n              ))}\n            {index.type === 'string' &&\n              index.id !== 'review_state' &&\n              item[index.id]}\n            {index.id === 'review_state' && (\n              <div>\n                <span>\n                  <Circle color={getColor(item[index.id])} size=\"15px\" />\n                </span>\n                {messages[item[index.id]]\n                  ? intl.formatMessage(messages[item[index.id]])\n                  : item['review_title'] ||\n                    item['review_state'] ||\n                    intl.formatMessage(messages.no_workflow_state)}\n              </div>\n            )}\n            {index.type === 'date' && (\n              <>\n                {item[index?.id] && item[index.id] !== 'None' ? (\n                  <FormattedDate date={item[index.id]} />\n                ) : (\n                  intl.formatMessage(messages.none)\n                )}\n              </>\n            )}\n            {index.type === 'array' && (\n              <span>{item[index.id]?.join(', ')}</span>\n            )}\n          </Table.Cell>\n        ))}\n        <Table.Cell\n          className={cx('', { 'dragging-cell': isDragging })}\n          textAlign=\"right\"\n        >\n          <Popup\n            menu={true}\n            position=\"bottom right\"\n            flowing={true}\n            basic={true}\n            on=\"click\"\n            popper={{\n              className: 'dropdown-popup',\n            }}\n            trigger={\n              <Icon\n                name={moreSVG}\n                className=\"dropdown-popup-trigger\"\n                size=\"24px\"\n                color=\"#007eb1\"\n              />\n            }\n          >\n            <Menu vertical borderless fluid>\n              <Link className=\"item icon-align\" to={`${item['@id']}/edit`}>\n                <Icon name={editingSVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage id=\"Edit\" defaultMessage=\"Edit\" />\n              </Link>\n              <Link className=\"item right-dropdown icon-align\" to={item['@id']}>\n                <Icon name={showSVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage id=\"View\" defaultMessage=\"View\" />\n              </Link>\n              <Divider />\n              <Menu.Item\n                onClick={onCut}\n                value={item['@id']}\n                className=\"right-dropdown icon-align\"\n              >\n                <Icon name={cutSVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage id=\"Cut\" defaultMessage=\"Cut\" />\n              </Menu.Item>\n              <Menu.Item\n                onClick={onCopy}\n                value={item['@id']}\n                className=\"right-dropdown icon-align\"\n              >\n                <Icon name={copySVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage id=\"Copy\" defaultMessage=\"Copy\" />\n              </Menu.Item>\n              <Menu.Item\n                onClick={onDelete}\n                value={item['@id']}\n                className=\"right-dropdown icon-align\"\n              >\n                <Icon name={deleteSVG} color=\"#e40166\" size=\"24px\" />{' '}\n                <FormattedMessage id=\"Delete\" defaultMessage=\"Delete\" />\n              </Menu.Item>\n              <Divider />\n              <Menu.Item\n                onClick={onMoveToTop}\n                value={order}\n                className=\"right-dropdown icon-align\"\n              >\n                <Icon name={moveUpSVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage\n                  id=\"Move to top of folder\"\n                  defaultMessage=\"Move to top of folder\"\n                />\n              </Menu.Item>\n              <Menu.Item\n                onClick={onMoveToBottom}\n                value={order}\n                className=\"right-dropdown icon-align\"\n              >\n                <Icon name={moveDownSVG} color=\"#007eb1\" size=\"24px\" />{' '}\n                <FormattedMessage\n                  id=\"Move to bottom of folder\"\n                  defaultMessage=\"Move to bottom of folder\"\n                />\n              </Menu.Item>\n            </Menu>\n          </Popup>\n        </Table.Cell>\n      </tr>,\n    ),\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nContentsItemComponent.propTypes = {\n  item: PropTypes.shape({\n    '@id': PropTypes.string,\n    title: PropTypes.string,\n    is_folderish: PropTypes.bool,\n    '@type': PropTypes.string,\n  }).isRequired,\n  selected: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  indexes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n    }),\n  ).isRequired,\n  onCut: PropTypes.func.isRequired,\n  onCopy: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onMoveToTop: PropTypes.func.isRequired,\n  onMoveToBottom: PropTypes.func.isRequired,\n  connectDragPreview: PropTypes.func.isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n  connectDropTarget: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  order: PropTypes.number.isRequired,\n  onOrderItem: PropTypes.func.isRequired,\n};\n\nconst DragDropConnector = (props) => {\n  const { DropTarget, DragSource } = props.reactDnd;\n\n  const DndConnectedContentsItem = React.useMemo(\n    () =>\n      DropTarget(\n        'item',\n        {\n          hover(props, monitor) {\n            const id = monitor.getItem().id;\n            const dragOrder = monitor.getItem().order;\n            const hoverOrder = props.order;\n\n            if (dragOrder === hoverOrder) {\n              return;\n            }\n\n            props.onOrderItem(id, dragOrder, hoverOrder - dragOrder, false);\n\n            monitor.getItem().order = hoverOrder;\n          },\n          drop(props, monitor) {\n            const id = monitor.getItem().id;\n            const dragOrder = monitor.getItem().startOrder;\n            const dropOrder = props.order;\n\n            if (dragOrder === dropOrder) {\n              return;\n            }\n\n            props.onOrderItem(id, dragOrder, dropOrder - dragOrder, true);\n\n            monitor.getItem().order = dropOrder;\n          },\n        },\n        (connect) => ({\n          connectDropTarget: connect.dropTarget(),\n        }),\n      )(\n        DragSource(\n          'item',\n          {\n            beginDrag(props) {\n              return {\n                id: props.item['@id'],\n                order: props.order,\n                startOrder: props.order,\n              };\n            },\n          },\n          (connect, monitor) => ({\n            connectDragSource: connect.dragSource(),\n            connectDragPreview: connect.dragPreview(),\n            isDragging: monitor.isDragging(),\n          }),\n        )(ContentsItemComponent),\n      ),\n    [DragSource, DropTarget],\n  );\n\n  return <DndConnectedContentsItem {...props} />;\n};\n\nexport default injectLazyLibs('reactDnd')(DragDropConnector);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"private","defaultMessage":"Private"},{"id":"published","defaultMessage":"Published"},{"id":"intranet","defaultMessage":"Intranet"},{"id":"draft","defaultMessage":"Draft"},{"id":"no workflow state","defaultMessage":"No workflow state"},{"id":"None","defaultMessage":"None"},{"id":"Expired","defaultMessage":"Expired"},{"id":"Yes","defaultMessage":"Yes"},{"id":"No","defaultMessage":"No"},{"id":"Edit","defaultMessage":"Edit"},{"id":"View","defaultMessage":"View"},{"id":"Cut","defaultMessage":"Cut"},{"id":"Copy","defaultMessage":"Copy"},{"id":"Delete","defaultMessage":"Delete"},{"id":"Move to top of folder","defaultMessage":"Move to top of folder"},{"id":"Move to bottom of folder","defaultMessage":"Move to bottom of folder"}]}},"sourceType":"module","externalDependencies":[]}