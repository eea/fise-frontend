{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/SearchBlockEdit.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { defineMessages } from 'react-intl';\nimport { compose } from 'redux';\nimport { SidebarPortal, BlockDataForm } from '@plone/volto/components';\nimport { addExtensionFieldToSchema } from '@plone/volto/helpers/Extensions/withBlockSchemaEnhancer';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport { SearchBlockViewComponent } from './SearchBlockView';\nimport Schema from './schema';\nimport { withSearch, withQueryString } from './hocs';\nvar messages = defineMessages({\n  template: {\n    \"id\": \"Results template\",\n    \"defaultMessage\": \"Results template\"\n  }\n});\nvar SearchBlockEdit = function SearchBlockEdit(props) {\n  _s();\n  var _config$blocks$blocks, _config$blocks$blocks2;\n  var block = props.block,\n    onChangeBlock = props.onChangeBlock,\n    data = props.data,\n    selected = props.selected,\n    intl = props.intl,\n    onTriggerSearch = props.onTriggerSearch,\n    _props$querystring = props.querystring,\n    querystring = _props$querystring === void 0 ? {} : _props$querystring;\n  var _querystring$sortable = querystring.sortable_indexes,\n    sortable_indexes = _querystring$sortable === void 0 ? {} : _querystring$sortable;\n  var schema = Schema({\n    data: data,\n    intl: intl\n  });\n  schema = addExtensionFieldToSchema({\n    schema: schema,\n    name: 'listingBodyTemplate',\n    items: config.blocks.blocksConfig.listing.variations,\n    intl: intl,\n    title: {\n      id: intl.formatMessage(messages.template)\n    }\n  });\n  var listingVariations = (_config$blocks$blocks = config.blocks.blocksConfig) === null || _config$blocks$blocks === void 0 ? void 0 : (_config$blocks$blocks2 = _config$blocks$blocks.listing) === null || _config$blocks$blocks2 === void 0 ? void 0 : _config$blocks$blocks2.variations;\n  var activeItem = listingVariations.find(function (item) {\n    return item.id === data.listingBodyTemplate;\n  });\n  var listingSchemaEnhancer = activeItem === null || activeItem === void 0 ? void 0 : activeItem.schemaEnhancer;\n  if (listingSchemaEnhancer) schema = listingSchemaEnhancer({\n    schema: _cloneDeep(schema),\n    data: data,\n    intl: intl\n  });\n  schema.properties.sortOnOptions.items = {\n    choices: Object.keys(sortable_indexes).map(function (k) {\n      return [k, sortable_indexes[k].title];\n    })\n  };\n  var _ref = data || {},\n    _ref$query = _ref.query,\n    query = _ref$query === void 0 ? {} : _ref$query;\n  useDeepCompareEffect(function () {\n    onTriggerSearch();\n  }, [query, onTriggerSearch]);\n  return __jsx(React.Fragment, null, __jsx(SearchBlockViewComponent, _extends({}, props, {\n    path: getBaseUrl(props.pathname),\n    mode: \"edit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  })), __jsx(SidebarPortal, {\n    selected: selected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(BlockDataForm, {\n    schema: schema,\n    onChangeField: function onChangeField(id, value) {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, _defineProperty({}, id, value)));\n    },\n    formData: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n};\n_s(SearchBlockEdit, \"9P7jum8Mqo4RIt9ebKErbOvo2AQ=\", false, function () {\n  return [useDeepCompareEffect];\n});\n_c = SearchBlockEdit;\nexport default compose(withQueryString, withSearch())(SearchBlockEdit);\nvar _c;\n$RefreshReg$(_c, \"SearchBlockEdit\");","map":{"version":3,"names":["React","useDeepCompareEffect","defineMessages","compose","SidebarPortal","BlockDataForm","addExtensionFieldToSchema","getBaseUrl","config","SearchBlockViewComponent","Schema","withSearch","withQueryString","messages","template","SearchBlockEdit","props","block","onChangeBlock","data","selected","intl","onTriggerSearch","querystring","sortable_indexes","schema","name","items","blocks","blocksConfig","listing","variations","title","id","formatMessage","listingVariations","activeItem","find","item","listingBodyTemplate","listingSchemaEnhancer","schemaEnhancer","properties","sortOnOptions","choices","Object","keys","map","k","query","pathname","value"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/SearchBlockEdit.jsx"],"sourcesContent":["import React from 'react';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { defineMessages } from 'react-intl';\nimport { compose } from 'redux';\n\nimport { SidebarPortal, BlockDataForm } from '@plone/volto/components';\nimport { addExtensionFieldToSchema } from '@plone/volto/helpers/Extensions/withBlockSchemaEnhancer';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nimport { SearchBlockViewComponent } from './SearchBlockView';\nimport Schema from './schema';\nimport { withSearch, withQueryString } from './hocs';\nimport { cloneDeep } from 'lodash';\n\nconst messages = defineMessages({\n  template: {\n    id: 'Results template',\n    defaultMessage: 'Results template',\n  },\n});\n\nconst SearchBlockEdit = (props) => {\n  const {\n    block,\n    onChangeBlock,\n    data,\n    selected,\n    intl,\n    onTriggerSearch,\n    querystring = {},\n  } = props;\n  const { sortable_indexes = {} } = querystring;\n\n  let schema = Schema({ data, intl });\n\n  schema = addExtensionFieldToSchema({\n    schema,\n    name: 'listingBodyTemplate',\n    items: config.blocks.blocksConfig.listing.variations,\n    intl,\n    title: { id: intl.formatMessage(messages.template) },\n  });\n  const listingVariations = config.blocks.blocksConfig?.listing?.variations;\n  let activeItem = listingVariations.find(\n    (item) => item.id === data.listingBodyTemplate,\n  );\n  const listingSchemaEnhancer = activeItem?.schemaEnhancer;\n  if (listingSchemaEnhancer)\n    schema = listingSchemaEnhancer({\n      schema: cloneDeep(schema),\n      data,\n      intl,\n    });\n  schema.properties.sortOnOptions.items = {\n    choices: Object.keys(sortable_indexes).map((k) => [\n      k,\n      sortable_indexes[k].title,\n    ]),\n  };\n\n  const { query = {} } = data || {};\n  useDeepCompareEffect(() => {\n    onTriggerSearch();\n  }, [query, onTriggerSearch]);\n\n  return (\n    <>\n      <SearchBlockViewComponent\n        {...props}\n        path={getBaseUrl(props.pathname)}\n        mode=\"edit\"\n      />\n      <SidebarPortal selected={selected}>\n        <BlockDataForm\n          schema={schema}\n          onChangeField={(id, value) => {\n            onChangeBlock(block, {\n              ...data,\n              [id]: value,\n            });\n          }}\n          formData={data}\n        />\n      </SidebarPortal>\n    </>\n  );\n};\n\nexport default compose(withQueryString, withSearch())(SearchBlockEdit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Results template","defaultMessage":"Results template"}]}},"sourceType":"module","externalDependencies":[]}