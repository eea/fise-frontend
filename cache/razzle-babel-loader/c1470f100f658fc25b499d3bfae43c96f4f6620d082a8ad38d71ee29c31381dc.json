{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/Collection/BlockView.jsx\";\nvar __jsx = React.createElement;\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport TilesListing from './TilesListing';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { Pagination } from '@plone/volto/components';\nimport { getContentWithData } from '../actions';\nimport { searchContent } from '@plone/volto/actions';\nimport Filter from './Filter';\nimport './style.css';\nfunction filterResults(results = [], filterValue, facetFilter) {\n  if (!(filterValue && facetFilter)) return results;\n  return results.filter(obj => (obj[facetFilter.token] || []).indexOf(filterValue) > -1 ? true : false);\n}\nclass BlockView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: [],\n      all_items: [],\n      filteredResults: [],\n      activeFilter: null,\n      currentPage: 0,\n      pageSize: 15,\n      pageSizes: [15, 30, 50],\n      totalPages: 0\n    };\n    this.getRequestKey = this.getRequestKey.bind(this);\n    this.handleSelectFilter = this.handleSelectFilter.bind(this);\n    this.loadContent = this.loadContent.bind(this);\n    this.onChangePage = this.onChangePage.bind(this);\n    this.onChangePageSize = this.onChangePageSize.bind(this);\n  }\n  handleSelectFilter(ev, {\n    name\n  }) {\n    const filteredResults = filterResults(this.state.all_items, name, this.props.data.facetFilter);\n    this.setState({\n      activeFilter: name,\n      filteredResults,\n      currentPage: 0,\n      results: filteredResults.slice(0, this.state.pageSize),\n      totalPages: Math.ceil(filteredResults.length / this.state.pageSize)\n    });\n  }\n  onChangePage(ev, {\n    value\n  }) {\n    const b_size = this.state.pageSize;\n    const b_start = value * b_size;\n    const end = b_start + b_size;\n    this.setState({\n      currentPage: value,\n      results: this.state.filteredResults.slice(b_start, end)\n    });\n  }\n  onChangePageSize(ev, {\n    value\n  }) {\n    const b_size = value;\n    const b_start = 0;\n    const end = b_start + b_size;\n    this.setState({\n      pageSize: value,\n      currentPage: 0,\n      results: this.state.filteredResults.slice(b_start, end),\n      totalPages: Math.ceil(this.state.filteredResults.length / value)\n    });\n  }\n  getRequestKey() {\n    return `col-content:${this.props.block}`;\n  }\n  loadContent() {\n    const path = this.props.data.collection_url;\n    if (!path) return;\n\n    // NOTE: while this works, we needed a ton of overrides: override for\n    // Collection behavior in eea.restapi and a new action, the\n    // getContentWithData. I think this can be achieved by using the @search\n    // endpoint, reading the collection query property and changing that, to\n    // pass a custom query to the endpoint\n    const url = `${getBaseUrl(path)}`;\n    const options = {\n      metadata_fields: '_all',\n      is_search: 1\n      // b_start: this.state.currentPage * this.state.pageSize,\n      // b_size: this.state.pageSize,\n      // custom_query: this.state.activeFilter\n      //   ? [\n      //       {\n      //         i: this.props.facetFilter,\n      //         o: 'plone.app.querystring.operation.any',\n      //         v: this.state.activeFilter,\n      //       },\n      //     ]\n      //   : [],\n    };\n\n    this.props.getContentWithData(url, null, this.getRequestKey(), options);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.data.collection_url !== this.props.data.collection_url) {\n      return this.loadContent();\n    }\n    const key = this.getRequestKey();\n    if (!prevProps.contentSubrequests[key]) {\n      return;\n    }\n    const prev = prevProps.contentSubrequests[key];\n    const now = this.props.contentSubrequests[key];\n    if (prev.loading && now.loaded) {\n      // now.data.items_total\n      const filteredResults = filterResults(now.data.items, this.state.activeFilter, this.props.data.facetFilter);\n      const b_size = this.state.pageSize;\n      const b_start = this.state.currentPage * b_size;\n      const end = b_start + b_size;\n      this.setState({\n        all_items: now.data.items,\n        filteredResults,\n        results: filteredResults.slice(b_start, end),\n        totalPages: Math.ceil(filteredResults.length / this.state.pageSize)\n      });\n      return;\n    }\n  }\n  componentDidMount() {\n    this.loadContent();\n  }\n  render() {\n    return this.state.results ? __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, __jsx(TilesListing, {\n      items: this.state.results,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }), this.state.totalPages > 1 && __jsx(\"div\", {\n      className: \"tile-listing-pagination\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, __jsx(Pagination, {\n      current: this.state.currentPage,\n      total: this.state.totalPages,\n      pageSize: this.state.pageSize,\n      pageSizes: this.state.pageSizes,\n      onChangePage: this.onChangePage,\n      onChangePageSize: this.onChangePageSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    })), this.props.data.facetFilter ? __jsx(Filter, {\n      handleSelectFilter: this.handleSelectFilter,\n      facetFilter: this.props.data.facetFilter,\n      selectedValue: this.state.activeFilter,\n      results: this.state.all_items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }) : '') : '';\n  }\n}\nBlockView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default connect((state, props) => ({\n  contentSubrequests: state.content.subrequests\n}), {\n  getContentWithData,\n  searchContent\n})(BlockView);","map":{"version":3,"names":["connect","PropTypes","React","Component","TilesListing","getBaseUrl","Pagination","getContentWithData","searchContent","Filter","filterResults","results","filterValue","facetFilter","filter","obj","token","indexOf","BlockView","constructor","props","state","all_items","filteredResults","activeFilter","currentPage","pageSize","pageSizes","totalPages","getRequestKey","bind","handleSelectFilter","loadContent","onChangePage","onChangePageSize","ev","name","data","setState","slice","Math","ceil","length","value","b_size","b_start","end","block","path","collection_url","url","options","metadata_fields","is_search","componentDidUpdate","prevProps","key","contentSubrequests","prev","now","loading","loaded","items","componentDidMount","render","propTypes","objectOf","any","isRequired","content","subrequests"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/Collection/BlockView.jsx"],"sourcesContent":["import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport TilesListing from './TilesListing';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { Pagination } from '@plone/volto/components';\nimport { getContentWithData } from '../actions';\nimport { searchContent } from '@plone/volto/actions';\nimport Filter from './Filter';\n\nimport './style.css';\n\nfunction filterResults(results = [], filterValue, facetFilter) {\n  if (!(filterValue && facetFilter)) return results;\n\n  return results.filter((obj) =>\n    (obj[facetFilter.token] || []).indexOf(filterValue) > -1 ? true : false,\n  );\n}\n\nclass BlockView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      results: [],\n      all_items: [],\n      filteredResults: [],\n      activeFilter: null,\n      currentPage: 0,\n      pageSize: 15,\n      pageSizes: [15, 30, 50],\n      totalPages: 0,\n    };\n\n    this.getRequestKey = this.getRequestKey.bind(this);\n    this.handleSelectFilter = this.handleSelectFilter.bind(this);\n    this.loadContent = this.loadContent.bind(this);\n    this.onChangePage = this.onChangePage.bind(this);\n    this.onChangePageSize = this.onChangePageSize.bind(this);\n  }\n\n  handleSelectFilter(ev, { name }) {\n    const filteredResults = filterResults(\n      this.state.all_items,\n      name,\n      this.props.data.facetFilter,\n    );\n\n    this.setState({\n      activeFilter: name,\n      filteredResults,\n      currentPage: 0,\n      results: filteredResults.slice(0, this.state.pageSize),\n      totalPages: Math.ceil(filteredResults.length / this.state.pageSize),\n    });\n  }\n\n  onChangePage(ev, { value }) {\n    const b_size = this.state.pageSize;\n    const b_start = value * b_size;\n    const end = b_start + b_size;\n\n    this.setState({\n      currentPage: value,\n      results: this.state.filteredResults.slice(b_start, end),\n    });\n  }\n\n  onChangePageSize(ev, { value }) {\n    const b_size = value;\n    const b_start = 0;\n    const end = b_start + b_size;\n    this.setState({\n      pageSize: value,\n      currentPage: 0,\n      results: this.state.filteredResults.slice(b_start, end),\n      totalPages: Math.ceil(this.state.filteredResults.length / value),\n    });\n  }\n\n  getRequestKey() {\n    return `col-content:${this.props.block}`;\n  }\n\n  loadContent() {\n    const path = this.props.data.collection_url;\n    if (!path) return;\n\n    // NOTE: while this works, we needed a ton of overrides: override for\n    // Collection behavior in eea.restapi and a new action, the\n    // getContentWithData. I think this can be achieved by using the @search\n    // endpoint, reading the collection query property and changing that, to\n    // pass a custom query to the endpoint\n    const url = `${getBaseUrl(path)}`;\n    const options = {\n      metadata_fields: '_all',\n      is_search: 1,\n      // b_start: this.state.currentPage * this.state.pageSize,\n      // b_size: this.state.pageSize,\n      // custom_query: this.state.activeFilter\n      //   ? [\n      //       {\n      //         i: this.props.facetFilter,\n      //         o: 'plone.app.querystring.operation.any',\n      //         v: this.state.activeFilter,\n      //       },\n      //     ]\n      //   : [],\n    };\n    this.props.getContentWithData(url, null, this.getRequestKey(), options);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data.collection_url !== this.props.data.collection_url) {\n      return this.loadContent();\n    }\n    const key = this.getRequestKey();\n    if (!prevProps.contentSubrequests[key]) {\n      return;\n    }\n\n    const prev = prevProps.contentSubrequests[key];\n    const now = this.props.contentSubrequests[key];\n\n    if (prev.loading && now.loaded) {\n      // now.data.items_total\n      const filteredResults = filterResults(\n        now.data.items,\n        this.state.activeFilter,\n        this.props.data.facetFilter,\n      );\n      const b_size = this.state.pageSize;\n      const b_start = this.state.currentPage * b_size;\n      const end = b_start + b_size;\n      this.setState({\n        all_items: now.data.items,\n        filteredResults,\n        results: filteredResults.slice(b_start, end),\n        totalPages: Math.ceil(filteredResults.length / this.state.pageSize),\n      });\n      return;\n    }\n  }\n\n  componentDidMount() {\n    this.loadContent();\n  }\n\n  render() {\n    return this.state.results ? (\n      <div>\n        <TilesListing items={this.state.results} />\n        {this.state.totalPages > 1 && (\n          <div className=\"tile-listing-pagination\">\n            <Pagination\n              current={this.state.currentPage}\n              total={this.state.totalPages}\n              pageSize={this.state.pageSize}\n              pageSizes={this.state.pageSizes}\n              onChangePage={this.onChangePage}\n              onChangePageSize={this.onChangePageSize}\n            />\n          </div>\n        )}\n        {this.props.data.facetFilter ? (\n          <Filter\n            handleSelectFilter={this.handleSelectFilter}\n            facetFilter={this.props.data.facetFilter}\n            selectedValue={this.state.activeFilter}\n            results={this.state.all_items}\n          />\n        ) : (\n          ''\n        )}\n      </div>\n    ) : (\n      ''\n    );\n  }\n}\n\nBlockView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default connect(\n  (state, props) => ({\n    contentSubrequests: state.content.subrequests,\n  }),\n  {\n    getContentWithData,\n    searchContent,\n  },\n)(BlockView);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}