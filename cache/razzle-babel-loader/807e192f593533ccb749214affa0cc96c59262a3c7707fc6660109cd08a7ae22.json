{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { GET_CONTENT } from '@plone/volto/constants/ActionTypes';\nimport config from '@plone/volto/registry';\nexport function getProxiedExternalContent(url, request = {}, subrequest = null) {\n  const {\n    corsProxyPath = '/cors-proxy',\n    host,\n    port\n  } = config.settings;\n  const base = __SERVER__ ? `http://${host}:${port}` : `${window.location.protocol}//${window.location.host}`;\n  const path = `${base}${corsProxyPath}/${url}`;\n  return {\n    type: GET_CONTENT,\n    subrequest: subrequest || url,\n    request: _objectSpread(_objectSpread({\n      op: 'get',\n      path\n    }, request), {}, {\n      headers: _objectSpread(_objectSpread({}, request === null || request === void 0 ? void 0 : request.headers), {}, {\n        Authorization: null,\n        Cookie: null\n      })\n    })\n  };\n}","map":{"version":3,"names":["GET_CONTENT","config","getProxiedExternalContent","url","request","subrequest","corsProxyPath","host","port","settings","base","__SERVER__","window","location","protocol","path","type","op","headers","Authorization","Cookie"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-corsproxy/src/actions.js"],"sourcesContent":["import { GET_CONTENT } from '@plone/volto/constants/ActionTypes';\nimport config from '@plone/volto/registry';\n\nexport function getProxiedExternalContent(\n  url,\n  request = {},\n  subrequest = null,\n) {\n  const { corsProxyPath = '/cors-proxy', host, port } = config.settings;\n\n  const base = __SERVER__\n    ? `http://${host}:${port}`\n    : `${window.location.protocol}//${window.location.host}`;\n\n  const path = `${base}${corsProxyPath}/${url}`;\n\n  return {\n    type: GET_CONTENT,\n    subrequest: subrequest || url,\n    request: {\n      op: 'get',\n      path,\n      ...request,\n      headers: { ...request?.headers, Authorization: null, Cookie: null },\n    },\n  };\n}\n"],"mappings":";;;AAAA,SAASA,WAAW,QAAQ,oCAAoC;AAChE,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,OAAO,SAASC,yBAAyB,CACvCC,GAAG,EACHC,OAAO,GAAG,CAAC,CAAC,EACZC,UAAU,GAAG,IAAI,EACjB;EACA,MAAM;IAAEC,aAAa,GAAG,aAAa;IAAEC,IAAI;IAAEC;EAAK,CAAC,GAAGP,MAAM,CAACQ,QAAQ;EAErE,MAAMC,IAAI,GAAGC,UAAU,GAClB,UAASJ,IAAK,IAAGC,IAAK,EAAC,GACvB,GAAEI,MAAM,CAACC,QAAQ,CAACC,QAAS,KAAIF,MAAM,CAACC,QAAQ,CAACN,IAAK,EAAC;EAE1D,MAAMQ,IAAI,GAAI,GAAEL,IAAK,GAAEJ,aAAc,IAAGH,GAAI,EAAC;EAE7C,OAAO;IACLa,IAAI,EAAEhB,WAAW;IACjBK,UAAU,EAAEA,UAAU,IAAIF,GAAG;IAC7BC,OAAO;MACLa,EAAE,EAAE,KAAK;MACTF;IAAI,GACDX,OAAO;MACVc,OAAO,kCAAOd,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEc,OAAO;QAAEC,aAAa,EAAE,IAAI;QAAEC,MAAM,EAAE;MAAI;IAAE;EAEvE,CAAC;AACH"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}