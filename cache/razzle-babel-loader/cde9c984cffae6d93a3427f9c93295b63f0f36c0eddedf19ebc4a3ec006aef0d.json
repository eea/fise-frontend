{"ast":null,"code":"import _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { v4 as uuid } from 'uuid';\nimport { Editor, Transforms } from 'slate';\nimport { IMAGE } from 'volto-slate/constants';\nexport function syncCreateImageBlock(url) {\n  var id = uuid();\n  var block = {\n    '@type': 'image',\n    url: url\n  };\n  return [id, block];\n}\n\n// This function is used by deconstructToVoltoBlocks, so not directly by the\n// <SlateEditor>. File exists here because there's no \"blocks/Image\" folder\nexport var extractImages = function extractImages(editor, pathRef) {\n  var imageNodes = Array.from(Editor.nodes(editor, {\n    at: pathRef.current,\n    match: function match(node) {\n      return node.type === IMAGE;\n    }\n  }));\n  var images = imageNodes.map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      el = _ref2[0],\n      path = _ref2[1];\n    return el;\n  });\n  Transforms.removeNodes(editor, {\n    at: pathRef.current,\n    match: function match(node) {\n      return node.type === IMAGE;\n    }\n  });\n  return images.map(function (el) {\n    return syncCreateImageBlock(el.url);\n  });\n};","map":{"version":3,"names":["v4","uuid","Editor","Transforms","IMAGE","syncCreateImageBlock","url","id","block","extractImages","editor","pathRef","imageNodes","Array","from","nodes","at","current","match","node","type","images","map","el","path","removeNodes"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/editor/plugins/Image/deconstruct.js"],"sourcesContent":["import { v4 as uuid } from 'uuid';\nimport { Editor, Transforms } from 'slate';\nimport { IMAGE } from 'volto-slate/constants';\n\nexport function syncCreateImageBlock(url) {\n  const id = uuid();\n  const block = {\n    '@type': 'image',\n    url,\n  };\n  return [id, block];\n}\n\n// This function is used by deconstructToVoltoBlocks, so not directly by the\n// <SlateEditor>. File exists here because there's no \"blocks/Image\" folder\nexport const extractImages = (editor, pathRef) => {\n  const imageNodes = Array.from(\n    Editor.nodes(editor, {\n      at: pathRef.current,\n      match: (node) => node.type === IMAGE,\n    }),\n  );\n  const images = imageNodes.map(([el, path]) => el);\n  Transforms.removeNodes(editor, {\n    at: pathRef.current,\n    match: (node) => node.type === IMAGE,\n  });\n\n  return images.map((el) => syncCreateImageBlock(el.url));\n};\n"],"mappings":";AAAA,SAASA,EAAE,IAAIC,IAAI,QAAQ,MAAM;AACjC,SAASC,MAAM,EAAEC,UAAU,QAAQ,OAAO;AAC1C,SAASC,KAAK,QAAQ,uBAAuB;AAE7C,OAAO,SAASC,oBAAoB,CAACC,GAAG,EAAE;EACxC,IAAMC,EAAE,GAAGN,IAAI,EAAE;EACjB,IAAMO,KAAK,GAAG;IACZ,OAAO,EAAE,OAAO;IAChBF,GAAG,EAAHA;EACF,CAAC;EACD,OAAO,CAACC,EAAE,EAAEC,KAAK,CAAC;AACpB;;AAEA;AACA;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,MAAM,EAAEC,OAAO,EAAK;EAChD,IAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAC3BZ,MAAM,CAACa,KAAK,CAACL,MAAM,EAAE;IACnBM,EAAE,EAAEL,OAAO,CAACM,OAAO;IACnBC,KAAK,EAAE,eAACC,IAAI;MAAA,OAAKA,IAAI,CAACC,IAAI,KAAKhB,KAAK;IAAA;EACtC,CAAC,CAAC,CACH;EACD,IAAMiB,MAAM,GAAGT,UAAU,CAACU,GAAG,CAAC;IAAA;MAAEC,EAAE;MAAEC,IAAI;IAAA,OAAMD,EAAE;EAAA,EAAC;EACjDpB,UAAU,CAACsB,WAAW,CAACf,MAAM,EAAE;IAC7BM,EAAE,EAAEL,OAAO,CAACM,OAAO;IACnBC,KAAK,EAAE,eAACC,IAAI;MAAA,OAAKA,IAAI,CAACC,IAAI,KAAKhB,KAAK;IAAA;EACtC,CAAC,CAAC;EAEF,OAAOiB,MAAM,CAACC,GAAG,CAAC,UAACC,EAAE;IAAA,OAAKlB,oBAAoB,CAACkB,EAAE,CAACjB,GAAG,CAAC;EAAA,EAAC;AACzD,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}