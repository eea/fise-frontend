{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Blocks/SourcesBlock/View.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport downloadSVG from '@plone/volto/icons/download.svg';\nimport { Icon as VoltoIcon } from '@plone/volto/components';\n// import { Grid } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport { trackLink } from '@eeacms/volto-matomo/utils';\nfunction convertToCSV(objArray, readme) {\n  let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n  let str = '';\n\n  // Add headers\n  for (let key in array[0]) {\n    if (str !== '') str += ',';\n    str += key;\n  }\n  str += '\\r\\n';\n  for (let i = 0; i < array.length; i++) {\n    let line = '';\n    for (let key in array[i]) {\n      if (line !== '') line += ',';\n      line += array[i][key];\n    }\n    str += line + '\\r\\n';\n  }\n  for (let i = 0; i < 5; i++) {\n    str += '\\r\\n';\n  }\n  for (let key in readme) {\n    if (readme[key]) {\n      const path = key.split('/');\n      const title = path[path.length - 1];\n      str += title + ': ' + readme[key] + '\\r\\n';\n    }\n  }\n  return str;\n}\nfunction exportCSVFile(items, fileTitle, readme) {\n  // Convert Object to JSON\n  let jsonObject = JSON.stringify(items);\n  let csv = convertToCSV(jsonObject, readme);\n  let exportedFilenmae = fileTitle + '.csv' || 'export.csv';\n  trackLink({\n    href: window.location.href + exportedFilenmae,\n    linkType: 'download'\n  });\n  let blob = new Blob([csv], {\n    type: 'text/csv;charset=utf-8;'\n  });\n  if (navigator.msSaveBlob) {\n    // IE 10+\n    navigator.msSaveBlob(blob, exportedFilenmae);\n  } else {\n    let link = document.createElement('a');\n    if (link.download !== undefined) {\n      // feature detection\n      // Browsers that support HTML5 download attribute\n      if (document) {\n        let url = URL.createObjectURL(blob);\n        link.setAttribute('href', url);\n        link.setAttribute('download', exportedFilenmae);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n  }\n}\nconst SourceView = props => {\n  const {\n    initialSource,\n    initialSourceLink,\n    multipleSources,\n    providerUrl,\n    className,\n    data_providers,\n    metadata_providers,\n    connectorsDataProviders,\n    download_button\n  } = props;\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, (providerUrl || connectorsDataProviders) && download_button === true && __jsx(VoltoIcon, {\n    className: \"discreet download-button\",\n    title: \"Download data\",\n    onClick: () => {\n      var _data_providers$data3, _Object$keys;\n      const connectorsData = {};\n      connectorsDataProviders && Object.keys(connectorsDataProviders).forEach(key => {\n        var _data_providers$data;\n        if (connectorsDataProviders[key].path && data_providers !== null && data_providers !== void 0 && (_data_providers$data = data_providers.data) !== null && _data_providers$data !== void 0 && _data_providers$data[`${connectorsDataProviders[key].path}/@connector-data`]) {\n          var _data_providers$data2;\n          connectorsData[connectorsDataProviders[key].path] = data_providers === null || data_providers === void 0 ? void 0 : (_data_providers$data2 = data_providers.data) === null || _data_providers$data2 === void 0 ? void 0 : _data_providers$data2[`${connectorsDataProviders[key].path}/@connector-data`];\n        }\n      });\n      const connectorData = data_providers === null || data_providers === void 0 ? void 0 : (_data_providers$data3 = data_providers.data) === null || _data_providers$data3 === void 0 ? void 0 : _data_providers$data3[`${providerUrl}/@connector-data`];\n      if (connectorData && !(providerUrl !== null && providerUrl !== void 0 && providerUrl.includes('.csv'))) {\n        // no need to re-construct csv if already there\n        let array = [];\n        let readme = {};\n        connectorData && Object.entries(connectorData).forEach(([key, items]) => {\n          var _metadata_providers$d, _metadata_providers$d2;\n          readme[key] = metadata_providers === null || metadata_providers === void 0 ? void 0 : (_metadata_providers$d = metadata_providers.data) === null || _metadata_providers$d === void 0 ? void 0 : (_metadata_providers$d2 = _metadata_providers$d[key]) === null || _metadata_providers$d2 === void 0 ? void 0 : _metadata_providers$d2.Readme;\n          items.forEach((item, index) => {\n            if (!array[index]) array[index] = {};\n            array[index][key] = item;\n          });\n        });\n        exportCSVFile(array, providerUrl, readme);\n        return;\n      }\n      const ExternalCSVPath = (_Object$keys = Object.keys(connectorsData)) === null || _Object$keys === void 0 ? void 0 : _Object$keys[0];\n      if (!_isEmpty(connectorsData) && !(ExternalCSVPath !== null && ExternalCSVPath !== void 0 && ExternalCSVPath.includes('.csv'))) {\n        let title = '';\n        let array = [];\n        let readme = {};\n        Object.entries(connectorsData).forEach(([connectorKey, connector]) => {\n          var _metadata_providers$d3, _metadata_providers$d4;\n          title += connectorKey + ' & ';\n          readme[connectorKey] = metadata_providers === null || metadata_providers === void 0 ? void 0 : (_metadata_providers$d3 = metadata_providers.data) === null || _metadata_providers$d3 === void 0 ? void 0 : (_metadata_providers$d4 = _metadata_providers$d3[connectorKey]) === null || _metadata_providers$d4 === void 0 ? void 0 : _metadata_providers$d4.Readme;\n          Object.entries(connector).forEach(([key, items]) => {\n            items.forEach((item, index) => {\n              if (!array[index]) {\n                array[index] = {};\n              }\n              array[index][key] = item;\n            });\n          });\n        });\n        exportCSVFile(array, title.slice(0, -3), readme);\n        return;\n      }\n      if (!providerUrl && !ExternalCSVPath) return;\n      const dlAnchorElem = document.createElement('a');\n      dlAnchorElem.setAttribute('href', `${config.settings.apiPath}${providerUrl || ExternalCSVPath}/@@download`);\n      dlAnchorElem.className = 'piwik_download';\n      dlAnchorElem.click();\n    },\n    name: downloadSVG,\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), initialSource || multipleSources && multipleSources.length ? __jsx(\"div\", {\n    className: \"sources\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"discreet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, (multipleSources === null || multipleSources === void 0 ? void 0 : multipleSources.length) > 1 ? 'Sources: ' : 'Source: '), multipleSources && multipleSources.length ? multipleSources.map(item => item.chart_source_link ? __jsx(\"a\", {\n    key: item.chart_source_link,\n    className: `discreet block_source ${className || ''}`,\n    href: item.chart_source_link,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, item.chart_source) : __jsx(\"div\", {\n    key: item.chart_source,\n    className: \"discreet block_source\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, item.chart_source)) : __jsx(\"a\", {\n    className: \"discreet block_source\",\n    href: initialSourceLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, initialSource)) : '');\n};\nexport default connect((state, props) => ({\n  data_providers: state.data_providers,\n  metadata_providers: state.metadata_providers\n}))(SourceView);","map":{"version":3,"names":["React","connect","downloadSVG","Icon","VoltoIcon","config","trackLink","convertToCSV","objArray","readme","array","JSON","parse","str","key","i","length","line","path","split","title","exportCSVFile","items","fileTitle","jsonObject","stringify","csv","exportedFilenmae","href","window","location","linkType","blob","Blob","type","navigator","msSaveBlob","link","document","createElement","download","undefined","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","SourceView","props","initialSource","initialSourceLink","multipleSources","providerUrl","className","data_providers","metadata_providers","connectorsDataProviders","download_button","connectorsData","Object","keys","forEach","data","connectorData","includes","entries","Readme","item","index","ExternalCSVPath","connectorKey","connector","slice","dlAnchorElem","settings","apiPath","map","chart_source_link","chart_source","state"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Blocks/SourcesBlock/View.jsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport downloadSVG from '@plone/volto/icons/download.svg';\nimport { Icon as VoltoIcon } from '@plone/volto/components';\nimport { isEmpty } from 'lodash';\n// import { Grid } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport { trackLink } from '@eeacms/volto-matomo/utils';\n\nfunction convertToCSV(objArray, readme) {\n  let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n  let str = '';\n\n  // Add headers\n  for (let key in array[0]) {\n    if (str !== '') str += ',';\n    str += key;\n  }\n\n  str += '\\r\\n';\n\n  for (let i = 0; i < array.length; i++) {\n    let line = '';\n    for (let key in array[i]) {\n      if (line !== '') line += ',';\n\n      line += array[i][key];\n    }\n\n    str += line + '\\r\\n';\n  }\n\n  for (let i = 0; i < 5; i++) {\n    str += '\\r\\n';\n  }\n\n  for (let key in readme) {\n    if (readme[key]) {\n      const path = key.split('/');\n      const title = path[path.length - 1];\n      str += title + ': ' + readme[key] + '\\r\\n';\n    }\n  }\n  return str;\n}\n\nfunction exportCSVFile(items, fileTitle, readme) {\n  // Convert Object to JSON\n  let jsonObject = JSON.stringify(items);\n\n  let csv = convertToCSV(jsonObject, readme);\n\n  let exportedFilenmae = fileTitle + '.csv' || 'export.csv';\n  trackLink({\n    href: window.location.href + exportedFilenmae,\n    linkType: 'download',\n  });\n\n  let blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n  if (navigator.msSaveBlob) {\n    // IE 10+\n    navigator.msSaveBlob(blob, exportedFilenmae);\n  } else {\n    let link = document.createElement('a');\n    if (link.download !== undefined) {\n      // feature detection\n      // Browsers that support HTML5 download attribute\n      if (document) {\n        let url = URL.createObjectURL(blob);\n        link.setAttribute('href', url);\n        link.setAttribute('download', exportedFilenmae);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n  }\n}\n\nconst SourceView = (props) => {\n  const {\n    initialSource,\n    initialSourceLink,\n    multipleSources,\n    providerUrl,\n    className,\n    data_providers,\n    metadata_providers,\n    connectorsDataProviders,\n    download_button,\n  } = props;\n  return (\n    <React.Fragment>\n      {(providerUrl || connectorsDataProviders) && download_button === true && (\n        <VoltoIcon\n          className=\"discreet download-button\"\n          title=\"Download data\"\n          onClick={() => {\n            const connectorsData = {};\n            connectorsDataProviders &&\n              Object.keys(connectorsDataProviders).forEach((key) => {\n                if (\n                  connectorsDataProviders[key].path &&\n                  data_providers?.data?.[\n                    `${connectorsDataProviders[key].path}/@connector-data`\n                  ]\n                ) {\n                  connectorsData[connectorsDataProviders[key].path] =\n                    data_providers?.data?.[\n                      `${connectorsDataProviders[key].path}/@connector-data`\n                    ];\n                }\n              });\n            const connectorData =\n              data_providers?.data?.[`${providerUrl}/@connector-data`];\n            if (connectorData && !providerUrl?.includes('.csv')) {\n              // no need to re-construct csv if already there\n              let array = [];\n              let readme = {};\n              connectorData &&\n                Object.entries(connectorData).forEach(([key, items]) => {\n                  readme[key] = metadata_providers?.data?.[key]?.Readme;\n\n                  items.forEach((item, index) => {\n                    if (!array[index]) array[index] = {};\n                    array[index][key] = item;\n                  });\n                });\n\n              exportCSVFile(array, providerUrl, readme);\n              return;\n            }\n            const ExternalCSVPath = Object.keys(connectorsData)?.[0];\n            if (\n              !isEmpty(connectorsData) &&\n              !ExternalCSVPath?.includes('.csv')\n            ) {\n              let title = '';\n              let array = [];\n              let readme = {};\n\n              Object.entries(connectorsData).forEach(\n                ([connectorKey, connector]) => {\n                  title += connectorKey + ' & ';\n                  readme[connectorKey] =\n                    metadata_providers?.data?.[connectorKey]?.Readme;\n                  Object.entries(connector).forEach(([key, items]) => {\n                    items.forEach((item, index) => {\n                      if (!array[index]) {\n                        array[index] = {};\n                      }\n                      array[index][key] = item;\n                    });\n                  });\n                },\n              );\n\n              exportCSVFile(array, title.slice(0, -3), readme);\n              return;\n            }\n\n            if (!providerUrl && !ExternalCSVPath) return;\n\n            const dlAnchorElem = document.createElement('a');\n            dlAnchorElem.setAttribute(\n              'href',\n              `${config.settings.apiPath}${\n                providerUrl || ExternalCSVPath\n              }/@@download`,\n            );\n            dlAnchorElem.className = 'piwik_download';\n            dlAnchorElem.click();\n          }}\n          name={downloadSVG}\n          size=\"20px\"\n        />\n      )}\n\n      {initialSource || (multipleSources && multipleSources.length) ? (\n        <div className=\"sources\">\n          <span className=\"discreet\">\n            {multipleSources?.length > 1 ? 'Sources: ' : 'Source: '}\n          </span>\n          {multipleSources && multipleSources.length ? (\n            multipleSources.map((item) =>\n              item.chart_source_link ? (\n                <a\n                  key={item.chart_source_link}\n                  className={`discreet block_source ${className || ''}`}\n                  href={item.chart_source_link}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {item.chart_source}\n                </a>\n              ) : (\n                <div key={item.chart_source} className=\"discreet block_source\">\n                  {item.chart_source}\n                </div>\n              ),\n            )\n          ) : (\n            <a\n              className=\"discreet block_source\"\n              href={initialSourceLink}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {initialSource}\n            </a>\n          )}\n        </div>\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default connect((state, props) => ({\n  data_providers: state.data_providers,\n  metadata_providers: state.metadata_providers,\n}))(SourceView);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}