{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/FilterList.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { Accordion, Button, Icon } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Icon as VoltoIcon } from '@plone/volto/components';\nimport { resolveExtension } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nconst messages = defineMessages({\n  currentFilters: {\n    \"id\": \"Current filters applied\",\n    \"defaultMessage\": \"Current filters applied\"\n  },\n  clearFilters: {\n    \"id\": \"Clear filters\",\n    \"defaultMessage\": \"Clear filters\"\n  }\n});\n\n/**\n * A list of active filtered values and controls to clear those filters.\n *\n */\nconst FilterList = props => {\n  var _data$facets;\n  const {\n    data = {},\n    facets = {},\n    setFacets,\n    isEditMode\n  } = props;\n  const definedFacets = data.facets || [];\n  const [isOpened, setIsOpened] = React.useState(false);\n  const totalFilters = definedFacets.filter(({\n    field\n  }) => field && Object.keys(facets).includes(field.value) && !_isEmpty(facets[field.value])).length;\n  const {\n    types: facetWidgetTypes\n  } = config.blocks.blocksConfig.search.extensions.facetWidgets;\n  const intl = useIntl();\n  return totalFilters ? __jsx(Accordion, {\n    className: \"filter-listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(Accordion.Title, {\n    className: \"filter-list-header\",\n    active: isOpened,\n    onClick: () => setIsOpened(!isOpened),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"filter-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(VoltoIcon, {\n    name: downSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), intl.formatMessage(messages.currentFilters), \": \", totalFilters), __jsx(Button, {\n    icon: true,\n    basic: true,\n    compact: true,\n    size: \"small\",\n    onClick: e => {\n      e.stopPropagation();\n      !isEditMode && setFacets({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    name: \"trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), intl.formatMessage(messages.clearFilters))), __jsx(Accordion.Content, {\n    className: \"filter-list-content\",\n    active: isOpened,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"filter-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, (_data$facets = data.facets) === null || _data$facets === void 0 ? void 0 : _data$facets.map((facetSettings, i) => {\n    var _facetSettings$field, _facetSettings$title, _facetSettings$field2;\n    const {\n      filterListComponent: FilterListComponent\n    } = resolveExtension('type', facetWidgetTypes, facetSettings);\n    const facet = facetSettings === null || facetSettings === void 0 ? void 0 : (_facetSettings$field = facetSettings.field) === null || _facetSettings$field === void 0 ? void 0 : _facetSettings$field.value;\n    if (!facet) return null;\n    return __jsx(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, Object.keys(facets).includes(facet) && !!facets[facet] && __jsx(\"div\", {\n      className: \"filter-list-group\",\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      className: \"label-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, (_facetSettings$title = facetSettings.title) !== null && _facetSettings$title !== void 0 ? _facetSettings$title : facetSettings === null || facetSettings === void 0 ? void 0 : (_facetSettings$field2 = facetSettings.field) === null || _facetSettings$field2 === void 0 ? void 0 : _facetSettings$field2.label), __jsx(FilterListComponent, _extends({}, props, {\n      facet: facet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }))));\n  })))) : null;\n};\nexport default FilterList;","map":{"version":3,"names":["React","Accordion","Button","Icon","defineMessages","useIntl","VoltoIcon","resolveExtension","config","downSVG","messages","currentFilters","clearFilters","FilterList","props","data","facets","setFacets","isEditMode","definedFacets","isOpened","setIsOpened","useState","totalFilters","filter","field","Object","keys","includes","value","length","types","facetWidgetTypes","blocks","blocksConfig","search","extensions","facetWidgets","intl","formatMessage","e","stopPropagation","map","facetSettings","i","filterListComponent","FilterListComponent","facet","title","label"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/FilterList.jsx"],"sourcesContent":["import React from 'react';\nimport { Accordion, Button, Icon } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { isEmpty } from 'lodash';\n\nimport { Icon as VoltoIcon } from '@plone/volto/components';\nimport { resolveExtension } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nimport downSVG from '@plone/volto/icons/down-key.svg';\n\nconst messages = defineMessages({\n  currentFilters: {\n    id: 'Current filters applied',\n    defaultMessage: 'Current filters applied',\n  },\n  clearFilters: {\n    id: 'Clear filters',\n    defaultMessage: 'Clear filters',\n  },\n});\n\n/**\n * A list of active filtered values and controls to clear those filters.\n *\n */\nconst FilterList = (props) => {\n  const { data = {}, facets = {}, setFacets, isEditMode } = props;\n  const definedFacets = data.facets || [];\n  const [isOpened, setIsOpened] = React.useState(false);\n\n  const totalFilters = definedFacets.filter(\n    ({ field }) =>\n      field &&\n      Object.keys(facets).includes(field.value) &&\n      !isEmpty(facets[field.value]),\n  ).length;\n\n  const {\n    types: facetWidgetTypes,\n  } = config.blocks.blocksConfig.search.extensions.facetWidgets;\n\n  const intl = useIntl();\n\n  return totalFilters ? (\n    <Accordion className=\"filter-listing\">\n      <Accordion.Title\n        className=\"filter-list-header\"\n        active={isOpened}\n        onClick={() => setIsOpened(!isOpened)}\n      >\n        <div className=\"filter-list-title\">\n          <VoltoIcon name={downSVG} size=\"18px\" />\n          {intl.formatMessage(messages.currentFilters)}: {totalFilters}\n        </div>\n        <Button\n          icon\n          basic\n          compact\n          size=\"small\"\n          onClick={(e) => {\n            e.stopPropagation();\n            !isEditMode && setFacets({});\n          }}\n        >\n          <Icon name=\"trash\" />\n          {intl.formatMessage(messages.clearFilters)}\n        </Button>\n      </Accordion.Title>\n      <Accordion.Content className=\"filter-list-content\" active={isOpened}>\n        <div className=\"filter-list\">\n          {data.facets?.map((facetSettings, i) => {\n            const {\n              filterListComponent: FilterListComponent,\n            } = resolveExtension('type', facetWidgetTypes, facetSettings);\n            const facet = facetSettings?.field?.value;\n            if (!facet) return null;\n\n            return (\n              <div key={i}>\n                {Object.keys(facets).includes(facet) && !!facets[facet] && (\n                  <div className=\"filter-list-group\" key={i}>\n                    <span className=\"label-title\">\n                      {facetSettings.title ?? facetSettings?.field?.label}\n                    </span>\n                    <FilterListComponent {...props} facet={facet} />\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </Accordion.Content>\n    </Accordion>\n  ) : null;\n};\n\nexport default FilterList;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Current filters applied","defaultMessage":"Current filters applied"},{"id":"Clear filters","defaultMessage":"Clear filters"}]}},"sourceType":"module","externalDependencies":[]}