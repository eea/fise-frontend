{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/Utils/FormattedValue.jsx\";\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport loadable from '@loadable/component';\nimport cx from 'classnames';\nimport sanitizeHtml from 'sanitize-html';\nimport CountUp from 'react-countup';\nimport { useOnScreen } from '../helpers';\nconst D3 = loadable.lib({\n  resolved: {},\n  chunkName() {\n    return \"d3\";\n  },\n  isReady(props) {\n    var key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: () => import( /* webpackChunkName: \"d3\" */'d3'),\n  requireAsync(props) {\n    var _this = this;\n    var key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(function (resolved) {\n      _this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync(props) {\n    var id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"d3\");\n    }\n    return eval('require.resolve')(\"d3\");\n  }\n});\nconst AnimatedCounter = ({\n  originalValue\n}) => {\n  const ref = useRef();\n  const {\n    entryCount,\n    isIntersecting\n  } = useOnScreen(ref);\n  return __jsx(\"span\", {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, isIntersecting && entryCount === 1 && __jsx(CountUp, {\n    start: 0,\n    formattingFn: num => num.toLocaleString(),\n    duration: 3,\n    end: originalValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), isIntersecting && entryCount > 1 && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, originalValue.toLocaleString(undefined, {\n    maximumFractionDigits: 0\n  })));\n};\nconst FormattedValue = ({\n  textTemplate,\n  specifier,\n  value,\n  collapsed,\n  wrapped = true,\n  animatedCounter\n}) => {\n  const originalValue = value;\n  const animateValue = typeof value === 'number' && animatedCounter;\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(D3, {\n    fallback: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, ({\n    format\n  }) => {\n    if (specifier) {\n      try {\n        const formatter = format ? format(specifier) : v => v;\n        value = formatter(value);\n      } catch {}\n    }\n    if (textTemplate && !animateValue) {\n      value = textTemplate.replace('{}', value);\n    }\n    return wrapped ? __jsx(React.Fragment, null, animateValue ? __jsx(\"span\", {\n      className: cx('formatted-value', collapsed ? 'collapsed' : null),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, textTemplate && textTemplate.split('{}').length > 0 ? textTemplate.split('{}')[0] : '', __jsx(AnimatedCounter, {\n      originalValue: originalValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }), textTemplate && textTemplate.split('{}').length > 0 ? textTemplate.split('{}')[1] : '') : __jsx(\"span\", {\n      className: cx('formatted-value', collapsed ? 'collapsed' : null),\n      dangerouslySetInnerHTML: {\n        __html: sanitizeHtml(value, {\n          allowedAttributes: {\n            span: ['id']\n          }\n        }) || ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    })) : sanitizeHtml(value, {\n      allowedAttributes: {\n        span: ['id']\n      }\n    }) || '';\n  }));\n};\nexport default FormattedValue;","map":{"version":3,"names":["React","useRef","loadable","cx","sanitizeHtml","CountUp","useOnScreen","D3","lib","AnimatedCounter","originalValue","ref","entryCount","isIntersecting","num","toLocaleString","undefined","maximumFractionDigits","FormattedValue","textTemplate","specifier","value","collapsed","wrapped","animatedCounter","animateValue","format","formatter","v","replace","split","length","__html","allowedAttributes","span"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/Utils/FormattedValue.jsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport loadable from '@loadable/component';\nimport cx from 'classnames';\nimport sanitizeHtml from 'sanitize-html';\nimport CountUp from 'react-countup';\n\nimport { useOnScreen } from '../helpers';\n\nconst D3 = loadable.lib(() => import('d3'));\n\nconst AnimatedCounter = ({ originalValue }) => {\n  const ref = useRef();\n  const { entryCount, isIntersecting } = useOnScreen(ref);\n\n  return (\n    <span ref={ref}>\n      {isIntersecting && entryCount === 1 && (\n        <CountUp\n          start={0}\n          formattingFn={(num) => num.toLocaleString()}\n          duration={3}\n          end={originalValue}\n        />\n      )}\n      {isIntersecting && entryCount > 1 && (\n        <span>\n          {originalValue.toLocaleString(undefined, {\n            maximumFractionDigits: 0,\n          })}\n        </span>\n      )}\n    </span>\n  );\n};\n\nconst FormattedValue = ({\n  textTemplate,\n  specifier,\n  value,\n  collapsed,\n  wrapped = true,\n  animatedCounter,\n}) => {\n  const originalValue = value;\n  const animateValue = typeof value === 'number' && animatedCounter;\n  return (\n    <React.Fragment>\n      <D3 fallback={null}>\n        {({ format }) => {\n          if (specifier) {\n            try {\n              const formatter = format ? format(specifier) : (v) => v;\n              value = formatter(value);\n            } catch {}\n          }\n          if (textTemplate && !animateValue) {\n            value = textTemplate.replace('{}', value);\n          }\n\n          return wrapped ? (\n            <>\n              {animateValue ? (\n                <span\n                  className={cx(\n                    'formatted-value',\n                    collapsed ? 'collapsed' : null,\n                  )}\n                >\n                  {textTemplate && textTemplate.split('{}').length > 0\n                    ? textTemplate.split('{}')[0]\n                    : ''}\n                  <AnimatedCounter originalValue={originalValue} />\n                  {textTemplate && textTemplate.split('{}').length > 0\n                    ? textTemplate.split('{}')[1]\n                    : ''}\n                </span>\n              ) : (\n                <span\n                  className={cx(\n                    'formatted-value',\n                    collapsed ? 'collapsed' : null,\n                  )}\n                  dangerouslySetInnerHTML={{\n                    __html:\n                      sanitizeHtml(value, {\n                        allowedAttributes: {\n                          span: ['id'],\n                        },\n                      }) || '',\n                  }}\n                />\n              )}\n            </>\n          ) : (\n            sanitizeHtml(value, {\n              allowedAttributes: {\n                span: ['id'],\n              },\n            }) || ''\n          );\n        }}\n      </D3>\n    </React.Fragment>\n  );\n};\n\nexport default FormattedValue;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}