{"ast":null,"code":"import _remove from \"lodash/remove\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/widgets/BlocksBrowser/BlocksBrowserWidget.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * BlocksBrowserWidget component.\n * @module components/manage/Widgets/BlocksBrowserWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { Label, Popup, Button } from 'semantic-ui-react';\nimport withBlocksBrowser from './BlocksBrowser';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport homeSVG from '@plone/volto/icons/home.svg';\nimport './style.less';\nconst messages = defineMessages({\n  placeholder: {\n    \"id\": \"No items selected\",\n    \"defaultMessage\": \"No items selected\"\n  },\n  edit: {\n    \"id\": \"Edit\",\n    \"defaultMessage\": \"Edit\"\n  },\n  delete: {\n    \"id\": \"Delete\",\n    \"defaultMessage\": \"Delete\"\n  },\n  openObjectBrowser: {\n    \"id\": \"Open object browser\",\n    \"defaultMessage\": \"Open object browser\"\n  }\n});\n\n/**\n * BlocksBrowserWidget component class.\n * @class BlocksBrowserWidget\n * @extends Component\n */\nclass BlocksBrowserWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"removeItem\", item => {\n      let value = [...this.props.value];\n      _remove(value, function (_item) {\n        return _item['id'] === item['id'];\n      });\n      this.props.onChange(this.props.id, value);\n    });\n    _defineProperty(this, \"onChange\", item => {\n      var _this$props$widgetOpt, _this$props$widgetOpt2;\n      let value = [];\n      value = value.filter(item => item != null);\n      const maxSize = ((_this$props$widgetOpt = this.props.widgetOptions) === null || _this$props$widgetOpt === void 0 ? void 0 : (_this$props$widgetOpt2 = _this$props$widgetOpt.pattern_options) === null || _this$props$widgetOpt2 === void 0 ? void 0 : _this$props$widgetOpt2.maximumSelectionSize) || -1;\n      if (maxSize === 1 && value.length === 1) {\n        value = []; //enable replace of selected item with another value, if maxsize is 1\n      }\n\n      let exists = false;\n      let index = -1;\n      value.forEach((_item, _index) => {\n        if (_item['id'] === item['id']) {\n          exists = true;\n          index = _index;\n        }\n      });\n      if (!exists) {\n        // add item\n        // Check if we want to filter the attributes of the selected item\n        let resultantItem = item;\n        if (this.props.selectedItemAttrs) {\n          const allowedItemKeys = [...this.props.selectedItemAttrs,\n          // Add the required attributes for the widget to work\n          'id', 'parentId', 'title', 'type'];\n          resultantItem = Object.keys(item).filter(key => allowedItemKeys.includes(key)).reduce((obj, key) => {\n            obj[key] = item[key];\n            return obj;\n          }, {});\n        }\n        // Add required id field, just in case\n        resultantItem = _objectSpread(_objectSpread({}, resultantItem), {}, {\n          id: item['id']\n        });\n        value.push(resultantItem);\n        this.props.onChange(this.props.id, value);\n      } else {\n        //remove item\n        value.splice(index, 1);\n        this.props.onChange(this.props.id, value);\n      }\n    });\n    _defineProperty(this, \"showObjectBrowser\", ev => {\n      var _this$props$widgetOpt3, _this$props$widgetOpt4, _this$props$widgetOpt5, _this$props$widgetOpt6;\n      ev.preventDefault();\n      this.props.openObjectBrowser({\n        onSelectItem: item => {\n          this.onChange(item);\n        },\n        propDataName: 'value',\n        selectableTypes: (_this$props$widgetOpt3 = this.props.widgetOptions) === null || _this$props$widgetOpt3 === void 0 ? void 0 : (_this$props$widgetOpt4 = _this$props$widgetOpt3.pattern_options) === null || _this$props$widgetOpt4 === void 0 ? void 0 : _this$props$widgetOpt4.selectableTypes,\n        maximumSelectionSize: (_this$props$widgetOpt5 = this.props.widgetOptions) === null || _this$props$widgetOpt5 === void 0 ? void 0 : (_this$props$widgetOpt6 = _this$props$widgetOpt5.pattern_options) === null || _this$props$widgetOpt6 === void 0 ? void 0 : _this$props$widgetOpt6.maximumSelectionSize\n      });\n    });\n    _defineProperty(this, \"handleSelectedItemsRefClick\", e => {\n      if (this.props.isDisabled) {\n        return;\n      }\n      if (e.target.contains(this.selectedItemsRef.current) || e.target.contains(this.placeholderRef.current)) {\n        this.showObjectBrowser(e);\n      }\n    });\n    this.selectedItemsRef = /*#__PURE__*/React.createRef();\n    this.placeholderRef = /*#__PURE__*/React.createRef();\n  }\n  renderLabel(item) {\n    return __jsx(Popup, {\n      key: item['id'],\n      content: __jsx(React.Fragment, null, __jsx(Icon, {\n        name: homeSVG,\n        size: \"18px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }), item['id']),\n      trigger: __jsx(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 18\n        }\n      }, item['title']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    });\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      description,\n      fieldSet,\n      value,\n      onChange,\n      isDisabled\n    } = this.props;\n    let icon = clearSVG;\n    let iconAction = e => {\n      e.preventDefault();\n      onChange(id, []);\n    };\n    let items = value ? value.filter(item => item != null) : [];\n    return __jsx(FormFieldWrapper, _extends({}, this.props, {\n      className: description ? 'help text' : 'text',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }\n    }), __jsx(\"div\", {\n      className: \"objectbrowser-field\",\n      \"aria-labelledby\": `fieldset-${fieldSet}-field-label-${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"selected-values\",\n      onClick: this.handleSelectedItemsRefClick,\n      onKeyDown: this.handleSelectedItemsRefClick,\n      role: \"searchbox\",\n      tabIndex: 0,\n      ref: this.selectedItemsRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, items.map(item => this.renderLabel(item)), items.length === 0 && __jsx(\"div\", {\n      className: \"placeholder\",\n      ref: this.placeholderRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, this.props.intl.formatMessage(messages.placeholder))), __jsx(Button, {\n      \"aria-label\": this.props.intl.formatMessage(messages.openObjectBrowser),\n      onClick: iconAction,\n      className: \"action\",\n      disabled: isDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, __jsx(Icon, {\n      name: icon,\n      size: \"18px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }))));\n  }\n}\n_defineProperty(BlocksBrowserWidget, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.object]),\n  onChange: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired\n});\n_defineProperty(BlocksBrowserWidget, \"defaultProps\", {\n  description: null,\n  required: false,\n  error: [],\n  value: []\n});\nexport default compose(injectIntl, withBlocksBrowser)(BlocksBrowserWidget);","map":{"version":3,"names":["React","Component","PropTypes","compose","Label","Popup","Button","withBlocksBrowser","defineMessages","injectIntl","Icon","FormFieldWrapper","clearSVG","homeSVG","messages","placeholder","edit","delete","openObjectBrowser","BlocksBrowserWidget","constructor","props","item","value","_item","onChange","id","filter","maxSize","widgetOptions","pattern_options","maximumSelectionSize","length","exists","index","forEach","_index","resultantItem","selectedItemAttrs","allowedItemKeys","Object","keys","key","includes","reduce","obj","push","splice","ev","preventDefault","onSelectItem","propDataName","selectableTypes","e","isDisabled","target","contains","selectedItemsRef","current","placeholderRef","showObjectBrowser","createRef","renderLabel","render","description","fieldSet","icon","iconAction","items","handleSelectedItemsRefClick","map","intl","formatMessage","string","isRequired","title","required","bool","error","arrayOf","oneOfType","object","func"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/widgets/BlocksBrowser/BlocksBrowserWidget.jsx"],"sourcesContent":["/**\n * BlocksBrowserWidget component.\n * @module components/manage/Widgets/BlocksBrowserWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { remove } from 'lodash';\n\nimport { Label, Popup, Button } from 'semantic-ui-react';\nimport withBlocksBrowser from './BlocksBrowser';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport FormFieldWrapper from '@plone/volto/components/manage/Widgets/FormFieldWrapper';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport homeSVG from '@plone/volto/icons/home.svg';\n\nimport './style.less';\n\nconst messages = defineMessages({\n  placeholder: {\n    id: 'No items selected',\n    defaultMessage: 'No items selected',\n  },\n  edit: {\n    id: 'Edit',\n    defaultMessage: 'Edit',\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n  openObjectBrowser: {\n    id: 'Open object browser',\n    defaultMessage: 'Open object browser',\n  },\n});\n\n/**\n * BlocksBrowserWidget component class.\n * @class BlocksBrowserWidget\n * @extends Component\n */\nclass BlocksBrowserWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.object),\n      PropTypes.object,\n    ]),\n    onChange: PropTypes.func.isRequired,\n    openObjectBrowser: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: [],\n  };\n\n  constructor(props) {\n    super(props);\n    this.selectedItemsRef = React.createRef();\n    this.placeholderRef = React.createRef();\n  }\n  renderLabel(item) {\n    return (\n      <Popup\n        key={item['id']}\n        content={\n          <>\n            <Icon name={homeSVG} size=\"18px\" />\n            {item['id']}\n          </>\n        }\n        trigger={<Label>{item['title']}</Label>}\n      />\n    );\n  }\n\n  removeItem = (item) => {\n    let value = [...this.props.value];\n    remove(value, function (_item) {\n      return _item['id'] === item['id'];\n    });\n    this.props.onChange(this.props.id, value);\n  };\n\n  onChange = (item) => {\n    let value = [];\n    value = value.filter((item) => item != null);\n    const maxSize =\n      this.props.widgetOptions?.pattern_options?.maximumSelectionSize || -1;\n    if (maxSize === 1 && value.length === 1) {\n      value = []; //enable replace of selected item with another value, if maxsize is 1\n    }\n    let exists = false;\n    let index = -1;\n    value.forEach((_item, _index) => {\n      if (_item['id'] === item['id']) {\n        exists = true;\n        index = _index;\n      }\n    });\n    if (!exists) {\n      // add item\n      // Check if we want to filter the attributes of the selected item\n      let resultantItem = item;\n      if (this.props.selectedItemAttrs) {\n        const allowedItemKeys = [\n          ...this.props.selectedItemAttrs,\n          // Add the required attributes for the widget to work\n          'id',\n          'parentId',\n          'title',\n          'type',\n        ];\n        resultantItem = Object.keys(item)\n          .filter((key) => allowedItemKeys.includes(key))\n          .reduce((obj, key) => {\n            obj[key] = item[key];\n            return obj;\n          }, {});\n      }\n      // Add required id field, just in case\n      resultantItem = { ...resultantItem, id: item['id'] };\n      value.push(resultantItem);\n      this.props.onChange(this.props.id, value);\n    } else {\n      //remove item\n      value.splice(index, 1);\n      this.props.onChange(this.props.id, value);\n    }\n  };\n\n  showObjectBrowser = (ev) => {\n    ev.preventDefault();\n    this.props.openObjectBrowser({\n      onSelectItem: (item) => {\n        this.onChange(item);\n      },\n      propDataName: 'value',\n      selectableTypes: this.props.widgetOptions?.pattern_options\n        ?.selectableTypes,\n      maximumSelectionSize: this.props.widgetOptions?.pattern_options\n        ?.maximumSelectionSize,\n    });\n  };\n\n  handleSelectedItemsRefClick = (e) => {\n    if (this.props.isDisabled) {\n      return;\n    }\n\n    if (\n      e.target.contains(this.selectedItemsRef.current) ||\n      e.target.contains(this.placeholderRef.current)\n    ) {\n      this.showObjectBrowser(e);\n    }\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      description,\n      fieldSet,\n      value,\n      onChange,\n      isDisabled,\n    } = this.props;\n\n    let icon = clearSVG;\n    let iconAction = (e) => {\n      e.preventDefault();\n      onChange(id, []);\n    };\n\n    let items = value ? value.filter((item) => item != null) : [];\n\n    return (\n      <FormFieldWrapper\n        {...this.props}\n        className={description ? 'help text' : 'text'}\n      >\n        <div\n          className=\"objectbrowser-field\"\n          aria-labelledby={`fieldset-${fieldSet}-field-label-${id}`}\n        >\n          <div\n            className=\"selected-values\"\n            onClick={this.handleSelectedItemsRefClick}\n            onKeyDown={this.handleSelectedItemsRefClick}\n            role=\"searchbox\"\n            tabIndex={0}\n            ref={this.selectedItemsRef}\n          >\n            {items.map((item) => this.renderLabel(item))}\n\n            {items.length === 0 && (\n              <div className=\"placeholder\" ref={this.placeholderRef}>\n                {this.props.intl.formatMessage(messages.placeholder)}\n              </div>\n            )}\n          </div>\n\n          <Button\n            aria-label={this.props.intl.formatMessage(\n              messages.openObjectBrowser,\n            )}\n            onClick={iconAction}\n            className=\"action\"\n            disabled={isDisabled}\n          >\n            <Icon name={icon} size=\"18px\" />\n          </Button>\n        </div>\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default compose(injectIntl, withBlocksBrowser)(BlocksBrowserWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"No items selected","defaultMessage":"No items selected"},{"id":"Edit","defaultMessage":"Edit"},{"id":"Delete","defaultMessage":"Delete"},{"id":"Open object browser","defaultMessage":"Open object browser"}]}},"sourceType":"module","externalDependencies":[]}