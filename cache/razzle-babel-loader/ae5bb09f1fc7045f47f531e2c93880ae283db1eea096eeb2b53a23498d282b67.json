{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Controlpanel.jsx\";\nvar __jsx = React.createElement;\n/**\n * Controlpanel component.\n * @module components/manage/Controlpanels/Controlpanel\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Container } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { Form, Icon, Toolbar, Toast } from '@plone/volto/components';\nimport { updateControlpanel, getControlpanel } from '@plone/volto/actions';\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nvar messages = defineMessages({\n  changesSaved: {\n    \"id\": \"Changes saved.\",\n    \"defaultMessage\": \"Changes saved.\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  save: {\n    \"id\": \"Save\",\n    \"defaultMessage\": \"Save\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  info: {\n    \"id\": \"Info\",\n    \"defaultMessage\": \"Info\"\n  }\n});\n\n/**\n * Controlpanel class.\n * @class Controlpanel\n * @extends Component\n */\nvar Controlpanel = /*#__PURE__*/function (_Component) {\n  _inherits(Controlpanel, _Component);\n  var _super = _createSuper(Controlpanel);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Controlpanel\n   */\n  function Controlpanel(props) {\n    var _this;\n    _classCallCheck(this, Controlpanel);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"form\", /*#__PURE__*/React.createRef());\n    _this.onCancel = _this.onCancel.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isClient: false\n    };\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(Controlpanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getControlpanel(this.props.id);\n      this.setState({\n        isClient: true\n      });\n    }\n\n    /**\n     * Component will receive props\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Next properties\n     * @returns {undefined}\n     */\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n        toast.info(__jsx(Toast, {\n          info: true,\n          title: this.props.intl.formatMessage(messages.info),\n          content: this.props.intl.formatMessage(messages.changesSaved),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 9\n          }\n        }));\n      }\n    }\n\n    /**\n     * Submit handler\n     * @method onSubmit\n     * @param {object} data Form data.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(data) {\n      this.props.updateControlpanel(this.props.controlpanel['@id'], data);\n    }\n\n    /**\n     * Cancel handler\n     * @method onCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.props.history.goBack();\n    }\n  }, {\n    key: \"render\",\n    value:\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n    function render() {\n      var _this2 = this;\n      if (this.props.controlpanel) {\n        return __jsx(\"div\", {\n          id: \"page-controlpanel\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 9\n          }\n        }, __jsx(Helmet, {\n          title: this.props.controlpanel.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }\n        }), __jsx(Container, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }\n        }, __jsx(Form, {\n          ref: this.form,\n          title: this.props.controlpanel.title,\n          schema: this.props.controlpanel.schema,\n          formData: this.props.controlpanel.data,\n          onSubmit: this.onSubmit,\n          onCancel: this.onCancel,\n          hideActions: true,\n          loading: this.props.updateRequest.loading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }\n        })), this.state.isClient && __jsx(Portal, {\n          node: document.getElementById('toolbar'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }\n        }, __jsx(Toolbar, {\n          pathname: this.props.pathname,\n          hideDefaultViewButtons: true,\n          inner: __jsx(React.Fragment, null, __jsx(Button, {\n            id: \"toolbar-save\",\n            className: \"save\",\n            \"aria-label\": this.props.intl.formatMessage(messages.save),\n            onClick: function onClick() {\n              return _this2.form.current.onSubmit();\n            },\n            disabled: this.props.updateRequest.loading,\n            loading: this.props.updateRequest.loading,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }\n          }, __jsx(Icon, {\n            name: saveSVG,\n            className: \"circled\",\n            size: \"30px\",\n            title: this.props.intl.formatMessage(messages.save),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 23\n            }\n          })), __jsx(Button, {\n            className: \"cancel\",\n            \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n            onClick: function onClick() {\n              return _this2.onCancel();\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 21\n            }\n          }, __jsx(Icon, {\n            name: clearSVG,\n            className: \"circled\",\n            size: \"30px\",\n            title: this.props.intl.formatMessage(messages.cancel),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 23\n            }\n          }))),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }\n        })));\n      }\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n  return Controlpanel;\n}(Component);\n_defineProperty(Controlpanel, \"propTypes\", {\n  updateControlpanel: PropTypes.func.isRequired,\n  getControlpanel: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  updateRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  controlpanel: PropTypes.shape({\n    '@id': PropTypes.string,\n    data: PropTypes.object,\n    schema: PropTypes.object,\n    title: PropTypes.string\n  }),\n  pathname: PropTypes.string.isRequired\n});\n_defineProperty(Controlpanel, \"defaultProps\", {\n  controlpanel: null\n});\nexport default compose(injectIntl, connect(function (state, props) {\n  return {\n    controlpanel: state.controlpanels.controlpanel,\n    updateRequest: state.controlpanels.update,\n    id: props.match.params.id,\n    pathname: props.location.pathname\n  };\n}, {\n  updateControlpanel: updateControlpanel,\n  getControlpanel: getControlpanel\n}), withRouter)(Controlpanel);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","withRouter","Helmet","Portal","Button","Container","defineMessages","injectIntl","toast","Form","Icon","Toolbar","Toast","updateControlpanel","getControlpanel","saveSVG","clearSVG","messages","changesSaved","back","save","cancel","info","Controlpanel","props","createRef","onCancel","bind","onSubmit","state","isClient","id","setState","nextProps","updateRequest","loading","loaded","intl","formatMessage","data","controlpanel","history","goBack","title","form","schema","document","getElementById","pathname","current","func","isRequired","string","shape","bool","object","controlpanels","update","match","params","location"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Controlpanel.jsx"],"sourcesContent":["/**\n * Controlpanel component.\n * @module components/manage/Controlpanels/Controlpanel\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Container } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\n\nimport { Form, Icon, Toolbar, Toast } from '@plone/volto/components';\nimport { updateControlpanel, getControlpanel } from '@plone/volto/actions';\n\nimport saveSVG from '@plone/volto/icons/save.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  changesSaved: {\n    id: 'Changes saved.',\n    defaultMessage: 'Changes saved.',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  info: {\n    id: 'Info',\n    defaultMessage: 'Info',\n  },\n});\n\n/**\n * Controlpanel class.\n * @class Controlpanel\n * @extends Component\n */\nclass Controlpanel extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateControlpanel: PropTypes.func.isRequired,\n    getControlpanel: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    updateRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    controlpanel: PropTypes.shape({\n      '@id': PropTypes.string,\n      data: PropTypes.object,\n      schema: PropTypes.object,\n      title: PropTypes.string,\n    }),\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    controlpanel: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Controlpanel\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlpanel(this.props.id);\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      toast.info(\n        <Toast\n          info\n          title={this.props.intl.formatMessage(messages.info)}\n          content={this.props.intl.formatMessage(messages.changesSaved)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} data Form data.\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    this.props.updateControlpanel(this.props.controlpanel['@id'], data);\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.goBack();\n  }\n  form = React.createRef();\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (this.props.controlpanel) {\n      return (\n        <div id=\"page-controlpanel\">\n          <Helmet title={this.props.controlpanel.title} />\n          <Container>\n            <Form\n              ref={this.form}\n              title={this.props.controlpanel.title}\n              schema={this.props.controlpanel.schema}\n              formData={this.props.controlpanel.data}\n              onSubmit={this.onSubmit}\n              onCancel={this.onCancel}\n              hideActions\n              loading={this.props.updateRequest.loading}\n            />\n          </Container>\n          {this.state.isClient && (\n            <Portal node={document.getElementById('toolbar')}>\n              <Toolbar\n                pathname={this.props.pathname}\n                hideDefaultViewButtons\n                inner={\n                  <>\n                    <Button\n                      id=\"toolbar-save\"\n                      className=\"save\"\n                      aria-label={this.props.intl.formatMessage(messages.save)}\n                      onClick={() => this.form.current.onSubmit()}\n                      disabled={this.props.updateRequest.loading}\n                      loading={this.props.updateRequest.loading}\n                    >\n                      <Icon\n                        name={saveSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.save)}\n                      />\n                    </Button>\n                    <Button\n                      className=\"cancel\"\n                      aria-label={this.props.intl.formatMessage(\n                        messages.cancel,\n                      )}\n                      onClick={() => this.onCancel()}\n                    >\n                      <Icon\n                        name={clearSVG}\n                        className=\"circled\"\n                        size=\"30px\"\n                        title={this.props.intl.formatMessage(messages.cancel)}\n                      />\n                    </Button>\n                  </>\n                }\n              />\n            </Portal>\n          )}\n        </div>\n      );\n    }\n    return <div />;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      controlpanel: state.controlpanels.controlpanel,\n      updateRequest: state.controlpanels.update,\n      id: props.match.params.id,\n      pathname: props.location.pathname,\n    }),\n    { updateControlpanel, getControlpanel },\n  ),\n  withRouter,\n)(Controlpanel);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Changes saved.","defaultMessage":"Changes saved."},{"id":"Back","defaultMessage":"Back"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Info","defaultMessage":"Info"}]}},"sourceType":"module","externalDependencies":[]}