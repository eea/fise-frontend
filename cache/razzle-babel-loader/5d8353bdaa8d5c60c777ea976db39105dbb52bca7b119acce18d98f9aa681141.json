{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { addStyling } from '@plone/volto/helpers';\nimport UniversalCard from '@eeacms/volto-listing-block/components/UniversalCard/UniversalCard';\nimport { composeSchema } from '@eeacms/volto-listing-block/schema-utils';\nimport Carousel from './layout-templates/Carousel';\nimport Gallery from './layout-templates/Gallery';\nimport Listing from './layout-templates/Listing';\nimport { setBasicStylingSchema, setCardStylingSchema, setCardModelSchema, setItemModelSchema } from './schema';\nimport { DefaultCardLayout, ImageCardLayout, LeftImageCardLayout, RightImageCardLayout } from './item-templates/CardTemplates';\nimport { DefaultItemLayout } from './item-templates/ItemTemplates';\nimport { SearchItemLayout } from './item-templates/SearchItemTemplate';\nvar applyConfig = function applyConfig(config) {\n  var _config$settings$date;\n  // moment date locale. See https://momentjs.com/ - Multiple Locale Support\n  config.settings.dateLocale = (_config$settings$date = config.settings.dateLocale) !== null && _config$settings$date !== void 0 ? _config$settings$date : 'en';\n  var listing = config.blocks.blocksConfig.listing;\n  var blacklist = ['summary'];\n  listing.schemaEnhancer = moveQueryToFieldset(listing.schemaEnhancer);\n\n  // The split of responsibilities is as follows:\n  // the Listing block variation takes care of the Layout responsibility (how\n  // the items are listed)\n  // The variation takes care of how the individual item is displayed.\n  // With our own variations being based on the UniversalCard, we have another\n  // level of control on how each item is displayed.\n\n  listing.variations = [].concat(_toConsumableArray(listing.variations.filter(function (_ref) {\n    var id = _ref.id;\n    return blacklist.indexOf(id) === -1;\n  })), [{\n    id: 'summary',\n    isDefault: false,\n    title: 'Listing',\n    template: Listing,\n    schemaEnhancer: composeSchema(addStyling, setBasicStylingSchema, UniversalCard.schemaEnhancer)\n  }, {\n    id: 'cardsCarousel',\n    isDefault: false,\n    title: 'Carousel',\n    template: Carousel,\n    schemaEnhancer: composeSchema(addStyling, setBasicStylingSchema, UniversalCard.schemaEnhancer, Carousel.schemaEnhancer)\n  }, {\n    id: 'cardsGallery',\n    //  'customCardsGalleryVariationId'\n    isDefault: false,\n    title: 'Gallery',\n    template: Gallery,\n    schemaEnhancer: composeSchema(addStyling, setBasicStylingSchema, UniversalCard.schemaEnhancer, Gallery.schemaEnhancer)\n  }]);\n  listing.extensions = _objectSpread(_objectSpread({}, listing.extensions), {}, {\n    cardTemplates: [{\n      id: 'card',\n      isDefault: true,\n      title: 'Card (default)',\n      template: DefaultCardLayout,\n      schemaEnhancer: composeSchema(setCardModelSchema, setCardStylingSchema)\n    }, {\n      id: 'imageCard',\n      title: 'Image Card',\n      template: ImageCardLayout,\n      schemaEnhancer: composeSchema(setCardModelSchema, setCardStylingSchema)\n    }, {\n      id: 'imageOnLeft',\n      title: 'Image on left',\n      template: LeftImageCardLayout,\n      schemaEnhancer: composeSchema(setCardModelSchema, setCardStylingSchema)\n    }, {\n      id: 'imageOnRight',\n      title: 'Image on right',\n      template: RightImageCardLayout,\n      schemaEnhancer: composeSchema(setCardModelSchema, setCardStylingSchema)\n    }, {\n      id: 'item',\n      isDefault: true,\n      title: 'Listing Item',\n      template: DefaultItemLayout,\n      schemaEnhancer: composeSchema(setItemModelSchema, setCardStylingSchema)\n    }, {\n      id: 'searchItem',\n      isDefault: false,\n      title: 'Search Item',\n      template: SearchItemLayout,\n      schemaEnhancer: composeSchema(setItemModelSchema, setCardStylingSchema)\n    }]\n  });\n  return config;\n};\nexport default applyConfig;\nvar moveQueryToFieldset = function moveQueryToFieldset(schemaEnhancer) {\n  return function (props) {\n    // NOTE: this is a schema finalizer\n    var schema = schemaEnhancer ? schemaEnhancer(props) : props.schema;\n\n    // move querystring to its own fieldset;\n    schema.fieldsets[0].fields = schema.fieldsets[0].fields.filter(function (f) {\n      return f !== 'querystring';\n    });\n    schema.fieldsets.splice(1, 0, {\n      id: 'querystring',\n      title: 'Query',\n      fields: ['querystring']\n    });\n    return schema;\n  };\n};","map":{"version":3,"names":["addStyling","UniversalCard","composeSchema","Carousel","Gallery","Listing","setBasicStylingSchema","setCardStylingSchema","setCardModelSchema","setItemModelSchema","DefaultCardLayout","ImageCardLayout","LeftImageCardLayout","RightImageCardLayout","DefaultItemLayout","SearchItemLayout","applyConfig","config","settings","dateLocale","listing","blocks","blocksConfig","blacklist","schemaEnhancer","moveQueryToFieldset","variations","filter","id","indexOf","isDefault","title","template","extensions","cardTemplates","props","schema","fieldsets","fields","f","splice"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-listing-block/src/blocks/Listing/index.js"],"sourcesContent":["import { addStyling } from '@plone/volto/helpers';\nimport UniversalCard from '@eeacms/volto-listing-block/components/UniversalCard/UniversalCard';\nimport { composeSchema } from '@eeacms/volto-listing-block/schema-utils';\n\nimport Carousel from './layout-templates/Carousel';\nimport Gallery from './layout-templates/Gallery';\nimport Listing from './layout-templates/Listing';\nimport {\n  setBasicStylingSchema,\n  setCardStylingSchema,\n  setCardModelSchema,\n  setItemModelSchema,\n} from './schema';\n\nimport {\n  DefaultCardLayout,\n  ImageCardLayout,\n  LeftImageCardLayout,\n  RightImageCardLayout,\n} from './item-templates/CardTemplates';\n\nimport { DefaultItemLayout } from './item-templates/ItemTemplates';\nimport { SearchItemLayout } from './item-templates/SearchItemTemplate';\n\nconst applyConfig = (config) => {\n  // moment date locale. See https://momentjs.com/ - Multiple Locale Support\n  config.settings.dateLocale = config.settings.dateLocale ?? 'en';\n  const { listing } = config.blocks.blocksConfig;\n\n  const blacklist = ['summary'];\n\n  listing.schemaEnhancer = moveQueryToFieldset(listing.schemaEnhancer);\n\n  // The split of responsibilities is as follows:\n  // the Listing block variation takes care of the Layout responsibility (how\n  // the items are listed)\n  // The variation takes care of how the individual item is displayed.\n  // With our own variations being based on the UniversalCard, we have another\n  // level of control on how each item is displayed.\n\n  listing.variations = [\n    ...listing.variations.filter(({ id }) => blacklist.indexOf(id) === -1),\n    {\n      id: 'summary',\n      isDefault: false,\n      title: 'Listing',\n      template: Listing,\n      schemaEnhancer: composeSchema(\n        addStyling,\n        setBasicStylingSchema,\n        UniversalCard.schemaEnhancer,\n      ),\n    },\n    {\n      id: 'cardsCarousel',\n      isDefault: false,\n      title: 'Carousel',\n      template: Carousel,\n      schemaEnhancer: composeSchema(\n        addStyling,\n        setBasicStylingSchema,\n        UniversalCard.schemaEnhancer,\n        Carousel.schemaEnhancer,\n      ),\n    },\n    {\n      id: 'cardsGallery', //  'customCardsGalleryVariationId'\n      isDefault: false,\n      title: 'Gallery',\n      template: Gallery,\n      schemaEnhancer: composeSchema(\n        addStyling,\n        setBasicStylingSchema,\n        UniversalCard.schemaEnhancer,\n        Gallery.schemaEnhancer,\n      ),\n    },\n  ];\n\n  listing.extensions = {\n    ...listing.extensions,\n    cardTemplates: [\n      {\n        id: 'card',\n        isDefault: true,\n        title: 'Card (default)',\n        template: DefaultCardLayout,\n        schemaEnhancer: composeSchema(setCardModelSchema, setCardStylingSchema),\n      },\n      {\n        id: 'imageCard',\n        title: 'Image Card',\n        template: ImageCardLayout,\n        schemaEnhancer: composeSchema(setCardModelSchema, setCardStylingSchema),\n      },\n      {\n        id: 'imageOnLeft',\n        title: 'Image on left',\n        template: LeftImageCardLayout,\n        schemaEnhancer: composeSchema(setCardModelSchema, setCardStylingSchema),\n      },\n      {\n        id: 'imageOnRight',\n        title: 'Image on right',\n        template: RightImageCardLayout,\n        schemaEnhancer: composeSchema(setCardModelSchema, setCardStylingSchema),\n      },\n      {\n        id: 'item',\n        isDefault: true,\n        title: 'Listing Item',\n        template: DefaultItemLayout,\n        schemaEnhancer: composeSchema(setItemModelSchema, setCardStylingSchema),\n      },\n      {\n        id: 'searchItem',\n        isDefault: false,\n        title: 'Search Item',\n        template: SearchItemLayout,\n        schemaEnhancer: composeSchema(setItemModelSchema, setCardStylingSchema),\n      },\n    ],\n  };\n\n  return config;\n};\n\nexport default applyConfig;\n\nconst moveQueryToFieldset = (schemaEnhancer) => (props) => {\n  // NOTE: this is a schema finalizer\n  const schema = schemaEnhancer ? schemaEnhancer(props) : props.schema;\n\n  // move querystring to its own fieldset;\n  schema.fieldsets[0].fields = schema.fieldsets[0].fields.filter(\n    (f) => f !== 'querystring',\n  );\n  schema.fieldsets.splice(1, 0, {\n    id: 'querystring',\n    title: 'Query',\n    fields: ['querystring'],\n  });\n\n  return schema;\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}