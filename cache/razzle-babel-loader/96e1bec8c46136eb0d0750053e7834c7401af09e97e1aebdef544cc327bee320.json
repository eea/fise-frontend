{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar SourceSchema = {\n  title: 'Source',\n  fieldsets: [{\n    id: 'default',\n    title: 'Default',\n    fields: ['source', 'source_link']\n  }],\n  properties: {\n    source: {\n      type: 'string',\n      title: 'Source'\n    },\n    source_link: {\n      type: 'string',\n      title: 'Link'\n    }\n  },\n  required: ['source']\n};\nvar getSchema = function getSchema(props, config) {\n  var _config$blocks$blocks, _templateSchema$field, _templateSchema$field2;\n  var templateSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var blocksConfig = ((_config$blocks$blocks = config.blocks.blocksConfig.custom_connected_block) === null || _config$blocks$blocks === void 0 ? void 0 : _config$blocks$blocks.blocks) || {};\n  var blocks = Object.keys(blocksConfig).map(function (block) {\n    return [block, blocksConfig[block].title || block];\n  });\n  var defaultFieldset = ((_templateSchema$field = templateSchema.fieldsets) === null || _templateSchema$field === void 0 ? void 0 : _templateSchema$field.filter(function (fieldset) {\n    return fieldset.id === 'default';\n  })[0]) || {};\n  return {\n    title: templateSchema.title || 'Edit custom connected block',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['provider_url', 'allowedParams', 'placeholder', 'type'].concat(_toConsumableArray((defaultFieldset === null || defaultFieldset === void 0 ? void 0 : defaultFieldset.fields) || []))\n    }].concat(_toConsumableArray(((_templateSchema$field2 = templateSchema.fieldsets) === null || _templateSchema$field2 === void 0 ? void 0 : _templateSchema$field2.filter(function (fieldset) {\n      return fieldset.id !== 'default';\n    })) || []), [{\n      id: 'sources',\n      title: 'Sources',\n      fields: ['sources']\n    }]),\n    properties: _objectSpread({\n      provider_url: {\n        title: 'Data provider',\n        widget: 'object_by_path'\n      },\n      allowedParams: {\n        title: 'Allowed params',\n        type: 'array',\n        items: {\n          choices: []\n        }\n      },\n      placeholder: {\n        title: 'Placeholder',\n        widget: 'textarea'\n      },\n      type: {\n        title: 'Select block type',\n        type: 'array',\n        choices: _toConsumableArray(blocks)\n      },\n      sources: {\n        widget: 'object_list',\n        title: 'Sources',\n        schema: SourceSchema\n      }\n    }, templateSchema.properties || {}),\n    required: ['url'].concat(_toConsumableArray(templateSchema.required || []))\n  };\n};\nexport default getSchema;","map":{"version":3,"names":["SourceSchema","title","fieldsets","id","fields","properties","source","type","source_link","required","getSchema","props","config","templateSchema","blocksConfig","blocks","custom_connected_block","Object","keys","map","block","defaultFieldset","filter","fieldset","provider_url","widget","allowedParams","items","choices","placeholder","sources","schema"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Blocks/CustomConnectedBlock/schema.js"],"sourcesContent":["const SourceSchema = {\n  title: 'Source',\n\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: ['source', 'source_link'],\n    },\n  ],\n\n  properties: {\n    source: {\n      type: 'string',\n      title: 'Source',\n    },\n    source_link: {\n      type: 'string',\n      title: 'Link',\n    },\n  },\n\n  required: ['source'],\n};\n\nconst getSchema = (props, config, templateSchema = {}) => {\n  const blocksConfig =\n    config.blocks.blocksConfig.custom_connected_block?.blocks || {};\n  const blocks = Object.keys(blocksConfig).map((block) => [\n    block,\n    blocksConfig[block].title || block,\n  ]);\n  const defaultFieldset =\n    templateSchema.fieldsets?.filter(\n      (fieldset) => fieldset.id === 'default',\n    )[0] || {};\n\n  return {\n    title: templateSchema.title || 'Edit custom connected block',\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: [\n          'provider_url',\n          'allowedParams',\n          'placeholder',\n          'type',\n          ...(defaultFieldset?.fields || []),\n        ],\n      },\n      ...(templateSchema.fieldsets?.filter(\n        (fieldset) => fieldset.id !== 'default',\n      ) || []),\n      {\n        id: 'sources',\n        title: 'Sources',\n        fields: ['sources'],\n      },\n    ],\n\n    properties: {\n      provider_url: {\n        title: 'Data provider',\n        widget: 'object_by_path',\n      },\n      allowedParams: {\n        title: 'Allowed params',\n        type: 'array',\n        items: {\n          choices: [],\n        },\n      },\n      placeholder: {\n        title: 'Placeholder',\n        widget: 'textarea',\n      },\n      type: {\n        title: 'Select block type',\n        type: 'array',\n        choices: [...blocks],\n      },\n      sources: {\n        widget: 'object_list',\n        title: 'Sources',\n        schema: SourceSchema,\n      },\n      ...(templateSchema.properties || {}),\n    },\n\n    required: ['url', ...(templateSchema.required || [])],\n  };\n};\n\nexport default getSchema;\n"],"mappings":";;AAAA,IAAMA,YAAY,GAAG;EACnBC,KAAK,EAAE,QAAQ;EAEfC,SAAS,EAAE,CACT;IACEC,EAAE,EAAE,SAAS;IACbF,KAAK,EAAE,SAAS;IAChBG,MAAM,EAAE,CAAC,QAAQ,EAAE,aAAa;EAClC,CAAC,CACF;EAEDC,UAAU,EAAE;IACVC,MAAM,EAAE;MACNC,IAAI,EAAE,QAAQ;MACdN,KAAK,EAAE;IACT,CAAC;IACDO,WAAW,EAAE;MACXD,IAAI,EAAE,QAAQ;MACdN,KAAK,EAAE;IACT;EACF,CAAC;EAEDQ,QAAQ,EAAE,CAAC,QAAQ;AACrB,CAAC;AAED,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAIC,KAAK,EAAEC,MAAM,EAA0B;EAAA;EAAA,IAAxBC,cAAc,uEAAG,CAAC,CAAC;EACnD,IAAMC,YAAY,GAChB,0BAAAF,MAAM,CAACG,MAAM,CAACD,YAAY,CAACE,sBAAsB,0DAAjD,sBAAmDD,MAAM,KAAI,CAAC,CAAC;EACjE,IAAMA,MAAM,GAAGE,MAAM,CAACC,IAAI,CAACJ,YAAY,CAAC,CAACK,GAAG,CAAC,UAACC,KAAK;IAAA,OAAK,CACtDA,KAAK,EACLN,YAAY,CAACM,KAAK,CAAC,CAACnB,KAAK,IAAImB,KAAK,CACnC;EAAA,EAAC;EACF,IAAMC,eAAe,GACnB,0BAAAR,cAAc,CAACX,SAAS,0DAAxB,sBAA0BoB,MAAM,CAC9B,UAACC,QAAQ;IAAA,OAAKA,QAAQ,CAACpB,EAAE,KAAK,SAAS;EAAA,EACxC,CAAC,CAAC,CAAC,KAAI,CAAC,CAAC;EAEZ,OAAO;IACLF,KAAK,EAAEY,cAAc,CAACZ,KAAK,IAAI,6BAA6B;IAC5DC,SAAS,GACP;MACEC,EAAE,EAAE,SAAS;MACbF,KAAK,EAAE,SAAS;MAChBG,MAAM,GACJ,cAAc,EACd,eAAe,EACf,aAAa,EACb,MAAM,4BACF,CAAAiB,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEjB,MAAM,KAAI,EAAE;IAErC,CAAC,4BACG,2BAAAS,cAAc,CAACX,SAAS,2DAAxB,uBAA0BoB,MAAM,CAClC,UAACC,QAAQ;MAAA,OAAKA,QAAQ,CAACpB,EAAE,KAAK,SAAS;IAAA,EACxC,KAAI,EAAE,IACP;MACEA,EAAE,EAAE,SAAS;MACbF,KAAK,EAAE,SAAS;MAChBG,MAAM,EAAE,CAAC,SAAS;IACpB,CAAC,EACF;IAEDC,UAAU;MACRmB,YAAY,EAAE;QACZvB,KAAK,EAAE,eAAe;QACtBwB,MAAM,EAAE;MACV,CAAC;MACDC,aAAa,EAAE;QACbzB,KAAK,EAAE,gBAAgB;QACvBM,IAAI,EAAE,OAAO;QACboB,KAAK,EAAE;UACLC,OAAO,EAAE;QACX;MACF,CAAC;MACDC,WAAW,EAAE;QACX5B,KAAK,EAAE,aAAa;QACpBwB,MAAM,EAAE;MACV,CAAC;MACDlB,IAAI,EAAE;QACJN,KAAK,EAAE,mBAAmB;QAC1BM,IAAI,EAAE,OAAO;QACbqB,OAAO,qBAAMb,MAAM;MACrB,CAAC;MACDe,OAAO,EAAE;QACPL,MAAM,EAAE,aAAa;QACrBxB,KAAK,EAAE,SAAS;QAChB8B,MAAM,EAAE/B;MACV;IAAC,GACGa,cAAc,CAACR,UAAU,IAAI,CAAC,CAAC,CACpC;IAEDI,QAAQ,GAAG,KAAK,4BAAMI,cAAc,CAACJ,QAAQ,IAAI,EAAE;EACrD,CAAC;AACH,CAAC;AAED,eAAeC,SAAS"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}