{"ast":null,"code":"const _excluded = [\"onChange\", \"value\"];\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Widgets/PickObjectWidget.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/*\n * A wrapper over ObjectBrowser because of API constraints\n */\n\nimport { TextWidget } from '@plone/volto/components'; //CheckboxWidget, Icon,\nimport { Link } from 'react-router-dom';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport React from 'react';\nconst ObjectBrowserWrapper = withObjectBrowser(props => {\n  const {\n    id,\n    title,\n    value,\n    onSelectItem,\n    openObjectBrowser,\n    required,\n    onChangeBlock\n  } = props;\n  return __jsx(TextWidget, {\n    id: id,\n    title: value ? __jsx(Link, {\n      to: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 22\n      }\n    }, title) : title,\n    required: required,\n    value: value,\n    icon: value ? clearSVG : navTreeSVG,\n    iconAction: value ? (id, value) => onSelectItem(null) : () => openObjectBrowser({\n      mode: 'link',\n      onSelectItem\n    }),\n    onChange: (id, value) => {\n      onChangeBlock(props.id, value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  });\n});\nconst ObjectBrowserAdapter = _ref => {\n  let {\n      onChange,\n      value\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return __jsx(ObjectBrowserWrapper, _extends({}, props, {\n    onSelectItem: value => onChange(props.id, value),\n    onChangeBlock: onChange,\n    data: {\n      url: value\n    },\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }));\n};\nexport default ObjectBrowserAdapter;","map":{"version":3,"names":["TextWidget","Link","clearSVG","navTreeSVG","withObjectBrowser","React","ObjectBrowserWrapper","props","id","title","value","onSelectItem","openObjectBrowser","required","onChangeBlock","mode","ObjectBrowserAdapter","onChange","url"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Widgets/PickObjectWidget.jsx"],"sourcesContent":["/*\n * A wrapper over ObjectBrowser because of API constraints\n */\n\nimport { TextWidget } from '@plone/volto/components'; //CheckboxWidget, Icon,\nimport { Link } from 'react-router-dom';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport React from 'react';\n\nconst ObjectBrowserWrapper = withObjectBrowser((props) => {\n  const {\n    id,\n    title,\n    value,\n    onSelectItem,\n    openObjectBrowser,\n    required,\n    onChangeBlock,\n  } = props;\n  return (\n    <TextWidget\n      id={id}\n      title={value ? <Link to={value}>{title}</Link> : title}\n      required={required}\n      value={value}\n      icon={value ? clearSVG : navTreeSVG}\n      iconAction={\n        value\n          ? (id, value) => onSelectItem(null)\n          : () => openObjectBrowser({ mode: 'link', onSelectItem })\n      }\n      onChange={(id, value) => {\n        onChangeBlock(props.id, value);\n      }}\n    />\n  );\n});\n\nconst ObjectBrowserAdapter = ({ onChange, value, ...props }) => {\n  return (\n    <ObjectBrowserWrapper\n      {...props}\n      onSelectItem={(value) => onChange(props.id, value)}\n      onChangeBlock={onChange}\n      data={{ url: value }}\n      value={value}\n    />\n  );\n};\n\nexport default ObjectBrowserAdapter;\n"],"mappings":";;;;;;AAAA;AACA;AACA;;AAEA,SAASA,UAAU,QAAQ,yBAAyB,CAAC,CAAC;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,iBAAiB,MAAM,sDAAsD;AACpF,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,oBAAoB,GAAGF,iBAAiB,CAAEG,KAAK,IAAK;EACxD,MAAM;IACJC,EAAE;IACFC,KAAK;IACLC,KAAK;IACLC,YAAY;IACZC,iBAAiB;IACjBC,QAAQ;IACRC;EACF,CAAC,GAAGP,KAAK;EACT,OACE,MAAC,UAAU;IACT,EAAE,EAAEC,EAAG;IACP,KAAK,EAAEE,KAAK,GAAG,MAAC,IAAI;MAAC,EAAE,EAAEA,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAED,KAAK,CAAQ,GAAGA,KAAM;IACvD,QAAQ,EAAEI,QAAS;IACnB,KAAK,EAAEH,KAAM;IACb,IAAI,EAAEA,KAAK,GAAGR,QAAQ,GAAGC,UAAW;IACpC,UAAU,EACRO,KAAK,GACD,CAACF,EAAE,EAAEE,KAAK,KAAKC,YAAY,CAAC,IAAI,CAAC,GACjC,MAAMC,iBAAiB,CAAC;MAAEG,IAAI,EAAE,MAAM;MAAEJ;IAAa,CAAC,CAC3D;IACD,QAAQ,EAAE,CAACH,EAAE,EAAEE,KAAK,KAAK;MACvBI,aAAa,CAACP,KAAK,CAACC,EAAE,EAAEE,KAAK,CAAC;IAChC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF;AAEN,CAAC,CAAC;AAEF,MAAMM,oBAAoB,GAAG,QAAmC;EAAA,IAAlC;MAAEC,QAAQ;MAAEP;IAAgB,CAAC;IAAPH,KAAK;EACvD,OACE,MAAC,oBAAoB,eACfA,KAAK;IACT,YAAY,EAAGG,KAAK,IAAKO,QAAQ,CAACV,KAAK,CAACC,EAAE,EAAEE,KAAK,CAAE;IACnD,aAAa,EAAEO,QAAS;IACxB,IAAI,EAAE;MAAEC,GAAG,EAAER;IAAM,CAAE;IACrB,KAAK,EAAEA,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACb;AAEN,CAAC;AAED,eAAeM,oBAAoB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}