{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/components/ElementEditor/ContextButtons.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl'; // , defineMessages\n\nimport clearSVG from '@plone/volto/icons/delete.svg';\nimport { ToolbarButton } from 'volto-slate/editor/ui';\nimport { setPluginOptions } from 'volto-slate/actions';\n\n/*\n * Note: this is a weirder component, it should be called as a native function\n */\nexport default (options => editor => {\n  const {\n    isActiveElement,\n    unwrapElement,\n    pluginId,\n    messages,\n    toolbarButtonIcon\n  } = options;\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const pid = `${editor.uid}-${pluginId}`;\n  const showEditor = useSelector(state => {\n    var _state$slate_plugins, _state$slate_plugins$;\n    return (_state$slate_plugins = state['slate_plugins']) === null || _state$slate_plugins === void 0 ? void 0 : (_state$slate_plugins$ = _state$slate_plugins[pid]) === null || _state$slate_plugins$ === void 0 ? void 0 : _state$slate_plugins$.show_sidebar_editor;\n  });\n  return isActiveElement(editor) ? __jsx(React.Fragment, {\n    key: pluginId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(ToolbarButton, {\n    title: intl.formatMessage(messages.edit),\n    icon: toolbarButtonIcon,\n    active: showEditor,\n    \"aria-label\": intl.formatMessage(messages.edit),\n    onMouseDown: () => {\n      dispatch(setPluginOptions(pid, {\n        show_sidebar_editor: true\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), __jsx(ToolbarButton, {\n    title: intl.formatMessage(messages.delete),\n    icon: clearSVG,\n    \"aria-label\": intl.formatMessage(messages.delete),\n    alt: intl.formatMessage(messages.delete),\n    onMouseDown: () => {\n      unwrapElement(editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  })) : '';\n});","map":{"version":3,"names":["React","useDispatch","useSelector","useIntl","clearSVG","ToolbarButton","setPluginOptions","options","editor","isActiveElement","unwrapElement","pluginId","messages","toolbarButtonIcon","intl","dispatch","pid","uid","showEditor","state","show_sidebar_editor","formatMessage","edit","delete"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/components/ElementEditor/ContextButtons.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl'; // , defineMessages\n\nimport clearSVG from '@plone/volto/icons/delete.svg';\n\nimport { ToolbarButton } from 'volto-slate/editor/ui';\nimport { setPluginOptions } from 'volto-slate/actions';\n\n/*\n * Note: this is a weirder component, it should be called as a native function\n */\nexport default (options) => (editor) => {\n  const {\n    isActiveElement,\n    unwrapElement,\n    pluginId,\n    messages,\n    toolbarButtonIcon,\n  } = options;\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const pid = `${editor.uid}-${pluginId}`;\n  const showEditor = useSelector(\n    (state) => state['slate_plugins']?.[pid]?.show_sidebar_editor,\n  );\n\n  return isActiveElement(editor) ? (\n    <React.Fragment key={pluginId}>\n      <ToolbarButton\n        title={intl.formatMessage(messages.edit)}\n        icon={toolbarButtonIcon}\n        active={showEditor}\n        aria-label={intl.formatMessage(messages.edit)}\n        onMouseDown={() => {\n          dispatch(\n            setPluginOptions(pid, {\n              show_sidebar_editor: true,\n            }),\n          );\n        }}\n      />\n      <ToolbarButton\n        title={intl.formatMessage(messages.delete)}\n        icon={clearSVG}\n        aria-label={intl.formatMessage(messages.delete)}\n        alt={intl.formatMessage(messages.delete)}\n        onMouseDown={() => {\n          unwrapElement(editor);\n        }}\n      />\n    </React.Fragment>\n  ) : (\n    ''\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,YAAY,CAAC,CAAC;;AAEtC,OAAOC,QAAQ,MAAM,+BAA+B;AAEpD,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,gBAAgB,QAAQ,qBAAqB;;AAEtD;AACA;AACA;AACA,gBAAgBC,OAAO,IAAMC,MAAM,IAAK;EACtC,MAAM;IACJC,eAAe;IACfC,aAAa;IACbC,QAAQ;IACRC,QAAQ;IACRC;EACF,CAAC,GAAGN,OAAO;EACX,MAAMO,IAAI,GAAGX,OAAO,EAAE;EACtB,MAAMY,QAAQ,GAAGd,WAAW,EAAE;EAC9B,MAAMe,GAAG,GAAI,GAAER,MAAM,CAACS,GAAI,IAAGN,QAAS,EAAC;EACvC,MAAMO,UAAU,GAAGhB,WAAW,CAC3BiB,KAAK;IAAA;IAAA,+BAAKA,KAAK,CAAC,eAAe,CAAC,kFAAtB,qBAAyBH,GAAG,CAAC,0DAA7B,sBAA+BI,mBAAmB;EAAA,EAC9D;EAED,OAAOX,eAAe,CAACD,MAAM,CAAC,GAC5B,MAAC,KAAK,CAAC,QAAQ;IAAC,GAAG,EAAEG,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC5B,MAAC,aAAa;IACZ,KAAK,EAAEG,IAAI,CAACO,aAAa,CAACT,QAAQ,CAACU,IAAI,CAAE;IACzC,IAAI,EAAET,iBAAkB;IACxB,MAAM,EAAEK,UAAW;IACnB,cAAYJ,IAAI,CAACO,aAAa,CAACT,QAAQ,CAACU,IAAI,CAAE;IAC9C,WAAW,EAAE,MAAM;MACjBP,QAAQ,CACNT,gBAAgB,CAACU,GAAG,EAAE;QACpBI,mBAAmB,EAAE;MACvB,CAAC,CAAC,CACH;IACH,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF,EACF,MAAC,aAAa;IACZ,KAAK,EAAEN,IAAI,CAACO,aAAa,CAACT,QAAQ,CAACW,MAAM,CAAE;IAC3C,IAAI,EAAEnB,QAAS;IACf,cAAYU,IAAI,CAACO,aAAa,CAACT,QAAQ,CAACW,MAAM,CAAE;IAChD,GAAG,EAAET,IAAI,CAACO,aAAa,CAACT,QAAQ,CAACW,MAAM,CAAE;IACzC,WAAW,EAAE,MAAM;MACjBb,aAAa,CAACF,MAAM,CAAC;IACvB,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF,CACa,GAEjB,EACD;AACH,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}