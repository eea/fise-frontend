{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _map from \"lodash/map\";\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\n//import { GET_NAVIGATION } from '../../constants/ActionTypes';\nimport { GET_NAVSITEMAP } from '../constants/ActionTypes';\nvar initialState = {\n  error: null,\n  items: [],\n  loaded: false,\n  loading: false\n};\n\n/**\n * Recursive function that process the items returned by the navigation\n * endpoint\n * @function getRecursiveItems\n * @param {array} items The items inside a navigation response.\n * @returns {*} The navigation items object (recursive)\n */\nfunction getRecursiveItems(items) {\n  return _map(items, function (item) {\n    return _objectSpread({\n      title: item.title,\n      url: flattenToAppURL(item['@id'])\n    }, item.items && {\n      items: getRecursiveItems(item.items)\n    });\n  });\n}\n\n/**\n * Navigation reducer.\n * @function navigation\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function navSiteMap() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case \"\".concat(GET_NAVSITEMAP, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case \"\".concat(GET_NAVSITEMAP, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        items: getRecursiveItems(action.result.items),\n        loaded: true,\n        loading: false\n      });\n    case \"\".concat(GET_NAVSITEMAP, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        items: [],\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["flattenToAppURL","GET_NAVSITEMAP","initialState","error","items","loaded","loading","getRecursiveItems","item","title","url","navSiteMap","state","action","type","result"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/reducers/sitemap.js"],"sourcesContent":["/**\n * Navigation reducer.\n * @module reducers/navigation/navigation\n */\n\nimport { map } from 'lodash';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\n//import { GET_NAVIGATION } from '../../constants/ActionTypes';\nimport { GET_NAVSITEMAP } from '../constants/ActionTypes';\n\nconst initialState = {\n  error: null,\n  items: [],\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Recursive function that process the items returned by the navigation\n * endpoint\n * @function getRecursiveItems\n * @param {array} items The items inside a navigation response.\n * @returns {*} The navigation items object (recursive)\n */\nfunction getRecursiveItems(items) {\n  return map(items, (item) => ({\n    title: item.title,\n    url: flattenToAppURL(item['@id']),\n    ...(item.items && { items: getRecursiveItems(item.items) }),\n  }));\n}\n\n/**\n * Navigation reducer.\n * @function navigation\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function navSiteMap(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_NAVSITEMAP}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n\n    case `${GET_NAVSITEMAP}_SUCCESS`:\n      return {\n        ...state,\n        error: null,\n        items: getRecursiveItems(action.result.items),\n        loaded: true,\n        loading: false,\n      };\n\n    case `${GET_NAVSITEMAP}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        items: [],\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;AAMA,SAASA,eAAe,QAAQ,sBAAsB;;AAEtD;AACA,SAASC,cAAc,QAAQ,0BAA0B;AAEzD,IAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiB,CAACH,KAAK,EAAE;EAChC,OAAO,KAAIA,KAAK,EAAE,UAACI,IAAI;IAAA;MACrBC,KAAK,EAAED,IAAI,CAACC,KAAK;MACjBC,GAAG,EAAEV,eAAe,CAACQ,IAAI,CAAC,KAAK,CAAC;IAAC,GAC7BA,IAAI,CAACJ,KAAK,IAAI;MAAEA,KAAK,EAAEG,iBAAiB,CAACC,IAAI,CAACJ,KAAK;IAAE,CAAC;EAAA,CAC1D,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASO,UAAU,GAAoC;EAAA,IAAnCC,KAAK,uEAAGV,YAAY;EAAA,IAAEW,MAAM,uEAAG,CAAC,CAAC;EAClE,QAAQA,MAAM,CAACC,IAAI;IACjB,eAAQb,cAAc;MACpB,uCACKW,KAAK;QACRT,KAAK,EAAE,IAAI;QACXE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAGjB,eAAQL,cAAc;MACpB,uCACKW,KAAK;QACRT,KAAK,EAAE,IAAI;QACXC,KAAK,EAAEG,iBAAiB,CAACM,MAAM,CAACE,MAAM,CAACX,KAAK,CAAC;QAC7CC,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MAAK;IAGlB,eAAQL,cAAc;MACpB,uCACKW,KAAK;QACRT,KAAK,EAAEU,MAAM,CAACV,KAAK;QACnBC,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAK;IAElB;MACE,OAAOM,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}