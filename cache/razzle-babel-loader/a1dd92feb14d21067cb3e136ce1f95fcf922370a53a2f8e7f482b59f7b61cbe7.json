{"ast":null,"code":"/* eslint-disable no-throw-literal */\nimport { getBaseUrl } from '@plone/volto/helpers';\nconst setLegendColumns = (legendsNo, device) => {\n  switch (device) {\n    case 'widescreen':\n      return legendsNo ? legendsNo : 1;\n    case 'large':\n      return legendsNo ? legendsNo : 1;\n    case 'computer':\n      return legendsNo ? legendsNo : 1;\n    case 'tablet':\n      return 1;\n    case 'mobile':\n      return 1;\n    default:\n      return 1;\n  }\n};\nconst fetchArcGISData = async url => {\n  const res = await fetch(`${getBaseUrl('')}/cors-proxy/${url}?f=json`);\n  if (res.status !== 200) {\n    const error = await res.json();\n    throw {\n      message: error.message,\n      status: error.cod\n    };\n  }\n  const data = await res.json();\n  if (data.error && data.error.code === 400) {\n    throw {\n      message: data.error.message.message,\n      status: data.status\n    };\n  }\n  return data;\n};\nexport { setLegendColumns, fetchArcGISData };","map":{"version":3,"names":["getBaseUrl","setLegendColumns","legendsNo","device","fetchArcGISData","url","res","fetch","status","error","json","message","cod","data","code"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-eea-map/src/utils.js"],"sourcesContent":["/* eslint-disable no-throw-literal */\nimport { getBaseUrl } from '@plone/volto/helpers';\nconst setLegendColumns = (legendsNo, device) => {\n  switch (device) {\n    case 'widescreen':\n      return legendsNo ? legendsNo : 1;\n    case 'large':\n      return legendsNo ? legendsNo : 1;\n    case 'computer':\n      return legendsNo ? legendsNo : 1;\n    case 'tablet':\n      return 1;\n    case 'mobile':\n      return 1;\n    default:\n      return 1;\n  }\n};\n\nconst fetchArcGISData = async (url) => {\n  const res = await fetch(`${getBaseUrl('')}/cors-proxy/${url}?f=json`);\n  if (res.status !== 200) {\n    const error = await res.json();\n    throw { message: error.message, status: error.cod };\n  }\n  const data = await res.json();\n  if (data.error && data.error.code === 400) {\n    throw { message: data.error.message.message, status: data.status };\n  }\n  return data;\n};\n\nexport { setLegendColumns, fetchArcGISData };\n"],"mappings":"AAAA;AACA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,MAAMC,gBAAgB,GAAG,CAACC,SAAS,EAAEC,MAAM,KAAK;EAC9C,QAAQA,MAAM;IACZ,KAAK,YAAY;MACf,OAAOD,SAAS,GAAGA,SAAS,GAAG,CAAC;IAClC,KAAK,OAAO;MACV,OAAOA,SAAS,GAAGA,SAAS,GAAG,CAAC;IAClC,KAAK,UAAU;MACb,OAAOA,SAAS,GAAGA,SAAS,GAAG,CAAC;IAClC,KAAK,QAAQ;MACX,OAAO,CAAC;IACV,KAAK,QAAQ;MACX,OAAO,CAAC;IACV;MACE,OAAO,CAAC;EAAC;AAEf,CAAC;AAED,MAAME,eAAe,GAAG,MAAOC,GAAG,IAAK;EACrC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEP,UAAU,CAAC,EAAE,CAAE,eAAcK,GAAI,SAAQ,CAAC;EACrE,IAAIC,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;IACtB,MAAMC,KAAK,GAAG,MAAMH,GAAG,CAACI,IAAI,EAAE;IAC9B,MAAM;MAAEC,OAAO,EAAEF,KAAK,CAACE,OAAO;MAAEH,MAAM,EAAEC,KAAK,CAACG;IAAI,CAAC;EACrD;EACA,MAAMC,IAAI,GAAG,MAAMP,GAAG,CAACI,IAAI,EAAE;EAC7B,IAAIG,IAAI,CAACJ,KAAK,IAAII,IAAI,CAACJ,KAAK,CAACK,IAAI,KAAK,GAAG,EAAE;IACzC,MAAM;MAAEH,OAAO,EAAEE,IAAI,CAACJ,KAAK,CAACE,OAAO,CAACA,OAAO;MAAEH,MAAM,EAAEK,IAAI,CAACL;IAAO,CAAC;EACpE;EACA,OAAOK,IAAI;AACb,CAAC;AAED,SAASZ,gBAAgB,EAAEG,eAAe"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}