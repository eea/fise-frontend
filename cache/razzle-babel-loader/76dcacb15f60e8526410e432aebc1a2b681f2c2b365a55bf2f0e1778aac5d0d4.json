{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Sidebar/ObjectBrowser.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ObjectBrowserBody from '@plone/volto/components/manage/Sidebar/ObjectBrowserBody';\nimport SidebarPopup from '@plone/volto/components/manage/Sidebar/SidebarPopup';\nimport { getBaseUrl } from '@plone/volto/helpers';\nvar withObjectBrowser = function withObjectBrowser(WrappedComponent) {\n  var _class;\n  return _class = /*#__PURE__*/function (_React$Component) {\n    _inherits(_class, _React$Component);\n    var _super = _createSuper(_class);\n    /**\n     * Default properties\n     * @property {Object} defaultProps Default properties.\n     * @static\n     */\n\n    function _class() {\n      var _this;\n      _classCallCheck(this, _class);\n      _this = _super.call(this);\n      _defineProperty(_assertThisInitialized(_this), \"openObjectBrowser\", function () {\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$mode = _ref.mode,\n          mode = _ref$mode === void 0 ? 'image' : _ref$mode,\n          _ref$onSelectItem = _ref.onSelectItem,\n          onSelectItem = _ref$onSelectItem === void 0 ? null : _ref$onSelectItem,\n          _ref$dataName = _ref.dataName,\n          dataName = _ref$dataName === void 0 ? null : _ref$dataName,\n          _ref$overlay = _ref.overlay,\n          overlay = _ref$overlay === void 0 ? null : _ref$overlay,\n          _ref$propDataName = _ref.propDataName,\n          propDataName = _ref$propDataName === void 0 ? null : _ref$propDataName,\n          searchableTypes = _ref.searchableTypes,\n          selectableTypes = _ref.selectableTypes,\n          maximumSelectionSize = _ref.maximumSelectionSize,\n          currentPath = _ref.currentPath;\n        return _this.setState(function () {\n          return {\n            isObjectBrowserOpen: true,\n            mode: mode,\n            onSelectItem: onSelectItem,\n            dataName: dataName,\n            overlay: overlay,\n            propDataName: propDataName,\n            searchableTypes: searchableTypes,\n            selectableTypes: selectableTypes,\n            maximumSelectionSize: maximumSelectionSize,\n            currentPath: currentPath\n          };\n        });\n      });\n      _defineProperty(_assertThisInitialized(_this), \"closeObjectBrowser\", function () {\n        return _this.setState({\n          isObjectBrowserOpen: false\n        });\n      });\n      _this.state = {\n        isObjectBrowserOpen: false\n      };\n      return _this;\n    }\n\n    /**\n     * openObjectBrowser\n     * @function openObjectBrowser\n     * @param {Object} object ObjectBrowser configuration.\n     * @param {string} object.mode Quick mode, defaults to `image`. Values: link, image, multiple\n     * @param {string} object.dataName Name of the block data property to write the selected item.\n     * @param {string} object.onSelectItem Function that will be called on item selection.\n     * @param {string} object.overlay Boolean to show overlay background on content when opening objectBrowser.\n     *\n     * Usage:\n     *\n     * this.props.openObjectBrowser();\n     *\n     * this.props.openObjectBrowser({mode: 'link'});\n     *\n     * this.props.openObjectBrowser({\n     *   dataName: 'myfancydatafield'\n     *   });\n     *\n     * this.props.openObjectBrowser({\n     *   onSelectItem: url =>\n     *     this.props.onChangeBlock(this.props.block, {\n     *       ...this.props.data,\n     *       myfancydatafield: url,\n     *     }),\n     *   });\n     */\n    _createClass(_class, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props$location, _this$state;\n        var contextURL = this.props.pathname || ((_this$props$location = this.props.location) === null || _this$props$location === void 0 ? void 0 : _this$props$location.pathname) || ((_this$state = this.state) === null || _this$state === void 0 ? void 0 : _this$state.currentPath);\n        return __jsx(React.Fragment, null, __jsx(WrappedComponent, _extends({}, this.props, {\n          isObjectBrowserOpen: this.state.isObjectBrowserOpen,\n          openObjectBrowser: this.openObjectBrowser,\n          closeObjectBrowser: this.closeObjectBrowser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }\n        })), __jsx(React.Fragment, null, __jsx(SidebarPopup, {\n          open: this.state.isObjectBrowserOpen,\n          onClose: this.closeObjectBrowser,\n          overlay: this.state.overlay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }\n        }, __jsx(ObjectBrowserBody, _extends({}, this.props, {\n          data: this.state.propDataName ? this.props[this.state.propDataName] : this.props.data,\n          contextURL: getBaseUrl(contextURL),\n          closeObjectBrowser: this.closeObjectBrowser,\n          mode: this.state.mode,\n          onSelectItem: this.state.onSelectItem,\n          dataName: this.state.dataName,\n          searchableTypes: this.state.searchableTypes,\n          selectableTypes: this.state.selectableTypes,\n          maximumSelectionSize: this.state.maximumSelectionSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }\n        })))));\n      }\n    }]);\n    return _class;\n  }(React.Component), _defineProperty(_class, \"defaultProps\", {\n    onChangeBlock: function onChangeBlock() {},\n    data: {},\n    block: new Date().getTime() + ''\n  }), _class;\n};\nexport default withObjectBrowser;","map":{"version":3,"names":["React","ObjectBrowserBody","SidebarPopup","getBaseUrl","withObjectBrowser","WrappedComponent","mode","onSelectItem","dataName","overlay","propDataName","searchableTypes","selectableTypes","maximumSelectionSize","currentPath","setState","isObjectBrowserOpen","state","contextURL","props","pathname","location","openObjectBrowser","closeObjectBrowser","data","Component","onChangeBlock","block","Date","getTime"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Sidebar/ObjectBrowser.jsx"],"sourcesContent":["import React from 'react';\nimport ObjectBrowserBody from '@plone/volto/components/manage/Sidebar/ObjectBrowserBody';\nimport SidebarPopup from '@plone/volto/components/manage/Sidebar/SidebarPopup';\nimport { getBaseUrl } from '@plone/volto/helpers';\n\nconst withObjectBrowser = (WrappedComponent) =>\n  class extends React.Component {\n    /**\n     * Default properties\n     * @property {Object} defaultProps Default properties.\n     * @static\n     */\n    static defaultProps = {\n      onChangeBlock: () => {},\n      data: {},\n      block: new Date().getTime() + '',\n    };\n\n    constructor() {\n      super();\n      this.state = { isObjectBrowserOpen: false };\n    }\n\n    /**\n     * openObjectBrowser\n     * @function openObjectBrowser\n     * @param {Object} object ObjectBrowser configuration.\n     * @param {string} object.mode Quick mode, defaults to `image`. Values: link, image, multiple\n     * @param {string} object.dataName Name of the block data property to write the selected item.\n     * @param {string} object.onSelectItem Function that will be called on item selection.\n     * @param {string} object.overlay Boolean to show overlay background on content when opening objectBrowser.\n     *\n     * Usage:\n     *\n     * this.props.openObjectBrowser();\n     *\n     * this.props.openObjectBrowser({mode: 'link'});\n     *\n     * this.props.openObjectBrowser({\n     *   dataName: 'myfancydatafield'\n     *   });\n     *\n     * this.props.openObjectBrowser({\n     *   onSelectItem: url =>\n     *     this.props.onChangeBlock(this.props.block, {\n     *       ...this.props.data,\n     *       myfancydatafield: url,\n     *     }),\n     *   });\n     */\n    openObjectBrowser = ({\n      mode = 'image',\n      onSelectItem = null,\n      dataName = null,\n      overlay = null,\n      propDataName = null,\n      searchableTypes,\n      selectableTypes,\n      maximumSelectionSize,\n      currentPath,\n    } = {}) =>\n      this.setState(() => ({\n        isObjectBrowserOpen: true,\n        mode,\n        onSelectItem,\n        dataName,\n        overlay,\n        propDataName,\n        searchableTypes,\n        selectableTypes,\n        maximumSelectionSize,\n        currentPath,\n      }));\n\n    closeObjectBrowser = () => this.setState({ isObjectBrowserOpen: false });\n\n    render() {\n      let contextURL =\n        this.props.pathname ||\n        this.props.location?.pathname ||\n        this.state?.currentPath;\n\n      return (\n        <>\n          <WrappedComponent\n            {...this.props}\n            isObjectBrowserOpen={this.state.isObjectBrowserOpen}\n            openObjectBrowser={this.openObjectBrowser}\n            closeObjectBrowser={this.closeObjectBrowser}\n          />\n\n          <>\n            <SidebarPopup\n              open={this.state.isObjectBrowserOpen}\n              onClose={this.closeObjectBrowser}\n              overlay={this.state.overlay}\n            >\n              <ObjectBrowserBody\n                {...this.props}\n                data={\n                  this.state.propDataName\n                    ? this.props[this.state.propDataName]\n                    : this.props.data\n                }\n                contextURL={getBaseUrl(contextURL)}\n                closeObjectBrowser={this.closeObjectBrowser}\n                mode={this.state.mode}\n                onSelectItem={this.state.onSelectItem}\n                dataName={this.state.dataName}\n                searchableTypes={this.state.searchableTypes}\n                selectableTypes={this.state.selectableTypes}\n                maximumSelectionSize={this.state.maximumSelectionSize}\n              />\n            </SidebarPopup>\n          </>\n        </>\n      );\n    }\n  };\n\nexport default withObjectBrowser;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}