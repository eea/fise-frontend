{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/AddonsControlpanel.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/AddonsControlpanel\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { Accordion, Button, Container, Divider, Header, Label, Message, Segment, Dimmer, Loader } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { installAddon, listAddons, uninstallAddon, upgradeAddon } from '@plone/volto/actions';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Icon, Toolbar, Toast } from '@plone/volto/components';\nimport circleBottomSVG from '@plone/volto/icons/circle-bottom.svg';\nimport circleTopSVG from '@plone/volto/icons/circle-top.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport { toast } from 'react-toastify';\nconst messages = defineMessages({\n  activateAndDeactivate: {\n    \"id\": \"Activate and deactivate\",\n    \"defaultMessage\": \"Activate and deactivate add-ons in the lists below.\"\n  },\n  addAddons: {\n    \"id\": \"Add Addons\",\n    \"defaultMessage\": \"To make new add-ons show up here, add them to your buildout configuration, run buildout, and restart the server process. For detailed instructions see\"\n  },\n  addonsSettings: {\n    \"id\": \"Add-ons Settings\",\n    \"defaultMessage\": \"Add-ons Settings\"\n  },\n  available: {\n    \"id\": \"Available\",\n    \"defaultMessage\": \"Available\"\n  },\n  availableVersion: {\n    \"id\": \"Latest version\",\n    \"defaultMessage\": \"Latest version\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  installed: {\n    \"id\": \"Installed\",\n    \"defaultMessage\": \"Installed\"\n  },\n  installedVersion: {\n    \"id\": \"Installed version\",\n    \"defaultMessage\": \"Installed version\"\n  },\n  noUninstallProfile: {\n    \"id\": \"No uninstall profile\",\n    \"defaultMessage\": \"This addon does not provide an uninstall profile.\"\n  },\n  update: {\n    \"id\": \"Update\",\n    \"defaultMessage\": \"Update\"\n  },\n  updatesAvailable: {\n    \"id\": \"Updates available\",\n    \"defaultMessage\": \"Updates available\"\n  },\n  updateInstalledAddons: {\n    \"id\": \"Update installed addons:\",\n    \"defaultMessage\": \"Update installed addons:\"\n  },\n  uninstall: {\n    \"id\": \"Uninstall\",\n    \"defaultMessage\": \"Uninstall\"\n  },\n  addOns: {\n    \"id\": \"Add-ons\",\n    \"defaultMessage\": \"Add-ons\"\n  },\n  installingAnAddon: {\n    \"id\": \"Installing a third party add-on\",\n    \"defaultMessage\": \"Installing a third party add-on\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  addonUpgraded: {\n    \"id\": \"Addon upgraded succesfuly\",\n    \"defaultMessage\": \"Addon upgraded succesfuly\"\n  },\n  addonNotUpgraded: {\n    \"id\": \"Addon could not be upgraded\",\n    \"defaultMessage\": \"Addon could not be upgraded\"\n  },\n  addonInstalled: {\n    \"id\": \"Addon installed succesfuly\",\n    \"defaultMessage\": \"Addon installed succesfuly\"\n  },\n  addonNotInstalled: {\n    \"id\": \"Addon could not be installed\",\n    \"defaultMessage\": \"Addon could not be installed\"\n  },\n  addonUninstalled: {\n    \"id\": \"Addon uninstalled succesfuly\",\n    \"defaultMessage\": \"Addon uninstalled succesfuly\"\n  },\n  addonNotUninstalled: {\n    \"id\": \"Addon could not be uninstalled\",\n    \"defaultMessage\": \"Addon could not be uninstalled\"\n  }\n});\n\n/**\n * AddonsControlpanel class.\n * @class AddonsControlpanel\n * @extends Component\n */\nclass AddonsControlpanel extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onAccordionClick = this.onAccordionClick.bind(this);\n    this.onInstall = this.onInstall.bind(this);\n    this.onUninstall = this.onUninstall.bind(this);\n    this.onUpgrade = this.onUpgrade.bind(this);\n    this.state = {\n      activeIndex: -1,\n      installedAddons: [],\n      availableAddons: [],\n      upgradableAddons: [],\n      isClient: false\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.listAddons();\n    this.setState({\n      isClient: true\n    });\n  }\n\n  /**\n   * Install handler\n   * @method onInstall\n   * @param {Object} event Event object.\n   * @param {string} value Id of package to install.\n   * @returns {undefined}\n   */\n  onInstall(event, {\n    value\n  }) {\n    event.preventDefault();\n    this.props.installAddon(value).then(() => {\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.addonInstalled, {\n          title: this.props.title\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }\n      }));\n    }).catch(() => {\n      toast.error(__jsx(Toast, {\n        error: true,\n        title: this.props.intl.formatMessage(messages.error),\n        content: this.props.intl.formatMessage(messages.addonNotInstalled),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }\n      }));\n    }).finally(() => this.props.listAddons());\n  }\n\n  /**\n   * Uninstall handler\n   * @method onUninstall\n   * @param {Object} event Event object.\n   * @param {string} value Id of package to uninstall.\n   * @returns {undefined}\n   */\n  onUninstall(event, {\n    value\n  }) {\n    event.preventDefault();\n    this.props.uninstallAddon(value).then(() => {\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.addonUninstalled),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }\n      }));\n    }).catch(() => {\n      toast.error(__jsx(Toast, {\n        error: true,\n        title: this.props.intl.formatMessage(messages.error),\n        content: this.props.intl.formatMessage(messages.addonNotUninstalled, {\n          title: this.props.title\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }\n      }));\n    }).finally(() => this.props.listAddons());\n  }\n\n  /**\n   * Unpgrade handler\n   * @method onUpgrade\n   * @param {Object} event Event object.\n   * @param {string} value Id of package to update.\n   * @returns {undefined}\n   */\n  onUpgrade(event, {\n    value\n  }) {\n    event.preventDefault();\n    this.props.upgradeAddon(value).then(() => {\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.addonUpgraded),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }\n      }));\n    }).catch(() => {\n      toast.error(__jsx(Toast, {\n        error: true,\n        title: this.props.intl.formatMessage(messages.error),\n        content: this.props.intl.formatMessage(messages.addonNotUpgraded),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }\n      }));\n    }).finally(() => this.props.listAddons());\n  }\n\n  /**\n   * On accordion click handler\n   * @method onAccordionClick\n   * @param {object} event Event object.\n   * @param {object} index Index of the accordion element being clicked\n   * @returns {undefined}\n   */\n  onAccordionClick(event, item) {\n    const {\n      activeIndex\n    } = this.state;\n    const newIndex = activeIndex === item.index ? -1 : item.index;\n    this.setState({\n      activeIndex: newIndex\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return __jsx(Container, {\n      id: \"page-addons\",\n      className: \"controlpanel-addons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.addOns),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }\n    }), __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Add-ons Settings\",\n      defaultMessage: \"Add-ons Settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }\n    })), this.props.loadingAddons ? __jsx(Dimmer, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 13\n      }\n    }, __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 15\n      }\n    })) : __jsx(React.Fragment, null, this.props.upgradableAddons.length > 0 && __jsx(Message, {\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }\n    }, __jsx(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Updates available\",\n      defaultMessage: \"Updates available\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 21\n      }\n    })), __jsx(FormattedMessage, {\n      id: \"Update installed addons\",\n      defaultMessage: \"Update installed addons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 19\n      }\n    })), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 15\n      }\n    }, __jsx(Header, {\n      as: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Activate and deactivate\",\n      defaultMessage: \"Activate and deactivate add-ons in the lists below.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 19\n      }\n    })), __jsx(FormattedMessage, {\n      id: \"Add Addons\",\n      defaultMessage: \"To make new add-ons show up here, add them to your buildout configuration, run buildout, and restart the server process. For detailed instructions see\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }\n    }), \"\\xA0\", __jsx(\"a\", {\n      href: \"http://docs.plone.org/manage/installing/installing_addons.html\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }\n    }, this.props.intl.formatMessage(messages.installingAnAddon)), \".\"), __jsx(Segment, {\n      key: \"header-available\",\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Available\",\n      defaultMessage: \"Available\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }\n    }), \":\", __jsx(Label, {\n      circular: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }\n    }, this.props.availableAddons.length)), __jsx(Segment, {\n      key: \"body-available\",\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 15\n      }\n    }, __jsx(Accordion, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 17\n      }\n    }, __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 19\n      }\n    }), this.props.availableAddons.map(item => __jsx(\"div\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }\n    }, __jsx(Accordion.Title, {\n      active: this.state.activeIndex === item.id,\n      index: item.id,\n      onClick: this.onAccordionClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 23\n      }\n    }, item.title, __jsx(Icon, {\n      name: this.state.activeIndex === item.id ? circleTopSVG : circleBottomSVG,\n      size: \"23px\",\n      className: `accordionToggle ${item.title}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 25\n      }\n    })), __jsx(Accordion.Content, {\n      active: this.state.activeIndex === item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 23\n      }\n    }, __jsx(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 25\n      }\n    }, item.description), item.uninstall_profile_id === '' && __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 27\n      }\n    }, __jsx(Message, {\n      icon: \"warning\",\n      warning: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 29\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"No uninstall profile\",\n      defaultMessage: \"This addon does not provide an uninstall profile.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 31\n      }\n    }))), __jsx(Button.Group, {\n      floated: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      primary: true,\n      onClick: this.onInstall,\n      value: item.id,\n      className: \"installAction\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 27\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Install\",\n      defaultMessage: \"Install\",\n      className: \"button-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 29\n      }\n    }))), __jsx(\"div\", {\n      className: \"version\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Latest version\",\n      defaultMessage: \"Latest version\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 27\n      }\n    }), \": \\xA0\", item.version)), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 23\n      }\n    }))))), __jsx(Segment, {\n      key: \"header-installed\",\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Installed\",\n      defaultMessage: \"Installed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 17\n      }\n    }), \":\", __jsx(Label, {\n      circular: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }\n    }, this.props.installedAddons.length)), __jsx(Segment, {\n      key: \"body-installed\",\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 15\n      }\n    }, __jsx(Accordion, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 17\n      }\n    }, __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 19\n      }\n    }), this.props.installedAddons.map(item => __jsx(\"div\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 21\n      }\n    }, __jsx(Accordion.Title, {\n      active: this.state.activeIndex === item.id,\n      index: item.id,\n      onClick: this.onAccordionClick,\n      className: item.upgrade_info.available ? 'updateAvailable' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 23\n      }\n    }, item.title, item.upgrade_info.available && __jsx(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 27\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Update\",\n      defaultMessage: \"Update\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 29\n      }\n    })), __jsx(Icon, {\n      name: this.state.activeIndex === item.id ? circleTopSVG : circleBottomSVG,\n      size: \"24px\",\n      className: `accordionToggle ${item.title}`,\n      color: \"#878f93\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 25\n      }\n    })), __jsx(Accordion.Content, {\n      active: this.state.activeIndex === item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 23\n      }\n    }, __jsx(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 25\n      }\n    }, item.description), __jsx(Button.Group, {\n      floated: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 25\n      }\n    }, item.upgrade_info.available && __jsx(Button, {\n      primary: true,\n      onClick: this.onUpgrade,\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 29\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"upgradeVersions\",\n      defaultMessage: \"Update from version {origin} to {destination}\",\n      values: {\n        origin: item.upgrade_info.installedVersion,\n        destination: item.upgrade_info.newVersion\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 31\n      }\n    })), item.uninstall_profile_id && __jsx(Button, {\n      negative: true,\n      onClick: this.onUninstall,\n      value: item.id,\n      className: \"uninstallAction\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 29\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Uninstall\",\n      defaultMessage: \"Uninstall\",\n      className: \"button-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 31\n      }\n    }))), __jsx(\"div\", {\n      className: \"version\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Installed version\",\n      defaultMessage: \"Installed version\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 27\n      }\n    }), \": \\xA0 \", item.version)), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 23\n      }\n    }))))))), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(React.Fragment, null, __jsx(Link, {\n        to: \"/controlpanel\",\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 19\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        \"aria-label\": this.props.intl.formatMessage(messages.back),\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 21\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n_defineProperty(AddonsControlpanel, \"propTypes\", {\n  listAddons: PropTypes.func.isRequired,\n  installAddon: PropTypes.func.isRequired,\n  uninstallAddon: PropTypes.func.isRequired,\n  installedAddons: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    id: PropTypes.string,\n    title: PropTypes.string,\n    version: PropTypes.string,\n    description: PropTypes.string,\n    uninstall_profile_id: PropTypes.string,\n    upgrade_info: PropTypes.shape({\n      available: PropTypes.boolean\n    })\n  })).isRequired,\n  availableAddons: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    id: PropTypes.string,\n    title: PropTypes.string,\n    version: PropTypes.string,\n    description: PropTypes.string,\n    uninstall_profile_id: PropTypes.string,\n    upgrade_info: PropTypes.shape({\n      available: PropTypes.boolean\n    })\n  })).isRequired,\n  upgradableAddons: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    id: PropTypes.string,\n    title: PropTypes.string,\n    version: PropTypes.string,\n    description: PropTypes.string,\n    uninstall_profile_id: PropTypes.string,\n    upgrade_info: PropTypes.shape({\n      available: PropTypes.boolean\n    })\n  })).isRequired\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  installedAddons: state.addons.installedAddons,\n  availableAddons: state.addons.availableAddons,\n  upgradableAddons: state.addons.upgradableAddons,\n  loadingAddons: state.addons.loading,\n  pathname: props.location.pathname\n}), {\n  installAddon,\n  listAddons,\n  uninstallAddon,\n  upgradeAddon\n}))(AddonsControlpanel);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","Portal","Accordion","Button","Container","Divider","Header","Label","Message","Segment","Dimmer","Loader","FormattedMessage","defineMessages","injectIntl","installAddon","listAddons","uninstallAddon","upgradeAddon","Helmet","Icon","Toolbar","Toast","circleBottomSVG","circleTopSVG","backSVG","toast","messages","activateAndDeactivate","addAddons","addonsSettings","available","availableVersion","back","installed","installedVersion","noUninstallProfile","update","updatesAvailable","updateInstalledAddons","uninstall","addOns","installingAnAddon","success","error","addonUpgraded","addonNotUpgraded","addonInstalled","addonNotInstalled","addonUninstalled","addonNotUninstalled","AddonsControlpanel","constructor","props","onAccordionClick","bind","onInstall","onUninstall","onUpgrade","state","activeIndex","installedAddons","availableAddons","upgradableAddons","isClient","componentDidMount","setState","event","value","preventDefault","then","intl","formatMessage","title","catch","finally","item","newIndex","index","render","loadingAddons","length","map","id","description","uninstall_profile_id","version","upgrade_info","origin","destination","newVersion","document","getElementById","pathname","func","isRequired","arrayOf","shape","string","boolean","addons","loading","location"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/AddonsControlpanel.jsx"],"sourcesContent":["/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/AddonsControlpanel\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport {\n  Accordion,\n  Button,\n  Container,\n  Divider,\n  Header,\n  Label,\n  Message,\n  Segment,\n  Dimmer,\n  Loader,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport {\n  installAddon,\n  listAddons,\n  uninstallAddon,\n  upgradeAddon,\n} from '@plone/volto/actions';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Icon, Toolbar, Toast } from '@plone/volto/components';\nimport circleBottomSVG from '@plone/volto/icons/circle-bottom.svg';\nimport circleTopSVG from '@plone/volto/icons/circle-top.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport { toast } from 'react-toastify';\n\nconst messages = defineMessages({\n  activateAndDeactivate: {\n    id: 'Activate and deactivate',\n    defaultMessage: 'Activate and deactivate add-ons in the lists below.',\n  },\n  addAddons: {\n    id: 'Add Addons',\n    defaultMessage:\n      'To make new add-ons show up here, add them to your buildout configuration, run buildout, and restart the server process. For detailed instructions see',\n  },\n  addonsSettings: {\n    id: 'Add-ons Settings',\n    defaultMessage: 'Add-ons Settings',\n  },\n  available: {\n    id: 'Available',\n    defaultMessage: 'Available',\n  },\n  availableVersion: {\n    id: 'Latest version',\n    defaultMessage: 'Latest version',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  installed: {\n    id: 'Installed',\n    defaultMessage: 'Installed',\n  },\n  installedVersion: {\n    id: 'Installed version',\n    defaultMessage: 'Installed version',\n  },\n  noUninstallProfile: {\n    id: 'No uninstall profile',\n    defaultMessage: 'This addon does not provide an uninstall profile.',\n  },\n  update: {\n    id: 'Update',\n    defaultMessage: 'Update',\n  },\n  updatesAvailable: {\n    id: 'Updates available',\n    defaultMessage: 'Updates available',\n  },\n  updateInstalledAddons: {\n    id: 'Update installed addons:',\n    defaultMessage: 'Update installed addons:',\n  },\n  uninstall: {\n    id: 'Uninstall',\n    defaultMessage: 'Uninstall',\n  },\n  addOns: {\n    id: 'Add-ons',\n    defaultMessage: 'Add-ons',\n  },\n  installingAnAddon: {\n    id: 'Installing a third party add-on',\n    defaultMessage: 'Installing a third party add-on',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  addonUpgraded: {\n    id: 'Addon upgraded succesfuly',\n    defaultMessage: 'Addon upgraded succesfuly',\n  },\n  addonNotUpgraded: {\n    id: 'Addon could not be upgraded',\n    defaultMessage: 'Addon could not be upgraded',\n  },\n  addonInstalled: {\n    id: 'Addon installed succesfuly',\n    defaultMessage: 'Addon installed succesfuly',\n  },\n  addonNotInstalled: {\n    id: 'Addon could not be installed',\n    defaultMessage: 'Addon could not be installed',\n  },\n  addonUninstalled: {\n    id: 'Addon uninstalled succesfuly',\n    defaultMessage: 'Addon uninstalled succesfuly',\n  },\n  addonNotUninstalled: {\n    id: 'Addon could not be uninstalled',\n    defaultMessage: 'Addon could not be uninstalled',\n  },\n});\n\n/**\n * AddonsControlpanel class.\n * @class AddonsControlpanel\n * @extends Component\n */\nclass AddonsControlpanel extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    listAddons: PropTypes.func.isRequired,\n    installAddon: PropTypes.func.isRequired,\n    uninstallAddon: PropTypes.func.isRequired,\n    installedAddons: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        id: PropTypes.string,\n        title: PropTypes.string,\n        version: PropTypes.string,\n        description: PropTypes.string,\n        uninstall_profile_id: PropTypes.string,\n        upgrade_info: PropTypes.shape({\n          available: PropTypes.boolean,\n        }),\n      }),\n    ).isRequired,\n    availableAddons: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        id: PropTypes.string,\n        title: PropTypes.string,\n        version: PropTypes.string,\n        description: PropTypes.string,\n        uninstall_profile_id: PropTypes.string,\n        upgrade_info: PropTypes.shape({\n          available: PropTypes.boolean,\n        }),\n      }),\n    ).isRequired,\n    upgradableAddons: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        id: PropTypes.string,\n        title: PropTypes.string,\n        version: PropTypes.string,\n        description: PropTypes.string,\n        uninstall_profile_id: PropTypes.string,\n        upgrade_info: PropTypes.shape({\n          available: PropTypes.boolean,\n        }),\n      }),\n    ).isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onAccordionClick = this.onAccordionClick.bind(this);\n    this.onInstall = this.onInstall.bind(this);\n    this.onUninstall = this.onUninstall.bind(this);\n    this.onUpgrade = this.onUpgrade.bind(this);\n    this.state = {\n      activeIndex: -1,\n      installedAddons: [],\n      availableAddons: [],\n      upgradableAddons: [],\n      isClient: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.listAddons();\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Install handler\n   * @method onInstall\n   * @param {Object} event Event object.\n   * @param {string} value Id of package to install.\n   * @returns {undefined}\n   */\n  onInstall(event, { value }) {\n    event.preventDefault();\n    this.props\n      .installAddon(value)\n      .then(() => {\n        toast.success(\n          <Toast\n            success\n            title={this.props.intl.formatMessage(messages.success)}\n            content={this.props.intl.formatMessage(messages.addonInstalled, {\n              title: this.props.title,\n            })}\n          />,\n        );\n      })\n      .catch(() => {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.error)}\n            content={this.props.intl.formatMessage(messages.addonNotInstalled)}\n          />,\n        );\n      })\n      .finally(() => this.props.listAddons());\n  }\n\n  /**\n   * Uninstall handler\n   * @method onUninstall\n   * @param {Object} event Event object.\n   * @param {string} value Id of package to uninstall.\n   * @returns {undefined}\n   */\n  onUninstall(event, { value }) {\n    event.preventDefault();\n    this.props\n      .uninstallAddon(value)\n      .then(() => {\n        toast.success(\n          <Toast\n            success\n            title={this.props.intl.formatMessage(messages.success)}\n            content={this.props.intl.formatMessage(messages.addonUninstalled)}\n          />,\n        );\n      })\n      .catch(() => {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.error)}\n            content={this.props.intl.formatMessage(\n              messages.addonNotUninstalled,\n              {\n                title: this.props.title,\n              },\n            )}\n          />,\n        );\n      })\n      .finally(() => this.props.listAddons());\n  }\n\n  /**\n   * Unpgrade handler\n   * @method onUpgrade\n   * @param {Object} event Event object.\n   * @param {string} value Id of package to update.\n   * @returns {undefined}\n   */\n  onUpgrade(event, { value }) {\n    event.preventDefault();\n    this.props\n      .upgradeAddon(value)\n      .then(() => {\n        toast.success(\n          <Toast\n            success\n            title={this.props.intl.formatMessage(messages.success)}\n            content={this.props.intl.formatMessage(messages.addonUpgraded)}\n          />,\n        );\n      })\n      .catch(() => {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.error)}\n            content={this.props.intl.formatMessage(messages.addonNotUpgraded)}\n          />,\n        );\n      })\n      .finally(() => this.props.listAddons());\n  }\n\n  /**\n   * On accordion click handler\n   * @method onAccordionClick\n   * @param {object} event Event object.\n   * @param {object} index Index of the accordion element being clicked\n   * @returns {undefined}\n   */\n  onAccordionClick(event, item) {\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === item.index ? -1 : item.index;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Container id=\"page-addons\" className=\"controlpanel-addons\">\n        <Helmet title={this.props.intl.formatMessage(messages.addOns)} />\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage\n              id=\"Add-ons Settings\"\n              defaultMessage=\"Add-ons Settings\"\n            />\n          </Segment>\n\n          {this.props.loadingAddons ? (\n            <Dimmer active>\n              <Loader />\n            </Dimmer>\n          ) : (\n            <>\n              {this.props.upgradableAddons.length > 0 && (\n                <Message attached>\n                  <Message.Header>\n                    <FormattedMessage\n                      id=\"Updates available\"\n                      defaultMessage=\"Updates available\"\n                    />\n                  </Message.Header>\n                  <FormattedMessage\n                    id=\"Update installed addons\"\n                    defaultMessage=\"Update installed addons\"\n                  />\n                </Message>\n              )}\n              <Segment>\n                <Header as=\"h3\">\n                  <FormattedMessage\n                    id=\"Activate and deactivate\"\n                    defaultMessage=\"Activate and deactivate add-ons in the lists below.\"\n                  />\n                </Header>\n                <FormattedMessage\n                  id=\"Add Addons\"\n                  defaultMessage=\"To make new add-ons show up here, add them to your buildout configuration, run buildout, and restart the server process. For detailed instructions see\"\n                />\n                &nbsp;\n                <a\n                  href=\"http://docs.plone.org/manage/installing/installing_addons.html\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {this.props.intl.formatMessage(messages.installingAnAddon)}\n                </a>\n                .\n              </Segment>\n              <Segment key=\"header-available\" secondary>\n                <FormattedMessage id=\"Available\" defaultMessage=\"Available\" />:\n                <Label circular>{this.props.availableAddons.length}</Label>\n              </Segment>\n              <Segment key=\"body-available\" attached>\n                <Accordion>\n                  <Divider />\n                  {this.props.availableAddons.map((item) => (\n                    <div key={item.id}>\n                      <Accordion.Title\n                        active={this.state.activeIndex === item.id}\n                        index={item.id}\n                        onClick={this.onAccordionClick}\n                      >\n                        {item.title}\n                        <Icon\n                          name={\n                            this.state.activeIndex === item.id\n                              ? circleTopSVG\n                              : circleBottomSVG\n                          }\n                          size=\"23px\"\n                          className={`accordionToggle ${item.title}`}\n                        />\n                      </Accordion.Title>\n                      <Accordion.Content\n                        active={this.state.activeIndex === item.id}\n                      >\n                        <div className=\"description\">{item.description}</div>\n                        {item.uninstall_profile_id === '' && (\n                          <div>\n                            <Message icon=\"warning\" warning>\n                              <FormattedMessage\n                                id=\"No uninstall profile\"\n                                defaultMessage=\"This addon does not provide an uninstall profile.\"\n                              />\n                            </Message>\n                          </div>\n                        )}\n                        <Button.Group floated=\"right\">\n                          <Button\n                            primary\n                            onClick={this.onInstall}\n                            value={item.id}\n                            className=\"installAction\"\n                          >\n                            <FormattedMessage\n                              id=\"Install\"\n                              defaultMessage=\"Install\"\n                              className=\"button-label\"\n                            />\n                          </Button>\n                        </Button.Group>\n                        <div className=\"version\">\n                          <FormattedMessage\n                            id=\"Latest version\"\n                            defaultMessage=\"Latest version\"\n                          />\n                          : &nbsp;\n                          {item.version}\n                        </div>\n                      </Accordion.Content>\n                      <Divider />\n                    </div>\n                  ))}\n                </Accordion>\n              </Segment>\n              <Segment key=\"header-installed\" secondary>\n                <FormattedMessage id=\"Installed\" defaultMessage=\"Installed\" />:\n                <Label circular>{this.props.installedAddons.length}</Label>\n              </Segment>\n              <Segment key=\"body-installed\" attached>\n                <Accordion>\n                  <Divider />\n                  {this.props.installedAddons.map((item) => (\n                    <div key={item.id}>\n                      <Accordion.Title\n                        active={this.state.activeIndex === item.id}\n                        index={item.id}\n                        onClick={this.onAccordionClick}\n                        className={\n                          item.upgrade_info.available ? 'updateAvailable' : ''\n                        }\n                      >\n                        {item.title}\n\n                        {item.upgrade_info.available && (\n                          <Label>\n                            <FormattedMessage\n                              id=\"Update\"\n                              defaultMessage=\"Update\"\n                            />\n                          </Label>\n                        )}\n                        <Icon\n                          name={\n                            this.state.activeIndex === item.id\n                              ? circleTopSVG\n                              : circleBottomSVG\n                          }\n                          size=\"24px\"\n                          className={`accordionToggle ${item.title}`}\n                          color=\"#878f93\"\n                        />\n                      </Accordion.Title>\n                      <Accordion.Content\n                        active={this.state.activeIndex === item.id}\n                      >\n                        <div className=\"description\">{item.description}</div>\n                        <Button.Group floated=\"right\">\n                          {item.upgrade_info.available && (\n                            <Button\n                              primary\n                              onClick={this.onUpgrade}\n                              value={item.id}\n                            >\n                              <FormattedMessage\n                                id=\"upgradeVersions\"\n                                defaultMessage=\"Update from version {origin} to {destination}\"\n                                values={{\n                                  origin: item.upgrade_info.installedVersion,\n                                  destination: item.upgrade_info.newVersion,\n                                }}\n                              />\n                            </Button>\n                          )}\n                          {item.uninstall_profile_id && (\n                            <Button\n                              negative\n                              onClick={this.onUninstall}\n                              value={item.id}\n                              className=\"uninstallAction\"\n                            >\n                              <FormattedMessage\n                                id=\"Uninstall\"\n                                defaultMessage=\"Uninstall\"\n                                className=\"button-label\"\n                              />\n                            </Button>\n                          )}\n                        </Button.Group>\n                        <div className=\"version\">\n                          <FormattedMessage\n                            id=\"Installed version\"\n                            defaultMessage=\"Installed version\"\n                          />\n                          : &nbsp; {item.version}\n                        </div>\n                      </Accordion.Content>\n                      <Divider />\n                    </div>\n                  ))}\n                </Accordion>\n              </Segment>\n            </>\n          )}\n        </Segment.Group>\n\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Link to=\"/controlpanel\" className=\"item\">\n                    <Icon\n                      name={backSVG}\n                      aria-label={this.props.intl.formatMessage(messages.back)}\n                      className=\"contents circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.back)}\n                    />\n                  </Link>\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      installedAddons: state.addons.installedAddons,\n      availableAddons: state.addons.availableAddons,\n      upgradableAddons: state.addons.upgradableAddons,\n      loadingAddons: state.addons.loading,\n      pathname: props.location.pathname,\n    }),\n    { installAddon, listAddons, uninstallAddon, upgradeAddon },\n  ),\n)(AddonsControlpanel);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Activate and deactivate","defaultMessage":"Activate and deactivate add-ons in the lists below."},{"id":"Add Addons","defaultMessage":"To make new add-ons show up here, add them to your buildout configuration, run buildout, and restart the server process. For detailed instructions see"},{"id":"Add-ons Settings","defaultMessage":"Add-ons Settings"},{"id":"Available","defaultMessage":"Available"},{"id":"Latest version","defaultMessage":"Latest version"},{"id":"Back","defaultMessage":"Back"},{"id":"Installed","defaultMessage":"Installed"},{"id":"Installed version","defaultMessage":"Installed version"},{"id":"No uninstall profile","defaultMessage":"This addon does not provide an uninstall profile."},{"id":"Update","defaultMessage":"Update"},{"id":"Updates available","defaultMessage":"Updates available"},{"id":"Update installed addons:","defaultMessage":"Update installed addons:"},{"id":"Uninstall","defaultMessage":"Uninstall"},{"id":"Add-ons","defaultMessage":"Add-ons"},{"id":"Installing a third party add-on","defaultMessage":"Installing a third party add-on"},{"id":"Success","defaultMessage":"Success"},{"id":"Error","defaultMessage":"Error"},{"id":"Addon upgraded succesfuly","defaultMessage":"Addon upgraded succesfuly"},{"id":"Addon could not be upgraded","defaultMessage":"Addon could not be upgraded"},{"id":"Addon installed succesfuly","defaultMessage":"Addon installed succesfuly"},{"id":"Addon could not be installed","defaultMessage":"Addon could not be installed"},{"id":"Addon uninstalled succesfuly","defaultMessage":"Addon uninstalled succesfuly"},{"id":"Addon could not be uninstalled","defaultMessage":"Addon could not be uninstalled"},{"id":"Update installed addons","defaultMessage":"Update installed addons"},{"id":"Install","defaultMessage":"Install"},{"id":"upgradeVersions","defaultMessage":"Update from version {origin} to {destination}"}]}},"sourceType":"module","externalDependencies":[]}