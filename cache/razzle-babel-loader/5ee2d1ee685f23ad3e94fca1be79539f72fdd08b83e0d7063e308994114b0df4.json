{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-block-style/src/index.js\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { BlockStyleWrapperEdit, BlockStyleWrapperView } from './BlockStyleWrapper';\nimport StyleSelectWidget from './Widgets/StyleSelect';\nimport AlignWidget from './Widgets/Align';\nimport StretchWidget from './Widgets/Stretch';\nimport TextAlignWidget from './Widgets/TextAlign';\nimport SliderWidget from './Widgets/Slider';\nimport SizeWidget from './Widgets/Size';\nimport SimpleColorPicker from './Widgets/SimpleColorPicker';\nimport QuadSizeWidget from './Widgets/QuadSize';\nimport './styles.less';\n\n/**\n * Given a block's config object, it wrapps the view and edit in style wrappers\n */\nexport const applyStyleWrapperToBlock = blockConfig => {\n  const BaseEditComponent = blockConfig.edit;\n  let EditComponent = BaseEditComponent;\n  if (!EditComponent._styleWrapped) {\n    EditComponent = props => __jsx(BlockStyleWrapperEdit, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }), __jsx(BaseEditComponent, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    })));\n    EditComponent.displayName = `<EditBlockWithStyleWrapperFor(${blockConfig.id})>`;\n    EditComponent._styleWrapped = true;\n  }\n  const BaseViewComponent = blockConfig.view;\n  let ViewComponent = BaseViewComponent;\n  if (!ViewComponent._styleWrapped) {\n    ViewComponent = props => __jsx(BlockStyleWrapperView, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }), __jsx(BaseViewComponent, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    })));\n    ViewComponent.displayName = `<ViewBlockWithStyleWrapperFor(${blockConfig.id})>`;\n    ViewComponent._styleWrapped = true;\n  }\n  return _objectSpread(_objectSpread({}, blockConfig), {}, {\n    view: ViewComponent,\n    edit: EditComponent\n  });\n};\nconst applyConfig = config => {\n  const {\n    settings\n  } = config;\n  const whitelist = settings.pluggableStylesBlocksWhitelist;\n  const blacklist = settings.pluggableStylesBlocksBlacklist;\n  const {\n    blocksConfig\n  } = config.blocks;\n  const okBlocks = Object.keys(blocksConfig).filter(name => (blacklist ? !blacklist.includes(name) : true) && (whitelist ? whitelist.includes(name) : true));\n  okBlocks.forEach(name => {\n    blocksConfig[name] = applyStyleWrapperToBlock(blocksConfig[name]);\n  });\n  config.widgets.widget.style_select = StyleSelectWidget;\n  config.widgets.widget.style_align = AlignWidget; // avoid conflict for now\n  config.widgets.widget.style_stretch = StretchWidget; // Make stretch widget\n  config.widgets.widget.style_text_align = TextAlignWidget; // avoid conflict for now\n  config.widgets.widget.style_size = SizeWidget; // avoid conflict for now\n  config.widgets.widget.style_simple_color = SimpleColorPicker;\n  config.widgets.widget.slider = SliderWidget;\n  config.widgets.widget.quad_size = QuadSizeWidget;\n\n  // types of blocks that natively integrate with the volto-block-style and\n  // allow passing the style as a prop;\n  config.settings.integratesBlockStyles = [...(config.settings.integratesBlockStyles || [])];\n\n  // Restrict block settings to Layout\n  if (config.settings.layoutOnlyBlockStyles === undefined) {\n    config.settings.layoutOnlyBlockStyles = false;\n  }\n  config.settings.available_colors = ['#bbdbec', '#9dc6d4', '#5a93aa', '#005d7b', '#003d53', '#ebefc6', '#bdd494', '#6bb535', '#1e8339', '#025e37', '#464b0b', '#b5c234', '#777b1a', '#f4f1bc', '#e1e070', '#0070ae', '#fce6dc', '#f39a86', '#e73d5c', '#b92f47', '#8e1206', '#fff6a6', '#ffe525', '#f7a600', '#b94b19', '#8d4107', '#000000', '#6f6f6e', '#929291', '#bcbcbc', '#e3e3e3', '#ffffff'];\n  return config;\n};\nexport default applyConfig;\nexport const installDemoStyles = config => {\n  config.settings.pluggableStyles = [...(config.settings.pluggableStyles || []), {\n    id: 'greenBox',\n    title: 'Green box',\n    cssClass: 'green-demo-box'\n  }, {\n    id: 'blueShade',\n    title: 'Blue Shade',\n    cssClass: 'blue-demo-box',\n    previewComponent: props => __jsx(\"div\", {\n      className: `${props.className} preview-blue-demo-box`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, props.children),\n    viewComponent: props => __jsx(\"div\", {\n      className: \"blue-demo-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, props.children)\n    // TODO: support also editComponent ?\n  }];\n\n  return config;\n};","map":{"version":3,"names":["React","BlockStyleWrapperEdit","BlockStyleWrapperView","StyleSelectWidget","AlignWidget","StretchWidget","TextAlignWidget","SliderWidget","SizeWidget","SimpleColorPicker","QuadSizeWidget","applyStyleWrapperToBlock","blockConfig","BaseEditComponent","edit","EditComponent","_styleWrapped","props","displayName","id","BaseViewComponent","view","ViewComponent","applyConfig","config","settings","whitelist","pluggableStylesBlocksWhitelist","blacklist","pluggableStylesBlocksBlacklist","blocksConfig","blocks","okBlocks","Object","keys","filter","name","includes","forEach","widgets","widget","style_select","style_align","style_stretch","style_text_align","style_size","style_simple_color","slider","quad_size","integratesBlockStyles","layoutOnlyBlockStyles","undefined","available_colors","installDemoStyles","pluggableStyles","title","cssClass","previewComponent","className","children","viewComponent"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-block-style/src/index.js"],"sourcesContent":["import React from 'react';\nimport {\n  BlockStyleWrapperEdit,\n  BlockStyleWrapperView,\n} from './BlockStyleWrapper';\nimport StyleSelectWidget from './Widgets/StyleSelect';\nimport AlignWidget from './Widgets/Align';\nimport StretchWidget from './Widgets/Stretch';\n\nimport TextAlignWidget from './Widgets/TextAlign';\nimport SliderWidget from './Widgets/Slider';\nimport SizeWidget from './Widgets/Size';\nimport SimpleColorPicker from './Widgets/SimpleColorPicker';\nimport QuadSizeWidget from './Widgets/QuadSize';\n\nimport './styles.less';\n\n/**\n * Given a block's config object, it wrapps the view and edit in style wrappers\n */\nexport const applyStyleWrapperToBlock = (blockConfig) => {\n  const BaseEditComponent = blockConfig.edit;\n  let EditComponent = BaseEditComponent;\n  if (!EditComponent._styleWrapped) {\n    EditComponent = (props) => (\n      <BlockStyleWrapperEdit {...props}>\n        <BaseEditComponent {...props} />\n      </BlockStyleWrapperEdit>\n    );\n    EditComponent.displayName = `<EditBlockWithStyleWrapperFor(${blockConfig.id})>`;\n    EditComponent._styleWrapped = true;\n  }\n\n  const BaseViewComponent = blockConfig.view;\n  let ViewComponent = BaseViewComponent;\n  if (!ViewComponent._styleWrapped) {\n    ViewComponent = (props) => (\n      <BlockStyleWrapperView {...props}>\n        <BaseViewComponent {...props} />\n      </BlockStyleWrapperView>\n    );\n    ViewComponent.displayName = `<ViewBlockWithStyleWrapperFor(${blockConfig.id})>`;\n    ViewComponent._styleWrapped = true;\n  }\n  return {\n    ...blockConfig,\n    view: ViewComponent,\n    edit: EditComponent,\n  };\n};\n\nconst applyConfig = (config) => {\n  const { settings } = config;\n  const whitelist = settings.pluggableStylesBlocksWhitelist;\n  const blacklist = settings.pluggableStylesBlocksBlacklist;\n  const { blocksConfig } = config.blocks;\n\n  const okBlocks = Object.keys(blocksConfig).filter(\n    (name) =>\n      (blacklist ? !blacklist.includes(name) : true) &&\n      (whitelist ? whitelist.includes(name) : true),\n  );\n  okBlocks.forEach((name) => {\n    blocksConfig[name] = applyStyleWrapperToBlock(blocksConfig[name]);\n  });\n\n  config.widgets.widget.style_select = StyleSelectWidget;\n  config.widgets.widget.style_align = AlignWidget; // avoid conflict for now\n  config.widgets.widget.style_stretch = StretchWidget; // Make stretch widget\n  config.widgets.widget.style_text_align = TextAlignWidget; // avoid conflict for now\n  config.widgets.widget.style_size = SizeWidget; // avoid conflict for now\n  config.widgets.widget.style_simple_color = SimpleColorPicker;\n  config.widgets.widget.slider = SliderWidget;\n  config.widgets.widget.quad_size = QuadSizeWidget;\n\n  // types of blocks that natively integrate with the volto-block-style and\n  // allow passing the style as a prop;\n  config.settings.integratesBlockStyles = [\n    ...(config.settings.integratesBlockStyles || []),\n  ];\n\n  // Restrict block settings to Layout\n  if (config.settings.layoutOnlyBlockStyles === undefined) {\n    config.settings.layoutOnlyBlockStyles = false;\n  }\n\n  config.settings.available_colors = [\n    '#bbdbec',\n    '#9dc6d4',\n    '#5a93aa',\n    '#005d7b',\n    '#003d53',\n    '#ebefc6',\n    '#bdd494',\n    '#6bb535',\n    '#1e8339',\n    '#025e37',\n    '#464b0b',\n    '#b5c234',\n    '#777b1a',\n    '#f4f1bc',\n    '#e1e070',\n    '#0070ae',\n    '#fce6dc',\n    '#f39a86',\n    '#e73d5c',\n    '#b92f47',\n    '#8e1206',\n    '#fff6a6',\n    '#ffe525',\n    '#f7a600',\n    '#b94b19',\n    '#8d4107',\n    '#000000',\n    '#6f6f6e',\n    '#929291',\n    '#bcbcbc',\n    '#e3e3e3',\n    '#ffffff',\n  ];\n\n  return config;\n};\n\nexport default applyConfig;\n\nexport const installDemoStyles = (config) => {\n  config.settings.pluggableStyles = [\n    ...(config.settings.pluggableStyles || []),\n    {\n      id: 'greenBox',\n      title: 'Green box',\n      cssClass: 'green-demo-box',\n    },\n    {\n      id: 'blueShade',\n      title: 'Blue Shade',\n      cssClass: 'blue-demo-box',\n      previewComponent: (props) => (\n        <div className={`${props.className} preview-blue-demo-box`}>\n          {props.children}\n        </div>\n      ),\n      viewComponent: (props) => (\n        <div className=\"blue-demo-box\">{props.children}</div>\n      ),\n      // TODO: support also editComponent ?\n    },\n  ];\n\n  return config;\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}