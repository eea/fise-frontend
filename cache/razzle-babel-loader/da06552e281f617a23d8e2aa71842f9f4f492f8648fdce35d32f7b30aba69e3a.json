{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Rules/Rules.jsx\";\nvar __jsx = React.createElement;\n/**\n * Rules container.\n * @module components/manage/Rules/Rules\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { Button, Checkbox, Container, Segment, Select, Table } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { addRule, getRules, enableRules, disableRules, applyRulesToSubfolders, unapplyRulesToSubfolders, removeRules } from '@plone/volto/actions';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nvar messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  rules: {\n    \"id\": \"Rules\",\n    \"defaultMessage\": \"Rules\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  add: {\n    \"id\": \"Added\",\n    \"defaultMessage\": \"Added\"\n  },\n  enable: {\n    \"id\": \"Enabled\",\n    \"defaultMessage\": \"Enabled\"\n  },\n  disable: {\n    \"id\": \"Disabled\",\n    \"defaultMessage\": \"Disabled\"\n  },\n  apply: {\n    \"id\": \"Applied to subfolders\",\n    \"defaultMessage\": \"Applied to subfolders\"\n  },\n  unapply: {\n    \"id\": \"Disabled apply to subfolders\",\n    \"defaultMessage\": \"Disabled apply to subfolders\"\n  },\n  remove: {\n    \"id\": \"Unassigned\",\n    \"defaultMessage\": \"Unassigned\"\n  }\n});\n\n/**\n * Rules class.\n * @class Rules\n * @extends Component\n */\nvar Rules = /*#__PURE__*/function (_Component) {\n  _inherits(Rules, _Component);\n  var _super = _createSuper(Rules);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  function Rules(props) {\n    var _this;\n    _classCallCheck(this, Rules);\n    _this = _super.call(this, props);\n    _defineProperty(_assertThisInitialized(_this), \"handleCheckRule\", function (rule) {\n      var rules = _this.state.checkedRules;\n      if (rules.includes(rule)) {\n        var index = rules.indexOf(rule);\n        if (index > -1) {\n          var newRules = rules;\n          newRules.splice(index, 1);\n          _this.setState({\n            checkedRules: newRules\n          });\n        }\n      } else {\n        _this.setState({\n          checkedRules: [].concat(_toConsumableArray(_this.state.checkedRules), [rule])\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleDisableRules\", function () {\n      _this.props.disableRules(getBaseUrl(_this.props.pathname), _this.state.checkedRules);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleEnableRules\", function () {\n      _this.props.enableRules(getBaseUrl(_this.props.pathname), _this.state.checkedRules);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleApplyToSubfolder\", function () {\n      _this.props.applyRulesToSubfolders(getBaseUrl(_this.props.pathname), _this.state.checkedRules);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleUnapplyToSubfolder\", function () {\n      _this.props.unapplyRulesToSubfolders(getBaseUrl(_this.props.pathname), _this.state.checkedRules);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleRemoveRules\", function () {\n      _this.props.removeRules(getBaseUrl(_this.props.pathname), _this.state.checkedRules);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleAddRule\", function () {\n      _this.props.addRule(getBaseUrl(_this.props.pathname), _this.state.newRule);\n    });\n    _this.state = {\n      isClient: false,\n      checkedRules: [],\n      newRule: ''\n    };\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(Rules, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getRules(getBaseUrl(this.props.pathname));\n      this.setState({\n        isClient: true\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {}\n\n    /**\n     * Component will receive props\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Next properties\n     * @returns {undefined}\n     */\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.rules.add.loading && nextProps.rules.add.loaded) {\n        this.props.getRules(getBaseUrl(this.props.pathname));\n        this.setState({\n          newRule: ''\n        });\n        toast.success(__jsx(Toast, {\n          success: true,\n          title: this.props.intl.formatMessage(messages.success),\n          content: this.props.intl.formatMessage(messages.add),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 9\n          }\n        }));\n      }\n      if (this.props.rules.disable.loading && nextProps.rules.disable.loaded) {\n        this.props.getRules(getBaseUrl(this.props.pathname));\n        this.setState({\n          checkedRules: []\n        });\n        toast.success(__jsx(Toast, {\n          success: true,\n          title: this.props.intl.formatMessage(messages.success),\n          content: this.props.intl.formatMessage(messages.disable),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 9\n          }\n        }));\n      }\n      if (this.props.rules.enable.loading && nextProps.rules.enable.loaded) {\n        this.props.getRules(getBaseUrl(this.props.pathname));\n        this.setState({\n          checkedRules: []\n        });\n        toast.success(__jsx(Toast, {\n          success: true,\n          title: this.props.intl.formatMessage(messages.success),\n          content: this.props.intl.formatMessage(messages.enable),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 9\n          }\n        }));\n      }\n      if (this.props.rules.apply.loading && nextProps.rules.apply.loaded) {\n        this.props.getRules(getBaseUrl(this.props.pathname));\n        this.setState({\n          checkedRules: []\n        });\n        toast.success(__jsx(Toast, {\n          success: true,\n          title: this.props.intl.formatMessage(messages.success),\n          content: this.props.intl.formatMessage(messages.apply),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 9\n          }\n        }));\n      }\n      if (this.props.rules.unapply.loading && nextProps.rules.unapply.loaded) {\n        this.props.getRules(getBaseUrl(this.props.pathname));\n        this.setState({\n          checkedRules: []\n        });\n        toast.success(__jsx(Toast, {\n          success: true,\n          title: this.props.intl.formatMessage(messages.success),\n          content: this.props.intl.formatMessage(messages.unapply),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 9\n          }\n        }));\n      }\n      if (this.props.rules.remove.loading && nextProps.rules.remove.loaded) {\n        this.props.getRules(getBaseUrl(this.props.pathname));\n        this.setState({\n          checkedRules: []\n        });\n        toast.success(__jsx(Toast, {\n          success: true,\n          title: this.props.intl.formatMessage(messages.success),\n          content: this.props.intl.formatMessage(messages.remove),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 9\n          }\n        }));\n      }\n    }\n\n    /**\n     * Rule check handler\n     * @method handleCheckRule\n     * @returns {undefined}\n     */\n  }, {\n    key: \"render\",\n    value:\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n    function render() {\n      var _this$props$rules,\n        _this2 = this;\n      var _ref = ((_this$props$rules = this.props.rules) === null || _this$props$rules === void 0 ? void 0 : _this$props$rules.rules) || {},\n        acquired_rules = _ref.acquired_rules,\n        assigned_rules = _ref.assigned_rules,\n        assignable_rules = _ref.assignable_rules;\n      return __jsx(Container, {\n        id: \"rules\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 7\n        }\n      }, __jsx(Helmet, {\n        title: this.props.intl.formatMessage(messages.rules),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }\n      }), __jsx(Segment.Group, {\n        raised: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }\n      }, __jsx(Segment, {\n        className: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Content rules for {title}\",\n        defaultMessage: \"Content rules for {title}\",\n        values: {\n          title: __jsx(\"q\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 32\n            }\n          }, this.props.title)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }\n      })), __jsx(Segment, {\n        secondary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"The following content rules are active in this Page. Use the content rules control panel to create new rules or delete or modify existing ones.\",\n        defaultMessage: \"The following content rules are active in this Page. Use the content rules control panel to create new rules or delete or modify existing ones.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }\n      }))), acquired_rules && acquired_rules.length > 0 && __jsx(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }\n      }, __jsx(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }\n      }, __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 17\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Content rules from parent folders\",\n        defaultMessage: \"Content rules from parent folders\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 19\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 17\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Active\",\n        defaultMessage: \"Active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 19\n        }\n      }))), acquired_rules.map(function (rule, i) {\n        return __jsx(Table.Row, {\n          key: i,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }\n        }, __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 19\n          }\n        }, rule.title, \"(\", rule.trigger, \")\"), __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 19\n          }\n        }, rule.enabled && __jsx(\"span\", {\n          style: {\n            color: 'green'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 23\n          }\n        }, __jsx(Icon, {\n          name: checkSVG,\n          className: \"contents circled\",\n          size: \"10px\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }\n        }))));\n      }))), assignable_rules && assignable_rules.length > 0 && __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Available content rules:\",\n        defaultMessage: \"Available content rules:\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }\n      }), __jsx(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }\n      }, __jsx(Select, {\n        placeholder: \"Select rule\",\n        value: this.state.newRule,\n        onChange: function onChange(e, _ref2) {\n          var value = _ref2.value;\n          return _this2.setState({\n            newRule: value\n          });\n        },\n        options: assignable_rules.map(function (rule, i) {\n          return {\n            key: rule.id,\n            value: rule.id,\n            text: rule.title\n          };\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 15\n        }\n      }), __jsx(Button, {\n        onClick: this.handleAddRule,\n        primary: true,\n        style: {\n          marginLeft: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 15\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Add\",\n        defaultMessage: \"Add\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 17\n        }\n      })))), assigned_rules && assigned_rules.length > 0 && __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }\n      }, __jsx(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }\n      }, __jsx(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 17\n        }\n      }, __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Select\",\n        defaultMessage: \"Select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 21\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Active content rules in this Page\",\n        defaultMessage: \"Active content rules in this Page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Applies to subfolders?\",\n        defaultMessage: \"Applies to subfolders?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 21\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Enabled here?\",\n        defaultMessage: \"Enabled here?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Enabled?\",\n        defaultMessage: \"Enabled?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }\n      }))), assigned_rules.map(function (rule, i) {\n        return __jsx(Table.Row, {\n          key: i,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 19\n          }\n        }, __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 21\n          }\n        }, __jsx(Checkbox, {\n          onChange: function onChange(o, _ref3) {\n            var value = _ref3.value;\n            return _this2.handleCheckRule(value);\n          },\n          value: rule.id,\n          checked: _this2.state.checkedRules.includes(rule.id),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 23\n          }\n        })), __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 21\n          }\n        }, rule.title, \"(\", rule.trigger, \")\"), __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 21\n          }\n        }, rule.bubbles && __jsx(\"span\", {\n          style: {\n            color: 'green'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 25\n          }\n        }, __jsx(Icon, {\n          name: checkSVG,\n          className: \"contents circled\",\n          size: \"10px\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 27\n          }\n        }))), __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 21\n          }\n        }, rule.enabled && __jsx(\"span\", {\n          style: {\n            color: 'green'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 25\n          }\n        }, __jsx(Icon, {\n          name: checkSVG,\n          className: \"contents circled\",\n          size: \"10px\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 27\n          }\n        }))), __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 21\n          }\n        }, rule.global_enabled && __jsx(\"span\", {\n          style: {\n            color: 'green'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 25\n          }\n        }, __jsx(Icon, {\n          name: checkSVG,\n          className: \"contents circled\",\n          size: \"10px\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 27\n          }\n        }))));\n      }))), __jsx(Button, {\n        onClick: this.handleEnableRules,\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Enable\",\n        defaultMessage: \"Enable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }\n      })), __jsx(Button, {\n        onClick: this.handleDisableRules,\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Disable\",\n        defaultMessage: \"Disable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 15\n        }\n      })), __jsx(Button, {\n        onClick: this.handleApplyToSubfolder,\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Apply to subfolders\",\n        defaultMessage: \"Apply to subfolders\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 15\n        }\n      })), __jsx(Button, {\n        onClick: this.handleUnapplyToSubfolder,\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Disable apply to subfolders\",\n        defaultMessage: \"Disable apply to subfolders\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 15\n        }\n      })), __jsx(Button, {\n        color: \"youtube\",\n        onClick: this.handleRemoveRules,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Unassign\",\n        defaultMessage: \"Unassign\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 15\n        }\n      }))), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(Link, {\n          to: \"\".concat(getBaseUrl(this.props.pathname)),\n          className: \"item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 17\n          }\n        }, __jsx(Icon, {\n          name: backSVG,\n          className: \"contents circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.back),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 19\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return Rules;\n}(Component);\n_defineProperty(Rules, \"propTypes\", {\n  getRules: PropTypes.func.isRequired,\n  addRule: PropTypes.func.isRequired,\n  enableRules: PropTypes.func.isRequired,\n  disableRules: PropTypes.func.isRequired,\n  applyRulesToSubfolders: PropTypes.func.isRequired,\n  unapplyRulesToSubfolders: PropTypes.func.isRequired,\n  removeRules: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired\n});\nexport default compose(injectIntl, connect(function (state, props) {\n  var _state$content$data;\n  return {\n    rules: state.rules,\n    pathname: props.location.pathname,\n    title: ((_state$content$data = state.content.data) === null || _state$content$data === void 0 ? void 0 : _state$content$data.title) || ''\n  };\n}, {\n  addRule: addRule,\n  getRules: getRules,\n  enableRules: enableRules,\n  disableRules: disableRules,\n  applyRulesToSubfolders: applyRulesToSubfolders,\n  unapplyRulesToSubfolders: unapplyRulesToSubfolders,\n  removeRules: removeRules\n}))(Rules);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","connect","compose","Link","Portal","Button","Checkbox","Container","Segment","Select","Table","FormattedMessage","defineMessages","injectIntl","getBaseUrl","addRule","getRules","enableRules","disableRules","applyRulesToSubfolders","unapplyRulesToSubfolders","removeRules","Icon","Toolbar","backSVG","checkSVG","toast","Toast","messages","back","rules","success","add","enable","disable","apply","unapply","remove","Rules","props","rule","state","checkedRules","includes","index","indexOf","newRules","splice","setState","pathname","newRule","isClient","prevProps","prevState","nextProps","loading","loaded","intl","formatMessage","acquired_rules","assigned_rules","assignable_rules","title","length","map","i","trigger","enabled","color","display","e","value","key","id","text","handleAddRule","marginLeft","o","handleCheckRule","bubbles","global_enabled","handleEnableRules","handleDisableRules","handleApplyToSubfolder","handleUnapplyToSubfolder","handleRemoveRules","document","getElementById","func","isRequired","string","location","content","data"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Rules/Rules.jsx"],"sourcesContent":["/**\n * Rules container.\n * @module components/manage/Rules/Rules\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Segment,\n  Select,\n  Table,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport {\n  addRule,\n  getRules,\n  enableRules,\n  disableRules,\n  applyRulesToSubfolders,\n  unapplyRulesToSubfolders,\n  removeRules,\n} from '@plone/volto/actions';\n\nimport { Icon, Toolbar } from '@plone/volto/components';\n\nimport backSVG from '@plone/volto/icons/back.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\n\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  rules: {\n    id: 'Rules',\n    defaultMessage: 'Rules',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  add: {\n    id: 'Added',\n    defaultMessage: 'Added',\n  },\n  enable: {\n    id: 'Enabled',\n    defaultMessage: 'Enabled',\n  },\n  disable: {\n    id: 'Disabled',\n    defaultMessage: 'Disabled',\n  },\n  apply: {\n    id: 'Applied to subfolders',\n    defaultMessage: 'Applied to subfolders',\n  },\n  unapply: {\n    id: 'Disabled apply to subfolders',\n    defaultMessage: 'Disabled apply to subfolders',\n  },\n  remove: {\n    id: 'Unassigned',\n    defaultMessage: 'Unassigned',\n  },\n});\n\n/**\n * Rules class.\n * @class Rules\n * @extends Component\n */\nclass Rules extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getRules: PropTypes.func.isRequired,\n    addRule: PropTypes.func.isRequired,\n    enableRules: PropTypes.func.isRequired,\n    disableRules: PropTypes.func.isRequired,\n    applyRulesToSubfolders: PropTypes.func.isRequired,\n    unapplyRulesToSubfolders: PropTypes.func.isRequired,\n    removeRules: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClient: false,\n      checkedRules: [],\n      newRule: '',\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getRules(getBaseUrl(this.props.pathname));\n    this.setState({ isClient: true });\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.rules.add.loading && nextProps.rules.add.loaded) {\n      this.props.getRules(getBaseUrl(this.props.pathname));\n      this.setState({ newRule: '' });\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.add)}\n        />,\n      );\n    }\n    if (this.props.rules.disable.loading && nextProps.rules.disable.loaded) {\n      this.props.getRules(getBaseUrl(this.props.pathname));\n      this.setState({ checkedRules: [] });\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.disable)}\n        />,\n      );\n    }\n    if (this.props.rules.enable.loading && nextProps.rules.enable.loaded) {\n      this.props.getRules(getBaseUrl(this.props.pathname));\n      this.setState({ checkedRules: [] });\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.enable)}\n        />,\n      );\n    }\n    if (this.props.rules.apply.loading && nextProps.rules.apply.loaded) {\n      this.props.getRules(getBaseUrl(this.props.pathname));\n      this.setState({ checkedRules: [] });\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.apply)}\n        />,\n      );\n    }\n    if (this.props.rules.unapply.loading && nextProps.rules.unapply.loaded) {\n      this.props.getRules(getBaseUrl(this.props.pathname));\n      this.setState({ checkedRules: [] });\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.unapply)}\n        />,\n      );\n    }\n\n    if (this.props.rules.remove.loading && nextProps.rules.remove.loaded) {\n      this.props.getRules(getBaseUrl(this.props.pathname));\n      this.setState({ checkedRules: [] });\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.remove)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Rule check handler\n   * @method handleCheckRule\n   * @returns {undefined}\n   */\n  handleCheckRule = (rule) => {\n    const rules = this.state.checkedRules;\n    if (rules.includes(rule)) {\n      const index = rules.indexOf(rule);\n      if (index > -1) {\n        let newRules = rules;\n        newRules.splice(index, 1);\n        this.setState({ checkedRules: newRules });\n      }\n    } else {\n      this.setState({\n        checkedRules: [...this.state.checkedRules, rule],\n      });\n    }\n  };\n\n  /**\n   * Disable rules handler\n   * @method handleDisableRules\n   * @returns {undefined}\n   */\n  handleDisableRules = () => {\n    this.props.disableRules(\n      getBaseUrl(this.props.pathname),\n      this.state.checkedRules,\n    );\n  };\n\n  /**\n   * Enable rules handler\n   * @method handleEnableRules\n   * @returns {undefined}\n   */\n  handleEnableRules = () => {\n    this.props.enableRules(\n      getBaseUrl(this.props.pathname),\n      this.state.checkedRules,\n    );\n  };\n\n  /**\n   * Apply rules to subfolder handler\n   * @method handleApplyToSubfolder\n   * @returns {undefined}\n   */\n  handleApplyToSubfolder = () => {\n    this.props.applyRulesToSubfolders(\n      getBaseUrl(this.props.pathname),\n      this.state.checkedRules,\n    );\n  };\n\n  /**\n   * Unapply rules to subfolder handler\n   * @method handleUnapplyToSubfolder\n   * @returns {undefined}\n   */\n  handleUnapplyToSubfolder = () => {\n    this.props.unapplyRulesToSubfolders(\n      getBaseUrl(this.props.pathname),\n      this.state.checkedRules,\n    );\n  };\n\n  /**\n   * Remove rules handler\n   * @method handleRemoveRules\n   * @returns {undefined}\n   */\n  handleRemoveRules = () => {\n    this.props.removeRules(\n      getBaseUrl(this.props.pathname),\n      this.state.checkedRules,\n    );\n  };\n\n  /**\n   * Remove rules handler\n   * @method handleAddRule\n   * @returns {undefined}\n   */\n  handleAddRule = () => {\n    this.props.addRule(getBaseUrl(this.props.pathname), this.state.newRule);\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { acquired_rules, assigned_rules, assignable_rules } =\n      this.props.rules?.rules || {};\n    return (\n      <Container id=\"rules\">\n        <Helmet title={this.props.intl.formatMessage(messages.rules)} />\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage\n              id=\"Content rules for {title}\"\n              defaultMessage=\"Content rules for {title}\"\n              values={{ title: <q>{this.props.title}</q> }}\n            />\n          </Segment>\n          <Segment secondary>\n            <FormattedMessage\n              id=\"The following content rules are active in this Page. Use the content rules control panel to create new rules or delete or modify existing ones.\"\n              defaultMessage=\"The following content rules are active in this Page. Use the content rules control panel to create new rules or delete or modify existing ones.\"\n            />\n          </Segment>\n        </Segment.Group>\n\n        {acquired_rules && acquired_rules.length > 0 && (\n          <Table>\n            <Table.Body>\n              <Table.Row>\n                <Table.HeaderCell>\n                  <FormattedMessage\n                    id=\"Content rules from parent folders\"\n                    defaultMessage=\"Content rules from parent folders\"\n                  />\n                </Table.HeaderCell>\n                <Table.HeaderCell>\n                  <FormattedMessage id=\"Active\" defaultMessage=\"Active\" />\n                </Table.HeaderCell>\n              </Table.Row>\n\n              {acquired_rules.map((rule, i) => (\n                <Table.Row key={i}>\n                  <Table.Cell>\n                    {/* this can be a link to the control panel */}\n                    {rule.title}({rule.trigger})\n                  </Table.Cell>\n                  <Table.Cell>\n                    {rule.enabled && (\n                      <span style={{ color: 'green' }}>\n                        <Icon\n                          name={checkSVG}\n                          className=\"contents circled\"\n                          size=\"10px\"\n                        />\n                      </span>\n                    )}\n                  </Table.Cell>\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        )}\n        {assignable_rules && assignable_rules.length > 0 && (\n          <Segment>\n            <FormattedMessage\n              id=\"Available content rules:\"\n              defaultMessage=\"Available content rules:\"\n            />\n            <div style={{ display: 'flex' }}>\n              <Select\n                placeholder=\"Select rule\"\n                value={this.state.newRule}\n                onChange={(e, { value }) => this.setState({ newRule: value })}\n                options={assignable_rules.map((rule, i) => {\n                  return { key: rule.id, value: rule.id, text: rule.title };\n                })}\n              />\n              <Button\n                onClick={this.handleAddRule}\n                primary\n                style={{ marginLeft: '10px' }}\n              >\n                <FormattedMessage id=\"Add\" defaultMessage=\"Add\" />\n              </Button>\n            </div>\n          </Segment>\n        )}\n        {assigned_rules && assigned_rules.length > 0 && (\n          <React.Fragment>\n            <Table>\n              <Table.Body>\n                <Table.Row>\n                  <Table.HeaderCell>\n                    <FormattedMessage id=\"Select\" defaultMessage=\"Select\" />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <FormattedMessage\n                      id=\"Active content rules in this Page\"\n                      defaultMessage=\"Active content rules in this Page\"\n                    />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <FormattedMessage\n                      id=\"Applies to subfolders?\"\n                      defaultMessage=\"Applies to subfolders?\"\n                    />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <FormattedMessage\n                      id=\"Enabled here?\"\n                      defaultMessage=\"Enabled here?\"\n                    />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <FormattedMessage id=\"Enabled?\" defaultMessage=\"Enabled?\" />\n                  </Table.HeaderCell>\n                </Table.Row>\n                {assigned_rules.map((rule, i) => (\n                  <Table.Row key={i}>\n                    <Table.Cell>\n                      <Checkbox\n                        onChange={(o, { value }) => this.handleCheckRule(value)}\n                        value={rule.id}\n                        checked={this.state.checkedRules.includes(rule.id)}\n                      />\n                    </Table.Cell>\n                    <Table.Cell>\n                      {rule.title}({rule.trigger})\n                    </Table.Cell>\n                    <Table.Cell>\n                      {rule.bubbles && (\n                        <span style={{ color: 'green' }}>\n                          <Icon\n                            name={checkSVG}\n                            className=\"contents circled\"\n                            size=\"10px\"\n                          />\n                        </span>\n                      )}\n                    </Table.Cell>\n                    <Table.Cell>\n                      {rule.enabled && (\n                        <span style={{ color: 'green' }}>\n                          <Icon\n                            name={checkSVG}\n                            className=\"contents circled\"\n                            size=\"10px\"\n                          />\n                        </span>\n                      )}\n                    </Table.Cell>\n                    <Table.Cell>\n                      {rule.global_enabled && (\n                        <span style={{ color: 'green' }}>\n                          <Icon\n                            name={checkSVG}\n                            className=\"contents circled\"\n                            size=\"10px\"\n                          />\n                        </span>\n                      )}\n                    </Table.Cell>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n            <Button onClick={this.handleEnableRules} primary>\n              <FormattedMessage id=\"Enable\" defaultMessage=\"Enable\" />\n            </Button>\n            <Button onClick={this.handleDisableRules} primary>\n              <FormattedMessage id=\"Disable\" defaultMessage=\"Disable\" />\n            </Button>\n            <Button onClick={this.handleApplyToSubfolder} primary>\n              <FormattedMessage\n                id=\"Apply to subfolders\"\n                defaultMessage=\"Apply to subfolders\"\n              />\n            </Button>\n            <Button onClick={this.handleUnapplyToSubfolder} primary>\n              <FormattedMessage\n                id=\"Disable apply to subfolders\"\n                defaultMessage=\"Disable apply to subfolders\"\n              />\n            </Button>\n            <Button color=\"youtube\" onClick={this.handleRemoveRules}>\n              <FormattedMessage id=\"Unassign\" defaultMessage=\"Unassign\" />\n            </Button>\n          </React.Fragment>\n        )}\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link\n                  to={`${getBaseUrl(this.props.pathname)}`}\n                  className=\"item\"\n                >\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      rules: state.rules,\n      pathname: props.location.pathname,\n      title: state.content.data?.title || '',\n    }),\n    {\n      addRule,\n      getRules,\n      enableRules,\n      disableRules,\n      applyRulesToSubfolders,\n      unapplyRulesToSubfolders,\n      removeRules,\n    },\n  ),\n)(Rules);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"Rules","defaultMessage":"Rules"},{"id":"Success","defaultMessage":"Success"},{"id":"Added","defaultMessage":"Added"},{"id":"Enabled","defaultMessage":"Enabled"},{"id":"Disabled","defaultMessage":"Disabled"},{"id":"Applied to subfolders","defaultMessage":"Applied to subfolders"},{"id":"Disabled apply to subfolders","defaultMessage":"Disabled apply to subfolders"},{"id":"Unassigned","defaultMessage":"Unassigned"},{"id":"Content rules for {title}","defaultMessage":"Content rules for {title}"},{"id":"The following content rules are active in this Page. Use the content rules control panel to create new rules or delete or modify existing ones.","defaultMessage":"The following content rules are active in this Page. Use the content rules control panel to create new rules or delete or modify existing ones."},{"id":"Content rules from parent folders","defaultMessage":"Content rules from parent folders"},{"id":"Active","defaultMessage":"Active"},{"id":"Available content rules:","defaultMessage":"Available content rules:"},{"id":"Add","defaultMessage":"Add"},{"id":"Select","defaultMessage":"Select"},{"id":"Active content rules in this Page","defaultMessage":"Active content rules in this Page"},{"id":"Applies to subfolders?","defaultMessage":"Applies to subfolders?"},{"id":"Enabled here?","defaultMessage":"Enabled here?"},{"id":"Enabled?","defaultMessage":"Enabled?"},{"id":"Enable","defaultMessage":"Enable"},{"id":"Disable","defaultMessage":"Disable"},{"id":"Apply to subfolders","defaultMessage":"Apply to subfolders"},{"id":"Disable apply to subfolders","defaultMessage":"Disable apply to subfolders"},{"id":"Unassign","defaultMessage":"Unassign"}]}},"sourceType":"module","externalDependencies":[]}