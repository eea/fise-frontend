{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _remove from \"lodash/remove\";\nimport _map from \"lodash/map\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Table/Edit.jsx\";\nvar __jsx = React.createElement;\n/**\n * Edit text block.\n * @module components/manage/Blocks/Title/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { Button, Segment, Table, Form } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport cx from 'classnames';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport Cell from '@plone/volto/components/manage/Blocks/Table/Cell';\nimport { Field, Icon } from '@plone/volto/components';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport rowBeforeSVG from '@plone/volto/icons/row-before.svg';\nimport rowAfterSVG from '@plone/volto/icons/row-after.svg';\nimport colBeforeSVG from '@plone/volto/icons/column-before.svg';\nimport colAfterSVG from '@plone/volto/icons/column-after.svg';\nimport rowDeleteSVG from '@plone/volto/icons/row-delete.svg';\nimport colDeleteSVG from '@plone/volto/icons/column-delete.svg';\nvar getId = function getId() {\n  return Math.floor(Math.random() * Math.pow(2, 24)).toString(32);\n};\nvar valueToDraft = function valueToDraft(value) {\n  return {\n    blocks: [{\n      data: {},\n      depth: 0,\n      entityRanges: [],\n      inlineStyleRanges: [],\n      key: getId(),\n      text: value,\n      type: 'unstyled'\n    }],\n    entityMap: {}\n  };\n};\nvar emptyCell = function emptyCell(type) {\n  return {\n    key: getId(),\n    type: type || 'data',\n    value: valueToDraft('')\n  };\n};\nvar emptyRow = function emptyRow(cells) {\n  return {\n    key: getId(),\n    cells: _map(cells, function () {\n      return emptyCell();\n    })\n  };\n};\nvar initialTable = function initialTable() {\n  return {\n    fixed: true,\n    compact: false,\n    basic: false,\n    celled: true,\n    inverted: false,\n    striped: false,\n    rows: [{\n      key: getId(),\n      cells: [{\n        key: getId(),\n        type: 'header',\n        value: valueToDraft('')\n      }, {\n        key: getId(),\n        type: 'header',\n        value: valueToDraft('')\n      }]\n    }, {\n      key: getId(),\n      cells: [{\n        key: getId(),\n        type: 'data',\n        value: valueToDraft('')\n      }, {\n        key: getId(),\n        type: 'data',\n        value: valueToDraft('')\n      }]\n    }]\n  };\n};\nvar messages = defineMessages({\n  insertRowBefore: {\n    \"id\": \"Insert row before\",\n    \"defaultMessage\": \"Insert row before\"\n  },\n  insertRowAfter: {\n    \"id\": \"Insert row after\",\n    \"defaultMessage\": \"Insert row after\"\n  },\n  deleteRow: {\n    \"id\": \"Delete row\",\n    \"defaultMessage\": \"Delete row\"\n  },\n  insertColBefore: {\n    \"id\": \"Insert col before\",\n    \"defaultMessage\": \"Insert col before\"\n  },\n  insertColAfter: {\n    \"id\": \"Insert col after\",\n    \"defaultMessage\": \"Insert col after\"\n  },\n  deleteCol: {\n    \"id\": \"Delete col\",\n    \"defaultMessage\": \"Delete col\"\n  },\n  fixed: {\n    \"id\": \"Fixed width table cells\",\n    \"defaultMessage\": \"Fixed width columns\"\n  },\n  compact: {\n    \"id\": \"Make the table compact\",\n    \"defaultMessage\": \"Reduce cell padding\"\n  },\n  basic: {\n    \"id\": \"Reduce complexity\",\n    \"defaultMessage\": \"Minimalistic table design\"\n  },\n  celled: {\n    \"id\": \"Divide each row into separate cells\",\n    \"defaultMessage\": \"Add border to inner columns\"\n  },\n  striped: {\n    \"id\": \"Stripe alternate rows with color\",\n    \"defaultMessage\": \"Alternate row background color\"\n  },\n  headerCell: {\n    \"id\": \"Header cell\",\n    \"defaultMessage\": \"Header cell\"\n  }\n});\n\n/**\n * Edit text block class.\n * @class Edit\n * @extends Component\n */\nvar Edit = /*#__PURE__*/function (_Component) {\n  _inherits(Edit, _Component);\n  var _super = _createSuper(Edit);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  function Edit(props) {\n    var _this;\n    _classCallCheck(this, Edit);\n    _this = _super.call(this, props);\n    _this.state = {\n      selected: {\n        row: 0,\n        cell: 0\n      },\n      isClient: false\n    };\n    _this.onSelectCell = _this.onSelectCell.bind(_assertThisInitialized(_this));\n    _this.onInsertRowBefore = _this.onInsertRowBefore.bind(_assertThisInitialized(_this));\n    _this.onInsertRowAfter = _this.onInsertRowAfter.bind(_assertThisInitialized(_this));\n    _this.onInsertColBefore = _this.onInsertColBefore.bind(_assertThisInitialized(_this));\n    _this.onInsertColAfter = _this.onInsertColAfter.bind(_assertThisInitialized(_this));\n    _this.onDeleteRow = _this.onDeleteRow.bind(_assertThisInitialized(_this));\n    _this.onDeleteCol = _this.onDeleteCol.bind(_assertThisInitialized(_this));\n    _this.onChangeCell = _this.onChangeCell.bind(_assertThisInitialized(_this));\n    _this.toggleCellType = _this.toggleCellType.bind(_assertThisInitialized(_this));\n    _this.toggleBool = _this.toggleBool.bind(_assertThisInitialized(_this));\n    _this.toggleFixed = _this.toggleFixed.bind(_assertThisInitialized(_this));\n    _this.toggleCompact = _this.toggleCompact.bind(_assertThisInitialized(_this));\n    _this.toggleBasic = _this.toggleBasic.bind(_assertThisInitialized(_this));\n    _this.toggleCelled = _this.toggleCelled.bind(_assertThisInitialized(_this));\n    _this.toggleStriped = _this.toggleStriped.bind(_assertThisInitialized(_this));\n    var convertToRaw = props.draftJs.convertToRaw;\n    _this.convertToRaw = convertToRaw;\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(Edit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.data.table) {\n        this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n          table: initialTable()\n        }));\n      }\n      this.setState({\n        isClient: true\n      });\n    }\n\n    /**\n     * Component will receive props\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Next properties\n     * @returns {undefined}\n     */\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (!nextProps.data.table) {\n        this.props.onChangeBlock(nextProps.block, _objectSpread(_objectSpread({}, nextProps.data), {}, {\n          table: initialTable()\n        }));\n      }\n    }\n\n    /**\n     * Select cell handler\n     * @method onSelectCell\n     * @param {Number} row Row index.\n     * @param {Number} cell Cell index.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSelectCell\",\n    value: function onSelectCell(row, cell) {\n      this.setState({\n        selected: {\n          row: row,\n          cell: cell\n        }\n      });\n    }\n\n    /**\n     * Change cell handler\n     * @method onChangeCell\n     * @param {Number} row Row index.\n     * @param {Number} cell Cell index.\n     * @param {Object} editorState Editor state.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onChangeCell\",\n    value: function onChangeCell(row, cell, editorState) {\n      var table = _objectSpread({}, this.props.data.table);\n      table.rows[row].cells[cell].value = this.convertToRaw(editorState.getCurrentContent());\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        table: table\n      }));\n    }\n\n    /**\n     * Toggle cell type\n     * @method toggleCellType\n     * @returns {undefined}\n     */\n  }, {\n    key: \"toggleCellType\",\n    value: function toggleCellType() {\n      var table = _objectSpread({}, this.props.data.table);\n      var type = table.rows[this.state.selected.row].cells[this.state.selected.cell].type;\n      table.rows[this.state.selected.row].cells[this.state.selected.cell].type = type === 'header' ? 'data' : 'header';\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        table: table\n      }));\n    }\n\n    /**\n     * Insert row before handler\n     * @method onInsertRowBefore\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onInsertRowBefore\",\n    value: function onInsertRowBefore(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var table = this.props.data.table;\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        table: _objectSpread(_objectSpread({}, table), {}, {\n          rows: [].concat(_toConsumableArray(table.rows.slice(0, this.state.selected.row)), [emptyRow(table.rows[0].cells)], _toConsumableArray(table.rows.slice(this.state.selected.row)))\n        })\n      }));\n      this.setState({\n        selected: {\n          row: this.state.selected.row + 1,\n          cell: this.state.selected.cell\n        }\n      });\n    }\n\n    /**\n     * Insert row after handler\n     * @method onInsertRowAfter\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onInsertRowAfter\",\n    value: function onInsertRowAfter(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var table = this.props.data.table;\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        table: _objectSpread(_objectSpread({}, table), {}, {\n          rows: [].concat(_toConsumableArray(table.rows.slice(0, this.state.selected.row + 1)), [emptyRow(table.rows[0].cells)], _toConsumableArray(table.rows.slice(this.state.selected.row + 1)))\n        })\n      }));\n    }\n\n    /**\n     * Insert col before handler\n     * @method onInsertColBefore\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onInsertColBefore\",\n    value: function onInsertColBefore(e) {\n      var _this2 = this;\n      e.preventDefault();\n      e.stopPropagation();\n      var table = this.props.data.table;\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        table: _objectSpread(_objectSpread({}, table), {}, {\n          rows: _map(table.rows, function (row, index) {\n            return _objectSpread(_objectSpread({}, row), {}, {\n              cells: [].concat(_toConsumableArray(row.cells.slice(0, _this2.state.selected.cell)), [emptyCell(table.rows[index].cells[_this2.state.selected.cell].type)], _toConsumableArray(row.cells.slice(_this2.state.selected.cell)))\n            });\n          })\n        })\n      }));\n      this.setState({\n        selected: {\n          row: this.state.selected.row,\n          cell: this.state.selected.cell + 1\n        }\n      });\n    }\n\n    /**\n     * Insert col after handler\n     * @method onInsertColAfter\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onInsertColAfter\",\n    value: function onInsertColAfter(e) {\n      var _this3 = this;\n      e.preventDefault();\n      e.stopPropagation();\n      var table = this.props.data.table;\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        table: _objectSpread(_objectSpread({}, table), {}, {\n          rows: _map(table.rows, function (row, index) {\n            return _objectSpread(_objectSpread({}, row), {}, {\n              cells: [].concat(_toConsumableArray(row.cells.slice(0, _this3.state.selected.cell + 1)), [emptyCell(table.rows[index].cells[_this3.state.selected.cell].type)], _toConsumableArray(row.cells.slice(_this3.state.selected.cell + 1)))\n            });\n          })\n        })\n      }));\n    }\n\n    /**\n     * Delete col handler\n     * @method onDeleteCol\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onDeleteCol\",\n    value: function onDeleteCol(e) {\n      var _this4 = this;\n      e.preventDefault();\n      e.stopPropagation();\n      var table = this.props.data.table;\n      if (this.state.selected.cell === table.rows[0].cells.length - 1) {\n        this.setState({\n          selected: {\n            row: this.state.selected.row,\n            cell: this.state.selected.cell - 1\n          }\n        });\n      }\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        table: _objectSpread(_objectSpread({}, table), {}, {\n          rows: _map(table.rows, function (row) {\n            return _objectSpread(_objectSpread({}, row), {}, {\n              cells: _remove(row.cells, function (cell, index) {\n                return index !== _this4.state.selected.cell;\n              })\n            });\n          })\n        })\n      }));\n    }\n\n    /**\n     * Delete row handler\n     * @method onDeleteRow\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onDeleteRow\",\n    value: function onDeleteRow(e) {\n      var _this5 = this;\n      e.preventDefault();\n      e.stopPropagation();\n      var table = this.props.data.table;\n      if (this.state.selected.row === table.rows.length - 1) {\n        this.setState({\n          selected: {\n            row: this.state.selected.row - 1,\n            cell: this.state.selected.cell\n          }\n        });\n      }\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        table: _objectSpread(_objectSpread({}, table), {}, {\n          rows: _remove(table.rows, function (row, index) {\n            return index !== _this5.state.selected.row;\n          })\n        })\n      }));\n    }\n\n    /**\n     * Toggle bool\n     * @method toggleBool\n     * @param {string} value Value to toggle.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"toggleBool\",\n    value: function toggleBool(value) {\n      var table = this.props.data.table;\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        table: _objectSpread(_objectSpread({}, table), {}, _defineProperty({}, value, !table[value]))\n      }));\n    }\n\n    /**\n     * Toggle fixed\n     * @method toggleFixed\n     * @returns {undefined}\n     */\n  }, {\n    key: \"toggleFixed\",\n    value: function toggleFixed() {\n      this.toggleBool('fixed');\n    }\n\n    /**\n     * Toggle compact\n     * @method toggleCompact\n     * @returns {undefined}\n     */\n  }, {\n    key: \"toggleCompact\",\n    value: function toggleCompact() {\n      this.toggleBool('compact');\n    }\n\n    /**\n     * Toggle basic\n     * @method toggleBasic\n     * @returns {undefined}\n     */\n  }, {\n    key: \"toggleBasic\",\n    value: function toggleBasic() {\n      this.toggleBool('basic');\n    }\n\n    /**\n     * Toggle celled\n     * @method toggleCelled\n     * @returns {undefined}\n     */\n  }, {\n    key: \"toggleCelled\",\n    value: function toggleCelled() {\n      this.toggleBool('celled');\n    }\n\n    /**\n     * Toggle striped\n     * @method toggleStriped\n     * @returns {undefined}\n     */\n  }, {\n    key: \"toggleStriped\",\n    value: function toggleStriped() {\n      this.toggleBool('striped');\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n      if (!this.state.isClient) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 14\n          }\n        });\n      }\n      return __jsx(\"div\", {\n        className: cx('block table', {\n          selected: this.props.selected\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 7\n        }\n      }, this.props.selected && __jsx(\"div\", {\n        className: \"toolbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }\n      }, __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        icon: true,\n        basic: true,\n        onClick: this.onInsertRowBefore,\n        title: this.props.intl.formatMessage(messages.insertRowBefore),\n        \"aria-label\": this.props.intl.formatMessage(messages.insertRowBefore),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 15\n        }\n      }, __jsx(Icon, {\n        name: rowBeforeSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 17\n        }\n      }))), __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        icon: true,\n        basic: true,\n        onClick: this.onInsertRowAfter,\n        title: this.props.intl.formatMessage(messages.insertRowAfter),\n        \"aria-label\": this.props.intl.formatMessage(messages.insertRowAfter),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 15\n        }\n      }, __jsx(Icon, {\n        name: rowAfterSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 17\n        }\n      }))), __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        icon: true,\n        basic: true,\n        onClick: this.onDeleteRow,\n        disabled: this.props.data.table && this.props.data.table.rows.length === 1,\n        title: this.props.intl.formatMessage(messages.deleteRow),\n        \"aria-label\": this.props.intl.formatMessage(messages.deleteRow),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 15\n        }\n      }, __jsx(Icon, {\n        name: rowDeleteSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 17\n        }\n      }))), __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        icon: true,\n        basic: true,\n        onClick: this.onInsertColBefore,\n        title: this.props.intl.formatMessage(messages.insertColBefore),\n        \"aria-label\": this.props.intl.formatMessage(messages.insertColBefore),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 15\n        }\n      }, __jsx(Icon, {\n        name: colBeforeSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 17\n        }\n      }))), __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        icon: true,\n        basic: true,\n        onClick: this.onInsertColAfter,\n        title: this.props.intl.formatMessage(messages.insertColAfter),\n        \"aria-label\": this.props.intl.formatMessage(messages.insertColAfter),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 15\n        }\n      }, __jsx(Icon, {\n        name: colAfterSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 17\n        }\n      }))), __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        icon: true,\n        basic: true,\n        onClick: this.onDeleteCol,\n        disabled: this.props.data.table && this.props.data.table.rows[0].cells.length === 1,\n        title: this.props.intl.formatMessage(messages.deleteCol),\n        \"aria-label\": this.props.intl.formatMessage(messages.deleteCol),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 15\n        }\n      }, __jsx(Icon, {\n        name: colDeleteSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 17\n        }\n      })))), this.props.data.table && __jsx(Table, {\n        fixed: this.props.data.table.fixed,\n        compact: this.props.data.table.compact,\n        basic: this.props.data.table.basic ? 'very' : false,\n        celled: this.props.data.table.celled,\n        inverted: this.props.data.table.inverted,\n        striped: this.props.data.table.striped,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 11\n        }\n      }, __jsx(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }\n      }, _map(this.props.data.table.rows, function (row, rowIndex) {\n        return __jsx(Table.Row, {\n          key: row.key,\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 17\n          }\n        }, _map(row.cells, function (cell, cellIndex) {\n          var _this6$props$data;\n          return __jsx(Table.Cell, {\n            key: cell.key,\n            as: cell.type === 'header' ? 'th' : 'td',\n            className: rowIndex === _this6.state.selected.row && cellIndex === _this6.state.selected.cell && _this6.props.selected ? 'selected' : '',\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 21\n            }\n          }, __jsx(Cell, {\n            editable: _this6.props.editable,\n            value: cell.value,\n            row: rowIndex,\n            cell: cellIndex,\n            onSelectCell: _this6.onSelectCell,\n            selected: rowIndex === _this6.state.selected.row && cellIndex === _this6.state.selected.cell,\n            isTableBlockSelected: _this6.props.selected,\n            onAddBlock: _this6.props.onAddBlock,\n            onSelectBlock: _this6.props.onSelectBlock,\n            onChange: _this6.onChangeCell,\n            index: _this6.props.index,\n            disableNewBlocks: (_this6$props$data = _this6.props.data) === null || _this6$props$data === void 0 ? void 0 : _this6$props$data.disableNewBlocks,\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 23\n            }\n          }));\n        }));\n      }))), this.props.selected && this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('sidebar-properties'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }\n      }, __jsx(Form, {\n        method: \"post\",\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          event.stopPropagation();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 13\n        }\n      }, __jsx(Segment, {\n        secondary: true,\n        attached: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 15\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Table\",\n        defaultMessage: \"Table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 17\n        }\n      })), __jsx(Segment, {\n        attached: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 15\n        }\n      }, __jsx(Field, {\n        id: \"fixed\",\n        title: this.props.intl.formatMessage(messages.fixed),\n        type: \"boolean\",\n        value: this.props.data.table && this.props.data.table.fixed,\n        onChange: function onChange() {\n          return _this6.toggleFixed();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 17\n        }\n      }), __jsx(Field, {\n        id: \"celled\",\n        title: this.props.intl.formatMessage(messages.celled),\n        type: \"boolean\",\n        value: this.props.data.table && this.props.data.table.celled,\n        onChange: this.toggleCelled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 17\n        }\n      }), __jsx(Field, {\n        id: \"striped\",\n        title: this.props.intl.formatMessage(messages.striped),\n        type: \"boolean\",\n        value: this.props.data.table && this.props.data.table.striped,\n        onChange: this.toggleStriped,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 17\n        }\n      }), __jsx(Field, {\n        id: \"compact\",\n        title: this.props.intl.formatMessage(messages.compact),\n        type: \"boolean\",\n        value: this.props.data.table && this.props.data.table.compact,\n        onChange: function onChange() {\n          return _this6.toggleCompact();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 17\n        }\n      }), __jsx(Field, {\n        id: \"basic\",\n        title: this.props.intl.formatMessage(messages.basic),\n        type: \"boolean\",\n        value: this.props.data.table && this.props.data.table.basic,\n        onChange: this.toggleBasic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 17\n        }\n      })), __jsx(Segment, {\n        secondary: true,\n        attached: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 15\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Cell\",\n        defaultMessage: \"Cell\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 17\n        }\n      })), __jsx(Segment, {\n        attached: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 15\n        }\n      }, __jsx(Field, {\n        id: \"celltype\",\n        title: this.props.intl.formatMessage(messages.headerCell),\n        type: \"boolean\",\n        value: this.props.data.table && this.props.data.table.rows[this.state.selected.row].cells[this.state.selected.cell].type === 'header',\n        onChange: this.toggleCellType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }]);\n  return Edit;\n}(Component);\n_defineProperty(Edit, \"propTypes\", {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  detached: PropTypes.bool,\n  index: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  onAddBlock: PropTypes.func.isRequired,\n  onInsertBlock: PropTypes.func.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  onDeleteBlock: PropTypes.func.isRequired,\n  onMutateBlock: PropTypes.func.isRequired,\n  onFocusPreviousBlock: PropTypes.func.isRequired,\n  onFocusNextBlock: PropTypes.func.isRequired,\n  onSelectBlock: PropTypes.func.isRequired\n});\n_defineProperty(Edit, \"defaultProps\", {\n  detached: false\n});\nexport default compose(injectLazyLibs(['draftJs']), injectIntl)(Edit);","map":{"version":3,"names":["React","Component","PropTypes","compose","Button","Segment","Table","Form","Portal","cx","FormattedMessage","defineMessages","injectIntl","Cell","Field","Icon","injectLazyLibs","rowBeforeSVG","rowAfterSVG","colBeforeSVG","colAfterSVG","rowDeleteSVG","colDeleteSVG","getId","Math","floor","random","pow","toString","valueToDraft","value","blocks","data","depth","entityRanges","inlineStyleRanges","key","text","type","entityMap","emptyCell","emptyRow","cells","initialTable","fixed","compact","basic","celled","inverted","striped","rows","messages","insertRowBefore","insertRowAfter","deleteRow","insertColBefore","insertColAfter","deleteCol","headerCell","Edit","props","state","selected","row","cell","isClient","onSelectCell","bind","onInsertRowBefore","onInsertRowAfter","onInsertColBefore","onInsertColAfter","onDeleteRow","onDeleteCol","onChangeCell","toggleCellType","toggleBool","toggleFixed","toggleCompact","toggleBasic","toggleCelled","toggleStriped","convertToRaw","draftJs","table","onChangeBlock","block","setState","nextProps","editorState","getCurrentContent","e","preventDefault","stopPropagation","slice","index","length","intl","formatMessage","rowIndex","cellIndex","editable","onAddBlock","onSelectBlock","disableNewBlocks","document","getElementById","event","objectOf","any","isRequired","detached","bool","number","string","func","onInsertBlock","onDeleteBlock","onMutateBlock","onFocusPreviousBlock","onFocusNextBlock"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Table/Edit.jsx"],"sourcesContent":["/**\n * Edit text block.\n * @module components/manage/Blocks/Title/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { map, remove } from 'lodash';\nimport { Button, Segment, Table, Form } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport cx from 'classnames';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Cell from '@plone/volto/components/manage/Blocks/Table/Cell';\nimport { Field, Icon } from '@plone/volto/components';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport rowBeforeSVG from '@plone/volto/icons/row-before.svg';\nimport rowAfterSVG from '@plone/volto/icons/row-after.svg';\nimport colBeforeSVG from '@plone/volto/icons/column-before.svg';\nimport colAfterSVG from '@plone/volto/icons/column-after.svg';\nimport rowDeleteSVG from '@plone/volto/icons/row-delete.svg';\nimport colDeleteSVG from '@plone/volto/icons/column-delete.svg';\n\nconst getId = () => Math.floor(Math.random() * Math.pow(2, 24)).toString(32);\n\nconst valueToDraft = (value) => ({\n  blocks: [\n    {\n      data: {},\n      depth: 0,\n      entityRanges: [],\n      inlineStyleRanges: [],\n      key: getId(),\n      text: value,\n      type: 'unstyled',\n    },\n  ],\n  entityMap: {},\n});\n\nconst emptyCell = (type) => ({\n  key: getId(),\n  type: type || 'data',\n  value: valueToDraft(''),\n});\n\nconst emptyRow = (cells) => ({\n  key: getId(),\n  cells: map(cells, () => emptyCell()),\n});\n\nconst initialTable = () => ({\n  fixed: true,\n  compact: false,\n  basic: false,\n  celled: true,\n  inverted: false,\n  striped: false,\n  rows: [\n    {\n      key: getId(),\n      cells: [\n        {\n          key: getId(),\n          type: 'header',\n          value: valueToDraft(''),\n        },\n        {\n          key: getId(),\n          type: 'header',\n          value: valueToDraft(''),\n        },\n      ],\n    },\n    {\n      key: getId(),\n      cells: [\n        {\n          key: getId(),\n          type: 'data',\n          value: valueToDraft(''),\n        },\n        {\n          key: getId(),\n          type: 'data',\n          value: valueToDraft(''),\n        },\n      ],\n    },\n  ],\n});\n\nconst messages = defineMessages({\n  insertRowBefore: {\n    id: 'Insert row before',\n    defaultMessage: 'Insert row before',\n  },\n  insertRowAfter: {\n    id: 'Insert row after',\n    defaultMessage: 'Insert row after',\n  },\n  deleteRow: {\n    id: 'Delete row',\n    defaultMessage: 'Delete row',\n  },\n  insertColBefore: {\n    id: 'Insert col before',\n    defaultMessage: 'Insert col before',\n  },\n  insertColAfter: {\n    id: 'Insert col after',\n    defaultMessage: 'Insert col after',\n  },\n  deleteCol: {\n    id: 'Delete col',\n    defaultMessage: 'Delete col',\n  },\n  fixed: {\n    id: 'Fixed width table cells',\n    defaultMessage: 'Fixed width columns',\n  },\n  compact: {\n    id: 'Make the table compact',\n    defaultMessage: 'Reduce cell padding',\n  },\n  basic: {\n    id: 'Reduce complexity',\n    defaultMessage: 'Minimalistic table design',\n  },\n  celled: {\n    id: 'Divide each row into separate cells',\n    defaultMessage: 'Add border to inner columns',\n  },\n  striped: {\n    id: 'Stripe alternate rows with color',\n    defaultMessage: 'Alternate row background color',\n  },\n  headerCell: {\n    id: 'Header cell',\n    defaultMessage: 'Header cell',\n  },\n});\n\n/**\n * Edit text block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    detached: PropTypes.bool,\n    index: PropTypes.number.isRequired,\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    onAddBlock: PropTypes.func.isRequired,\n    onInsertBlock: PropTypes.func.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    onMutateBlock: PropTypes.func.isRequired,\n    onFocusPreviousBlock: PropTypes.func.isRequired,\n    onFocusNextBlock: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    detached: false,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: {\n        row: 0,\n        cell: 0,\n      },\n      isClient: false,\n    };\n    this.onSelectCell = this.onSelectCell.bind(this);\n    this.onInsertRowBefore = this.onInsertRowBefore.bind(this);\n    this.onInsertRowAfter = this.onInsertRowAfter.bind(this);\n    this.onInsertColBefore = this.onInsertColBefore.bind(this);\n    this.onInsertColAfter = this.onInsertColAfter.bind(this);\n    this.onDeleteRow = this.onDeleteRow.bind(this);\n    this.onDeleteCol = this.onDeleteCol.bind(this);\n    this.onChangeCell = this.onChangeCell.bind(this);\n    this.toggleCellType = this.toggleCellType.bind(this);\n    this.toggleBool = this.toggleBool.bind(this);\n    this.toggleFixed = this.toggleFixed.bind(this);\n    this.toggleCompact = this.toggleCompact.bind(this);\n    this.toggleBasic = this.toggleBasic.bind(this);\n    this.toggleCelled = this.toggleCelled.bind(this);\n    this.toggleStriped = this.toggleStriped.bind(this);\n\n    const { convertToRaw } = props.draftJs;\n    this.convertToRaw = convertToRaw;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (!this.props.data.table) {\n      this.props.onChangeBlock(this.props.block, {\n        ...this.props.data,\n        table: initialTable(),\n      });\n    }\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!nextProps.data.table) {\n      this.props.onChangeBlock(nextProps.block, {\n        ...nextProps.data,\n        table: initialTable(),\n      });\n    }\n  }\n\n  /**\n   * Select cell handler\n   * @method onSelectCell\n   * @param {Number} row Row index.\n   * @param {Number} cell Cell index.\n   * @returns {undefined}\n   */\n  onSelectCell(row, cell) {\n    this.setState({ selected: { row, cell } });\n  }\n\n  /**\n   * Change cell handler\n   * @method onChangeCell\n   * @param {Number} row Row index.\n   * @param {Number} cell Cell index.\n   * @param {Object} editorState Editor state.\n   * @returns {undefined}\n   */\n  onChangeCell(row, cell, editorState) {\n    const table = { ...this.props.data.table };\n    table.rows[row].cells[cell].value = this.convertToRaw(\n      editorState.getCurrentContent(),\n    );\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table,\n    });\n  }\n\n  /**\n   * Toggle cell type\n   * @method toggleCellType\n   * @returns {undefined}\n   */\n  toggleCellType() {\n    const table = { ...this.props.data.table };\n    let type =\n      table.rows[this.state.selected.row].cells[this.state.selected.cell].type;\n    table.rows[this.state.selected.row].cells[this.state.selected.cell].type =\n      type === 'header' ? 'data' : 'header';\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table,\n    });\n  }\n\n  /**\n   * Insert row before handler\n   * @method onInsertRowBefore\n   * @returns {undefined}\n   */\n  onInsertRowBefore(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: [\n          ...table.rows.slice(0, this.state.selected.row),\n          emptyRow(table.rows[0].cells),\n          ...table.rows.slice(this.state.selected.row),\n        ],\n      },\n    });\n    this.setState({\n      selected: {\n        row: this.state.selected.row + 1,\n        cell: this.state.selected.cell,\n      },\n    });\n  }\n\n  /**\n   * Insert row after handler\n   * @method onInsertRowAfter\n   * @returns {undefined}\n   */\n  onInsertRowAfter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: [\n          ...table.rows.slice(0, this.state.selected.row + 1),\n          emptyRow(table.rows[0].cells),\n          ...table.rows.slice(this.state.selected.row + 1),\n        ],\n      },\n    });\n  }\n\n  /**\n   * Insert col before handler\n   * @method onInsertColBefore\n   * @returns {undefined}\n   */\n  onInsertColBefore(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: map(table.rows, (row, index) => ({\n          ...row,\n          cells: [\n            ...row.cells.slice(0, this.state.selected.cell),\n            emptyCell(table.rows[index].cells[this.state.selected.cell].type),\n            ...row.cells.slice(this.state.selected.cell),\n          ],\n        })),\n      },\n    });\n    this.setState({\n      selected: {\n        row: this.state.selected.row,\n        cell: this.state.selected.cell + 1,\n      },\n    });\n  }\n\n  /**\n   * Insert col after handler\n   * @method onInsertColAfter\n   * @returns {undefined}\n   */\n  onInsertColAfter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: map(table.rows, (row, index) => ({\n          ...row,\n          cells: [\n            ...row.cells.slice(0, this.state.selected.cell + 1),\n            emptyCell(table.rows[index].cells[this.state.selected.cell].type),\n            ...row.cells.slice(this.state.selected.cell + 1),\n          ],\n        })),\n      },\n    });\n  }\n\n  /**\n   * Delete col handler\n   * @method onDeleteCol\n   * @returns {undefined}\n   */\n  onDeleteCol(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n\n    if (this.state.selected.cell === table.rows[0].cells.length - 1) {\n      this.setState({\n        selected: {\n          row: this.state.selected.row,\n          cell: this.state.selected.cell - 1,\n        },\n      });\n    }\n\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: map(table.rows, (row) => ({\n          ...row,\n          cells: remove(\n            row.cells,\n            (cell, index) => index !== this.state.selected.cell,\n          ),\n        })),\n      },\n    });\n  }\n\n  /**\n   * Delete row handler\n   * @method onDeleteRow\n   * @returns {undefined}\n   */\n  onDeleteRow(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n\n    if (this.state.selected.row === table.rows.length - 1) {\n      this.setState({\n        selected: {\n          row: this.state.selected.row - 1,\n          cell: this.state.selected.cell,\n        },\n      });\n    }\n\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: remove(\n          table.rows,\n          (row, index) => index !== this.state.selected.row,\n        ),\n      },\n    });\n  }\n\n  /**\n   * Toggle bool\n   * @method toggleBool\n   * @param {string} value Value to toggle.\n   * @returns {undefined}\n   */\n  toggleBool(value) {\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        [value]: !table[value],\n      },\n    });\n  }\n\n  /**\n   * Toggle fixed\n   * @method toggleFixed\n   * @returns {undefined}\n   */\n  toggleFixed() {\n    this.toggleBool('fixed');\n  }\n\n  /**\n   * Toggle compact\n   * @method toggleCompact\n   * @returns {undefined}\n   */\n  toggleCompact() {\n    this.toggleBool('compact');\n  }\n\n  /**\n   * Toggle basic\n   * @method toggleBasic\n   * @returns {undefined}\n   */\n  toggleBasic() {\n    this.toggleBool('basic');\n  }\n\n  /**\n   * Toggle celled\n   * @method toggleCelled\n   * @returns {undefined}\n   */\n  toggleCelled() {\n    this.toggleBool('celled');\n  }\n\n  /**\n   * Toggle striped\n   * @method toggleStriped\n   * @returns {undefined}\n   */\n  toggleStriped() {\n    this.toggleBool('striped');\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (!this.state.isClient) {\n      return <div />;\n    }\n\n    return (\n      <div className={cx('block table', { selected: this.props.selected })}>\n        {this.props.selected && (\n          <div className=\"toolbar\">\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertRowBefore}\n                title={this.props.intl.formatMessage(messages.insertRowBefore)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertRowBefore,\n                )}\n              >\n                <Icon name={rowBeforeSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertRowAfter}\n                title={this.props.intl.formatMessage(messages.insertRowAfter)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertRowAfter,\n                )}\n              >\n                <Icon name={rowAfterSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onDeleteRow}\n                disabled={\n                  this.props.data.table &&\n                  this.props.data.table.rows.length === 1\n                }\n                title={this.props.intl.formatMessage(messages.deleteRow)}\n                aria-label={this.props.intl.formatMessage(messages.deleteRow)}\n              >\n                <Icon name={rowDeleteSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertColBefore}\n                title={this.props.intl.formatMessage(messages.insertColBefore)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertColBefore,\n                )}\n              >\n                <Icon name={colBeforeSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertColAfter}\n                title={this.props.intl.formatMessage(messages.insertColAfter)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertColAfter,\n                )}\n              >\n                <Icon name={colAfterSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onDeleteCol}\n                disabled={\n                  this.props.data.table &&\n                  this.props.data.table.rows[0].cells.length === 1\n                }\n                title={this.props.intl.formatMessage(messages.deleteCol)}\n                aria-label={this.props.intl.formatMessage(messages.deleteCol)}\n              >\n                <Icon name={colDeleteSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n          </div>\n        )}\n        {this.props.data.table && (\n          <Table\n            fixed={this.props.data.table.fixed}\n            compact={this.props.data.table.compact}\n            basic={this.props.data.table.basic ? 'very' : false}\n            celled={this.props.data.table.celled}\n            inverted={this.props.data.table.inverted}\n            striped={this.props.data.table.striped}\n          >\n            <Table.Body>\n              {map(this.props.data.table.rows, (row, rowIndex) => (\n                <Table.Row key={row.key}>\n                  {map(row.cells, (cell, cellIndex) => (\n                    <Table.Cell\n                      key={cell.key}\n                      as={cell.type === 'header' ? 'th' : 'td'}\n                      className={\n                        rowIndex === this.state.selected.row &&\n                        cellIndex === this.state.selected.cell &&\n                        this.props.selected\n                          ? 'selected'\n                          : ''\n                      }\n                    >\n                      <Cell\n                        editable={this.props.editable}\n                        value={cell.value}\n                        row={rowIndex}\n                        cell={cellIndex}\n                        onSelectCell={this.onSelectCell}\n                        selected={\n                          rowIndex === this.state.selected.row &&\n                          cellIndex === this.state.selected.cell\n                        }\n                        isTableBlockSelected={this.props.selected}\n                        onAddBlock={this.props.onAddBlock}\n                        onSelectBlock={this.props.onSelectBlock}\n                        onChange={this.onChangeCell}\n                        index={this.props.index}\n                        disableNewBlocks={this.props.data?.disableNewBlocks}\n                      />\n                    </Table.Cell>\n                  ))}\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        )}\n        {this.props.selected && this.state.isClient && (\n          <Portal node={document.getElementById('sidebar-properties')}>\n            <Form\n              method=\"post\"\n              onSubmit={(event) => {\n                event.preventDefault();\n                event.stopPropagation();\n              }}\n            >\n              <Segment secondary attached>\n                <FormattedMessage id=\"Table\" defaultMessage=\"Table\" />\n              </Segment>\n              <Segment attached>\n                <Field\n                  id=\"fixed\"\n                  title={this.props.intl.formatMessage(messages.fixed)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.fixed}\n                  onChange={() => this.toggleFixed()}\n                />\n                <Field\n                  id=\"celled\"\n                  title={this.props.intl.formatMessage(messages.celled)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.celled}\n                  onChange={this.toggleCelled}\n                />\n                <Field\n                  id=\"striped\"\n                  title={this.props.intl.formatMessage(messages.striped)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.striped}\n                  onChange={this.toggleStriped}\n                />\n                <Field\n                  id=\"compact\"\n                  title={this.props.intl.formatMessage(messages.compact)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.compact}\n                  onChange={() => this.toggleCompact()}\n                />\n                <Field\n                  id=\"basic\"\n                  title={this.props.intl.formatMessage(messages.basic)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.basic}\n                  onChange={this.toggleBasic}\n                />\n              </Segment>\n              <Segment secondary attached>\n                <FormattedMessage id=\"Cell\" defaultMessage=\"Cell\" />\n              </Segment>\n              <Segment attached>\n                <Field\n                  id=\"celltype\"\n                  title={this.props.intl.formatMessage(messages.headerCell)}\n                  type=\"boolean\"\n                  value={\n                    this.props.data.table &&\n                    this.props.data.table.rows[this.state.selected.row].cells[\n                      this.state.selected.cell\n                    ].type === 'header'\n                  }\n                  onChange={this.toggleCellType}\n                />\n              </Segment>\n            </Form>\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(injectLazyLibs(['draftJs']), injectIntl)(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Insert row before","defaultMessage":"Insert row before"},{"id":"Insert row after","defaultMessage":"Insert row after"},{"id":"Delete row","defaultMessage":"Delete row"},{"id":"Insert col before","defaultMessage":"Insert col before"},{"id":"Insert col after","defaultMessage":"Insert col after"},{"id":"Delete col","defaultMessage":"Delete col"},{"id":"Fixed width table cells","defaultMessage":"Fixed width columns"},{"id":"Make the table compact","defaultMessage":"Reduce cell padding"},{"id":"Reduce complexity","defaultMessage":"Minimalistic table design"},{"id":"Divide each row into separate cells","defaultMessage":"Add border to inner columns"},{"id":"Stripe alternate rows with color","defaultMessage":"Alternate row background color"},{"id":"Header cell","defaultMessage":"Header cell"},{"id":"Table","defaultMessage":"Table"},{"id":"Cell","defaultMessage":"Cell"}]}},"sourceType":"module","externalDependencies":[]}