{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/CheckboxFacet.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Checkbox, Header } from 'semantic-ui-react';\nimport { selectFacetSchemaEnhancer, selectFacetStateToValue, selectFacetValueToQuery } from './base';\n\n/**\n * A facet that uses radio/checkboxes to provide an explicit list of values for\n * filtering\n */\nconst CheckboxFacet = props => {\n  var _facet$title, _facet$field;\n  const {\n    facet,\n    choices,\n    isMulti,\n    onChange,\n    value,\n    isEditMode\n  } = props;\n  const facetValue = value;\n  return __jsx(\"div\", {\n    className: \"checkbox-facet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    as: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, (_facet$title = facet.title) !== null && _facet$title !== void 0 ? _facet$title : facet === null || facet === void 0 ? void 0 : (_facet$field = facet.field) === null || _facet$field === void 0 ? void 0 : _facet$field.label), __jsx(\"div\", {\n    className: \"entries\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, choices.map(({\n    label,\n    value\n  }, i) => __jsx(\"div\", {\n    className: \"entry\",\n    key: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, __jsx(Checkbox, {\n    disabled: isEditMode,\n    label: label,\n    radio: !isMulti,\n    checked: isMulti ? !!(facetValue !== null && facetValue !== void 0 && facetValue.find(f => f.value === value)) : facetValue && facetValue.value === value,\n    onChange: (e, {\n      checked\n    }) => onChange(facet.field.value, isMulti ? [...facetValue.filter(f => f.value !== value).map(f => f.value), ...(checked ? [value] : [])] : checked ? value : null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  })))));\n};\nCheckboxFacet.schemaEnhancer = selectFacetSchemaEnhancer;\nCheckboxFacet.stateToValue = selectFacetStateToValue;\nCheckboxFacet.valueToQuery = selectFacetValueToQuery;\nexport default CheckboxFacet;","map":{"version":3,"names":["React","Checkbox","Header","selectFacetSchemaEnhancer","selectFacetStateToValue","selectFacetValueToQuery","CheckboxFacet","props","facet","choices","isMulti","onChange","value","isEditMode","facetValue","title","field","label","map","i","find","f","e","checked","filter","schemaEnhancer","stateToValue","valueToQuery"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/CheckboxFacet.jsx"],"sourcesContent":["import React from 'react';\nimport { Checkbox, Header } from 'semantic-ui-react';\nimport {\n  selectFacetSchemaEnhancer,\n  selectFacetStateToValue,\n  selectFacetValueToQuery,\n} from './base';\n\n/**\n * A facet that uses radio/checkboxes to provide an explicit list of values for\n * filtering\n */\nconst CheckboxFacet = (props) => {\n  const { facet, choices, isMulti, onChange, value, isEditMode } = props;\n  const facetValue = value;\n\n  return (\n    <div className=\"checkbox-facet\">\n      <Header as=\"h4\">{facet.title ?? facet?.field?.label}</Header>\n      <div className=\"entries\">\n        {choices.map(({ label, value }, i) => (\n          <div className=\"entry\" key={value}>\n            <Checkbox\n              disabled={isEditMode}\n              label={label}\n              radio={!isMulti}\n              checked={\n                isMulti\n                  ? !!facetValue?.find((f) => f.value === value)\n                  : facetValue && facetValue.value === value\n              }\n              onChange={(e, { checked }) =>\n                onChange(\n                  facet.field.value,\n                  isMulti\n                    ? [\n                        ...facetValue\n                          .filter((f) => f.value !== value)\n                          .map((f) => f.value),\n                        ...(checked ? [value] : []),\n                      ]\n                    : checked\n                    ? value\n                    : null,\n                )\n              }\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nCheckboxFacet.schemaEnhancer = selectFacetSchemaEnhancer;\nCheckboxFacet.stateToValue = selectFacetStateToValue;\nCheckboxFacet.valueToQuery = selectFacetValueToQuery;\n\nexport default CheckboxFacet;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,mBAAmB;AACpD,SACEC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,QAClB,QAAQ;;AAEf;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAA;EAC/B,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAGN,KAAK;EACtE,MAAMO,UAAU,GAAGF,KAAK;EAExB,OACE;IAAK,SAAS,EAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC7B,MAAC,MAAM;IAAC,EAAE,EAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAAEJ,KAAK,CAACO,KAAK,uDAAIP,KAAK,aAALA,KAAK,uCAALA,KAAK,CAAEQ,KAAK,iDAAZ,aAAcC,KAAK,CAAU,EAC7D;IAAK,SAAS,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrBR,OAAO,CAACS,GAAG,CAAC,CAAC;IAAED,KAAK;IAAEL;EAAM,CAAC,EAAEO,CAAC,KAC/B;IAAK,SAAS,EAAC,OAAO;IAAC,GAAG,EAAEP,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAChC,MAAC,QAAQ;IACP,QAAQ,EAAEC,UAAW;IACrB,KAAK,EAAEI,KAAM;IACb,KAAK,EAAE,CAACP,OAAQ;IAChB,OAAO,EACLA,OAAO,GACH,CAAC,EAACI,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACT,KAAK,KAAKA,KAAK,CAAC,IAC5CE,UAAU,IAAIA,UAAU,CAACF,KAAK,KAAKA,KACxC;IACD,QAAQ,EAAE,CAACU,CAAC,EAAE;MAAEC;IAAQ,CAAC,KACvBZ,QAAQ,CACNH,KAAK,CAACQ,KAAK,CAACJ,KAAK,EACjBF,OAAO,GACH,CACE,GAAGI,UAAU,CACVU,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACT,KAAK,KAAKA,KAAK,CAAC,CAChCM,GAAG,CAAEG,CAAC,IAAKA,CAAC,CAACT,KAAK,CAAC,EACtB,IAAIW,OAAO,GAAG,CAACX,KAAK,CAAC,GAAG,EAAE,CAAC,CAC5B,GACDW,OAAO,GACPX,KAAK,GACL,IAAI,CAEX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACD,CAEL,CAAC,CACE,CACF;AAEV,CAAC;AAEDN,aAAa,CAACmB,cAAc,GAAGtB,yBAAyB;AACxDG,aAAa,CAACoB,YAAY,GAAGtB,uBAAuB;AACpDE,aAAa,CAACqB,YAAY,GAAGtB,uBAAuB;AAEpD,eAAeC,aAAa"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}