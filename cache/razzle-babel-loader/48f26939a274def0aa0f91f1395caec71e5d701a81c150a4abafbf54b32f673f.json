{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/LeadImage/View.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\n/**\n * View image block.\n * @module components/manage/Blocks/Image/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { UniversalLink } from '@plone/volto/components';\nimport cx from 'classnames';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\n/**\n * View image block class.\n * @class View\n * @extends Component\n */\nvar View = function View(_ref) {\n  var data = _ref.data,\n    properties = _ref.properties;\n  return __jsx(\"p\", {\n    className: cx('block image align', {\n      center: !Boolean(data.align)\n    }, data.align),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, properties.image && __jsx(React.Fragment, null, function () {\n    var image = __jsx(\"img\", {\n      className: cx({\n        'full-width': data.align === 'full'\n      }),\n      src: flattenToAppURL(properties.image.download),\n      alt: properties.image_caption || '',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    });\n    if (data.href) {\n      return __jsx(UniversalLink, {\n        href: data.href,\n        openLinkInNewTab: data.openLinkInNewTab,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }, image);\n    } else {\n      return image;\n    }\n  }()));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = View;\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  properties: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default View;\nvar _c;\n$RefreshReg$(_c, \"View\");","map":{"version":3,"names":["React","PropTypes","UniversalLink","cx","flattenToAppURL","View","data","properties","center","Boolean","align","image","download","image_caption","href","openLinkInNewTab","propTypes","objectOf","any","isRequired"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/LeadImage/View.jsx"],"sourcesContent":["/**\n * View image block.\n * @module components/manage/Blocks/Image/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { UniversalLink } from '@plone/volto/components';\nimport cx from 'classnames';\n\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\n/**\n * View image block class.\n * @class View\n * @extends Component\n */\nconst View = ({ data, properties }) => (\n  <p\n    className={cx(\n      'block image align',\n      {\n        center: !Boolean(data.align),\n      },\n      data.align,\n    )}\n  >\n    {properties.image && (\n      <>\n        {(() => {\n          const image = (\n            <img\n              className={cx({ 'full-width': data.align === 'full' })}\n              src={flattenToAppURL(properties.image.download)}\n              alt={properties.image_caption || ''}\n            />\n          );\n          if (data.href) {\n            return (\n              <UniversalLink\n                href={data.href}\n                openLinkInNewTab={data.openLinkInNewTab}\n              >\n                {image}\n              </UniversalLink>\n            );\n          } else {\n            return image;\n          }\n        })()}\n      </>\n    )}\n  </p>\n);\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default View;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,aAAa,QAAQ,yBAAyB;AACvD,OAAOC,EAAE,MAAM,YAAY;AAE3B,SAASC,eAAe,QAAQ,sBAAsB;;AAEtD;AACA;AACA;AACA;AACA;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAI;EAAA,IAAMC,IAAI,QAAJA,IAAI;IAAEC,UAAU,QAAVA,UAAU;EAAA,OAC9B;IACE,SAAS,EAAEJ,EAAE,CACX,mBAAmB,EACnB;MACEK,MAAM,EAAE,CAACC,OAAO,CAACH,IAAI,CAACI,KAAK;IAC7B,CAAC,EACDJ,IAAI,CAACI,KAAK,CACV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEDH,UAAU,CAACI,KAAK,IACf,4BACI,YAAM;IACN,IAAMA,KAAK,GACT;MACE,SAAS,EAAER,EAAE,CAAC;QAAE,YAAY,EAAEG,IAAI,CAACI,KAAK,KAAK;MAAO,CAAC,CAAE;MACvD,GAAG,EAAEN,eAAe,CAACG,UAAU,CAACI,KAAK,CAACC,QAAQ,CAAE;MAChD,GAAG,EAAEL,UAAU,CAACM,aAAa,IAAI,EAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAEvC;IACD,IAAIP,IAAI,CAACQ,IAAI,EAAE;MACb,OACE,MAAC,aAAa;QACZ,IAAI,EAAER,IAAI,CAACQ,IAAK;QAChB,gBAAgB,EAAER,IAAI,CAACS,gBAAiB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAEvCJ,KAAK,CACQ;IAEpB,CAAC,MAAM;MACL,OAAOA,KAAK;IACd;EACF,CAAC,EAAG,CAEP,CACC;AAAA,CACL;;AAED;AACA;AACA;AACA;AACA;AAJA,KAtCMN,IAAI;AA2CVA,IAAI,CAACW,SAAS,GAAG;EACfV,IAAI,EAAEL,SAAS,CAACgB,QAAQ,CAAChB,SAAS,CAACiB,GAAG,CAAC,CAACC,UAAU;EAClDZ,UAAU,EAAEN,SAAS,CAACgB,QAAQ,CAAChB,SAAS,CAACiB,GAAG,CAAC,CAACC;AAChD,CAAC;AAED,eAAed,IAAI;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}