{"ast":null,"code":"import _isBoolean from \"lodash/isBoolean\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Widgets/BooleanWidget.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport cx from 'classnames';\nimport { defineMessages, injectIntl } from 'react-intl';\nconst messages = defineMessages({\n  yes: {\n    \"id\": \"yes\",\n    \"defaultMessage\": \"Yes\"\n  },\n  no: {\n    \"id\": \"no\",\n    \"defaultMessage\": \"No\"\n  }\n});\nconst BooleanWidget = ({\n  value,\n  children,\n  className,\n  intl\n}) => {\n  return _isBoolean(value) ? __jsx(\"span\", {\n    className: cx(className, 'boolean', 'widget'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, children ? children(value ? intl.formatMessage(messages.yes) : intl.formatMessage(messages.no)) : value ? intl.formatMessage(messages.yes) : intl.formatMessage(messages.no)) : '';\n};\nexport default injectIntl(BooleanWidget);","map":{"version":3,"names":["React","cx","defineMessages","injectIntl","messages","yes","no","BooleanWidget","value","children","className","intl","formatMessage"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Widgets/BooleanWidget.jsx"],"sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport { isBoolean } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  yes: {\n    id: 'yes',\n    defaultMessage: 'Yes',\n  },\n  no: {\n    id: 'no',\n    defaultMessage: 'No',\n  },\n});\n\nconst BooleanWidget = ({ value, children, className, intl }) => {\n  return isBoolean(value) ? (\n    <span className={cx(className, 'boolean', 'widget')}>\n      {children\n        ? children(\n            value\n              ? intl.formatMessage(messages.yes)\n              : intl.formatMessage(messages.no),\n          )\n        : value\n        ? intl.formatMessage(messages.yes)\n        : intl.formatMessage(messages.no)}\n    </span>\n  ) : (\n    ''\n  );\n};\n\nexport default injectIntl(BooleanWidget);\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,YAAY;AAE3B,SAASC,cAAc,EAAEC,UAAU,QAAQ,YAAY;AAEvD,MAAMC,QAAQ,GAAGF,cAAc,CAAC;EAC9BG,GAAG;IAAA;IAAA;EAAA,CAGF;EACDC,EAAE;IAAA;IAAA;EAAA;AAIJ,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAG,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,SAAS;EAAEC;AAAK,CAAC,KAAK;EAC9D,OAAO,WAAUH,KAAK,CAAC,GACrB;IAAM,SAAS,EAAEP,EAAE,CAACS,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjDD,QAAQ,GACLA,QAAQ,CACND,KAAK,GACDG,IAAI,CAACC,aAAa,CAACR,QAAQ,CAACC,GAAG,CAAC,GAChCM,IAAI,CAACC,aAAa,CAACR,QAAQ,CAACE,EAAE,CAAC,CACpC,GACDE,KAAK,GACLG,IAAI,CAACC,aAAa,CAACR,QAAQ,CAACC,GAAG,CAAC,GAChCM,IAAI,CAACC,aAAa,CAACR,QAAQ,CAACE,EAAE,CAAC,CAC9B,GAEP,EACD;AACH,CAAC;AAED,eAAeH,UAAU,CAACI,aAAa,CAAC"},"metadata":{"react-intl":{"messages":[{"id":"yes","defaultMessage":"Yes"},{"id":"no","defaultMessage":"No"}]}},"sourceType":"module","externalDependencies":[]}