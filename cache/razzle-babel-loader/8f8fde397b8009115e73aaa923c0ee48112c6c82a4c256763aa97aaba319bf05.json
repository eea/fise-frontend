{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Blocks/SimpleDataTable/schema.js\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React from 'react';\nconst columnSchema = {\n  title: 'Column',\n  fieldsets: [{\n    id: 'default',\n    title: 'Default',\n    fields: ['column', 'title', 'component', 'render_as', 'textTemplate', 'placeholder', 'specifier', 'textAlign']\n  }],\n  properties: {\n    title: {\n      title: 'Header'\n    },\n    component: {\n      title: 'Component type',\n      choices: [['text', 'Text'], ['link', 'Link']],\n      defaultValue: 'text'\n    },\n    target: {\n      title: 'Target',\n      choices: [['_blank', 'New window'], ['_self', 'Same window']]\n    },\n    external: {\n      title: 'External link',\n      type: 'boolean'\n    },\n    linkTemplate: {\n      title: 'Link template',\n      description: 'Add suffix/prefix to text. Use {} for value placeholder'\n    },\n    render_as: {\n      title: 'HTML tag'\n    },\n    specifier: {\n      title: 'Format specifier',\n      description: __jsx(React.Fragment, null, \"See\", ' ', __jsx(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: \"https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, \"D3 format documentation\"))\n    },\n    textTemplate: {\n      title: 'Text template',\n      description: 'Add suffix/prefix to text. Use {} for value placeholder'\n    },\n    placeholder: {\n      title: 'Placeholder'\n    },\n    textAlign: {\n      title: 'Align',\n      widget: 'align',\n      type: 'string'\n    },\n    column: {\n      title: 'Data column',\n      choices: []\n    },\n    column_link: {\n      title: 'Data column link',\n      choices: []\n    }\n  },\n  required: ['column']\n};\nconst getColumnSchema = (schema, child) => {\n  return _objectSpread(_objectSpread({}, columnSchema), {}, {\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['column', ...((child === null || child === void 0 ? void 0 : child.component) === 'link' ? ['column_link'] : []), 'title', 'component', ...((child === null || child === void 0 ? void 0 : child.component) === 'link' ? ['target', 'external', 'linkTemplate'] : []), 'render_as', 'textTemplate', 'specifier', 'textAlign']\n    }],\n    required: ['column', 'column_link']\n  });\n};\nexport const SimpleDataTableSchema = (config, templateSchema = {}) => {\n  const templatesConfig = config.blocks.blocksConfig.simpleDataConnectedTable.templates;\n  const templates = Object.keys(templatesConfig).map(template => [template, templatesConfig[template].title || template]);\n  const defaultFieldset = templateSchema.fieldsets.filter(fieldset => {\n    return fieldset.id === 'default';\n  })[0];\n  return {\n    title: 'DataConnected Table',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['description', 'placeholder', 'template', ...((defaultFieldset === null || defaultFieldset === void 0 ? void 0 : defaultFieldset.fields) || {})] // title\n    }, {\n      id: 'source',\n      title: 'Data source',\n      fields: ['provider_url', 'allowedParams', 'max_count', 'columns']\n    }, {\n      id: 'data_query',\n      title: 'Data query',\n      fields: ['data_query']\n    }, {\n      id: 'styling',\n      title: 'Styling',\n      fields: ['has_pagination', 'show_header', 'underline', 'striped', 'bordered', 'compact_table']\n    }],\n    properties: _objectSpread({\n      // columns: {\n      //   title: 'Columns',\n      //   description: 'Leave empty to show all columns',\n      //   isMulti: true,\n      //   choices: [],\n      //   widget: 'multi_select',\n      // },\n      columns: {\n        title: 'Columns',\n        description: 'Leave empty to show all columns',\n        schema: columnSchema,\n        schemaExtender: (schema, child) => getColumnSchema(schema, child),\n        widget: 'object_list'\n      },\n      description: {\n        title: 'Description',\n        widget: 'slate_richtext',\n        description: 'Allows rich text formatting'\n      },\n      provider_url: {\n        title: 'Data provider',\n        widget: 'object_by_path'\n      },\n      allowedParams: {\n        title: 'Allowed url params',\n        type: 'array',\n        items: {\n          choices: []\n        }\n      },\n      data_query: {\n        title: 'Data query',\n        widget: 'data_query'\n      },\n      max_count: {\n        title: 'Max results',\n        widget: 'number',\n        defaultValue: 5\n      },\n      placeholder: {\n        title: 'Placeholder',\n        widget: 'textarea',\n        default: 'No results'\n      },\n      template: {\n        title: 'Template',\n        type: 'array',\n        choices: [...templates],\n        default: 'default'\n      },\n      has_pagination: {\n        title: 'Pagination',\n        type: 'boolean',\n        default: false\n      },\n      show_header: {\n        title: 'Show header?',\n        type: 'boolean'\n      },\n      striped: {\n        title: 'Color alternate rows',\n        type: 'boolean'\n      },\n      bordered: {\n        title: 'Remove table border',\n        type: 'boolean'\n      },\n      compact_table: {\n        title: 'Compact table',\n        type: 'boolean'\n      },\n      underline: {\n        title: 'Title underline',\n        type: 'boolean'\n      }\n    }, templateSchema.properties || {}),\n    required: ['provider_url', ...(templateSchema.required || [])]\n  };\n};","map":{"version":3,"names":["React","columnSchema","title","fieldsets","id","fields","properties","component","choices","defaultValue","target","external","type","linkTemplate","description","render_as","specifier","textTemplate","placeholder","textAlign","widget","column","column_link","required","getColumnSchema","schema","child","SimpleDataTableSchema","config","templateSchema","templatesConfig","blocks","blocksConfig","simpleDataConnectedTable","templates","Object","keys","map","template","defaultFieldset","filter","fieldset","columns","schemaExtender","provider_url","allowedParams","items","data_query","max_count","default","has_pagination","show_header","striped","bordered","compact_table","underline"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Blocks/SimpleDataTable/schema.js"],"sourcesContent":["import React from 'react';\n\nconst columnSchema = {\n  title: 'Column',\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: [\n        'column',\n        'title',\n        'component',\n        'render_as',\n        'textTemplate',\n        'placeholder',\n        'specifier',\n        'textAlign',\n      ],\n    },\n  ],\n  properties: {\n    title: {\n      title: 'Header',\n    },\n    component: {\n      title: 'Component type',\n      choices: [\n        ['text', 'Text'],\n        ['link', 'Link'],\n      ],\n      defaultValue: 'text',\n    },\n    target: {\n      title: 'Target',\n      choices: [\n        ['_blank', 'New window'],\n        ['_self', 'Same window'],\n      ],\n    },\n    external: {\n      title: 'External link',\n      type: 'boolean',\n    },\n    linkTemplate: {\n      title: 'Link template',\n      description: 'Add suffix/prefix to text. Use {} for value placeholder',\n    },\n    render_as: {\n      title: 'HTML tag',\n    },\n    specifier: {\n      title: 'Format specifier',\n      description: (\n        <>\n          See{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format\"\n          >\n            D3 format documentation\n          </a>\n        </>\n      ),\n    },\n    textTemplate: {\n      title: 'Text template',\n      description: 'Add suffix/prefix to text. Use {} for value placeholder',\n    },\n    placeholder: {\n      title: 'Placeholder',\n    },\n    textAlign: {\n      title: 'Align',\n      widget: 'align',\n      type: 'string',\n    },\n    column: {\n      title: 'Data column',\n      choices: [],\n    },\n    column_link: {\n      title: 'Data column link',\n      choices: [],\n    },\n  },\n  required: ['column'],\n};\n\nconst getColumnSchema = (schema, child) => {\n  return {\n    ...columnSchema,\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: [\n          'column',\n          ...(child?.component === 'link' ? ['column_link'] : []),\n          'title',\n          'component',\n          ...(child?.component === 'link'\n            ? ['target', 'external', 'linkTemplate']\n            : []),\n          'render_as',\n          'textTemplate',\n          'specifier',\n          'textAlign',\n        ],\n      },\n    ],\n    required: ['column', 'column_link'],\n  };\n};\n\nexport const SimpleDataTableSchema = (config, templateSchema = {}) => {\n  const templatesConfig =\n    config.blocks.blocksConfig.simpleDataConnectedTable.templates;\n\n  const templates = Object.keys(templatesConfig).map((template) => [\n    template,\n    templatesConfig[template].title || template,\n  ]);\n  const defaultFieldset = templateSchema.fieldsets.filter((fieldset) => {\n    return fieldset.id === 'default';\n  })[0];\n\n  return {\n    title: 'DataConnected Table',\n\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: [\n          'description',\n          'placeholder',\n          'template',\n          ...(defaultFieldset?.fields || {}),\n        ], // title\n      },\n      {\n        id: 'source',\n        title: 'Data source',\n        fields: ['provider_url', 'allowedParams', 'max_count', 'columns'],\n      },\n      {\n        id: 'data_query',\n        title: 'Data query',\n        fields: ['data_query'],\n      },\n      {\n        id: 'styling',\n        title: 'Styling',\n        fields: [\n          'has_pagination',\n          'show_header',\n          'underline',\n          'striped',\n          'bordered',\n          'compact_table',\n        ],\n      },\n    ],\n\n    properties: {\n      // columns: {\n      //   title: 'Columns',\n      //   description: 'Leave empty to show all columns',\n      //   isMulti: true,\n      //   choices: [],\n      //   widget: 'multi_select',\n      // },\n      columns: {\n        title: 'Columns',\n        description: 'Leave empty to show all columns',\n        schema: columnSchema,\n        schemaExtender: (schema, child) => getColumnSchema(schema, child),\n        widget: 'object_list',\n      },\n\n      description: {\n        title: 'Description',\n        widget: 'slate_richtext',\n        description: 'Allows rich text formatting',\n      },\n      provider_url: {\n        title: 'Data provider',\n        widget: 'object_by_path',\n      },\n      allowedParams: {\n        title: 'Allowed url params',\n        type: 'array',\n        items: {\n          choices: [],\n        },\n      },\n      data_query: {\n        title: 'Data query',\n        widget: 'data_query',\n      },\n      max_count: {\n        title: 'Max results',\n        widget: 'number',\n        defaultValue: 5,\n      },\n      placeholder: {\n        title: 'Placeholder',\n        widget: 'textarea',\n        default: 'No results',\n      },\n      template: {\n        title: 'Template',\n        type: 'array',\n        choices: [...templates],\n        default: 'default',\n      },\n      has_pagination: {\n        title: 'Pagination',\n        type: 'boolean',\n        default: false,\n      },\n      show_header: {\n        title: 'Show header?',\n        type: 'boolean',\n      },\n      striped: {\n        title: 'Color alternate rows',\n        type: 'boolean',\n      },\n      bordered: {\n        title: 'Remove table border',\n        type: 'boolean',\n      },\n      compact_table: {\n        title: 'Compact table',\n        type: 'boolean',\n      },\n      underline: {\n        title: 'Title underline',\n        type: 'boolean',\n      },\n      ...(templateSchema.properties || {}),\n    },\n\n    required: ['provider_url', ...(templateSchema.required || [])],\n  };\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}