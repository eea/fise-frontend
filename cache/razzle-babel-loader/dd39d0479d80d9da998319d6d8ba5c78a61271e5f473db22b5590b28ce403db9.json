{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-taxonomy/src/ControlPanel/TermInput.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Grid, Button, Label, Input } from 'semantic-ui-react';\nconst TermInput = ({\n  entry,\n  onChange\n}) => {\n  const [isEditing, setEditing] = React.useState();\n  return isEditing ? __jsx(Grid, {\n    columns: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, __jsx(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, __jsx(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"Title\")), __jsx(Input, {\n    value: entry.title,\n    onChange: (ev, {\n      value\n    }) => {\n      onChange('title', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  })), __jsx(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Token\")), __jsx(Input, {\n    value: entry.token,\n    onChange: (e, {\n      value\n    }) => {\n      onChange('token', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }))), __jsx(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    compact: true,\n    onClick: () => {\n      setEditing(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"OK\"))) : __jsx(Button, {\n    title: entry.token,\n    compact: true,\n    basic: true,\n    onClick: () => setEditing(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, entry.title));\n};\nexport default TermInput;","map":{"version":3,"names":["React","Grid","Button","Label","Input","TermInput","entry","onChange","isEditing","setEditing","useState","title","ev","value","token","e"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-taxonomy/src/ControlPanel/TermInput.jsx"],"sourcesContent":["import React from 'react';\nimport { Grid, Button, Label, Input } from 'semantic-ui-react';\n\nconst TermInput = ({ entry, onChange }) => {\n  const [isEditing, setEditing] = React.useState();\n  return isEditing ? (\n    <Grid columns={2}>\n      <Grid.Row>\n        <Grid.Column>\n          <div>\n            <Label>Title</Label>\n          </div>\n          <Input\n            value={entry.title}\n            onChange={(ev, { value }) => {\n              onChange('title', value);\n            }}\n          />\n        </Grid.Column>\n        <Grid.Column>\n          <div>\n            <Label>Token</Label>\n          </div>\n          <Input\n            value={entry.token}\n            onChange={(e, { value }) => {\n              onChange('token', value);\n            }}\n          />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Button\n          compact\n          onClick={() => {\n            setEditing(false);\n          }}\n        >\n          OK\n        </Button>\n      </Grid.Row>\n    </Grid>\n  ) : (\n    <Button title={entry.token} compact basic onClick={() => setEditing(true)}>\n      <span>{entry.title}</span>\n    </Button>\n  );\n};\n\nexport default TermInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,KAAK,QAAQ,mBAAmB;AAE9D,MAAMC,SAAS,GAAG,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACzC,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGT,KAAK,CAACU,QAAQ,EAAE;EAChD,OAAOF,SAAS,GACd,MAAC,IAAI;IAAC,OAAO,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACf,MAAC,IAAI,CAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACP,MAAC,IAAI,CAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAAc,CAChB,EACN,MAAC,KAAK;IACJ,KAAK,EAAEF,KAAK,CAACK,KAAM;IACnB,QAAQ,EAAE,CAACC,EAAE,EAAE;MAAEC;IAAM,CAAC,KAAK;MAC3BN,QAAQ,CAAC,OAAO,EAAEM,KAAK,CAAC;IAC1B,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF,CACU,EACd,MAAC,IAAI,CAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAAc,CAChB,EACN,MAAC,KAAK;IACJ,KAAK,EAAEP,KAAK,CAACQ,KAAM;IACnB,QAAQ,EAAE,CAACC,CAAC,EAAE;MAAEF;IAAM,CAAC,KAAK;MAC1BN,QAAQ,CAAC,OAAO,EAAEM,KAAK,CAAC;IAC1B,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF,CACU,CACL,EACX,MAAC,IAAI,CAAC,GAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACP,MAAC,MAAM;IACL,OAAO;IACP,OAAO,EAAE,MAAM;MACbJ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,QAGK,CACA,CACN,GAEP,MAAC,MAAM;IAAC,KAAK,EAAEH,KAAK,CAACQ,KAAM;IAAC,OAAO;IAAC,KAAK;IAAC,OAAO,EAAE,MAAML,UAAU,CAAC,IAAI,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACxE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAOH,KAAK,CAACK,KAAK,CAAQ,CAE7B;AACH,CAAC;AAED,eAAeN,SAAS"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}