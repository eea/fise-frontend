{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Rules/AddRule.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Add content rule component.\n * @module components/manage/Controlpanels/Rules/AddRule\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getBaseUrl, getParentUrl, Helmet } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Checkbox, Container, Form, Grid, Segment } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { Icon, Toolbar, Field } from '@plone/volto/components';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nimport { getContentRulesEvents, addNewRule } from '@plone/volto/actions';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  addRule: {\n    \"id\": \"Add Content Rule\",\n    \"defaultMessage\": \"Add Content Rule\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  add: {\n    \"id\": \"Rule added\",\n    \"defaultMessage\": \"Rule added\"\n  }\n});\n\n/**\n * AddRule class.\n * @class AddRule\n * @extends Component\n */\nclass AddRule extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClient: false,\n      title: '',\n      description: '',\n      event: '',\n      cascading: false,\n      stop: false,\n      enabled: false,\n      invalidForm: true,\n      invalidTitle: false,\n      invalidEvent: false\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({\n      isClient: true\n    });\n    this.props.getContentRulesEvents(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.title !== this.state.title || prevState.event !== this.state.event) {\n      if (this.state.title && this.state.event) {\n        this.setState({\n          invalidForm: false,\n          invalidTitle: false,\n          invalidEvent: false\n        });\n      } else {\n        if (!this.state.title) {\n          this.setState({\n            invalidForm: true,\n            invalidTitle: true\n          });\n        }\n        if (!this.state.event) {\n          this.setState({\n            invalidForm: true,\n            invalidEvent: true\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.rules.add.loading && nextProps.rules.add.loaded) {\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.add),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }));\n      this.props.history.push(getParentUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Add rule handler\n   * @method handleAdd\n   * @returns {undefined}\n   */\n  handleAdd() {\n    const {\n      title,\n      description,\n      event,\n      cascading,\n      stop,\n      enabled,\n      invalidForm\n    } = this.state;\n    const data = {\n      title,\n      description,\n      event,\n      cascading,\n      enabled,\n      stop\n    };\n    if (!invalidForm) {\n      this.props.addNewRule(getBaseUrl(this.props.pathname), data);\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$events, _this$props$events2, _this$props$events3;\n    const {\n      title,\n      description,\n      event,\n      cascading,\n      stop,\n      enabled\n    } = this.state;\n    const triggeringEvents = (_this$props$events = this.props.events) !== null && _this$props$events !== void 0 && _this$props$events.items && ((_this$props$events2 = this.props.events) === null || _this$props$events2 === void 0 ? void 0 : _this$props$events2.items.length) > 0 ? (_this$props$events3 = this.props.events) === null || _this$props$events3 === void 0 ? void 0 : _this$props$events3.items.map(event => [event.title, event.token]) : '';\n    return __jsx(\"div\", {\n      id: \"page-rule-add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.addRule),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, __jsx(\"article\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Add Rule\",\n      defaultMessage: \"Add Rule\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      className: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Use the form below to define the new content rule\",\n      defaultMessage: \"Use the form below to define the new content rule\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 23\n      }\n    }, __jsx(Field, {\n      className: 'title-field',\n      title: 'Title',\n      description: \"Please set a descriptive title for the rule.\",\n      value: title,\n      required: true,\n      onChange: (e, t) => this.setState({\n        title: t\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }))), __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 23\n      }\n    }, __jsx(Field, {\n      title: 'Description',\n      description: \"Enter a short description of the rule and its purpose.\",\n      value: description,\n      onChange: (e, d) => this.setState({\n        description: d\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }))), __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 23\n      }\n    }, __jsx(Field, {\n      required: true,\n      title: 'Triggering event',\n      description: \"The rule will execute when the following event occurs.\",\n      choices: triggeringEvents,\n      value: event,\n      onChange: (e, v) => this.setState({\n        event: v\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }\n    })))))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }, __jsx(Checkbox, {\n      onChange: (e, {\n        checked\n      }) => this.setState({\n        enabled: checked\n      }),\n      label: 'Enabled',\n      checked: enabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 19\n      }\n    }), __jsx(\"p\", {\n      style: {\n        color: '#878f93',\n        paddingTop: '0.7rem',\n        paddingBottom: '0.7rem',\n        fontSize: '0.9rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Whether or not the rule is currently enabled\",\n      defaultMessage: \"Whether or not the rule is currently enabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    })))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, __jsx(Checkbox, {\n      onChange: (e, {\n        checked\n      }) => this.setState({\n        stop: checked\n      }),\n      label: 'Stop Executing rules',\n      checked: stop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 19\n      }\n    }), __jsx(\"p\", {\n      style: {\n        color: '#878f93',\n        paddingTop: '0.7rem',\n        paddingBottom: '0.7rem',\n        fontSize: '0.9rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Whether or not execution of further rules should stop after this rule is executed\",\n      defaultMessage: \"Whether or not execution of further rules should stop after this rule is executed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }\n    })))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }, __jsx(Checkbox, {\n      onChange: (e, {\n        checked\n      }) => this.setState({\n        cascading: checked\n      }),\n      label: 'Cascading rule',\n      checked: cascading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 19\n      }\n    }), __jsx(\"p\", {\n      style: {\n        color: '#878f93',\n        paddingTop: '0.7rem',\n        paddingBottom: '0.7rem',\n        fontSize: '0.9rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\",\n      defaultMessage: \"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    })))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      onClick: () => this.handleAdd(),\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Save\",\n      defaultMessage: \"Save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 19\n      }\n    })), __jsx(Button, {\n      onClick: () => this.onCancel(),\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Cancel\",\n      defaultMessage: \"Cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 19\n      }\n    }))), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 15\n      }\n    }, this.state.invalidTitle && __jsx(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Title field error. Value not provided or already existing.\",\n      defaultMessage: \"Title field error. Value not provided or already existing.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }\n    })), this.state.invalidEvent && __jsx(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 19\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Triggering event field error. Please select a value\",\n      defaultMessage: \"Triggering event field error. Please select a value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }\n    })))))), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(Link, {\n        className: \"item\",\n        to: \"#\",\n        onClick: () => this.onCancel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n_defineProperty(AddRule, \"propTypes\", {\n  getContentRulesEvents: PropTypes.func.isRequired,\n  addNewRule: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  rules: state.controlpanelrules,\n  events: state.contentrulesevents,\n  pathname: props.location.pathname\n}), {\n  getContentRulesEvents,\n  addNewRule\n}))(AddRule);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","getBaseUrl","getParentUrl","Helmet","Portal","Button","Checkbox","Container","Form","Grid","Segment","FormattedMessage","defineMessages","injectIntl","Icon","Toolbar","Field","toast","Toast","getContentRulesEvents","addNewRule","backSVG","messages","back","addRule","success","add","AddRule","constructor","props","state","isClient","title","description","event","cascading","stop","enabled","invalidForm","invalidTitle","invalidEvent","componentDidMount","setState","pathname","componentDidUpdate","prevProps","prevState","UNSAFE_componentWillReceiveProps","nextProps","rules","loading","loaded","intl","formatMessage","history","push","onCancel","handleAdd","data","render","triggeringEvents","events","items","length","map","token","e","t","d","v","display","flexDirection","checked","color","paddingTop","paddingBottom","fontSize","document","getElementById","func","isRequired","controlpanelrules","contentrulesevents","location"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Rules/AddRule.jsx"],"sourcesContent":["/**\n * Add content rule component.\n * @module components/manage/Controlpanels/Rules/AddRule\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getBaseUrl, getParentUrl, Helmet } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Form,\n  Grid,\n  Segment,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { Icon, Toolbar, Field } from '@plone/volto/components';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\n\nimport { getContentRulesEvents, addNewRule } from '@plone/volto/actions';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  addRule: {\n    id: 'Add Content Rule',\n    defaultMessage: 'Add Content Rule',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  add: {\n    id: 'Rule added',\n    defaultMessage: 'Rule added',\n  },\n});\n\n/**\n * AddRule class.\n * @class AddRule\n * @extends Component\n */\nclass AddRule extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getContentRulesEvents: PropTypes.func.isRequired,\n    addNewRule: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClient: false,\n      title: '',\n      description: '',\n      event: '',\n      cascading: false,\n      stop: false,\n      enabled: false,\n      invalidForm: true,\n      invalidTitle: false,\n      invalidEvent: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.setState({ isClient: true });\n    this.props.getContentRulesEvents(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.title !== this.state.title ||\n      prevState.event !== this.state.event\n    ) {\n      if (this.state.title && this.state.event) {\n        this.setState({\n          invalidForm: false,\n          invalidTitle: false,\n          invalidEvent: false,\n        });\n      } else {\n        if (!this.state.title) {\n          this.setState({ invalidForm: true, invalidTitle: true });\n        }\n        if (!this.state.event) {\n          this.setState({ invalidForm: true, invalidEvent: true });\n        }\n      }\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.rules.add.loading && nextProps.rules.add.loaded) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.add)}\n        />,\n      );\n      this.props.history.push(getParentUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Add rule handler\n   * @method handleAdd\n   * @returns {undefined}\n   */\n  handleAdd() {\n    const {\n      title,\n      description,\n      event,\n      cascading,\n      stop,\n      enabled,\n      invalidForm,\n    } = this.state;\n    const data = { title, description, event, cascading, enabled, stop };\n    if (!invalidForm) {\n      this.props.addNewRule(getBaseUrl(this.props.pathname), data);\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { title, description, event, cascading, stop, enabled } = this.state;\n    const triggeringEvents =\n      this.props.events?.items && this.props.events?.items.length > 0\n        ? this.props.events?.items.map((event) => [event.title, event.token])\n        : '';\n\n    return (\n      <div id=\"page-rule-add\">\n        <Helmet title={this.props.intl.formatMessage(messages.addRule)} />\n        <Container>\n          <article id=\"content\">\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage id=\"Add Rule\" defaultMessage=\"Add Rule\" />\n              </Segment>\n              <Segment className=\"secondary\">\n                <FormattedMessage\n                  id=\"Use the form below to define the new content rule\"\n                  defaultMessage=\"Use the form below to define the new content rule\"\n                />\n              </Segment>\n              <Segment>\n                <Form>\n                  <Grid>\n                    <Grid.Row stretched>\n                      <Grid.Column>\n                        <Field\n                          className={'title-field'}\n                          title={'Title'}\n                          description=\"Please set a descriptive title for the rule.\"\n                          value={title}\n                          required\n                          onChange={(e, t) => this.setState({ title: t })}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row stretched>\n                      <Grid.Column>\n                        <Field\n                          title={'Description'}\n                          description=\"Enter a short description of the rule and its purpose.\"\n                          value={description}\n                          onChange={(e, d) => this.setState({ description: d })}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row stretched>\n                      <Grid.Column>\n                        <Field\n                          required\n                          title={'Triggering event'}\n                          description=\"The rule will execute when the following event occurs.\"\n                          choices={triggeringEvents}\n                          value={event}\n                          onChange={(e, v) => this.setState({ event: v })}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form>\n              </Segment>\n              <Segment>\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <Checkbox\n                    onChange={(e, { checked }) =>\n                      this.setState({ enabled: checked })\n                    }\n                    label={'Enabled'}\n                    checked={enabled}\n                  />\n                  <p\n                    style={{\n                      color: '#878f93',\n                      paddingTop: '0.7rem',\n                      paddingBottom: '0.7rem',\n                      fontSize: '0.9rem',\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"Whether or not the rule is currently enabled\"\n                      defaultMessage=\"Whether or not the rule is currently enabled\"\n                    />\n                  </p>\n                </div>\n              </Segment>\n              <Segment>\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <Checkbox\n                    onChange={(e, { checked }) =>\n                      this.setState({ stop: checked })\n                    }\n                    label={'Stop Executing rules'}\n                    checked={stop}\n                  />\n                  <p\n                    style={{\n                      color: '#878f93',\n                      paddingTop: '0.7rem',\n                      paddingBottom: '0.7rem',\n                      fontSize: '0.9rem',\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"Whether or not execution of further rules should stop after this rule is executed\"\n                      defaultMessage=\"Whether or not execution of further rules should stop after this rule is executed\"\n                    />\n                  </p>\n                </div>\n              </Segment>\n              <Segment>\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <Checkbox\n                    onChange={(e, { checked }) =>\n                      this.setState({ cascading: checked })\n                    }\n                    label={'Cascading rule'}\n                    checked={cascading}\n                  />\n                  <p\n                    style={{\n                      color: '#878f93',\n                      paddingTop: '0.7rem',\n                      paddingBottom: '0.7rem',\n                      fontSize: '0.9rem',\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\"\n                      defaultMessage=\"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops\"\n                    />\n                  </p>\n                </div>\n              </Segment>\n              <Segment>\n                <Button onClick={() => this.handleAdd()} primary>\n                  <FormattedMessage id=\"Save\" defaultMessage=\"Save\" />\n                </Button>\n                <Button onClick={() => this.onCancel()} secondary>\n                  <FormattedMessage id=\"Cancel\" defaultMessage=\"Cancel\" />\n                </Button>\n              </Segment>\n              <Segment>\n                {this.state.invalidTitle && (\n                  <p style={{ color: 'red' }}>\n                    <FormattedMessage\n                      id=\"Title field error. Value not provided or already existing.\"\n                      defaultMessage=\"Title field error. Value not provided or already existing.\"\n                    />\n                  </p>\n                )}\n                {this.state.invalidEvent && (\n                  <p style={{ color: 'red' }}>\n                    <FormattedMessage\n                      id=\"Triggering event field error. Please select a value\"\n                      defaultMessage=\"Triggering event field error. Please select a value\"\n                    />\n                  </p>\n                )}\n              </Segment>\n            </Segment.Group>\n          </article>\n        </Container>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link className=\"item\" to=\"#\" onClick={() => this.onCancel()}>\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      rules: state.controlpanelrules,\n      events: state.contentrulesevents,\n      pathname: props.location.pathname,\n    }),\n    { getContentRulesEvents, addNewRule },\n  ),\n)(AddRule);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"Add Content Rule","defaultMessage":"Add Content Rule"},{"id":"Success","defaultMessage":"Success"},{"id":"Rule added","defaultMessage":"Rule added"},{"id":"Add Rule","defaultMessage":"Add Rule"},{"id":"Use the form below to define the new content rule","defaultMessage":"Use the form below to define the new content rule"},{"id":"Whether or not the rule is currently enabled","defaultMessage":"Whether or not the rule is currently enabled"},{"id":"Whether or not execution of further rules should stop after this rule is executed","defaultMessage":"Whether or not execution of further rules should stop after this rule is executed"},{"id":"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops","defaultMessage":"Whether or not other rules should be triggered by the actions launched by this rule. Activate this only if you are sure this won't create infinite loops"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Title field error. Value not provided or already existing.","defaultMessage":"Title field error. Value not provided or already existing."},{"id":"Triggering event field error. Please select a value","defaultMessage":"Triggering event field error. Please select a value"}]}},"sourceType":"module","externalDependencies":[]}