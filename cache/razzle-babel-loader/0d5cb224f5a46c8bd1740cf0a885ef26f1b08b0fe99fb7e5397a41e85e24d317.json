{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { base_layers } from '../../constants';\nvar customBaselayers = [['positron-composite', 'positron-composite']];\nvar BaseLayerSchema = function BaseLayerSchema(_ref) {\n  var _data$map_data, _data$map_data$base;\n  var _ref$data = _ref.data,\n    data = _ref$data === void 0 ? {} : _ref$data;\n  var useCustomBase = data === null || data === void 0 ? void 0 : (_data$map_data = data.map_data) === null || _data$map_data === void 0 ? void 0 : (_data$map_data$base = _data$map_data.base) === null || _data$map_data$base === void 0 ? void 0 : _data$map_data$base.use_custom_base;\n  return {\n    title: 'Base Layer',\n    fieldsets: [{\n      id: 'base',\n      title: 'Base Layer',\n      fields: ['use_custom_base'].concat(_toConsumableArray(useCustomBase ? ['custom_base_layer'] : ['base_layer']))\n    }],\n    properties: {\n      use_custom_base: {\n        title: 'Use custom Base Layer',\n        description: 'Switch between default base layers and defining your custom service base layer',\n        type: 'boolean'\n      },\n      base_layer: {\n        title: 'Base Layer',\n        choices: [].concat(customBaselayers, _toConsumableArray(base_layers))\n      },\n      custom_base_layer: {\n        title: 'Base Layer',\n        description: 'Add an URL Template to import your own base layer from an external service'\n      }\n    },\n    required: []\n  };\n};\n_c = BaseLayerSchema;\nvar LayerSchema = {\n  title: 'Layer',\n  fieldsets: [{\n    id: 'default',\n    title: 'Layer',\n    fields: ['map_layer']\n  }],\n  properties: {\n    map_layer: {\n      title: 'Map layer configuration',\n      widget: 'map_layers_widget'\n    }\n  },\n  required: []\n};\nvar MapLayersSchema = {\n  title: 'Map Layers',\n  fieldsets: [{\n    id: 'default',\n    title: 'Map Data',\n    fields: ['map_layers']\n  }],\n  properties: {\n    map_layers: {\n      title: 'Map Layers',\n      description: 'Add/Edit Map Layers',\n      widget: 'object_list',\n      schema: LayerSchema\n    }\n  },\n  required: []\n};\nvar GeneralSchema = function GeneralSchema(_ref2) {\n  var _data$map_data2, _data$map_data2$gener;\n  var _ref2$data = _ref2.data,\n    data = _ref2$data === void 0 ? {} : _ref2$data;\n  var centerOnExtent = data === null || data === void 0 ? void 0 : (_data$map_data2 = data.map_data) === null || _data$map_data2 === void 0 ? void 0 : (_data$map_data2$gener = _data$map_data2.general) === null || _data$map_data2$gener === void 0 ? void 0 : _data$map_data2$gener.centerOnExtent;\n  return {\n    title: 'General',\n    fieldsets: [{\n      id: 'default',\n      title: 'Zoom',\n      fields: ['print_position', 'zoom_position', 'scalebar', 'centerOnExtent'].concat(_toConsumableArray(!centerOnExtent ? ['zoom_level', 'long', 'lat'] : []))\n    }],\n    properties: {\n      centerOnExtent: {\n        title: 'Center on extent',\n        type: 'boolean',\n        description: 'This will override latitude/longitude/zoom level and will lock zoom/moving the map.'\n      },\n      scalebar: {\n        title: 'Scalebar',\n        choices: ['metric', 'non-metric', 'dual'].map(function (n) {\n          return [n, n];\n        })\n      },\n      zoom_position: {\n        title: 'Zoom position',\n        choices: ['bottom-right', 'bottom-left', 'top-right', 'top-left'].map(function (n) {\n          return [n, n];\n        })\n      },\n      zoom_level: {\n        title: 'Zoom level',\n        type: 'number'\n      },\n      \"long\": {\n        title: 'Longitude',\n        type: 'number',\n        description: \"Will set the map center long coordinate. See: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html#center\"\n      },\n      lat: {\n        title: 'Latitude',\n        type: 'number',\n        description: \"Will set the map center lat coordinate. See: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html#center\"\n      },\n      print_position: {\n        title: 'Print position',\n        choices: ['bottom-right', 'bottom-left', 'top-right', 'top-left'].map(function (n) {\n          return [n, n];\n        })\n      }\n    },\n    required: []\n  };\n};\n_c2 = GeneralSchema;\nexport default (function (_ref3) {\n  var _ref3$data = _ref3.data,\n    data = _ref3$data === void 0 ? {} : _ref3$data;\n  var generalSchema = GeneralSchema({\n    data: data\n  });\n  var baseLayerSchema = BaseLayerSchema({\n    data: data\n  });\n  return {\n    title: 'Map Editor',\n    fieldsets: [{\n      id: 'default',\n      title: 'Map Editor Sections',\n      fields: ['map_data']\n    }],\n    properties: {\n      map_data: {\n        title: 'Panels',\n        widget: 'object_types_widget',\n        schemas: [{\n          id: 'general',\n          schema: generalSchema\n        }, {\n          id: 'base',\n          schema: baseLayerSchema\n        }, {\n          id: 'layers',\n          schema: MapLayersSchema\n        }]\n      }\n    },\n    required: []\n  };\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"BaseLayerSchema\");\n$RefreshReg$(_c2, \"GeneralSchema\");","map":{"version":3,"names":["base_layers","customBaselayers","BaseLayerSchema","data","useCustomBase","map_data","base","use_custom_base","title","fieldsets","id","fields","properties","description","type","base_layer","choices","custom_base_layer","required","LayerSchema","map_layer","widget","MapLayersSchema","map_layers","schema","GeneralSchema","centerOnExtent","general","scalebar","map","n","zoom_position","zoom_level","lat","print_position","generalSchema","baseLayerSchema","schemas"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-eea-map/src/components/visualization/panelsSchema.js"],"sourcesContent":["import { base_layers } from '../../constants';\n\nconst customBaselayers = [['positron-composite', 'positron-composite']];\n\nconst BaseLayerSchema = ({ data = {} }) => {\n  const useCustomBase = data?.map_data?.base?.use_custom_base;\n  return {\n    title: 'Base Layer',\n    fieldsets: [\n      {\n        id: 'base',\n        title: 'Base Layer',\n        fields: [\n          'use_custom_base',\n          ...(useCustomBase ? ['custom_base_layer'] : ['base_layer']),\n        ],\n      },\n    ],\n    properties: {\n      use_custom_base: {\n        title: 'Use custom Base Layer',\n        description:\n          'Switch between default base layers and defining your custom service base layer',\n        type: 'boolean',\n      },\n      base_layer: {\n        title: 'Base Layer',\n        choices: [...customBaselayers, ...base_layers],\n      },\n      custom_base_layer: {\n        title: 'Base Layer',\n        description:\n          'Add an URL Template to import your own base layer from an external service',\n      },\n    },\n    required: [],\n  };\n};\n\nconst LayerSchema = {\n  title: 'Layer',\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Layer',\n      fields: ['map_layer'],\n    },\n  ],\n  properties: {\n    map_layer: {\n      title: 'Map layer configuration',\n      widget: 'map_layers_widget',\n    },\n  },\n  required: [],\n};\n\nconst MapLayersSchema = {\n  title: 'Map Layers',\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Map Data',\n      fields: ['map_layers'],\n    },\n  ],\n  properties: {\n    map_layers: {\n      title: 'Map Layers',\n      description: 'Add/Edit Map Layers',\n      widget: 'object_list',\n      schema: LayerSchema,\n    },\n  },\n  required: [],\n};\n\nconst GeneralSchema = ({ data = {} }) => {\n  const centerOnExtent = data?.map_data?.general?.centerOnExtent;\n\n  return {\n    title: 'General',\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Zoom',\n        fields: [\n          'print_position',\n          'zoom_position',\n          'scalebar',\n          'centerOnExtent',\n          ...(!centerOnExtent ? ['zoom_level', 'long', 'lat'] : []),\n        ],\n      },\n    ],\n    properties: {\n      centerOnExtent: {\n        title: 'Center on extent',\n        type: 'boolean',\n        description:\n          'This will override latitude/longitude/zoom level and will lock zoom/moving the map.',\n      },\n      scalebar: {\n        title: 'Scalebar',\n        choices: ['metric', 'non-metric', 'dual'].map((n) => {\n          return [n, n];\n        }),\n      },\n      zoom_position: {\n        title: 'Zoom position',\n        choices: ['bottom-right', 'bottom-left', 'top-right', 'top-left'].map(\n          (n) => {\n            return [n, n];\n          },\n        ),\n      },\n      zoom_level: {\n        title: 'Zoom level',\n        type: 'number',\n      },\n      long: {\n        title: 'Longitude',\n        type: 'number',\n        description: `Will set the map center long coordinate. See: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html#center`,\n      },\n      lat: {\n        title: 'Latitude',\n        type: 'number',\n        description: `Will set the map center lat coordinate. See: https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html#center`,\n      },\n\n      print_position: {\n        title: 'Print position',\n        choices: ['bottom-right', 'bottom-left', 'top-right', 'top-left'].map(\n          (n) => {\n            return [n, n];\n          },\n        ),\n      },\n    },\n    required: [],\n  };\n};\n\nexport default ({ data = {} }) => {\n  const generalSchema = GeneralSchema({ data });\n  const baseLayerSchema = BaseLayerSchema({ data });\n\n  return {\n    title: 'Map Editor',\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Map Editor Sections',\n        fields: ['map_data'],\n      },\n    ],\n    properties: {\n      map_data: {\n        title: 'Panels',\n        widget: 'object_types_widget',\n        schemas: [\n          {\n            id: 'general',\n            schema: generalSchema,\n          },\n          {\n            id: 'base',\n            schema: baseLayerSchema,\n          },\n          {\n            id: 'layers',\n            schema: MapLayersSchema,\n          },\n        ],\n      },\n    },\n    required: [],\n  };\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}