{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SelectFacet.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { Option, DropdownIndicator } from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { selectTheme, customSelectStyles } from './SelectStyling';\nimport { selectFacetSchemaEnhancer, selectFacetStateToValue, selectFacetValueToQuery } from './base';\nvar SelectFacet = function SelectFacet(props) {\n  var _facet$title, _facet$field;\n  var facet = props.facet,\n    choices = props.choices,\n    reactSelect = props.reactSelect,\n    isMulti = props.isMulti,\n    _onChange = props.onChange,\n    value = props.value,\n    isEditMode = props.isEditMode;\n  var Select = reactSelect[\"default\"];\n  var v = Array.isArray(value) && value.length === 0 ? null : value;\n  return __jsx(Select, {\n    placeholder: (_facet$title = facet === null || facet === void 0 ? void 0 : facet.title) !== null && _facet$title !== void 0 ? _facet$title : (facet === null || facet === void 0 ? void 0 : (_facet$field = facet.field) === null || _facet$field === void 0 ? void 0 : _facet$field.label) || 'select...',\n    className: \"react-select-container\",\n    classNamePrefix: \"react-select\",\n    options: choices,\n    styles: customSelectStyles,\n    theme: selectTheme,\n    components: {\n      DropdownIndicator: DropdownIndicator,\n      Option: Option\n    },\n    isDisabled: isEditMode,\n    onChange: function onChange(data) {\n      if (data) {\n        _onChange(facet.field.value, isMulti ? data.map(function (_ref) {\n          var value = _ref.value;\n          return value;\n        }) : [data.value]);\n      } else {\n        // data has been removed\n        _onChange(facet.field.value, []);\n      }\n    },\n    isMulti: facet.multiple,\n    isClearable: true,\n    value: v,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  });\n};\n_c = SelectFacet;\nSelectFacet.schemaEnhancer = selectFacetSchemaEnhancer;\nSelectFacet.stateToValue = selectFacetStateToValue;\nSelectFacet.valueToQuery = selectFacetValueToQuery;\nexport default injectLazyLibs('reactSelect')(SelectFacet);\nvar _c;\n$RefreshReg$(_c, \"SelectFacet\");","map":{"version":3,"names":["React","injectLazyLibs","Option","DropdownIndicator","selectTheme","customSelectStyles","selectFacetSchemaEnhancer","selectFacetStateToValue","selectFacetValueToQuery","SelectFacet","props","facet","choices","reactSelect","isMulti","onChange","value","isEditMode","Select","v","Array","isArray","length","title","field","label","data","map","multiple","schemaEnhancer","stateToValue","valueToQuery"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SelectFacet.jsx"],"sourcesContent":["import React from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport {\n  Option,\n  DropdownIndicator,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { selectTheme, customSelectStyles } from './SelectStyling';\nimport {\n  selectFacetSchemaEnhancer,\n  selectFacetStateToValue,\n  selectFacetValueToQuery,\n} from './base';\n\nconst SelectFacet = (props) => {\n  const {\n    facet,\n    choices,\n    reactSelect,\n    isMulti,\n    onChange,\n    value,\n    isEditMode,\n  } = props;\n  const Select = reactSelect.default;\n  const v = Array.isArray(value) && value.length === 0 ? null : value;\n\n  return (\n    <Select\n      placeholder={facet?.title ?? (facet?.field?.label || 'select...')}\n      className=\"react-select-container\"\n      classNamePrefix=\"react-select\"\n      options={choices}\n      styles={customSelectStyles}\n      theme={selectTheme}\n      components={{ DropdownIndicator, Option }}\n      isDisabled={isEditMode}\n      onChange={(data) => {\n        if (data) {\n          onChange(\n            facet.field.value,\n            isMulti ? data.map(({ value }) => value) : [data.value],\n          );\n        } else {\n          // data has been removed\n          onChange(facet.field.value, []);\n        }\n      }}\n      isMulti={facet.multiple}\n      isClearable\n      value={v}\n    />\n  );\n};\n\nSelectFacet.schemaEnhancer = selectFacetSchemaEnhancer;\nSelectFacet.stateToValue = selectFacetStateToValue;\nSelectFacet.valueToQuery = selectFacetValueToQuery;\n\nexport default injectLazyLibs('reactSelect')(SelectFacet);\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,wCAAwC;AACvE,SACEC,MAAM,EACNC,iBAAiB,QACZ,sDAAsD;AAC7D,SAASC,WAAW,EAAEC,kBAAkB,QAAQ,iBAAiB;AACjE,SACEC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,QAClB,QAAQ;AAEf,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,KAAK,EAAK;EAAA;EAC7B,IACEC,KAAK,GAOHD,KAAK,CAPPC,KAAK;IACLC,OAAO,GAMLF,KAAK,CANPE,OAAO;IACPC,WAAW,GAKTH,KAAK,CALPG,WAAW;IACXC,OAAO,GAILJ,KAAK,CAJPI,OAAO;IACPC,SAAQ,GAGNL,KAAK,CAHPK,QAAQ;IACRC,KAAK,GAEHN,KAAK,CAFPM,KAAK;IACLC,UAAU,GACRP,KAAK,CADPO,UAAU;EAEZ,IAAMC,MAAM,GAAGL,WAAW,WAAQ;EAClC,IAAMM,CAAC,GAAGC,KAAK,CAACC,OAAO,CAACL,KAAK,CAAC,IAAIA,KAAK,CAACM,MAAM,KAAK,CAAC,GAAG,IAAI,GAAGN,KAAK;EAEnE,OACE,MAAC,MAAM;IACL,WAAW,kBAAEL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEY,KAAK,uDAAK,CAAAZ,KAAK,aAALA,KAAK,uCAALA,KAAK,CAAEa,KAAK,iDAAZ,aAAcC,KAAK,KAAI,WAAa;IAClE,SAAS,EAAC,wBAAwB;IAClC,eAAe,EAAC,cAAc;IAC9B,OAAO,EAAEb,OAAQ;IACjB,MAAM,EAAEP,kBAAmB;IAC3B,KAAK,EAAED,WAAY;IACnB,UAAU,EAAE;MAAED,iBAAiB,EAAjBA,iBAAiB;MAAED,MAAM,EAANA;IAAO,CAAE;IAC1C,UAAU,EAAEe,UAAW;IACvB,QAAQ,EAAE,kBAACS,IAAI,EAAK;MAClB,IAAIA,IAAI,EAAE;QACRX,SAAQ,CACNJ,KAAK,CAACa,KAAK,CAACR,KAAK,EACjBF,OAAO,GAAGY,IAAI,CAACC,GAAG,CAAC;UAAA,IAAGX,KAAK,QAALA,KAAK;UAAA,OAAOA,KAAK;QAAA,EAAC,GAAG,CAACU,IAAI,CAACV,KAAK,CAAC,CACxD;MACH,CAAC,MAAM;QACL;QACAD,SAAQ,CAACJ,KAAK,CAACa,KAAK,CAACR,KAAK,EAAE,EAAE,CAAC;MACjC;IACF,CAAE;IACF,OAAO,EAAEL,KAAK,CAACiB,QAAS;IACxB,WAAW;IACX,KAAK,EAAET,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACT;AAEN,CAAC;AAAC,KAvCIV,WAAW;AAyCjBA,WAAW,CAACoB,cAAc,GAAGvB,yBAAyB;AACtDG,WAAW,CAACqB,YAAY,GAAGvB,uBAAuB;AAClDE,WAAW,CAACsB,YAAY,GAAGvB,uBAAuB;AAElD,eAAeP,cAAc,CAAC,aAAa,CAAC,CAACQ,WAAW,CAAC;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}