{"ast":null,"code":"import _omit from \"lodash/omit\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-slate-metadata-mentions/src/plugins/Mentions/index.js\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\nimport { MENTION } from './constants';\nimport { MentionElement } from './render';\nimport { withMention } from './extensions';\nimport { MentionSchema } from './schema';\nimport MentionEditor from './MentionEditor';\nimport ToolbarButton from './ToolbarButton';\nimport mentionsSVG from '@plone/volto/icons/connector.svg';\nimport { makeInlineElementPlugin } from '@plone/volto-slate/elementEditor';\nimport './less/editor.less';\nconst messages = defineMessages({\n  edit: {\n    \"id\": \"Edit metadata\",\n    \"defaultMessage\": \"Edit metadata\"\n  },\n  delete: {\n    \"id\": \"Remove metadata\",\n    \"defaultMessage\": \"Remove metadata\"\n  }\n});\nconst omittedProps = ['pluginEditor', 'getActiveElement', 'unwrapElement', 'schemaProvider', 'hasValue', 'elementType', 'isInlineElement', 'editSchema', 'element', 'persistentHelper'];\nconst btnFactory = options => props => __jsx(ToolbarButton, _extends({}, props, options, {\n  title: \"Metadata\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }\n}));\nexport default (config => {\n  const opts = {\n    title: 'Metadata',\n    pluginId: MENTION,\n    pluginEditor: MentionEditor,\n    elementType: MENTION,\n    element: MentionElement,\n    isInlineElement: true,\n    editSchema: MentionSchema,\n    extensions: [withMention],\n    hasValue: formData => !!(formData.metadata || formData.id),\n    toolbarButtonIcon: mentionsSVG,\n    messages\n  };\n  const [installMentionsEditor,,, pluginOptions] = makeInlineElementPlugin(opts);\n  config = installMentionsEditor(config);\n  const {\n    slate\n  } = config.settings;\n  slate.toolbarButtons = [...(slate.toolbarButtons || []), 'mention'];\n  slate.expandedToolbarButtons = [...(slate.expandedToolbarButtons || []), 'mention'];\n\n  // Custom mention Toolbar Button\n  slate.buttons['mention'] = btnFactory(_omit(pluginOptions, omittedProps));\n  return config;\n});","map":{"version":3,"names":["React","defineMessages","MENTION","MentionElement","withMention","MentionSchema","MentionEditor","ToolbarButton","mentionsSVG","makeInlineElementPlugin","messages","edit","delete","omittedProps","btnFactory","options","props","config","opts","title","pluginId","pluginEditor","elementType","element","isInlineElement","editSchema","extensions","hasValue","formData","metadata","id","toolbarButtonIcon","installMentionsEditor","pluginOptions","slate","settings","toolbarButtons","expandedToolbarButtons","buttons"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate-metadata-mentions/src/plugins/Mentions/index.js"],"sourcesContent":["import React from 'react';\nimport { defineMessages } from 'react-intl';\nimport { MENTION } from './constants';\nimport { MentionElement } from './render';\nimport { withMention } from './extensions';\nimport { MentionSchema } from './schema';\nimport MentionEditor from './MentionEditor';\nimport ToolbarButton from './ToolbarButton';\nimport mentionsSVG from '@plone/volto/icons/connector.svg';\nimport { makeInlineElementPlugin } from '@plone/volto-slate/elementEditor';\nimport { omit } from 'lodash';\n\nimport './less/editor.less';\n\nconst messages = defineMessages({\n  edit: {\n    id: 'Edit metadata',\n    defaultMessage: 'Edit metadata',\n  },\n  delete: {\n    id: 'Remove metadata',\n    defaultMessage: 'Remove metadata',\n  },\n});\n\nconst omittedProps = [\n  'pluginEditor',\n  'getActiveElement',\n  'unwrapElement',\n  'schemaProvider',\n  'hasValue',\n  'elementType',\n  'isInlineElement',\n  'editSchema',\n  'element',\n  'persistentHelper',\n];\n\nconst btnFactory = (options) => (props) => (\n  <ToolbarButton {...props} {...options} title=\"Metadata\" />\n);\n\nexport default (config) => {\n  const opts = {\n    title: 'Metadata',\n    pluginId: MENTION,\n    pluginEditor: MentionEditor,\n    elementType: MENTION,\n    element: MentionElement,\n    isInlineElement: true,\n    editSchema: MentionSchema,\n    extensions: [withMention],\n    hasValue: (formData) => !!(formData.metadata || formData.id),\n    toolbarButtonIcon: mentionsSVG,\n    messages,\n  };\n  const [installMentionsEditor, , , pluginOptions] = makeInlineElementPlugin(\n    opts,\n  );\n  config = installMentionsEditor(config);\n\n  const { slate } = config.settings;\n  slate.toolbarButtons = [...(slate.toolbarButtons || []), 'mention'];\n  slate.expandedToolbarButtons = [\n    ...(slate.expandedToolbarButtons || []),\n    'mention',\n  ];\n\n  // Custom mention Toolbar Button\n  slate.buttons['mention'] = btnFactory(omit(pluginOptions, omittedProps));\n\n  return config;\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,YAAY;AAC3C,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,cAAc,QAAQ,UAAU;AACzC,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,aAAa,QAAQ,UAAU;AACxC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,kCAAkC;AAC1D,SAASC,uBAAuB,QAAQ,kCAAkC;AAG1E,OAAO,oBAAoB;AAE3B,MAAMC,QAAQ,GAAGT,cAAc,CAAC;EAC9BU,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,MAAM;IAAA;IAAA;EAAA;AAIR,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG,CACnB,cAAc,EACd,kBAAkB,EAClB,eAAe,EACf,gBAAgB,EAChB,UAAU,EACV,aAAa,EACb,iBAAiB,EACjB,YAAY,EACZ,SAAS,EACT,kBAAkB,CACnB;AAED,MAAMC,UAAU,GAAIC,OAAO,IAAMC,KAAK,IACpC,MAAC,aAAa,eAAKA,KAAK,EAAMD,OAAO;EAAE,KAAK,EAAC,UAAU;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GACxD;AAED,gBAAgBE,MAAM,IAAK;EACzB,MAAMC,IAAI,GAAG;IACXC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAElB,OAAO;IACjBmB,YAAY,EAAEf,aAAa;IAC3BgB,WAAW,EAAEpB,OAAO;IACpBqB,OAAO,EAAEpB,cAAc;IACvBqB,eAAe,EAAE,IAAI;IACrBC,UAAU,EAAEpB,aAAa;IACzBqB,UAAU,EAAE,CAACtB,WAAW,CAAC;IACzBuB,QAAQ,EAAGC,QAAQ,IAAK,CAAC,EAAEA,QAAQ,CAACC,QAAQ,IAAID,QAAQ,CAACE,EAAE,CAAC;IAC5DC,iBAAiB,EAAEvB,WAAW;IAC9BE;EACF,CAAC;EACD,MAAM,CAACsB,qBAAqB,IAAMC,aAAa,CAAC,GAAGxB,uBAAuB,CACxES,IAAI,CACL;EACDD,MAAM,GAAGe,qBAAqB,CAACf,MAAM,CAAC;EAEtC,MAAM;IAAEiB;EAAM,CAAC,GAAGjB,MAAM,CAACkB,QAAQ;EACjCD,KAAK,CAACE,cAAc,GAAG,CAAC,IAAIF,KAAK,CAACE,cAAc,IAAI,EAAE,CAAC,EAAE,SAAS,CAAC;EACnEF,KAAK,CAACG,sBAAsB,GAAG,CAC7B,IAAIH,KAAK,CAACG,sBAAsB,IAAI,EAAE,CAAC,EACvC,SAAS,CACV;;EAED;EACAH,KAAK,CAACI,OAAO,CAAC,SAAS,CAAC,GAAGxB,UAAU,CAAC,MAAKmB,aAAa,EAAEpB,YAAY,CAAC,CAAC;EAExE,OAAOI,MAAM;AACf,CAAC"},"metadata":{"react-intl":{"messages":[{"id":"Edit metadata","defaultMessage":"Edit metadata"},{"id":"Remove metadata","defaultMessage":"Remove metadata"}]}},"sourceType":"module","externalDependencies":[]}