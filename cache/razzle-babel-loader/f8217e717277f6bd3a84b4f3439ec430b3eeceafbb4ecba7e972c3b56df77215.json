{"ast":null,"code":"import { defineMessages } from 'react-intl';\nconst messages = defineMessages({\n  Maps: {\n    \"id\": \"Maps\",\n    \"defaultMessage\": \"Maps\"\n  },\n  AltText: {\n    \"id\": \"Alt text\",\n    \"defaultMessage\": \"Alt text\"\n  },\n  MapsURL: {\n    \"id\": \"Maps URL\",\n    \"defaultMessage\": \"Maps URL\"\n  },\n  Alignment: {\n    \"id\": \"Alignment\",\n    \"defaultMessage\": \"Alignment\"\n  }\n});\nexport const MapsSchema = props => ({\n  title: props.intl.formatMessage(messages.Maps),\n  block: 'Maps',\n  fieldsets: [{\n    id: 'default',\n    title: 'Default',\n    fields: ['url', 'title', 'align']\n  }],\n  properties: {\n    url: {\n      title: props.intl.formatMessage(messages.MapsURL),\n      widget: 'url'\n    },\n    title: {\n      title: props.intl.formatMessage(messages.AltText)\n    },\n    align: {\n      title: props.intl.formatMessage(messages.Alignment),\n      widget: 'align'\n    }\n  },\n  required: []\n});","map":{"version":3,"names":["defineMessages","messages","Maps","AltText","MapsURL","Alignment","MapsSchema","props","title","intl","formatMessage","block","fieldsets","id","fields","properties","url","widget","align","required"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Maps/schema.js"],"sourcesContent":["import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  Maps: {\n    id: 'Maps',\n    defaultMessage: 'Maps',\n  },\n  AltText: {\n    id: 'Alt text',\n    defaultMessage: 'Alt text',\n  },\n  MapsURL: {\n    id: 'Maps URL',\n    defaultMessage: 'Maps URL',\n  },\n  Alignment: {\n    id: 'Alignment',\n    defaultMessage: 'Alignment',\n  },\n});\nexport const MapsSchema = (props) => ({\n  title: props.intl.formatMessage(messages.Maps),\n  block: 'Maps',\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: ['url', 'title', 'align'],\n    },\n  ],\n\n  properties: {\n    url: {\n      title: props.intl.formatMessage(messages.MapsURL),\n      widget: 'url',\n    },\n    title: {\n      title: props.intl.formatMessage(messages.AltText),\n    },\n    align: {\n      title: props.intl.formatMessage(messages.Alignment),\n      widget: 'align',\n    },\n  },\n  required: [],\n});\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,YAAY;AAE3C,MAAMC,QAAQ,GAAGD,cAAc,CAAC;EAC9BE,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,OAAO;IAAA;IAAA;EAAA,CAGN;EACDC,OAAO;IAAA;IAAA;EAAA,CAGN;EACDC,SAAS;IAAA;IAAA;EAAA;AAIX,CAAC,CAAC;AACF,OAAO,MAAMC,UAAU,GAAIC,KAAK,KAAM;EACpCC,KAAK,EAAED,KAAK,CAACE,IAAI,CAACC,aAAa,CAACT,QAAQ,CAACC,IAAI,CAAC;EAC9CS,KAAK,EAAE,MAAM;EACbC,SAAS,EAAE,CACT;IACEC,EAAE,EAAE,SAAS;IACbL,KAAK,EAAE,SAAS;IAChBM,MAAM,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO;EAClC,CAAC,CACF;EAEDC,UAAU,EAAE;IACVC,GAAG,EAAE;MACHR,KAAK,EAAED,KAAK,CAACE,IAAI,CAACC,aAAa,CAACT,QAAQ,CAACG,OAAO,CAAC;MACjDa,MAAM,EAAE;IACV,CAAC;IACDT,KAAK,EAAE;MACLA,KAAK,EAAED,KAAK,CAACE,IAAI,CAACC,aAAa,CAACT,QAAQ,CAACE,OAAO;IAClD,CAAC;IACDe,KAAK,EAAE;MACLV,KAAK,EAAED,KAAK,CAACE,IAAI,CAACC,aAAa,CAACT,QAAQ,CAACI,SAAS,CAAC;MACnDY,MAAM,EAAE;IACV;EACF,CAAC;EACDE,QAAQ,EAAE;AACZ,CAAC,CAAC"},"metadata":{"react-intl":{"messages":[{"id":"Maps","defaultMessage":"Maps"},{"id":"Alt text","defaultMessage":"Alt text"},{"id":"Maps URL","defaultMessage":"Maps URL"},{"id":"Alignment","defaultMessage":"Alignment"}]}},"sourceType":"module","externalDependencies":[]}