{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Display/Display.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { getSchema, updateContent, getContent } from '@plone/volto/actions';\nimport { getLayoutFieldname } from '@plone/volto/helpers';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\nconst messages = defineMessages({\n  Viewmode: {\n    \"id\": \"Viewmode\",\n    \"defaultMessage\": \"View\"\n  }\n});\nconst Option = injectLazyLibs('reactSelect')(props => {\n  const {\n    Option\n  } = props.reactSelect.components;\n  return __jsx(Option, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, props.label), props.isFocused && !props.isSelected && __jsx(Icon, {\n    name: checkSVG,\n    size: \"18px\",\n    color: \"#b8c6c8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), props.isSelected && __jsx(Icon, {\n    name: checkSVG,\n    size: \"18px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 28\n    }\n  }));\n});\nconst DropdownIndicator = injectLazyLibs('reactSelect')(props => {\n  const {\n    DropdownIndicator\n  } = props.reactSelect.components;\n  return __jsx(DropdownIndicator, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }), props.selectProps.menuIsOpen ? __jsx(Icon, {\n    name: upSVG,\n    size: \"24px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }) : __jsx(Icon, {\n    name: downSVG,\n    size: \"24px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }));\n});\nconst selectTheme = theme => _objectSpread(_objectSpread({}, theme), {}, {\n  borderRadius: 0,\n  colors: _objectSpread(_objectSpread({}, theme.colors), {}, {\n    primary25: 'hotpink',\n    primary: '#b8c6c8'\n  })\n});\nconst customSelectStyles = {\n  control: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    border: 'none',\n    borderBottom: '2px solid #b8c6c8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid'\n  }),\n  menu: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '2px solid #b8c6c8'\n  }),\n  menuList: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    maxHeight: '400px'\n  }),\n  indicatorSeparator: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    width: null\n  }),\n  valueContainer: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    padding: 0\n  }),\n  option: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    backgroundColor: null,\n    minHeight: '50px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '12px 12px',\n    color: state.isSelected ? '#007bc1' : state.isFocused ? '#4a4a4a' : 'inherit',\n    ':active': {\n      backgroundColor: null\n    },\n    span: {\n      flex: '0 0 auto'\n    },\n    svg: {\n      flex: '0 0 auto'\n    }\n  })\n};\n\n/**\n * Display container class.\n * @class Display\n * @extends Component\n */\nclass DisplaySelect extends Component {\n  constructor(...args) {\n    var _config$views$layoutV, _config$views$layoutV2;\n    super(...args);\n    _defineProperty(this, \"state\", {\n      selectedOption: {\n        value: this.props.layout,\n        label: this.props.intl.formatMessage({\n          id: (_config$views$layoutV = config.views.layoutViewsNamesMapping) === null || _config$views$layoutV === void 0 ? void 0 : _config$views$layoutV[this.props.layout],\n          defaultMessage: (_config$views$layoutV2 = config.views.layoutViewsNamesMapping) === null || _config$views$layoutV2 === void 0 ? void 0 : _config$views$layoutV2[this.props.layout]\n        }) || this.props.layout\n      }\n    });\n    _defineProperty(this, \"setLayout\", selectedOption => {\n      this.props.updateContent(this.props.pathname, {\n        layout: selectedOption.value\n      });\n      this.setState({\n        selectedOption\n      });\n    });\n    _defineProperty(this, \"selectValue\", option => __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }\n    }, __jsx(\"span\", {\n      className: \"Select-value-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, option.label)));\n    _defineProperty(this, \"optionRenderer\", option => __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 5\n      }\n    }, __jsx(\"span\", {\n      style: {\n        marginRight: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }, option.label), __jsx(Icon, {\n      name: checkSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    })));\n  }\n  componentDidMount() {\n    this.props.getSchema(this.props.type);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.getSchema(nextProps.type);\n    }\n    if (!this.props.loaded && nextProps.loaded) {\n      this.props.getContent(nextProps.pathname);\n    }\n  }\n\n  /**\n   * On set layout handler\n   * @method setLayout\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n\n  render() {\n    const {\n      selectedOption\n    } = this.state;\n    const Select = this.props.reactSelect.default;\n    const layoutsNames = config.views.layoutViewsNamesMapping;\n    const layoutOptions = this.props.layouts.filter(layout => Object.keys(config.views.contentTypesViews).includes(layout) || Object.keys(config.views.layoutViews).includes(layout)).map(item => ({\n      value: item,\n      label: this.props.intl.formatMessage({\n        id: layoutsNames[item],\n        defaultMessage: layoutsNames[item]\n      }) || item\n    }));\n    return (layoutOptions === null || layoutOptions === void 0 ? void 0 : layoutOptions.length) > 1 ? __jsx(FormFieldWrapper, _extends({\n      id: \"display-select\",\n      title: this.props.intl.formatMessage(messages.Viewmode)\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 7\n      }\n    }), __jsx(Select, {\n      name: \"display-select\",\n      className: \"react-select-container\",\n      classNamePrefix: \"react-select\",\n      options: layoutOptions,\n      styles: customSelectStyles,\n      theme: selectTheme,\n      components: {\n        DropdownIndicator,\n        Option\n      },\n      onChange: this.setLayout,\n      defaultValue: selectedOption,\n      isSearchable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    })) : null;\n  }\n}\n_defineProperty(DisplaySelect, \"propTypes\", {\n  getSchema: PropTypes.func.isRequired,\n  updateContent: PropTypes.func.isRequired,\n  getContent: PropTypes.func.isRequired,\n  loaded: PropTypes.bool.isRequired,\n  pathname: PropTypes.string.isRequired,\n  layouts: PropTypes.arrayOf(PropTypes.string),\n  layout: PropTypes.string,\n  type: PropTypes.string.isRequired\n});\n_defineProperty(DisplaySelect, \"defaultProps\", {\n  layouts: [],\n  layout: ''\n});\nexport default compose(injectIntl, injectLazyLibs('reactSelect'), connect(state => ({\n  loaded: state.content.update.loaded,\n  layouts: state.schema.schema ? state.schema.schema.layouts : [],\n  layout: state.content.data ? state.content.data[getLayoutFieldname(state.content.data)] : '',\n  layout_fieldname: state.content.data ? getLayoutFieldname(state.content.data) : '',\n  type: state.content.data ? state.content.data['@type'] : ''\n}), {\n  getSchema,\n  updateContent,\n  getContent\n}))(DisplaySelect);","map":{"version":3,"names":["React","Component","Fragment","PropTypes","connect","compose","injectLazyLibs","getSchema","updateContent","getContent","getLayoutFieldname","FormFieldWrapper","Icon","defineMessages","injectIntl","config","downSVG","upSVG","checkSVG","messages","Viewmode","Option","props","reactSelect","components","label","isFocused","isSelected","DropdownIndicator","selectProps","menuIsOpen","selectTheme","theme","borderRadius","colors","primary25","primary","customSelectStyles","control","styles","state","border","borderBottom","boxShadow","borderBottomStyle","menu","top","marginTop","menuList","maxHeight","indicatorSeparator","width","valueContainer","padding","option","backgroundColor","minHeight","display","justifyContent","alignItems","color","span","flex","svg","DisplaySelect","selectedOption","value","layout","intl","formatMessage","id","views","layoutViewsNamesMapping","defaultMessage","pathname","setState","marginRight","componentDidMount","type","UNSAFE_componentWillReceiveProps","nextProps","loaded","render","Select","default","layoutsNames","layoutOptions","layouts","filter","Object","keys","contentTypesViews","includes","layoutViews","map","item","length","setLayout","func","isRequired","bool","string","arrayOf","content","update","schema","data","layout_fieldname"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Display/Display.jsx"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport { getSchema, updateContent, getContent } from '@plone/volto/actions';\nimport { getLayoutFieldname } from '@plone/volto/helpers';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\n\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\n\nconst messages = defineMessages({\n  Viewmode: {\n    id: 'Viewmode',\n    defaultMessage: 'View',\n  },\n});\n\nconst Option = injectLazyLibs('reactSelect')((props) => {\n  const { Option } = props.reactSelect.components;\n  return (\n    <Option {...props}>\n      <div>{props.label}</div>\n      {props.isFocused && !props.isSelected && (\n        <Icon name={checkSVG} size=\"18px\" color=\"#b8c6c8\" />\n      )}\n      {props.isSelected && <Icon name={checkSVG} size=\"18px\" color=\"#007bc1\" />}\n    </Option>\n  );\n});\n\nconst DropdownIndicator = injectLazyLibs('reactSelect')((props) => {\n  const { DropdownIndicator } = props.reactSelect.components;\n  return (\n    <DropdownIndicator {...props}>\n      {props.selectProps.menuIsOpen ? (\n        <Icon name={upSVG} size=\"24px\" color=\"#007bc1\" />\n      ) : (\n        <Icon name={downSVG} size=\"24px\" color=\"#007bc1\" />\n      )}\n    </DropdownIndicator>\n  );\n});\n\nconst selectTheme = (theme) => ({\n  ...theme,\n  borderRadius: 0,\n  colors: {\n    ...theme.colors,\n    primary25: 'hotpink',\n    primary: '#b8c6c8',\n  },\n});\n\nconst customSelectStyles = {\n  control: (styles, state) => ({\n    ...styles,\n    border: 'none',\n    borderBottom: '2px solid #b8c6c8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid',\n  }),\n  menu: (styles, state) => ({\n    ...styles,\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '2px solid #b8c6c8',\n  }),\n  menuList: (styles, state) => ({\n    ...styles,\n    maxHeight: '400px',\n  }),\n  indicatorSeparator: (styles) => ({\n    ...styles,\n    width: null,\n  }),\n  valueContainer: (styles) => ({\n    ...styles,\n    padding: 0,\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: null,\n    minHeight: '50px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '12px 12px',\n    color: state.isSelected\n      ? '#007bc1'\n      : state.isFocused\n      ? '#4a4a4a'\n      : 'inherit',\n    ':active': {\n      backgroundColor: null,\n    },\n    span: {\n      flex: '0 0 auto',\n    },\n    svg: {\n      flex: '0 0 auto',\n    },\n  }),\n};\n\n/**\n * Display container class.\n * @class Display\n * @extends Component\n */\nclass DisplaySelect extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getSchema: PropTypes.func.isRequired,\n    updateContent: PropTypes.func.isRequired,\n    getContent: PropTypes.func.isRequired,\n    loaded: PropTypes.bool.isRequired,\n    pathname: PropTypes.string.isRequired,\n    layouts: PropTypes.arrayOf(PropTypes.string),\n    layout: PropTypes.string,\n    type: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    layouts: [],\n    layout: '',\n  };\n\n  state = {\n    selectedOption: {\n      value: this.props.layout,\n      label:\n        this.props.intl.formatMessage({\n          id: config.views.layoutViewsNamesMapping?.[this.props.layout],\n          defaultMessage:\n            config.views.layoutViewsNamesMapping?.[this.props.layout],\n        }) || this.props.layout,\n    },\n  };\n\n  componentDidMount() {\n    this.props.getSchema(this.props.type);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.getSchema(nextProps.type);\n    }\n    if (!this.props.loaded && nextProps.loaded) {\n      this.props.getContent(nextProps.pathname);\n    }\n  }\n\n  /**\n   * On set layout handler\n   * @method setLayout\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  setLayout = (selectedOption) => {\n    this.props.updateContent(this.props.pathname, {\n      layout: selectedOption.value,\n    });\n    this.setState({ selectedOption });\n  };\n\n  selectValue = (option) => (\n    <Fragment>\n      <span className=\"Select-value-label\">{option.label}</span>\n    </Fragment>\n  );\n\n  optionRenderer = (option) => (\n    <Fragment>\n      <span style={{ marginRight: 'auto' }}>{option.label}</span>\n      <Icon name={checkSVG} size=\"24px\" />\n    </Fragment>\n  );\n\n  render() {\n    const { selectedOption } = this.state;\n    const Select = this.props.reactSelect.default;\n    const layoutsNames = config.views.layoutViewsNamesMapping;\n    const layoutOptions = this.props.layouts\n      .filter(\n        (layout) =>\n          Object.keys(config.views.contentTypesViews).includes(layout) ||\n          Object.keys(config.views.layoutViews).includes(layout),\n      )\n      .map((item) => ({\n        value: item,\n        label:\n          this.props.intl.formatMessage({\n            id: layoutsNames[item],\n            defaultMessage: layoutsNames[item],\n          }) || item,\n      }));\n\n    return layoutOptions?.length > 1 ? (\n      <FormFieldWrapper\n        id=\"display-select\"\n        title={this.props.intl.formatMessage(messages.Viewmode)}\n        {...this.props}\n      >\n        <Select\n          name=\"display-select\"\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          options={layoutOptions}\n          styles={customSelectStyles}\n          theme={selectTheme}\n          components={{ DropdownIndicator, Option }}\n          onChange={this.setLayout}\n          defaultValue={selectedOption}\n          isSearchable={false}\n        />\n      </FormFieldWrapper>\n    ) : null;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs('reactSelect'),\n  connect(\n    (state) => ({\n      loaded: state.content.update.loaded,\n      layouts: state.schema.schema ? state.schema.schema.layouts : [],\n      layout: state.content.data\n        ? state.content.data[getLayoutFieldname(state.content.data)]\n        : '',\n      layout_fieldname: state.content.data\n        ? getLayoutFieldname(state.content.data)\n        : '',\n      type: state.content.data ? state.content.data['@type'] : '',\n    }),\n    { getSchema, updateContent, getContent },\n  ),\n)(DisplaySelect);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Viewmode","defaultMessage":"View"}]}},"sourceType":"module","externalDependencies":[]}