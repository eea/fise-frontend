{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/editor/plugins/Table/index.js\",\n  _this2 = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withTable } from './extensions';\nimport TableButton from './TableButton';\nimport { tableElements } from './render';\nimport './less/public.less';\nimport clearSVG from '@plone/volto/icons/delete.svg';\nimport rowBeforeSVG from '@plone/volto/icons/row-before.svg';\nimport rowAfterSVG from '@plone/volto/icons/row-after.svg';\nimport colBeforeSVG from '@plone/volto/icons/column-before.svg';\nimport colAfterSVG from '@plone/volto/icons/column-after.svg';\nimport rowDeleteSVG from '@plone/volto/icons/row-delete.svg';\nimport colDeleteSVG from '@plone/volto/icons/column-delete.svg';\nimport { ToolbarButton } from 'volto-slate/editor/ui';\nimport { Range, Transforms, Editor, Path } from 'slate';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { TABLE, TR, P, TD, TH } from 'volto-slate/constants';\nvar messages = defineMessages({\n  deleteTable: {\n    \"id\": \"Delete table\",\n    \"defaultMessage\": \"Delete table\"\n  },\n  insertRowBefore: {\n    \"id\": \"Insert row before\",\n    \"defaultMessage\": \"Insert row before\"\n  },\n  insertRowAfter: {\n    \"id\": \"Insert row after\",\n    \"defaultMessage\": \"Insert row after\"\n  },\n  deleteRow: {\n    \"id\": \"Delete row\",\n    \"defaultMessage\": \"Delete row\"\n  },\n  insertColBefore: {\n    \"id\": \"Insert col before\",\n    \"defaultMessage\": \"Insert col before\"\n  },\n  insertColAfter: {\n    \"id\": \"Insert col after\",\n    \"defaultMessage\": \"Insert col after\"\n  },\n  deleteCol: {\n    \"id\": \"Delete col\",\n    \"defaultMessage\": \"Delete col\"\n  }\n});\nvar unhangRange = function unhangRange(editor) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$at = options.at,\n    at = _options$at === void 0 ? editor.selection : _options$at,\n    voids = options.voids,\n    _options$unhang = options.unhang,\n    unhang = _options$unhang === void 0 ? true : _options$unhang;\n  if (Range.isRange(at) && unhang) {\n    options.at = Editor.unhangRange(editor, at, {\n      voids: voids\n    });\n  }\n};\nvar getNodes = function getNodes(editor) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  unhangRange(editor, options);\n  return Editor.nodes(editor, options);\n};\nvar findNode = function findNode(editor) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  try {\n    var nodeEntries = getNodes(editor, {\n      at: editor.selection || editor.getSavedSelection() || []\n    });\n    var _iterator = _createForOfIteratorHelper(nodeEntries),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n          node = _step$value[0],\n          path = _step$value[1];\n        return [node, path];\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } catch (error) {\n    return undefined;\n  }\n};\nvar someNode = function someNode(editor, options) {\n  return !!findNode(editor, options);\n};\nvar getEmptyCellNode = function getEmptyCellNode(editor, _ref) {\n  var header = _ref.header;\n  return {\n    type: header ? TH : TD,\n    children: [{\n      type: P,\n      children: [{\n        text: ''\n      }]\n    }]\n  };\n};\nvar getEmptyRowNode = function getEmptyRowNode(editor, _ref2) {\n  var header = _ref2.header,\n    colCount = _ref2.colCount;\n  return {\n    type: TR,\n    children: Array(colCount).fill(colCount).map(function () {\n      return getEmptyCellNode(editor, {\n        header: header\n      });\n    })\n  };\n};\nvar addRowBefore = function addRowBefore(editor) {\n  var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    header = _ref3.header;\n  if (someNode(editor, {\n    match: function match(n) {\n      return n.type === TABLE;\n    }\n  })) {\n    var currentRowItem = Editor.above(editor, {\n      match: function match(n) {\n        return n.type === TR;\n      }\n    });\n    if (currentRowItem) {\n      var _currentRowItem = _slicedToArray(currentRowItem, 2),\n        currentRowElem = _currentRowItem[0],\n        currentRowPath = _currentRowItem[1];\n      Transforms.insertNodes(editor, getEmptyRowNode(editor, {\n        header: header,\n        colCount: currentRowElem.children.length\n      }), {\n        at: currentRowPath,\n        select: true // TODO: this and similar lines in the Table plugin do nothing currently, why?\n      });\n    }\n  }\n};\n\nvar addRowAfter = function addRowAfter(editor) {\n  var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    header = _ref4.header;\n  if (someNode(editor, {\n    match: function match(n) {\n      return n.type === TABLE;\n    }\n  })) {\n    var currentRowItem = Editor.above(editor, {\n      match: function match(n) {\n        return n.type === TR;\n      }\n    });\n    if (currentRowItem) {\n      var _currentRowItem2 = _slicedToArray(currentRowItem, 2),\n        currentRowElem = _currentRowItem2[0],\n        currentRowPath = _currentRowItem2[1];\n      Transforms.insertNodes(editor, getEmptyRowNode(editor, {\n        header: header,\n        colCount: currentRowElem.children.length\n      }), {\n        at: Path.next(currentRowPath),\n        select: true\n      });\n    }\n  }\n};\nvar deleteRow = function deleteRow(editor) {\n  if (someNode(editor, {\n    match: function match(n) {\n      return n.type === TABLE;\n    }\n  })) {\n    var currentTableItem = Editor.above(editor, {\n      match: function match(n) {\n        return n.type === TABLE;\n      }\n    });\n    var currentRowItem = Editor.above(editor, {\n      match: function match(n) {\n        return n.type === TR;\n      }\n    });\n    if (currentRowItem && currentTableItem &&\n    // Cannot delete the last row\n    // TODO: handle tfoot and thead Element types here:\n    currentTableItem[0].children[0].children.length > 1) {\n      Transforms.removeNodes(editor, {\n        at: currentRowItem[1]\n      });\n    }\n  }\n};\nvar addColBefore = function addColBefore(editor) {\n  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    header = _ref5.header;\n  if (someNode(editor, {\n    match: function match(n) {\n      return n.type === TABLE;\n    }\n  })) {\n    var currentCellItem = Editor.above(editor, {\n      match: function match(n) {\n        return n.type === TH || n.type === TD;\n      }\n    });\n    var currentTableItem = Editor.above(editor, {\n      match: function match(n) {\n        return n.type === TABLE;\n      }\n    });\n    if (currentCellItem && currentTableItem) {\n      var nextCellPath = currentCellItem[1];\n      var newCellPath = nextCellPath.slice();\n      var replacePathPos = newCellPath.length - 2;\n      var currentRowIdx = nextCellPath[replacePathPos];\n\n      // TODO: handle tfoot and thead too:\n      currentTableItem[0].children[0].children.forEach(function (row, rowIdx) {\n        newCellPath[replacePathPos] = rowIdx;\n        var isHeaderRow = header === undefined ? row.children[0].type === TH : header;\n        Transforms.insertNodes(editor, getEmptyCellNode(editor, {\n          header: isHeaderRow\n        }), {\n          at: newCellPath,\n          select: rowIdx === currentRowIdx\n        });\n      });\n    }\n  }\n};\nvar addColAfter = function addColAfter(editor) {\n  var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    header = _ref6.header;\n  if (someNode(editor, {\n    match: function match(n) {\n      return n.type === TABLE;\n    }\n  })) {\n    var currentCellItem = Editor.above(editor, {\n      match: function match(n) {\n        return n.type === TH || n.type === TD;\n      }\n    });\n    var currentTableItem = Editor.above(editor, {\n      match: function match(n) {\n        return n.type === TABLE;\n      }\n    });\n    if (currentCellItem && currentTableItem) {\n      var nextCellPath = Path.next(currentCellItem[1]);\n      var newCellPath = nextCellPath.slice();\n      var replacePathPos = newCellPath.length - 2;\n      var currentRowIdx = nextCellPath[replacePathPos];\n\n      // TODO: handle tfoot and thead too:\n      currentTableItem[0].children[0].children.forEach(function (row, rowIdx) {\n        newCellPath[replacePathPos] = rowIdx;\n        var isHeaderRow = header === undefined ? row.children[0].type === TH : header;\n        Transforms.insertNodes(editor, getEmptyCellNode(editor, {\n          header: isHeaderRow\n        }), {\n          at: newCellPath,\n          select: rowIdx === currentRowIdx\n        });\n      });\n    }\n  }\n};\nvar deleteCol = function deleteCol(editor) {\n  if (someNode(editor, {\n    match: function match(n) {\n      return n.type === TABLE;\n    }\n  })) {\n    var currentCellItem = Editor.above(editor, {\n      match: function match(n) {\n        return n.type === TD || n.type === TH;\n      }\n    });\n    var currentRowItem = Editor.above(editor, {\n      match: function match(n) {\n        return n.type === TR;\n      }\n    });\n    var currentTableItem = Editor.above(editor, {\n      match: function match(n) {\n        return n.type === TABLE;\n      }\n    });\n    if (currentCellItem && currentRowItem && currentTableItem &&\n    // Cannot delete the last cell\n    currentRowItem[0].children.length > 1) {\n      var currentCellPath = currentCellItem[1];\n      var pathToDelete = currentCellPath.slice();\n      var replacePathPos = pathToDelete.length - 2;\n\n      // TODO: handle tfoot and thead too:\n      currentTableItem[0].children[0].children.forEach(function (row, rowIdx) {\n        pathToDelete[replacePathPos] = rowIdx;\n        Transforms.removeNodes(editor, {\n          at: pathToDelete\n        });\n      });\n    }\n  }\n};\nexport default function install(config) {\n  var _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$();\n  var slate = config.settings.slate;\n  slate.extensions = [].concat(_toConsumableArray(slate.extensions || []), [withTable]);\n  slate.elements = _objectSpread(_objectSpread({}, slate.elements), tableElements);\n  slate.elementToolbarButtons[TABLE] = [_s(function (_ref7) {\n    _s();\n    var editor = _ref7.editor;\n    var intl = useIntl();\n    return __jsx(ToolbarButton, {\n      title: intl.formatMessage(messages.deleteTable),\n      icon: clearSVG,\n      \"aria-label\": intl.formatMessage(messages.deleteTable),\n      onMouseDown: function onMouseDown() {\n        Transforms.removeNodes(editor, {\n          at: editor.selection || editor.getSavedSelection(),\n          match: function match(n) {\n            return n.type === TABLE;\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }\n    });\n  }, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n    return [useIntl];\n  }), _s2(function (_ref8) {\n    _s2();\n    var editor = _ref8.editor;\n    var intl = useIntl();\n    return __jsx(ToolbarButton, {\n      title: intl.formatMessage(messages.insertRowBefore),\n      icon: rowBeforeSVG,\n      \"aria-label\": intl.formatMessage(messages.insertRowBefore),\n      onMouseDown: function onMouseDown() {\n        addRowBefore(editor);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }\n    });\n  }, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n    return [useIntl];\n  }), _s3(function (_ref9) {\n    _s3();\n    var editor = _ref9.editor;\n    var intl = useIntl();\n    return __jsx(ToolbarButton, {\n      title: intl.formatMessage(messages.insertRowAfter),\n      icon: rowAfterSVG,\n      \"aria-label\": intl.formatMessage(messages.insertRowAfter),\n      onMouseDown: function onMouseDown() {\n        addRowAfter(editor, {\n          header: false\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }\n    });\n  }, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n    return [useIntl];\n  }), _s4(function (_ref10) {\n    _s4();\n    var editor = _ref10.editor;\n    var intl = useIntl();\n    return __jsx(ToolbarButton, {\n      title: intl.formatMessage(messages.deleteRow),\n      icon: rowDeleteSVG,\n      \"aria-label\": intl.formatMessage(messages.deleteRow),\n      onMouseDown: function onMouseDown() {\n        deleteRow(editor);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }\n    });\n  }, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n    return [useIntl];\n  }), _s5(function (_ref11) {\n    _s5();\n    var editor = _ref11.editor;\n    var intl = useIntl();\n    return __jsx(ToolbarButton, {\n      title: intl.formatMessage(messages.insertColBefore),\n      icon: colBeforeSVG,\n      \"aria-label\": intl.formatMessage(messages.insertColBefore),\n      onMouseDown: function onMouseDown() {\n        addColBefore(editor);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }\n    });\n  }, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n    return [useIntl];\n  }), _s6(function (_ref12) {\n    _s6();\n    var editor = _ref12.editor;\n    var intl = useIntl();\n    return __jsx(ToolbarButton, {\n      title: intl.formatMessage(messages.insertColAfter),\n      icon: colAfterSVG,\n      \"aria-label\": intl.formatMessage(messages.insertColAfter),\n      onMouseDown: function onMouseDown() {\n        addColAfter(editor);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }\n    });\n  }, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n    return [useIntl];\n  }), _s7(function (_ref13) {\n    _s7();\n    var editor = _ref13.editor;\n    var intl = useIntl();\n    return __jsx(ToolbarButton, {\n      title: intl.formatMessage(messages.deleteCol),\n      icon: colDeleteSVG,\n      \"aria-label\": intl.formatMessage(messages.deleteCol),\n      onMouseDown: function onMouseDown() {\n        deleteCol(editor);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }\n    });\n  }, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n    return [useIntl];\n  })];\n  return config;\n}\nexport var installTableButton = function installTableButton(config) {\n  var slate = config.settings.slate;\n  slate.buttons.table = function (props) {\n    return __jsx(TableButton, _extends({}, props, {\n      title: \"Table\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 36\n      }\n    }));\n  };\n  slate.toolbarButtons = [].concat(_toConsumableArray(slate.toolbarButtons || []), ['table']);\n  slate.expandedToolbarButtons = [].concat(_toConsumableArray(slate.expandedToolbarButtons || []), ['table']);\n  return config;\n};","map":{"version":3,"names":["React","withTable","TableButton","tableElements","clearSVG","rowBeforeSVG","rowAfterSVG","colBeforeSVG","colAfterSVG","rowDeleteSVG","colDeleteSVG","ToolbarButton","Range","Transforms","Editor","Path","defineMessages","useIntl","TABLE","TR","P","TD","TH","messages","deleteTable","insertRowBefore","insertRowAfter","deleteRow","insertColBefore","insertColAfter","deleteCol","unhangRange","editor","options","at","selection","voids","unhang","isRange","getNodes","nodes","findNode","nodeEntries","getSavedSelection","node","path","error","undefined","someNode","getEmptyCellNode","header","type","children","text","getEmptyRowNode","colCount","Array","fill","map","addRowBefore","match","n","currentRowItem","above","currentRowElem","currentRowPath","insertNodes","length","select","addRowAfter","next","currentTableItem","removeNodes","addColBefore","currentCellItem","nextCellPath","newCellPath","slice","replacePathPos","currentRowIdx","forEach","row","rowIdx","isHeaderRow","addColAfter","currentCellPath","pathToDelete","install","config","slate","settings","extensions","elements","elementToolbarButtons","intl","formatMessage","installTableButton","buttons","table","props","toolbarButtons","expandedToolbarButtons"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/editor/plugins/Table/index.js"],"sourcesContent":["import React from 'react';\nimport { withTable } from './extensions';\nimport TableButton from './TableButton';\nimport { tableElements } from './render';\nimport './less/public.less';\n\nimport clearSVG from '@plone/volto/icons/delete.svg';\nimport rowBeforeSVG from '@plone/volto/icons/row-before.svg';\nimport rowAfterSVG from '@plone/volto/icons/row-after.svg';\nimport colBeforeSVG from '@plone/volto/icons/column-before.svg';\nimport colAfterSVG from '@plone/volto/icons/column-after.svg';\nimport rowDeleteSVG from '@plone/volto/icons/row-delete.svg';\nimport colDeleteSVG from '@plone/volto/icons/column-delete.svg';\n\nimport { ToolbarButton } from 'volto-slate/editor/ui';\nimport { Range, Transforms, Editor, Path } from 'slate';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { TABLE, TR, P, TD, TH } from 'volto-slate/constants';\n\nconst messages = defineMessages({\n  deleteTable: {\n    id: 'Delete table',\n    defaultMessage: 'Delete table',\n  },\n  insertRowBefore: {\n    id: 'Insert row before',\n    defaultMessage: 'Insert row before',\n  },\n  insertRowAfter: {\n    id: 'Insert row after',\n    defaultMessage: 'Insert row after',\n  },\n  deleteRow: {\n    id: 'Delete row',\n    defaultMessage: 'Delete row',\n  },\n  insertColBefore: {\n    id: 'Insert col before',\n    defaultMessage: 'Insert col before',\n  },\n  insertColAfter: {\n    id: 'Insert col after',\n    defaultMessage: 'Insert col after',\n  },\n  deleteCol: {\n    id: 'Delete col',\n    defaultMessage: 'Delete col',\n  },\n});\n\nconst unhangRange = (editor, options = {}) => {\n  const { at = editor.selection, voids, unhang = true } = options;\n\n  if (Range.isRange(at) && unhang) {\n    options.at = Editor.unhangRange(editor, at, { voids });\n  }\n};\n\nconst getNodes = (editor, options = {}) => {\n  unhangRange(editor, options);\n\n  return Editor.nodes(editor, options);\n};\n\nconst findNode = (editor, options = {}) => {\n  try {\n    const nodeEntries = getNodes(editor, {\n      at: editor.selection || editor.getSavedSelection() || [],\n    });\n\n    for (const [node, path] of nodeEntries) {\n      return [node, path];\n    }\n  } catch (error) {\n    return undefined;\n  }\n};\n\nconst someNode = (editor, options) => {\n  return !!findNode(editor, options);\n};\n\nconst getEmptyCellNode = (editor, { header }) => {\n  return {\n    type: header ? TH : TD,\n    children: [{ type: P, children: [{ text: '' }] }],\n  };\n};\n\nconst getEmptyRowNode = (editor, { header, colCount }) => {\n  return {\n    type: TR,\n    children: Array(colCount)\n      .fill(colCount)\n      .map(() => getEmptyCellNode(editor, { header })),\n  };\n};\n\nconst addRowBefore = (editor, { header } = {}) => {\n  if (someNode(editor, { match: (n) => n.type === TABLE })) {\n    const currentRowItem = Editor.above(editor, {\n      match: (n) => n.type === TR,\n    });\n    if (currentRowItem) {\n      const [currentRowElem, currentRowPath] = currentRowItem;\n      Transforms.insertNodes(\n        editor,\n        getEmptyRowNode(editor, {\n          header,\n          colCount: currentRowElem.children.length,\n        }),\n        {\n          at: currentRowPath,\n          select: true, // TODO: this and similar lines in the Table plugin do nothing currently, why?\n        },\n      );\n    }\n  }\n};\n\nconst addRowAfter = (editor, { header } = {}) => {\n  if (someNode(editor, { match: (n) => n.type === TABLE })) {\n    const currentRowItem = Editor.above(editor, {\n      match: (n) => n.type === TR,\n    });\n    if (currentRowItem) {\n      const [currentRowElem, currentRowPath] = currentRowItem;\n      Transforms.insertNodes(\n        editor,\n        getEmptyRowNode(editor, {\n          header,\n          colCount: currentRowElem.children.length,\n        }),\n        {\n          at: Path.next(currentRowPath),\n          select: true,\n        },\n      );\n    }\n  }\n};\n\nconst deleteRow = (editor) => {\n  if (someNode(editor, { match: (n) => n.type === TABLE })) {\n    const currentTableItem = Editor.above(editor, {\n      match: (n) => n.type === TABLE,\n    });\n    const currentRowItem = Editor.above(editor, {\n      match: (n) => n.type === TR,\n    });\n    if (\n      currentRowItem &&\n      currentTableItem &&\n      // Cannot delete the last row\n      // TODO: handle tfoot and thead Element types here:\n      currentTableItem[0].children[0].children.length > 1\n    ) {\n      Transforms.removeNodes(editor, { at: currentRowItem[1] });\n    }\n  }\n};\n\nconst addColBefore = (editor, { header } = {}) => {\n  if (someNode(editor, { match: (n) => n.type === TABLE })) {\n    const currentCellItem = Editor.above(editor, {\n      match: (n) => n.type === TH || n.type === TD,\n    });\n    const currentTableItem = Editor.above(editor, {\n      match: (n) => n.type === TABLE,\n    });\n\n    if (currentCellItem && currentTableItem) {\n      const nextCellPath = currentCellItem[1];\n      const newCellPath = nextCellPath.slice();\n      const replacePathPos = newCellPath.length - 2;\n      const currentRowIdx = nextCellPath[replacePathPos];\n\n      // TODO: handle tfoot and thead too:\n      currentTableItem[0].children[0].children.forEach((row, rowIdx) => {\n        newCellPath[replacePathPos] = rowIdx;\n        const isHeaderRow =\n          header === undefined ? row.children[0].type === TH : header;\n\n        Transforms.insertNodes(\n          editor,\n          getEmptyCellNode(editor, { header: isHeaderRow }),\n          {\n            at: newCellPath,\n            select: rowIdx === currentRowIdx,\n          },\n        );\n      });\n    }\n  }\n};\n\nconst addColAfter = (editor, { header } = {}) => {\n  if (someNode(editor, { match: (n) => n.type === TABLE })) {\n    const currentCellItem = Editor.above(editor, {\n      match: (n) => n.type === TH || n.type === TD,\n    });\n    const currentTableItem = Editor.above(editor, {\n      match: (n) => n.type === TABLE,\n    });\n\n    if (currentCellItem && currentTableItem) {\n      const nextCellPath = Path.next(currentCellItem[1]);\n      const newCellPath = nextCellPath.slice();\n      const replacePathPos = newCellPath.length - 2;\n      const currentRowIdx = nextCellPath[replacePathPos];\n\n      // TODO: handle tfoot and thead too:\n      currentTableItem[0].children[0].children.forEach((row, rowIdx) => {\n        newCellPath[replacePathPos] = rowIdx;\n        const isHeaderRow =\n          header === undefined ? row.children[0].type === TH : header;\n\n        Transforms.insertNodes(\n          editor,\n          getEmptyCellNode(editor, { header: isHeaderRow }),\n          {\n            at: newCellPath,\n            select: rowIdx === currentRowIdx,\n          },\n        );\n      });\n    }\n  }\n};\n\nconst deleteCol = (editor) => {\n  if (someNode(editor, { match: (n) => n.type === TABLE })) {\n    const currentCellItem = Editor.above(editor, {\n      match: (n) => n.type === TD || n.type === TH,\n    });\n    const currentRowItem = Editor.above(editor, {\n      match: (n) => n.type === TR,\n    });\n    const currentTableItem = Editor.above(editor, {\n      match: (n) => n.type === TABLE,\n    });\n\n    if (\n      currentCellItem &&\n      currentRowItem &&\n      currentTableItem &&\n      // Cannot delete the last cell\n      currentRowItem[0].children.length > 1\n    ) {\n      const currentCellPath = currentCellItem[1];\n      const pathToDelete = currentCellPath.slice();\n      const replacePathPos = pathToDelete.length - 2;\n\n      // TODO: handle tfoot and thead too:\n      currentTableItem[0].children[0].children.forEach((row, rowIdx) => {\n        pathToDelete[replacePathPos] = rowIdx;\n\n        Transforms.removeNodes(editor, {\n          at: pathToDelete,\n        });\n      });\n    }\n  }\n};\n\nexport default function install(config) {\n  const { slate } = config.settings;\n\n  slate.extensions = [...(slate.extensions || []), withTable];\n  slate.elements = {\n    ...slate.elements,\n    ...tableElements,\n  };\n  slate.elementToolbarButtons[TABLE] = [\n    ({ editor }) => {\n      const intl = useIntl();\n\n      return (\n        <ToolbarButton\n          title={intl.formatMessage(messages.deleteTable)}\n          icon={clearSVG}\n          aria-label={intl.formatMessage(messages.deleteTable)}\n          onMouseDown={() => {\n            Transforms.removeNodes(editor, {\n              at: editor.selection || editor.getSavedSelection(),\n              match: (n) => n.type === TABLE,\n            });\n          }}\n        />\n      );\n    },\n    ({ editor }) => {\n      const intl = useIntl();\n\n      return (\n        <ToolbarButton\n          title={intl.formatMessage(messages.insertRowBefore)}\n          icon={rowBeforeSVG}\n          aria-label={intl.formatMessage(messages.insertRowBefore)}\n          onMouseDown={() => {\n            addRowBefore(editor);\n          }}\n        />\n      );\n    },\n    ({ editor }) => {\n      const intl = useIntl();\n\n      return (\n        <ToolbarButton\n          title={intl.formatMessage(messages.insertRowAfter)}\n          icon={rowAfterSVG}\n          aria-label={intl.formatMessage(messages.insertRowAfter)}\n          onMouseDown={() => {\n            addRowAfter(editor, { header: false });\n          }}\n        />\n      );\n    },\n    ({ editor }) => {\n      const intl = useIntl();\n\n      return (\n        <ToolbarButton\n          title={intl.formatMessage(messages.deleteRow)}\n          icon={rowDeleteSVG}\n          aria-label={intl.formatMessage(messages.deleteRow)}\n          onMouseDown={() => {\n            deleteRow(editor);\n          }}\n        />\n      );\n    },\n    ({ editor }) => {\n      const intl = useIntl();\n\n      return (\n        <ToolbarButton\n          title={intl.formatMessage(messages.insertColBefore)}\n          icon={colBeforeSVG}\n          aria-label={intl.formatMessage(messages.insertColBefore)}\n          onMouseDown={() => {\n            addColBefore(editor);\n          }}\n        />\n      );\n    },\n    ({ editor }) => {\n      const intl = useIntl();\n\n      return (\n        <ToolbarButton\n          title={intl.formatMessage(messages.insertColAfter)}\n          icon={colAfterSVG}\n          aria-label={intl.formatMessage(messages.insertColAfter)}\n          onMouseDown={() => {\n            addColAfter(editor);\n          }}\n        />\n      );\n    },\n    ({ editor }) => {\n      const intl = useIntl();\n\n      return (\n        <ToolbarButton\n          title={intl.formatMessage(messages.deleteCol)}\n          icon={colDeleteSVG}\n          aria-label={intl.formatMessage(messages.deleteCol)}\n          onMouseDown={() => {\n            deleteCol(editor);\n          }}\n        />\n      );\n    },\n  ];\n\n  return config;\n}\n\nexport const installTableButton = (config) => {\n  const { slate } = config.settings;\n  slate.buttons.table = (props) => <TableButton {...props} title=\"Table\" />;\n  slate.toolbarButtons = [...(slate.toolbarButtons || []), 'table'];\n  slate.expandedToolbarButtons = [\n    ...(slate.expandedToolbarButtons || []),\n    'table',\n  ];\n  return config;\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Delete table","defaultMessage":"Delete table"},{"id":"Insert row before","defaultMessage":"Insert row before"},{"id":"Insert row after","defaultMessage":"Insert row after"},{"id":"Delete row","defaultMessage":"Delete row"},{"id":"Insert col before","defaultMessage":"Insert col before"},{"id":"Insert col after","defaultMessage":"Insert col after"},{"id":"Delete col","defaultMessage":"Delete col"}]}},"sourceType":"module","externalDependencies":[]}