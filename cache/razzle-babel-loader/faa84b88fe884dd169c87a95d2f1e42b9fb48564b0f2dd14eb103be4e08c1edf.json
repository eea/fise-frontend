{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-resize-helper/src/ScreenSize/ScreenSize.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/* eslint-disable no-extend-native */\nimport React from 'react';\nimport cs from 'classnames';\nimport config from '@plone/volto/registry';\nimport { BodyClass } from '@plone/volto/helpers';\nimport { updateScreen } from '../actions';\nimport { detectTouchScreen } from '../utils';\nNumber.prototype.toPixel = function toPixel() {\n  return `${this}px`;\n};\nconst debounce = func => {\n  let timer;\n  return event => {\n    if (timer) clearTimeout(timer);\n    timer = setTimeout(func, config.settings.resizeDebounce, event);\n  };\n};\nclass ScreenSize extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateScreen = this.updateScreen.bind(this);\n    this.state = {\n      withScrollbar: false\n    };\n  }\n  updateScreen(initialState = {}) {\n    var _document$querySelect;\n    const screen = {\n      height: window.screen.availHeight || 0,\n      width: window.screen.availWidth || 0\n    };\n    const page = {\n      height: window.innerHeight || 0,\n      width: window.innerWidth || 0\n    };\n    const newScreen = _objectSpread(_objectSpread(_objectSpread({}, initialState), screen), {}, {\n      page,\n      content: {\n        offsetTop: ((_document$querySelect = document.querySelector('div.content-area')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.offsetTop) || null\n      }\n    });\n    if (document.body.scrollHeight > document.body.clientHeight && !this.state.withScrollbar) {\n      this.setState({\n        withScrollbar: true\n      });\n    } else if (document.body.scrollHeight <= document.body.clientHeight && this.state.withScrollbar) {\n      this.setState({\n        withScrollbar: false\n      });\n    }\n    this.props.dispatch(updateScreen(newScreen));\n  }\n  componentDidMount() {\n    if (__SERVER__) return;\n    this.updateScreen({\n      hasTouchScreen: detectTouchScreen(),\n      browserToolbarHeight: window.outerHeight - window.innerHeight\n    });\n    window.addEventListener('resize', debounce(this.updateScreen));\n  }\n  componentWillUnmount() {\n    if (__SERVER__) return;\n    window.removeEventListener('resize', debounce(this.updateScreen));\n  }\n  componentDidUpdate(prevProps) {\n    var _this$props$content, _prevProps$content;\n    if (__SERVER__) return;\n    if (((_this$props$content = this.props.content) === null || _this$props$content === void 0 ? void 0 : _this$props$content['@id']) !== ((_prevProps$content = prevProps.content) === null || _prevProps$content === void 0 ? void 0 : _prevProps$content['@id'])) {\n      this.updateScreen();\n    }\n  }\n  render() {\n    return __jsx(BodyClass, {\n      className: cs({\n        'with-scrollbar': this.state.withScrollbar\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    });\n  }\n}\nexport default ScreenSize;","map":{"version":3,"names":["React","cs","config","BodyClass","updateScreen","detectTouchScreen","Number","prototype","toPixel","debounce","func","timer","event","clearTimeout","setTimeout","settings","resizeDebounce","ScreenSize","Component","constructor","props","bind","state","withScrollbar","initialState","screen","height","window","availHeight","width","availWidth","page","innerHeight","innerWidth","newScreen","content","offsetTop","document","querySelector","body","scrollHeight","clientHeight","setState","dispatch","componentDidMount","__SERVER__","hasTouchScreen","browserToolbarHeight","outerHeight","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","render"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-resize-helper/src/ScreenSize/ScreenSize.jsx"],"sourcesContent":["/* eslint-disable no-extend-native */\nimport React from 'react';\nimport cs from 'classnames';\nimport config from '@plone/volto/registry';\nimport { BodyClass } from '@plone/volto/helpers';\nimport { updateScreen } from '../actions';\nimport { detectTouchScreen } from '../utils';\n\nNumber.prototype.toPixel = function toPixel() {\n  return `${this}px`;\n};\n\nconst debounce = (func) => {\n  let timer;\n  return (event) => {\n    if (timer) clearTimeout(timer);\n    timer = setTimeout(func, config.settings.resizeDebounce, event);\n  };\n};\n\nclass ScreenSize extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateScreen = this.updateScreen.bind(this);\n    this.state = {\n      withScrollbar: false,\n    };\n  }\n\n  updateScreen(initialState = {}) {\n    const screen = {\n      height: window.screen.availHeight || 0,\n      width: window.screen.availWidth || 0,\n    };\n\n    const page = {\n      height: window.innerHeight || 0,\n      width: window.innerWidth || 0,\n    };\n\n    const newScreen = {\n      ...initialState,\n      ...screen,\n      page,\n      content: {\n        offsetTop:\n          document.querySelector('div.content-area')?.offsetTop || null,\n      },\n    };\n\n    if (\n      document.body.scrollHeight > document.body.clientHeight &&\n      !this.state.withScrollbar\n    ) {\n      this.setState({ withScrollbar: true });\n    } else if (\n      document.body.scrollHeight <= document.body.clientHeight &&\n      this.state.withScrollbar\n    ) {\n      this.setState({ withScrollbar: false });\n    }\n\n    this.props.dispatch(updateScreen(newScreen));\n  }\n\n  componentDidMount() {\n    if (__SERVER__) return;\n    this.updateScreen({\n      hasTouchScreen: detectTouchScreen(),\n      browserToolbarHeight: window.outerHeight - window.innerHeight,\n    });\n    window.addEventListener('resize', debounce(this.updateScreen));\n  }\n\n  componentWillUnmount() {\n    if (__SERVER__) return;\n    window.removeEventListener('resize', debounce(this.updateScreen));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (__SERVER__) return;\n    if (this.props.content?.['@id'] !== prevProps.content?.['@id']) {\n      this.updateScreen();\n    }\n  }\n\n  render() {\n    return (\n      <BodyClass\n        className={cs({ 'with-scrollbar': this.state.withScrollbar })}\n      />\n    );\n  }\n}\n\nexport default ScreenSize;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}