{"ast":null,"code":"import _map from \"lodash/map\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/customizations/volto/components/theme/View/ListingView.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { getLocalnavigation } from '@eeacms/volto-forests-theme/actions';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getBaseUrl } from '@plone/volto/helpers'; // , flattenToAppURL\n\nimport { Container, Image } from 'semantic-ui-react'; // , Grid\n\nimport config from '@plone/volto/registry';\nimport { asyncConnect } from 'redux-connect';\nimport { getBlocksFieldname, getBlocksLayoutFieldname, hasBlocksData } from '@plone/volto/helpers';\nimport { samePath } from '../../../../../helpers';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nclass ListingView extends Component {\n  render() {\n    var _this$props$content;\n    const content = this.props.content;\n    const blocksFieldname = getBlocksFieldname(content);\n    const blocksLayoutFieldname = getBlocksLayoutFieldname(content);\n    const localNavigation = this.props.localNavigation && this.props.localNavigation.items && this.props.localNavigation.items.filter(item => item.title !== 'Home') || [];\n    const currentUrl = (_this$props$content = this.props.content) === null || _this$props$content === void 0 ? void 0 : _this$props$content['@id'];\n    const shouldRenderRoutes = typeof currentUrl !== 'undefined' && samePath(currentUrl, this.props.pathname) ? true : false;\n    if (!shouldRenderRoutes) return __jsx(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, __jsx(Loader, {\n      size: \"massive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }));\n    let pageTemplate = hasBlocksData(content) ? __jsx(\"div\", {\n      id: \"page-document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: content.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), _map(content[blocksLayoutFieldname].items, block => {\n      var _config$blocks$blocks, _content$blocksFieldn, _content$blocksFieldn2;\n      const Block = ((_config$blocks$blocks = config.blocks.blocksConfig[(_content$blocksFieldn = content[blocksFieldname]) === null || _content$blocksFieldn === void 0 ? void 0 : (_content$blocksFieldn2 = _content$blocksFieldn[block]) === null || _content$blocksFieldn2 === void 0 ? void 0 : _content$blocksFieldn2['@type']]) === null || _config$blocks$blocks === void 0 ? void 0 : _config$blocks$blocks['view']) || null;\n      return Block !== null && content[blocksFieldname][block]['@type'] !== 'title' ? __jsx(Block, {\n        key: block,\n        id: block,\n        properties: content,\n        data: content[blocksFieldname][block],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }) : '';\n    })) : __jsx(Container, {\n      id: \"page-document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: content.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), content.image && __jsx(Image, {\n      className: \"document-image\",\n      src: content.image.scales.thumb.download,\n      floated: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), content.remoteUrl && __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"The link address is:\", __jsx(\"a\", {\n      href: content.remoteUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, content.remoteUrl)), content.text && __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: content.text.data.replace(/a href=\"([^\"]*\\.[^\"]*)\"/g, `a href=\"${config.settings.apiPath}$1/download/file\"`)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }));\n    if (!localNavigation.length) {\n      pageTemplate = hasBlocksData(content) ? __jsx(\"div\", {\n        id: \"page-document\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, __jsx(Helmet, {\n        title: content.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }), _map(content[blocksLayoutFieldname].items, block => {\n        var _config$blocks$blocks2, _content$blocksFieldn3, _content$blocksFieldn4;\n        const Block = ((_config$blocks$blocks2 = config.blocks.blocksConfig[(_content$blocksFieldn3 = content[blocksFieldname]) === null || _content$blocksFieldn3 === void 0 ? void 0 : (_content$blocksFieldn4 = _content$blocksFieldn3[block]) === null || _content$blocksFieldn4 === void 0 ? void 0 : _content$blocksFieldn4['@type']]) === null || _config$blocks$blocks2 === void 0 ? void 0 : _config$blocks$blocks2['view']) || null;\n        return Block !== null && content[blocksFieldname][block]['@type'] !== 'title' ? __jsx(Block, {\n          key: block,\n          id: block,\n          properties: content,\n          data: content[blocksFieldname][block],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }\n        }) : '';\n      })) : __jsx(Container, {\n        id: \"page-document\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }, __jsx(Helmet, {\n        title: content.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }), content.description && __jsx(\"p\", {\n        className: \"documentDescription\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, content.description), content.image && __jsx(Image, {\n        className: \"document-image\",\n        src: content.image.scales.thumb.download,\n        floated: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }\n      }), content.remoteUrl && __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, \"The link address is:\", __jsx(\"a\", {\n        href: content.remoteUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }, content.remoteUrl)), content.text && __jsx(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: content.text.data.replace(/a href=\"([^\"]*\\.[^\"]*)\"/g, `a href=\"${config.settings.apiPath}$1/download/file\"`)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }));\n    }\n    return pageTemplate;\n  }\n}\n_defineProperty(ListingView, \"propTypes\", {\n  localNavigation: PropTypes.any,\n  getLocalnavigation: PropTypes.func.isRequired,\n  pathname: PropTypes.any,\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    text: PropTypes.shape({\n      data: PropTypes.string\n    }),\n    items: PropTypes.arrayOf(PropTypes.shape({\n      '@id': PropTypes.string,\n      '@type': PropTypes.string,\n      description: PropTypes.string,\n      review_state: PropTypes.string,\n      title: PropTypes.string,\n      url: PropTypes.string\n    }))\n  }).isRequired\n});\nexport default compose(asyncConnect([{\n  key: 'localnavigation',\n  promise: ({\n    location,\n    store: {\n      content,\n      dispatch\n    }\n  }) => __SERVER__ && dispatch(getLocalnavigation(getBaseUrl(location.pathname)))\n}]), connect((state, props) => ({\n  localNavigation: state.localnavigation.items,\n  pathname: props.location.pathname\n  // localnavigation: state.localnavigation,\n}), {\n  getLocalnavigation\n}))(ListingView);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","getLocalnavigation","connect","compose","getBaseUrl","Container","Image","config","asyncConnect","getBlocksFieldname","getBlocksLayoutFieldname","hasBlocksData","samePath","Dimmer","Loader","ListingView","render","content","props","blocksFieldname","blocksLayoutFieldname","localNavigation","items","filter","item","title","currentUrl","shouldRenderRoutes","pathname","pageTemplate","block","Block","blocks","blocksConfig","image","scales","thumb","download","remoteUrl","text","__html","data","replace","settings","apiPath","length","description","any","func","isRequired","shape","string","arrayOf","review_state","url","key","promise","location","store","dispatch","__SERVER__","state","localnavigation"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/customizations/volto/components/theme/View/ListingView.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { getLocalnavigation } from '@eeacms/volto-forests-theme/actions';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getBaseUrl } from '@plone/volto/helpers'; // , flattenToAppURL\n\nimport { Container, Image } from 'semantic-ui-react'; // , Grid\nimport { map } from 'lodash';\n\nimport config from '@plone/volto/registry';\nimport { asyncConnect } from 'redux-connect';\n\nimport {\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  hasBlocksData,\n} from '@plone/volto/helpers';\nimport { samePath } from '../../../../../helpers';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nclass ListingView extends Component {\n  static propTypes = {\n    localNavigation: PropTypes.any,\n    getLocalnavigation: PropTypes.func.isRequired,\n    pathname: PropTypes.any,\n    content: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      text: PropTypes.shape({\n        data: PropTypes.string,\n      }),\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          '@id': PropTypes.string,\n          '@type': PropTypes.string,\n          description: PropTypes.string,\n          review_state: PropTypes.string,\n          title: PropTypes.string,\n          url: PropTypes.string,\n        }),\n      ),\n    }).isRequired,\n  };\n\n  render() {\n    const content = this.props.content;\n    const blocksFieldname = getBlocksFieldname(content);\n    const blocksLayoutFieldname = getBlocksLayoutFieldname(content);\n    const localNavigation =\n      (this.props.localNavigation &&\n        this.props.localNavigation.items &&\n        this.props.localNavigation.items.filter(\n          (item) => item.title !== 'Home',\n        )) ||\n      [];\n\n    const currentUrl = this.props.content?.['@id'];\n    const shouldRenderRoutes =\n      typeof currentUrl !== 'undefined' &&\n      samePath(currentUrl, this.props.pathname)\n        ? true\n        : false;\n    if (!shouldRenderRoutes)\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"massive\" />\n        </Dimmer>\n      );\n\n    let pageTemplate = hasBlocksData(content) ? (\n      <div id=\"page-document\">\n        <Helmet title={content.title} />\n        {map(content[blocksLayoutFieldname].items, (block) => {\n          const Block =\n            config.blocks.blocksConfig[\n              content[blocksFieldname]?.[block]?.['@type']\n            ]?.['view'] || null;\n          return Block !== null &&\n            content[blocksFieldname][block]['@type'] !== 'title' ? (\n            <Block\n              key={block}\n              id={block}\n              properties={content}\n              data={content[blocksFieldname][block]}\n            />\n          ) : (\n            ''\n          );\n        })}\n      </div>\n    ) : (\n      <Container id=\"page-document\">\n        <Helmet title={content.title} />\n        {content.image && (\n          <Image\n            className=\"document-image\"\n            src={content.image.scales.thumb.download}\n            floated=\"right\"\n          />\n        )}\n        {content.remoteUrl && (\n          <span>\n            The link address is:\n            <a href={content.remoteUrl}>{content.remoteUrl}</a>\n          </span>\n        )}\n        {content.text && (\n          <div\n            dangerouslySetInnerHTML={{\n              __html: content.text.data.replace(\n                /a href=\"([^\"]*\\.[^\"]*)\"/g,\n                `a href=\"${config.settings.apiPath}$1/download/file\"`,\n              ),\n            }}\n          />\n        )}\n      </Container>\n    );\n    if (!localNavigation.length) {\n      pageTemplate = hasBlocksData(content) ? (\n        <div id=\"page-document\">\n          <Helmet title={content.title} />\n          {map(content[blocksLayoutFieldname].items, (block) => {\n            const Block =\n              config.blocks.blocksConfig[\n                content[blocksFieldname]?.[block]?.['@type']\n              ]?.['view'] || null;\n            return Block !== null &&\n              content[blocksFieldname][block]['@type'] !== 'title' ? (\n              <Block\n                key={block}\n                id={block}\n                properties={content}\n                data={content[blocksFieldname][block]}\n              />\n            ) : (\n              ''\n            );\n          })}\n        </div>\n      ) : (\n        <Container id=\"page-document\">\n          <Helmet title={content.title} />\n          {content.description && (\n            <p className=\"documentDescription\">{content.description}</p>\n          )}\n          {content.image && (\n            <Image\n              className=\"document-image\"\n              src={content.image.scales.thumb.download}\n              floated=\"right\"\n            />\n          )}\n          {content.remoteUrl && (\n            <span>\n              The link address is:\n              <a href={content.remoteUrl}>{content.remoteUrl}</a>\n            </span>\n          )}\n          {content.text && (\n            <div\n              dangerouslySetInnerHTML={{\n                __html: content.text.data.replace(\n                  /a href=\"([^\"]*\\.[^\"]*)\"/g,\n                  `a href=\"${config.settings.apiPath}$1/download/file\"`,\n                ),\n              }}\n            />\n          )}\n        </Container>\n      );\n    }\n    return pageTemplate;\n  }\n}\n\nexport default compose(\n  asyncConnect([\n    {\n      key: 'localnavigation',\n      promise: ({ location, store: { content, dispatch } }) =>\n        __SERVER__ &&\n        dispatch(getLocalnavigation(getBaseUrl(location.pathname))),\n    },\n  ]),\n  connect(\n    (state, props) => ({\n      localNavigation: state.localnavigation.items,\n      pathname: props.location.pathname,\n      // localnavigation: state.localnavigation,\n    }),\n    { getLocalnavigation },\n  ),\n)(ListingView);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}