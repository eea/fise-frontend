{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectWithoutProperties from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"icon\", \"active\"];\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/editor/plugins/StyleMenu/StyleMenu.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSlate } from 'slate-react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { useIntl, defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport { isBlockStyleActive, isInlineStyleActive, toggleStyle } from './utils';\nimport config from '@plone/volto/registry';\nimport { ToolbarButton } from 'volto-slate/editor/ui';\nimport paintSVG from '@plone/volto/icons/paint.svg';\nvar messages = defineMessages({\n  inlineStyle: {\n    \"id\": \"Inline Style\",\n    \"defaultMessage\": \"Inline Style\"\n  },\n  paragraphStyle: {\n    \"id\": \"Paragraph Style\",\n    \"defaultMessage\": \"Paragraph Style\"\n  },\n  additionalStyles: {\n    \"id\": \"Additional Styles\",\n    \"defaultMessage\": \"Additional Styles\"\n  }\n});\nvar StyleMenuButton = function StyleMenuButton(_ref) {\n  var icon = _ref.icon,\n    active = _ref.active,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return __jsx(ToolbarButton, _extends({}, props, {\n    icon: icon,\n    active: active,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }));\n};\n_c = StyleMenuButton;\nvar MenuOpts = function MenuOpts(_ref2) {\n  var editor = _ref2.editor,\n    toSelect = _ref2.toSelect,\n    option = _ref2.option;\n  var isActive = toSelect.includes(option);\n  return __jsx(Dropdown.Item, _extends({\n    as: \"span\",\n    active: isActive,\n    className: cx({\n      active: isActive\n    })\n  }, option, {\n    onClick: function onClick(event, selItem) {\n      event.stopPropagation();\n      toggleStyle(editor, {\n        cssClass: selItem.value,\n        isBlock: selItem.isBlock\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }));\n};\n_c2 = MenuOpts;\nvar StylingsButton = function StylingsButton(props) {\n  _s();\n  var _config$settings$slat;\n  var editor = useSlate();\n  var intl = useIntl();\n\n  // Converting the settings to a format that is required by dropdowns.\n  var inlineOpts = _toConsumableArray(config.settings.slate.styleMenu.inlineStyles.map(function (def) {\n    return {\n      value: def.cssClass,\n      text: def.label,\n      icon: def.icon,\n      isBlock: false\n    };\n  }));\n  var blockOpts = _toConsumableArray(config.settings.slate.styleMenu.blockStyles.map(function (def) {\n    return {\n      value: def.cssClass,\n      text: def.label,\n      icon: def.icon,\n      isBlock: true\n    };\n  }));\n\n  // Calculating the initial selection.\n  var toSelect = [];\n  // block styles\n  var _iterator = _createForOfIteratorHelper(blockOpts),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var val = _step.value;\n      var ia = isBlockStyleActive(editor, val.value);\n      if (ia) {\n        toSelect.push(val);\n      }\n    }\n    // inline styles\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var _iterator2 = _createForOfIteratorHelper(inlineOpts),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _val = _step2.value;\n      var _ia = isInlineStyleActive(editor, _val.value);\n      if (_ia) {\n        toSelect.push(_val);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  var menuItemProps = {\n    toSelect: toSelect,\n    editor: editor\n  };\n  var showMenu = inlineOpts.length || blockOpts.length;\n  return showMenu ? __jsx(Dropdown, {\n    id: \"style-menu\",\n    multiple: true,\n    value: toSelect,\n    disabled: (_config$settings$slat = config.settings.slate.styleMenu.disabled) !== null && _config$settings$slat !== void 0 ? _config$settings$slat : false,\n    additionLabel: intl.formatMessage(messages.additionalStyles),\n    trigger: __jsx(StyleMenuButton, {\n      title: intl.formatMessage(messages.additionalStyles),\n      icon: paintSVG,\n      active: toSelect.length > 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, __jsx(Dropdown.Menu, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, inlineOpts.length && __jsx(React.Fragment, null, __jsx(Dropdown.Header, {\n    content: intl.formatMessage(messages.inlineStyle),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), inlineOpts.map(function (option) {\n    return __jsx(MenuOpts, _extends({}, menuItemProps, {\n      option: option,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }));\n  })), blockOpts.length && __jsx(React.Fragment, null, __jsx(Dropdown.Header, {\n    content: intl.formatMessage(messages.paragraphStyle),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), blockOpts.map(function (option) {\n    return __jsx(MenuOpts, _extends({}, menuItemProps, {\n      option: option,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }));\n  })))) : '';\n};\n_s(StylingsButton, \"w0F3wW8W/mVBIh/dlncHu6vL3c0=\", false, function () {\n  return [useSlate, useIntl];\n});\n_c3 = StylingsButton;\nexport default StylingsButton;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyleMenuButton\");\n$RefreshReg$(_c2, \"MenuOpts\");\n$RefreshReg$(_c3, \"StylingsButton\");","map":{"version":3,"names":["React","useSlate","Dropdown","useIntl","defineMessages","cx","isBlockStyleActive","isInlineStyleActive","toggleStyle","config","ToolbarButton","paintSVG","messages","inlineStyle","paragraphStyle","additionalStyles","StyleMenuButton","icon","active","props","MenuOpts","editor","toSelect","option","isActive","includes","event","selItem","stopPropagation","cssClass","value","isBlock","StylingsButton","intl","inlineOpts","settings","slate","styleMenu","inlineStyles","map","def","text","label","blockOpts","blockStyles","val","ia","push","menuItemProps","showMenu","length","disabled","formatMessage"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/editor/plugins/StyleMenu/StyleMenu.jsx"],"sourcesContent":["import React from 'react';\nimport { useSlate } from 'slate-react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { useIntl, defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport { isBlockStyleActive, isInlineStyleActive, toggleStyle } from './utils';\nimport config from '@plone/volto/registry';\nimport { ToolbarButton } from 'volto-slate/editor/ui';\nimport paintSVG from '@plone/volto/icons/paint.svg';\n\nconst messages = defineMessages({\n  inlineStyle: {\n    id: 'Inline Style',\n    defaultMessage: 'Inline Style',\n  },\n  paragraphStyle: {\n    id: 'Paragraph Style',\n    defaultMessage: 'Paragraph Style',\n  },\n  additionalStyles: {\n    id: 'Additional Styles',\n    defaultMessage: 'Additional Styles',\n  },\n});\n\nconst StyleMenuButton = ({ icon, active, ...props }) => (\n  <ToolbarButton {...props} icon={icon} active={active} />\n);\n\nconst MenuOpts = ({ editor, toSelect, option }) => {\n  const isActive = toSelect.includes(option);\n  return (\n    <Dropdown.Item\n      as=\"span\"\n      active={isActive}\n      className={cx({ active: isActive })}\n      {...option}\n      onClick={(event, selItem) => {\n        event.stopPropagation();\n        toggleStyle(editor, {\n          cssClass: selItem.value,\n          isBlock: selItem.isBlock,\n        });\n      }}\n    />\n  );\n};\n\nconst StylingsButton = (props) => {\n  const editor = useSlate();\n  const intl = useIntl();\n\n  // Converting the settings to a format that is required by dropdowns.\n  const inlineOpts = [\n    ...config.settings.slate.styleMenu.inlineStyles.map((def) => {\n      return {\n        value: def.cssClass,\n        text: def.label,\n        icon: def.icon,\n        isBlock: false,\n      };\n    }),\n  ];\n  const blockOpts = [\n    ...config.settings.slate.styleMenu.blockStyles.map((def) => {\n      return {\n        value: def.cssClass,\n        text: def.label,\n        icon: def.icon,\n        isBlock: true,\n      };\n    }),\n  ];\n\n  // Calculating the initial selection.\n  const toSelect = [];\n  // block styles\n  for (const val of blockOpts) {\n    const ia = isBlockStyleActive(editor, val.value);\n    if (ia) {\n      toSelect.push(val);\n    }\n  }\n  // inline styles\n  for (const val of inlineOpts) {\n    const ia = isInlineStyleActive(editor, val.value);\n    if (ia) {\n      toSelect.push(val);\n    }\n  }\n\n  const menuItemProps = {\n    toSelect,\n    editor,\n  };\n  const showMenu = inlineOpts.length || blockOpts.length;\n  return showMenu ? (\n    <Dropdown\n      id=\"style-menu\"\n      multiple\n      value={toSelect}\n      disabled={config.settings.slate.styleMenu.disabled ?? false}\n      additionLabel={intl.formatMessage(messages.additionalStyles)}\n      trigger={\n        <StyleMenuButton\n          title={intl.formatMessage(messages.additionalStyles)}\n          icon={paintSVG}\n          active={toSelect.length > 0}\n        />\n      }\n    >\n      <Dropdown.Menu>\n        {inlineOpts.length && (\n          <>\n            <Dropdown.Header\n              content={intl.formatMessage(messages.inlineStyle)}\n            />\n            {inlineOpts.map((option) => (\n              <MenuOpts {...menuItemProps} option={option} />\n            ))}\n          </>\n        )}\n\n        {blockOpts.length && (\n          <>\n            <Dropdown.Header\n              content={intl.formatMessage(messages.paragraphStyle)}\n            />\n            {blockOpts.map((option) => (\n              <MenuOpts {...menuItemProps} option={option} />\n            ))}\n          </>\n        )}\n      </Dropdown.Menu>\n    </Dropdown>\n  ) : (\n    ''\n  );\n};\n\nexport default StylingsButton;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Inline Style","defaultMessage":"Inline Style"},{"id":"Paragraph Style","defaultMessage":"Paragraph Style"},{"id":"Additional Styles","defaultMessage":"Additional Styles"}]}},"sourceType":"module","externalDependencies":[]}