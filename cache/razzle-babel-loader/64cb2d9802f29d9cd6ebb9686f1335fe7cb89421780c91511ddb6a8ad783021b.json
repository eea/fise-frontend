{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/EmailWidget.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n/**\n * EmailWidget component.\n * @module components/manage/Widgets/EmailWidget\n */\n\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Input } from 'semantic-ui-react';\n\n/** EmailWidget, a widget for email addresses\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Email\",\n *  widget: 'email',\n * }\n * ```\n */\nconst EmailWidget = props => {\n  const {\n    id,\n    value,\n    onChange,\n    onBlur,\n    onClick,\n    minLength,\n    maxLength,\n    placeholder,\n    isDisabled\n  } = props;\n  const inputId = `field-${id}`;\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    className: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }), __jsx(Input, {\n    id: inputId,\n    name: id,\n    type: \"email\",\n    value: value || '',\n    disabled: isDisabled,\n    placeholder: placeholder,\n    onChange: ({\n      target\n    }) => onChange(id, target.value === '' ? undefined : target.value),\n    onBlur: ({\n      target\n    }) => onBlur(id, target.value === '' ? undefined : target.value),\n    onClick: () => onClick(),\n    minLength: minLength || null,\n    maxLength: maxLength || null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\n/**\n * Property types\n * @property {Object} propTypes Property types.\n * @static\n */\nEmailWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  placeholder: PropTypes.string\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nEmailWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  minLength: null,\n  maxLength: null\n};\nexport default EmailWidget;","map":{"version":3,"names":["FormFieldWrapper","PropTypes","React","Input","EmailWidget","props","id","value","onChange","onBlur","onClick","minLength","maxLength","placeholder","isDisabled","inputId","target","undefined","propTypes","string","isRequired","title","description","required","bool","error","arrayOf","func","number","defaultProps"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/EmailWidget.jsx"],"sourcesContent":["/**\n * EmailWidget component.\n * @module components/manage/Widgets/EmailWidget\n */\n\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Input } from 'semantic-ui-react';\n\n/** EmailWidget, a widget for email addresses\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Email\",\n *  widget: 'email',\n * }\n * ```\n */\nconst EmailWidget = (props) => {\n  const {\n    id,\n    value,\n    onChange,\n    onBlur,\n    onClick,\n    minLength,\n    maxLength,\n    placeholder,\n    isDisabled,\n  } = props;\n  const inputId = `field-${id}`;\n\n  return (\n    <FormFieldWrapper {...props} className=\"email\">\n      <Input\n        id={inputId}\n        name={id}\n        type=\"email\"\n        value={value || ''}\n        disabled={isDisabled}\n        placeholder={placeholder}\n        onChange={({ target }) =>\n          onChange(id, target.value === '' ? undefined : target.value)\n        }\n        onBlur={({ target }) =>\n          onBlur(id, target.value === '' ? undefined : target.value)\n        }\n        onClick={() => onClick()}\n        minLength={minLength || null}\n        maxLength={maxLength || null}\n      />\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types\n * @property {Object} propTypes Property types.\n * @static\n */\nEmailWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  placeholder: PropTypes.string,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nEmailWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  minLength: null,\n  maxLength: null,\n};\n\nexport default EmailWidget;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,SAASA,gBAAgB,QAAQ,yBAAyB;AAC1D,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,mBAAmB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B,MAAM;IACJC,EAAE;IACFC,KAAK;IACLC,QAAQ;IACRC,MAAM;IACNC,OAAO;IACPC,SAAS;IACTC,SAAS;IACTC,WAAW;IACXC;EACF,CAAC,GAAGT,KAAK;EACT,MAAMU,OAAO,GAAI,SAAQT,EAAG,EAAC;EAE7B,OACE,MAAC,gBAAgB,eAAKD,KAAK;IAAE,SAAS,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAC5C,MAAC,KAAK;IACJ,EAAE,EAAEU,OAAQ;IACZ,IAAI,EAAET,EAAG;IACT,IAAI,EAAC,OAAO;IACZ,KAAK,EAAEC,KAAK,IAAI,EAAG;IACnB,QAAQ,EAAEO,UAAW;IACrB,WAAW,EAAED,WAAY;IACzB,QAAQ,EAAE,CAAC;MAAEG;IAAO,CAAC,KACnBR,QAAQ,CAACF,EAAE,EAAEU,MAAM,CAACT,KAAK,KAAK,EAAE,GAAGU,SAAS,GAAGD,MAAM,CAACT,KAAK,CAC5D;IACD,MAAM,EAAE,CAAC;MAAES;IAAO,CAAC,KACjBP,MAAM,CAACH,EAAE,EAAEU,MAAM,CAACT,KAAK,KAAK,EAAE,GAAGU,SAAS,GAAGD,MAAM,CAACT,KAAK,CAC1D;IACD,OAAO,EAAE,MAAMG,OAAO,EAAG;IACzB,SAAS,EAAEC,SAAS,IAAI,IAAK;IAC7B,SAAS,EAAEC,SAAS,IAAI,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC7B,CACe;AAEvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAR,WAAW,CAACc,SAAS,GAAG;EACtBZ,EAAE,EAAEL,SAAS,CAACkB,MAAM,CAACC,UAAU;EAC/BC,KAAK,EAAEpB,SAAS,CAACkB,MAAM,CAACC,UAAU;EAClCE,WAAW,EAAErB,SAAS,CAACkB,MAAM;EAC7BI,QAAQ,EAAEtB,SAAS,CAACuB,IAAI;EACxBC,KAAK,EAAExB,SAAS,CAACyB,OAAO,CAACzB,SAAS,CAACkB,MAAM,CAAC;EAC1CZ,KAAK,EAAEN,SAAS,CAACkB,MAAM;EACvBX,QAAQ,EAAEP,SAAS,CAAC0B,IAAI,CAACP,UAAU;EACnCX,MAAM,EAAER,SAAS,CAAC0B,IAAI;EACtBjB,OAAO,EAAET,SAAS,CAAC0B,IAAI;EACvBhB,SAAS,EAAEV,SAAS,CAAC2B,MAAM;EAC3BhB,SAAS,EAAEX,SAAS,CAAC2B,MAAM;EAC3Bf,WAAW,EAAEZ,SAAS,CAACkB;AACzB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAf,WAAW,CAACyB,YAAY,GAAG;EACzBP,WAAW,EAAE,IAAI;EACjBC,QAAQ,EAAE,KAAK;EACfE,KAAK,EAAE,EAAE;EACTlB,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,MAAM,CAAC,CAAC;EAClBC,MAAM,EAAE,MAAM,CAAC,CAAC;EAChBC,OAAO,EAAE,MAAM,CAAC,CAAC;EACjBC,SAAS,EAAE,IAAI;EACfC,SAAS,EAAE;AACb,CAAC;AAED,eAAeR,WAAW"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}