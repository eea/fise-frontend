{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { GeolocationWidgetEdit, GeolocationWidgetView, SearchWidget } from './components';\nimport { geolocation } from './reducers';\nconst applyConfig = config => {\n  var _config$widgets$views;\n  config.widgets.widget.geolocation = GeolocationWidgetEdit;\n  config.widgets.widget.searchGeotags = SearchWidget;\n  config.settings.allowed_cors_destinations = [...(config.settings.allowed_cors_destinations || []), 'secure.geonames.org'];\n  config.addonReducers = _objectSpread(_objectSpread({}, config.addonReducers), {}, {\n    geolocation\n  });\n\n  // volto-widgets-view\n  if ((_config$widgets$views = config.widgets.views) !== null && _config$widgets$views !== void 0 && _config$widgets$views.widget) {\n    config.widgets.views.widget.geolocation = GeolocationWidgetView;\n  }\n  return config;\n};\nexport default applyConfig;","map":{"version":3,"names":["GeolocationWidgetEdit","GeolocationWidgetView","SearchWidget","geolocation","applyConfig","config","widgets","widget","searchGeotags","settings","allowed_cors_destinations","addonReducers","views"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-widget-geolocation/src/index.js"],"sourcesContent":["import {\n  GeolocationWidgetEdit,\n  GeolocationWidgetView,\n  SearchWidget,\n} from './components';\nimport { geolocation } from './reducers';\n\nconst applyConfig = (config) => {\n  config.widgets.widget.geolocation = GeolocationWidgetEdit;\n  config.widgets.widget.searchGeotags = SearchWidget;\n\n  config.settings.allowed_cors_destinations = [\n    ...(config.settings.allowed_cors_destinations || []),\n    'secure.geonames.org',\n  ];\n\n  config.addonReducers = {\n    ...config.addonReducers,\n    geolocation,\n  };\n\n  // volto-widgets-view\n  if (config.widgets.views?.widget) {\n    config.widgets.views.widget.geolocation = GeolocationWidgetView;\n  }\n\n  return config;\n};\n\nexport default applyConfig;\n"],"mappings":";;;AAAA,SACEA,qBAAqB,EACrBC,qBAAqB,EACrBC,YAAY,QACP,cAAc;AACrB,SAASC,WAAW,QAAQ,YAAY;AAExC,MAAMC,WAAW,GAAIC,MAAM,IAAK;EAAA;EAC9BA,MAAM,CAACC,OAAO,CAACC,MAAM,CAACJ,WAAW,GAAGH,qBAAqB;EACzDK,MAAM,CAACC,OAAO,CAACC,MAAM,CAACC,aAAa,GAAGN,YAAY;EAElDG,MAAM,CAACI,QAAQ,CAACC,yBAAyB,GAAG,CAC1C,IAAIL,MAAM,CAACI,QAAQ,CAACC,yBAAyB,IAAI,EAAE,CAAC,EACpD,qBAAqB,CACtB;EAEDL,MAAM,CAACM,aAAa,mCACfN,MAAM,CAACM,aAAa;IACvBR;EAAW,EACZ;;EAED;EACA,6BAAIE,MAAM,CAACC,OAAO,CAACM,KAAK,kDAApB,sBAAsBL,MAAM,EAAE;IAChCF,MAAM,CAACC,OAAO,CAACM,KAAK,CAACL,MAAM,CAACJ,WAAW,GAAGF,qBAAqB;EACjE;EAEA,OAAOI,MAAM;AACf,CAAC;AAED,eAAeD,WAAW"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}