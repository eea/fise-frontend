{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport superagent from 'superagent';\nimport cookie from 'react-cookie';\nimport qs from 'querystring';\nimport { parse as parseUrl } from 'url';\nimport config from '@plone/volto/registry';\nvar getProtocol = function getProtocol(url) {\n  var _url$protocol;\n  return (url === null || url === void 0 ? void 0 : (_url$protocol = url.protocol) === null || _url$protocol === void 0 ? void 0 : _url$protocol.slice(0, url.protocol.length - 1)) || '';\n};\nvar getDefaultPort = function getDefaultPort(url) {\n  var protocol = getProtocol(url);\n  return protocol === 'http' ? ':80' : ':443';\n};\nvar getReqPath = function getReqPath(req) {\n  var reqPath = req.path;\n  var reqQuery = qs.stringify(req.query);\n  return !reqQuery ? reqPath : \"\".concat(reqPath, \"?\").concat(reqQuery);\n};\nvar getVirtualHost = function getVirtualHost() {\n  var settings = config.settings;\n  var vh = process.env.RAZZLE_VIRTUAL_HOST || settings.virtualHost;\n  var vhUrl = vh ? parseUrl(vh) : null;\n  var internalApiUrl = parseUrl(settings.internalApiPath || settings.apiPath);\n  var apiUrl = parseUrl(settings.apiPath);\n  var publicUrl = parseUrl(settings.publicURL);\n  var virtualHost = vhUrl ? \"/\".concat(getProtocol(vhUrl), \"/\").concat(vhUrl.hostname).concat(getDefaultPort(vhUrl)).concat(internalApiUrl.path) : \"/\".concat(getProtocol(apiUrl), \"/\").concat(__DEVELOPMENT__ ? publicUrl.host : publicUrl.hostname).concat(getDefaultPort(apiUrl)).concat(internalApiUrl.path);\n  return \"\".concat(internalApiUrl.protocol, \"//\").concat(internalApiUrl.host, \"/VirtualHostBase\").concat(virtualHost, \"/VirtualHostRoot\");\n};\nexport var getAPIResourceWithAuth = function getAPIResourceWithAuth(req) {\n  return new Promise(function (resolve, reject) {\n    var url = \"\".concat(getVirtualHost()).concat(getReqPath(req));\n    var request = superagent.get(url).buffer().type('text');\n    var authToken = cookie.load('auth_token');\n    if (authToken) {\n      request.set('Authorization', \"Bearer \".concat(authToken));\n    }\n    request.end(function (error, res) {\n      if (error) {\n        return reject(error);\n      }\n      return resolve(res);\n    });\n  });\n};\nexport default (function (config) {\n  if (__SERVER__) {\n    var _process$env$RAZZLE_V;\n    var vhPaths = ((_process$env$RAZZLE_V = process.env.RAZZLE_VIRTUAL_HOSTED_PATHS) === null || _process$env$RAZZLE_V === void 0 ? void 0 : _process$env$RAZZLE_V.split(',')) || config.settings.virtualHostedPaths || [];\n    if (vhPaths.length) {\n      var express = require('express');\n      var middleware = express.Router();\n      vhPaths.forEach(function (path) {\n        middleware.all(path, function (req, res) {\n          getAPIResourceWithAuth(req).then(function (resource) {\n            var content_type = resource.get('content-type');\n            res.set('Content-Type', content_type);\n            res.send(resource.text);\n          })[\"catch\"](function (error) {\n            res.status(error.status).send(error);\n          });\n        });\n      });\n      middleware.id = 'vh-proxy-middleware';\n      config.settings.expressMiddleware = [].concat(_toConsumableArray(config.settings.expressMiddleware), [middleware]);\n    }\n  }\n  return config;\n});","map":{"version":3,"names":["superagent","cookie","qs","parse","parseUrl","config","getProtocol","url","protocol","slice","length","getDefaultPort","getReqPath","req","reqPath","path","reqQuery","stringify","query","getVirtualHost","settings","vh","process","env","RAZZLE_VIRTUAL_HOST","virtualHost","vhUrl","internalApiUrl","internalApiPath","apiPath","apiUrl","publicUrl","publicURL","hostname","__DEVELOPMENT__","host","getAPIResourceWithAuth","Promise","resolve","reject","request","get","buffer","type","authToken","load","set","end","error","res","__SERVER__","vhPaths","RAZZLE_VIRTUAL_HOSTED_PATHS","split","virtualHostedPaths","express","require","middleware","Router","forEach","all","then","resource","content_type","send","text","status","id","expressMiddleware"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-middleware-vh/src/index.js"],"sourcesContent":["import superagent from 'superagent';\nimport cookie from 'react-cookie';\nimport qs from 'querystring';\nimport { parse as parseUrl } from 'url';\n\nimport config from '@plone/volto/registry';\n\nconst getProtocol = (url) => {\n  return url?.protocol?.slice(0, url.protocol.length - 1) || '';\n};\n\nconst getDefaultPort = (url) => {\n  const protocol = getProtocol(url);\n  return protocol === 'http' ? ':80' : ':443';\n};\n\nconst getReqPath = (req) => {\n  const reqPath = req.path;\n  const reqQuery = qs.stringify(req.query);\n\n  return !reqQuery ? reqPath : `${reqPath}?${reqQuery}`;\n};\n\nconst getVirtualHost = () => {\n  const { settings } = config;\n  const vh = process.env.RAZZLE_VIRTUAL_HOST || settings.virtualHost;\n  const vhUrl = vh ? parseUrl(vh) : null;\n  const internalApiUrl = parseUrl(settings.internalApiPath || settings.apiPath);\n  const apiUrl = parseUrl(settings.apiPath);\n  const publicUrl = parseUrl(settings.publicURL);\n  const virtualHost = vhUrl\n    ? `/${getProtocol(vhUrl)}/${vhUrl.hostname}${getDefaultPort(vhUrl)}${\n        internalApiUrl.path\n      }`\n    : `/${getProtocol(apiUrl)}/${\n        __DEVELOPMENT__ ? publicUrl.host : publicUrl.hostname\n      }${getDefaultPort(apiUrl)}${internalApiUrl.path}`;\n\n  return `${internalApiUrl.protocol}//${internalApiUrl.host}/VirtualHostBase${virtualHost}/VirtualHostRoot`;\n};\n\nexport const getAPIResourceWithAuth = (req) => {\n  return new Promise((resolve, reject) => {\n    const url = `${getVirtualHost()}${getReqPath(req)}`;\n    const request = superagent.get(url).buffer().type('text');\n    const authToken = cookie.load('auth_token');\n    if (authToken) {\n      request.set('Authorization', `Bearer ${authToken}`);\n    }\n    request.end((error, res) => {\n      if (error) {\n        return reject(error);\n      }\n      return resolve(res);\n    });\n  });\n};\n\nexport default (config) => {\n  if (__SERVER__) {\n    const vhPaths =\n      process.env.RAZZLE_VIRTUAL_HOSTED_PATHS?.split(',') ||\n      config.settings.virtualHostedPaths ||\n      [];\n    if (vhPaths.length) {\n      const express = require('express');\n      const middleware = express.Router();\n      vhPaths.forEach((path) => {\n        middleware.all(path, function (req, res) {\n          getAPIResourceWithAuth(req)\n            .then((resource) => {\n              const content_type = resource.get('content-type');\n              res.set('Content-Type', content_type);\n              res.send(resource.text);\n            })\n            .catch((error) => {\n              res.status(error.status).send(error);\n            });\n        });\n      });\n      middleware.id = 'vh-proxy-middleware';\n\n      config.settings.expressMiddleware = [\n        ...config.settings.expressMiddleware,\n        middleware,\n      ];\n    }\n  }\n  return config;\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}