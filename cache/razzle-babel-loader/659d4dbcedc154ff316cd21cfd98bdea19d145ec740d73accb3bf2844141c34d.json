{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/Collection/BlockEdit.jsx\";\nvar __jsx = React.createElement;\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport { Segment } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { SidebarPortal } from '@plone/volto/components';\nimport { TextWidget } from '@plone/volto/components';\nimport { connect } from 'react-redux';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { getContent, getVocabulary } from '@plone/volto/actions';\nimport SelectListingType from './SelectListingType';\nimport { SelectWidget } from '@plone/volto/components';\nimport BlockView from './BlockView';\nvar vocabulary = 'plone.app.contenttypes.metadatafields';\nvar Edit = /*#__PURE__*/function (_Component) {\n  _inherits(Edit, _Component);\n  var _super = _createSuper(Edit);\n  function Edit(props) {\n    var _this;\n    _classCallCheck(this, Edit);\n    _this = _super.call(this, props);\n    _this.state = {\n      items: []\n      // index_name: this.props.data.index_name || '',\n    };\n\n    _this.updateContent = _this.updateContent.bind(_assertThisInitialized(_this));\n    _this.getRequestKey = _this.getRequestKey.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(Edit, [{\n    key: \"handleChange\",\n    value: function handleChange(id, value) {\n      var data = this.props.data;\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, data), {}, _defineProperty({}, id, value)));\n    }\n  }, {\n    key: \"getRequestKey\",\n    value: function getRequestKey() {\n      return \"col-content:\".concat(this.props.block);\n    }\n  }, {\n    key: \"updateContent\",\n    value: function updateContent() {\n      var path = this.props.data.collection_url;\n      if (!path) return;\n      var url = \"\".concat(getBaseUrl(path));\n      this.props.getContent(url, null, this.getRequestKey());\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // console.log('metadata', this.props.metadataFields);\n      if (prevProps.data.collection_url !== this.props.data.collection_url) {\n        return this.updateContent();\n      }\n      var key = this.getRequestKey();\n      if (!prevProps.contentSubrequests[key]) {\n        return;\n      }\n      var prev = prevProps.contentSubrequests[key];\n      var now = this.props.contentSubrequests[key];\n      if (prev.loading && now.loaded) {\n        this.setState({\n          items: now.data.items\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getVocabulary(vocabulary);\n      this.updateContent();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var data = _objectSpread(_objectSpread({}, this.props.data), {}, {\n        collection_url: this.props.data.collection_url || ''\n      });\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      }, data.collection_url ? __jsx(BlockView, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 32\n        }\n      })) : '', __jsx(SidebarPortal, {\n        selected: this.props.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, __jsx(Segment.Group, {\n        raised: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, __jsx(\"header\", {\n        className: \"header pulled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }, \"Collection\")), __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, __jsx(TextWidget, {\n        id: \"collection_url\",\n        title: \"Query\",\n        required: false,\n        value: data.collection_url.split('/').slice(-1)[0],\n        icon: data.collection_url ? clearSVG : navTreeSVG,\n        iconAction: data.collection_url ? function () {\n          _this2.props.onChangeBlock(_this2.props.block, _objectSpread(_objectSpread({}, data), {}, {\n            collection_url: data.href\n          }));\n        } : function () {\n          return _this2.props.openObjectBrowser({\n            dataName: 'collection_url',\n            mode: 'link'\n          });\n        },\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }), __jsx(SelectListingType, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }), __jsx(SelectWidget, {\n        required: false,\n        error: [],\n        fieldSet: \"collection\",\n        id: \"index_name\",\n        title: \"Use filter\",\n        choices: this.props.metadataFields,\n        value: this.props.data.index_name || [],\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n  return Edit;\n}(Component);\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nEdit.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default connect(function (state, props) {\n  // console.log('vocabs', state.vocabularies);\n  return {\n    contentSubrequests: state.content.subrequests,\n    metadataFields: state.vocabularies[vocabulary] && state.vocabularies[vocabulary].items ? state.vocabularies[vocabulary].items.map(function (o) {\n      return [o.value, o.label];\n    }) : []\n  };\n}, {\n  getVocabulary: getVocabulary,\n  getContent: getContent\n})(Edit);","map":{"version":3,"names":["navTreeSVG","clearSVG","Segment","PropTypes","React","Component","SidebarPortal","TextWidget","connect","getBaseUrl","getContent","getVocabulary","SelectListingType","SelectWidget","BlockView","vocabulary","Edit","props","state","items","updateContent","bind","getRequestKey","handleChange","id","value","data","onChangeBlock","block","path","collection_url","url","prevProps","key","contentSubrequests","prev","now","loading","loaded","setState","selected","split","slice","href","openObjectBrowser","dataName","mode","metadataFields","index_name","propTypes","objectOf","any","isRequired","content","subrequests","vocabularies","map","o","label"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/Collection/BlockEdit.jsx"],"sourcesContent":["import navTreeSVG from '@plone/volto/icons/nav.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport { Segment } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { SidebarPortal } from '@plone/volto/components';\nimport { TextWidget } from '@plone/volto/components';\nimport { connect } from 'react-redux';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { getContent, getVocabulary } from '@plone/volto/actions';\nimport SelectListingType from './SelectListingType';\nimport { SelectWidget } from '@plone/volto/components';\nimport BlockView from './BlockView';\n\nconst vocabulary = 'plone.app.contenttypes.metadatafields';\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n      // index_name: this.props.data.index_name || '',\n    };\n\n    this.updateContent = this.updateContent.bind(this);\n    this.getRequestKey = this.getRequestKey.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(id, value) {\n    const data = this.props.data;\n\n    this.props.onChangeBlock(this.props.block, {\n      ...data,\n      [id]: value,\n    });\n  }\n\n  getRequestKey() {\n    return `col-content:${this.props.block}`;\n  }\n\n  updateContent() {\n    const path = this.props.data.collection_url;\n    if (!path) return;\n\n    const url = `${getBaseUrl(path)}`;\n    this.props.getContent(url, null, this.getRequestKey());\n  }\n\n  componentDidUpdate(prevProps) {\n    // console.log('metadata', this.props.metadataFields);\n    if (prevProps.data.collection_url !== this.props.data.collection_url) {\n      return this.updateContent();\n    }\n    const key = this.getRequestKey();\n    if (!prevProps.contentSubrequests[key]) {\n      return;\n    }\n\n    const prev = prevProps.contentSubrequests[key];\n    const now = this.props.contentSubrequests[key];\n\n    if (prev.loading && now.loaded) {\n      this.setState({ items: now.data.items });\n    }\n  }\n\n  componentDidMount() {\n    this.props.getVocabulary(vocabulary);\n    this.updateContent();\n  }\n\n  render() {\n    const data = {\n      ...this.props.data,\n      collection_url: this.props.data.collection_url || '',\n    };\n\n    return (\n      <div>\n        {data.collection_url ? <BlockView {...this.props} /> : ''}\n\n        <SidebarPortal selected={this.props.selected}>\n          <Segment.Group raised>\n            <header className=\"header pulled\">\n              <h2>Collection</h2>\n            </header>\n            <Segment>\n              <TextWidget\n                id=\"collection_url\"\n                title=\"Query\"\n                required={false}\n                value={data.collection_url.split('/').slice(-1)[0]}\n                icon={data.collection_url ? clearSVG : navTreeSVG}\n                iconAction={\n                  data.collection_url\n                    ? () => {\n                        this.props.onChangeBlock(this.props.block, {\n                          ...data,\n                          collection_url: data.href,\n                        });\n                      }\n                    : () =>\n                        this.props.openObjectBrowser({\n                          dataName: 'collection_url',\n                          mode: 'link',\n                        })\n                }\n                onChange={this.handleChange}\n              />\n\n              <SelectListingType />\n\n              <SelectWidget\n                required={false}\n                error={[]}\n                fieldSet=\"collection\"\n                id=\"index_name\"\n                title=\"Use filter\"\n                choices={this.props.metadataFields}\n                value={this.props.data.index_name || []}\n                onChange={this.handleChange}\n              />\n            </Segment>\n          </Segment.Group>\n        </SidebarPortal>\n      </div>\n    );\n  }\n}\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nEdit.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default connect(\n  (state, props) => {\n    // console.log('vocabs', state.vocabularies);\n    return {\n      contentSubrequests: state.content.subrequests,\n      metadataFields:\n        state.vocabularies[vocabulary] && state.vocabularies[vocabulary].items\n          ? state.vocabularies[vocabulary].items.map((o) => [o.value, o.label])\n          : [],\n    };\n  },\n  {\n    getVocabulary,\n    getContent,\n  },\n)(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}