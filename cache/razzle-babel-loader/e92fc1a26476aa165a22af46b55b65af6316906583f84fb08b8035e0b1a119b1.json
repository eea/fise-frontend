{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/components/UniversalCard/CardMeta.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card as UiCard } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport { formatDate } from '@plone/volto/helpers/Utils/Date';\nconst CardMeta = props => {\n  const {\n    item,\n    itemModel = {},\n    head_title\n  } = props;\n  const {\n    EffectiveDate\n  } = item;\n  const locale = config.settings.dateLocale || 'en-gb';\n  const showDate = itemModel.hasDate !== false && EffectiveDate !== 'None';\n  const showMeta = !!(head_title || itemModel !== null && itemModel !== void 0 && itemModel.hasMetaType && item['@type']);\n  const show = showDate || showMeta;\n  return show ? __jsx(UiCard.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, showMeta && __jsx(\"span\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, head_title || item['@type']), showDate && __jsx(\"span\", {\n    className: \"text-right date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, formatDate({\n    date: EffectiveDate,\n    format: {\n      year: 'numeric',\n      month: 'short',\n      day: '2-digit'\n    },\n    locale: locale\n  }))) : null;\n};\nexport default CardMeta;","map":{"version":3,"names":["React","Card","UiCard","config","formatDate","CardMeta","props","item","itemModel","head_title","EffectiveDate","locale","settings","dateLocale","showDate","hasDate","showMeta","hasMetaType","show","date","format","year","month","day"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/components/UniversalCard/CardMeta.jsx"],"sourcesContent":["import React from 'react';\nimport { Card as UiCard } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport { formatDate } from '@plone/volto/helpers/Utils/Date';\n\nconst CardMeta = (props) => {\n  const { item, itemModel = {}, head_title } = props;\n  const { EffectiveDate } = item;\n  const locale = config.settings.dateLocale || 'en-gb';\n  const showDate = itemModel.hasDate !== false && EffectiveDate !== 'None';\n  const showMeta = !!(head_title || (itemModel?.hasMetaType && item['@type']));\n  const show = showDate || showMeta;\n\n  return show ? (\n    <UiCard.Meta>\n      {showMeta && (\n        <span className=\"text-left\">{head_title || item['@type']}</span>\n      )}\n      {showDate && (\n        <span className=\"text-right date\">\n          {formatDate({\n            date: EffectiveDate,\n            format: {\n              year: 'numeric',\n              month: 'short',\n              day: '2-digit',\n            },\n            locale: locale,\n          })}\n        </span>\n      )}\n    </UiCard.Meta>\n  ) : null;\n};\n\nexport default CardMeta;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,IAAIC,MAAM,QAAQ,mBAAmB;AAClD,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,UAAU,QAAQ,iCAAiC;AAE5D,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B,MAAM;IAAEC,IAAI;IAAEC,SAAS,GAAG,CAAC,CAAC;IAAEC;EAAW,CAAC,GAAGH,KAAK;EAClD,MAAM;IAAEI;EAAc,CAAC,GAAGH,IAAI;EAC9B,MAAMI,MAAM,GAAGR,MAAM,CAACS,QAAQ,CAACC,UAAU,IAAI,OAAO;EACpD,MAAMC,QAAQ,GAAGN,SAAS,CAACO,OAAO,KAAK,KAAK,IAAIL,aAAa,KAAK,MAAM;EACxE,MAAMM,QAAQ,GAAG,CAAC,EAAEP,UAAU,IAAKD,SAAS,aAATA,SAAS,eAATA,SAAS,CAAES,WAAW,IAAIV,IAAI,CAAC,OAAO,CAAE,CAAC;EAC5E,MAAMW,IAAI,GAAGJ,QAAQ,IAAIE,QAAQ;EAEjC,OAAOE,IAAI,GACT,MAAC,MAAM,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACTF,QAAQ,IACP;IAAM,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEP,UAAU,IAAIF,IAAI,CAAC,OAAO,CAAC,CACzD,EACAO,QAAQ,IACP;IAAM,SAAS,EAAC,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9BV,UAAU,CAAC;IACVe,IAAI,EAAET,aAAa;IACnBU,MAAM,EAAE;MACNC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE;IACP,CAAC;IACDZ,MAAM,EAAEA;EACV,CAAC,CAAC,CAEL,CACW,GACZ,IAAI;AACV,CAAC;AAED,eAAeN,QAAQ"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}