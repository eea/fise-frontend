{"ast":null,"code":"import _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/editor/ui/Toolbar.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from 'react';\nimport { Portal } from 'react-portal';\nimport { useSlate } from 'slate-react';\nimport Separator from './Separator';\nimport BasicToolbar from './BasicToolbar';\nimport { Editor } from 'slate';\nimport { ReactEditor } from 'slate-react';\nvar Toolbar = function Toolbar(_ref) {\n  _s();\n  var elementType = _ref.elementType,\n    _ref$enableExpando = _ref.enableExpando,\n    enableExpando = _ref$enableExpando === void 0 ? false : _ref$enableExpando,\n    toggleButton = _ref.toggleButton,\n    className = _ref.className,\n    children = _ref.children,\n    _ref$show = _ref.show,\n    show = _ref$show === void 0 ? true : _ref$show;\n  var ref = useRef();\n  var editor = useSlate();\n  useEffect(function () {\n    var el = ref.current;\n    if ((children || []).length === 0) {\n      el.removeAttribute('style');\n      return;\n    }\n    if (!show) {\n      el.removeAttribute('style');\n      return;\n    }\n    var selection = editor.selection;\n    // const savedSelection = editor.getSavedSelection();\n    if (!selection) {\n      el.removeAttribute('style');\n      return;\n    }\n    if (editor.isSidebarOpen) {\n      el.removeAttribute('style');\n      return;\n    }\n    var rect;\n    if (elementType) {\n      var _Editor$nodes = Editor.nodes(editor, {\n          at: editor.selection || editor.getSavedSelection(),\n          match: function match(n) {\n            return n.type === elementType;\n          }\n        }),\n        _Editor$nodes2 = _slicedToArray(_Editor$nodes, 1),\n        element = _Editor$nodes2[0];\n      if (!element) {\n        el.removeAttribute('style');\n        return;\n      }\n      var _element = _slicedToArray(element, 1),\n        n = _element[0];\n      var domEl = ReactEditor.toDOMNode(editor, n);\n      rect = domEl.getBoundingClientRect();\n    } else {\n      var domSelection = window.getSelection();\n      if (domSelection.rangeCount < 1) {\n        // don't do anything here, this happens when opening a focus-stealing\n        // component, in which case we actually want to keep the toolbar open\n        // See\n        // https://stackoverflow.com/questions/22935320/uncaught-indexsizeerror-failed-to-execute-getrangeat-on-selection-0-is-not\n        return;\n      }\n      var domRange = domSelection.getRangeAt(0);\n      rect = domRange.getBoundingClientRect();\n    }\n    el.style.opacity = 1;\n    el.style.top = \"\".concat(rect.top + window.pageYOffset - el.offsetHeight - 6, \"px\");\n    el.style.left = \"\".concat(Math.max(rect.left + window.pageXOffset - el.offsetWidth / 2 + rect.width / 2, 0 // if the left edge of the toolbar should be otherwise offscreen\n    ), \"px\");\n  });\n  return __jsx(Portal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(BasicToolbar, {\n    className: \"slate-inline-toolbar \".concat(className),\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, children, enableExpando && toggleButton && __jsx(React.Fragment, null, __jsx(Separator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), toggleButton)));\n};\n_s(Toolbar, \"zR6WV11V6v+T2KLkAbtbVw8+RTk=\", false, function () {\n  return [useSlate];\n});\n_c = Toolbar;\nexport default Toolbar;\nvar _c;\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["React","useRef","useEffect","Portal","useSlate","Separator","BasicToolbar","Editor","ReactEditor","Toolbar","elementType","enableExpando","toggleButton","className","children","show","ref","editor","el","current","length","removeAttribute","selection","isSidebarOpen","rect","nodes","at","getSavedSelection","match","n","type","element","domEl","toDOMNode","getBoundingClientRect","domSelection","window","getSelection","rangeCount","domRange","getRangeAt","style","opacity","top","pageYOffset","offsetHeight","left","Math","max","pageXOffset","offsetWidth","width"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/editor/ui/Toolbar.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Portal } from 'react-portal';\nimport { useSlate } from 'slate-react';\nimport Separator from './Separator';\nimport BasicToolbar from './BasicToolbar';\nimport { Editor } from 'slate';\nimport { ReactEditor } from 'slate-react';\n\nconst Toolbar = ({\n  elementType,\n  enableExpando = false,\n  toggleButton,\n  className,\n  children,\n  show = true,\n}) => {\n  const ref = useRef();\n  const editor = useSlate();\n\n  useEffect(() => {\n    const el = ref.current;\n\n    if ((children || []).length === 0) {\n      el.removeAttribute('style');\n      return;\n    }\n\n    if (!show) {\n      el.removeAttribute('style');\n      return;\n    }\n\n    const { selection } = editor;\n    // const savedSelection = editor.getSavedSelection();\n    if (!selection) {\n      el.removeAttribute('style');\n      return;\n    }\n\n    if (editor.isSidebarOpen) {\n      el.removeAttribute('style');\n      return;\n    }\n\n    let rect;\n    if (elementType) {\n      const [element] = Editor.nodes(editor, {\n        at: editor.selection || editor.getSavedSelection(),\n        match: (n) => n.type === elementType,\n      });\n\n      if (!element) {\n        el.removeAttribute('style');\n        return;\n      }\n\n      const [n] = element;\n      const domEl = ReactEditor.toDOMNode(editor, n);\n\n      rect = domEl.getBoundingClientRect();\n    } else {\n      const domSelection = window.getSelection();\n      if (domSelection.rangeCount < 1) {\n        // don't do anything here, this happens when opening a focus-stealing\n        // component, in which case we actually want to keep the toolbar open\n        // See\n        // https://stackoverflow.com/questions/22935320/uncaught-indexsizeerror-failed-to-execute-getrangeat-on-selection-0-is-not\n        return;\n      }\n      const domRange = domSelection.getRangeAt(0);\n      rect = domRange.getBoundingClientRect();\n    }\n\n    el.style.opacity = 1;\n    el.style.top = `${rect.top + window.pageYOffset - el.offsetHeight - 6}px`;\n    el.style.left = `${Math.max(\n      rect.left + window.pageXOffset - el.offsetWidth / 2 + rect.width / 2,\n      0, // if the left edge of the toolbar should be otherwise offscreen\n    )}px`;\n  });\n\n  return (\n    <Portal>\n      <BasicToolbar className={`slate-inline-toolbar ${className}`} ref={ref}>\n        {children}\n        {enableExpando && toggleButton && (\n          <>\n            <Separator />\n            {toggleButton}\n          </>\n        )}\n      </BasicToolbar>\n    </Portal>\n  );\n};\n\nexport default Toolbar;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}