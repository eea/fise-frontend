{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/components/theme/CountryView/CountryView.jsx\";\nvar __jsx = React.createElement;\n/**\n * Full view component.\n * @module components/theme/View/FullView\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { setFolderTabs } from '@eeacms/volto-forests-theme/actions';\n\n/**\n * Full view component class.\n * @function FullView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\n\nvar numberToWord = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n  10: 'ten',\n  11: 'eleven',\n  12: 'twelve'\n};\nvar mapDispatchToProps = {\n  // setFolderHeader,\n  setFolderTabs: setFolderTabs\n};\nvar FullView = /*#__PURE__*/function (_Component) {\n  _inherits(FullView, _Component);\n  var _super = _createSuper(FullView);\n  function FullView(props) {\n    var _this;\n    _classCallCheck(this, FullView);\n    _this = _super.call(this, props);\n    _this.getFolderHeader = _this.getFolderHeader.bind(_assertThisInitialized(_this));\n    _this.renderTabs = _this.renderTabs.bind(_assertThisInitialized(_this));\n    _this.state = {\n      tabs: null\n    };\n    return _this;\n  }\n  _createClass(FullView, [{\n    key: \"getFolderHeader\",\n    value: function getFolderHeader(nextContent) {\n      // const content = nextContent ? nextContent : this.props.content;\n      // const image =\n      //   content.items && content.items.find(c => c['@type'] === 'Image');\n      // const url = image && image.image.download;\n      // const inCountryFolder = true;\n      // this.props.setFolderHeader({ title, description, url, inCountryFolder });\n    }\n  }, {\n    key: \"renderTabs\",\n    value: function renderTabs(nextContent) {\n      var _this2 = this;\n      var items = nextContent ? nextContent.items : this.props.content.items;\n      var content = items.filter(function (i) {\n        return i.title !== 'folder_info';\n      });\n      var tabs = __jsx(\"div\", {\n        className: 'ui item stackable tabs menu ' + numberToWord[content.length],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }, content.map(function (item) {\n        return __jsx(Link, {\n          key: item.url,\n          className: \"item\",\n          to: item.url,\n          title: item['@type'],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }\n        }, item.title);\n      }));\n      this.setState({\n        tabs: tabs\n      });\n      this.props.setFolderTabs(content);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getFolderHeader();\n      this.renderTabs();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (JSON.stringify(nextProps.content) !== JSON.stringify(this.props.content)) {\n        this.getFolderHeader(nextProps.content);\n        this.renderTabs(nextProps.content);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // this.props.setFolderHeader({ inCountryFolder: false });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var content = this.props.content;\n      return __jsx(Container, {\n        className: \"view-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 7\n        }\n      }, __jsx(Helmet, {\n        title: content.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }), __jsx(\"article\", {\n        id: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }, __jsx(\"section\", {\n        id: \"content-core\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }, this.state.tabs)));\n    }\n  }]);\n  return FullView;\n}(Component);\n_defineProperty(FullView, \"propTypes\", {\n  /**\n   * Content of the object\n   */\n  content: PropTypes.shape({\n    /**\n     * Title of the object\n     */\n    title: PropTypes.string,\n    /**\n     * Description of the object\n     */\n    description: PropTypes.string,\n    /**\n     * Child items of the object\n     */\n    items: PropTypes.arrayOf(PropTypes.shape({\n      /**\n       * Title of the item\n       */\n      title: PropTypes.string,\n      /**\n       * Description of the item\n       */\n      description: PropTypes.string,\n      /**\n       * Url of the item\n       */\n      url: PropTypes.string,\n      /**\n       * Image of the item\n       */\n      image: PropTypes.object,\n      /**\n       * Image caption of the item\n       */\n      image_caption: PropTypes.string,\n      /**\n       * Type of the item\n       */\n      '@type': PropTypes.string\n    }))\n  }).isRequired\n});\nexport default connect(null, mapDispatchToProps)(FullView);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","Link","Container","connect","setFolderTabs","numberToWord","mapDispatchToProps","FullView","props","getFolderHeader","bind","renderTabs","state","tabs","nextContent","items","content","filter","i","title","length","map","item","url","setState","nextProps","JSON","stringify","shape","string","description","arrayOf","image","object","image_caption","isRequired"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/components/theme/CountryView/CountryView.jsx"],"sourcesContent":["/**\n * Full view component.\n * @module components/theme/View/FullView\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Link } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { setFolderTabs } from '@eeacms/volto-forests-theme/actions';\n\n/**\n * Full view component class.\n * @function FullView\n * @param {Object} content Content object.\n * @returns {string} Markup of the component.\n */\n\nconst numberToWord = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n  10: 'ten',\n  11: 'eleven',\n  12: 'twelve',\n};\n\nconst mapDispatchToProps = {\n  // setFolderHeader,\n  setFolderTabs,\n};\n\nclass FullView extends Component {\n  static propTypes = {\n    /**\n     * Content of the object\n     */\n    content: PropTypes.shape({\n      /**\n       * Title of the object\n       */\n      title: PropTypes.string,\n      /**\n       * Description of the object\n       */\n      description: PropTypes.string,\n      /**\n       * Child items of the object\n       */\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          /**\n           * Title of the item\n           */\n          title: PropTypes.string,\n          /**\n           * Description of the item\n           */\n          description: PropTypes.string,\n          /**\n           * Url of the item\n           */\n          url: PropTypes.string,\n          /**\n           * Image of the item\n           */\n          image: PropTypes.object,\n          /**\n           * Image caption of the item\n           */\n          image_caption: PropTypes.string,\n          /**\n           * Type of the item\n           */\n          '@type': PropTypes.string,\n        }),\n      ),\n    }).isRequired,\n  };\n  constructor(props) {\n    super(props);\n    this.getFolderHeader = this.getFolderHeader.bind(this);\n    this.renderTabs = this.renderTabs.bind(this);\n\n    this.state = {\n      tabs: null,\n    };\n  }\n\n  getFolderHeader(nextContent) {\n    // const content = nextContent ? nextContent : this.props.content;\n    // const image =\n    //   content.items && content.items.find(c => c['@type'] === 'Image');\n    // const url = image && image.image.download;\n    // const inCountryFolder = true;\n    // this.props.setFolderHeader({ title, description, url, inCountryFolder });\n  }\n\n  renderTabs(nextContent) {\n    const items = nextContent ? nextContent.items : this.props.content.items;\n    const content = items.filter((i) => i.title !== 'folder_info');\n    const tabs = (\n      <div\n        className={\n          'ui item stackable tabs menu ' + numberToWord[content.length]\n        }\n      >\n        {content.map((item) => (\n          <Link\n            key={item.url}\n            className=\"item\"\n            to={item.url}\n            title={item['@type']}\n          >\n            {item.title}\n          </Link>\n        ))}\n      </div>\n    );\n    this.setState({\n      tabs: tabs,\n    });\n    this.props.setFolderTabs(content);\n  }\n\n  componentDidMount() {\n    this.getFolderHeader();\n    this.renderTabs();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      JSON.stringify(nextProps.content) !== JSON.stringify(this.props.content)\n    ) {\n      this.getFolderHeader(nextProps.content);\n      this.renderTabs(nextProps.content);\n    }\n  }\n\n  componentWillUnmount() {\n    // this.props.setFolderHeader({ inCountryFolder: false });\n  }\n\n  render() {\n    const content = this.props.content;\n    return (\n      <Container className=\"view-wrapper\">\n        <Helmet title={content.title} />\n        <article id=\"content\">\n          <section id=\"content-core\">{this.state.tabs}</section>\n        </article>\n      </Container>\n    );\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(FullView);\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,aAAa,QAAQ,qCAAqC;;AAEnE;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,YAAY,GAAG;EACnB,CAAC,EAAE,KAAK;EACR,CAAC,EAAE,KAAK;EACR,CAAC,EAAE,OAAO;EACV,CAAC,EAAE,MAAM;EACT,CAAC,EAAE,MAAM;EACT,CAAC,EAAE,KAAK;EACR,CAAC,EAAE,OAAO;EACV,CAAC,EAAE,OAAO;EACV,CAAC,EAAE,MAAM;EACT,EAAE,EAAE,KAAK;EACT,EAAE,EAAE,QAAQ;EACZ,EAAE,EAAE;AACN,CAAC;AAED,IAAMC,kBAAkB,GAAG;EACzB;EACAF,aAAa,EAAbA;AACF,CAAC;AAAC,IAEIG,QAAQ;EAAA;EAAA;EA+CZ,kBAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IACX,MAAKC,eAAe,GAAG,MAAKA,eAAe,CAACC,IAAI,+BAAM;IACtD,MAAKC,UAAU,GAAG,MAAKA,UAAU,CAACD,IAAI,+BAAM;IAE5C,MAAKE,KAAK,GAAG;MACXC,IAAI,EAAE;IACR,CAAC;IAAC;EACJ;EAAC;IAAA;IAAA,OAED,yBAAgBC,WAAW,EAAE;MAC3B;MACA;MACA;MACA;MACA;MACA;IAAA;EACD;IAAA;IAAA,OAED,oBAAWA,WAAW,EAAE;MAAA;MACtB,IAAMC,KAAK,GAAGD,WAAW,GAAGA,WAAW,CAACC,KAAK,GAAG,IAAI,CAACP,KAAK,CAACQ,OAAO,CAACD,KAAK;MACxE,IAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,CAACC,KAAK,KAAK,aAAa;MAAA,EAAC;MAC9D,IAAMN,IAAI,GACR;QACE,SAAS,EACP,8BAA8B,GAAGR,YAAY,CAACW,OAAO,CAACI,MAAM,CAC7D;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAEAJ,OAAO,CAACK,GAAG,CAAC,UAACC,IAAI;QAAA,OAChB,MAAC,IAAI;UACH,GAAG,EAAEA,IAAI,CAACC,GAAI;UACd,SAAS,EAAC,MAAM;UAChB,EAAE,EAAED,IAAI,CAACC,GAAI;UACb,KAAK,EAAED,IAAI,CAAC,OAAO,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAEpBA,IAAI,CAACH,KAAK,CACN;MAAA,CACR,CAAC,CAEL;MACD,IAAI,CAACK,QAAQ,CAAC;QACZX,IAAI,EAAEA;MACR,CAAC,CAAC;MACF,IAAI,CAACL,KAAK,CAACJ,aAAa,CAACY,OAAO,CAAC;IACnC;EAAC;IAAA;IAAA,OAED,6BAAoB;MAClB,IAAI,CAACP,eAAe,EAAE;MACtB,IAAI,CAACE,UAAU,EAAE;IACnB;EAAC;IAAA;IAAA,OAED,mCAA0Bc,SAAS,EAAE;MACnC,IACEC,IAAI,CAACC,SAAS,CAACF,SAAS,CAACT,OAAO,CAAC,KAAKU,IAAI,CAACC,SAAS,CAAC,IAAI,CAACnB,KAAK,CAACQ,OAAO,CAAC,EACxE;QACA,IAAI,CAACP,eAAe,CAACgB,SAAS,CAACT,OAAO,CAAC;QACvC,IAAI,CAACL,UAAU,CAACc,SAAS,CAACT,OAAO,CAAC;MACpC;IACF;EAAC;IAAA;IAAA,OAED,gCAAuB;MACrB;IAAA;EACD;IAAA;IAAA,OAED,kBAAS;MACP,IAAMA,OAAO,GAAG,IAAI,CAACR,KAAK,CAACQ,OAAO;MAClC,OACE,MAAC,SAAS;QAAC,SAAS,EAAC,cAAc;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACjC,MAAC,MAAM;QAAC,KAAK,EAAEA,OAAO,CAACG,KAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,EAChC;QAAS,EAAE,EAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACnB;QAAS,EAAE,EAAC,cAAc;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAE,IAAI,CAACP,KAAK,CAACC,IAAI,CAAW,CAC9C,CACA;IAEhB;EAAC;EAAA;AAAA,EAzHoBf,SAAS;AAAA,gBAA1BS,QAAQ,eACO;EACjB;AACJ;AACA;EACIS,OAAO,EAAEjB,SAAS,CAAC6B,KAAK,CAAC;IACvB;AACN;AACA;IACMT,KAAK,EAAEpB,SAAS,CAAC8B,MAAM;IACvB;AACN;AACA;IACMC,WAAW,EAAE/B,SAAS,CAAC8B,MAAM;IAC7B;AACN;AACA;IACMd,KAAK,EAAEhB,SAAS,CAACgC,OAAO,CACtBhC,SAAS,CAAC6B,KAAK,CAAC;MACd;AACV;AACA;MACUT,KAAK,EAAEpB,SAAS,CAAC8B,MAAM;MACvB;AACV;AACA;MACUC,WAAW,EAAE/B,SAAS,CAAC8B,MAAM;MAC7B;AACV;AACA;MACUN,GAAG,EAAExB,SAAS,CAAC8B,MAAM;MACrB;AACV;AACA;MACUG,KAAK,EAAEjC,SAAS,CAACkC,MAAM;MACvB;AACV;AACA;MACUC,aAAa,EAAEnC,SAAS,CAAC8B,MAAM;MAC/B;AACV;AACA;MACU,OAAO,EAAE9B,SAAS,CAAC8B;IACrB,CAAC,CAAC;EAEN,CAAC,CAAC,CAACM;AACL,CAAC;AA8EH,eAAehC,OAAO,CAAC,IAAI,EAAEG,kBAAkB,CAAC,CAACC,QAAQ,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}