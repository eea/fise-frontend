{"ast":null,"code":"import _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { defineMessages } from 'react-intl'; // , defineMessages\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport { makeInlineElementPlugin } from 'volto-slate/components/ElementEditor';\nimport { LINK } from 'volto-slate/constants';\nimport { LinkElement } from './render';\nimport { withLink } from './extensions';\nimport { linkDeserializer } from './deserialize';\nimport LinkEditSchema from './schema';\nvar messages = defineMessages({\n  edit: {\n    \"id\": \"Edit link\",\n    \"defaultMessage\": \"Edit link\"\n  },\n  \"delete\": {\n    \"id\": \"Remove link\",\n    \"defaultMessage\": \"Remove link\"\n  }\n});\nexport default (function (config) {\n  var slate = config.settings.slate;\n  slate.toolbarButtons = [].concat(_toConsumableArray(slate.toolbarButtons || []), [LINK]);\n  slate.expandedToolbarButtons = [].concat(_toConsumableArray(slate.expandedToolbarButtons || []), [LINK]);\n  slate.htmlTagsToSlate.A = linkDeserializer;\n  var opts = {\n    title: 'Link',\n    pluginId: LINK,\n    elementType: LINK,\n    element: LinkElement,\n    isInlineElement: true,\n    editSchema: LinkEditSchema,\n    extensions: [withLink],\n    hasValue: function hasValue(formData) {\n      return !!formData.link;\n    },\n    toolbarButtonIcon: linkSVG,\n    messages: messages\n  };\n  var _makeInlineElementPlu = makeInlineElementPlugin(opts),\n    _makeInlineElementPlu2 = _slicedToArray(_makeInlineElementPlu, 1),\n    installLinkEditor = _makeInlineElementPlu2[0];\n  config = installLinkEditor(config);\n  return config;\n});","map":{"version":3,"names":["defineMessages","linkSVG","makeInlineElementPlugin","LINK","LinkElement","withLink","linkDeserializer","LinkEditSchema","messages","edit","config","slate","settings","toolbarButtons","expandedToolbarButtons","htmlTagsToSlate","A","opts","title","pluginId","elementType","element","isInlineElement","editSchema","extensions","hasValue","formData","link","toolbarButtonIcon","installLinkEditor"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/editor/plugins/Link/index.js"],"sourcesContent":["import { defineMessages } from 'react-intl'; // , defineMessages\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport { makeInlineElementPlugin } from 'volto-slate/components/ElementEditor';\n\nimport { LINK } from 'volto-slate/constants';\nimport { LinkElement } from './render';\nimport { withLink } from './extensions';\nimport { linkDeserializer } from './deserialize';\nimport LinkEditSchema from './schema';\n\nconst messages = defineMessages({\n  edit: {\n    id: 'Edit link',\n    defaultMessage: 'Edit link',\n  },\n  delete: {\n    id: 'Remove link',\n    defaultMessage: 'Remove link',\n  },\n});\n\nexport default (config) => {\n  const { slate } = config.settings;\n\n  slate.toolbarButtons = [...(slate.toolbarButtons || []), LINK];\n  slate.expandedToolbarButtons = [\n    ...(slate.expandedToolbarButtons || []),\n    LINK,\n  ];\n\n  slate.htmlTagsToSlate.A = linkDeserializer;\n\n  const opts = {\n    title: 'Link',\n    pluginId: LINK,\n    elementType: LINK,\n    element: LinkElement,\n    isInlineElement: true,\n    editSchema: LinkEditSchema,\n    extensions: [withLink],\n    hasValue: (formData) => !!formData.link,\n    toolbarButtonIcon: linkSVG,\n    messages,\n  };\n\n  const [installLinkEditor] = makeInlineElementPlugin(opts);\n  config = installLinkEditor(config);\n\n  return config;\n};\n"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,YAAY,CAAC,CAAC;AAC7C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAASC,uBAAuB,QAAQ,sCAAsC;AAE9E,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,SAASC,WAAW,QAAQ,UAAU;AACtC,SAASC,QAAQ,QAAQ,cAAc;AACvC,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAOC,cAAc,MAAM,UAAU;AAErC,IAAMC,QAAQ,GAAGR,cAAc,CAAC;EAC9BS,IAAI;IAAA;IAAA;EAAA,CAGH;EACD;IAAA;IAAA;EAAA;AAIF,CAAC,CAAC;AAEF,gBAAe,UAACC,MAAM,EAAK;EACzB,IAAQC,KAAK,GAAKD,MAAM,CAACE,QAAQ,CAAzBD,KAAK;EAEbA,KAAK,CAACE,cAAc,gCAAQF,KAAK,CAACE,cAAc,IAAI,EAAE,IAAGV,IAAI,EAAC;EAC9DQ,KAAK,CAACG,sBAAsB,gCACtBH,KAAK,CAACG,sBAAsB,IAAI,EAAE,IACtCX,IAAI,EACL;EAEDQ,KAAK,CAACI,eAAe,CAACC,CAAC,GAAGV,gBAAgB;EAE1C,IAAMW,IAAI,GAAG;IACXC,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAEhB,IAAI;IACdiB,WAAW,EAAEjB,IAAI;IACjBkB,OAAO,EAAEjB,WAAW;IACpBkB,eAAe,EAAE,IAAI;IACrBC,UAAU,EAAEhB,cAAc;IAC1BiB,UAAU,EAAE,CAACnB,QAAQ,CAAC;IACtBoB,QAAQ,EAAE,kBAACC,QAAQ;MAAA,OAAK,CAAC,CAACA,QAAQ,CAACC,IAAI;IAAA;IACvCC,iBAAiB,EAAE3B,OAAO;IAC1BO,QAAQ,EAARA;EACF,CAAC;EAED,4BAA4BN,uBAAuB,CAACe,IAAI,CAAC;IAAA;IAAlDY,iBAAiB;EACxBnB,MAAM,GAAGmB,iBAAiB,CAACnB,MAAM,CAAC;EAElC,OAAOA,MAAM;AACf,CAAC"},"metadata":{"react-intl":{"messages":[{"id":"Edit link","defaultMessage":"Edit link"},{"id":"Remove link","defaultMessage":"Remove link"}]}},"sourceType":"module","externalDependencies":[]}