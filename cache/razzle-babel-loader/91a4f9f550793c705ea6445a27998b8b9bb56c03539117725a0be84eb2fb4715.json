{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nconst initialState = {\n  hash: null,\n  data: {},\n  counter: 0\n};\nexport default function hashlink(state = initialState, action = {}) {\n  const {\n    type,\n    hash,\n    data = {}\n  } = action;\n  switch (type) {\n    case 'SET_HASH_LINK':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        hash,\n        data,\n        counter: state.counter + 1\n      });\n    case 'RESET_HASH_LINK':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        hash: null,\n        data: {},\n        counter: 0\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["initialState","hash","data","counter","hashlink","state","action","type"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/reducers/hashlink.js"],"sourcesContent":["const initialState = {\n  hash: null,\n  data: {},\n  counter: 0,\n};\n\nexport default function hashlink(state = initialState, action = {}) {\n  const { type, hash, data = {} } = action;\n  switch (type) {\n    case 'SET_HASH_LINK':\n      return {\n        ...state,\n        hash,\n        data,\n        counter: state.counter + 1,\n      };\n    case 'RESET_HASH_LINK':\n      return {\n        ...state,\n        hash: null,\n        data: {},\n        counter: 0,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;AAAA,MAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,CAAC,CAAC;EACRC,OAAO,EAAE;AACX,CAAC;AAED,eAAe,SAASC,QAAQ,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,GAAG,CAAC,CAAC,EAAE;EAClE,MAAM;IAAEC,IAAI;IAAEN,IAAI;IAAEC,IAAI,GAAG,CAAC;EAAE,CAAC,GAAGI,MAAM;EACxC,QAAQC,IAAI;IACV,KAAK,eAAe;MAClB,uCACKF,KAAK;QACRJ,IAAI;QACJC,IAAI;QACJC,OAAO,EAAEE,KAAK,CAACF,OAAO,GAAG;MAAC;IAE9B,KAAK,iBAAiB;MACpB,uCACKE,KAAK;QACRJ,IAAI,EAAE,IAAI;QACVC,IAAI,EAAE,CAAC,CAAC;QACRC,OAAO,EAAE;MAAC;IAEd;MACE,OAAOE,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}