{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport messages from '@eeacms/volto-listing-block/messages';\nimport alignLeftSVG from '@plone/volto/icons/align-left.svg';\nimport alignCenterSVG from '@plone/volto/icons/align-center.svg';\nvar ALIGN_INFO_MAP = {\n  align_left: [alignLeftSVG, 'Left'],\n  align_center: [alignCenterSVG, 'Center']\n};\nexport var CardStylingSchemaEnhancer = function CardStylingSchemaEnhancer(_ref) {\n  var schema = _ref.schema;\n  var styleSchema = schema.properties.styles.schema;\n  styleSchema.fieldsets[0].fields.push('text_align');\n  styleSchema.properties = _objectSpread(_objectSpread({}, styleSchema.properties), {}, {\n    text_align: {\n      title: 'Text align',\n      widget: 'style_text_align',\n      actions: Object.keys(ALIGN_INFO_MAP),\n      actionsInfoMap: ALIGN_INFO_MAP\n    }\n  });\n  return schema;\n};\n_c = CardStylingSchemaEnhancer;\nexport var BasicListingBlockStylesSchema = function BasicListingBlockStylesSchema(_ref2) {\n  var intl = _ref2.intl;\n  return {\n    fieldsets: [{\n      id: 'styling',\n      title: 'Styling',\n      fields: ['theme', 'inverted', 'rounded']\n    }],\n    properties: {\n      theme: {\n        title: intl.formatMessage(messages.Theme),\n        description: intl.formatMessage(messages.ThemeHelp),\n        choices: [['', intl.formatMessage(messages.ThemeDefault)], ['primary', intl.formatMessage(messages.ThemePrimary)], ['secondary', intl.formatMessage(messages.ThemeSecondary)], ['tertiary', intl.formatMessage(messages.ThemeTertiary)]]\n      },\n      inverted: {\n        title: intl.formatMessage(messages.Inverted),\n        description: intl.formatMessage(messages.InvertedHelp),\n        type: 'boolean'\n      },\n      rounded: {\n        title: intl.formatMessage(messages.Rounded),\n        description: intl.formatMessage(messages.RoundedHelp),\n        type: 'boolean'\n      }\n    },\n    required: []\n  };\n};\n_c2 = BasicListingBlockStylesSchema;\nvar _c, _c2;\n$RefreshReg$(_c, \"CardStylingSchemaEnhancer\");\n$RefreshReg$(_c2, \"BasicListingBlockStylesSchema\");","map":{"version":3,"names":["messages","alignLeftSVG","alignCenterSVG","ALIGN_INFO_MAP","align_left","align_center","CardStylingSchemaEnhancer","schema","styleSchema","properties","styles","fieldsets","fields","push","text_align","title","widget","actions","Object","keys","actionsInfoMap","BasicListingBlockStylesSchema","intl","id","theme","formatMessage","Theme","description","ThemeHelp","choices","ThemeDefault","ThemePrimary","ThemeSecondary","ThemeTertiary","inverted","Inverted","InvertedHelp","type","rounded","Rounded","RoundedHelp","required"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/blocks/Listing/schema.js"],"sourcesContent":["import messages from '@eeacms/volto-listing-block/messages';\n\nimport alignLeftSVG from '@plone/volto/icons/align-left.svg';\nimport alignCenterSVG from '@plone/volto/icons/align-center.svg';\n\nconst ALIGN_INFO_MAP = {\n  align_left: [alignLeftSVG, 'Left'],\n  align_center: [alignCenterSVG, 'Center'],\n};\n\nexport const CardStylingSchemaEnhancer = ({ schema }) => {\n  const styleSchema = schema.properties.styles.schema;\n  styleSchema.fieldsets[0].fields.push('text_align');\n  styleSchema.properties = {\n    ...styleSchema.properties,\n    text_align: {\n      title: 'Text align',\n      widget: 'style_text_align',\n      actions: Object.keys(ALIGN_INFO_MAP),\n      actionsInfoMap: ALIGN_INFO_MAP,\n    },\n  };\n\n  return schema;\n};\n\nexport const BasicListingBlockStylesSchema = ({ intl }) => ({\n  fieldsets: [\n    {\n      id: 'styling',\n      title: 'Styling',\n      fields: ['theme', 'inverted', 'rounded'],\n    },\n  ],\n  properties: {\n    theme: {\n      title: intl.formatMessage(messages.Theme),\n      description: intl.formatMessage(messages.ThemeHelp),\n      choices: [\n        ['', intl.formatMessage(messages.ThemeDefault)],\n        ['primary', intl.formatMessage(messages.ThemePrimary)],\n        ['secondary', intl.formatMessage(messages.ThemeSecondary)],\n        ['tertiary', intl.formatMessage(messages.ThemeTertiary)],\n      ],\n    },\n    inverted: {\n      title: intl.formatMessage(messages.Inverted),\n      description: intl.formatMessage(messages.InvertedHelp),\n      type: 'boolean',\n    },\n    rounded: {\n      title: intl.formatMessage(messages.Rounded),\n      description: intl.formatMessage(messages.RoundedHelp),\n      type: 'boolean',\n    },\n  },\n  required: [],\n});\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,sCAAsC;AAE3D,OAAOC,YAAY,MAAM,mCAAmC;AAC5D,OAAOC,cAAc,MAAM,qCAAqC;AAEhE,IAAMC,cAAc,GAAG;EACrBC,UAAU,EAAE,CAACH,YAAY,EAAE,MAAM,CAAC;EAClCI,YAAY,EAAE,CAACH,cAAc,EAAE,QAAQ;AACzC,CAAC;AAED,OAAO,IAAMI,yBAAyB,GAAG,SAA5BA,yBAAyB,OAAmB;EAAA,IAAbC,MAAM,QAANA,MAAM;EAChD,IAAMC,WAAW,GAAGD,MAAM,CAACE,UAAU,CAACC,MAAM,CAACH,MAAM;EACnDC,WAAW,CAACG,SAAS,CAAC,CAAC,CAAC,CAACC,MAAM,CAACC,IAAI,CAAC,YAAY,CAAC;EAClDL,WAAW,CAACC,UAAU,mCACjBD,WAAW,CAACC,UAAU;IACzBK,UAAU,EAAE;MACVC,KAAK,EAAE,YAAY;MACnBC,MAAM,EAAE,kBAAkB;MAC1BC,OAAO,EAAEC,MAAM,CAACC,IAAI,CAAChB,cAAc,CAAC;MACpCiB,cAAc,EAAEjB;IAClB;EAAC,EACF;EAED,OAAOI,MAAM;AACf,CAAC;AAAC,KAdWD,yBAAyB;AAgBtC,OAAO,IAAMe,6BAA6B,GAAG,SAAhCA,6BAA6B;EAAA,IAAMC,IAAI,SAAJA,IAAI;EAAA,OAAQ;IAC1DX,SAAS,EAAE,CACT;MACEY,EAAE,EAAE,SAAS;MACbR,KAAK,EAAE,SAAS;MAChBH,MAAM,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS;IACzC,CAAC,CACF;IACDH,UAAU,EAAE;MACVe,KAAK,EAAE;QACLT,KAAK,EAAEO,IAAI,CAACG,aAAa,CAACzB,QAAQ,CAAC0B,KAAK,CAAC;QACzCC,WAAW,EAAEL,IAAI,CAACG,aAAa,CAACzB,QAAQ,CAAC4B,SAAS,CAAC;QACnDC,OAAO,EAAE,CACP,CAAC,EAAE,EAAEP,IAAI,CAACG,aAAa,CAACzB,QAAQ,CAAC8B,YAAY,CAAC,CAAC,EAC/C,CAAC,SAAS,EAAER,IAAI,CAACG,aAAa,CAACzB,QAAQ,CAAC+B,YAAY,CAAC,CAAC,EACtD,CAAC,WAAW,EAAET,IAAI,CAACG,aAAa,CAACzB,QAAQ,CAACgC,cAAc,CAAC,CAAC,EAC1D,CAAC,UAAU,EAAEV,IAAI,CAACG,aAAa,CAACzB,QAAQ,CAACiC,aAAa,CAAC,CAAC;MAE5D,CAAC;MACDC,QAAQ,EAAE;QACRnB,KAAK,EAAEO,IAAI,CAACG,aAAa,CAACzB,QAAQ,CAACmC,QAAQ,CAAC;QAC5CR,WAAW,EAAEL,IAAI,CAACG,aAAa,CAACzB,QAAQ,CAACoC,YAAY,CAAC;QACtDC,IAAI,EAAE;MACR,CAAC;MACDC,OAAO,EAAE;QACPvB,KAAK,EAAEO,IAAI,CAACG,aAAa,CAACzB,QAAQ,CAACuC,OAAO,CAAC;QAC3CZ,WAAW,EAAEL,IAAI,CAACG,aAAa,CAACzB,QAAQ,CAACwC,WAAW,CAAC;QACrDH,IAAI,EAAE;MACR;IACF,CAAC;IACDI,QAAQ,EAAE;EACZ,CAAC;AAAA,CAAC;AAAC,MA/BUpB,6BAA6B;AAAA;AAAA;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}