{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/FormattedDate/FormattedDate.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { formatDate, long_date_format } from '@plone/volto/helpers/Utils/Date';\nimport { useSelector } from 'react-redux';\n\n/**\n * Friendly formatting of dates\n */\nvar FormattedDate = function FormattedDate(_ref) {\n  _s();\n  var date = _ref.date,\n    format = _ref.format,\n    _long = _ref[\"long\"],\n    includeTime = _ref.includeTime,\n    relative = _ref.relative,\n    className = _ref.className,\n    locale = _ref.locale,\n    children = _ref.children;\n  var language = useSelector(function (state) {\n    return locale || state.intl.locale;\n  });\n  var toDate = function toDate(d) {\n    return typeof d === 'string' ? new Date(d) : d;\n  };\n  var args = {\n    date: date,\n    \"long\": _long,\n    includeTime: includeTime,\n    format: format,\n    locale: language\n  };\n  return __jsx(\"time\", {\n    className: className,\n    dateTime: date,\n    title: new Intl.DateTimeFormat(language, long_date_format).format(new Date(toDate(date))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, children ? children(formatDate(_objectSpread(_objectSpread({}, args), {}, {\n    formatToParts: true\n  }))) : formatDate(args));\n};\n_s(FormattedDate, \"lQANm1MwgmwtuScNKGsbP20Mv9w=\", false, function () {\n  return [useSelector];\n});\n_c = FormattedDate;\nexport default FormattedDate;\nvar _c;\n$RefreshReg$(_c, \"FormattedDate\");","map":{"version":3,"names":["React","formatDate","long_date_format","useSelector","FormattedDate","date","format","long","includeTime","relative","className","locale","children","language","state","intl","toDate","d","Date","args","Intl","DateTimeFormat","formatToParts"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/FormattedDate/FormattedDate.jsx"],"sourcesContent":["import React from 'react';\nimport { formatDate, long_date_format } from '@plone/volto/helpers/Utils/Date';\nimport { useSelector } from 'react-redux';\n\n/**\n * Friendly formatting of dates\n */\nconst FormattedDate = ({\n  date,\n  format,\n  long,\n  includeTime,\n  relative,\n  className,\n  locale,\n  children,\n}) => {\n  const language = useSelector((state) => locale || state.intl.locale);\n  const toDate = (d) => (typeof d === 'string' ? new Date(d) : d);\n  const args = { date, long, includeTime, format, locale: language };\n\n  return (\n    <time\n      className={className}\n      dateTime={date}\n      title={new Intl.DateTimeFormat(language, long_date_format).format(\n        new Date(toDate(date)),\n      )}\n    >\n      {children\n        ? children(\n            formatDate({\n              ...args,\n              formatToParts: true,\n            }),\n          )\n        : formatDate(args)}\n    </time>\n  );\n};\n\nexport default FormattedDate;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,gBAAgB,QAAQ,iCAAiC;AAC9E,SAASC,WAAW,QAAQ,aAAa;;AAEzC;AACA;AACA;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAa,OASb;EAAA;EAAA,IARJC,IAAI,QAAJA,IAAI;IACJC,MAAM,QAANA,MAAM;IACNC,KAAI;IACJC,WAAW,QAAXA,WAAW;IACXC,QAAQ,QAARA,QAAQ;IACRC,SAAS,QAATA,SAAS;IACTC,MAAM,QAANA,MAAM;IACNC,QAAQ,QAARA,QAAQ;EAER,IAAMC,QAAQ,GAAGV,WAAW,CAAC,UAACW,KAAK;IAAA,OAAKH,MAAM,IAAIG,KAAK,CAACC,IAAI,CAACJ,MAAM;EAAA,EAAC;EACpE,IAAMK,MAAM,GAAG,SAATA,MAAM,CAAIC,CAAC;IAAA,OAAM,OAAOA,CAAC,KAAK,QAAQ,GAAG,IAAIC,IAAI,CAACD,CAAC,CAAC,GAAGA,CAAC;EAAA,CAAC;EAC/D,IAAME,IAAI,GAAG;IAAEd,IAAI,EAAJA,IAAI;IAAE,QAAAE,KAAI;IAAEC,WAAW,EAAXA,WAAW;IAAEF,MAAM,EAANA,MAAM;IAAEK,MAAM,EAAEE;EAAS,CAAC;EAElE,OACE;IACE,SAAS,EAAEH,SAAU;IACrB,QAAQ,EAAEL,IAAK;IACf,KAAK,EAAE,IAAIe,IAAI,CAACC,cAAc,CAACR,QAAQ,EAAEX,gBAAgB,CAAC,CAACI,MAAM,CAC/D,IAAIY,IAAI,CAACF,MAAM,CAACX,IAAI,CAAC,CAAC,CACtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEDO,QAAQ,GACLA,QAAQ,CACNX,UAAU,iCACLkB,IAAI;IACPG,aAAa,EAAE;EAAI,GACnB,CACH,GACDrB,UAAU,CAACkB,IAAI,CAAC,CACf;AAEX,CAAC;AAAC,GAhCIf,aAAa;EAAA,QAUAD,WAAW;AAAA;AAAA,KAVxBC,aAAa;AAkCnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}