{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/components/theme/Viewlets/ForestMetadata.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { Portal } from 'react-portal';\nimport { Label, Grid } from 'semantic-ui-react';\nvar ForestMetadata = function ForestMetadata(props) {\n  var _ref = props && props.content || {},\n    nuts_level = _ref.nuts_level,\n    resource_type = _ref.resource_type,\n    data_source = _ref.data_source,\n    dataset = _ref.dataset,\n    publisher = _ref.publisher,\n    external_url = _ref.external_url,\n    geo_coverage = _ref.geo_coverage,\n    publishing_year = _ref.publishing_year,\n    collection_year_start = _ref.collection_year_start,\n    collection_year_end = _ref.collection_year_end,\n    topics = _ref.topics,\n    keywords = _ref.keywords,\n    info_level = _ref.info_level,\n    accessibility_level = _ref.accessibility_level;\n  return __CLIENT__ && document.getElementById('forest-metadata-slot') && __jsx(Portal, {\n    node: document.getElementById('forest-metadata-slot'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    columns: 2,\n    className: \"page_metadata\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Grid.Column, {\n    width: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, nuts_level && nuts_level.length > 0 && __jsx(\"div\", {\n    id: \"forest-metadata-resource_type\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"NUTS Level\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, nuts_level.map(function (el) {\n    return __jsx(Label, {\n      key: el.token,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, el.title);\n  }))), geo_coverage && geo_coverage.length > 0 && __jsx(\"div\", {\n    id: \"forest-metadata-geo-coverage\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Geo coverage\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, geo_coverage.map(function (el) {\n    return __jsx(Label, {\n      key: el.token,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, el.title);\n  }))), topics && topics.length > 0 && __jsx(\"div\", {\n    id: \"forest-metadata-topics\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Topics\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, topics.map(function (el) {\n    return __jsx(Label, {\n      key: el,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, el);\n  }))), keywords && keywords.length > 0 && __jsx(\"div\", {\n    id: \"forest-metadata-keywords\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Keywords\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, keywords.map(function (el) {\n    return __jsx(Label, {\n      key: el,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, el);\n  }))), publisher && publisher.length > 0 && __jsx(\"div\", {\n    id: \"forest-metadata-publisher\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Publisher\"), publisher.map(function (p, i) {\n    return __jsx(Label, {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, p);\n  }))), __jsx(Grid.Column, {\n    className: \"inline-headings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, resource_type && __jsx(\"div\", {\n    id: \"forest-metadata-resource_type\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Resource type\"), \": \", resource_type.title), data_source && __jsx(\"div\", {\n    id: \"forest-metadata-data_source\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Data source\"), \": \", data_source.title), dataset && __jsx(\"div\", {\n    id: \"forest-metadata-dataset\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Dataset\"), \": \", dataset.title), external_url && __jsx(\"div\", {\n    id: \"forest-metadata-external_url\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"External url\"), \": \", __jsx(\"a\", {\n    href: external_url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 40\n    }\n  }, \"Go to link\")), publishing_year && __jsx(\"div\", {\n    id: \"forest-metadata-publishing_year\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Publishing year\"), \": \", publisher), collection_year_start && __jsx(\"div\", {\n    id: \"forest-metadata-collection_years\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Collection period\"), \": \", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 45\n    }\n  }, collection_year_start), collection_year_end && __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, ' ', \"- \", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }\n  }, collection_year_end))), info_level && __jsx(\"div\", {\n    id: \"forest-metadata-info_level\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Info level\"), \": \", info_level.title), accessibility_level && __jsx(\"div\", {\n    id: \"forest-metadata-accessibility_level\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"Accessibility level\"), \": \", accessibility_level.title)))) || '';\n};\n_c = ForestMetadata;\nexport default connect(function (state, props) {\n  return {\n    content: state.content.data\n  };\n})(ForestMetadata);\nvar _c;\n$RefreshReg$(_c, \"ForestMetadata\");","map":{"version":3,"names":["connect","React","Portal","Label","Grid","ForestMetadata","props","content","nuts_level","resource_type","data_source","dataset","publisher","external_url","geo_coverage","publishing_year","collection_year_start","collection_year_end","topics","keywords","info_level","accessibility_level","__CLIENT__","document","getElementById","length","map","el","token","title","p","i","state","data"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/components/theme/Viewlets/ForestMetadata.jsx"],"sourcesContent":["import { connect } from 'react-redux';\nimport React from 'react';\nimport { Portal } from 'react-portal';\nimport { Label, Grid } from 'semantic-ui-react';\n\nconst ForestMetadata = (props) => {\n  const {\n    nuts_level,\n    resource_type,\n    data_source,\n    dataset,\n    publisher,\n    external_url,\n    geo_coverage,\n    publishing_year,\n    collection_year_start,\n    collection_year_end,\n    topics,\n    keywords,\n    info_level,\n    accessibility_level,\n  } = (props && props.content) || {};\n\n  return (\n    (__CLIENT__ && document.getElementById('forest-metadata-slot') && (\n      <Portal node={document.getElementById('forest-metadata-slot')}>\n        <Grid columns={2} className=\"page_metadata\">\n          <Grid.Column width={3}>\n            {nuts_level && nuts_level.length > 0 && (\n              <div id=\"forest-metadata-resource_type\">\n                <h5>NUTS Level</h5>\n                <div>\n                  {nuts_level.map((el) => (\n                    <Label key={el.token}>{el.title}</Label>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {geo_coverage && geo_coverage.length > 0 && (\n              <div id=\"forest-metadata-geo-coverage\">\n                <h5>Geo coverage</h5>\n                <div>\n                  {geo_coverage.map((el) => (\n                    <Label key={el.token}>{el.title}</Label>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {topics && topics.length > 0 && (\n              <div id=\"forest-metadata-topics\">\n                <h5>Topics</h5>\n                <div>\n                  {topics.map((el) => (\n                    <Label key={el}>{el}</Label>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {keywords && keywords.length > 0 && (\n              <div id=\"forest-metadata-keywords\">\n                <h5>Keywords</h5>\n                <div>\n                  {keywords.map((el) => (\n                    <Label key={el}>{el}</Label>\n                  ))}\n                </div>\n              </div>\n            )}\n            {publisher && publisher.length > 0 && (\n              <div id=\"forest-metadata-publisher\">\n                <h5>Publisher</h5>\n                {publisher.map((p, i) => (\n                  <Label key={i}>{p}</Label>\n                ))}\n              </div>\n            )}\n          </Grid.Column>\n          <Grid.Column className=\"inline-headings\">\n            {resource_type && (\n              <div id=\"forest-metadata-resource_type\">\n                <h5>Resource type</h5>: {resource_type.title}\n              </div>\n            )}\n            {data_source && (\n              <div id=\"forest-metadata-data_source\">\n                <h5>Data source</h5>: {data_source.title}\n              </div>\n            )}\n\n            {dataset && (\n              <div id=\"forest-metadata-dataset\">\n                <h5>Dataset</h5>: {dataset.title}\n              </div>\n            )}\n\n            {external_url && (\n              <div id=\"forest-metadata-external_url\">\n                <h5>External url</h5>: <a href={external_url}>Go to link</a>\n              </div>\n            )}\n\n            {publishing_year && (\n              <div id=\"forest-metadata-publishing_year\">\n                <h5>Publishing year</h5>: {publisher}\n              </div>\n            )}\n\n            {collection_year_start && (\n              <div id=\"forest-metadata-collection_years\">\n                <h5>Collection period</h5>: <span>{collection_year_start}</span>\n                {collection_year_end && (\n                  <span>\n                    {' '}\n                    - <span>{collection_year_end}</span>\n                  </span>\n                )}\n              </div>\n            )}\n\n            {info_level && (\n              <div id=\"forest-metadata-info_level\">\n                <h5>Info level</h5>: {info_level.title}\n              </div>\n            )}\n\n            {accessibility_level && (\n              <div id=\"forest-metadata-accessibility_level\">\n                <h5>Accessibility level</h5>: {accessibility_level.title}\n              </div>\n            )}\n          </Grid.Column>\n        </Grid>\n      </Portal>\n    )) ||\n    ''\n  );\n};\nexport default connect((state, props) => ({\n  content: state.content.data,\n}))(ForestMetadata);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}