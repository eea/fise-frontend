{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _map from \"lodash/map\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Contents/ContentsTagsModal.jsx\";\nvar __jsx = React.createElement;\n/**\n * Contents tags modal.\n * @module components/manage/Contents/ContentsTagsModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { updateContent } from '@plone/volto/actions';\nimport { ModalForm } from '@plone/volto/components';\nvar messages = defineMessages({\n  \"default\": {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  tags: {\n    \"id\": \"Tags\",\n    \"defaultMessage\": \"Tags\"\n  },\n  tagsToRemove: {\n    \"id\": \"Tags to remove\",\n    \"defaultMessage\": \"Tags to remove\"\n  },\n  tagsToAdd: {\n    \"id\": \"Tags to add\",\n    \"defaultMessage\": \"Tags to add\"\n  }\n});\n\n/**\n * ContentsTagsModal class.\n * @class ContentsTagsModal\n * @extends Component\n */\nvar ContentsTagsModal = /*#__PURE__*/function (_Component) {\n  _inherits(ContentsTagsModal, _Component);\n  var _super = _createSuper(ContentsTagsModal);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  function ContentsTagsModal(props) {\n    var _this;\n    _classCallCheck(this, ContentsTagsModal);\n    _this = _super.call(this, props);\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  _createClass(ContentsTagsModal, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.request.loading && nextProps.request.loaded) {\n        this.props.onOk();\n      }\n    }\n\n    /**\n     * Submit handler\n     * @method onSubmit\n     * @param {Object} data Form data\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(_ref) {\n      var _ref$tags_to_add = _ref.tags_to_add,\n        tags_to_add = _ref$tags_to_add === void 0 ? [] : _ref$tags_to_add,\n        _ref$tags_to_remove = _ref.tags_to_remove,\n        tags_to_remove = _ref$tags_to_remove === void 0 ? [] : _ref$tags_to_remove;\n      this.props.updateContent(_map(this.props.items, function (item) {\n        return item.url;\n      }), _map(this.props.items, function (item) {\n        var _item$subjects;\n        return {\n          subjects: _toConsumableArray(new Set(((_item$subjects = item.subjects) !== null && _item$subjects !== void 0 ? _item$subjects : []).filter(function (s) {\n            return !tags_to_remove.includes(s);\n          }).concat(tags_to_add)))\n        };\n      }));\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var currentSetTags = _toConsumableArray(new Set(this.props.items.map(function (item) {\n        return item.subjects;\n      }).flat()));\n      return this.props.open && __jsx(ModalForm, {\n        open: this.props.open,\n        onSubmit: this.onSubmit,\n        onCancel: this.props.onCancel,\n        title: this.props.intl.formatMessage(messages.tags),\n        schema: {\n          fieldsets: [{\n            id: 'default',\n            title: this.props.intl.formatMessage(messages[\"default\"]),\n            fields: ['tags_to_remove', 'tags_to_add']\n          }],\n          properties: {\n            tags_to_remove: {\n              type: 'array',\n              widget: 'array',\n              title: this.props.intl.formatMessage(messages.tagsToRemove),\n              choices: currentSetTags.map(function (tag) {\n                return [tag, tag];\n              })\n            },\n            tags_to_add: {\n              type: 'array',\n              widget: 'token',\n              title: this.props.intl.formatMessage(messages.tagsToAdd),\n              items: {\n                vocabulary: {\n                  '@id': 'plone.app.vocabularies.Keywords'\n                }\n              }\n            }\n          },\n          required: []\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n  return ContentsTagsModal;\n}(Component);\n_defineProperty(ContentsTagsModal, \"propTypes\", {\n  updateContent: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    subjects: PropTypes.arrayOf(PropTypes.string),\n    url: PropTypes.string\n  })).isRequired,\n  request: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  onOk: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect(function (state) {\n  return {\n    request: state.content.update\n  };\n}, {\n  updateContent: updateContent\n}))(ContentsTagsModal);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","defineMessages","injectIntl","updateContent","ModalForm","messages","tags","tagsToRemove","tagsToAdd","ContentsTagsModal","props","onSubmit","bind","nextProps","request","loading","loaded","onOk","tags_to_add","tags_to_remove","items","item","url","subjects","Set","filter","s","includes","concat","currentSetTags","map","flat","open","onCancel","intl","formatMessage","fieldsets","id","title","fields","properties","type","widget","choices","tag","vocabulary","required","func","isRequired","arrayOf","shape","string","bool","state","content","update"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Contents/ContentsTagsModal.jsx"],"sourcesContent":["/**\n * Contents tags modal.\n * @module components/manage/Contents/ContentsTagsModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { updateContent } from '@plone/volto/actions';\nimport { ModalForm } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  tags: {\n    id: 'Tags',\n    defaultMessage: 'Tags',\n  },\n  tagsToRemove: {\n    id: 'Tags to remove',\n    defaultMessage: 'Tags to remove',\n  },\n  tagsToAdd: {\n    id: 'Tags to add',\n    defaultMessage: 'Tags to add',\n  },\n});\n\n/**\n * ContentsTagsModal class.\n * @class ContentsTagsModal\n * @extends Component\n */\nclass ContentsTagsModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateContent: PropTypes.func.isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        subjects: PropTypes.arrayOf(PropTypes.string),\n        url: PropTypes.string,\n      }),\n    ).isRequired,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    open: PropTypes.bool.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} data Form data\n   * @returns {undefined}\n   */\n  onSubmit({ tags_to_add = [], tags_to_remove = [] }) {\n    this.props.updateContent(\n      map(this.props.items, (item) => item.url),\n      map(this.props.items, (item) => ({\n        subjects: [\n          ...new Set(\n            (item.subjects ?? [])\n              .filter((s) => !tags_to_remove.includes(s))\n              .concat(tags_to_add),\n          ),\n        ],\n      })),\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const currentSetTags = [\n      ...new Set(this.props.items.map((item) => item.subjects).flat()),\n    ];\n\n    return (\n      this.props.open && (\n        <ModalForm\n          open={this.props.open}\n          onSubmit={this.onSubmit}\n          onCancel={this.props.onCancel}\n          title={this.props.intl.formatMessage(messages.tags)}\n          schema={{\n            fieldsets: [\n              {\n                id: 'default',\n                title: this.props.intl.formatMessage(messages.default),\n                fields: ['tags_to_remove', 'tags_to_add'],\n              },\n            ],\n            properties: {\n              tags_to_remove: {\n                type: 'array',\n                widget: 'array',\n                title: this.props.intl.formatMessage(messages.tagsToRemove),\n                choices: currentSetTags.map((tag) => [tag, tag]),\n              },\n              tags_to_add: {\n                type: 'array',\n                widget: 'token',\n                title: this.props.intl.formatMessage(messages.tagsToAdd),\n                items: {\n                  vocabulary: { '@id': 'plone.app.vocabularies.Keywords' },\n                },\n              },\n            },\n            required: [],\n          }}\n        />\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      request: state.content.update,\n    }),\n    { updateContent },\n  ),\n)(ContentsTagsModal);\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,OAAO,QAAQ,OAAO;AAE/B,SAASC,cAAc,EAAEC,UAAU,QAAQ,YAAY;AAEvD,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,SAAS,QAAQ,yBAAyB;AAEnD,IAAMC,QAAQ,GAAGJ,cAAc,CAAC;EAC9B;IAAA;IAAA;EAAA,CAGC;EACDK,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,YAAY;IAAA;IAAA;EAAA,CAGX;EACDC,SAAS;IAAA;IAAA;EAAA;AAIX,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AAJA,IAKMC,iBAAiB;EAAA;EAAA;EACrB;AACF;AACA;AACA;AACA;;EAkBE;AACF;AACA;AACA;AACA;AACA;EACE,2BAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IACX,MAAKC,QAAQ,GAAG,MAAKA,QAAQ,CAACC,IAAI,+BAAM;IAAC;EAC3C;;EAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA;IAAA,OAMA,0CAAiCC,SAAS,EAAE;MAC1C,IAAI,IAAI,CAACH,KAAK,CAACI,OAAO,CAACC,OAAO,IAAIF,SAAS,CAACC,OAAO,CAACE,MAAM,EAAE;QAC1D,IAAI,CAACN,KAAK,CAACO,IAAI,EAAE;MACnB;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA;IAAA,OAMA,wBAAoD;MAAA,4BAAzCC,WAAW;QAAXA,WAAW,iCAAG,EAAE;QAAA,2BAAEC,cAAc;QAAdA,cAAc,oCAAG,EAAE;MAC9C,IAAI,CAACT,KAAK,CAACP,aAAa,CACtB,KAAI,IAAI,CAACO,KAAK,CAACU,KAAK,EAAE,UAACC,IAAI;QAAA,OAAKA,IAAI,CAACC,GAAG;MAAA,EAAC,EACzC,KAAI,IAAI,CAACZ,KAAK,CAACU,KAAK,EAAE,UAACC,IAAI;QAAA;QAAA,OAAM;UAC/BE,QAAQ,qBACH,IAAIC,GAAG,CACR,mBAACH,IAAI,CAACE,QAAQ,2DAAI,EAAE,EACjBE,MAAM,CAAC,UAACC,CAAC;YAAA,OAAK,CAACP,cAAc,CAACQ,QAAQ,CAACD,CAAC,CAAC;UAAA,EAAC,CAC1CE,MAAM,CAACV,WAAW,CAAC,CACvB;QAEL,CAAC;MAAA,CAAC,CAAC,CACJ;IACH;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA;IAAA,OAKA,kBAAS;MACP,IAAMW,cAAc,sBACf,IAAIL,GAAG,CAAC,IAAI,CAACd,KAAK,CAACU,KAAK,CAACU,GAAG,CAAC,UAACT,IAAI;QAAA,OAAKA,IAAI,CAACE,QAAQ;MAAA,EAAC,CAACQ,IAAI,EAAE,CAAC,CACjE;MAED,OACE,IAAI,CAACrB,KAAK,CAACsB,IAAI,IACb,MAAC,SAAS;QACR,IAAI,EAAE,IAAI,CAACtB,KAAK,CAACsB,IAAK;QACtB,QAAQ,EAAE,IAAI,CAACrB,QAAS;QACxB,QAAQ,EAAE,IAAI,CAACD,KAAK,CAACuB,QAAS;QAC9B,KAAK,EAAE,IAAI,CAACvB,KAAK,CAACwB,IAAI,CAACC,aAAa,CAAC9B,QAAQ,CAACC,IAAI,CAAE;QACpD,MAAM,EAAE;UACN8B,SAAS,EAAE,CACT;YACEC,EAAE,EAAE,SAAS;YACbC,KAAK,EAAE,IAAI,CAAC5B,KAAK,CAACwB,IAAI,CAACC,aAAa,CAAC9B,QAAQ,WAAQ,CAAC;YACtDkC,MAAM,EAAE,CAAC,gBAAgB,EAAE,aAAa;UAC1C,CAAC,CACF;UACDC,UAAU,EAAE;YACVrB,cAAc,EAAE;cACdsB,IAAI,EAAE,OAAO;cACbC,MAAM,EAAE,OAAO;cACfJ,KAAK,EAAE,IAAI,CAAC5B,KAAK,CAACwB,IAAI,CAACC,aAAa,CAAC9B,QAAQ,CAACE,YAAY,CAAC;cAC3DoC,OAAO,EAAEd,cAAc,CAACC,GAAG,CAAC,UAACc,GAAG;gBAAA,OAAK,CAACA,GAAG,EAAEA,GAAG,CAAC;cAAA;YACjD,CAAC;YACD1B,WAAW,EAAE;cACXuB,IAAI,EAAE,OAAO;cACbC,MAAM,EAAE,OAAO;cACfJ,KAAK,EAAE,IAAI,CAAC5B,KAAK,CAACwB,IAAI,CAACC,aAAa,CAAC9B,QAAQ,CAACG,SAAS,CAAC;cACxDY,KAAK,EAAE;gBACLyB,UAAU,EAAE;kBAAE,KAAK,EAAE;gBAAkC;cACzD;YACF;UACF,CAAC;UACDC,QAAQ,EAAE;QACZ,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAEL;IAEL;EAAC;EAAA;AAAA,EAjH6BjD,SAAS;AAAA,gBAAnCY,iBAAiB,eAMF;EACjBN,aAAa,EAAEL,SAAS,CAACiD,IAAI,CAACC,UAAU;EACxC5B,KAAK,EAAEtB,SAAS,CAACmD,OAAO,CACtBnD,SAAS,CAACoD,KAAK,CAAC;IACd3B,QAAQ,EAAEzB,SAAS,CAACmD,OAAO,CAACnD,SAAS,CAACqD,MAAM,CAAC;IAC7C7B,GAAG,EAAExB,SAAS,CAACqD;EACjB,CAAC,CAAC,CACH,CAACH,UAAU;EACZlC,OAAO,EAAEhB,SAAS,CAACoD,KAAK,CAAC;IACvBnC,OAAO,EAAEjB,SAAS,CAACsD,IAAI;IACvBpC,MAAM,EAAElB,SAAS,CAACsD;EACpB,CAAC,CAAC,CAACJ,UAAU;EACbhB,IAAI,EAAElC,SAAS,CAACsD,IAAI,CAACJ,UAAU;EAC/B/B,IAAI,EAAEnB,SAAS,CAACiD,IAAI,CAACC,UAAU;EAC/Bf,QAAQ,EAAEnC,SAAS,CAACiD,IAAI,CAACC;AAC3B,CAAC;AA+FH,eAAehD,OAAO,CACpBE,UAAU,EACVH,OAAO,CACL,UAACsD,KAAK;EAAA,OAAM;IACVvC,OAAO,EAAEuC,KAAK,CAACC,OAAO,CAACC;EACzB,CAAC;AAAA,CAAC,EACF;EAAEpD,aAAa,EAAbA;AAAc,CAAC,CAClB,CACF,CAACM,iBAAiB,CAAC"},"metadata":{"react-intl":{"messages":[{"id":"Default","defaultMessage":"Default"},{"id":"Tags","defaultMessage":"Tags"},{"id":"Tags to remove","defaultMessage":"Tags to remove"},{"id":"Tags to add","defaultMessage":"Tags to add"}]}},"sourceType":"module","externalDependencies":[]}