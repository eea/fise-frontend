{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/customizations/volto/components/manage/Blocks/Block/Settings.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nvar Settings = function Settings(_ref) {\n  var data = _ref.data,\n    block = _ref.block,\n    onChangeBlock = _ref.onChangeBlock,\n    schema = _ref.schema;\n  return __jsx(InlineForm, {\n    schema: schema,\n    title: schema.title,\n    onChangeField: function onChangeField(id, value) {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, _defineProperty({}, id, value)));\n    },\n    formData: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  });\n};\n_c = Settings;\nSettings.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  schema: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default _c2 = injectIntl(Settings);\nvar _c, _c2;\n$RefreshReg$(_c, \"Settings\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","PropTypes","injectIntl","InlineForm","Settings","data","block","onChangeBlock","schema","title","id","value","propTypes","objectOf","any","isRequired","string","func"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/customizations/volto/components/manage/Blocks/Block/Settings.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\n\nconst Settings = ({ data, block, onChangeBlock, schema }) => {\n  return (\n    <InlineForm\n      schema={schema}\n      title={schema.title}\n      onChangeField={(id, value) => {\n        onChangeBlock(block, {\n          ...data,\n          [id]: value,\n        });\n      }}\n      formData={data}\n    />\n  );\n};\n\nSettings.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  schema: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default injectIntl(Settings);\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,UAAU,QAAQ,YAAY;AACvC,OAAOC,UAAU,MAAM,gDAAgD;AAEvE,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,OAA+C;EAAA,IAAzCC,IAAI,QAAJA,IAAI;IAAEC,KAAK,QAALA,KAAK;IAAEC,aAAa,QAAbA,aAAa;IAAEC,MAAM,QAANA,MAAM;EACpD,OACE,MAAC,UAAU;IACT,MAAM,EAAEA,MAAO;IACf,KAAK,EAAEA,MAAM,CAACC,KAAM;IACpB,aAAa,EAAE,uBAACC,EAAE,EAAEC,KAAK,EAAK;MAC5BJ,aAAa,CAACD,KAAK,kCACdD,IAAI,2BACNK,EAAE,EAAGC,KAAK,GACX;IACJ,CAAE;IACF,QAAQ,EAAEN,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACf;AAEN,CAAC;AAAC,KAdID,QAAQ;AAgBdA,QAAQ,CAACQ,SAAS,GAAG;EACnBP,IAAI,EAAEJ,SAAS,CAACY,QAAQ,CAACZ,SAAS,CAACa,GAAG,CAAC,CAACC,UAAU;EAClDT,KAAK,EAAEL,SAAS,CAACe,MAAM,CAACD,UAAU;EAClCR,aAAa,EAAEN,SAAS,CAACgB,IAAI,CAACF,UAAU;EACxCP,MAAM,EAAEP,SAAS,CAACY,QAAQ,CAACZ,SAAS,CAACa,GAAG,CAAC,CAACC;AAC5C,CAAC;AAED,qBAAeb,UAAU,CAACE,QAAQ,CAAC;AAAC;AAAA;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}