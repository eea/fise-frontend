{"ast":null,"code":"import _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\n/**\n * Api helper.\n * @module helpers/Api\n */\n\nimport superagent from 'superagent';\nimport Cookies from 'universal-cookie';\nimport config from '@plone/volto/registry';\nimport { addHeadersFactory } from '@plone/volto/helpers/Proxy/Proxy';\nimport { stripQuerystring } from '@plone/volto/helpers';\nvar methods = ['get', 'post', 'put', 'patch', 'del'];\n\n/**\n * Format the url.\n * @function formatUrl\n * @param {string} path Path (or URL) to be formatted.\n * @returns {string} Formatted path.\n */\nfunction formatUrl(path) {\n  var settings = config.settings;\n  var APISUFIX = settings.legacyTraverse ? '' : '/++api++';\n  if (path.startsWith('http://') || path.startsWith('https://')) return path;\n  var adjustedPath = path[0] !== '/' ? \"/\".concat(path) : path;\n  var apiPath = '';\n  if (settings.internalApiPath && __SERVER__) {\n    apiPath = settings.internalApiPath;\n  } else if (settings.apiPath) {\n    apiPath = settings.apiPath;\n  }\n  return \"\".concat(apiPath).concat(APISUFIX).concat(adjustedPath);\n}\n\n/**\n * Api class.\n * @class Api\n */\nvar Api = /*#__PURE__*/_createClass(\n/**\n * Constructor\n * @method constructor\n * @constructs Api\n */\nfunction Api(req) {\n  var _this = this;\n  _classCallCheck(this, Api);\n  var cookies = new Cookies();\n  methods.forEach(function (method) {\n    _this[method] = function (path) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        params = _ref.params,\n        data = _ref.data,\n        type = _ref.type,\n        _ref$headers = _ref.headers,\n        headers = _ref$headers === void 0 ? {} : _ref$headers,\n        _ref$checkUrl = _ref.checkUrl,\n        checkUrl = _ref$checkUrl === void 0 ? false : _ref$checkUrl;\n      var request;\n      var promise = new Promise(function (resolve, reject) {\n        request = superagent[method](formatUrl(path));\n        if (params) {\n          request.query(params);\n        }\n        var authToken;\n        if (req) {\n          // We are in SSR\n          authToken = req.universalCookies.get('auth_token');\n          request.use(addHeadersFactory(req));\n        } else {\n          authToken = cookies.get('auth_token');\n        }\n        if (authToken) {\n          request.set('Authorization', \"Bearer \".concat(authToken));\n        }\n        request.set('Accept', 'application/json');\n        if (type) {\n          request.type(type);\n        }\n        Object.keys(headers).forEach(function (key) {\n          return request.set(key, headers[key]);\n        });\n        if (data) {\n          request.send(data);\n        }\n        request.end(function (err, response) {\n          if (checkUrl && request.url && request.xhr && stripQuerystring(request.url) !== stripQuerystring(request.xhr.responseURL)) {\n            var _request$xhr$response;\n            if (((_request$xhr$response = request.xhr.responseURL) === null || _request$xhr$response === void 0 ? void 0 : _request$xhr$response.length) === 0) {\n              return reject({\n                code: 408,\n                status: 408,\n                url: request.xhr.responseURL\n              });\n            }\n            return reject({\n              code: 301,\n              url: request.xhr.responseURL\n            });\n          }\n          return err ? reject(err) : resolve(response.body || response.text);\n        });\n      });\n      promise.request = request;\n      return promise;\n    };\n  });\n});\nexport default Api;","map":{"version":3,"names":["superagent","Cookies","config","addHeadersFactory","stripQuerystring","methods","formatUrl","path","settings","APISUFIX","legacyTraverse","startsWith","adjustedPath","apiPath","internalApiPath","__SERVER__","Api","req","cookies","forEach","method","params","data","type","headers","checkUrl","request","promise","Promise","resolve","reject","query","authToken","universalCookies","get","use","set","Object","keys","key","send","end","err","response","url","xhr","responseURL","length","code","status","body","text"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/helpers/Api/Api.js"],"sourcesContent":["/**\n * Api helper.\n * @module helpers/Api\n */\n\nimport superagent from 'superagent';\nimport Cookies from 'universal-cookie';\nimport config from '@plone/volto/registry';\nimport { addHeadersFactory } from '@plone/volto/helpers/Proxy/Proxy';\nimport { stripQuerystring } from '@plone/volto/helpers';\n\nconst methods = ['get', 'post', 'put', 'patch', 'del'];\n\n/**\n * Format the url.\n * @function formatUrl\n * @param {string} path Path (or URL) to be formatted.\n * @returns {string} Formatted path.\n */\nfunction formatUrl(path) {\n  const { settings } = config;\n  const APISUFIX = settings.legacyTraverse ? '' : '/++api++';\n\n  if (path.startsWith('http://') || path.startsWith('https://')) return path;\n\n  const adjustedPath = path[0] !== '/' ? `/${path}` : path;\n  let apiPath = '';\n  if (settings.internalApiPath && __SERVER__) {\n    apiPath = settings.internalApiPath;\n  } else if (settings.apiPath) {\n    apiPath = settings.apiPath;\n  }\n\n  return `${apiPath}${APISUFIX}${adjustedPath}`;\n}\n\n/**\n * Api class.\n * @class Api\n */\nclass Api {\n  /**\n   * Constructor\n   * @method constructor\n   * @constructs Api\n   */\n  constructor(req) {\n    const cookies = new Cookies();\n\n    methods.forEach((method) => {\n      this[method] = (\n        path,\n        { params, data, type, headers = {}, checkUrl = false } = {},\n      ) => {\n        let request;\n        let promise = new Promise((resolve, reject) => {\n          request = superagent[method](formatUrl(path));\n\n          if (params) {\n            request.query(params);\n          }\n\n          let authToken;\n          if (req) {\n            // We are in SSR\n            authToken = req.universalCookies.get('auth_token');\n            request.use(addHeadersFactory(req));\n          } else {\n            authToken = cookies.get('auth_token');\n          }\n          if (authToken) {\n            request.set('Authorization', `Bearer ${authToken}`);\n          }\n\n          request.set('Accept', 'application/json');\n\n          if (type) {\n            request.type(type);\n          }\n\n          Object.keys(headers).forEach((key) => request.set(key, headers[key]));\n\n          if (data) {\n            request.send(data);\n          }\n\n          request.end((err, response) => {\n            if (\n              checkUrl &&\n              request.url &&\n              request.xhr &&\n              stripQuerystring(request.url) !==\n                stripQuerystring(request.xhr.responseURL)\n            ) {\n              if (request.xhr.responseURL?.length === 0) {\n                return reject({\n                  code: 408,\n                  status: 408,\n                  url: request.xhr.responseURL,\n                });\n              }\n              return reject({\n                code: 301,\n                url: request.xhr.responseURL,\n              });\n            }\n            return err ? reject(err) : resolve(response.body || response.text);\n          });\n        });\n        promise.request = request;\n        return promise;\n      };\n    });\n  }\n}\n\nexport default Api;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}