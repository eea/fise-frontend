{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/CheckboxFacet.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Checkbox, Header } from 'semantic-ui-react';\nimport { selectFacetSchemaEnhancer, selectFacetStateToValue, selectFacetValueToQuery } from './base';\n\n/**\n * A facet that uses radio/checkboxes to provide an explicit list of values for\n * filtering\n */\nvar CheckboxFacet = function CheckboxFacet(props) {\n  var _facet$title, _facet$field;\n  var facet = props.facet,\n    choices = props.choices,\n    isMulti = props.isMulti,\n    _onChange = props.onChange,\n    value = props.value,\n    isEditMode = props.isEditMode;\n  var facetValue = value;\n  return __jsx(\"div\", {\n    className: \"checkbox-facet\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    as: \"h4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, (_facet$title = facet.title) !== null && _facet$title !== void 0 ? _facet$title : facet === null || facet === void 0 ? void 0 : (_facet$field = facet.field) === null || _facet$field === void 0 ? void 0 : _facet$field.label), __jsx(\"div\", {\n    className: \"entries\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, choices.map(function (_ref, i) {\n    var label = _ref.label,\n      value = _ref.value;\n    return __jsx(\"div\", {\n      className: \"entry\",\n      key: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, __jsx(Checkbox, {\n      disabled: isEditMode,\n      label: label,\n      radio: !isMulti,\n      checked: isMulti ? !!(facetValue !== null && facetValue !== void 0 && facetValue.find(function (f) {\n        return f.value === value;\n      })) : facetValue && facetValue.value === value,\n      onChange: function onChange(e, _ref2) {\n        var checked = _ref2.checked;\n        return _onChange(facet.field.value, isMulti ? [].concat(_toConsumableArray(facetValue.filter(function (f) {\n          return f.value !== value;\n        }).map(function (f) {\n          return f.value;\n        })), _toConsumableArray(checked ? [value] : [])) : checked ? value : null);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }));\n  })));\n};\n_c = CheckboxFacet;\nCheckboxFacet.schemaEnhancer = selectFacetSchemaEnhancer;\nCheckboxFacet.stateToValue = selectFacetStateToValue;\nCheckboxFacet.valueToQuery = selectFacetValueToQuery;\nexport default CheckboxFacet;\nvar _c;\n$RefreshReg$(_c, \"CheckboxFacet\");","map":{"version":3,"names":["React","Checkbox","Header","selectFacetSchemaEnhancer","selectFacetStateToValue","selectFacetValueToQuery","CheckboxFacet","props","facet","choices","isMulti","onChange","value","isEditMode","facetValue","title","field","label","map","i","find","f","e","checked","filter","schemaEnhancer","stateToValue","valueToQuery"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/CheckboxFacet.jsx"],"sourcesContent":["import React from 'react';\nimport { Checkbox, Header } from 'semantic-ui-react';\nimport {\n  selectFacetSchemaEnhancer,\n  selectFacetStateToValue,\n  selectFacetValueToQuery,\n} from './base';\n\n/**\n * A facet that uses radio/checkboxes to provide an explicit list of values for\n * filtering\n */\nconst CheckboxFacet = (props) => {\n  const { facet, choices, isMulti, onChange, value, isEditMode } = props;\n  const facetValue = value;\n\n  return (\n    <div className=\"checkbox-facet\">\n      <Header as=\"h4\">{facet.title ?? facet?.field?.label}</Header>\n      <div className=\"entries\">\n        {choices.map(({ label, value }, i) => (\n          <div className=\"entry\" key={value}>\n            <Checkbox\n              disabled={isEditMode}\n              label={label}\n              radio={!isMulti}\n              checked={\n                isMulti\n                  ? !!facetValue?.find((f) => f.value === value)\n                  : facetValue && facetValue.value === value\n              }\n              onChange={(e, { checked }) =>\n                onChange(\n                  facet.field.value,\n                  isMulti\n                    ? [\n                        ...facetValue\n                          .filter((f) => f.value !== value)\n                          .map((f) => f.value),\n                        ...(checked ? [value] : []),\n                      ]\n                    : checked\n                    ? value\n                    : null,\n                )\n              }\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nCheckboxFacet.schemaEnhancer = selectFacetSchemaEnhancer;\nCheckboxFacet.stateToValue = selectFacetStateToValue;\nCheckboxFacet.valueToQuery = selectFacetValueToQuery;\n\nexport default CheckboxFacet;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,mBAAmB;AACpD,SACEC,yBAAyB,EACzBC,uBAAuB,EACvBC,uBAAuB,QAClB,QAAQ;;AAEf;AACA;AACA;AACA;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,KAAK,EAAK;EAAA;EAC/B,IAAQC,KAAK,GAAoDD,KAAK,CAA9DC,KAAK;IAAEC,OAAO,GAA2CF,KAAK,CAAvDE,OAAO;IAAEC,OAAO,GAAkCH,KAAK,CAA9CG,OAAO;IAAEC,SAAQ,GAAwBJ,KAAK,CAArCI,QAAQ;IAAEC,KAAK,GAAiBL,KAAK,CAA3BK,KAAK;IAAEC,UAAU,GAAKN,KAAK,CAApBM,UAAU;EAC5D,IAAMC,UAAU,GAAGF,KAAK;EAExB,OACE;IAAK,SAAS,EAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC7B,MAAC,MAAM;IAAC,EAAE,EAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAAEJ,KAAK,CAACO,KAAK,uDAAIP,KAAK,aAALA,KAAK,uCAALA,KAAK,CAAEQ,KAAK,iDAAZ,aAAcC,KAAK,CAAU,EAC7D;IAAK,SAAS,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrBR,OAAO,CAACS,GAAG,CAAC,gBAAmBC,CAAC;IAAA,IAAjBF,KAAK,QAALA,KAAK;MAAEL,KAAK,QAALA,KAAK;IAAA,OAC1B;MAAK,SAAS,EAAC,OAAO;MAAC,GAAG,EAAEA,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAChC,MAAC,QAAQ;MACP,QAAQ,EAAEC,UAAW;MACrB,KAAK,EAAEI,KAAM;MACb,KAAK,EAAE,CAACP,OAAQ;MAChB,OAAO,EACLA,OAAO,GACH,CAAC,EAACI,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEM,IAAI,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,CAACT,KAAK,KAAKA,KAAK;MAAA,EAAC,IAC5CE,UAAU,IAAIA,UAAU,CAACF,KAAK,KAAKA,KACxC;MACD,QAAQ,EAAE,kBAACU,CAAC;QAAA,IAAIC,OAAO,SAAPA,OAAO;QAAA,OACrBZ,SAAQ,CACNH,KAAK,CAACQ,KAAK,CAACJ,KAAK,EACjBF,OAAO,gCAEEI,UAAU,CACVU,MAAM,CAAC,UAACH,CAAC;UAAA,OAAKA,CAAC,CAACT,KAAK,KAAKA,KAAK;QAAA,EAAC,CAChCM,GAAG,CAAC,UAACG,CAAC;UAAA,OAAKA,CAAC,CAACT,KAAK;QAAA,EAAC,sBAClBW,OAAO,GAAG,CAACX,KAAK,CAAC,GAAG,EAAE,KAE5BW,OAAO,GACPX,KAAK,GACL,IAAI,CACT;MAAA,CACF;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACD,CACE;EAAA,CACP,CAAC,CACE,CACF;AAEV,CAAC;AAAC,KAxCIN,aAAa;AA0CnBA,aAAa,CAACmB,cAAc,GAAGtB,yBAAyB;AACxDG,aAAa,CAACoB,YAAY,GAAGtB,uBAAuB;AACpDE,aAAa,CAACqB,YAAY,GAAGtB,uBAAuB;AAEpD,eAAeC,aAAa;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}