{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-metadata-block/src/components/manage/Blocks/Metadata/View.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React from 'react';\nimport config from '@plone/volto/registry';\nimport { useSelector } from 'react-redux';\nimport { ErrorBoundary } from '@eeacms/volto-metadata-block/widgets';\nimport '@eeacms/volto-metadata-block/less/public.less';\nconst ViewMetadataBlock = props => {\n  const {\n    data\n  } = props.data;\n  const {\n    views\n  } = config.widgets;\n  const initialFormData = useSelector(state => {\n    var _state$content;\n    return (state === null || state === void 0 ? void 0 : (_state$content = state.content) === null || _state$content === void 0 ? void 0 : _state$content.data) || {};\n  });\n  let metadata_element = _objectSpread({}, initialFormData);\n  const {\n    properties,\n    metadata\n  } = props;\n  metadata ? metadata_element = _objectSpread({}, metadata) : metadata_element = _objectSpread({}, properties);\n  if (!(data !== null && data !== void 0 && data.id)) {\n    return '';\n  }\n  let output = metadata_element[data.id];\n  let Widget = views === null || views === void 0 ? void 0 : views.getWidget(data);\n  if (!output && props.data.placeholder) {\n    Widget = views === null || views === void 0 ? void 0 : views.default;\n    output = props.data.placeholder;\n  }\n  if (!Widget) {\n    return '';\n  }\n  let className = 'block metadata ' + data.id;\n  return __jsx(ErrorBoundary, {\n    name: data.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Widget, {\n    value: output,\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\nexport default ViewMetadataBlock;","map":{"version":3,"names":["React","config","useSelector","ErrorBoundary","ViewMetadataBlock","props","data","views","widgets","initialFormData","state","content","metadata_element","properties","metadata","id","output","Widget","getWidget","placeholder","default","className"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-metadata-block/src/components/manage/Blocks/Metadata/View.jsx"],"sourcesContent":["import React from 'react';\nimport config from '@plone/volto/registry';\nimport { useSelector } from 'react-redux';\nimport { ErrorBoundary } from '@eeacms/volto-metadata-block/widgets';\nimport '@eeacms/volto-metadata-block/less/public.less';\n\nconst ViewMetadataBlock = (props) => {\n  const { data } = props.data;\n  const { views } = config.widgets;\n  const initialFormData = useSelector((state) => state?.content?.data || {});\n  let metadata_element = { ...initialFormData };\n\n  const { properties, metadata } = props;\n  metadata\n    ? (metadata_element = { ...metadata })\n    : (metadata_element = { ...properties });\n\n  if (!data?.id) {\n    return '';\n  }\n\n  let output = metadata_element[data.id];\n  let Widget = views?.getWidget(data);\n  if (!output && props.data.placeholder) {\n    Widget = views?.default;\n    output = props.data.placeholder;\n  }\n\n  if (!Widget) {\n    return '';\n  }\n\n  let className = 'block metadata ' + data.id;\n  return (\n    <ErrorBoundary name={data.id}>\n      <Widget value={output} className={className} />\n    </ErrorBoundary>\n  );\n};\n\nexport default ViewMetadataBlock;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,sCAAsC;AACpE,OAAO,+CAA+C;AAEtD,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;EACnC,MAAM;IAAEC;EAAK,CAAC,GAAGD,KAAK,CAACC,IAAI;EAC3B,MAAM;IAAEC;EAAM,CAAC,GAAGN,MAAM,CAACO,OAAO;EAChC,MAAMC,eAAe,GAAGP,WAAW,CAAEQ,KAAK;IAAA;IAAA,OAAK,CAAAA,KAAK,aAALA,KAAK,yCAALA,KAAK,CAAEC,OAAO,mDAAd,eAAgBL,IAAI,KAAI,CAAC,CAAC;EAAA,EAAC;EAC1E,IAAIM,gBAAgB,qBAAQH,eAAe,CAAE;EAE7C,MAAM;IAAEI,UAAU;IAAEC;EAAS,CAAC,GAAGT,KAAK;EACtCS,QAAQ,GACHF,gBAAgB,qBAAQE,QAAQ,CAAE,GAClCF,gBAAgB,qBAAQC,UAAU,CAAG;EAE1C,IAAI,EAACP,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAES,EAAE,GAAE;IACb,OAAO,EAAE;EACX;EAEA,IAAIC,MAAM,GAAGJ,gBAAgB,CAACN,IAAI,CAACS,EAAE,CAAC;EACtC,IAAIE,MAAM,GAAGV,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEW,SAAS,CAACZ,IAAI,CAAC;EACnC,IAAI,CAACU,MAAM,IAAIX,KAAK,CAACC,IAAI,CAACa,WAAW,EAAE;IACrCF,MAAM,GAAGV,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEa,OAAO;IACvBJ,MAAM,GAAGX,KAAK,CAACC,IAAI,CAACa,WAAW;EACjC;EAEA,IAAI,CAACF,MAAM,EAAE;IACX,OAAO,EAAE;EACX;EAEA,IAAII,SAAS,GAAG,iBAAiB,GAAGf,IAAI,CAACS,EAAE;EAC3C,OACE,MAAC,aAAa;IAAC,IAAI,EAAET,IAAI,CAACS,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC3B,MAAC,MAAM;IAAC,KAAK,EAAEC,MAAO;IAAC,SAAS,EAAEK,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACjC;AAEpB,CAAC;AAED,eAAejB,iBAAiB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}