{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Groups reducer.\n * @module reducers/groups/groups\n */\n\nimport { CREATE_GROUP, DELETE_GROUP, GET_GROUP, LIST_GROUPS, LIST_FILTER_GROUPS, UPDATE_GROUP } from '@plone/volto/constants/ActionTypes';\nvar initialState = {\n  create: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  \"delete\": {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  get: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  groups: [],\n  group: {}\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Groups reducer.\n * @function groups\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function groups() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case \"\".concat(CREATE_GROUP, \"_PENDING\"):\n    case \"\".concat(DELETE_GROUP, \"_PENDING\"):\n    case \"\".concat(GET_GROUP, \"_PENDING\"):\n    case \"\".concat(LIST_GROUPS, \"_PENDING\"):\n    case \"\".concat(LIST_FILTER_GROUPS, \"_PENDING\"):\n    case \"\".concat(UPDATE_GROUP, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, getRequestKey(action.type), {\n        loading: true,\n        loaded: false,\n        error: null\n      }));\n    case \"\".concat(GET_GROUP, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        group: action.result\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: true,\n        error: null\n      }));\n    case \"\".concat(LIST_GROUPS, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        groups: action.result\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: true,\n        error: null\n      }));\n    case \"\".concat(LIST_FILTER_GROUPS, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        filter_groups: action.result\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: true,\n        error: null\n      }));\n    case \"\".concat(CREATE_GROUP, \"_SUCCESS\"):\n    case \"\".concat(DELETE_GROUP, \"_SUCCESS\"):\n    case \"\".concat(UPDATE_GROUP, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, getRequestKey(action.type), {\n        loading: false,\n        loaded: true,\n        error: null\n      }));\n    case \"\".concat(CREATE_GROUP, \"_FAIL\"):\n    case \"\".concat(DELETE_GROUP, \"_FAIL\"):\n    case \"\".concat(UPDATE_GROUP, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, getRequestKey(action.type), {\n        loading: false,\n        loaded: false,\n        error: action.error\n      }));\n    case \"\".concat(GET_GROUP, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        group: {}\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: false,\n        error: action.error\n      }));\n    case \"\".concat(LIST_GROUPS, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        groups: []\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: false,\n        error: action.error\n      }));\n    case \"\".concat(LIST_FILTER_GROUPS, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        filter_groups: []\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: false,\n        error: action.error\n      }));\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["CREATE_GROUP","DELETE_GROUP","GET_GROUP","LIST_GROUPS","LIST_FILTER_GROUPS","UPDATE_GROUP","initialState","create","loaded","loading","error","get","list","update","groups","group","getRequestKey","actionType","split","toLowerCase","state","action","type","result","filter_groups"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/groups/groups.js"],"sourcesContent":["/**\n * Groups reducer.\n * @module reducers/groups/groups\n */\n\nimport {\n  CREATE_GROUP,\n  DELETE_GROUP,\n  GET_GROUP,\n  LIST_GROUPS,\n  LIST_FILTER_GROUPS,\n  UPDATE_GROUP,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  create: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  groups: [],\n  group: {},\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Groups reducer.\n * @function groups\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function groups(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${CREATE_GROUP}_PENDING`:\n    case `${DELETE_GROUP}_PENDING`:\n    case `${GET_GROUP}_PENDING`:\n    case `${LIST_GROUPS}_PENDING`:\n    case `${LIST_FILTER_GROUPS}_PENDING`:\n    case `${UPDATE_GROUP}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_GROUP}_SUCCESS`:\n      return {\n        ...state,\n        group: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_GROUPS}_SUCCESS`:\n      return {\n        ...state,\n        groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_FILTER_GROUPS}_SUCCESS`:\n      return {\n        ...state,\n        filter_groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${CREATE_GROUP}_SUCCESS`:\n    case `${DELETE_GROUP}_SUCCESS`:\n    case `${UPDATE_GROUP}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${CREATE_GROUP}_FAIL`:\n    case `${DELETE_GROUP}_FAIL`:\n    case `${UPDATE_GROUP}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${GET_GROUP}_FAIL`:\n      return {\n        ...state,\n        group: {},\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_GROUPS}_FAIL`:\n      return {\n        ...state,\n        groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_FILTER_GROUPS}_FAIL`:\n      return {\n        ...state,\n        filter_groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}