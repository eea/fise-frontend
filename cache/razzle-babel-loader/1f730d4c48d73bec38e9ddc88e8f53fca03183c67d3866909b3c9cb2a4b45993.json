{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { defineMessages } from 'react-intl';\nimport { DefaultCardModelSchema, schemaEnhancerFactory, addTypeSelect } from '@eeacms/volto-listing-block/schema-utils';\nvar messages = defineMessages({\n  title: {\n    \"id\": \"Card type\",\n    \"defaultMessage\": \"Card type\"\n  }\n});\nexport default function universalCardSchemaEnhancer(args) {\n  var props = _objectSpread({}, args);\n  var schema = props.schema;\n  props.formData = props.formData || props.data;\n  var extensionName = 'cardTemplates';\n  var enhancer = schemaEnhancerFactory({\n    extensionName: extensionName,\n    messages: messages,\n    blockType: 'listing',\n    extensionField: '@type'\n  });\n  schema.fieldsets.push({\n    id: 'cardDesigner',\n    title: 'Card',\n    fields: ['itemModel']\n  });\n  var itemModelSchema = addTypeSelect(_objectSpread(_objectSpread({}, args), {}, {\n    schema: DefaultCardModelSchema,\n    extensionName: extensionName,\n    messages: messages\n  }));\n  var baseSchema = _objectSpread(_objectSpread({}, schema), {}, {\n    fieldsets: _toConsumableArray(schema.fieldsets),\n    properties: _objectSpread(_objectSpread({}, schema.properties), {}, {\n      itemModel: {\n        title: 'Card model',\n        widget: 'object',\n        schema: itemModelSchema\n      }\n    })\n  });\n  var enhancedSchema = enhancer(_objectSpread(_objectSpread({}, props), {}, {\n    schema: baseSchema\n  }));\n  return enhancedSchema;\n}","map":{"version":3,"names":["defineMessages","DefaultCardModelSchema","schemaEnhancerFactory","addTypeSelect","messages","title","universalCardSchemaEnhancer","args","props","schema","formData","data","extensionName","enhancer","blockType","extensionField","fieldsets","push","id","fields","itemModelSchema","baseSchema","properties","itemModel","widget","enhancedSchema"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-listing-block/src/components/UniversalCard/schema.js"],"sourcesContent":["import { defineMessages } from 'react-intl';\nimport {\n  DefaultCardModelSchema,\n  schemaEnhancerFactory,\n  addTypeSelect,\n} from '@eeacms/volto-listing-block/schema-utils';\n\nconst messages = defineMessages({\n  title: {\n    id: 'Card type',\n    defaultMessage: 'Card type',\n  },\n});\n\nexport default function universalCardSchemaEnhancer(args) {\n  const props = { ...args };\n  const { schema } = props;\n\n  props.formData = props.formData || props.data;\n  const extensionName = 'cardTemplates';\n  const enhancer = schemaEnhancerFactory({\n    extensionName,\n    messages,\n    blockType: 'listing',\n    extensionField: '@type',\n  });\n\n  schema.fieldsets.push({\n    id: 'cardDesigner',\n    title: 'Card',\n    fields: ['itemModel'],\n  });\n\n  const itemModelSchema = addTypeSelect({\n    ...args,\n    schema: DefaultCardModelSchema,\n    extensionName,\n    messages,\n  });\n\n  const baseSchema = {\n    ...schema,\n    fieldsets: [...schema.fieldsets],\n    properties: {\n      ...schema.properties,\n      itemModel: {\n        title: 'Card model',\n        widget: 'object',\n        schema: itemModelSchema,\n      },\n    },\n  };\n\n  const enhancedSchema = enhancer({\n    ...props,\n    schema: baseSchema,\n  });\n\n  return enhancedSchema;\n}\n"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,YAAY;AAC3C,SACEC,sBAAsB,EACtBC,qBAAqB,EACrBC,aAAa,QACR,0CAA0C;AAEjD,IAAMC,QAAQ,GAAGJ,cAAc,CAAC;EAC9BK,KAAK;IAAA;IAAA;EAAA;AAIP,CAAC,CAAC;AAEF,eAAe,SAASC,2BAA2B,CAACC,IAAI,EAAE;EACxD,IAAMC,KAAK,qBAAQD,IAAI,CAAE;EACzB,IAAQE,MAAM,GAAKD,KAAK,CAAhBC,MAAM;EAEdD,KAAK,CAACE,QAAQ,GAAGF,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACG,IAAI;EAC7C,IAAMC,aAAa,GAAG,eAAe;EACrC,IAAMC,QAAQ,GAAGX,qBAAqB,CAAC;IACrCU,aAAa,EAAbA,aAAa;IACbR,QAAQ,EAARA,QAAQ;IACRU,SAAS,EAAE,SAAS;IACpBC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEFN,MAAM,CAACO,SAAS,CAACC,IAAI,CAAC;IACpBC,EAAE,EAAE,cAAc;IAClBb,KAAK,EAAE,MAAM;IACbc,MAAM,EAAE,CAAC,WAAW;EACtB,CAAC,CAAC;EAEF,IAAMC,eAAe,GAAGjB,aAAa,iCAChCI,IAAI;IACPE,MAAM,EAAER,sBAAsB;IAC9BW,aAAa,EAAbA,aAAa;IACbR,QAAQ,EAARA;EAAQ,GACR;EAEF,IAAMiB,UAAU,mCACXZ,MAAM;IACTO,SAAS,qBAAMP,MAAM,CAACO,SAAS,CAAC;IAChCM,UAAU,kCACLb,MAAM,CAACa,UAAU;MACpBC,SAAS,EAAE;QACTlB,KAAK,EAAE,YAAY;QACnBmB,MAAM,EAAE,QAAQ;QAChBf,MAAM,EAAEW;MACV;IAAC;EACF,EACF;EAED,IAAMK,cAAc,GAAGZ,QAAQ,iCAC1BL,KAAK;IACRC,MAAM,EAAEY;EAAU,GAClB;EAEF,OAAOI,cAAc;AACvB"},"metadata":{"react-intl":{"messages":[{"id":"Card type","defaultMessage":"Card type"}]}},"sourceType":"module","externalDependencies":[]}