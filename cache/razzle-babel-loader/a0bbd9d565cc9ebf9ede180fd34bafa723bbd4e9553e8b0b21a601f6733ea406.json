{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _map from \"lodash/map\";\nimport _isEqual from \"lodash/isEqual\";\nimport _filter from \"lodash/filter\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Diff/Diff.jsx\";\nvar __jsx = React.createElement;\n/**\n * Diff component.\n * @module components/manage/Diff/Diff\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Container, Button, Dropdown, Grid, Table } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { getDiff, getSchema, getHistory } from '@plone/volto/actions';\nimport { getBaseUrl, getBlocksFieldname, getBlocksLayoutFieldname, hasBlocksData } from '@plone/volto/helpers';\nimport { DiffField, FormattedDate, Icon, Toolbar, Unauthorized } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\nvar messages = defineMessages({\n  diff: {\n    \"id\": \"Diff\",\n    \"defaultMessage\": \"Diff\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  split: {\n    \"id\": \"Split\",\n    \"defaultMessage\": \"Split\"\n  },\n  unified: {\n    \"id\": \"Unified\",\n    \"defaultMessage\": \"Unified\"\n  }\n});\n\n/**\n * Diff class.\n * @class Diff\n * @extends Component\n */\nvar Diff = /*#__PURE__*/function (_Component) {\n  _inherits(Diff, _Component);\n  var _super = _createSuper(Diff);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  function Diff(props) {\n    var _this;\n    _classCallCheck(this, Diff);\n    _this = _super.call(this, props);\n    _this.onChangeOne = _this.onChangeOne.bind(_assertThisInitialized(_this));\n    _this.onChangeTwo = _this.onChangeTwo.bind(_assertThisInitialized(_this));\n    _this.onSelectView = _this.onSelectView.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isClient: false\n    };\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(Diff, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getSchema(this.props.type);\n      this.props.getHistory(getBaseUrl(this.props.pathname));\n      this.props.getDiff(getBaseUrl(this.props.pathname), this.props.one, this.props.two);\n      this.setState({\n        isClient: true\n      });\n    }\n\n    /**\n     * Component will receive props\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Next properties\n     * @returns {undefined}\n     */\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.pathname !== nextProps.pathname || this.props.one !== nextProps.one || this.props.two !== nextProps.two) {\n        this.props.getDiff(getBaseUrl(nextProps.pathname), nextProps.one, nextProps.two);\n      }\n    }\n\n    /**\n     * On select view handler\n     * @method onSelectView\n     * @param {object} event Event object\n     * @param {string} value Value\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSelectView\",\n    value: function onSelectView(event, _ref) {\n      var value = _ref.value;\n      this.props.history.push(\"\".concat(this.props.pathname, \"?one=\").concat(this.props.one, \"&two=\").concat(this.props.two, \"&view=\").concat(value));\n    }\n\n    /**\n     * On change one handler\n     * @method onChangeOne\n     * @param {object} event Event object\n     * @param {string} value Value\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onChangeOne\",\n    value: function onChangeOne(event, _ref2) {\n      var value = _ref2.value;\n      this.props.history.push(\"\".concat(this.props.pathname, \"?one=\").concat(value, \"&two=\").concat(this.props.two, \"&view=\").concat(this.props.view));\n    }\n\n    /**\n     * On change two handler\n     * @method onChangeTwo\n     * @param {object} event Event object\n     * @param {string} value Value\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onChangeTwo\",\n    value: function onChangeTwo(event, _ref3) {\n      var value = _ref3.value;\n      this.props.history.push(\"\".concat(this.props.pathname, \"?one=\").concat(this.props.one, \"&two=\").concat(value, \"&view=\").concat(this.props.view));\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n        _this$props$error;\n      var versions = _map(_filter(this.props.historyEntries, function (entry) {\n        return 'version' in entry;\n      }), function (entry, index) {\n        return {\n          text: __jsx(React.Fragment, null, index === 0 ? 'Current' : entry.version, \"\\xA0(\", __jsx(FormattedDate, {\n            date: entry.time,\n            \"long\": true,\n            className: \"text\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 13\n            }\n          }), \", \\xA0\", entry.actor.fullname, \")\"),\n          value: \"\".concat(entry.version),\n          key: \"\".concat(entry.version)\n        };\n      });\n      return ((_this$props$error = this.props.error) === null || _this$props$error === void 0 ? void 0 : _this$props$error.status) === 401 ? __jsx(Unauthorized, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 7\n        }\n      }) : __jsx(Container, {\n        id: \"page-diff\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 7\n        }\n      }, __jsx(Helmet, {\n        title: this.props.intl.formatMessage(messages.diff),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }\n      }), __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Difference between revision {one} and {two} of {title}\",\n        defaultMessage: \"Difference between revision {one} and {two} of {title}\",\n        values: {\n          one: this.props.one,\n          two: this.props.two,\n          title: this.props.title\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }\n      })), __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }, __jsx(Grid.Column, {\n        width: 9,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }\n      }, __jsx(\"p\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"You can view the difference of the revisions below.\",\n        defaultMessage: \"You can view the difference of the revisions below.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }\n      }))), __jsx(Grid.Column, {\n        width: 3,\n        textAlign: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }\n      }, __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }, _map([{\n        id: 'split',\n        label: this.props.intl.formatMessage(messages.split)\n      }, {\n        id: 'unified',\n        label: this.props.intl.formatMessage(messages.unified)\n      }], function (view) {\n        return __jsx(Button, {\n          key: view.id,\n          value: view.id,\n          active: _this2.props.view === view.id,\n          onClick: _this2.onSelectView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 19\n          }\n        }, view.label);\n      })))), this.props.historyEntries.length > 0 && __jsx(Table, {\n        basic: \"very\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }\n      }, __jsx(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }\n      }, __jsx(Table.HeaderCell, {\n        width: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Base\",\n        defaultMessage: \"Base\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 19\n        }\n      }), __jsx(Dropdown, {\n        onChange: this.onChangeOne,\n        value: this.props.one,\n        selection: true,\n        fluid: true,\n        options: versions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 19\n        }\n      })), __jsx(Table.HeaderCell, {\n        width: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Compare\",\n        defaultMessage: \"Compare\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 19\n        }\n      }), __jsx(Dropdown, {\n        onChange: this.onChangeTwo,\n        value: this.props.two,\n        selection: true,\n        fluid: true,\n        options: versions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 19\n        }\n      }))))), this.props.schema && this.props.data.length > 0 && _map(this.props.schema.fieldsets, function (fieldset) {\n        return _map(fieldset.fields, function (field) {\n          return !_isEqual(_this2.props.data[0][field], _this2.props.data[1][field]) && field !== getBlocksFieldname(_this2.props.data[0]) && field !== getBlocksLayoutFieldname(_this2.props.data[0]) && __jsx(DiffField, {\n            key: field,\n            one: _this2.props.data[0][field],\n            two: _this2.props.data[1][field],\n            schema: _this2.props.schema.properties[field],\n            view: _this2.props.view,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }\n          });\n        });\n      }), this.props.schema && this.props.data.length > 0 && hasBlocksData(this.props.data[0]) && (!_isEqual(this.props.data[0][getBlocksFieldname(this.props.data[0])], this.props.data[1][getBlocksFieldname(this.props.data[1])]) || !_isEqual(this.props.data[0][getBlocksLayoutFieldname(this.props.data[0])], this.props.data[1][getBlocksLayoutFieldname(this.props.data[1])])) && __jsx(DiffField, {\n        one: this.props.data[0][getBlocksFieldname(this.props.data[0])],\n        two: this.props.data[1][getBlocksFieldname(this.props.data[1])],\n        contentOne: this.props.data[0],\n        contentTwo: this.props.data[1],\n        schema: this.props.schema.properties[getBlocksFieldname(this.props.data[0])],\n        view: this.props.view,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }\n      }), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(Link, {\n          to: \"\".concat(getBaseUrl(this.props.pathname), \"/historyview\"),\n          className: \"item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }\n        }, __jsx(Icon, {\n          name: backSVG,\n          className: \"contents circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.back),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 19\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return Diff;\n}(Component);\n_defineProperty(Diff, \"propTypes\", {\n  getDiff: PropTypes.func.isRequired,\n  getSchema: PropTypes.func.isRequired,\n  getHistory: PropTypes.func.isRequired,\n  schema: PropTypes.objectOf(PropTypes.any),\n  error: PropTypes.objectOf(PropTypes.any),\n  pathname: PropTypes.string.isRequired,\n  one: PropTypes.string.isRequired,\n  two: PropTypes.string.isRequired,\n  view: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string\n  })).isRequired,\n  historyEntries: PropTypes.arrayOf(PropTypes.shape({\n    version: PropTypes.number,\n    time: PropTypes.string,\n    actor: PropTypes.shape({\n      fullname: PropTypes.string\n    })\n  })).isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n});\n_defineProperty(Diff, \"defaultProps\", {\n  schema: null\n});\nexport default compose(withRouter, injectIntl, connect(function (state, props) {\n  var _state$content$data, _state$content$data2;\n  return {\n    data: state.diff.data,\n    historyEntries: state.history.entries,\n    schema: state.schema.schema,\n    error: state.diff.error,\n    pathname: props.location.pathname,\n    one: qs.parse(props.location.search).one,\n    two: qs.parse(props.location.search).two,\n    view: qs.parse(props.location.search).view || 'split',\n    title: (_state$content$data = state.content.data) === null || _state$content$data === void 0 ? void 0 : _state$content$data.title,\n    type: (_state$content$data2 = state.content.data) === null || _state$content$data2 === void 0 ? void 0 : _state$content$data2['@type']\n  };\n}, {\n  getDiff: getDiff,\n  getSchema: getSchema,\n  getHistory: getHistory\n}))(Diff);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","connect","compose","Container","Button","Dropdown","Grid","Table","Link","withRouter","Portal","FormattedMessage","defineMessages","injectIntl","qs","getDiff","getSchema","getHistory","getBaseUrl","getBlocksFieldname","getBlocksLayoutFieldname","hasBlocksData","DiffField","FormattedDate","Icon","Toolbar","Unauthorized","backSVG","messages","diff","back","split","unified","Diff","props","onChangeOne","bind","onChangeTwo","onSelectView","state","isClient","type","pathname","one","two","setState","nextProps","event","value","history","push","view","versions","historyEntries","entry","index","text","version","time","actor","fullname","key","error","status","intl","formatMessage","title","id","label","length","schema","data","fieldsets","fieldset","fields","field","properties","document","getElementById","func","isRequired","objectOf","any","string","arrayOf","shape","number","entries","location","parse","search","content"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Diff/Diff.jsx"],"sourcesContent":["/**\n * Diff component.\n * @module components/manage/Diff/Diff\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { filter, isEqual, map } from 'lodash';\nimport { Container, Button, Dropdown, Grid, Table } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\n\nimport { getDiff, getSchema, getHistory } from '@plone/volto/actions';\nimport {\n  getBaseUrl,\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  hasBlocksData,\n} from '@plone/volto/helpers';\nimport {\n  DiffField,\n  FormattedDate,\n  Icon,\n  Toolbar,\n  Unauthorized,\n} from '@plone/volto/components';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  diff: {\n    id: 'Diff',\n    defaultMessage: 'Diff',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  split: {\n    id: 'Split',\n    defaultMessage: 'Split',\n  },\n  unified: {\n    id: 'Unified',\n    defaultMessage: 'Unified',\n  },\n});\n\n/**\n * Diff class.\n * @class Diff\n * @extends Component\n */\nclass Diff extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getDiff: PropTypes.func.isRequired,\n    getSchema: PropTypes.func.isRequired,\n    getHistory: PropTypes.func.isRequired,\n    schema: PropTypes.objectOf(PropTypes.any),\n    error: PropTypes.objectOf(PropTypes.any),\n    pathname: PropTypes.string.isRequired,\n    one: PropTypes.string.isRequired,\n    two: PropTypes.string.isRequired,\n    view: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n      }),\n    ).isRequired,\n    historyEntries: PropTypes.arrayOf(\n      PropTypes.shape({\n        version: PropTypes.number,\n        time: PropTypes.string,\n        actor: PropTypes.shape({ fullname: PropTypes.string }),\n      }),\n    ).isRequired,\n    title: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    schema: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  constructor(props) {\n    super(props);\n    this.onChangeOne = this.onChangeOne.bind(this);\n    this.onChangeTwo = this.onChangeTwo.bind(this);\n    this.onSelectView = this.onSelectView.bind(this);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSchema(this.props.type);\n    this.props.getHistory(getBaseUrl(this.props.pathname));\n    this.props.getDiff(\n      getBaseUrl(this.props.pathname),\n      this.props.one,\n      this.props.two,\n    );\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.pathname !== nextProps.pathname ||\n      this.props.one !== nextProps.one ||\n      this.props.two !== nextProps.two\n    ) {\n      this.props.getDiff(\n        getBaseUrl(nextProps.pathname),\n        nextProps.one,\n        nextProps.two,\n      );\n    }\n  }\n\n  /**\n   * On select view handler\n   * @method onSelectView\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onSelectView(event, { value }) {\n    this.props.history.push(\n      `${this.props.pathname}?one=${this.props.one}&two=${this.props.two}&view=${value}`,\n    );\n  }\n\n  /**\n   * On change one handler\n   * @method onChangeOne\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onChangeOne(event, { value }) {\n    this.props.history.push(\n      `${this.props.pathname}?one=${value}&two=${this.props.two}&view=${this.props.view}`,\n    );\n  }\n\n  /**\n   * On change two handler\n   * @method onChangeTwo\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onChangeTwo(event, { value }) {\n    this.props.history.push(\n      `${this.props.pathname}?one=${this.props.one}&two=${value}&view=${this.props.view}`,\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const versions = map(\n      filter(this.props.historyEntries, (entry) => 'version' in entry),\n      (entry, index) => ({\n        text: (\n          <>\n            {index === 0 ? 'Current' : entry.version}&nbsp;(\n            <FormattedDate date={entry.time} long className=\"text\" />, &nbsp;\n            {entry.actor.fullname})\n          </>\n        ),\n        value: `${entry.version}`,\n        key: `${entry.version}`,\n      }),\n    );\n\n    return this.props.error?.status === 401 ? (\n      <Unauthorized />\n    ) : (\n      <Container id=\"page-diff\">\n        <Helmet title={this.props.intl.formatMessage(messages.diff)} />\n        <h1>\n          <FormattedMessage\n            id=\"Difference between revision {one} and {two} of {title}\"\n            defaultMessage=\"Difference between revision {one} and {two} of {title}\"\n            values={{\n              one: this.props.one,\n              two: this.props.two,\n              title: this.props.title,\n            }}\n          />\n        </h1>\n        <Grid>\n          <Grid.Column width={9}>\n            <p className=\"description\">\n              <FormattedMessage\n                id=\"You can view the difference of the revisions below.\"\n                defaultMessage=\"You can view the difference of the revisions below.\"\n              />\n            </p>\n          </Grid.Column>\n          <Grid.Column width={3} textAlign=\"right\">\n            <Button.Group>\n              {map(\n                [\n                  {\n                    id: 'split',\n                    label: this.props.intl.formatMessage(messages.split),\n                  },\n                  {\n                    id: 'unified',\n                    label: this.props.intl.formatMessage(messages.unified),\n                  },\n                ],\n                (view) => (\n                  <Button\n                    key={view.id}\n                    value={view.id}\n                    active={this.props.view === view.id}\n                    onClick={this.onSelectView}\n                  >\n                    {view.label}\n                  </Button>\n                ),\n              )}\n            </Button.Group>\n          </Grid.Column>\n        </Grid>\n        {this.props.historyEntries.length > 0 && (\n          <Table basic=\"very\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width={6}>\n                  <FormattedMessage id=\"Base\" defaultMessage=\"Base\" />\n                  <Dropdown\n                    onChange={this.onChangeOne}\n                    value={this.props.one}\n                    selection\n                    fluid\n                    options={versions}\n                  />\n                </Table.HeaderCell>\n                <Table.HeaderCell width={6}>\n                  <FormattedMessage id=\"Compare\" defaultMessage=\"Compare\" />\n                  <Dropdown\n                    onChange={this.onChangeTwo}\n                    value={this.props.two}\n                    selection\n                    fluid\n                    options={versions}\n                  />\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n          </Table>\n        )}\n        {this.props.schema &&\n          this.props.data.length > 0 &&\n          map(this.props.schema.fieldsets, (fieldset) =>\n            map(\n              fieldset.fields,\n              (field) =>\n                !isEqual(\n                  this.props.data[0][field],\n                  this.props.data[1][field],\n                ) &&\n                field !== getBlocksFieldname(this.props.data[0]) &&\n                field !== getBlocksLayoutFieldname(this.props.data[0]) && (\n                  <DiffField\n                    key={field}\n                    one={this.props.data[0][field]}\n                    two={this.props.data[1][field]}\n                    schema={this.props.schema.properties[field]}\n                    view={this.props.view}\n                  />\n                ),\n            ),\n          )}\n        {this.props.schema &&\n          this.props.data.length > 0 &&\n          hasBlocksData(this.props.data[0]) &&\n          (!isEqual(\n            this.props.data[0][getBlocksFieldname(this.props.data[0])],\n            this.props.data[1][getBlocksFieldname(this.props.data[1])],\n          ) ||\n            !isEqual(\n              this.props.data[0][getBlocksLayoutFieldname(this.props.data[0])],\n              this.props.data[1][getBlocksLayoutFieldname(this.props.data[1])],\n            )) && (\n            <DiffField\n              one={this.props.data[0][getBlocksFieldname(this.props.data[0])]}\n              two={this.props.data[1][getBlocksFieldname(this.props.data[1])]}\n              contentOne={this.props.data[0]}\n              contentTwo={this.props.data[1]}\n              schema={\n                this.props.schema.properties[\n                  getBlocksFieldname(this.props.data[0])\n                ]\n              }\n              view={this.props.view}\n            />\n          )}\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link\n                  to={`${getBaseUrl(this.props.pathname)}/historyview`}\n                  className=\"item\"\n                >\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      data: state.diff.data,\n      historyEntries: state.history.entries,\n      schema: state.schema.schema,\n      error: state.diff.error,\n      pathname: props.location.pathname,\n      one: qs.parse(props.location.search).one,\n      two: qs.parse(props.location.search).two,\n      view: qs.parse(props.location.search).view || 'split',\n      title: state.content.data?.title,\n      type: state.content.data?.['@type'],\n    }),\n    { getDiff, getSchema, getHistory },\n  ),\n)(Diff);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Diff","defaultMessage":"Diff"},{"id":"Back","defaultMessage":"Back"},{"id":"Split","defaultMessage":"Split"},{"id":"Unified","defaultMessage":"Unified"},{"id":"Difference between revision {one} and {two} of {title}","defaultMessage":"Difference between revision {one} and {two} of {title}"},{"id":"You can view the difference of the revisions below.","defaultMessage":"You can view the difference of the revisions below."},{"id":"Base","defaultMessage":"Base"},{"id":"Compare","defaultMessage":"Compare"}]}},"sourceType":"module","externalDependencies":[]}