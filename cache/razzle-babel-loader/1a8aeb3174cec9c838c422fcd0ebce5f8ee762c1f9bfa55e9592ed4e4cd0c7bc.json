{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-object-widget/src/demo/BlockEdit.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport BlockView from './BlockView';\nimport { SidebarPortal } from '@plone/volto/components';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport CombinedSchema from './schema.js';\nexport default (props => {\n  // const [data, setData] = React.useState({});\n  return __jsx(\"div\", {\n    role: \"presentation\",\n    className: \"block selected\",\n    onClick: () => {\n      props.onSelectBlock(props.block);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"block-inner-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(BlockView, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }))), __jsx(SidebarPortal, {\n    selected: props.selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(InlineForm, {\n    schema: CombinedSchema,\n    title: CombinedSchema.title,\n    onChangeField: (id, value) => {\n      props.onChangeBlock(props.block, _objectSpread(_objectSpread({}, props.data), {}, {\n        [id]: value\n      }));\n    },\n    formData: props.data,\n    block: props.block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"names":["React","BlockView","SidebarPortal","InlineForm","CombinedSchema","props","onSelectBlock","block","selected","title","id","value","onChangeBlock","data"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-object-widget/src/demo/BlockEdit.jsx"],"sourcesContent":["import React from 'react';\nimport BlockView from './BlockView';\nimport { SidebarPortal } from '@plone/volto/components';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport CombinedSchema from './schema.js';\n\nexport default (props) => {\n  // const [data, setData] = React.useState({});\n  return (\n    <div\n      role=\"presentation\"\n      className=\"block selected\"\n      onClick={() => {\n        props.onSelectBlock(props.block);\n      }}\n    >\n      <div className=\"block-inner-wrapper\">\n        <BlockView {...props} />\n      </div>\n      <SidebarPortal selected={props.selected}>\n        <InlineForm\n          schema={CombinedSchema}\n          title={CombinedSchema.title}\n          onChangeField={(id, value) => {\n            props.onChangeBlock(props.block, {\n              ...props.data,\n              [id]: value,\n            });\n          }}\n          formData={props.data}\n          block={props.block}\n        />\n      </SidebarPortal>\n    </div>\n  );\n};\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,aAAa,QAAQ,yBAAyB;AACvD,OAAOC,UAAU,MAAM,gDAAgD;AACvE,OAAOC,cAAc,MAAM,aAAa;AAExC,gBAAgBC,KAAK,IAAK;EACxB;EACA,OACE;IACE,IAAI,EAAC,cAAc;IACnB,SAAS,EAAC,gBAAgB;IAC1B,OAAO,EAAE,MAAM;MACbA,KAAK,CAACC,aAAa,CAACD,KAAK,CAACE,KAAK,CAAC;IAClC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEF;IAAK,SAAS,EAAC,qBAAqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAClC,MAAC,SAAS,eAAKF,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,CACpB,EACN,MAAC,aAAa;IAAC,QAAQ,EAAEA,KAAK,CAACG,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACtC,MAAC,UAAU;IACT,MAAM,EAAEJ,cAAe;IACvB,KAAK,EAAEA,cAAc,CAACK,KAAM;IAC5B,aAAa,EAAE,CAACC,EAAE,EAAEC,KAAK,KAAK;MAC5BN,KAAK,CAACO,aAAa,CAACP,KAAK,CAACE,KAAK,kCAC1BF,KAAK,CAACQ,IAAI;QACb,CAACH,EAAE,GAAGC;MAAK,GACX;IACJ,CAAE;IACF,QAAQ,EAAEN,KAAK,CAACQ,IAAK;IACrB,KAAK,EAAER,KAAK,CAACE,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACnB,CACY,CACZ;AAEV,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}