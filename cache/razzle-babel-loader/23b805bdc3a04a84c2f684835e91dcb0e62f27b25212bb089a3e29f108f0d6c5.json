{"ast":null,"code":"import _map from \"lodash/map\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/Widgets/Hidden.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Form, Grid, Input, Label } from 'semantic-ui-react';\nimport './Hidden.css';\nconst HiddenWidget = ({\n  id,\n  title,\n  required,\n  description,\n  error,\n  value,\n  onChange,\n  fieldSet\n}) => __jsx(Form.Field, {\n  inline: true,\n  required: required,\n  error: error ? error.length > 0 : false,\n  className: \"hiddenWidget\",\n  id: `${fieldSet || 'field'}-${id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}, __jsx(Grid, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}, __jsx(Grid.Row, {\n  stretched: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }\n}, __jsx(Grid.Column, {\n  width: \"4\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }\n}, __jsx(\"div\", {\n  className: \"wrapper\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }\n}, __jsx(\"label\", {\n  htmlFor: `field-${id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }\n}, title))), __jsx(Grid.Column, {\n  width: \"8\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }\n}, __jsx(Input, {\n  id: `field-${id}`,\n  name: id,\n  type: \"text\",\n  value: value && JSON.stringify(value) || '',\n  onChange: ({\n    target\n  }) => onChange(id, target.value === '' ? undefined : target.value),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 11\n  }\n}), _map(error, message => __jsx(Label, {\n  key: message,\n  basic: true,\n  color: \"red\",\n  pointing: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }\n}, message)))), description && __jsx(Grid.Row, {\n  stretched: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }\n}, __jsx(Grid.Column, {\n  stretched: true,\n  width: \"12\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 11\n  }\n}, __jsx(\"p\", {\n  className: \"help\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }\n}, description)))));\nexport default HiddenWidget;","map":{"version":3,"names":["React","Form","Grid","Input","Label","HiddenWidget","id","title","required","description","error","value","onChange","fieldSet","length","JSON","stringify","target","undefined","message"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/Widgets/Hidden.jsx"],"sourcesContent":["import React from 'react';\nimport { Form, Grid, Input, Label } from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport './Hidden.css';\n\nconst HiddenWidget = ({\n  id,\n  title,\n  required,\n  description,\n  error,\n  value,\n  onChange,\n  fieldSet,\n}) => (\n  <Form.Field\n    inline\n    required={required}\n    error={error ? error.length > 0 : false}\n    className=\"hiddenWidget\"\n    id={`${fieldSet || 'field'}-${id}`}\n  >\n    <Grid>\n      <Grid.Row stretched>\n        <Grid.Column width=\"4\">\n          <div className=\"wrapper\">\n            <label htmlFor={`field-${id}`}>{title}</label>\n          </div>\n        </Grid.Column>\n        <Grid.Column width=\"8\">\n          <Input\n            id={`field-${id}`}\n            name={id}\n            type=\"text\"\n            value={(value && JSON.stringify(value)) || ''}\n            onChange={({ target }) =>\n              onChange(id, target.value === '' ? undefined : target.value)\n            }\n          />\n          {map(error, (message) => (\n            <Label key={message} basic color=\"red\" pointing>\n              {message}\n            </Label>\n          ))}\n        </Grid.Column>\n      </Grid.Row>\n      {description && (\n        <Grid.Row stretched>\n          <Grid.Column stretched width=\"12\">\n            <p className=\"help\">{description}</p>\n          </Grid.Column>\n        </Grid.Row>\n      )}\n    </Grid>\n  </Form.Field>\n);\n\nexport default HiddenWidget;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,mBAAmB;AAE5D,OAAO,cAAc;AAErB,MAAMC,YAAY,GAAG,CAAC;EACpBC,EAAE;EACFC,KAAK;EACLC,QAAQ;EACRC,WAAW;EACXC,KAAK;EACLC,KAAK;EACLC,QAAQ;EACRC;AACF,CAAC,KACC,MAAC,IAAI,CAAC,KAAK;EACT,MAAM;EACN,QAAQ,EAAEL,QAAS;EACnB,KAAK,EAAEE,KAAK,GAAGA,KAAK,CAACI,MAAM,GAAG,CAAC,GAAG,KAAM;EACxC,SAAS,EAAC,cAAc;EACxB,EAAE,EAAG,GAAED,QAAQ,IAAI,OAAQ,IAAGP,EAAG,EAAE;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GAEnC,MAAC,IAAI;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GACH,MAAC,IAAI,CAAC,GAAG;EAAC,SAAS;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GACjB,MAAC,IAAI,CAAC,MAAM;EAAC,KAAK,EAAC,GAAG;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GACpB;EAAK,SAAS,EAAC,SAAS;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GACtB;EAAO,OAAO,EAAG,SAAQA,EAAG,EAAE;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GAAEC,KAAK,CAAS,CAC1C,CACM,EACd,MAAC,IAAI,CAAC,MAAM;EAAC,KAAK,EAAC,GAAG;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GACpB,MAAC,KAAK;EACJ,EAAE,EAAG,SAAQD,EAAG,EAAE;EAClB,IAAI,EAAEA,EAAG;EACT,IAAI,EAAC,MAAM;EACX,KAAK,EAAGK,KAAK,IAAII,IAAI,CAACC,SAAS,CAACL,KAAK,CAAC,IAAK,EAAG;EAC9C,QAAQ,EAAE,CAAC;IAAEM;EAAO,CAAC,KACnBL,QAAQ,CAACN,EAAE,EAAEW,MAAM,CAACN,KAAK,KAAK,EAAE,GAAGO,SAAS,GAAGD,MAAM,CAACN,KAAK,CAC5D;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EACD,EACD,KAAID,KAAK,EAAGS,OAAO,IAClB,MAAC,KAAK;EAAC,GAAG,EAAEA,OAAQ;EAAC,KAAK;EAAC,KAAK,EAAC,KAAK;EAAC,QAAQ;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GAC5CA,OAAO,CAEX,CAAC,CACU,CACL,EACVV,WAAW,IACV,MAAC,IAAI,CAAC,GAAG;EAAC,SAAS;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GACjB,MAAC,IAAI,CAAC,MAAM;EAAC,SAAS;EAAC,KAAK,EAAC,IAAI;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GAC/B;EAAG,SAAS,EAAC,MAAM;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,GAAEA,WAAW,CAAK,CACzB,CAEjB,CACI,CAEV;AAED,eAAeJ,YAAY"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}