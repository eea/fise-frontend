{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { GET_ALL_ATTACHMENTS, CREATE_ATTACHMENT } from '../constants';\nimport { flattenToAppURL } from '@plone/volto/helpers';\nconst initialState = {\n  error: null,\n  attachments: [],\n  loaded: false,\n  loading: false\n};\n\n/**\n * Data providers reducer.\n * @function mosaic_settings\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function attachments(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_ALL_ATTACHMENTS}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case `${GET_ALL_ATTACHMENTS}_SUCCESS`:\n      // console.log('Success getting attachments', action.result);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        attachments: action.result.items.map(item => _objectSpread(_objectSpread({}, item), {}, {\n          url: flattenToAppURL(item['@id'])\n        })),\n        loaded: true,\n        loading: false\n      });\n    case `${GET_ALL_ATTACHMENTS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        attachments: [],\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}\nconst createInitialState = {\n  error: null,\n  created_attachment: null,\n  loaded: false,\n  loading: false\n};\nexport function create_attachment(state = createInitialState, action = {}) {\n  switch (action.type) {\n    case `${CREATE_ATTACHMENT}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        created_attachment: null,\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case `${CREATE_ATTACHMENT}_SUCCESS`:\n      // console.log('Success creating attachment', action.result);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        created_attachment: action.result,\n        loaded: true,\n        loading: false\n      });\n    case `${CREATE_ATTACHMENT}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        created_attachment: null,\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_ALL_ATTACHMENTS","CREATE_ATTACHMENT","flattenToAppURL","initialState","error","attachments","loaded","loading","state","action","type","result","items","map","item","url","createInitialState","created_attachment","create_attachment"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/reducers/attachments.js"],"sourcesContent":["import { GET_ALL_ATTACHMENTS, CREATE_ATTACHMENT } from '../constants';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nconst initialState = {\n  error: null,\n  attachments: [],\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Data providers reducer.\n * @function mosaic_settings\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function attachments(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_ALL_ATTACHMENTS}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${GET_ALL_ATTACHMENTS}_SUCCESS`:\n      // console.log('Success getting attachments', action.result);\n      return {\n        ...state,\n        error: null,\n        attachments: action.result.items.map((item) => ({\n          ...item,\n          url: flattenToAppURL(item['@id']),\n        })),\n        loaded: true,\n        loading: false,\n      };\n    case `${GET_ALL_ATTACHMENTS}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        attachments: [],\n        loaded: false,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst createInitialState = {\n  error: null,\n  created_attachment: null,\n  loaded: false,\n  loading: false,\n};\n\nexport function create_attachment(state = createInitialState, action = {}) {\n  switch (action.type) {\n    case `${CREATE_ATTACHMENT}_PENDING`:\n      return {\n        ...state,\n        created_attachment: null,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${CREATE_ATTACHMENT}_SUCCESS`:\n      // console.log('Success creating attachment', action.result);\n      return {\n        ...state,\n        error: null,\n        created_attachment: action.result,\n        loaded: true,\n        loading: false,\n      };\n    case `${CREATE_ATTACHMENT}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        created_attachment: null,\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;AAAA,SAASA,mBAAmB,EAAEC,iBAAiB,QAAQ,cAAc;AACrE,SAASC,eAAe,QAAQ,sBAAsB;AAEtD,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,WAAW,EAAE,EAAE;EACfC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASF,WAAW,CAACG,KAAK,GAAGL,YAAY,EAAEM,MAAM,GAAG,CAAC,CAAC,EAAE;EACrE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAM,GAAEV,mBAAoB,UAAS;MACnC,uCACKQ,KAAK;QACRJ,KAAK,EAAE,IAAI;QACXE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAEjB,KAAM,GAAEP,mBAAoB,UAAS;MACnC;MACA,uCACKQ,KAAK;QACRJ,KAAK,EAAE,IAAI;QACXC,WAAW,EAAEI,MAAM,CAACE,MAAM,CAACC,KAAK,CAACC,GAAG,CAAEC,IAAI,oCACrCA,IAAI;UACPC,GAAG,EAAEb,eAAe,CAACY,IAAI,CAAC,KAAK,CAAC;QAAC,EACjC,CAAC;QACHR,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MAAK;IAElB,KAAM,GAAEP,mBAAoB,OAAM;MAChC,uCACKQ,KAAK;QACRJ,KAAK,EAAEK,MAAM,CAACL,KAAK;QACnBC,WAAW,EAAE,EAAE;QACfC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAK;IAGlB;MACE,OAAOC,KAAK;EAAC;AAEnB;AAEA,MAAMQ,kBAAkB,GAAG;EACzBZ,KAAK,EAAE,IAAI;EACXa,kBAAkB,EAAE,IAAI;EACxBX,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,SAASW,iBAAiB,CAACV,KAAK,GAAGQ,kBAAkB,EAAEP,MAAM,GAAG,CAAC,CAAC,EAAE;EACzE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAM,GAAET,iBAAkB,UAAS;MACjC,uCACKO,KAAK;QACRS,kBAAkB,EAAE,IAAI;QACxBb,KAAK,EAAE,IAAI;QACXE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAEjB,KAAM,GAAEN,iBAAkB,UAAS;MACjC;MACA,uCACKO,KAAK;QACRJ,KAAK,EAAE,IAAI;QACXa,kBAAkB,EAAER,MAAM,CAACE,MAAM;QACjCL,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MAAK;IAElB,KAAM,GAAEN,iBAAkB,OAAM;MAC9B,uCACKO,KAAK;QACRJ,KAAK,EAAEK,MAAM,CAACL,KAAK;QACnBa,kBAAkB,EAAE,IAAI;QACxBX,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAK;IAElB;MACE,OAAOC,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}