{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Breadcrumbs/Breadcrumbs.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Breadcrumbs components.\n * @module components/theme/Breadcrumbs/Breadcrumbs\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, Container, Segment } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport { getBreadcrumbs } from '@plone/volto/actions';\nimport { getBaseUrl, hasApiExpander } from '@plone/volto/helpers';\nimport homeSVG from '@plone/volto/icons/home.svg';\nconst messages = defineMessages({\n  home: {\n    \"id\": \"Home\",\n    \"defaultMessage\": \"Home\"\n  },\n  breadcrumbs: {\n    \"id\": \"Breadcrumbs\",\n    \"defaultMessage\": \"Breadcrumbs\"\n  }\n});\n\n/**\n * Breadcrumbs container class.\n */\nexport class BreadcrumbsComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  componentDidMount() {\n    if (!hasApiExpander('breadcrumbs', getBaseUrl(this.props.pathname))) {\n      this.props.getBreadcrumbs(getBaseUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      if (!hasApiExpander('breadcrumbs', getBaseUrl(this.props.pathname))) {\n        this.props.getBreadcrumbs(getBaseUrl(nextProps.pathname));\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return __jsx(Segment, {\n      role: \"navigation\",\n      \"aria-label\": this.props.intl.formatMessage(messages.breadcrumbs),\n      className: \"breadcrumbs\",\n      secondary: true,\n      vertical: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, __jsx(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      to: this.props.root || '/',\n      className: \"section\",\n      title: this.props.intl.formatMessage(messages.home),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, __jsx(Icon, {\n      name: homeSVG,\n      size: \"18px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    })), this.props.items.map((item, index, items) => [__jsx(Breadcrumb.Divider, {\n      key: `divider-${item.url}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }), index < items.length - 1 ? __jsx(Link, {\n      key: item.url,\n      to: item.url,\n      className: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, item.title) : __jsx(Breadcrumb.Section, {\n      key: item.url,\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, item.title)]))));\n  }\n}\n_defineProperty(BreadcrumbsComponent, \"propTypes\", {\n  getBreadcrumbs: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  root: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    url: PropTypes.string\n  })).isRequired\n});\nexport default compose(injectIntl, connect(state => ({\n  items: state.breadcrumbs.items,\n  root: state.breadcrumbs.root\n}), {\n  getBreadcrumbs\n}))(BreadcrumbsComponent);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","Breadcrumb","Container","Segment","defineMessages","injectIntl","Icon","getBreadcrumbs","getBaseUrl","hasApiExpander","homeSVG","messages","home","breadcrumbs","BreadcrumbsComponent","componentDidMount","props","pathname","UNSAFE_componentWillReceiveProps","nextProps","render","intl","formatMessage","root","items","map","item","index","url","length","title","func","isRequired","string","arrayOf","shape","state"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Breadcrumbs/Breadcrumbs.jsx"],"sourcesContent":["/**\n * Breadcrumbs components.\n * @module components/theme/Breadcrumbs/Breadcrumbs\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, Container, Segment } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Icon } from '@plone/volto/components';\nimport { getBreadcrumbs } from '@plone/volto/actions';\nimport { getBaseUrl, hasApiExpander } from '@plone/volto/helpers';\n\nimport homeSVG from '@plone/volto/icons/home.svg';\n\nconst messages = defineMessages({\n  home: {\n    id: 'Home',\n    defaultMessage: 'Home',\n  },\n  breadcrumbs: {\n    id: 'Breadcrumbs',\n    defaultMessage: 'Breadcrumbs',\n  },\n});\n\n/**\n * Breadcrumbs container class.\n */\nexport class BreadcrumbsComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getBreadcrumbs: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    root: PropTypes.string,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        url: PropTypes.string,\n      }),\n    ).isRequired,\n  };\n\n  componentDidMount() {\n    if (!hasApiExpander('breadcrumbs', getBaseUrl(this.props.pathname))) {\n      this.props.getBreadcrumbs(getBaseUrl(this.props.pathname));\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      if (!hasApiExpander('breadcrumbs', getBaseUrl(this.props.pathname))) {\n        this.props.getBreadcrumbs(getBaseUrl(nextProps.pathname));\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Segment\n        role=\"navigation\"\n        aria-label={this.props.intl.formatMessage(messages.breadcrumbs)}\n        className=\"breadcrumbs\"\n        secondary\n        vertical\n      >\n        <Container>\n          <Breadcrumb>\n            <Link\n              to={this.props.root || '/'}\n              className=\"section\"\n              title={this.props.intl.formatMessage(messages.home)}\n            >\n              <Icon name={homeSVG} size=\"18px\" />\n            </Link>\n            {this.props.items.map((item, index, items) => [\n              <Breadcrumb.Divider key={`divider-${item.url}`} />,\n              index < items.length - 1 ? (\n                <Link key={item.url} to={item.url} className=\"section\">\n                  {item.title}\n                </Link>\n              ) : (\n                <Breadcrumb.Section key={item.url} active>\n                  {item.title}\n                </Breadcrumb.Section>\n              ),\n            ])}\n          </Breadcrumb>\n        </Container>\n      </Segment>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      items: state.breadcrumbs.items,\n      root: state.breadcrumbs.root,\n    }),\n    { getBreadcrumbs },\n  ),\n)(BreadcrumbsComponent);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Home","defaultMessage":"Home"},{"id":"Breadcrumbs","defaultMessage":"Breadcrumbs"}]}},"sourceType":"module","externalDependencies":[]}