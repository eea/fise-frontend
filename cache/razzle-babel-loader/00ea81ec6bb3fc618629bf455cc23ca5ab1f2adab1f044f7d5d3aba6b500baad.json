{"ast":null,"code":"import { defineMessages } from 'react-intl';\nvar messages = defineMessages({\n  labelColumn: {\n    \"id\": \"Column\",\n    \"defaultMessage\": \"Column\"\n  },\n  labelDefault: {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  labelColumnTitle: {\n    \"id\": \"Column title\",\n    \"defaultMessage\": \"Column title\"\n  },\n  labelColumnsBlock: {\n    \"id\": \"Columns block\",\n    \"defaultMessage\": \"Columns block\"\n  },\n  labelTitle: {\n    \"id\": \"Title\",\n    \"defaultMessage\": \"Title\"\n  },\n  descrTitle: {\n    \"id\": \"Columns block friendly name\",\n    \"defaultMessage\": \"Columns block friendly name\"\n  },\n  labelColumns: {\n    \"id\": \"Columns\",\n    \"defaultMessage\": \"Columns\"\n  },\n  labelLayout: {\n    \"id\": \"Layout\",\n    \"defaultMessage\": \"Layout\"\n  }\n});\nexport var ColumnSchema = function ColumnSchema(intl) {\n  return {\n    title: intl.formatMessage(messages.labelColumn),\n    fieldsets: [{\n      id: 'default',\n      title: intl.formatMessage(messages.labelDefault),\n      fields: ['column_title']\n    }],\n    properties: {\n      column_title: {\n        title: intl.formatMessage(messages.labelColumnTitle)\n      }\n    },\n    required: []\n  };\n};\n_c = ColumnSchema;\nexport var ColumnsBlockSchema = function ColumnsBlockSchema(intl) {\n  return {\n    title: intl.formatMessage(messages.labelColumnsBlock),\n    fieldsets: [{\n      id: 'default',\n      title: intl.formatMessage(messages.labelDefault),\n      fields: ['title', 'data', 'gridCols']\n    }],\n    properties: {\n      title: {\n        title: intl.formatMessage(messages.labelTitle),\n        description: intl.formatMessage(messages.descrTitle),\n        type: 'string'\n      },\n      data: {\n        title: intl.formatMessage(messages.labelColumns),\n        type: 'columns',\n        schema: ColumnSchema(intl)\n      },\n      gridCols: {\n        title: intl.formatMessage(messages.labelLayout),\n        widget: 'layout_select',\n        choices: []\n      }\n    },\n    required: []\n  };\n};\n_c2 = ColumnsBlockSchema;\nvar _c, _c2;\n$RefreshReg$(_c, \"ColumnSchema\");\n$RefreshReg$(_c2, \"ColumnsBlockSchema\");","map":{"version":3,"names":["defineMessages","messages","labelColumn","labelDefault","labelColumnTitle","labelColumnsBlock","labelTitle","descrTitle","labelColumns","labelLayout","ColumnSchema","intl","title","formatMessage","fieldsets","id","fields","properties","column_title","required","ColumnsBlockSchema","description","type","data","schema","gridCols","widget","choices"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-columns-block/src/ColumnsBlock/schema.js"],"sourcesContent":["import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  labelColumn: {\n    id: 'Column',\n    defaultMessage: 'Column',\n  },\n  labelDefault: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  labelColumnTitle: {\n    id: 'Column title',\n    defaultMessage: 'Column title',\n  },\n  labelColumnsBlock: {\n    id: 'Columns block',\n    defaultMessage: 'Columns block',\n  },\n  labelTitle: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  descrTitle: {\n    id: 'Columns block friendly name',\n    defaultMessage: 'Columns block friendly name',\n  },\n  labelColumns: {\n    id: 'Columns',\n    defaultMessage: 'Columns',\n  },\n  labelLayout: {\n    id: 'Layout',\n    defaultMessage: 'Layout',\n  },\n});\n\nexport const ColumnSchema = (intl) => ({\n  title: intl.formatMessage(messages.labelColumn),\n  fieldsets: [\n    {\n      id: 'default',\n      title: intl.formatMessage(messages.labelDefault),\n      fields: ['column_title'],\n    },\n  ],\n  properties: {\n    column_title: {\n      title: intl.formatMessage(messages.labelColumnTitle),\n    },\n  },\n  required: [],\n});\n\nexport const ColumnsBlockSchema = (intl) => ({\n  title: intl.formatMessage(messages.labelColumnsBlock),\n  fieldsets: [\n    {\n      id: 'default',\n      title: intl.formatMessage(messages.labelDefault),\n      fields: ['title', 'data', 'gridCols'],\n    },\n  ],\n  properties: {\n    title: {\n      title: intl.formatMessage(messages.labelTitle),\n      description: intl.formatMessage(messages.descrTitle),\n      type: 'string',\n    },\n    data: {\n      title: intl.formatMessage(messages.labelColumns),\n      type: 'columns',\n      schema: ColumnSchema(intl),\n    },\n    gridCols: {\n      title: intl.formatMessage(messages.labelLayout),\n      widget: 'layout_select',\n      choices: [],\n    },\n  },\n  required: [],\n});\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,YAAY;AAE3C,IAAMC,QAAQ,GAAGD,cAAc,CAAC;EAC9BE,WAAW;IAAA;IAAA;EAAA,CAGV;EACDC,YAAY;IAAA;IAAA;EAAA,CAGX;EACDC,gBAAgB;IAAA;IAAA;EAAA,CAGf;EACDC,iBAAiB;IAAA;IAAA;EAAA,CAGhB;EACDC,UAAU;IAAA;IAAA;EAAA,CAGT;EACDC,UAAU;IAAA;IAAA;EAAA,CAGT;EACDC,YAAY;IAAA;IAAA;EAAA,CAGX;EACDC,WAAW;IAAA;IAAA;EAAA;AAIb,CAAC,CAAC;AAEF,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,IAAI;EAAA,OAAM;IACrCC,KAAK,EAAED,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACC,WAAW,CAAC;IAC/CY,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbH,KAAK,EAAED,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACE,YAAY,CAAC;MAChDa,MAAM,EAAE,CAAC,cAAc;IACzB,CAAC,CACF;IACDC,UAAU,EAAE;MACVC,YAAY,EAAE;QACZN,KAAK,EAAED,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACG,gBAAgB;MACrD;IACF,CAAC;IACDe,QAAQ,EAAE;EACZ,CAAC;AAAA,CAAC;AAAC,KAfUT,YAAY;AAiBzB,OAAO,IAAMU,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIT,IAAI;EAAA,OAAM;IAC3CC,KAAK,EAAED,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACI,iBAAiB,CAAC;IACrDS,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbH,KAAK,EAAED,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACE,YAAY,CAAC;MAChDa,MAAM,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,UAAU;IACtC,CAAC,CACF;IACDC,UAAU,EAAE;MACVL,KAAK,EAAE;QACLA,KAAK,EAAED,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACK,UAAU,CAAC;QAC9Ce,WAAW,EAAEV,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACM,UAAU,CAAC;QACpDe,IAAI,EAAE;MACR,CAAC;MACDC,IAAI,EAAE;QACJX,KAAK,EAAED,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACO,YAAY,CAAC;QAChDc,IAAI,EAAE,SAAS;QACfE,MAAM,EAAEd,YAAY,CAACC,IAAI;MAC3B,CAAC;MACDc,QAAQ,EAAE;QACRb,KAAK,EAAED,IAAI,CAACE,aAAa,CAACZ,QAAQ,CAACQ,WAAW,CAAC;QAC/CiB,MAAM,EAAE,eAAe;QACvBC,OAAO,EAAE;MACX;IACF,CAAC;IACDR,QAAQ,EAAE;EACZ,CAAC;AAAA,CAAC;AAAC,MA3BUC,kBAAkB;AAAA;AAAA;AAAA"},"metadata":{"react-intl":{"messages":[{"id":"Column","defaultMessage":"Column"},{"id":"Default","defaultMessage":"Default"},{"id":"Column title","defaultMessage":"Column title"},{"id":"Columns block","defaultMessage":"Columns block"},{"id":"Title","defaultMessage":"Title"},{"id":"Columns block friendly name","defaultMessage":"Columns block friendly name"},{"id":"Columns","defaultMessage":"Columns"},{"id":"Layout","defaultMessage":"Layout"}]}},"sourceType":"module","externalDependencies":[]}