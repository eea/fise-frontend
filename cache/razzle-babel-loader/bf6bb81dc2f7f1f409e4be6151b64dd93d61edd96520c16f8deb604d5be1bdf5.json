{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _find from \"lodash/find\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Toolbar/More.jsx\";\nvar __jsx = React.createElement;\n/**\n * More component.\n * @module components/manage/Toolbar/More\n */\n\nimport React, { Component } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nimport { Pluggable, Plug } from '@plone/volto/components/manage/Pluggable';\nimport { FormattedDate, Icon, Display, Workflow } from '@plone/volto/components';\nimport { applyWorkingCopy, createWorkingCopy, removeWorkingCopy } from '@plone/volto/actions';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport rightArrowSVG from '@plone/volto/icons/right-key.svg';\nimport userSVG from '@plone/volto/icons/user.svg';\nimport applySVG from '@plone/volto/icons/ready.svg';\nimport removeSVG from '@plone/volto/icons/circle-dismiss.svg';\nvar messages = defineMessages({\n  personalTools: {\n    \"id\": \"Personal tools\",\n    \"defaultMessage\": \"Personal tools\"\n  },\n  history: {\n    \"id\": \"History\",\n    \"defaultMessage\": \"History\"\n  },\n  sharing: {\n    \"id\": \"Sharing\",\n    \"defaultMessage\": \"Sharing\"\n  },\n  aliases: {\n    \"id\": \"URL Management\",\n    \"defaultMessage\": \"URL Management\"\n  },\n  ManageTranslations: {\n    \"id\": \"Manage Translations\",\n    \"defaultMessage\": \"Manage Translations\"\n  },\n  manageContent: {\n    \"id\": \"Manage content\\u2026\",\n    \"defaultMessage\": \"Manage content\\u2026\"\n  },\n  CreateWorkingCopy: {\n    \"id\": \"Create working copy\",\n    \"defaultMessage\": \"Create working copy\"\n  },\n  applyWorkingCopy: {\n    \"id\": \"Apply working copy\",\n    \"defaultMessage\": \"Apply working copy\"\n  },\n  removeWorkingCopy: {\n    \"id\": \"Remove working copy\",\n    \"defaultMessage\": \"Remove working copy\"\n  },\n  viewWorkingCopy: {\n    \"id\": \"View working copy\",\n    \"defaultMessage\": \"View working copy\"\n  },\n  workingAppliedTitle: {\n    \"id\": \"Changes applied.\",\n    \"defaultMessage\": \"Changes applied\"\n  },\n  workingCopyAppliedBy: {\n    \"id\": \"Made by {creator} on {date}. This is not a working copy anymore, but the main content.\",\n    \"defaultMessage\": \"Made by {creator} on {date}. This is not a working copy anymore, but the main content.\"\n  },\n  workingCopyRemovedTitle: {\n    \"id\": \"The working copy was discarded\",\n    \"defaultMessage\": \"The working copy was discarded\"\n  },\n  Unauthorized: {\n    \"id\": \"Unauthorized\",\n    \"defaultMessage\": \"Unauthorized\"\n  },\n  workingCopyErrorUnauthorized: {\n    \"id\": \"workingCopyErrorUnauthorized\",\n    \"defaultMessage\": \"You are not authorized to perform this operation.\"\n  },\n  Error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  workingCopyGenericError: {\n    \"id\": \"workingCopyGenericError\",\n    \"defaultMessage\": \"An error occurred while performing this operation.\"\n  }\n});\n\n/**\n * More container class.\n * @class More\n * @extends Component\n */\nvar More = /*#__PURE__*/function (_Component) {\n  _inherits(More, _Component);\n  var _super = _createSuper(More);\n  function More() {\n    var _this;\n    _classCallCheck(this, More);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      openManageTranslations: false,\n      pushed: false\n    });\n    _defineProperty(_assertThisInitialized(_this), \"push\", function (selector) {\n      _this.setState(function () {\n        return {\n          pushed: true\n        };\n      });\n      _this.props.loadComponent(selector);\n      document.removeEventListener('mousedown', _this.handleClickOutside, false);\n    });\n    return _this;\n  }\n  _createClass(More, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var erroredAction = '';\n      if (prevProps.workingCopy.apply.loading && this.props.workingCopy.apply.error) {\n        erroredAction = 'apply';\n      } else if (prevProps.workingCopy.create.loading && this.props.workingCopy.create.error) {\n        erroredAction = 'create';\n      } else if (prevProps.workingCopy.remove.loading && this.props.workingCopy.remove.error) {\n        erroredAction = 'remove';\n      }\n      if (erroredAction) {\n        var errorStatus = this.props.workingCopy[erroredAction].error.status;\n        if (errorStatus === 401 || errorStatus === 403) {\n          toast.error(__jsx(Toast, {\n            error: true,\n            title: this.props.intl.formatMessage(messages.Unauthorized),\n            content: this.props.intl.formatMessage(messages.workingCopyErrorUnauthorized),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 11\n            }\n          }), {\n            toastId: 'workingCopyErrorUnauthorized',\n            autoClose: 10000\n          });\n        } else {\n          toast.error(__jsx(Toast, {\n            error: true,\n            title: this.props.intl.formatMessage(messages.Error),\n            content: this.props.intl.formatMessage(messages.workingCopyGenericError),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 11\n            }\n          }), {\n            toastId: 'workingCopyGenericError',\n            autoClose: 10000\n          });\n        }\n      }\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var path = getBaseUrl(this.props.pathname);\n      var editAction = _find(this.props.actions.object, {\n        id: 'edit'\n      });\n      var historyAction = _find(this.props.actions.object, {\n        id: 'history'\n      });\n      var sharingAction = _find(this.props.actions.object, {\n        id: 'local_roles'\n      });\n      var aliasesAction = _find(this.props.actions.object_buttons, {\n        id: 'redirection'\n      });\n      var _this$props = this.props,\n        content = _this$props.content,\n        intl = _this$props.intl;\n      var dateOptions = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      return __jsx(\"div\", {\n        className: \"menu-more pastanaga-menu\",\n        style: {\n          flex: this.props.theToolbar.current ? \"0 0 \".concat(this.props.theToolbar.current.getBoundingClientRect().width, \"px\") : null\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 7\n        }\n      }, __jsx(\"header\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }\n      }, this.props.content.title), __jsx(\"button\", {\n        className: \"more-user\",\n        \"aria-label\": this.props.intl.formatMessage(messages.personalTools),\n        onClick: function onClick() {\n          return _this2.push('personalTools');\n        },\n        tabIndex: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }\n      }, __jsx(Icon, {\n        name: userSVG,\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.personalTools),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }\n      }))), __jsx(\"div\", {\n        className: \"pastanaga-menu-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 9\n        }\n      }, __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }\n      }, __jsx(Pluggable, {\n        name: \"toolbar-more-menu-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }\n      }), __jsx(Plug, {\n        pluggable: \"toolbar-more-menu-list\",\n        id: \"state\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }\n      }, this.props.content['@type'] !== 'Plone Site' &&\n      // Plone Site does not have workflow\n      __jsx(\"li\", {\n        className: \"state-select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }\n      }, __jsx(Workflow, {\n        pathname: path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 19\n        }\n      }))), __jsx(Plug, {\n        pluggable: \"toolbar-more-menu-list\",\n        id: \"view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }\n      }, this.props.content['@type'] !== 'Plone Site' &&\n      // Plone Site does not have view (yet)\n      __jsx(\"li\", {\n        className: \"display-select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }\n      }, editAction && __jsx(Display, {\n        pathname: path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 34\n        }\n      }))), __jsx(Plug, {\n        pluggable: \"toolbar-more-menu-list\",\n        id: \"history\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }\n      }, this.props.content['@type'] !== 'Plone Site' &&\n      // Plone Site does not have history (yet)\n      __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }\n      }, __jsx(Link, {\n        to: \"\".concat(path, \"/historyview\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 19\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }\n      }, __jsx(\"span\", {\n        className: \"pastanaga-menu-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 23\n        }\n      }, (historyAction === null || historyAction === void 0 ? void 0 : historyAction.title) || this.props.intl.formatMessage(messages.history)), __jsx(\"span\", {\n        className: \"pastanaga-menu-value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 23\n        }\n      })), __jsx(Icon, {\n        name: rightArrowSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }\n      })))), __jsx(Plug, {\n        pluggable: \"toolbar-more-menu-list\",\n        id: \"sharing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }\n      }, sharingAction && __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }\n      }, __jsx(Link, {\n        to: \"\".concat(path, \"/sharing\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 19\n        }\n      }, this.props.intl.formatMessage(messages.sharing), __jsx(Icon, {\n        name: rightArrowSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }\n      })))), __jsx(Plug, {\n        pluggable: \"toolbar-more-menu-list\",\n        id: \"aliases\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }\n      }, aliasesAction && __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 17\n        }\n      }, __jsx(Link, {\n        to: \"\".concat(path, \"/aliases\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 19\n        }\n      }, this.props.intl.formatMessage(messages.aliases), __jsx(Icon, {\n        name: rightArrowSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }\n      })))))), __jsx(Pluggable, {\n        name: \"toolbar-more-manage-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 9\n        }\n      }, function (pluggables) {\n        return __jsx(React.Fragment, null, pluggables.length > 0 && __jsx(React.Fragment, null, __jsx(\"header\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 19\n          }\n        }, __jsx(\"h2\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 21\n          }\n        }, _this2.props.intl.formatMessage(messages.manageContent))), __jsx(\"div\", {\n          className: \"pastanaga-menu-list\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 19\n          }\n        }, __jsx(\"ul\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 21\n          }\n        }, pluggables.map(function (p) {\n          return __jsx(React.Fragment, null, p());\n        })))));\n      }), config.settings.hasWorkingCopySupport && this.props.content['@type'] !== 'Plone Site' && __jsx(React.Fragment, null, !this.props.content.working_copy && __jsx(Plug, {\n        pluggable: \"toolbar-more-manage-content\",\n        id: \"workingcopy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 17\n        }\n      }, __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 19\n        }\n      }, __jsx(\"button\", {\n        \"aria-label\": this.props.intl.formatMessage(messages.CreateWorkingCopy),\n        onClick: function onClick() {\n          _this2.props.createWorkingCopy(path).then(function (response) {\n            _this2.props.history.push(flattenToAppURL(response['@id']));\n            _this2.props.closeMenu();\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }\n      }, this.props.intl.formatMessage(messages.CreateWorkingCopy), __jsx(Icon, {\n        name: rightArrowSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 23\n        }\n      })))), this.props.content.working_copy && this.props.content.working_copy_of && __jsx(Plug, {\n        pluggable: \"toolbar-more-manage-content\",\n        id: \"workingcopy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 19\n        }\n      }, __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }\n      }, __jsx(\"button\", {\n        \"aria-label\": this.props.intl.formatMessage(messages.applyWorkingCopy),\n        onClick: function onClick() {\n          _this2.props.applyWorkingCopy(path).then(function (response) {\n            var _content$working_copy, _content$working_copy2;\n            _this2.props.history.push(flattenToAppURL(_this2.props.content.working_copy_of['@id']));\n            _this2.props.closeMenu();\n            toast.info(__jsx(Toast, {\n              info: true,\n              title: intl.formatMessage(messages.workingAppliedTitle),\n              content: intl.formatMessage(messages.workingCopyAppliedBy, {\n                creator: (_content$working_copy = content.working_copy) === null || _content$working_copy === void 0 ? void 0 : _content$working_copy.creator_name,\n                date: __jsx(FormattedDate, {\n                  date: (_content$working_copy2 = content.working_copy) === null || _content$working_copy2 === void 0 ? void 0 : _content$working_copy2.created,\n                  format: dateOptions,\n                  __self: _this2,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 39\n                  }\n                })\n              }),\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 31\n              }\n            }), {\n              toastId: 'workingcopyapplyinfo',\n              autoClose: 10000\n            });\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 23\n        }\n      }, this.props.intl.formatMessage(messages.applyWorkingCopy), __jsx(Icon, {\n        name: applySVG,\n        size: \"24px\",\n        title: this.props.intl.formatMessage(messages.applyWorkingCopy),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 25\n        }\n      }))), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 21\n        }\n      }, __jsx(\"button\", {\n        \"aria-label\": this.props.intl.formatMessage(messages.removeWorkingCopy),\n        onClick: function onClick() {\n          _this2.props.removeWorkingCopy(path).then(function (response) {\n            _this2.props.history.push(flattenToAppURL(_this2.props.content.working_copy_of['@id']));\n            _this2.props.closeMenu();\n            toast.info(__jsx(Toast, {\n              info: true,\n              title: intl.formatMessage(messages.workingCopyRemovedTitle),\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 33\n              }\n            }), {\n              toastId: 'workingcopyremovednotice',\n              autoClose: 10000\n            });\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 23\n        }\n      }, this.props.intl.formatMessage(messages.removeWorkingCopy), __jsx(Icon, {\n        name: removeSVG,\n        size: \"24px\",\n        color: \"#e40166\",\n        title: this.props.intl.formatMessage(messages.removeWorkingCopy),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 25\n        }\n      })))), this.props.content.working_copy && !this.props.content.working_copy_of && __jsx(Plug, {\n        pluggable: \"toolbar-more-manage-content\",\n        id: \"workingcopy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 19\n        }\n      }, __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 21\n        }\n      }, __jsx(Link, {\n        to: flattenToAppURL(this.props.content.working_copy['@id']),\n        onClick: function onClick() {\n          return _this2.props.closeMenu();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 23\n        }\n      }, this.props.intl.formatMessage(messages.viewWorkingCopy), __jsx(Icon, {\n        name: rightArrowSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 25\n        }\n      }))))), editAction && config.settings.isMultilingual && __jsx(Plug, {\n        pluggable: \"toolbar-more-manage-content\",\n        id: \"multilingual\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }\n      }, __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }\n      }, __jsx(Link, {\n        to: \"\".concat(path, \"/manage-translations\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 15\n        }\n      }, this.props.intl.formatMessage(messages.ManageTranslations), __jsx(Icon, {\n        name: rightArrowSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }]);\n  return More;\n}(Component);\n_defineProperty(More, \"propTypes\", {\n  actions: PropTypes.shape({\n    object: PropTypes.arrayOf(PropTypes.object),\n    object_buttons: PropTypes.arrayOf(PropTypes.object),\n    user: PropTypes.arrayOf(PropTypes.object)\n  }),\n  pathname: PropTypes.string.isRequired,\n  content: PropTypes.shape({\n    title: PropTypes.string,\n    '@type': PropTypes.string,\n    is_folderish: PropTypes.bool,\n    review_state: PropTypes.string\n  }),\n  loadComponent: PropTypes.func.isRequired,\n  closeMenu: PropTypes.func.isRequired\n});\n_defineProperty(More, \"defaultProps\", {\n  actions: null,\n  content: null\n});\nexport default compose(injectIntl, withRouter, connect(function (state, props) {\n  return {\n    actions: state.actions.actions,\n    pathname: props.pathname,\n    content: state.content.data,\n    lang: state.intl.locale,\n    workingCopy: state.workingCopy\n  };\n}, {\n  applyWorkingCopy: applyWorkingCopy,\n  createWorkingCopy: createWorkingCopy,\n  removeWorkingCopy: removeWorkingCopy\n}))(More);","map":{"version":3,"names":["React","Component","defineMessages","injectIntl","PropTypes","connect","compose","Link","withRouter","toast","Toast","Pluggable","Plug","FormattedDate","Icon","Display","Workflow","applyWorkingCopy","createWorkingCopy","removeWorkingCopy","flattenToAppURL","getBaseUrl","config","rightArrowSVG","userSVG","applySVG","removeSVG","messages","personalTools","history","sharing","aliases","ManageTranslations","manageContent","CreateWorkingCopy","viewWorkingCopy","workingAppliedTitle","workingCopyAppliedBy","workingCopyRemovedTitle","Unauthorized","workingCopyErrorUnauthorized","Error","workingCopyGenericError","More","openManageTranslations","pushed","selector","setState","props","loadComponent","document","removeEventListener","handleClickOutside","prevProps","prevState","erroredAction","workingCopy","apply","loading","error","create","remove","errorStatus","status","intl","formatMessage","toastId","autoClose","path","pathname","editAction","actions","object","id","historyAction","sharingAction","aliasesAction","object_buttons","content","dateOptions","year","month","day","flex","theToolbar","current","getBoundingClientRect","width","title","push","pluggables","length","map","p","settings","hasWorkingCopySupport","working_copy","then","response","closeMenu","working_copy_of","info","creator","creator_name","date","created","isMultilingual","shape","arrayOf","user","string","isRequired","is_folderish","bool","review_state","func","state","data","lang","locale"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Toolbar/More.jsx"],"sourcesContent":["/**\n * More component.\n * @module components/manage/Toolbar/More\n */\n\nimport React, { Component } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { find } from 'lodash';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nimport { Pluggable, Plug } from '@plone/volto/components/manage/Pluggable';\nimport {\n  FormattedDate,\n  Icon,\n  Display,\n  Workflow,\n} from '@plone/volto/components';\nimport {\n  applyWorkingCopy,\n  createWorkingCopy,\n  removeWorkingCopy,\n} from '@plone/volto/actions';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nimport rightArrowSVG from '@plone/volto/icons/right-key.svg';\nimport userSVG from '@plone/volto/icons/user.svg';\nimport applySVG from '@plone/volto/icons/ready.svg';\nimport removeSVG from '@plone/volto/icons/circle-dismiss.svg';\n\nconst messages = defineMessages({\n  personalTools: {\n    id: 'Personal tools',\n    defaultMessage: 'Personal tools',\n  },\n  history: {\n    id: 'History',\n    defaultMessage: 'History',\n  },\n  sharing: {\n    id: 'Sharing',\n    defaultMessage: 'Sharing',\n  },\n  aliases: {\n    id: 'URL Management',\n    defaultMessage: 'URL Management',\n  },\n  ManageTranslations: {\n    id: 'Manage Translations',\n    defaultMessage: 'Manage Translations',\n  },\n  manageContent: {\n    id: 'Manage content…',\n    defaultMessage: 'Manage content…',\n  },\n  CreateWorkingCopy: {\n    id: 'Create working copy',\n    defaultMessage: 'Create working copy',\n  },\n  applyWorkingCopy: {\n    id: 'Apply working copy',\n    defaultMessage: 'Apply working copy',\n  },\n  removeWorkingCopy: {\n    id: 'Remove working copy',\n    defaultMessage: 'Remove working copy',\n  },\n  viewWorkingCopy: {\n    id: 'View working copy',\n    defaultMessage: 'View working copy',\n  },\n  workingAppliedTitle: {\n    id: 'Changes applied.',\n    defaultMessage: 'Changes applied',\n  },\n  workingCopyAppliedBy: {\n    id:\n      'Made by {creator} on {date}. This is not a working copy anymore, but the main content.',\n    defaultMessage:\n      'Made by {creator} on {date}. This is not a working copy anymore, but the main content.',\n  },\n  workingCopyRemovedTitle: {\n    id: 'The working copy was discarded',\n    defaultMessage: 'The working copy was discarded',\n  },\n  Unauthorized: {\n    id: 'Unauthorized',\n    defaultMessage: 'Unauthorized',\n  },\n  workingCopyErrorUnauthorized: {\n    id: 'workingCopyErrorUnauthorized',\n    defaultMessage: 'You are not authorized to perform this operation.',\n  },\n  Error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  workingCopyGenericError: {\n    id: 'workingCopyGenericError',\n    defaultMessage: 'An error occurred while performing this operation.',\n  },\n});\n\n/**\n * More container class.\n * @class More\n * @extends Component\n */\nclass More extends Component {\n  static propTypes = {\n    actions: PropTypes.shape({\n      object: PropTypes.arrayOf(PropTypes.object),\n      object_buttons: PropTypes.arrayOf(PropTypes.object),\n      user: PropTypes.arrayOf(PropTypes.object),\n    }),\n    pathname: PropTypes.string.isRequired,\n    content: PropTypes.shape({\n      title: PropTypes.string,\n      '@type': PropTypes.string,\n      is_folderish: PropTypes.bool,\n      review_state: PropTypes.string,\n    }),\n    loadComponent: PropTypes.func.isRequired,\n    closeMenu: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    actions: null,\n    content: null,\n  };\n  state = {\n    openManageTranslations: false,\n    pushed: false,\n  };\n\n  push = (selector) => {\n    this.setState(() => ({\n      pushed: true,\n    }));\n    this.props.loadComponent(selector);\n    document.removeEventListener('mousedown', this.handleClickOutside, false);\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    let erroredAction = '';\n    if (\n      prevProps.workingCopy.apply.loading &&\n      this.props.workingCopy.apply.error\n    ) {\n      erroredAction = 'apply';\n    } else if (\n      prevProps.workingCopy.create.loading &&\n      this.props.workingCopy.create.error\n    ) {\n      erroredAction = 'create';\n    } else if (\n      prevProps.workingCopy.remove.loading &&\n      this.props.workingCopy.remove.error\n    ) {\n      erroredAction = 'remove';\n    }\n\n    if (erroredAction) {\n      const errorStatus = this.props.workingCopy[erroredAction].error.status;\n      if (errorStatus === 401 || errorStatus === 403) {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.Unauthorized)}\n            content={this.props.intl.formatMessage(\n              messages.workingCopyErrorUnauthorized,\n            )}\n          />,\n          {\n            toastId: 'workingCopyErrorUnauthorized',\n            autoClose: 10000,\n          },\n        );\n      } else {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.Error)}\n            content={this.props.intl.formatMessage(\n              messages.workingCopyGenericError,\n            )}\n          />,\n          {\n            toastId: 'workingCopyGenericError',\n            autoClose: 10000,\n          },\n        );\n      }\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const path = getBaseUrl(this.props.pathname);\n    const editAction = find(this.props.actions.object, { id: 'edit' });\n    const historyAction = find(this.props.actions.object, { id: 'history' });\n    const sharingAction = find(this.props.actions.object, {\n      id: 'local_roles',\n    });\n\n    const aliasesAction = find(this.props.actions.object_buttons, {\n      id: 'redirection',\n    });\n    const { content, intl } = this.props;\n\n    const dateOptions = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    };\n\n    return (\n      <div\n        className=\"menu-more pastanaga-menu\"\n        style={{\n          flex: this.props.theToolbar.current\n            ? `0 0 ${\n                this.props.theToolbar.current.getBoundingClientRect().width\n              }px`\n            : null,\n        }}\n      >\n        <header>\n          <h2>{this.props.content.title}</h2>\n          <button\n            className=\"more-user\"\n            aria-label={this.props.intl.formatMessage(messages.personalTools)}\n            onClick={() => this.push('personalTools')}\n            tabIndex={0}\n          >\n            <Icon\n              name={userSVG}\n              size=\"30px\"\n              title={this.props.intl.formatMessage(messages.personalTools)}\n            />\n          </button>\n        </header>\n        <div className=\"pastanaga-menu-list\">\n          <ul>\n            <Pluggable name=\"toolbar-more-menu-list\" />\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"state\">\n              {this.props.content['@type'] !== 'Plone Site' && (\n                // Plone Site does not have workflow\n                <li className=\"state-select\">\n                  <Workflow pathname={path} />\n                </li>\n              )}\n            </Plug>\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"view\">\n              {this.props.content['@type'] !== 'Plone Site' && (\n                // Plone Site does not have view (yet)\n                <li className=\"display-select\">\n                  {editAction && <Display pathname={path} />}\n                </li>\n              )}\n            </Plug>\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"history\">\n              {this.props.content['@type'] !== 'Plone Site' && (\n                // Plone Site does not have history (yet)\n                <li>\n                  <Link to={`${path}/historyview`}>\n                    <div>\n                      <span className=\"pastanaga-menu-label\">\n                        {historyAction?.title ||\n                          this.props.intl.formatMessage(messages.history)}\n                      </span>\n                      <span className=\"pastanaga-menu-value\" />\n                    </div>\n                    <Icon name={rightArrowSVG} size=\"24px\" />\n                  </Link>\n                </li>\n              )}\n            </Plug>\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"sharing\">\n              {sharingAction && (\n                <li>\n                  <Link to={`${path}/sharing`}>\n                    {this.props.intl.formatMessage(messages.sharing)}\n                    <Icon name={rightArrowSVG} size=\"24px\" />\n                  </Link>\n                </li>\n              )}\n            </Plug>\n            <Plug pluggable=\"toolbar-more-menu-list\" id=\"aliases\">\n              {aliasesAction && (\n                <li>\n                  <Link to={`${path}/aliases`}>\n                    {this.props.intl.formatMessage(messages.aliases)}\n                    <Icon name={rightArrowSVG} size=\"24px\" />\n                  </Link>\n                </li>\n              )}\n            </Plug>\n          </ul>\n        </div>\n        <Pluggable name=\"toolbar-more-manage-content\">\n          {(pluggables) => (\n            <>\n              {pluggables.length > 0 && (\n                <>\n                  <header>\n                    <h2>\n                      {this.props.intl.formatMessage(messages.manageContent)}\n                    </h2>\n                  </header>\n                  <div className=\"pastanaga-menu-list\">\n                    <ul>\n                      {pluggables.map((p) => (\n                        <>{p()}</>\n                      ))}\n                    </ul>\n                  </div>\n                </>\n              )}\n            </>\n          )}\n        </Pluggable>\n        {config.settings.hasWorkingCopySupport &&\n          this.props.content['@type'] !== 'Plone Site' && (\n            <>\n              {!this.props.content.working_copy && (\n                <Plug pluggable=\"toolbar-more-manage-content\" id=\"workingcopy\">\n                  <li>\n                    <button\n                      aria-label={this.props.intl.formatMessage(\n                        messages.CreateWorkingCopy,\n                      )}\n                      onClick={() => {\n                        this.props.createWorkingCopy(path).then((response) => {\n                          this.props.history.push(\n                            flattenToAppURL(response['@id']),\n                          );\n                          this.props.closeMenu();\n                        });\n                      }}\n                    >\n                      {this.props.intl.formatMessage(\n                        messages.CreateWorkingCopy,\n                      )}\n\n                      <Icon name={rightArrowSVG} size=\"24px\" />\n                    </button>\n                  </li>\n                </Plug>\n              )}\n              {this.props.content.working_copy &&\n                this.props.content.working_copy_of && (\n                  <Plug\n                    pluggable=\"toolbar-more-manage-content\"\n                    id=\"workingcopy\"\n                  >\n                    <li>\n                      <button\n                        aria-label={this.props.intl.formatMessage(\n                          messages.applyWorkingCopy,\n                        )}\n                        onClick={() => {\n                          this.props.applyWorkingCopy(path).then((response) => {\n                            this.props.history.push(\n                              flattenToAppURL(\n                                this.props.content.working_copy_of['@id'],\n                              ),\n                            );\n                            this.props.closeMenu();\n                            toast.info(\n                              <Toast\n                                info\n                                title={intl.formatMessage(\n                                  messages.workingAppliedTitle,\n                                )}\n                                content={intl.formatMessage(\n                                  messages.workingCopyAppliedBy,\n                                  {\n                                    creator: content.working_copy?.creator_name,\n                                    date: (\n                                      <FormattedDate\n                                        date={content.working_copy?.created}\n                                        format={dateOptions}\n                                      />\n                                    ),\n                                  },\n                                )}\n                              />,\n                              {\n                                toastId: 'workingcopyapplyinfo',\n                                autoClose: 10000,\n                              },\n                            );\n                          });\n                        }}\n                      >\n                        {this.props.intl.formatMessage(\n                          messages.applyWorkingCopy,\n                        )}\n\n                        <Icon\n                          name={applySVG}\n                          size=\"24px\"\n                          title={this.props.intl.formatMessage(\n                            messages.applyWorkingCopy,\n                          )}\n                        />\n                      </button>\n                    </li>\n                    <li>\n                      <button\n                        aria-label={this.props.intl.formatMessage(\n                          messages.removeWorkingCopy,\n                        )}\n                        onClick={() => {\n                          this.props\n                            .removeWorkingCopy(path)\n                            .then((response) => {\n                              this.props.history.push(\n                                flattenToAppURL(\n                                  this.props.content.working_copy_of['@id'],\n                                ),\n                              );\n                              this.props.closeMenu();\n                              toast.info(\n                                <Toast\n                                  info\n                                  title={intl.formatMessage(\n                                    messages.workingCopyRemovedTitle,\n                                  )}\n                                />,\n                                {\n                                  toastId: 'workingcopyremovednotice',\n                                  autoClose: 10000,\n                                },\n                              );\n                            });\n                        }}\n                      >\n                        {this.props.intl.formatMessage(\n                          messages.removeWorkingCopy,\n                        )}\n\n                        <Icon\n                          name={removeSVG}\n                          size=\"24px\"\n                          color=\"#e40166\"\n                          title={this.props.intl.formatMessage(\n                            messages.removeWorkingCopy,\n                          )}\n                        />\n                      </button>\n                    </li>\n                  </Plug>\n                )}\n              {this.props.content.working_copy &&\n                !this.props.content.working_copy_of && (\n                  <Plug\n                    pluggable=\"toolbar-more-manage-content\"\n                    id=\"workingcopy\"\n                  >\n                    <li>\n                      <Link\n                        to={flattenToAppURL(\n                          this.props.content.working_copy['@id'],\n                        )}\n                        onClick={() => this.props.closeMenu()}\n                      >\n                        {this.props.intl.formatMessage(\n                          messages.viewWorkingCopy,\n                        )}\n                        <Icon name={rightArrowSVG} size=\"24px\" />\n                      </Link>\n                    </li>\n                  </Plug>\n                )}\n            </>\n          )}\n        {editAction && config.settings.isMultilingual && (\n          <Plug pluggable=\"toolbar-more-manage-content\" id=\"multilingual\">\n            <li>\n              <Link to={`${path}/manage-translations`}>\n                {this.props.intl.formatMessage(messages.ManageTranslations)}\n\n                <Icon name={rightArrowSVG} size=\"24px\" />\n              </Link>\n            </li>\n          </Plug>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  withRouter,\n  connect(\n    (state, props) => ({\n      actions: state.actions.actions,\n      pathname: props.pathname,\n      content: state.content.data,\n      lang: state.intl.locale,\n      workingCopy: state.workingCopy,\n    }),\n    { applyWorkingCopy, createWorkingCopy, removeWorkingCopy },\n  ),\n)(More);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Personal tools","defaultMessage":"Personal tools"},{"id":"History","defaultMessage":"History"},{"id":"Sharing","defaultMessage":"Sharing"},{"id":"URL Management","defaultMessage":"URL Management"},{"id":"Manage Translations","defaultMessage":"Manage Translations"},{"id":"Manage content…","defaultMessage":"Manage content…"},{"id":"Create working copy","defaultMessage":"Create working copy"},{"id":"Apply working copy","defaultMessage":"Apply working copy"},{"id":"Remove working copy","defaultMessage":"Remove working copy"},{"id":"View working copy","defaultMessage":"View working copy"},{"id":"Changes applied.","defaultMessage":"Changes applied"},{"id":"Made by {creator} on {date}. This is not a working copy anymore, but the main content.","defaultMessage":"Made by {creator} on {date}. This is not a working copy anymore, but the main content."},{"id":"The working copy was discarded","defaultMessage":"The working copy was discarded"},{"id":"Unauthorized","defaultMessage":"Unauthorized"},{"id":"workingCopyErrorUnauthorized","defaultMessage":"You are not authorized to perform this operation."},{"id":"Error","defaultMessage":"Error"},{"id":"workingCopyGenericError","defaultMessage":"An error occurred while performing this operation."}]}},"sourceType":"module","externalDependencies":[]}