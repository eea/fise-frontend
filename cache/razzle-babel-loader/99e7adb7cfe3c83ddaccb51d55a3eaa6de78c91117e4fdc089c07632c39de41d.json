{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/customizations/volto/components/manage/Blocks/Block/BlocksForm.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport EditBlock from './Edit';\nimport { DragDropList } from '@plone/volto/components';\nimport { getBlocks } from '@plone/volto/helpers';\nimport { addBlock, insertBlock, changeBlock, deleteBlock, moveBlock, mutateBlock, nextBlockId, previousBlockId } from '@plone/volto/helpers';\nimport EditBlockWrapper from './EditBlockWrapper';\nimport { setSidebarTab } from '@plone/volto/actions';\nimport { useDispatch } from 'react-redux';\nimport { useDetectClickOutside } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nconst BlocksForm = props => {\n  const {\n    pathname,\n    onChangeField,\n    properties,\n    onChangeFormData,\n    selectedBlock,\n    multiSelected,\n    onSelectBlock,\n    allowedBlocks,\n    showRestricted,\n    title,\n    description,\n    metadata,\n    manage,\n    children,\n    isMainForm = true,\n    blocksConfig = config.blocks.blocksConfig,\n    editable = true\n  } = props;\n  const blockList = getBlocks(properties);\n  const dispatch = useDispatch();\n  const ClickOutsideListener = () => {\n    onSelectBlock(null);\n    dispatch(setSidebarTab(0));\n  };\n  const ref = useDetectClickOutside({\n    onTriggered: ClickOutsideListener,\n    triggerKeys: ['Escape'],\n    // Disabled feature for now https://github.com/plone/volto/pull/2389#issuecomment-830027413\n    disableClick: true,\n    disableKeys: !isMainForm\n  });\n  const handleKeyDown = (e, index, block, node, {\n    disableEnter = false,\n    disableArrowUp = false,\n    disableArrowDown = false\n  } = {}) => {\n    const isMultipleSelection = e.shiftKey;\n    if (e.key === 'ArrowUp' && !disableArrowUp) {\n      onFocusPreviousBlock(block, node, isMultipleSelection);\n      e.preventDefault();\n    }\n    if (e.key === 'ArrowDown' && !disableArrowDown) {\n      onFocusNextBlock(block, node, isMultipleSelection);\n      e.preventDefault();\n    }\n    if (e.key === 'Enter' && !disableEnter) {\n      onAddBlock(config.settings.defaultBlockType, index + 1);\n      e.preventDefault();\n    }\n  };\n  const onFocusPreviousBlock = (currentBlock, blockNode, isMultipleSelection) => {\n    const prev = previousBlockId(properties, currentBlock);\n    if (prev === null) return;\n    blockNode.blur();\n    onSelectBlock(prev, isMultipleSelection);\n  };\n  const onFocusNextBlock = (currentBlock, blockNode, isMultipleSelection) => {\n    const next = nextBlockId(properties, currentBlock);\n    if (next === null) return;\n    blockNode.blur();\n    onSelectBlock(next, isMultipleSelection);\n  };\n  const onMutateBlock = (id, value) => {\n    const newFormData = mutateBlock(properties, id, value);\n    onChangeFormData(newFormData);\n  };\n  const onInsertBlock = (id, value) => {\n    const [newId, newFormData] = insertBlock(properties, id, value);\n    onChangeFormData(newFormData);\n    return newId;\n  };\n  const onAddBlock = (type, index) => {\n    if (editable) {\n      const [id, newFormData] = addBlock(properties, type, index);\n      onChangeFormData(newFormData);\n      return id;\n    }\n  };\n  const onChangeBlock = (id, value) => {\n    const newFormData = changeBlock(properties, id, value);\n    onChangeFormData(newFormData);\n  };\n  const onDeleteBlock = (id, selectPrev) => {\n    const previous = previousBlockId(properties, id);\n    const newFormData = deleteBlock(properties, id);\n    onChangeFormData(newFormData);\n    onSelectBlock(selectPrev ? previous : null);\n  };\n  const onMoveBlock = (dragIndex, hoverIndex) => {\n    const newFormData = moveBlock(properties, dragIndex, hoverIndex);\n    onChangeFormData(newFormData);\n  };\n  const defaultBlockWrapper = ({\n    draginfo\n  }, editBlock, blockProps) => __jsx(EditBlockWrapper, {\n    draginfo: draginfo,\n    blockProps: blockProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, editBlock);\n  const editBlockWrapper = children || defaultBlockWrapper;\n  return __jsx(\"div\", {\n    className: \"blocks-form\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, __jsx(\"fieldset\", {\n    className: \"invisible\",\n    disabled: !editable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, __jsx(DragDropList, {\n    childList: blockList,\n    onMoveItem: result => {\n      const {\n        source,\n        destination\n      } = result;\n      if (!destination) {\n        return;\n      }\n      const newFormData = moveBlock(properties, source.index, destination.index);\n      onChangeFormData(newFormData);\n      return true;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, dragProps => {\n    const {\n      child,\n      childId,\n      index\n    } = dragProps;\n    const blockProps = {\n      allowedBlocks,\n      showRestricted,\n      block: childId,\n      data: child,\n      handleKeyDown,\n      id: childId,\n      formTitle: title,\n      formDescription: description,\n      index,\n      manage,\n      onAddBlock,\n      onInsertBlock,\n      onChangeBlock,\n      onChangeField,\n      onDeleteBlock,\n      onFocusNextBlock,\n      onFocusPreviousBlock,\n      onMoveBlock,\n      onMutateBlock,\n      onSelectBlock,\n      pathname,\n      metadata,\n      properties,\n      blocksConfig,\n      selected: selectedBlock === childId,\n      multiSelected: multiSelected === null || multiSelected === void 0 ? void 0 : multiSelected.includes(childId),\n      type: child['@type'],\n      editable\n    };\n    return editBlockWrapper(dragProps, __jsx(EditBlock, _extends({\n      key: childId\n    }, blockProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 15\n      }\n    })), blockProps);\n  })));\n};\nexport default BlocksForm;","map":{"version":3,"names":["React","EditBlock","DragDropList","getBlocks","addBlock","insertBlock","changeBlock","deleteBlock","moveBlock","mutateBlock","nextBlockId","previousBlockId","EditBlockWrapper","setSidebarTab","useDispatch","useDetectClickOutside","config","BlocksForm","props","pathname","onChangeField","properties","onChangeFormData","selectedBlock","multiSelected","onSelectBlock","allowedBlocks","showRestricted","title","description","metadata","manage","children","isMainForm","blocksConfig","blocks","editable","blockList","dispatch","ClickOutsideListener","ref","onTriggered","triggerKeys","disableClick","disableKeys","handleKeyDown","e","index","block","node","disableEnter","disableArrowUp","disableArrowDown","isMultipleSelection","shiftKey","key","onFocusPreviousBlock","preventDefault","onFocusNextBlock","onAddBlock","settings","defaultBlockType","currentBlock","blockNode","prev","blur","next","onMutateBlock","id","value","newFormData","onInsertBlock","newId","type","onChangeBlock","onDeleteBlock","selectPrev","previous","onMoveBlock","dragIndex","hoverIndex","defaultBlockWrapper","draginfo","editBlock","blockProps","editBlockWrapper","result","source","destination","dragProps","child","childId","data","formTitle","formDescription","selected","includes"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/customizations/volto/components/manage/Blocks/Block/BlocksForm.jsx"],"sourcesContent":["import React from 'react';\nimport EditBlock from './Edit';\nimport { DragDropList } from '@plone/volto/components';\nimport { getBlocks } from '@plone/volto/helpers';\nimport {\n  addBlock,\n  insertBlock,\n  changeBlock,\n  deleteBlock,\n  moveBlock,\n  mutateBlock,\n  nextBlockId,\n  previousBlockId,\n} from '@plone/volto/helpers';\nimport EditBlockWrapper from './EditBlockWrapper';\nimport { setSidebarTab } from '@plone/volto/actions';\nimport { useDispatch } from 'react-redux';\nimport { useDetectClickOutside } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\n\nconst BlocksForm = (props) => {\n  const {\n    pathname,\n    onChangeField,\n    properties,\n    onChangeFormData,\n    selectedBlock,\n    multiSelected,\n    onSelectBlock,\n    allowedBlocks,\n    showRestricted,\n    title,\n    description,\n    metadata,\n    manage,\n    children,\n    isMainForm = true,\n    blocksConfig = config.blocks.blocksConfig,\n    editable = true,\n  } = props;\n\n  const blockList = getBlocks(properties);\n\n  const dispatch = useDispatch();\n\n  const ClickOutsideListener = () => {\n    onSelectBlock(null);\n    dispatch(setSidebarTab(0));\n  };\n\n  const ref = useDetectClickOutside({\n    onTriggered: ClickOutsideListener,\n    triggerKeys: ['Escape'],\n    // Disabled feature for now https://github.com/plone/volto/pull/2389#issuecomment-830027413\n    disableClick: true,\n    disableKeys: !isMainForm,\n  });\n\n  const handleKeyDown = (\n    e,\n    index,\n    block,\n    node,\n    {\n      disableEnter = false,\n      disableArrowUp = false,\n      disableArrowDown = false,\n    } = {},\n  ) => {\n    const isMultipleSelection = e.shiftKey;\n    if (e.key === 'ArrowUp' && !disableArrowUp) {\n      onFocusPreviousBlock(block, node, isMultipleSelection);\n      e.preventDefault();\n    }\n    if (e.key === 'ArrowDown' && !disableArrowDown) {\n      onFocusNextBlock(block, node, isMultipleSelection);\n      e.preventDefault();\n    }\n    if (e.key === 'Enter' && !disableEnter) {\n      onAddBlock(config.settings.defaultBlockType, index + 1);\n      e.preventDefault();\n    }\n  };\n\n  const onFocusPreviousBlock = (\n    currentBlock,\n    blockNode,\n    isMultipleSelection,\n  ) => {\n    const prev = previousBlockId(properties, currentBlock);\n    if (prev === null) return;\n\n    blockNode.blur();\n\n    onSelectBlock(prev, isMultipleSelection);\n  };\n\n  const onFocusNextBlock = (currentBlock, blockNode, isMultipleSelection) => {\n    const next = nextBlockId(properties, currentBlock);\n    if (next === null) return;\n\n    blockNode.blur();\n\n    onSelectBlock(next, isMultipleSelection);\n  };\n\n  const onMutateBlock = (id, value) => {\n    const newFormData = mutateBlock(properties, id, value);\n    onChangeFormData(newFormData);\n  };\n\n  const onInsertBlock = (id, value) => {\n    const [newId, newFormData] = insertBlock(properties, id, value);\n    onChangeFormData(newFormData);\n    return newId;\n  };\n\n  const onAddBlock = (type, index) => {\n    if (editable) {\n      const [id, newFormData] = addBlock(properties, type, index);\n      onChangeFormData(newFormData);\n      return id;\n    }\n  };\n\n  const onChangeBlock = (id, value) => {\n    const newFormData = changeBlock(properties, id, value);\n    onChangeFormData(newFormData);\n  };\n\n  const onDeleteBlock = (id, selectPrev) => {\n    const previous = previousBlockId(properties, id);\n\n    const newFormData = deleteBlock(properties, id);\n    onChangeFormData(newFormData);\n\n    onSelectBlock(selectPrev ? previous : null);\n  };\n\n  const onMoveBlock = (dragIndex, hoverIndex) => {\n    const newFormData = moveBlock(properties, dragIndex, hoverIndex);\n    onChangeFormData(newFormData);\n  };\n\n  const defaultBlockWrapper = ({ draginfo }, editBlock, blockProps) => (\n    <EditBlockWrapper draginfo={draginfo} blockProps={blockProps}>\n      {editBlock}\n    </EditBlockWrapper>\n  );\n\n  const editBlockWrapper = children || defaultBlockWrapper;\n\n  return (\n    <div className=\"blocks-form\" ref={ref}>\n      <fieldset className=\"invisible\" disabled={!editable}>\n        <DragDropList\n          childList={blockList}\n          onMoveItem={(result) => {\n            const { source, destination } = result;\n            if (!destination) {\n              return;\n            }\n            const newFormData = moveBlock(\n              properties,\n              source.index,\n              destination.index,\n            );\n            onChangeFormData(newFormData);\n            return true;\n          }}\n        >\n          {(dragProps) => {\n            const { child, childId, index } = dragProps;\n            const blockProps = {\n              allowedBlocks,\n              showRestricted,\n              block: childId,\n              data: child,\n              handleKeyDown,\n              id: childId,\n              formTitle: title,\n              formDescription: description,\n              index,\n              manage,\n              onAddBlock,\n              onInsertBlock,\n              onChangeBlock,\n              onChangeField,\n              onDeleteBlock,\n              onFocusNextBlock,\n              onFocusPreviousBlock,\n              onMoveBlock,\n              onMutateBlock,\n              onSelectBlock,\n              pathname,\n              metadata,\n              properties,\n              blocksConfig,\n              selected: selectedBlock === childId,\n              multiSelected: multiSelected?.includes(childId),\n              type: child['@type'],\n              editable,\n            };\n            return editBlockWrapper(\n              dragProps,\n              <EditBlock key={childId} {...blockProps} />,\n              blockProps,\n            );\n          }}\n        </DragDropList>\n      </fieldset>\n    </div>\n  );\n};\n\nexport default BlocksForm;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}