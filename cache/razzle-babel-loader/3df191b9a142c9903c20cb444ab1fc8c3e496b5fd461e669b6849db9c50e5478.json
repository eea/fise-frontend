{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/BlockChooser/BlockChooserSearch.jsx\";\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport { Icon } from '@plone/volto/components';\nimport { defineMessages, useIntl } from 'react-intl';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nconst messages = defineMessages({\n  search: {\n    \"id\": \"Search\",\n    \"defaultMessage\": \"Search\"\n  }\n});\nconst BlockChooserSearch = ({\n  onChange,\n  searchValue\n}) => {\n  const intl = useIntl();\n  const searchInput = useRef(null);\n  return __jsx(Form, {\n    style: {\n      padding: '0.5em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Field, {\n    className: \"searchbox\",\n    style: {\n      borderLeft: 0,\n      height: '2em',\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    \"aria-label\": intl.formatMessage(messages.search),\n    onChange: event => onChange(event.target.value),\n    name: \"SearchableText\",\n    value: searchValue,\n    transparent: true,\n    autoComplete: \"off\",\n    placeholder: intl.formatMessage(messages.search),\n    title: intl.formatMessage(messages.search),\n    autoFocus: true,\n    ref: searchInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), searchValue && __jsx(Button, {\n    className: \"clear-search-button\",\n    \"aria-label\": intl.formatMessage(messages.search),\n    onClick: () => {\n      onChange('');\n      searchInput.current.focus();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    name: clearSVG,\n    size: \"18px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default BlockChooserSearch;","map":{"version":3,"names":["React","useRef","Button","Form","Input","Icon","defineMessages","useIntl","clearSVG","messages","search","BlockChooserSearch","onChange","searchValue","intl","searchInput","padding","borderLeft","height","formatMessage","event","target","value","current","focus"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/BlockChooser/BlockChooserSearch.jsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport { Icon } from '@plone/volto/components';\nimport { defineMessages, useIntl } from 'react-intl';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nconst messages = defineMessages({\n  search: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n});\n\nconst BlockChooserSearch = ({ onChange, searchValue }) => {\n  const intl = useIntl();\n  const searchInput = useRef(null);\n\n  return (\n    <Form style={{ padding: '0.5em' }}>\n      <Form.Field\n        className=\"searchbox\"\n        style={{ borderLeft: 0, height: '2em', padding: 0 }}\n      >\n        {/* eslint-disable jsx-a11y/no-autofocus */}\n        <Input\n          aria-label={intl.formatMessage(messages.search)}\n          onChange={(event) => onChange(event.target.value)}\n          name=\"SearchableText\"\n          value={searchValue}\n          transparent\n          autoComplete=\"off\"\n          placeholder={intl.formatMessage(messages.search)}\n          title={intl.formatMessage(messages.search)}\n          autoFocus\n          ref={searchInput}\n        />\n        {searchValue && (\n          <Button\n            className=\"clear-search-button\"\n            aria-label={intl.formatMessage(messages.search)}\n            onClick={() => {\n              onChange('');\n              searchInput.current.focus();\n            }}\n          >\n            <Icon name={clearSVG} size=\"18px\" />\n          </Button>\n        )}\n      </Form.Field>\n    </Form>\n  );\n};\n\nexport default BlockChooserSearch;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,mBAAmB;AACvD,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,cAAc,EAAEC,OAAO,QAAQ,YAAY;AACpD,OAAOC,QAAQ,MAAM,8BAA8B;AAEnD,MAAMC,QAAQ,GAAGH,cAAc,CAAC;EAC9BI,MAAM;IAAA;IAAA;EAAA;AAIR,CAAC,CAAC;AAEF,MAAMC,kBAAkB,GAAG,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EACxD,MAAMC,IAAI,GAAGP,OAAO,EAAE;EACtB,MAAMQ,WAAW,GAAGd,MAAM,CAAC,IAAI,CAAC;EAEhC,OACE,MAAC,IAAI;IAAC,KAAK,EAAE;MAAEe,OAAO,EAAE;IAAQ,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAChC,MAAC,IAAI,CAAC,KAAK;IACT,SAAS,EAAC,WAAW;IACrB,KAAK,EAAE;MAAEC,UAAU,EAAE,CAAC;MAAEC,MAAM,EAAE,KAAK;MAAEF,OAAO,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAGpD,MAAC,KAAK;IACJ,cAAYF,IAAI,CAACK,aAAa,CAACV,QAAQ,CAACC,MAAM,CAAE;IAChD,QAAQ,EAAGU,KAAK,IAAKR,QAAQ,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAE;IAClD,IAAI,EAAC,gBAAgB;IACrB,KAAK,EAAET,WAAY;IACnB,WAAW;IACX,YAAY,EAAC,KAAK;IAClB,WAAW,EAAEC,IAAI,CAACK,aAAa,CAACV,QAAQ,CAACC,MAAM,CAAE;IACjD,KAAK,EAAEI,IAAI,CAACK,aAAa,CAACV,QAAQ,CAACC,MAAM,CAAE;IAC3C,SAAS;IACT,GAAG,EAAEK,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACjB,EACDF,WAAW,IACV,MAAC,MAAM;IACL,SAAS,EAAC,qBAAqB;IAC/B,cAAYC,IAAI,CAACK,aAAa,CAACV,QAAQ,CAACC,MAAM,CAAE;IAChD,OAAO,EAAE,MAAM;MACbE,QAAQ,CAAC,EAAE,CAAC;MACZG,WAAW,CAACQ,OAAO,CAACC,KAAK,EAAE;IAC7B,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEF,MAAC,IAAI;IAAC,IAAI,EAAEhB,QAAS;IAAC,IAAI,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAEvC,CACU,CACR;AAEX,CAAC;AAED,eAAeG,kBAAkB"},"metadata":{"react-intl":{"messages":[{"id":"Search","defaultMessage":"Search"}]}},"sourceType":"module","externalDependencies":[]}