{"ast":null,"code":"export var ConditionalDataBlockSchema = function ConditionalDataBlockSchema() {\n  return {\n    title: 'Conditional data block',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['title', 'provider_url', 'column_data', 'operator', 'condition']\n    }],\n    properties: {\n      title: {\n        title: 'Title',\n        description: 'Section friendly name',\n        type: 'string'\n      },\n      provider_url: {\n        widget: 'object_by_path',\n        title: 'Data provider'\n      },\n      column_data: {\n        title: 'Column value',\n        choices: []\n      },\n      operator: {\n        title: 'Operator',\n        choices: [['=', 'Equal'], ['!=', 'Not equal'], ['in', 'Includes'], ['not in', 'Not includes'], ['>', 'Greater than'], ['<', 'Less than']]\n      },\n      condition: {\n        title: 'Condition value',\n        widget: 'textarea'\n      }\n    },\n    required: ['provider_url']\n  };\n};\n_c = ConditionalDataBlockSchema;\nexport default ConditionalDataBlockSchema;\nvar _c;\n$RefreshReg$(_c, \"ConditionalDataBlockSchema\");","map":{"version":3,"names":["ConditionalDataBlockSchema","title","fieldsets","id","fields","properties","description","type","provider_url","widget","column_data","choices","operator","condition","required"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Blocks/ConditionalDataBlock/schema.js"],"sourcesContent":["export const ConditionalDataBlockSchema = () => ({\n  title: 'Conditional data block',\n\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: ['title', 'provider_url', 'column_data', 'operator', 'condition'],\n    },\n  ],\n\n  properties: {\n    title: {\n      title: 'Title',\n      description: 'Section friendly name',\n      type: 'string',\n    },\n    provider_url: {\n      widget: 'object_by_path',\n      title: 'Data provider',\n    },\n    column_data: {\n      title: 'Column value',\n      choices: [],\n    },\n    operator: {\n      title: 'Operator',\n      choices: [\n        ['=', 'Equal'],\n        ['!=', 'Not equal'],\n        ['in', 'Includes'],\n        ['not in', 'Not includes'],\n        ['>', 'Greater than'],\n        ['<', 'Less than'],\n      ],\n    },\n    condition: {\n      title: 'Condition value',\n      widget: 'textarea',\n    },\n  },\n\n  required: ['provider_url'],\n});\n\nexport default ConditionalDataBlockSchema;\n"],"mappings":"AAAA,OAAO,IAAMA,0BAA0B,GAAG,SAA7BA,0BAA0B;EAAA,OAAU;IAC/CC,KAAK,EAAE,wBAAwB;IAE/BC,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbF,KAAK,EAAE,SAAS;MAChBG,MAAM,EAAE,CAAC,OAAO,EAAE,cAAc,EAAE,aAAa,EAAE,UAAU,EAAE,WAAW;IAC1E,CAAC,CACF;IAEDC,UAAU,EAAE;MACVJ,KAAK,EAAE;QACLA,KAAK,EAAE,OAAO;QACdK,WAAW,EAAE,uBAAuB;QACpCC,IAAI,EAAE;MACR,CAAC;MACDC,YAAY,EAAE;QACZC,MAAM,EAAE,gBAAgB;QACxBR,KAAK,EAAE;MACT,CAAC;MACDS,WAAW,EAAE;QACXT,KAAK,EAAE,cAAc;QACrBU,OAAO,EAAE;MACX,CAAC;MACDC,QAAQ,EAAE;QACRX,KAAK,EAAE,UAAU;QACjBU,OAAO,EAAE,CACP,CAAC,GAAG,EAAE,OAAO,CAAC,EACd,CAAC,IAAI,EAAE,WAAW,CAAC,EACnB,CAAC,IAAI,EAAE,UAAU,CAAC,EAClB,CAAC,QAAQ,EAAE,cAAc,CAAC,EAC1B,CAAC,GAAG,EAAE,cAAc,CAAC,EACrB,CAAC,GAAG,EAAE,WAAW,CAAC;MAEtB,CAAC;MACDE,SAAS,EAAE;QACTZ,KAAK,EAAE,iBAAiB;QACxBQ,MAAM,EAAE;MACV;IACF,CAAC;IAEDK,QAAQ,EAAE,CAAC,cAAc;EAC3B,CAAC;AAAA,CAAC;AAAC,KA3CUd,0BAA0B;AA6CvC,eAAeA,0BAA0B;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}