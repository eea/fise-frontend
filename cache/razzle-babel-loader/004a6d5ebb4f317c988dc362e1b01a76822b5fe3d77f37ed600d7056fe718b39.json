{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/ToC/View.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n/**\n * View toc block.\n * @module components/manage/Blocks/ToC/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { Message } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport { withBlockExtensions } from '@plone/volto/helpers';\nimport { getBlocksFieldname, getBlocksLayoutFieldname } from '@plone/volto/helpers';\n\n/**\n * View toc block class.\n * @class View\n * @extends Component\n */\nconst View = props => {\n  const {\n    properties,\n    data\n  } = props;\n  const {\n    variation\n  } = props;\n  const blocksFieldname = getBlocksFieldname(properties);\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(properties);\n  const levels = React.useMemo(() => {\n    var _data$levels;\n    return ((_data$levels = data.levels) === null || _data$levels === void 0 ? void 0 : _data$levels.length) > 0 ? data.levels.map(l => parseInt(l.slice(1))) : [1, 2, 3, 4, 5, 6];\n  }, [data]);\n  const tocEntries = React.useMemo(() => {\n    let rootLevel = Infinity;\n    let entries = [];\n    let prevEntry = {};\n    let tocEntries = {};\n    let tocEntriesLayout = [];\n    properties[blocksLayoutFieldname].items.forEach(id => {\n      var _config$blocks$blocks, _config$blocks$blocks2;\n      const block = properties[blocksFieldname][id];\n      if (typeof block === 'undefined') {\n        return null;\n      }\n      if (!((_config$blocks$blocks = config.blocks.blocksConfig[block['@type']]) !== null && _config$blocks$blocks !== void 0 && _config$blocks$blocks.tocEntry)) return null;\n      const entry = (_config$blocks$blocks2 = config.blocks.blocksConfig[block['@type']]) === null || _config$blocks$blocks2 === void 0 ? void 0 : _config$blocks$blocks2.tocEntry(block, data);\n      if (entry) {\n        const level = entry[0];\n        const title = entry[1];\n        const items = [];\n        if (!level || !levels.includes(level)) return;\n        tocEntriesLayout.push(id);\n        tocEntries[id] = {\n          level,\n          title: title || block.plaintext,\n          items,\n          id\n        };\n        if (level < rootLevel) {\n          rootLevel = level;\n        }\n      }\n    });\n    tocEntriesLayout.forEach(id => {\n      const entry = tocEntries[id];\n      if (entry.level === rootLevel) {\n        entries.push(entry);\n        prevEntry = entry;\n        return;\n      }\n      if (!prevEntry.id) return;\n      if (entry.level > prevEntry.level) {\n        entry.parentId = prevEntry.id;\n        prevEntry.items.push(entry);\n        prevEntry = entry;\n      } else if (entry.level < prevEntry.level) {\n        let parent = tocEntries[prevEntry.parentId];\n        while (entry.level <= parent.level) {\n          parent = tocEntries[parent.parentId];\n        }\n        entry.parentId = parent.id;\n        parent.items.push(entry);\n        prevEntry = entry;\n      } else {\n        entry.parentId = prevEntry.parentId;\n        tocEntries[prevEntry.parentId].items.push(entry);\n        prevEntry = entry;\n      }\n    });\n    return entries;\n  }, [data, levels, properties, blocksFieldname, blocksLayoutFieldname]);\n  const Renderer = variation === null || variation === void 0 ? void 0 : variation.view;\n  return __jsx(\"div\", {\n    className: cx('table-of-contents', variation === null || variation === void 0 ? void 0 : variation.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, props.mode === 'edit' && !data.title && !tocEntries.length && __jsx(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Table of content\"), Renderer ? __jsx(Renderer, _extends({}, props, {\n    tocEntries: tocEntries,\n    properties: properties,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"View extension not found\"));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default injectIntl(withBlockExtensions(View));","map":{"version":3,"names":["React","PropTypes","injectIntl","cx","Message","config","withBlockExtensions","getBlocksFieldname","getBlocksLayoutFieldname","View","props","properties","data","variation","blocksFieldname","blocksLayoutFieldname","levels","useMemo","length","map","l","parseInt","slice","tocEntries","rootLevel","Infinity","entries","prevEntry","tocEntriesLayout","items","forEach","id","block","blocks","blocksConfig","tocEntry","entry","level","title","includes","push","plaintext","parentId","parent","Renderer","view","mode","propTypes","objectOf","any","isRequired"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/ToC/View.jsx"],"sourcesContent":["/**\n * View toc block.\n * @module components/manage/Blocks/ToC/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport { Message } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport { withBlockExtensions } from '@plone/volto/helpers';\n\nimport {\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n} from '@plone/volto/helpers';\n\n/**\n * View toc block class.\n * @class View\n * @extends Component\n */\nconst View = (props) => {\n  const { properties, data } = props;\n  const { variation } = props;\n  const blocksFieldname = getBlocksFieldname(properties);\n  const blocksLayoutFieldname = getBlocksLayoutFieldname(properties);\n  const levels = React.useMemo(\n    () =>\n      data.levels?.length > 0\n        ? data.levels.map((l) => parseInt(l.slice(1)))\n        : [1, 2, 3, 4, 5, 6],\n    [data],\n  );\n  const tocEntries = React.useMemo(() => {\n    let rootLevel = Infinity;\n    let entries = [];\n    let prevEntry = {};\n    let tocEntries = {};\n    let tocEntriesLayout = [];\n\n    properties[blocksLayoutFieldname].items.forEach((id) => {\n      const block = properties[blocksFieldname][id];\n      if (typeof block === 'undefined') {\n        return null;\n      }\n      if (!config.blocks.blocksConfig[block['@type']]?.tocEntry) return null;\n      const entry = config.blocks.blocksConfig[block['@type']]?.tocEntry(\n        block,\n        data,\n      );\n      if (entry) {\n        const level = entry[0];\n        const title = entry[1];\n        const items = [];\n        if (!level || !levels.includes(level)) return;\n        tocEntriesLayout.push(id);\n        tocEntries[id] = { level, title: title || block.plaintext, items, id };\n        if (level < rootLevel) {\n          rootLevel = level;\n        }\n      }\n    });\n\n    tocEntriesLayout.forEach((id) => {\n      const entry = tocEntries[id];\n      if (entry.level === rootLevel) {\n        entries.push(entry);\n        prevEntry = entry;\n        return;\n      }\n      if (!prevEntry.id) return;\n      if (entry.level > prevEntry.level) {\n        entry.parentId = prevEntry.id;\n        prevEntry.items.push(entry);\n        prevEntry = entry;\n      } else if (entry.level < prevEntry.level) {\n        let parent = tocEntries[prevEntry.parentId];\n        while (entry.level <= parent.level) {\n          parent = tocEntries[parent.parentId];\n        }\n        entry.parentId = parent.id;\n        parent.items.push(entry);\n        prevEntry = entry;\n      } else {\n        entry.parentId = prevEntry.parentId;\n        tocEntries[prevEntry.parentId].items.push(entry);\n        prevEntry = entry;\n      }\n    });\n\n    return entries;\n  }, [data, levels, properties, blocksFieldname, blocksLayoutFieldname]);\n\n  const Renderer = variation?.view;\n  return (\n    <div className={cx('table-of-contents', variation?.id)}>\n      {props.mode === 'edit' && !data.title && !tocEntries.length && (\n        <Message>Table of content</Message>\n      )}\n\n      {Renderer ? (\n        <Renderer {...props} tocEntries={tocEntries} properties={properties} />\n      ) : (\n        <div>View extension not found</div>\n      )}\n    </div>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default injectIntl(withBlockExtensions(View));\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}