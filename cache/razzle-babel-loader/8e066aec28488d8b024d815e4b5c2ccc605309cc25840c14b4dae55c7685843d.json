{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Rules/Rules.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Moderate content rules component.\n * @module components/manage/Controlpanels/Rules/Rules\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getBaseUrl, getParentUrl, Helmet } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport { Button, Checkbox, Container, Form, Header, Segment, Table } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nimport { getControlPanelRules, deleteControlPanelRule, getContentRulesEvents, editRule } from '@plone/volto/actions';\nimport backSVG from '@plone/volto/icons/back.svg';\nconst messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  rules: {\n    \"id\": \"Content Rules\",\n    \"defaultMessage\": \"Content Rules\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  delete: {\n    \"id\": \"Deleted\",\n    \"defaultMessage\": \"Deleted\"\n  },\n  enable: {\n    \"id\": \"Rule enable changed\",\n    \"defaultMessage\": \"Rule enable changed\"\n  }\n});\n\n/**\n * Rules class.\n * @class Rules\n * @extends Component\n */\nclass Rules extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClient: false,\n      selectedFilters: [],\n      selectedRules: []\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n    this.props.getContentRulesEvents(getBaseUrl(this.props.pathname));\n    this.setState({\n      isClient: true\n    });\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.rules !== this.props.rules && this.props.rules.items) {\n      this.setState({\n        selectedRules: this.props.rules.items\n      });\n    }\n    if (prevState.selectedFilters !== this.state.selectedFilters && this.props.rules.items) {\n      if (this.state.selectedFilters.length > 0) {\n        let filteredRules = this.props.rules.items.filter(rule => this.state.selectedFilters.includes(rule.trigger));\n        this.setState({\n          selectedRules: filteredRules\n        });\n      } else {\n        this.setState({\n          selectedRules: this.props.rules.items\n        });\n      }\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.indivRule.edit.loading && nextProps.indivRule.edit.loaded) {\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.enable),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }));\n      this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n    }\n    if (this.props.indivRule.delete.loading && nextProps.indivRule.delete.loaded) {\n      this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.delete),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Select filter type handler\n   * @method handleSelectFilterType\n   * @returns {undefined}\n   */\n  handleSelectFilterType(type) {\n    this.setState({\n      filterType: type\n    });\n  }\n\n  /**\n   * Add Rule handler\n   * @method handleAddRule\n   * @returns {undefined}\n   */\n  handleAddRule() {\n    this.props.history.push(`${this.props.pathname}/add`);\n  }\n\n  /**\n   * Configure Rule handler\n   * @method handleConfigure\n   * @returns {undefined}\n   */\n  handleConfigure(ruleId) {\n    this.props.history.push(`${this.props.pathname}/${ruleId}/configure`);\n  }\n\n  /**\n   * Edit Rule handler\n   * @method handleEdit\n   * @returns {undefined}\n   */\n  handleEdit(ruleId) {\n    this.props.history.push(`${this.props.pathname}/${ruleId}/edit`);\n  }\n\n  /**\n   * Delete Rule handler\n   * @method handleDelete\n   * @returns {undefined}\n   */\n  handleDelete(ruleId) {\n    this.props.deleteControlPanelRule(getBaseUrl(this.props.pathname), ruleId);\n  }\n\n  /**\n   * Set filter handler\n   * @method handleSetFilters\n   * @returns {undefined}\n   */\n  handleSetFilters(value) {\n    if (!this.state.selectedFilters.includes(value)) {\n      this.setState({\n        selectedFilters: [...this.state.selectedFilters, value]\n      });\n    } else {\n      this.setState({\n        selectedFilters: this.state.selectedFilters.filter(f => f !== value)\n      });\n    }\n  }\n\n  /**\n   *Enable rule handler\n   * @method handleEnableRule\n   * @returns {undefined}\n   */\n  handleEnableRule(rule) {\n    const {\n      id,\n      cascading,\n      description,\n      enabled,\n      event,\n      stop,\n      title\n    } = rule;\n    this.props.editRule(getBaseUrl(this.props.pathname), {\n      id,\n      cascading,\n      description,\n      enabled: !enabled,\n      event,\n      stop,\n      title\n    }, id);\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return __jsx(\"div\", {\n      id: \"page-rules\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.rules),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }\n    }), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }\n    }, __jsx(\"article\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }\n    }, __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Content Rules\",\n      defaultMessage: \"Content Rules\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      className: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu.\",\n      defaultMessage: \"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    }, __jsx(Header, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Filter Rules:\",\n      defaultMessage: \"Filter Rules:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 19\n      }\n    })), __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 19\n      }\n    }, this.props.events && this.props.events.items && this.props.events.items.length > 0 && this.props.events.items.map(event => {\n      return {\n        label: event.title,\n        value: event.title\n      };\n    }).map((o, i) => __jsx(Form.Field, {\n      style: {\n        marginRight: '15px'\n      },\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 27\n      }\n    }, __jsx(Checkbox, {\n      onChange: (e, {\n        value\n      }) => this.handleSetFilters(value),\n      checked: this.state.selectedFilters.includes[o.value],\n      value: o.value,\n      label: o.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 29\n      }\n    }))))), __jsx(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    }, __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 19\n      }\n    }, __jsx(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }\n    }, __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Content Rule\",\n      defaultMessage: \"Content Rule\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 25\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Event\",\n      defaultMessage: \"Event\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 25\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Status\",\n      defaultMessage: \"Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 25\n      }\n    })), __jsx(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 23\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Actions\",\n      defaultMessage: \"Actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 25\n      }\n    }))), this.state.selectedRules && this.state.selectedRules.length > 0 && this.state.selectedRules.map((rule, i) => __jsx(Table.Row, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 25\n      }\n    }, __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 27\n      }\n    }, __jsx(\"p\", {\n      style: {\n        fontSize: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 29\n      }\n    }, rule.title), __jsx(\"p\", {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 29\n      }\n    }, rule.description)), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 27\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 29\n      }\n    }, rule.trigger)), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 27\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 29\n      }\n    }, __jsx(Checkbox, {\n      onChange: (e, o) => this.handleEnableRule(rule),\n      checked: rule.enabled,\n      value: rule.enabled,\n      label: \"enabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 31\n      }\n    }), !rule.assigned && __jsx(\"p\", {\n      style: {\n        marginLeft: '5px',\n        padding: '3px',\n        backgroundColor: '#ffc106',\n        borderRadius: '5px',\n        fontSize: '10px',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 33\n      }\n    }, \"not assigned\"))), __jsx(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 27\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      size: \"mini\",\n      primary: true,\n      onClick: () => this.handleConfigure(rule.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 31\n      }\n    }, \"Configure\"), __jsx(Button, {\n      size: \"mini\",\n      secondary: true,\n      onClick: () => this.handleEdit(rule.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 31\n      }\n    }, \"Edit\"), __jsx(Button, {\n      size: \"mini\",\n      color: \"youtube\",\n      onClick: () => this.handleDelete(rule.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 31\n      }\n    }, \"Delete\"))))))), __jsx(Button, {\n      onClick: () => this.handleAddRule(),\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Add content rule\",\n      defaultMessage: \"Add content rule\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 19\n      }\n    })))))), this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('toolbar'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }\n    }, __jsx(Toolbar, {\n      pathname: this.props.pathname,\n      hideDefaultViewButtons: true,\n      inner: __jsx(Link, {\n        className: \"item\",\n        to: \"#\",\n        onClick: () => this.onCancel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: backSVG,\n        className: \"contents circled\",\n        size: \"30px\",\n        title: this.props.intl.formatMessage(messages.back),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n_defineProperty(Rules, \"propTypes\", {\n  getControlPanelRules: PropTypes.func.isRequired,\n  deleteControlPanelRule: PropTypes.func.isRequired,\n  getContentRulesEvents: PropTypes.func.isRequired,\n  editRule: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  indivRule: state.controlpanelrule,\n  rules: state.controlpanelrules,\n  events: state.contentrulesevents,\n  pathname: props.location.pathname\n}), {\n  getControlPanelRules,\n  deleteControlPanelRule,\n  getContentRulesEvents,\n  editRule\n}))(Rules);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","getBaseUrl","getParentUrl","Helmet","Portal","Button","Checkbox","Container","Form","Header","Segment","Table","FormattedMessage","defineMessages","injectIntl","Icon","Toolbar","toast","Toast","getControlPanelRules","deleteControlPanelRule","getContentRulesEvents","editRule","backSVG","messages","back","rules","success","delete","enable","Rules","constructor","props","state","isClient","selectedFilters","selectedRules","componentDidMount","pathname","setState","componentDidUpdate","prevProps","prevState","items","length","filteredRules","filter","rule","includes","trigger","UNSAFE_componentWillReceiveProps","nextProps","indivRule","edit","loading","loaded","intl","formatMessage","onCancel","history","push","handleSelectFilterType","type","filterType","handleAddRule","handleConfigure","ruleId","handleEdit","handleDelete","handleSetFilters","value","f","handleEnableRule","id","cascading","description","enabled","event","stop","title","render","display","flexWrap","events","map","label","o","i","marginRight","e","fontSize","alignItems","assigned","marginLeft","padding","backgroundColor","borderRadius","fontWeight","document","getElementById","func","isRequired","controlpanelrule","controlpanelrules","contentrulesevents","location"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/Rules/Rules.jsx"],"sourcesContent":["/**\n * Moderate content rules component.\n * @module components/manage/Controlpanels/Rules/Rules\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getBaseUrl, getParentUrl, Helmet } from '@plone/volto/helpers';\nimport { Portal } from 'react-portal';\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Form,\n  Header,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\n\nimport {\n  getControlPanelRules,\n  deleteControlPanelRule,\n  getContentRulesEvents,\n  editRule,\n} from '@plone/volto/actions';\n\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  rules: {\n    id: 'Content Rules',\n    defaultMessage: 'Content Rules',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  delete: {\n    id: 'Deleted',\n    defaultMessage: 'Deleted',\n  },\n  enable: {\n    id: 'Rule enable changed',\n    defaultMessage: 'Rule enable changed',\n  },\n});\n\n/**\n * Rules class.\n * @class Rules\n * @extends Component\n */\nclass Rules extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getControlPanelRules: PropTypes.func.isRequired,\n    deleteControlPanelRule: PropTypes.func.isRequired,\n    getContentRulesEvents: PropTypes.func.isRequired,\n    editRule: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Rules\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClient: false,\n      selectedFilters: [],\n      selectedRules: [],\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n    this.props.getContentRulesEvents(getBaseUrl(this.props.pathname));\n\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidUpdate\n   * @returns {undefined}\n   */\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.rules !== this.props.rules && this.props.rules.items) {\n      this.setState({ selectedRules: this.props.rules.items });\n    }\n    if (\n      prevState.selectedFilters !== this.state.selectedFilters &&\n      this.props.rules.items\n    ) {\n      if (this.state.selectedFilters.length > 0) {\n        let filteredRules = this.props.rules.items.filter((rule) =>\n          this.state.selectedFilters.includes(rule.trigger),\n        );\n        this.setState({\n          selectedRules: filteredRules,\n        });\n      } else {\n        this.setState({ selectedRules: this.props.rules.items });\n      }\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.indivRule.edit.loading && nextProps.indivRule.edit.loaded) {\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.enable)}\n        />,\n      );\n      this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n    }\n    if (\n      this.props.indivRule.delete.loading &&\n      nextProps.indivRule.delete.loaded\n    ) {\n      this.props.getControlPanelRules(getBaseUrl(this.props.pathname));\n\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.delete)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * Back/Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getParentUrl(this.props.pathname));\n  }\n\n  /**\n   * Select filter type handler\n   * @method handleSelectFilterType\n   * @returns {undefined}\n   */\n  handleSelectFilterType(type) {\n    this.setState({ filterType: type });\n  }\n\n  /**\n   * Add Rule handler\n   * @method handleAddRule\n   * @returns {undefined}\n   */\n  handleAddRule() {\n    this.props.history.push(`${this.props.pathname}/add`);\n  }\n\n  /**\n   * Configure Rule handler\n   * @method handleConfigure\n   * @returns {undefined}\n   */\n  handleConfigure(ruleId) {\n    this.props.history.push(`${this.props.pathname}/${ruleId}/configure`);\n  }\n\n  /**\n   * Edit Rule handler\n   * @method handleEdit\n   * @returns {undefined}\n   */\n  handleEdit(ruleId) {\n    this.props.history.push(`${this.props.pathname}/${ruleId}/edit`);\n  }\n\n  /**\n   * Delete Rule handler\n   * @method handleDelete\n   * @returns {undefined}\n   */\n  handleDelete(ruleId) {\n    this.props.deleteControlPanelRule(getBaseUrl(this.props.pathname), ruleId);\n  }\n\n  /**\n   * Set filter handler\n   * @method handleSetFilters\n   * @returns {undefined}\n   */\n  handleSetFilters(value) {\n    if (!this.state.selectedFilters.includes(value)) {\n      this.setState({\n        selectedFilters: [...this.state.selectedFilters, value],\n      });\n    } else {\n      this.setState({\n        selectedFilters: this.state.selectedFilters.filter((f) => f !== value),\n      });\n    }\n  }\n\n  /**\n   *Enable rule handler\n   * @method handleEnableRule\n   * @returns {undefined}\n   */\n  handleEnableRule(rule) {\n    const { id, cascading, description, enabled, event, stop, title } = rule;\n    this.props.editRule(\n      getBaseUrl(this.props.pathname),\n      { id, cascading, description, enabled: !enabled, event, stop, title },\n      id,\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <div id=\"page-rules\">\n        <Helmet title={this.props.intl.formatMessage(messages.rules)} />\n        <Container>\n          <article id=\"content\">\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage\n                  id=\"Content Rules\"\n                  defaultMessage=\"Content Rules\"\n                />\n              </Segment>\n              <Segment className=\"secondary\">\n                <FormattedMessage\n                  id=\"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu.\"\n                  defaultMessage=\"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu.\"\n                />\n              </Segment>\n              {/* <Segment>\n                <Checkbox\n                  // onChange={(e, { value }) => console.log(value)}\n                  //checked={}\n                  value={'disable-globally'}\n                  label=\"Disable globally\"\n                />\n              </Segment> */}\n              {/* <Segment className=\"secondary\">\n                <FormattedMessage\n                  id=\"Whether or not content rules should be disabled globally. If this is selected, no rules will be executed anywhere in the portal.\"\n                  defaultMessage=\"Whether or not content rules should be disabled globally. If this is selected, no rules will be executed anywhere in the portal.\"\n                />\n              </Segment> */}\n              <Segment>\n                <Header size=\"small\">\n                  <FormattedMessage\n                    id=\"Filter Rules:\"\n                    defaultMessage=\"Filter Rules:\"\n                  />\n                </Header>\n                <Form>\n                  <div\n                    style={{\n                      display: 'flex',\n                      flexWrap: 'wrap',\n                    }}\n                  >\n                    {this.props.events &&\n                      this.props.events.items &&\n                      this.props.events.items.length > 0 &&\n                      this.props.events.items\n                        .map((event) => {\n                          return { label: event.title, value: event.title };\n                        })\n                        .map((o, i) => (\n                          <Form.Field style={{ marginRight: '15px' }} key={i}>\n                            <Checkbox\n                              onChange={(e, { value }) =>\n                                this.handleSetFilters(value)\n                              }\n                              checked={\n                                this.state.selectedFilters.includes[o.value]\n                              }\n                              value={o.value}\n                              label={o.label}\n                            />\n                          </Form.Field>\n                        ))}\n                  </div>\n                </Form>\n                <Table>\n                  <Table.Body>\n                    <Table.Row>\n                      <Table.HeaderCell>\n                        <FormattedMessage\n                          id=\"Content Rule\"\n                          defaultMessage=\"Content Rule\"\n                        />\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>\n                        <FormattedMessage id=\"Event\" defaultMessage=\"Event\" />\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>\n                        <FormattedMessage id=\"Status\" defaultMessage=\"Status\" />\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>\n                        <FormattedMessage\n                          id=\"Actions\"\n                          defaultMessage=\"Actions\"\n                        />\n                      </Table.HeaderCell>\n                    </Table.Row>\n                    {this.state.selectedRules &&\n                      this.state.selectedRules.length > 0 &&\n                      this.state.selectedRules.map((rule, i) => (\n                        <Table.Row key={i}>\n                          <Table.Cell>\n                            <p style={{ fontSize: '16px' }}>{rule.title}</p>\n                            <p style={{ fontSize: '14px' }}>\n                              {rule.description}\n                            </p>\n                          </Table.Cell>\n                          <Table.Cell>\n                            <p>{rule.trigger}</p>\n                          </Table.Cell>\n                          <Table.Cell>\n                            <div\n                              style={{ display: 'flex', alignItems: 'center' }}\n                            >\n                              <Checkbox\n                                onChange={(e, o) => this.handleEnableRule(rule)}\n                                checked={rule.enabled}\n                                value={rule.enabled}\n                                label=\"enabled\"\n                              />\n                              {!rule.assigned && (\n                                <p\n                                  style={{\n                                    marginLeft: '5px',\n                                    padding: '3px',\n                                    backgroundColor: '#ffc106',\n                                    borderRadius: '5px',\n                                    fontSize: '10px',\n                                    fontWeight: 'bold',\n                                  }}\n                                >\n                                  not assigned\n                                </p>\n                              )}\n                            </div>\n                          </Table.Cell>\n                          <Table.Cell>\n                            <div style={{ display: 'flex' }}>\n                              <Button\n                                size=\"mini\"\n                                primary\n                                onClick={() => this.handleConfigure(rule.id)}\n                              >\n                                Configure\n                              </Button>\n                              <Button\n                                size=\"mini\"\n                                secondary\n                                onClick={() => this.handleEdit(rule.id)}\n                              >\n                                Edit\n                              </Button>\n                              <Button\n                                size=\"mini\"\n                                color=\"youtube\"\n                                onClick={() => this.handleDelete(rule.id)}\n                              >\n                                Delete\n                              </Button>\n                            </div>\n                          </Table.Cell>\n                        </Table.Row>\n                      ))}\n                  </Table.Body>\n                </Table>\n                <Button onClick={() => this.handleAddRule()} primary>\n                  <FormattedMessage\n                    id=\"Add content rule\"\n                    defaultMessage=\"Add content rule\"\n                  />\n                </Button>\n              </Segment>\n            </Segment.Group>\n          </article>\n        </Container>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link className=\"item\" to=\"#\" onClick={() => this.onCancel()}>\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      indivRule: state.controlpanelrule,\n      rules: state.controlpanelrules,\n      events: state.contentrulesevents,\n\n      pathname: props.location.pathname,\n    }),\n    {\n      getControlPanelRules,\n      deleteControlPanelRule,\n      getContentRulesEvents,\n      editRule,\n    },\n  ),\n)(Rules);\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,EAAEC,YAAY,EAAEC,MAAM,QAAQ,sBAAsB;AACvE,SAASC,MAAM,QAAQ,cAAc;AACrC,SACEC,MAAM,EACNC,QAAQ,EACRC,SAAS,EACTC,IAAI,EACJC,MAAM,EACNC,OAAO,EACPC,KAAK,QACA,mBAAmB;AAC1B,SAASC,gBAAgB,EAAEC,cAAc,EAAEC,UAAU,QAAQ,YAAY;AACzE,SAASC,IAAI,EAAEC,OAAO,QAAQ,yBAAyB;AACvD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,KAAK,QAAQ,yBAAyB;AAE/C,SACEC,oBAAoB,EACpBC,sBAAsB,EACtBC,qBAAqB,EACrBC,QAAQ,QACH,sBAAsB;AAE7B,OAAOC,OAAO,MAAM,6BAA6B;AAEjD,MAAMC,QAAQ,GAAGX,cAAc,CAAC;EAC9BY,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,KAAK;IAAA;IAAA;EAAA,CAGJ;EACDC,OAAO;IAAA;IAAA;EAAA,CAGN;EACDC,MAAM;IAAA;IAAA;EAAA,CAGL;EACDC,MAAM;IAAA;IAAA;EAAA;AAIR,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,SAASlC,SAAS,CAAC;EAC5B;AACF;AACA;AACA;AACA;;EAQE;AACF;AACA;AACA;AACA;AACA;EACEmC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE,KAAK;MACfC,eAAe,EAAE,EAAE;MACnBC,aAAa,EAAE;IACjB,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,iBAAiB,GAAG;IAClB,IAAI,CAACL,KAAK,CAACb,oBAAoB,CAAClB,UAAU,CAAC,IAAI,CAAC+B,KAAK,CAACM,QAAQ,CAAC,CAAC;IAChE,IAAI,CAACN,KAAK,CAACX,qBAAqB,CAACpB,UAAU,CAAC,IAAI,CAAC+B,KAAK,CAACM,QAAQ,CAAC,CAAC;IAEjE,IAAI,CAACC,QAAQ,CAAC;MAAEL,QAAQ,EAAE;IAAK,CAAC,CAAC;EACnC;;EAEA;AACF;AACA;AACA;AACA;EACEM,kBAAkB,CAACC,SAAS,EAAEC,SAAS,EAAE;IACvC,IAAID,SAAS,CAACf,KAAK,KAAK,IAAI,CAACM,KAAK,CAACN,KAAK,IAAI,IAAI,CAACM,KAAK,CAACN,KAAK,CAACiB,KAAK,EAAE;MAClE,IAAI,CAACJ,QAAQ,CAAC;QAAEH,aAAa,EAAE,IAAI,CAACJ,KAAK,CAACN,KAAK,CAACiB;MAAM,CAAC,CAAC;IAC1D;IACA,IACED,SAAS,CAACP,eAAe,KAAK,IAAI,CAACF,KAAK,CAACE,eAAe,IACxD,IAAI,CAACH,KAAK,CAACN,KAAK,CAACiB,KAAK,EACtB;MACA,IAAI,IAAI,CAACV,KAAK,CAACE,eAAe,CAACS,MAAM,GAAG,CAAC,EAAE;QACzC,IAAIC,aAAa,GAAG,IAAI,CAACb,KAAK,CAACN,KAAK,CAACiB,KAAK,CAACG,MAAM,CAAEC,IAAI,IACrD,IAAI,CAACd,KAAK,CAACE,eAAe,CAACa,QAAQ,CAACD,IAAI,CAACE,OAAO,CAAC,CAClD;QACD,IAAI,CAACV,QAAQ,CAAC;UACZH,aAAa,EAAES;QACjB,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,IAAI,CAACN,QAAQ,CAAC;UAAEH,aAAa,EAAE,IAAI,CAACJ,KAAK,CAACN,KAAK,CAACiB;QAAM,CAAC,CAAC;MAC1D;IACF;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEO,gCAAgC,CAACC,SAAS,EAAE;IAC1C,IAAI,IAAI,CAACnB,KAAK,CAACoB,SAAS,CAACC,IAAI,CAACC,OAAO,IAAIH,SAAS,CAACC,SAAS,CAACC,IAAI,CAACE,MAAM,EAAE;MACxEtC,KAAK,CAACU,OAAO,CACX,MAAC,KAAK;QACJ,OAAO;QACP,KAAK,EAAE,IAAI,CAACK,KAAK,CAACwB,IAAI,CAACC,aAAa,CAACjC,QAAQ,CAACG,OAAO,CAAE;QACvD,OAAO,EAAE,IAAI,CAACK,KAAK,CAACwB,IAAI,CAACC,aAAa,CAACjC,QAAQ,CAACK,MAAM,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACxD,CACH;MACD,IAAI,CAACG,KAAK,CAACb,oBAAoB,CAAClB,UAAU,CAAC,IAAI,CAAC+B,KAAK,CAACM,QAAQ,CAAC,CAAC;IAClE;IACA,IACE,IAAI,CAACN,KAAK,CAACoB,SAAS,CAACxB,MAAM,CAAC0B,OAAO,IACnCH,SAAS,CAACC,SAAS,CAACxB,MAAM,CAAC2B,MAAM,EACjC;MACA,IAAI,CAACvB,KAAK,CAACb,oBAAoB,CAAClB,UAAU,CAAC,IAAI,CAAC+B,KAAK,CAACM,QAAQ,CAAC,CAAC;MAEhErB,KAAK,CAACU,OAAO,CACX,MAAC,KAAK;QACJ,OAAO;QACP,KAAK,EAAE,IAAI,CAACK,KAAK,CAACwB,IAAI,CAACC,aAAa,CAACjC,QAAQ,CAACG,OAAO,CAAE;QACvD,OAAO,EAAE,IAAI,CAACK,KAAK,CAACwB,IAAI,CAACC,aAAa,CAACjC,QAAQ,CAACI,MAAM,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACxD,CACH;IACH;EACF;;EAEA;AACF;AACA;AACA;AACA;EACE8B,QAAQ,GAAG;IACT,IAAI,CAAC1B,KAAK,CAAC2B,OAAO,CAACC,IAAI,CAAC1D,YAAY,CAAC,IAAI,CAAC8B,KAAK,CAACM,QAAQ,CAAC,CAAC;EAC5D;;EAEA;AACF;AACA;AACA;AACA;EACEuB,sBAAsB,CAACC,IAAI,EAAE;IAC3B,IAAI,CAACvB,QAAQ,CAAC;MAAEwB,UAAU,EAAED;IAAK,CAAC,CAAC;EACrC;;EAEA;AACF;AACA;AACA;AACA;EACEE,aAAa,GAAG;IACd,IAAI,CAAChC,KAAK,CAAC2B,OAAO,CAACC,IAAI,CAAE,GAAE,IAAI,CAAC5B,KAAK,CAACM,QAAS,MAAK,CAAC;EACvD;;EAEA;AACF;AACA;AACA;AACA;EACE2B,eAAe,CAACC,MAAM,EAAE;IACtB,IAAI,CAAClC,KAAK,CAAC2B,OAAO,CAACC,IAAI,CAAE,GAAE,IAAI,CAAC5B,KAAK,CAACM,QAAS,IAAG4B,MAAO,YAAW,CAAC;EACvE;;EAEA;AACF;AACA;AACA;AACA;EACEC,UAAU,CAACD,MAAM,EAAE;IACjB,IAAI,CAAClC,KAAK,CAAC2B,OAAO,CAACC,IAAI,CAAE,GAAE,IAAI,CAAC5B,KAAK,CAACM,QAAS,IAAG4B,MAAO,OAAM,CAAC;EAClE;;EAEA;AACF;AACA;AACA;AACA;EACEE,YAAY,CAACF,MAAM,EAAE;IACnB,IAAI,CAAClC,KAAK,CAACZ,sBAAsB,CAACnB,UAAU,CAAC,IAAI,CAAC+B,KAAK,CAACM,QAAQ,CAAC,EAAE4B,MAAM,CAAC;EAC5E;;EAEA;AACF;AACA;AACA;AACA;EACEG,gBAAgB,CAACC,KAAK,EAAE;IACtB,IAAI,CAAC,IAAI,CAACrC,KAAK,CAACE,eAAe,CAACa,QAAQ,CAACsB,KAAK,CAAC,EAAE;MAC/C,IAAI,CAAC/B,QAAQ,CAAC;QACZJ,eAAe,EAAE,CAAC,GAAG,IAAI,CAACF,KAAK,CAACE,eAAe,EAAEmC,KAAK;MACxD,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAI,CAAC/B,QAAQ,CAAC;QACZJ,eAAe,EAAE,IAAI,CAACF,KAAK,CAACE,eAAe,CAACW,MAAM,CAAEyB,CAAC,IAAKA,CAAC,KAAKD,KAAK;MACvE,CAAC,CAAC;IACJ;EACF;;EAEA;AACF;AACA;AACA;AACA;EACEE,gBAAgB,CAACzB,IAAI,EAAE;IACrB,MAAM;MAAE0B,EAAE;MAAEC,SAAS;MAAEC,WAAW;MAAEC,OAAO;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGhC,IAAI;IACxE,IAAI,CAACf,KAAK,CAACV,QAAQ,CACjBrB,UAAU,CAAC,IAAI,CAAC+B,KAAK,CAACM,QAAQ,CAAC,EAC/B;MAAEmC,EAAE;MAAEC,SAAS;MAAEC,WAAW;MAAEC,OAAO,EAAE,CAACA,OAAO;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAM,CAAC,EACrEN,EAAE,CACH;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEO,MAAM,GAAG;IACP,OACE;MAAK,EAAE,EAAC,YAAY;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAClB,MAAC,MAAM;MAAC,KAAK,EAAE,IAAI,CAAChD,KAAK,CAACwB,IAAI,CAACC,aAAa,CAACjC,QAAQ,CAACE,KAAK,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,EAChE,MAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACR;MAAS,EAAE,EAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACnB,MAAC,OAAO,CAAC,KAAK;MAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACnB,MAAC,OAAO;MAAC,SAAS,EAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC1B,MAAC,gBAAgB;MACf,EAAE,EAAC,eAAe;MAClB,cAAc,EAAC,eAAe;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAC9B,CACM,EACV,MAAC,OAAO;MAAC,SAAS,EAAC,WAAW;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC5B,MAAC,gBAAgB;MACf,EAAE,EAAC,sQAAsQ;MACzQ,cAAc,EAAC,sQAAsQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACrR,CACM,EAeV,MAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACN,MAAC,MAAM;MAAC,IAAI,EAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAClB,MAAC,gBAAgB;MACf,EAAE,EAAC,eAAe;MAClB,cAAc,EAAC,eAAe;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAC9B,CACK,EACT,MAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACH;MACE,KAAK,EAAE;QACLuD,OAAO,EAAE,MAAM;QACfC,QAAQ,EAAE;MACZ,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAED,IAAI,CAAClD,KAAK,CAACmD,MAAM,IAChB,IAAI,CAACnD,KAAK,CAACmD,MAAM,CAACxC,KAAK,IACvB,IAAI,CAACX,KAAK,CAACmD,MAAM,CAACxC,KAAK,CAACC,MAAM,GAAG,CAAC,IAClC,IAAI,CAACZ,KAAK,CAACmD,MAAM,CAACxC,KAAK,CACpByC,GAAG,CAAEP,KAAK,IAAK;MACd,OAAO;QAAEQ,KAAK,EAAER,KAAK,CAACE,KAAK;QAAET,KAAK,EAAEO,KAAK,CAACE;MAAM,CAAC;IACnD,CAAC,CAAC,CACDK,GAAG,CAAC,CAACE,CAAC,EAAEC,CAAC,KACR,MAAC,IAAI,CAAC,KAAK;MAAC,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAO,CAAE;MAAC,GAAG,EAAED,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACjD,MAAC,QAAQ;MACP,QAAQ,EAAE,CAACE,CAAC,EAAE;QAAEnB;MAAM,CAAC,KACrB,IAAI,CAACD,gBAAgB,CAACC,KAAK,CAC5B;MACD,OAAO,EACL,IAAI,CAACrC,KAAK,CAACE,eAAe,CAACa,QAAQ,CAACsC,CAAC,CAAChB,KAAK,CAC5C;MACD,KAAK,EAAEgB,CAAC,CAAChB,KAAM;MACf,KAAK,EAAEgB,CAAC,CAACD,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACf,CAEL,CAAC,CACF,CACD,EACP,MAAC,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACJ,MAAC,KAAK,CAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACT,MAAC,KAAK,CAAC,GAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACR,MAAC,KAAK,CAAC,UAAU;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACf,MAAC,gBAAgB;MACf,EAAE,EAAC,cAAc;MACjB,cAAc,EAAC,cAAc;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAC7B,CACe,EACnB,MAAC,KAAK,CAAC,UAAU;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACf,MAAC,gBAAgB;MAAC,EAAE,EAAC,OAAO;MAAC,cAAc,EAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACrC,EACnB,MAAC,KAAK,CAAC,UAAU;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACf,MAAC,gBAAgB;MAAC,EAAE,EAAC,QAAQ;MAAC,cAAc,EAAC,QAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACvC,EACnB,MAAC,KAAK,CAAC,UAAU;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACf,MAAC,gBAAgB;MACf,EAAE,EAAC,SAAS;MACZ,cAAc,EAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACxB,CACe,CACT,EACX,IAAI,CAACpD,KAAK,CAACG,aAAa,IACvB,IAAI,CAACH,KAAK,CAACG,aAAa,CAACQ,MAAM,GAAG,CAAC,IACnC,IAAI,CAACX,KAAK,CAACG,aAAa,CAACgD,GAAG,CAAC,CAACrC,IAAI,EAAEwC,CAAC,KACnC,MAAC,KAAK,CAAC,GAAG;MAAC,GAAG,EAAEA,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAChB,MAAC,KAAK,CAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACT;MAAG,KAAK,EAAE;QAAEG,QAAQ,EAAE;MAAO,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAE3C,IAAI,CAACgC,KAAK,CAAK,EAChD;MAAG,KAAK,EAAE;QAAEW,QAAQ,EAAE;MAAO,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC5B3C,IAAI,CAAC4B,WAAW,CACf,CACO,EACb,MAAC,KAAK,CAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACT;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAI5B,IAAI,CAACE,OAAO,CAAK,CACV,EACb,MAAC,KAAK,CAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACT;MACE,KAAK,EAAE;QAAEgC,OAAO,EAAE,MAAM;QAAEU,UAAU,EAAE;MAAS,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEjD,MAAC,QAAQ;MACP,QAAQ,EAAE,CAACF,CAAC,EAAEH,CAAC,KAAK,IAAI,CAACd,gBAAgB,CAACzB,IAAI,CAAE;MAChD,OAAO,EAAEA,IAAI,CAAC6B,OAAQ;MACtB,KAAK,EAAE7B,IAAI,CAAC6B,OAAQ;MACpB,KAAK,EAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACf,EACD,CAAC7B,IAAI,CAAC6C,QAAQ,IACb;MACE,KAAK,EAAE;QACLC,UAAU,EAAE,KAAK;QACjBC,OAAO,EAAE,KAAK;QACdC,eAAe,EAAE,SAAS;QAC1BC,YAAY,EAAE,KAAK;QACnBN,QAAQ,EAAE,MAAM;QAChBO,UAAU,EAAE;MACd,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,kBAIL,CACG,CACK,EACb,MAAC,KAAK,CAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACT;MAAK,KAAK,EAAE;QAAEhB,OAAO,EAAE;MAAO,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC9B,MAAC,MAAM;MACL,IAAI,EAAC,MAAM;MACX,OAAO;MACP,OAAO,EAAE,MAAM,IAAI,CAAChB,eAAe,CAAClB,IAAI,CAAC0B,EAAE,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,eAGtC,EACT,MAAC,MAAM;MACL,IAAI,EAAC,MAAM;MACX,SAAS;MACT,OAAO,EAAE,MAAM,IAAI,CAACN,UAAU,CAACpB,IAAI,CAAC0B,EAAE,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,UAGjC,EACT,MAAC,MAAM;MACL,IAAI,EAAC,MAAM;MACX,KAAK,EAAC,SAAS;MACf,OAAO,EAAE,MAAM,IAAI,CAACL,YAAY,CAACrB,IAAI,CAAC0B,EAAE,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,YAGnC,CACL,CACK,CAEhB,CAAC,CACO,CACP,EACR,MAAC,MAAM;MAAC,OAAO,EAAE,MAAM,IAAI,CAACT,aAAa,EAAG;MAAC,OAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAClD,MAAC,gBAAgB;MACf,EAAE,EAAC,kBAAkB;MACrB,cAAc,EAAC,kBAAkB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACjC,CACK,CACD,CACI,CACR,CACA,EACX,IAAI,CAAC/B,KAAK,CAACC,QAAQ,IAClB,MAAC,MAAM;MAAC,IAAI,EAAEgE,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC/C,MAAC,OAAO;MACN,QAAQ,EAAE,IAAI,CAACnE,KAAK,CAACM,QAAS;MAC9B,sBAAsB;MACtB,KAAK,EACH,MAAC,IAAI;QAAC,SAAS,EAAC,MAAM;QAAC,EAAE,EAAC,GAAG;QAAC,OAAO,EAAE,MAAM,IAAI,CAACoB,QAAQ,EAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC3D,MAAC,IAAI;QACH,IAAI,EAAEnC,OAAQ;QACd,SAAS,EAAC,kBAAkB;QAC5B,IAAI,EAAC,MAAM;QACX,KAAK,EAAE,IAAI,CAACS,KAAK,CAACwB,IAAI,CAACC,aAAa,CAACjC,QAAQ,CAACC,IAAI,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACpD,CAEL;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACD,CAEL,CACG;EAEV;AACF;AAAC,gBA5XKK,KAAK,eAMU;EACjBX,oBAAoB,EAAEtB,SAAS,CAACuG,IAAI,CAACC,UAAU;EAC/CjF,sBAAsB,EAAEvB,SAAS,CAACuG,IAAI,CAACC,UAAU;EACjDhF,qBAAqB,EAAExB,SAAS,CAACuG,IAAI,CAACC,UAAU;EAChD/E,QAAQ,EAAEzB,SAAS,CAACuG,IAAI,CAACC;AAC3B,CAAC;AAmXH,eAAetG,OAAO,CACpBe,UAAU,EACVhB,OAAO,CACL,CAACmC,KAAK,EAAED,KAAK,MAAM;EACjBoB,SAAS,EAAEnB,KAAK,CAACqE,gBAAgB;EACjC5E,KAAK,EAAEO,KAAK,CAACsE,iBAAiB;EAC9BpB,MAAM,EAAElD,KAAK,CAACuE,kBAAkB;EAEhClE,QAAQ,EAAEN,KAAK,CAACyE,QAAQ,CAACnE;AAC3B,CAAC,CAAC,EACF;EACEnB,oBAAoB;EACpBC,sBAAsB;EACtBC,qBAAqB;EACrBC;AACF,CAAC,CACF,CACF,CAACQ,KAAK,CAAC"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"Content Rules","defaultMessage":"Content Rules"},{"id":"Success","defaultMessage":"Success"},{"id":"Deleted","defaultMessage":"Deleted"},{"id":"Rule enable changed","defaultMessage":"Rule enable changed"},{"id":"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu.","defaultMessage":"Use the form below to define, change or remove content rules. Rules will automatically perform actions on content when certain triggers take place. After defining rules, you may want to go to a folder to assign them, using the 'rules' item in the actions menu."},{"id":"Filter Rules:","defaultMessage":"Filter Rules:"},{"id":"Content Rule","defaultMessage":"Content Rule"},{"id":"Event","defaultMessage":"Event"},{"id":"Status","defaultMessage":"Status"},{"id":"Actions","defaultMessage":"Actions"},{"id":"Add content rule","defaultMessage":"Add content rule"}]}},"sourceType":"module","externalDependencies":[]}