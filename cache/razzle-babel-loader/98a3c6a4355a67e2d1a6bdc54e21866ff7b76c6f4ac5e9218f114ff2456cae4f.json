{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/FormattedDate/FormattedRelativeDate.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { formatRelativeDate, long_date_format, toDate } from '@plone/volto/helpers/Utils/Date';\nimport { useSelector } from 'react-redux';\nvar FormattedRelativeDate = function FormattedRelativeDate(_ref) {\n  _s();\n  var date = _ref.date,\n    style = _ref.style,\n    relativeTo = _ref.relativeTo,\n    className = _ref.className,\n    locale = _ref.locale,\n    children = _ref.children,\n    _ref$live = _ref.live,\n    live = _ref$live === void 0 ? false : _ref$live,\n    _ref$refresh = _ref.refresh,\n    refresh = _ref$refresh === void 0 ? 5000 : _ref$refresh;\n  var language = useSelector(function (state) {\n    return locale || state.intl.locale;\n  });\n  var _React$useState = React.useState(relativeTo ? toDate(relativeTo) : new Date()),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    liveRelativeTo = _React$useState2[0],\n    setLiveRelativeTo = _React$useState2[1];\n  var interval = React.useRef();\n  React.useEffect(function () {\n    if (live) {\n      interval.current = setInterval(function () {\n        setLiveRelativeTo(new Date());\n      }, refresh);\n    }\n    return function () {\n      return interval.current && clearInterval(interval.current);\n    };\n  }, [refresh, live]);\n  var args = {\n    locale: language,\n    date: date,\n    style: style,\n    relativeTo: liveRelativeTo\n  };\n  return __jsx(\"time\", {\n    className: className,\n    dateTime: date,\n    title: new Intl.DateTimeFormat(language, long_date_format).format(new Date(date)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, children ? children(formatRelativeDate(_objectSpread(_objectSpread({}, args), {}, {\n    formatToParts: true\n  }))) : formatRelativeDate(args));\n};\n_s(FormattedRelativeDate, \"0sbBF94eOrnShQD000G+l5tKXYU=\", false, function () {\n  return [useSelector];\n});\n_c = FormattedRelativeDate;\nexport default FormattedRelativeDate;\nvar _c;\n$RefreshReg$(_c, \"FormattedRelativeDate\");","map":{"version":3,"names":["React","formatRelativeDate","long_date_format","toDate","useSelector","FormattedRelativeDate","date","style","relativeTo","className","locale","children","live","refresh","language","state","intl","useState","Date","liveRelativeTo","setLiveRelativeTo","interval","useRef","useEffect","current","setInterval","clearInterval","args","Intl","DateTimeFormat","format","formatToParts"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/FormattedDate/FormattedRelativeDate.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  formatRelativeDate,\n  long_date_format,\n  toDate,\n} from '@plone/volto/helpers/Utils/Date';\nimport { useSelector } from 'react-redux';\n\nconst FormattedRelativeDate = ({\n  date,\n  style,\n  relativeTo,\n  className,\n  locale,\n  children,\n  live = false,\n  refresh = 5000,\n}) => {\n  const language = useSelector((state) => locale || state.intl.locale);\n  const [liveRelativeTo, setLiveRelativeTo] = React.useState(\n    relativeTo ? toDate(relativeTo) : new Date(),\n  );\n\n  const interval = React.useRef();\n\n  React.useEffect(() => {\n    if (live) {\n      interval.current = setInterval(() => {\n        setLiveRelativeTo(new Date());\n      }, refresh);\n    }\n    return () => interval.current && clearInterval(interval.current);\n  }, [refresh, live]);\n\n  const args = { locale: language, date, style, relativeTo: liveRelativeTo };\n\n  return (\n    <time\n      className={className}\n      dateTime={date}\n      title={new Intl.DateTimeFormat(language, long_date_format).format(\n        new Date(date),\n      )}\n    >\n      {children\n        ? children(\n            formatRelativeDate({\n              ...args,\n              formatToParts: true,\n            }),\n          )\n        : formatRelativeDate(args)}\n    </time>\n  );\n};\n\nexport default FormattedRelativeDate;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,kBAAkB,EAClBC,gBAAgB,EAChBC,MAAM,QACD,iCAAiC;AACxC,SAASC,WAAW,QAAQ,aAAa;AAEzC,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqB,OASrB;EAAA;EAAA,IARJC,IAAI,QAAJA,IAAI;IACJC,KAAK,QAALA,KAAK;IACLC,UAAU,QAAVA,UAAU;IACVC,SAAS,QAATA,SAAS;IACTC,MAAM,QAANA,MAAM;IACNC,QAAQ,QAARA,QAAQ;IAAA,iBACRC,IAAI;IAAJA,IAAI,0BAAG,KAAK;IAAA,oBACZC,OAAO;IAAPA,OAAO,6BAAG,IAAI;EAEd,IAAMC,QAAQ,GAAGV,WAAW,CAAC,UAACW,KAAK;IAAA,OAAKL,MAAM,IAAIK,KAAK,CAACC,IAAI,CAACN,MAAM;EAAA,EAAC;EACpE,sBAA4CV,KAAK,CAACiB,QAAQ,CACxDT,UAAU,GAAGL,MAAM,CAACK,UAAU,CAAC,GAAG,IAAIU,IAAI,EAAE,CAC7C;IAAA;IAFMC,cAAc;IAAEC,iBAAiB;EAIxC,IAAMC,QAAQ,GAAGrB,KAAK,CAACsB,MAAM,EAAE;EAE/BtB,KAAK,CAACuB,SAAS,CAAC,YAAM;IACpB,IAAIX,IAAI,EAAE;MACRS,QAAQ,CAACG,OAAO,GAAGC,WAAW,CAAC,YAAM;QACnCL,iBAAiB,CAAC,IAAIF,IAAI,EAAE,CAAC;MAC/B,CAAC,EAAEL,OAAO,CAAC;IACb;IACA,OAAO;MAAA,OAAMQ,QAAQ,CAACG,OAAO,IAAIE,aAAa,CAACL,QAAQ,CAACG,OAAO,CAAC;IAAA;EAClE,CAAC,EAAE,CAACX,OAAO,EAAED,IAAI,CAAC,CAAC;EAEnB,IAAMe,IAAI,GAAG;IAAEjB,MAAM,EAAEI,QAAQ;IAAER,IAAI,EAAJA,IAAI;IAAEC,KAAK,EAALA,KAAK;IAAEC,UAAU,EAAEW;EAAe,CAAC;EAE1E,OACE;IACE,SAAS,EAAEV,SAAU;IACrB,QAAQ,EAAEH,IAAK;IACf,KAAK,EAAE,IAAIsB,IAAI,CAACC,cAAc,CAACf,QAAQ,EAAEZ,gBAAgB,CAAC,CAAC4B,MAAM,CAC/D,IAAIZ,IAAI,CAACZ,IAAI,CAAC,CACd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEDK,QAAQ,GACLA,QAAQ,CACNV,kBAAkB,iCACb0B,IAAI;IACPI,aAAa,EAAE;EAAI,GACnB,CACH,GACD9B,kBAAkB,CAAC0B,IAAI,CAAC,CACvB;AAEX,CAAC;AAAC,GA9CItB,qBAAqB;EAAA,QAURD,WAAW;AAAA;AAAA,KAVxBC,qBAAqB;AAgD3B,eAAeA,qBAAqB;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}