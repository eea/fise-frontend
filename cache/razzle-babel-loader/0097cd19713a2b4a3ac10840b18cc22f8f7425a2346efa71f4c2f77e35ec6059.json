{"ast":null,"code":"const _excluded = [\"path\", \"secure\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport config from '@plone/volto/registry';\nexport const getCookieOptions = (options = {}) => {\n  const {\n      path = '/',\n      secure\n    } = options,\n    otherOptions = _objectWithoutProperties(options, _excluded);\n  let secureOption = secure;\n  try {\n    if (secureOption === undefined || secureOption === null) {\n      var _window$location$prot, _window, _window$location;\n      const protocol = (_window$location$prot = (_window = window) === null || _window === void 0 ? void 0 : (_window$location = _window.location) === null || _window$location === void 0 ? void 0 : _window$location.protocol) !== null && _window$location$prot !== void 0 ? _window$location$prot : 'http';\n      secureOption = protocol.startsWith('https') ? true : false;\n    }\n  } catch (e) {\n    //window is not defined. It's ssr and we use 'secure' option passed from param\n    secureOption = false;\n  }\n  return _objectSpread({\n    path: path,\n    expires: new Date(new Date().getTime() + config.settings.cookieExpires * 1000),\n    secure: secureOption\n  }, otherOptions);\n};","map":{"version":3,"names":["config","getCookieOptions","options","path","secure","otherOptions","secureOption","undefined","protocol","window","location","startsWith","e","expires","Date","getTime","settings","cookieExpires"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/helpers/Cookies/cookies.js"],"sourcesContent":["import config from '@plone/volto/registry';\n\nexport const getCookieOptions = (options = {}) => {\n  const { path = '/', secure, ...otherOptions } = options;\n  let secureOption = secure;\n\n  try {\n    if (secureOption === undefined || secureOption === null) {\n      const protocol = window?.location?.protocol ?? 'http';\n      secureOption = protocol.startsWith('https') ? true : false;\n    }\n  } catch (e) {\n    //window is not defined. It's ssr and we use 'secure' option passed from param\n    secureOption = false;\n  }\n\n  return {\n    path: path,\n    expires: new Date(\n      new Date().getTime() + config.settings.cookieExpires * 1000,\n    ),\n    secure: secureOption,\n    ...otherOptions,\n  };\n};\n"],"mappings":";;;;;;AAAA,OAAOA,MAAM,MAAM,uBAAuB;AAE1C,OAAO,MAAMC,gBAAgB,GAAG,CAACC,OAAO,GAAG,CAAC,CAAC,KAAK;EAChD,MAAM;MAAEC,IAAI,GAAG,GAAG;MAAEC;IAAwB,CAAC,GAAGF,OAAO;IAAxBG,YAAY,4BAAKH,OAAO;EACvD,IAAII,YAAY,GAAGF,MAAM;EAEzB,IAAI;IACF,IAAIE,YAAY,KAAKC,SAAS,IAAID,YAAY,KAAK,IAAI,EAAE;MAAA;MACvD,MAAME,QAAQ,uCAAGC,MAAM,gEAAN,QAAQC,QAAQ,qDAAhB,iBAAkBF,QAAQ,yEAAI,MAAM;MACrDF,YAAY,GAAGE,QAAQ,CAACG,UAAU,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,KAAK;IAC5D;EACF,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV;IACAN,YAAY,GAAG,KAAK;EACtB;EAEA;IACEH,IAAI,EAAEA,IAAI;IACVU,OAAO,EAAE,IAAIC,IAAI,CACf,IAAIA,IAAI,EAAE,CAACC,OAAO,EAAE,GAAGf,MAAM,CAACgB,QAAQ,CAACC,aAAa,GAAG,IAAI,CAC5D;IACDb,MAAM,EAAEE;EAAY,GACjBD,YAAY;AAEnB,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}