{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-block-style/src/StyleWrapper/StyleWrapperEdit.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React from 'react';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport { Icon, SidebarPopup } from '@plone/volto/components';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport { StyleSchema } from './schema';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nconst StyleWrapperEdit = props => {\n  const {\n    block,\n    blockData,\n    selected,\n    onChangeBlock,\n    onChangeValue,\n    data,\n    isVisible,\n    setIsVisible\n  } = props;\n  const schema = React.useMemo(() => StyleSchema(), []);\n  const closeSidebar = React.useCallback(e => {\n    let clickInSidebars = false;\n    const sidebars = document.querySelectorAll('aside.sidebar-container') || [];\n    sidebars.forEach(sidebar => {\n      if (doesNodeContainClick(sidebar, e) && !clickInSidebars) {\n        clickInSidebars = true;\n      }\n    });\n    if (isVisible && !clickInSidebars) {\n      setIsVisible(false);\n    }\n  }, [isVisible, setIsVisible]);\n  const deleteAllStyle = React.useCallback(() => {\n    const newData = _objectSpread({}, blockData);\n    delete newData.styles;\n    onChangeBlock(block, newData);\n  }, [block, blockData, onChangeBlock]);\n  React.useEffect(() => {\n    document.addEventListener('click', closeSidebar, false);\n    return () => {\n      document.removeEventListener('click', closeSidebar);\n    };\n  }, [closeSidebar]);\n  return selected && isVisible ? __jsx(SidebarPopup, {\n    open: selected && isVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(InlineForm, {\n    schema: schema,\n    title: __jsx(React.Fragment, null, schema.title, __jsx(\"button\", {\n      onClick: () => {\n        setIsVisible(false);\n      },\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, __jsx(Icon, {\n      name: clearSVG,\n      size: \"24px\",\n      title: \"Close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    })), __jsx(\"button\", {\n      onClick: deleteAllStyle,\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, __jsx(Icon, {\n      name: deleteSVG,\n      size: \"24px\",\n      title: \"Delete block style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }))),\n    onChangeField: (id, value) => {\n      onChangeValue(id, value);\n    },\n    formData: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  })) : '';\n};\nexport default StyleWrapperEdit;","map":{"version":3,"names":["React","doesNodeContainClick","Icon","SidebarPopup","InlineForm","StyleSchema","clearSVG","deleteSVG","StyleWrapperEdit","props","block","blockData","selected","onChangeBlock","onChangeValue","data","isVisible","setIsVisible","schema","useMemo","closeSidebar","useCallback","e","clickInSidebars","sidebars","document","querySelectorAll","forEach","sidebar","deleteAllStyle","newData","styles","useEffect","addEventListener","removeEventListener","title","float","id","value"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-block-style/src/StyleWrapper/StyleWrapperEdit.jsx"],"sourcesContent":["import React from 'react';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport { Icon, SidebarPopup } from '@plone/volto/components';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport { StyleSchema } from './schema';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\n\nconst StyleWrapperEdit = (props) => {\n  const {\n    block,\n    blockData,\n    selected,\n    onChangeBlock,\n    onChangeValue,\n    data,\n    isVisible,\n    setIsVisible,\n  } = props;\n\n  const schema = React.useMemo(() => StyleSchema(), []);\n\n  const closeSidebar = React.useCallback(\n    (e) => {\n      let clickInSidebars = false;\n      const sidebars =\n        document.querySelectorAll('aside.sidebar-container') || [];\n      sidebars.forEach((sidebar) => {\n        if (doesNodeContainClick(sidebar, e) && !clickInSidebars) {\n          clickInSidebars = true;\n        }\n      });\n      if (isVisible && !clickInSidebars) {\n        setIsVisible(false);\n      }\n    },\n    [isVisible, setIsVisible],\n  );\n\n  const deleteAllStyle = React.useCallback(() => {\n    const newData = {\n      ...blockData,\n    };\n    delete newData.styles;\n    onChangeBlock(block, newData);\n  }, [block, blockData, onChangeBlock]);\n\n  React.useEffect(() => {\n    document.addEventListener('click', closeSidebar, false);\n    return () => {\n      document.removeEventListener('click', closeSidebar);\n    };\n  }, [closeSidebar]);\n\n  return selected && isVisible ? (\n    <SidebarPopup open={selected && isVisible}>\n      <InlineForm\n        schema={schema}\n        title={\n          <>\n            {schema.title}\n            <button\n              onClick={() => {\n                setIsVisible(false);\n              }}\n              style={{ float: 'right' }}\n            >\n              <Icon name={clearSVG} size=\"24px\" title=\"Close\" />\n            </button>\n            <button onClick={deleteAllStyle} style={{ float: 'right' }}>\n              <Icon name={deleteSVG} size=\"24px\" title=\"Delete block style\" />\n            </button>\n          </>\n        }\n        onChangeField={(id, value) => {\n          onChangeValue(id, value);\n        }}\n        formData={data}\n      />\n    </SidebarPopup>\n  ) : (\n    ''\n  );\n};\n\nexport default StyleWrapperEdit;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}