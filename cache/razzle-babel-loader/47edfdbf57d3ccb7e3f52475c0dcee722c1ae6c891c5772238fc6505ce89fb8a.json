{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _map from \"lodash/map\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Widgets/SelectProviderPickWidget.jsx\";\nvar __jsx = React.createElement;\n/**\n * SelectProviderPickWidget component.\n * @module components/manage/Widgets/SelectProviderPickWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { getVocabFromHint, getVocabFromField, getVocabFromItems } from '@plone/volto/helpers';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { getVocabulary, getVocabularyTokenTitle } from '@plone/volto/actions';\nimport { customSelectStyles, DropdownIndicator, ClearIndicator, Option, selectTheme, MenuList } from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nvar messages = defineMessages({\n  \"default\": {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  idTitle: {\n    \"id\": \"Short Name\",\n    \"defaultMessage\": \"Short Name\"\n  },\n  idDescription: {\n    \"id\": \"Used for programmatic access to the fieldset.\",\n    \"defaultMessage\": \"Used for programmatic access to the fieldset.\"\n  },\n  title: {\n    \"id\": \"Title\",\n    \"defaultMessage\": \"Title\"\n  },\n  description: {\n    \"id\": \"Description\",\n    \"defaultMessage\": \"Description\"\n  },\n  close: {\n    \"id\": \"Close\",\n    \"defaultMessage\": \"Close\"\n  },\n  choices: {\n    \"id\": \"Choices\",\n    \"defaultMessage\": \"Choices\"\n  },\n  providerChoices: {\n    \"id\": \"Provider Choices\",\n    \"defaultMessage\": \"Choices\"\n  },\n  required: {\n    \"id\": \"Required\",\n    \"defaultMessage\": \"Required\"\n  },\n  select: {\n    \"id\": \"Select\\u2026\",\n    \"defaultMessage\": \"Select\\u2026\"\n  },\n  providerSelect: {\n    \"id\": \"Select provider\",\n    \"defaultMessage\": \"Select provider\"\n  },\n  no_value: {\n    \"id\": \"No value\",\n    \"defaultMessage\": \"No value\"\n  },\n  no_options: {\n    \"id\": \"No options\",\n    \"defaultMessage\": \"No options\"\n  }\n});\n\n/**\n * SelectProviderPickWidget component class.\n * @function SelectProviderPickWidget\n * @returns {string} Markup of the component.\n */\nvar SelectProviderPickWidget = /*#__PURE__*/function (_Component) {\n  _inherits(SelectProviderPickWidget, _Component);\n  var _super = _createSuper(SelectProviderPickWidget);\n  function SelectProviderPickWidget() {\n    _classCallCheck(this, SelectProviderPickWidget);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SelectProviderPickWidget, [{\n    key: \"componentDidMount\",\n    value:\n    /**\n     * Property types.\n     * @property {Object} propTypes Property types.\n     * @static\n     */\n\n    /**\n     * Default properties\n     * @property {Object} defaultProps Default properties.\n     * @static\n     */\n\n    /**\n     * Component did mount\n     * @method componentDidMount\n     * @returns {undefined}\n     */\n    function componentDidMount() {\n      var _this$props$choices;\n      if ((!this.props.choices || ((_this$props$choices = this.props.choices) === null || _this$props$choices === void 0 ? void 0 : _this$props$choices.length) === 0) && this.props.vocabBaseUrl) {\n        this.props.getVocabulary({\n          vocabNameOrURL: this.props.vocabBaseUrl,\n          size: -1,\n          subrequest: this.props.intl.locale\n        });\n      }\n    }\n  }, {\n    key: \"onChangeValue\",\n    value: function onChangeValue(selectedOption, type, onChange) {\n      var isMulti = this.props.isMulti ? this.props.isMulti : this.props.id === 'roles' || this.props.id === 'groups';\n      var changeValObjByType = function changeValObjByType(selectedOption, val, type) {\n        var joinedVal = {};\n        if (type === 'value') {\n          joinedVal = val ? _objectSpread(_objectSpread({}, val), {}, {\n            value: selectedOption.value\n          }) : {\n            value: selectedOption.value\n          };\n        } else {\n          joinedVal = val ? _objectSpread(_objectSpread({}, val), {}, {\n            provider: selectedOption.value\n          }) : {\n            provider: selectedOption.value\n          };\n        }\n        return joinedVal;\n      };\n      if (isMulti) {\n        return this.props.onChange(this.props.id, selectedOption.map(function (el) {\n          return el.value;\n        }));\n      }\n      return this.props.onChange(this.props.id, selectedOption && selectedOption.value !== 'no-value' ? changeValObjByType(selectedOption, this.props.value, type) : undefined);\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$placehold,\n        _this = this,\n        _this$props$placehold2;\n      var _this$props = this.props,\n        id = _this$props.id,\n        choices = _this$props.choices,\n        providerChoices = _this$props.providerChoices;\n\n      // Make sure that both disabled and isDisabled (from the DX layout feat work)\n      var disabled = this.props.disabled || this.props.isDisabled;\n      var Select = this.props.reactSelect[\"default\"];\n      var options = this.props.vocabBaseUrl ? this.props.choices : [].concat(_toConsumableArray(_map(choices, function (option) {\n        return {\n          value: option[0],\n          label:\n          // Fix \"None\" on the serializer, to remove when fixed in p.restapi\n          option[1] !== 'None' && option[1] ? option[1] : option[0]\n        };\n      })), _toConsumableArray(this.props.noValueOption && !this.props[\"default\"] ? [{\n        label: this.props.intl.formatMessage(messages.no_value),\n        value: 'no-value'\n      }] : []));\n      var providerOptions = this.props.vocabBaseUrl ? this.props.providerChoices : [].concat(_toConsumableArray(_map(providerChoices, function (option) {\n        return {\n          value: option[0],\n          label:\n          // Fix \"None\" on the serializer, to remove when fixed in p.restapi\n          option[1] !== 'None' && option[1] ? option[1] : option[0]\n        };\n      })), _toConsumableArray(this.props.noValueOption && !this.props[\"default\"] ? [{\n        label: this.props.intl.formatMessage(messages.no_value),\n        value: 'no-value'\n      }] : []));\n      var isMulti = this.props.isMulti ? this.props.isMulti : id === 'roles' || id === 'groups';\n      return __jsx(FormFieldWrapper, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 7\n        }\n      }), __jsx(Select, {\n        id: \"field-\".concat(id),\n        key: choices,\n        name: id,\n        isDisabled: disabled,\n        isSearchable: true,\n        className: \"react-select-container\",\n        classNamePrefix: \"react-select\",\n        isMulti: isMulti,\n        options: options,\n        styles: customSelectStyles,\n        theme: selectTheme,\n        components: _objectSpread(_objectSpread({}, (options === null || options === void 0 ? void 0 : options.length) > 25 && {\n          MenuList: MenuList\n        }), {}, {\n          DropdownIndicator: DropdownIndicator,\n          ClearIndicator: ClearIndicator,\n          Option: this.props.customOptionStyling || Option\n        }),\n        value: this.props.value && this.props.value.value ? {\n          label: this.props.value.value,\n          value: this.props.value.value\n        } : {\n          label: 'No value',\n          value: 'No value'\n        },\n        placeholder: (_this$props$placehold = this.props.placeholder) !== null && _this$props$placehold !== void 0 ? _this$props$placehold : this.props.intl.formatMessage(messages.select),\n        onChange: function onChange(selectedOption) {\n          return _this.onChangeValue(selectedOption, 'value');\n        },\n        isClearable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }\n      }), __jsx(Select, {\n        id: \"field-\".concat(id),\n        key: providerChoices,\n        name: id,\n        isDisabled: disabled,\n        isSearchable: true,\n        className: \"react-select-container\",\n        classNamePrefix: \"react-select\",\n        isMulti: isMulti,\n        options: providerOptions,\n        styles: customSelectStyles,\n        theme: selectTheme,\n        components: _objectSpread(_objectSpread({}, (options === null || options === void 0 ? void 0 : options.length) > 25 && {\n          MenuList: MenuList\n        }), {}, {\n          DropdownIndicator: DropdownIndicator,\n          ClearIndicator: ClearIndicator,\n          Option: this.props.customOptionStyling || Option\n        }),\n        value: this.props.value && this.props.value.provider ? {\n          label: this.props.value.provider,\n          value: this.props.value.provider\n        } : {\n          label: 'No value',\n          value: 'No value'\n        },\n        placeholder: (_this$props$placehold2 = this.props.placeholder) !== null && _this$props$placehold2 !== void 0 ? _this$props$placehold2 : this.props.intl.formatMessage(messages.providerSelect),\n        onChange: function onChange(selectedOption) {\n          return _this.onChangeValue(selectedOption, 'provider');\n        },\n        isClearable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return SelectProviderPickWidget;\n}(Component);\n_defineProperty(SelectProviderPickWidget, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  getVocabulary: PropTypes.func.isRequired,\n  getVocabularyTokenTitle: PropTypes.func.isRequired,\n  choices: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.array])),\n  providerChoices: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.array])),\n  items: PropTypes.shape({\n    vocabulary: PropTypes.object\n  }),\n  widgetOptions: PropTypes.shape({\n    vocabulary: PropTypes.object\n  }),\n  value: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.bool, PropTypes.func, PropTypes.array]),\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool,\n  noValueOption: PropTypes.bool,\n  customOptionStyling: PropTypes.any,\n  isMulti: PropTypes.bool\n});\n_defineProperty(SelectProviderPickWidget, \"defaultProps\", {\n  description: null,\n  required: false,\n  items: {\n    vocabulary: null\n  },\n  widgetOptions: {\n    vocabulary: null\n  },\n  error: [],\n  choices: [],\n  providerChoices: [],\n  value: null,\n  onChange: function onChange() {},\n  onBlur: function onBlur() {},\n  onClick: function onClick() {},\n  onEdit: null,\n  onDelete: null,\n  noValueOption: true,\n  customOptionStyling: null\n});\nexport var SelectProviderPickWidgetComponent = injectIntl(SelectProviderPickWidget);\n_c = SelectProviderPickWidgetComponent;\nexport default compose(injectLazyLibs(['reactSelect']), connect(function (state, props) {\n  var _state$vocabularies, _state$vocabularies$v, _state$vocabularies$v2;\n  var vocabBaseUrl = !props.choices ? getVocabFromHint(props) || getVocabFromField(props) || getVocabFromItems(props) : '';\n  var vocabState = (_state$vocabularies = state.vocabularies) === null || _state$vocabularies === void 0 ? void 0 : (_state$vocabularies$v = _state$vocabularies[vocabBaseUrl]) === null || _state$vocabularies$v === void 0 ? void 0 : (_state$vocabularies$v2 = _state$vocabularies$v.subrequests) === null || _state$vocabularies$v2 === void 0 ? void 0 : _state$vocabularies$v2[props.intl.locale];\n\n  // If the schema already has the choices in it, then do not try to get the vocab,\n  // even if there is one\n  if (props.choices) {\n    return {\n      choices: props.choices\n    };\n  } else if (vocabState) {\n    var _vocabState$items;\n    return {\n      vocabBaseUrl: vocabBaseUrl,\n      choices: (_vocabState$items = vocabState === null || vocabState === void 0 ? void 0 : vocabState.items) !== null && _vocabState$items !== void 0 ? _vocabState$items : []\n    };\n    // There is a moment that vocabState is not there yet, so we need to pass the\n    // vocabBaseUrl to the component.\n  } else if (vocabBaseUrl) {\n    return {\n      vocabBaseUrl: vocabBaseUrl\n    };\n  }\n  return {};\n}, {\n  getVocabulary: getVocabulary,\n  getVocabularyTokenTitle: getVocabularyTokenTitle\n}))(SelectProviderPickWidgetComponent);\nvar _c;\n$RefreshReg$(_c, \"SelectProviderPickWidgetComponent\");","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","defineMessages","injectIntl","getVocabFromHint","getVocabFromField","getVocabFromItems","FormFieldWrapper","getVocabulary","getVocabularyTokenTitle","customSelectStyles","DropdownIndicator","ClearIndicator","Option","selectTheme","MenuList","injectLazyLibs","messages","idTitle","idDescription","title","description","close","choices","providerChoices","required","select","providerSelect","no_value","no_options","SelectProviderPickWidget","props","length","vocabBaseUrl","vocabNameOrURL","size","subrequest","intl","locale","selectedOption","type","onChange","isMulti","id","changeValObjByType","val","joinedVal","value","provider","map","el","undefined","disabled","isDisabled","Select","reactSelect","options","option","label","noValueOption","formatMessage","providerOptions","customOptionStyling","placeholder","onChangeValue","string","isRequired","bool","error","arrayOf","func","oneOfType","object","array","items","shape","vocabulary","widgetOptions","onBlur","onClick","onEdit","onDelete","wrapped","any","SelectProviderPickWidgetComponent","state","vocabState","vocabularies","subrequests"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-datablocks/src/components/manage/Widgets/SelectProviderPickWidget.jsx"],"sourcesContent":["/**\n * SelectProviderPickWidget component.\n * @module components/manage/Widgets/SelectProviderPickWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport {\n  getVocabFromHint,\n  getVocabFromField,\n  getVocabFromItems,\n} from '@plone/volto/helpers';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport { getVocabulary, getVocabularyTokenTitle } from '@plone/volto/actions';\n\nimport {\n  customSelectStyles,\n  DropdownIndicator,\n  ClearIndicator,\n  Option,\n  selectTheme,\n  MenuList,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nconst messages = defineMessages({\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  idTitle: {\n    id: 'Short Name',\n    defaultMessage: 'Short Name',\n  },\n  idDescription: {\n    id: 'Used for programmatic access to the fieldset.',\n    defaultMessage: 'Used for programmatic access to the fieldset.',\n  },\n  title: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  description: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  close: {\n    id: 'Close',\n    defaultMessage: 'Close',\n  },\n  choices: {\n    id: 'Choices',\n    defaultMessage: 'Choices',\n  },\n  providerChoices: {\n    id: 'Provider Choices',\n    defaultMessage: 'Choices',\n  },\n\n  required: {\n    id: 'Required',\n    defaultMessage: 'Required',\n  },\n  select: {\n    id: 'Select…',\n    defaultMessage: 'Select…',\n  },\n  providerSelect: {\n    id: 'Select provider',\n    defaultMessage: 'Select provider',\n  },\n  no_value: {\n    id: 'No value',\n    defaultMessage: 'No value',\n  },\n  no_options: {\n    id: 'No options',\n    defaultMessage: 'No options',\n  },\n});\n\n/**\n * SelectProviderPickWidget component class.\n * @function SelectProviderPickWidget\n * @returns {string} Markup of the component.\n */\nclass SelectProviderPickWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    getVocabulary: PropTypes.func.isRequired,\n    getVocabularyTokenTitle: PropTypes.func.isRequired,\n    choices: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    ),\n    providerChoices: PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    ),\n    items: PropTypes.shape({\n      vocabulary: PropTypes.object,\n    }),\n    widgetOptions: PropTypes.shape({\n      vocabulary: PropTypes.object,\n    }),\n    value: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.string,\n      PropTypes.bool,\n      PropTypes.func,\n      PropTypes.array,\n    ]),\n    onChange: PropTypes.func.isRequired,\n    onBlur: PropTypes.func,\n    onClick: PropTypes.func,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n    wrapped: PropTypes.bool,\n    noValueOption: PropTypes.bool,\n    customOptionStyling: PropTypes.any,\n    isMulti: PropTypes.bool,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    items: {\n      vocabulary: null,\n    },\n    widgetOptions: {\n      vocabulary: null,\n    },\n    error: [],\n    choices: [],\n    providerChoices: [],\n    value: null,\n    onChange: () => {},\n    onBlur: () => {},\n    onClick: () => {},\n    onEdit: null,\n    onDelete: null,\n    noValueOption: true,\n    customOptionStyling: null,\n  };\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (\n      (!this.props.choices || this.props.choices?.length === 0) &&\n      this.props.vocabBaseUrl\n    ) {\n      this.props.getVocabulary({\n        vocabNameOrURL: this.props.vocabBaseUrl,\n        size: -1,\n        subrequest: this.props.intl.locale,\n      });\n    }\n  }\n\n  onChangeValue(selectedOption, type, onChange) {\n    const isMulti = this.props.isMulti\n      ? this.props.isMulti\n      : this.props.id === 'roles' || this.props.id === 'groups';\n\n    const changeValObjByType = (selectedOption, val, type) => {\n      var joinedVal = {};\n      if (type === 'value') {\n        joinedVal = val\n          ? { ...val, value: selectedOption.value }\n          : { value: selectedOption.value };\n      } else {\n        joinedVal = val\n          ? { ...val, provider: selectedOption.value }\n          : { provider: selectedOption.value };\n      }\n      return joinedVal;\n    };\n\n    if (isMulti) {\n      return this.props.onChange(\n        this.props.id,\n        selectedOption.map((el) => el.value),\n      );\n    }\n    return this.props.onChange(\n      this.props.id,\n      selectedOption && selectedOption.value !== 'no-value'\n        ? changeValObjByType(selectedOption, this.props.value, type)\n        : undefined,\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { id, choices, providerChoices } = this.props;\n\n    // Make sure that both disabled and isDisabled (from the DX layout feat work)\n    const disabled = this.props.disabled || this.props.isDisabled;\n    const Select = this.props.reactSelect.default;\n\n    let options = this.props.vocabBaseUrl\n      ? this.props.choices\n      : [\n          ...map(choices, (option) => ({\n            value: option[0],\n            label:\n              // Fix \"None\" on the serializer, to remove when fixed in p.restapi\n              option[1] !== 'None' && option[1] ? option[1] : option[0],\n          })),\n          // Only set \"no-value\" option if there's no default in the field\n          // TODO: also if this.props.defaultValue?\n          ...(this.props.noValueOption && !this.props.default\n            ? [\n                {\n                  label: this.props.intl.formatMessage(messages.no_value),\n                  value: 'no-value',\n                },\n              ]\n            : []),\n        ];\n\n    let providerOptions = this.props.vocabBaseUrl\n      ? this.props.providerChoices\n      : [\n          ...map(providerChoices, (option) => ({\n            value: option[0],\n            label:\n              // Fix \"None\" on the serializer, to remove when fixed in p.restapi\n              option[1] !== 'None' && option[1] ? option[1] : option[0],\n          })),\n          // Only set \"no-value\" option if there's no default in the field\n          // TODO: also if this.props.defaultValue?\n          ...(this.props.noValueOption && !this.props.default\n            ? [\n                {\n                  label: this.props.intl.formatMessage(messages.no_value),\n                  value: 'no-value',\n                },\n              ]\n            : []),\n        ];\n\n    const isMulti = this.props.isMulti\n      ? this.props.isMulti\n      : id === 'roles' || id === 'groups';\n\n    return (\n      <FormFieldWrapper {...this.props}>\n        <Select\n          id={`field-${id}`}\n          key={choices}\n          name={id}\n          isDisabled={disabled}\n          isSearchable={true}\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          isMulti={isMulti}\n          options={options}\n          styles={customSelectStyles}\n          theme={selectTheme}\n          components={{\n            ...(options?.length > 25 && {\n              MenuList,\n            }),\n            DropdownIndicator,\n            ClearIndicator,\n            Option: this.props.customOptionStyling || Option,\n          }}\n          value={\n            this.props.value && this.props.value.value\n              ? {\n                  label: this.props.value.value,\n                  value: this.props.value.value,\n                }\n              : {\n                  label: 'No value',\n                  value: 'No value',\n                }\n          }\n          placeholder={\n            this.props.placeholder ??\n            this.props.intl.formatMessage(messages.select)\n          }\n          onChange={(selectedOption) =>\n            this.onChangeValue(selectedOption, 'value')\n          }\n          isClearable\n        />\n\n        <Select\n          id={`field-${id}`}\n          key={providerChoices}\n          name={id}\n          isDisabled={disabled}\n          isSearchable={true}\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          isMulti={isMulti}\n          options={providerOptions}\n          styles={customSelectStyles}\n          theme={selectTheme}\n          components={{\n            ...(options?.length > 25 && {\n              MenuList,\n            }),\n            DropdownIndicator,\n            ClearIndicator,\n            Option: this.props.customOptionStyling || Option,\n          }}\n          value={\n            this.props.value && this.props.value.provider\n              ? {\n                  label: this.props.value.provider,\n                  value: this.props.value.provider,\n                }\n              : {\n                  label: 'No value',\n                  value: 'No value',\n                }\n          }\n          placeholder={\n            this.props.placeholder ??\n            this.props.intl.formatMessage(messages.providerSelect)\n          }\n          onChange={(selectedOption) =>\n            this.onChangeValue(selectedOption, 'provider')\n          }\n          isClearable\n        />\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport const SelectProviderPickWidgetComponent = injectIntl(\n  SelectProviderPickWidget,\n);\n\nexport default compose(\n  injectLazyLibs(['reactSelect']),\n  connect(\n    (state, props) => {\n      const vocabBaseUrl = !props.choices\n        ? getVocabFromHint(props) ||\n          getVocabFromField(props) ||\n          getVocabFromItems(props)\n        : '';\n\n      const vocabState =\n        state.vocabularies?.[vocabBaseUrl]?.subrequests?.[props.intl.locale];\n\n      // If the schema already has the choices in it, then do not try to get the vocab,\n      // even if there is one\n      if (props.choices) {\n        return {\n          choices: props.choices,\n        };\n      } else if (vocabState) {\n        return {\n          vocabBaseUrl,\n          choices: vocabState?.items ?? [],\n        };\n        // There is a moment that vocabState is not there yet, so we need to pass the\n        // vocabBaseUrl to the component.\n      } else if (vocabBaseUrl) {\n        return {\n          vocabBaseUrl,\n        };\n      }\n      return {};\n    },\n    { getVocabulary, getVocabularyTokenTitle },\n  ),\n)(SelectProviderPickWidgetComponent);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Default","defaultMessage":"Default"},{"id":"Short Name","defaultMessage":"Short Name"},{"id":"Used for programmatic access to the fieldset.","defaultMessage":"Used for programmatic access to the fieldset."},{"id":"Title","defaultMessage":"Title"},{"id":"Description","defaultMessage":"Description"},{"id":"Close","defaultMessage":"Close"},{"id":"Choices","defaultMessage":"Choices"},{"id":"Provider Choices","defaultMessage":"Choices"},{"id":"Required","defaultMessage":"Required"},{"id":"Select…","defaultMessage":"Select…"},{"id":"Select provider","defaultMessage":"Select provider"},{"id":"No value","defaultMessage":"No value"},{"id":"No options","defaultMessage":"No options"}]}},"sourceType":"module","externalDependencies":[]}