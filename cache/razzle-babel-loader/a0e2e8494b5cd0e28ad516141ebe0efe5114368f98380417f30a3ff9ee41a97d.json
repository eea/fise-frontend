{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport os from 'os';\nvar applyConfig = function applyConfig(config) {\n  var _sentryOptions = config.settings.sentryOptions;\n  var sentryOptions = {\n    environment: 'production',\n    serverName: os.hostname(),\n    logger: 'volto',\n    tags: {\n      site: 'localhost',\n      logger: 'volto',\n      server_name: os.hostname()\n    }\n  };\n  if (config.settings.apiPath) {\n    sentryOptions.tags.site = config.settings.apiPath.replace('/api', '').replace('https://', '').replace('http://', '');\n  }\n  if (sentryOptions.tags.site.includes('localhost')) {\n    sentryOptions.environment = 'development';\n  }\n  if (sentryOptions.tags.site.includes('dev')) {\n    sentryOptions.environment = 'development';\n  }\n  config.settings.sentryOptions = _sentryOptions ? function (libraries) {\n    return _objectSpread(_objectSpread({}, _sentryOptions(libraries)), sentryOptions);\n  } : function () {\n    return _objectSpread({}, sentryOptions);\n  };\n  return config;\n};\nexport default applyConfig;","map":{"version":3,"names":["os","applyConfig","config","_sentryOptions","settings","sentryOptions","environment","serverName","hostname","logger","tags","site","server_name","apiPath","replace","includes","libraries"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-sentry-rancher-config/src/index.js"],"sourcesContent":["import os from 'os';\n\nconst applyConfig = (config) => {\n  const _sentryOptions = config.settings.sentryOptions;\n  const sentryOptions = {\n    environment: 'production',\n    serverName: os.hostname(),\n    logger: 'volto',\n    tags: {\n      site: 'localhost',\n      logger: 'volto',\n      server_name: os.hostname(),\n    },\n  };\n\n  if (config.settings.apiPath) {\n    sentryOptions.tags.site = config.settings.apiPath\n      .replace('/api', '')\n      .replace('https://', '')\n      .replace('http://', '');\n  }\n\n  if (sentryOptions.tags.site.includes('localhost')) {\n    sentryOptions.environment = 'development';\n  }\n\n  if (sentryOptions.tags.site.includes('dev')) {\n    sentryOptions.environment = 'development';\n  }\n\n  config.settings.sentryOptions = _sentryOptions\n    ? (libraries) => ({\n        ..._sentryOptions(libraries),\n        ...sentryOptions,\n      })\n    : () => ({\n        ...sentryOptions,\n      });\n\n  return config;\n};\n\nexport default applyConfig;\n"],"mappings":";AAAA,OAAOA,EAAE,MAAM,IAAI;AAEnB,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,MAAM,EAAK;EAC9B,IAAMC,cAAc,GAAGD,MAAM,CAACE,QAAQ,CAACC,aAAa;EACpD,IAAMA,aAAa,GAAG;IACpBC,WAAW,EAAE,YAAY;IACzBC,UAAU,EAAEP,EAAE,CAACQ,QAAQ,EAAE;IACzBC,MAAM,EAAE,OAAO;IACfC,IAAI,EAAE;MACJC,IAAI,EAAE,WAAW;MACjBF,MAAM,EAAE,OAAO;MACfG,WAAW,EAAEZ,EAAE,CAACQ,QAAQ;IAC1B;EACF,CAAC;EAED,IAAIN,MAAM,CAACE,QAAQ,CAACS,OAAO,EAAE;IAC3BR,aAAa,CAACK,IAAI,CAACC,IAAI,GAAGT,MAAM,CAACE,QAAQ,CAACS,OAAO,CAC9CC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CACnBA,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CACvBA,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;EAC3B;EAEA,IAAIT,aAAa,CAACK,IAAI,CAACC,IAAI,CAACI,QAAQ,CAAC,WAAW,CAAC,EAAE;IACjDV,aAAa,CAACC,WAAW,GAAG,aAAa;EAC3C;EAEA,IAAID,aAAa,CAACK,IAAI,CAACC,IAAI,CAACI,QAAQ,CAAC,KAAK,CAAC,EAAE;IAC3CV,aAAa,CAACC,WAAW,GAAG,aAAa;EAC3C;EAEAJ,MAAM,CAACE,QAAQ,CAACC,aAAa,GAAGF,cAAc,GAC1C,UAACa,SAAS;IAAA,uCACLb,cAAc,CAACa,SAAS,CAAC,GACzBX,aAAa;EAAA,CAChB,GACF;IAAA,yBACKA,aAAa;EAAA,CAChB;EAEN,OAAOH,MAAM;AACf,CAAC;AAED,eAAeD,WAAW"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}