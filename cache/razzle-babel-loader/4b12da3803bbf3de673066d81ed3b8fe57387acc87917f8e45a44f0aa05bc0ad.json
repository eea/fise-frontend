{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport View from './View';\nimport Edit from './Edit';\nimport presentationSVG from '@plone/volto/icons/presentation.svg';\nexport default (config => {\n  const visualizationBlockConfig = {\n    id: 'plotly_chart',\n    title: 'Plotly chart',\n    icon: presentationSVG,\n    group: 'plotly',\n    view: View,\n    edit: Edit,\n    restricted: false,\n    mostUsed: false,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: []\n    }\n  };\n  config.blocks.blocksConfig.plotly_chart = visualizationBlockConfig;\n  // This is required for compatibility with previous version\n  // TODO: script for migration\n  config.blocks.blocksConfig.connected_plotly_chart = _objectSpread(_objectSpread({}, visualizationBlockConfig), {}, {\n    id: 'connected_plotly_chart'\n  });\n  return config;\n});","map":{"version":3,"names":["View","Edit","presentationSVG","config","visualizationBlockConfig","id","title","icon","group","view","edit","restricted","mostUsed","sidebarTab","security","addPermission","blocks","blocksConfig","plotly_chart","connected_plotly_chart"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-plotlycharts/src/Blocks/PlotlyChart/index.js"],"sourcesContent":["import View from './View';\nimport Edit from './Edit';\n\nimport presentationSVG from '@plone/volto/icons/presentation.svg';\n\nexport default (config) => {\n  const visualizationBlockConfig = {\n    id: 'plotly_chart',\n    title: 'Plotly chart',\n    icon: presentationSVG,\n    group: 'plotly',\n    view: View,\n    edit: Edit,\n    restricted: false,\n    mostUsed: false,\n    sidebarTab: 1,\n    security: {\n      addPermission: [],\n      view: [],\n    },\n  };\n\n  config.blocks.blocksConfig.plotly_chart = visualizationBlockConfig;\n  // This is required for compatibility with previous version\n  // TODO: script for migration\n  config.blocks.blocksConfig.connected_plotly_chart = {\n    ...visualizationBlockConfig,\n    id: 'connected_plotly_chart',\n  };\n  return config;\n};\n"],"mappings":";;;AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAEzB,OAAOC,eAAe,MAAM,qCAAqC;AAEjE,gBAAgBC,MAAM,IAAK;EACzB,MAAMC,wBAAwB,GAAG;IAC/BC,EAAE,EAAE,cAAc;IAClBC,KAAK,EAAE,cAAc;IACrBC,IAAI,EAAEL,eAAe;IACrBM,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAET,IAAI;IACVU,IAAI,EAAET,IAAI;IACVU,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE;MACRC,aAAa,EAAE,EAAE;MACjBN,IAAI,EAAE;IACR;EACF,CAAC;EAEDN,MAAM,CAACa,MAAM,CAACC,YAAY,CAACC,YAAY,GAAGd,wBAAwB;EAClE;EACA;EACAD,MAAM,CAACa,MAAM,CAACC,YAAY,CAACE,sBAAsB,mCAC5Cf,wBAAwB;IAC3BC,EAAE,EAAE;EAAwB,EAC7B;EACD,OAAOF,MAAM;AACf,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}