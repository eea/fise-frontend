{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-tabs-block/src/components/EditBlockWrapper.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React from 'react';\nimport { Icon, BlockChooser } from '@plone/volto/components';\nimport { blockHasValue } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport { Button } from 'semantic-ui-react';\nimport includes from 'lodash/includes';\nimport isBoolean from 'lodash/isBoolean';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport cx from 'classnames';\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport addSVG from '@plone/volto/icons/circle-plus.svg';\nimport trashSVG from '@plone/volto/icons/delete.svg';\nconst messages = defineMessages({\n  unknownBlock: {\n    \"id\": \"Unknown Block\",\n    \"defaultMessage\": \"Unknown Block {block}\"\n  },\n  delete: {\n    \"id\": \"delete\",\n    \"defaultMessage\": \"delete\"\n  }\n});\nclass EditBlockWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"handleClickOutside\", e => {\n      if (this.blockNode.current && doesNodeContainClick(this.blockNode.current, e)) {\n        return;\n      }\n\n      // if (this.props.handleClickOutside) {\n      //   this.props.handleClickOutside();\n      // }\n\n      if (this.state.addNewBlockOpened) {\n        this.setState({\n          addNewBlockOpened: false\n        });\n        return true;\n      }\n    });\n    _defineProperty(this, \"blockNode\", /*#__PURE__*/React.createRef());\n    this.state = {\n      addNewBlockOpened: false\n    };\n  }\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n  render() {\n    const {\n      intl,\n      blockProps,\n      draginfo,\n      extraControls,\n      children\n    } = this.props;\n    const {\n      allowedBlocks,\n      block,\n      data,\n      onDeleteBlock,\n      onMutateBlock,\n      selected\n    } = blockProps;\n    const type = data['@type'];\n    const {\n      disableNewBlocks\n    } = data;\n    const visible = !data.fixed;\n    const required = isBoolean(data.required) ? data.required : includes(config.blocks.requiredBlocks, type);\n    return __jsx(\"div\", {\n      ref: this.blockNode,\n      className: \"block-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", _extends({\n      ref: draginfo === null || draginfo === void 0 ? void 0 : draginfo.innerRef\n    }, selected ? draginfo === null || draginfo === void 0 ? void 0 : draginfo.draggableProps : null, {\n      className: `block-editor-${data['@type']}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), !selected && __jsx(\"div\", _extends({\n      style: {\n        display: 'none'\n        // keep react-beautiful-dnd happy\n      }\n    }, draginfo.dragHandleProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    })), selected && __jsx(\"div\", {\n      className: \"block-toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", _extends({\n      style: {\n        display: visible ? 'inline-block' : 'none'\n      }\n    }, draginfo.dragHandleProps, {\n      className: \"drag handle wrapper-column-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }), __jsx(Button, {\n      icon: true,\n      basic: true,\n      title: \"Drag and drop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      name: dragSVG,\n      size: \"19px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }))), extraControls, !disableNewBlocks && !blockHasValue(data) && __jsx(Button, {\n      icon: true,\n      basic: true,\n      title: \"Add block\",\n      onClick: () => {\n        this.setState({\n          addNewBlockOpened: !this.state.addNewBlockOpened\n        });\n      },\n      className: \"column-block-add-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      name: addSVG,\n      className: \"\",\n      size: \"19px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    })), !required && __jsx(Button, {\n      icon: true,\n      basic: true,\n      title: \"Remove block\",\n      onClick: () => onDeleteBlock(block),\n      className: \"delete-button-column-block\",\n      \"aria-label\": intl.formatMessage(messages.delete),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      name: trashSVG,\n      size: \"19px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    })), this.state.addNewBlockOpened && __jsx(BlockChooser, {\n      onMutateBlock: (id, value) => {\n        this.setState({\n          addNewBlockOpened: false\n        });\n        onMutateBlock(id, value);\n      },\n      currentBlock: block,\n      allowedBlocks: allowedBlocks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: cx('ui drag block wrapper inner', type, {\n        multiSelected: this.props.multiSelected\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, children)));\n  }\n}\nexport default injectIntl(EditBlockWrapper);","map":{"version":3,"names":["React","Icon","BlockChooser","blockHasValue","config","Button","includes","isBoolean","defineMessages","injectIntl","doesNodeContainClick","cx","dragSVG","addSVG","trashSVG","messages","unknownBlock","delete","EditBlockWrapper","Component","constructor","props","e","blockNode","current","state","addNewBlockOpened","setState","createRef","componentDidMount","document","addEventListener","handleClickOutside","componentWillUnmount","removeEventListener","render","intl","blockProps","draginfo","extraControls","children","allowedBlocks","block","data","onDeleteBlock","onMutateBlock","selected","type","disableNewBlocks","visible","fixed","required","blocks","requiredBlocks","innerRef","draggableProps","display","dragHandleProps","formatMessage","id","value","multiSelected"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-tabs-block/src/components/EditBlockWrapper.jsx"],"sourcesContent":["import React from 'react';\nimport { Icon, BlockChooser } from '@plone/volto/components';\nimport { blockHasValue } from '@plone/volto/helpers';\nimport config from '@plone/volto/registry';\nimport { Button } from 'semantic-ui-react';\nimport includes from 'lodash/includes';\nimport isBoolean from 'lodash/isBoolean';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport cx from 'classnames';\n\nimport dragSVG from '@plone/volto/icons/drag.svg';\nimport addSVG from '@plone/volto/icons/circle-plus.svg';\nimport trashSVG from '@plone/volto/icons/delete.svg';\n\nconst messages = defineMessages({\n  unknownBlock: {\n    id: 'Unknown Block',\n    defaultMessage: 'Unknown Block {block}',\n  },\n  delete: {\n    id: 'delete',\n    defaultMessage: 'delete',\n  },\n});\n\nclass EditBlockWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addNewBlockOpened: false,\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  handleClickOutside = (e) => {\n    if (\n      this.blockNode.current &&\n      doesNodeContainClick(this.blockNode.current, e)\n    ) {\n      return;\n    }\n\n    // if (this.props.handleClickOutside) {\n    //   this.props.handleClickOutside();\n    // }\n\n    if (this.state.addNewBlockOpened) {\n      this.setState({\n        addNewBlockOpened: false,\n      });\n      return true;\n    }\n  };\n\n  blockNode = React.createRef();\n\n  render() {\n    const { intl, blockProps, draginfo, extraControls, children } = this.props;\n\n    const {\n      allowedBlocks,\n      block,\n      data,\n      onDeleteBlock,\n      onMutateBlock,\n      selected,\n    } = blockProps;\n    const type = data['@type'];\n    const { disableNewBlocks } = data;\n    const visible = !data.fixed;\n\n    const required = isBoolean(data.required)\n      ? data.required\n      : includes(config.blocks.requiredBlocks, type);\n\n    return (\n      <div ref={this.blockNode} className=\"block-wrapper\">\n        <div\n          ref={draginfo?.innerRef}\n          {...(selected ? draginfo?.draggableProps : null)}\n          className={`block-editor-${data['@type']}`}\n        >\n          {!selected && (\n            <div\n              style={{\n                display: 'none',\n                // keep react-beautiful-dnd happy\n              }}\n              {...draginfo.dragHandleProps}\n            ></div>\n          )}\n          {selected && (\n            <div className=\"block-toolbar\">\n              <div\n                style={{\n                  display: visible ? 'inline-block' : 'none',\n                }}\n                {...draginfo.dragHandleProps}\n                className=\"drag handle wrapper-column-block\"\n              >\n                <Button icon basic title=\"Drag and drop\">\n                  <Icon name={dragSVG} size=\"19px\" />\n                </Button>\n              </div>\n\n              {extraControls}\n\n              {!disableNewBlocks && !blockHasValue(data) && (\n                <Button\n                  icon\n                  basic\n                  title=\"Add block\"\n                  onClick={() => {\n                    this.setState({\n                      addNewBlockOpened: !this.state.addNewBlockOpened,\n                    });\n                  }}\n                  className=\"column-block-add-button\"\n                >\n                  <Icon name={addSVG} className=\"\" size=\"19px\" />\n                </Button>\n              )}\n              {!required && (\n                <Button\n                  icon\n                  basic\n                  title=\"Remove block\"\n                  onClick={() => onDeleteBlock(block)}\n                  className=\"delete-button-column-block\"\n                  aria-label={intl.formatMessage(messages.delete)}\n                >\n                  <Icon name={trashSVG} size=\"19px\" />\n                </Button>\n              )}\n              {this.state.addNewBlockOpened && (\n                <BlockChooser\n                  onMutateBlock={(id, value) => {\n                    this.setState({ addNewBlockOpened: false });\n                    onMutateBlock(id, value);\n                  }}\n                  currentBlock={block}\n                  allowedBlocks={allowedBlocks}\n                />\n              )}\n            </div>\n          )}\n\n          <div\n            className={cx('ui drag block wrapper inner', type, {\n              multiSelected: this.props.multiSelected,\n            })}\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(EditBlockWrapper);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Unknown Block","defaultMessage":"Unknown Block {block}"},{"id":"delete","defaultMessage":"delete"}]}},"sourceType":"module","externalDependencies":[]}