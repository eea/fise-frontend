{"ast":null,"code":"import { CHANGE_MAP_DATA, GET_MAP_DATA } from '../constants';\nconst initialState = [];\nexport const addMapDataToState = (state = initialState, action) => {\n  let existingIdIndex;\n\n  //check for existing mapData on the same page element and edits it\n  const hasMapData = state.filter((element, index) => {\n    if (element.id === action.mapData.id) {\n      existingIdIndex = index;\n      return element;\n    }\n    return undefined;\n  });\n  if (hasMapData.length !== 0) {\n    const beforeId = [...state].slice(0, existingIdIndex);\n    const afterId = [...state].slice(existingIdIndex + 1, state.length);\n    const newState = [...beforeId, action.mapData, ...afterId];\n    return newState;\n  } else return [...state, action.mapData];\n};\nexport default function updateMapData(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${CHANGE_MAP_DATA}`:\n      return action.mapData;\n    case `${GET_MAP_DATA}`:\n      return action.mapData;\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["CHANGE_MAP_DATA","GET_MAP_DATA","initialState","addMapDataToState","state","action","existingIdIndex","hasMapData","filter","element","index","id","mapData","undefined","length","beforeId","slice","afterId","newState","updateMapData","type"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/reducers/map_data.js"],"sourcesContent":["import { CHANGE_MAP_DATA, GET_MAP_DATA } from '../constants';\n\nconst initialState = [];\n\nexport const addMapDataToState = (state = initialState, action) => {\n  let existingIdIndex;\n\n  //check for existing mapData on the same page element and edits it\n  const hasMapData = state.filter((element, index) => {\n    if (element.id === action.mapData.id) {\n      existingIdIndex = index;\n      return element;\n    }\n    return undefined;\n  });\n\n  if (hasMapData.length !== 0) {\n    const beforeId = [...state].slice(0, existingIdIndex);\n    const afterId = [...state].slice(existingIdIndex + 1, state.length);\n    const newState = [...beforeId, action.mapData, ...afterId];\n\n    return newState;\n  } else return [...state, action.mapData];\n};\n\nexport default function updateMapData(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${CHANGE_MAP_DATA}`:\n      return action.mapData;\n    case `${GET_MAP_DATA}`:\n      return action.mapData;\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,YAAY,QAAQ,cAAc;AAE5D,MAAMC,YAAY,GAAG,EAAE;AAEvB,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAAGF,YAAY,EAAEG,MAAM,KAAK;EACjE,IAAIC,eAAe;;EAEnB;EACA,MAAMC,UAAU,GAAGH,KAAK,CAACI,MAAM,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;IAClD,IAAID,OAAO,CAACE,EAAE,KAAKN,MAAM,CAACO,OAAO,CAACD,EAAE,EAAE;MACpCL,eAAe,GAAGI,KAAK;MACvB,OAAOD,OAAO;IAChB;IACA,OAAOI,SAAS;EAClB,CAAC,CAAC;EAEF,IAAIN,UAAU,CAACO,MAAM,KAAK,CAAC,EAAE;IAC3B,MAAMC,QAAQ,GAAG,CAAC,GAAGX,KAAK,CAAC,CAACY,KAAK,CAAC,CAAC,EAAEV,eAAe,CAAC;IACrD,MAAMW,OAAO,GAAG,CAAC,GAAGb,KAAK,CAAC,CAACY,KAAK,CAACV,eAAe,GAAG,CAAC,EAAEF,KAAK,CAACU,MAAM,CAAC;IACnE,MAAMI,QAAQ,GAAG,CAAC,GAAGH,QAAQ,EAAEV,MAAM,CAACO,OAAO,EAAE,GAAGK,OAAO,CAAC;IAE1D,OAAOC,QAAQ;EACjB,CAAC,MAAM,OAAO,CAAC,GAAGd,KAAK,EAAEC,MAAM,CAACO,OAAO,CAAC;AAC1C,CAAC;AAED,eAAe,SAASO,aAAa,CAACf,KAAK,GAAGF,YAAY,EAAEG,MAAM,GAAG,CAAC,CAAC,EAAE;EACvE,QAAQA,MAAM,CAACe,IAAI;IACjB,KAAM,GAAEpB,eAAgB,EAAC;MACvB,OAAOK,MAAM,CAACO,OAAO;IACvB,KAAM,GAAEX,YAAa,EAAC;MACpB,OAAOI,MAAM,CAACO,OAAO;IACvB;MACE,OAAOR,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}