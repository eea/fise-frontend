{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Groups reducer.\n * @module reducers/groups/groups\n */\n\nimport { CREATE_GROUP, DELETE_GROUP, GET_GROUP, LIST_GROUPS, LIST_FILTER_GROUPS, UPDATE_GROUP } from '@plone/volto/constants/ActionTypes';\nconst initialState = {\n  create: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  get: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  groups: [],\n  group: {}\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Groups reducer.\n * @function groups\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function groups(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${CREATE_GROUP}_PENDING`:\n    case `${DELETE_GROUP}_PENDING`:\n    case `${GET_GROUP}_PENDING`:\n    case `${LIST_GROUPS}_PENDING`:\n    case `${LIST_FILTER_GROUPS}_PENDING`:\n    case `${UPDATE_GROUP}_PENDING`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null\n        }\n      });\n    case `${GET_GROUP}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        group: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${LIST_GROUPS}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${LIST_FILTER_GROUPS}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filter_groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${CREATE_GROUP}_SUCCESS`:\n    case `${DELETE_GROUP}_SUCCESS`:\n    case `${UPDATE_GROUP}_SUCCESS`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null\n        }\n      });\n    case `${CREATE_GROUP}_FAIL`:\n    case `${DELETE_GROUP}_FAIL`:\n    case `${UPDATE_GROUP}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    case `${GET_GROUP}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        group: {},\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    case `${LIST_GROUPS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    case `${LIST_FILTER_GROUPS}_FAIL`:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filter_groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error\n        }\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["CREATE_GROUP","DELETE_GROUP","GET_GROUP","LIST_GROUPS","LIST_FILTER_GROUPS","UPDATE_GROUP","initialState","create","loaded","loading","error","delete","get","list","update","groups","group","getRequestKey","actionType","split","toLowerCase","state","action","type","result","filter_groups"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/groups/groups.js"],"sourcesContent":["/**\n * Groups reducer.\n * @module reducers/groups/groups\n */\n\nimport {\n  CREATE_GROUP,\n  DELETE_GROUP,\n  GET_GROUP,\n  LIST_GROUPS,\n  LIST_FILTER_GROUPS,\n  UPDATE_GROUP,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  create: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  delete: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  list: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  update: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  groups: [],\n  group: {},\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Groups reducer.\n * @function groups\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function groups(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${CREATE_GROUP}_PENDING`:\n    case `${DELETE_GROUP}_PENDING`:\n    case `${GET_GROUP}_PENDING`:\n    case `${LIST_GROUPS}_PENDING`:\n    case `${LIST_FILTER_GROUPS}_PENDING`:\n    case `${UPDATE_GROUP}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_GROUP}_SUCCESS`:\n      return {\n        ...state,\n        group: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_GROUPS}_SUCCESS`:\n      return {\n        ...state,\n        groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_FILTER_GROUPS}_SUCCESS`:\n      return {\n        ...state,\n        filter_groups: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${CREATE_GROUP}_SUCCESS`:\n    case `${DELETE_GROUP}_SUCCESS`:\n    case `${UPDATE_GROUP}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${CREATE_GROUP}_FAIL`:\n    case `${DELETE_GROUP}_FAIL`:\n    case `${UPDATE_GROUP}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${GET_GROUP}_FAIL`:\n      return {\n        ...state,\n        group: {},\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_GROUPS}_FAIL`:\n      return {\n        ...state,\n        groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_FILTER_GROUPS}_FAIL`:\n      return {\n        ...state,\n        filter_groups: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}