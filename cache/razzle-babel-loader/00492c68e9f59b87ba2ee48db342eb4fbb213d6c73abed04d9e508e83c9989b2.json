{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/View/EventDatesInfo.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'semantic-ui-react';\nimport cx from 'classnames';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { useSelector } from 'react-redux';\nexport var datesForDisplay = function datesForDisplay(start, end, moment) {\n  var mStart = moment(start);\n  var mEnd = moment(end);\n  if (!mStart.isValid() || !mEnd.isValid()) {\n    return null;\n  }\n  var sameDay = mStart.isSame(mEnd, 'day');\n  var sameTime = mStart.isSame(mEnd, 'minute');\n  return {\n    sameDay: sameDay,\n    sameTime: sameTime,\n    startDate: mStart.format('ll'),\n    startTime: mStart.format('LT'),\n    endDate: mEnd.format('ll'),\n    endTime: mEnd.format('LT')\n  };\n};\nvar When_ = function When_(_ref) {\n  _s();\n  var start = _ref.start,\n    end = _ref.end,\n    whole_day = _ref.whole_day,\n    open_end = _ref.open_end,\n    momentlib = _ref.moment;\n  var lang = useSelector(function (state) {\n    return state.intl.locale;\n  });\n  var moment = momentlib[\"default\"];\n  moment.locale(lang);\n  var datesInfo = datesForDisplay(start, end, moment);\n  if (!datesInfo) {\n    return;\n  }\n  // TODO I18N INTL\n  return __jsx(\"p\", {\n    className: cx('event-when', {\n      'same-day': datesInfo.sameDay,\n      'same-time': datesInfo.sameTime,\n      'whole-day': whole_day,\n      'open-end': open_end\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, !datesInfo.sameDay ? __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"start-date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, datesInfo.startDate), !whole_day && __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \" \"), __jsx(\"span\", {\n    className: \"start-time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, datesInfo.startTime))), !open_end && __jsx(React.Fragment, null, \"\\xA0to\\xA0\", __jsx(\"span\", {\n    className: \"end\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"end-date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, datesInfo.endDate), !whole_day && __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \" \"), __jsx(\"span\", {\n    className: \"end-time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, datesInfo.endTime))))) : __jsx(React.Fragment, null, whole_day && __jsx(\"span\", {\n    className: \"start-date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, datesInfo.startDate), open_end && !whole_day && __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"start-date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, datesInfo.startDate), \"\\xA0from\\xA0\", __jsx(\"span\", {\n    className: \"start-time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, datesInfo.startTime)), !(whole_day || open_end) && __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"start-date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, datesInfo.startDate), \"\\xA0from\\xA0\", __jsx(\"span\", {\n    className: \"start-time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, datesInfo.startTime), \"\\xA0to\\xA0\", __jsx(\"span\", {\n    className: \"end-time\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, datesInfo.endTime))));\n};\n_s(When_, \"YX9svgYxZ8mkOt/FPg3Kqpt9At4=\", false, function () {\n  return [useSelector];\n});\n_c = When_;\nexport var When = injectLazyLibs(['moment'])(When_);\nWhen.propTypes = {\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string,\n  whole_day: PropTypes.bool,\n  open_end: PropTypes.bool\n};\nexport var Recurrence_ = function Recurrence_(_ref2) {\n  var recurrence = _ref2.recurrence,\n    start = _ref2.start,\n    momentlib = _ref2.moment,\n    rrule = _ref2.rrule;\n  var moment = momentlib[\"default\"];\n  var RRule = rrule.RRule,\n    rrulestr = rrule.rrulestr;\n  if (recurrence.indexOf('DTSTART') < 0) {\n    var dtstart = RRule.optionsToString({\n      dtstart: new Date(start)\n    });\n    recurrence = dtstart + '\\n' + recurrence;\n  }\n  var rule = rrulestr(recurrence, {\n    unfold: true,\n    forceset: true\n  });\n  return __jsx(List, {\n    items: rule.all().map(function (date) {\n      return datesForDisplay(date, undefined, moment);\n    }).map(function (date) {\n      return date.startDate;\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  });\n};\n_c2 = Recurrence_;\nexport var Recurrence = injectLazyLibs(['moment', 'rrule'])(Recurrence_);\nRecurrence.propTypes = {\n  recurrence: PropTypes.string.isRequired,\n  start: PropTypes.string.isRequired\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"When_\");\n$RefreshReg$(_c2, \"Recurrence_\");","map":{"version":3,"names":["React","PropTypes","List","cx","injectLazyLibs","useSelector","datesForDisplay","start","end","moment","mStart","mEnd","isValid","sameDay","isSame","sameTime","startDate","format","startTime","endDate","endTime","When_","whole_day","open_end","momentlib","lang","state","intl","locale","datesInfo","When","propTypes","string","isRequired","bool","Recurrence_","recurrence","rrule","RRule","rrulestr","indexOf","dtstart","optionsToString","Date","rule","unfold","forceset","all","map","date","undefined","Recurrence"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/View/EventDatesInfo.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'semantic-ui-react';\nimport cx from 'classnames';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { useSelector } from 'react-redux';\n\nexport const datesForDisplay = (start, end, moment) => {\n  const mStart = moment(start);\n  const mEnd = moment(end);\n  if (!mStart.isValid() || !mEnd.isValid()) {\n    return null;\n  }\n  const sameDay = mStart.isSame(mEnd, 'day');\n  const sameTime = mStart.isSame(mEnd, 'minute');\n  return {\n    sameDay,\n    sameTime,\n    startDate: mStart.format('ll'),\n    startTime: mStart.format('LT'),\n    endDate: mEnd.format('ll'),\n    endTime: mEnd.format('LT'),\n  };\n};\n\nconst When_ = ({ start, end, whole_day, open_end, moment: momentlib }) => {\n  const lang = useSelector((state) => state.intl.locale);\n\n  const moment = momentlib.default;\n  moment.locale(lang);\n\n  const datesInfo = datesForDisplay(start, end, moment);\n  if (!datesInfo) {\n    return;\n  }\n  // TODO I18N INTL\n  return (\n    <p\n      className={cx('event-when', {\n        'same-day': datesInfo.sameDay,\n        'same-time': datesInfo.sameTime,\n        'whole-day': whole_day,\n        'open-end': open_end,\n      })}\n    >\n      {!datesInfo.sameDay ? (\n        <>\n          <span className=\"start\">\n            <span className=\"start-date\">{datesInfo.startDate}</span>\n            {!whole_day && (\n              <>\n                {/* Plone has an optional word based on locale here */}\n                <span> </span>\n                <span className=\"start-time\">{datesInfo.startTime}</span>\n              </>\n            )}\n          </span>\n          {!open_end && (\n            <>\n              &nbsp;to&nbsp;\n              <span className=\"end\">\n                <span className=\"end-date\">{datesInfo.endDate}</span>\n                {!whole_day && (\n                  <>\n                    {/* Plone has an optional word based on locale here */}\n                    <span> </span>\n                    <span className=\"end-time\">{datesInfo.endTime}</span>\n                  </>\n                )}\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          {whole_day && (\n            <span className=\"start-date\">{datesInfo.startDate}</span>\n          )}\n          {open_end && !whole_day && (\n            <>\n              <span className=\"start-date\">{datesInfo.startDate}</span>\n              &nbsp;from&nbsp;\n              <span className=\"start-time\">{datesInfo.startTime}</span>\n            </>\n          )}\n          {!(whole_day || open_end) && (\n            <>\n              <span className=\"start-date\">{datesInfo.startDate}</span>\n              &nbsp;from&nbsp;\n              <span className=\"start-time\">{datesInfo.startTime}</span>\n              &nbsp;to&nbsp;\n              <span className=\"end-time\">{datesInfo.endTime}</span>\n            </>\n          )}\n        </>\n      )}\n    </p>\n  );\n};\n\nexport const When = injectLazyLibs(['moment'])(When_);\n\nWhen.propTypes = {\n  start: PropTypes.string.isRequired,\n  end: PropTypes.string,\n  whole_day: PropTypes.bool,\n  open_end: PropTypes.bool,\n};\n\nexport const Recurrence_ = ({\n  recurrence,\n  start,\n  moment: momentlib,\n  rrule,\n}) => {\n  const moment = momentlib.default;\n  const { RRule, rrulestr } = rrule;\n  if (recurrence.indexOf('DTSTART') < 0) {\n    var dtstart = RRule.optionsToString({\n      dtstart: new Date(start),\n    });\n    recurrence = dtstart + '\\n' + recurrence;\n  }\n  const rule = rrulestr(recurrence, { unfold: true, forceset: true });\n\n  return (\n    <List\n      items={rule\n        .all()\n        .map((date) => datesForDisplay(date, undefined, moment))\n        .map((date) => date.startDate)}\n    />\n  );\n};\nexport const Recurrence = injectLazyLibs(['moment', 'rrule'])(Recurrence_);\n\nRecurrence.propTypes = {\n  recurrence: PropTypes.string.isRequired,\n  start: PropTypes.string.isRequired,\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}