{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/components/manage/Blocks/DiscodataConnectorBlock/v1/schema.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nvar makeChoices = function makeChoices(keys) {\n  return keys && keys.map(function (k) {\n    return [k, k];\n  });\n};\nvar getDataProvidersIds = function getDataProvidersIds() {\n  var data_providers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var child = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var ids = data_providers.map(function (data_provider) {\n    return data_provider.id;\n  }).filter(function (id) {\n    return id && id !== child.id;\n  });\n  return makeChoices(ids);\n};\nvar dataProviderSchemaExtender = function dataProviderSchemaExtender(schema) {\n  var _props$providers_data;\n  var child = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var props = arguments.length > 2 ? arguments[2] : undefined;\n  var data_providers = props.data.data_providers || [];\n  return _objectSpread(_objectSpread({}, schema), {}, {\n    fieldsets: [_objectSpread({}, schema.fieldsets[0]), {\n      id: 'properties',\n      title: 'Properties',\n      fields: ['measurmentUnit', 'additionalText', 'className', 'animatedCounter']\n    }].concat(_toConsumableArray(child.hasDiscodataConnector ? [{\n      id: 'Discodata connector',\n      title: 'Discodata connector',\n      fields: ['path', 'displayColumn', 'textTemplate', 'specifier', 'data_query']\n    }] : []), _toConsumableArray(child.hasParent ? [{\n      id: 'parent',\n      title: 'Parent',\n      fields: ['parent']\n    }] : [])),\n    properties: _objectSpread(_objectSpread({}, schema.properties), {}, {\n      displayColumn: _objectSpread(_objectSpread({}, schema.properties.displayColumn), {}, {\n        choices: makeChoices(Object.keys(((_props$providers_data = props.providers_data) === null || _props$providers_data === void 0 ? void 0 : _props$providers_data[child.title]) || {}))\n      }),\n      parent: _objectSpread(_objectSpread({}, schema.properties.parent), {}, {\n        choices: getDataProvidersIds(data_providers, child)\n      })\n    })\n  });\n};\nvar dataProviderSchema = {\n  title: 'Data provider',\n  fieldsets: [{\n    id: 'default',\n    title: 'Default',\n    fields: ['title', 'id', 'hasDiscodataConnector', 'hasParent', 'wrapperClassName']\n  }, {\n    id: 'advanced',\n    title: 'Advanced',\n    fields: ['path', 'displayColumn', 'textTemplate', 'specifier', 'measurmentUnit', 'additionalText', 'className', 'parent', 'wrapperClassName', 'animatedCounter']\n  }],\n  properties: {\n    title: {\n      type: 'text',\n      title: 'Title'\n    },\n    id: {\n      type: 'text',\n      title: 'Id'\n    },\n    hasDiscodataConnector: {\n      type: 'boolean',\n      title: 'Has discodata connector'\n    },\n    hasParent: {\n      type: 'boolean',\n      title: 'Has parent'\n    },\n    path: {\n      widget: 'object_by_path',\n      title: 'Discodata connector'\n    },\n    displayColumn: {\n      type: 'select',\n      title: 'Display column',\n      choices: []\n    },\n    textTemplate: {\n      title: 'Text template',\n      widget: 'textarea',\n      description: 'Add suffix/prefix to text. Use {} for value placeholder'\n    },\n    specifier: {\n      title: 'Format',\n      description: __jsx(React.Fragment, null, \"See\", ' ', __jsx(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: \"https://github.com/d3/d3-format\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, \"D3 format documentation\"))\n    },\n    measurmentUnit: {\n      type: 'text',\n      title: 'Measurment unit'\n    },\n    additionalText: {\n      type: 'text',\n      title: 'Additional text'\n    },\n    animatedCounter: {\n      type: 'boolean',\n      title: 'Animated Counter',\n      description: 'Apply counter animation to a number'\n    },\n    className: {\n      type: 'select',\n      title: 'Class name',\n      choices: [['data', 'Data'], ['data-content', 'Data content']]\n    },\n    parent: {\n      type: 'select',\n      title: 'Parent',\n      choices: []\n    },\n    wrapperClassName: {\n      type: 'select',\n      title: 'Wrapper class name',\n      choices: [['data-wrapper brown', 'Brown wrapper'], ['data-wrapper green', 'Green wrapper'], ['data-wrapper blue', 'Blue wrapper'], ['data-wrapper purple', 'Purple wrapper']]\n    },\n    data_query: {\n      title: 'Data query',\n      widget: 'data_query'\n    }\n  },\n  required: ['title', 'id']\n};\nvar SourceSchema = {\n  title: 'Source',\n  fieldsets: [{\n    id: 'default',\n    title: 'Default',\n    fields: ['chart_source', 'chart_source_link']\n  }],\n  properties: {\n    chart_source: {\n      type: 'string',\n      title: 'Source'\n    },\n    chart_source_link: {\n      type: 'string',\n      title: 'Link'\n    }\n  },\n  required: ['source']\n};\nexport var getSchema = function getSchema(props) {\n  return {\n    title: 'Discodata connector block',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['block_title']\n    }, {\n      id: 'advanced',\n      title: 'Advanced',\n      fields: ['data_providers']\n    }, {\n      id: 'sources',\n      title: 'Sources',\n      fields: ['chartSources', 'download_button']\n    }],\n    properties: {\n      block_title: {\n        title: 'Title',\n        widget: 'textarea'\n      },\n      download_button: {\n        title: 'Download button',\n        type: 'boolean',\n        defaultValue: true\n      },\n      chartSources: {\n        widget: 'object_list',\n        title: 'Sources',\n        schema: SourceSchema\n      },\n      data_providers: {\n        title: 'Data providers',\n        widget: 'object_list',\n        schema: dataProviderSchema,\n        schemaExtender: function schemaExtender(schema, child) {\n          return dataProviderSchemaExtender(schema, child, props);\n        },\n        defaultData: {\n          hasDiscodataConnector: true,\n          hasParent: false\n        }\n      }\n    },\n    required: []\n  };\n};","map":{"version":3,"names":["React","makeChoices","keys","map","k","getDataProvidersIds","data_providers","child","ids","data_provider","id","filter","dataProviderSchemaExtender","schema","props","data","fieldsets","title","fields","hasDiscodataConnector","hasParent","properties","displayColumn","choices","Object","providers_data","parent","dataProviderSchema","type","path","widget","textTemplate","description","specifier","measurmentUnit","additionalText","animatedCounter","className","wrapperClassName","data_query","required","SourceSchema","chart_source","chart_source_link","getSchema","block_title","download_button","defaultValue","chartSources","schemaExtender","defaultData"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/components/manage/Blocks/DiscodataConnectorBlock/v1/schema.js"],"sourcesContent":["import React from 'react';\n\nconst makeChoices = (keys) => keys && keys.map((k) => [k, k]);\n\nconst getDataProvidersIds = (data_providers = [], child = {}) => {\n  const ids = data_providers\n    .map((data_provider) => data_provider.id)\n    .filter((id) => id && id !== child.id);\n  return makeChoices(ids);\n};\n\nconst dataProviderSchemaExtender = (schema, child = {}, props) => {\n  const data_providers = props.data.data_providers || [];\n  return {\n    ...schema,\n    fieldsets: [\n      {\n        ...schema.fieldsets[0],\n      },\n      {\n        id: 'properties',\n        title: 'Properties',\n        fields: [\n          'measurmentUnit',\n          'additionalText',\n          'className',\n          'animatedCounter',\n        ],\n      },\n      ...(child.hasDiscodataConnector\n        ? [\n            {\n              id: 'Discodata connector',\n              title: 'Discodata connector',\n              fields: [\n                'path',\n                'displayColumn',\n                'textTemplate',\n                'specifier',\n                'data_query',\n              ],\n            },\n          ]\n        : []),\n      ...(child.hasParent\n        ? [\n            {\n              id: 'parent',\n              title: 'Parent',\n              fields: ['parent'],\n            },\n          ]\n        : []),\n    ],\n    properties: {\n      ...schema.properties,\n      displayColumn: {\n        ...schema.properties.displayColumn,\n        choices: makeChoices(\n          Object.keys(props.providers_data?.[child.title] || {}),\n        ),\n      },\n      parent: {\n        ...schema.properties.parent,\n        choices: getDataProvidersIds(data_providers, child),\n      },\n    },\n  };\n};\n\nconst dataProviderSchema = {\n  title: 'Data provider',\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: [\n        'title',\n        'id',\n        'hasDiscodataConnector',\n        'hasParent',\n        'wrapperClassName',\n      ],\n    },\n    {\n      id: 'advanced',\n      title: 'Advanced',\n      fields: [\n        'path',\n        'displayColumn',\n        'textTemplate',\n        'specifier',\n        'measurmentUnit',\n        'additionalText',\n        'className',\n        'parent',\n        'wrapperClassName',\n        'animatedCounter',\n      ],\n    },\n  ],\n  properties: {\n    title: {\n      type: 'text',\n      title: 'Title',\n    },\n    id: {\n      type: 'text',\n      title: 'Id',\n    },\n    hasDiscodataConnector: {\n      type: 'boolean',\n      title: 'Has discodata connector',\n    },\n    hasParent: {\n      type: 'boolean',\n      title: 'Has parent',\n    },\n    path: {\n      widget: 'object_by_path',\n      title: 'Discodata connector',\n    },\n    displayColumn: {\n      type: 'select',\n      title: 'Display column',\n      choices: [],\n    },\n    textTemplate: {\n      title: 'Text template',\n      widget: 'textarea',\n      description: 'Add suffix/prefix to text. Use {} for value placeholder',\n    },\n    specifier: {\n      title: 'Format',\n      description: (\n        <>\n          See{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/d3/d3-format\"\n          >\n            D3 format documentation\n          </a>\n        </>\n      ),\n    },\n    measurmentUnit: {\n      type: 'text',\n      title: 'Measurment unit',\n    },\n    additionalText: {\n      type: 'text',\n      title: 'Additional text',\n    },\n    animatedCounter: {\n      type: 'boolean',\n      title: 'Animated Counter',\n      description: 'Apply counter animation to a number',\n    },\n\n    className: {\n      type: 'select',\n      title: 'Class name',\n      choices: [\n        ['data', 'Data'],\n        ['data-content', 'Data content'],\n      ],\n    },\n    parent: {\n      type: 'select',\n      title: 'Parent',\n      choices: [],\n    },\n    wrapperClassName: {\n      type: 'select',\n      title: 'Wrapper class name',\n      choices: [\n        ['data-wrapper brown', 'Brown wrapper'],\n        ['data-wrapper green', 'Green wrapper'],\n        ['data-wrapper blue', 'Blue wrapper'],\n        ['data-wrapper purple', 'Purple wrapper'],\n      ],\n    },\n    data_query: {\n      title: 'Data query',\n      widget: 'data_query',\n    },\n  },\n  required: ['title', 'id'],\n};\n\nconst SourceSchema = {\n  title: 'Source',\n\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: ['chart_source', 'chart_source_link'],\n    },\n  ],\n\n  properties: {\n    chart_source: {\n      type: 'string',\n      title: 'Source',\n    },\n    chart_source_link: {\n      type: 'string',\n      title: 'Link',\n    },\n  },\n\n  required: ['source'],\n};\n\nexport const getSchema = (props) => ({\n  title: 'Discodata connector block',\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: ['block_title'],\n    },\n    {\n      id: 'advanced',\n      title: 'Advanced',\n      fields: ['data_providers'],\n    },\n    {\n      id: 'sources',\n      title: 'Sources',\n      fields: ['chartSources', 'download_button'],\n    },\n  ],\n  properties: {\n    block_title: {\n      title: 'Title',\n      widget: 'textarea',\n    },\n    download_button: {\n      title: 'Download button',\n      type: 'boolean',\n      defaultValue: true,\n    },\n    chartSources: {\n      widget: 'object_list',\n      title: 'Sources',\n      schema: SourceSchema,\n    },\n    data_providers: {\n      title: 'Data providers',\n      widget: 'object_list',\n      schema: dataProviderSchema,\n      schemaExtender: (schema, child) =>\n        dataProviderSchemaExtender(schema, child, props),\n      defaultData: {\n        hasDiscodataConnector: true,\n        hasParent: false,\n      },\n    },\n  },\n  required: [],\n});\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}