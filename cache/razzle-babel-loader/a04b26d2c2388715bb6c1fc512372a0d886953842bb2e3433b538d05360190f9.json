{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/widgets/RichTextWidget.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\n/**\n * A Slate widget that uses internal JSON representation as its value\n *\n */\n\nimport React from 'react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport SlateEditor from 'volto-slate/editor/SlateEditor';\nimport { createEmptyParagraph } from '../utils/blocks';\nimport './style.css';\nvar SlateRichTextWidget = function SlateRichTextWidget(props) {\n  _s();\n  var id = props.id,\n    _onChange = props.onChange,\n    value = props.value,\n    focus = props.focus,\n    className = props.className,\n    block = props.block,\n    placeholder = props.placeholder,\n    properties = props.properties,\n    _props$readOnly = props.readOnly,\n    readOnly = _props$readOnly === void 0 ? false : _props$readOnly;\n  var _React$useState = React.useState(focus),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    selected = _React$useState2[0],\n    setSelected = _React$useState2[1];\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    draggable: false,\n    className: \"slate_wysiwyg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"slate_wysiwyg_box\",\n    role: \"textbox\",\n    tabIndex: \"-1\",\n    style: {\n      boxSizing: 'initial'\n    },\n    onClick: function onClick() {\n      setSelected(true);\n    },\n    onKeyDown: function onKeyDown() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(SlateEditor, {\n    className: className,\n    readOnly: readOnly,\n    id: id,\n    name: id,\n    value: typeof value === 'undefined' || typeof (value === null || value === void 0 ? void 0 : value.data) !== 'undefined' /* previously this was a Draft block */ ? [createEmptyParagraph()] : value,\n    onChange: function onChange(newValue) {\n      _onChange(id, newValue);\n    },\n    block: block,\n    selected: selected,\n    properties: properties,\n    placeholder: placeholder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n};\n_s(SlateRichTextWidget, \"pMVSP/L+SyD6RMEhqf9Lif41LgQ=\");\n_c = SlateRichTextWidget;\nexport default SlateRichTextWidget;\nvar _c;\n$RefreshReg$(_c, \"SlateRichTextWidget\");","map":{"version":3,"names":["React","FormFieldWrapper","SlateEditor","createEmptyParagraph","SlateRichTextWidget","props","id","onChange","value","focus","className","block","placeholder","properties","readOnly","useState","selected","setSelected","boxSizing","data","newValue"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/widgets/RichTextWidget.jsx"],"sourcesContent":["/**\n * A Slate widget that uses internal JSON representation as its value\n *\n */\n\nimport React from 'react';\nimport { FormFieldWrapper } from '@plone/volto/components';\nimport SlateEditor from 'volto-slate/editor/SlateEditor';\n\nimport { createEmptyParagraph } from '../utils/blocks';\n\nimport './style.css';\n\nconst SlateRichTextWidget = (props) => {\n  const {\n    id,\n    onChange,\n    value,\n    focus,\n    className,\n    block,\n    placeholder,\n    properties,\n    readOnly = false,\n  } = props;\n  const [selected, setSelected] = React.useState(focus);\n\n  return (\n    <FormFieldWrapper {...props} draggable={false} className=\"slate_wysiwyg\">\n      <div\n        className=\"slate_wysiwyg_box\"\n        role=\"textbox\"\n        tabIndex=\"-1\"\n        style={{ boxSizing: 'initial' }}\n        onClick={() => {\n          setSelected(true);\n        }}\n        onKeyDown={() => {}}\n      >\n        <SlateEditor\n          className={className}\n          readOnly={readOnly}\n          id={id}\n          name={id}\n          value={\n            typeof value === 'undefined' ||\n            typeof value?.data !==\n              'undefined' /* previously this was a Draft block */\n              ? [createEmptyParagraph()]\n              : value\n          }\n          onChange={(newValue) => {\n            onChange(id, newValue);\n          }}\n          block={block}\n          selected={selected}\n          properties={properties}\n          placeholder={placeholder}\n        />\n      </div>\n    </FormFieldWrapper>\n  );\n};\n\nexport default SlateRichTextWidget;\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,OAAOC,WAAW,MAAM,gCAAgC;AAExD,SAASC,oBAAoB,QAAQ,iBAAiB;AAEtD,OAAO,aAAa;AAEpB,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIC,KAAK,EAAK;EAAA;EACrC,IACEC,EAAE,GASAD,KAAK,CATPC,EAAE;IACFC,SAAQ,GAQNF,KAAK,CARPE,QAAQ;IACRC,KAAK,GAOHH,KAAK,CAPPG,KAAK;IACLC,KAAK,GAMHJ,KAAK,CANPI,KAAK;IACLC,SAAS,GAKPL,KAAK,CALPK,SAAS;IACTC,KAAK,GAIHN,KAAK,CAJPM,KAAK;IACLC,WAAW,GAGTP,KAAK,CAHPO,WAAW;IACXC,UAAU,GAERR,KAAK,CAFPQ,UAAU;IAAA,kBAERR,KAAK,CADPS,QAAQ;IAARA,QAAQ,gCAAG,KAAK;EAElB,sBAAgCd,KAAK,CAACe,QAAQ,CAACN,KAAK,CAAC;IAAA;IAA9CO,QAAQ;IAAEC,WAAW;EAE5B,OACE,MAAC,gBAAgB,eAAKZ,KAAK;IAAE,SAAS,EAAE,KAAM;IAAC,SAAS,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACtE;IACE,SAAS,EAAC,mBAAmB;IAC7B,IAAI,EAAC,SAAS;IACd,QAAQ,EAAC,IAAI;IACb,KAAK,EAAE;MAAEa,SAAS,EAAE;IAAU,CAAE;IAChC,OAAO,EAAE,mBAAM;MACbD,WAAW,CAAC,IAAI,CAAC;IACnB,CAAE;IACF,SAAS,EAAE,qBAAM,CAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEpB,MAAC,WAAW;IACV,SAAS,EAAEP,SAAU;IACrB,QAAQ,EAAEI,QAAS;IACnB,EAAE,EAAER,EAAG;IACP,IAAI,EAAEA,EAAG;IACT,KAAK,EACH,OAAOE,KAAK,KAAK,WAAW,IAC5B,QAAOA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEW,IAAI,MAChB,WAAW,CAAC,0CACV,CAAChB,oBAAoB,EAAE,CAAC,GACxBK,KACL;IACD,QAAQ,EAAE,kBAACY,QAAQ,EAAK;MACtBb,SAAQ,CAACD,EAAE,EAAEc,QAAQ,CAAC;IACxB,CAAE;IACF,KAAK,EAAET,KAAM;IACb,QAAQ,EAAEK,QAAS;IACnB,UAAU,EAAEH,UAAW;IACvB,WAAW,EAAED,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACzB,CACE,CACW;AAEvB,CAAC;AAAC,GAjDIR,mBAAmB;AAAA,KAAnBA,mBAAmB;AAmDzB,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}