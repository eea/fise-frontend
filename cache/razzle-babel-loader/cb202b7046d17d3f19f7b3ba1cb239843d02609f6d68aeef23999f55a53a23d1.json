{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/manage/Blocks/CustomConnectedBlock/Edit.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { compose } from 'redux';\nimport { SidebarPortal } from '@plone/volto/components';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport config from '@plone/volto/registry';\nimport { VisibilitySensor } from '@eeacms/volto-datablocks/components';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport getSchema from './schema';\nimport { View } from './View';\nimport './style.less';\nconst Edit = props => {\n  var _config$blocks$blocks, _config$blocks$blocks2, _config$blocks$blocks3, _config$blocks$blocks4;\n  const type = props.data.type;\n  const blockSchema = ((_config$blocks$blocks = config.blocks.blocksConfig.custom_connected_block.blocks) === null || _config$blocks$blocks === void 0 ? void 0 : (_config$blocks$blocks2 = _config$blocks$blocks[type]) === null || _config$blocks$blocks2 === void 0 ? void 0 : _config$blocks$blocks2.getSchema) || null;\n  const schemaObject = getSchema(props, config, blockSchema === null || blockSchema === void 0 ? void 0 : blockSchema(props, config));\n  const blockTitle = ((_config$blocks$blocks3 = config.blocks.blocksConfig.custom_connected_block.blocks) === null || _config$blocks$blocks3 === void 0 ? void 0 : (_config$blocks$blocks4 = _config$blocks$blocks3[type]) === null || _config$blocks$blocks4 === void 0 ? void 0 : _config$blocks$blocks4.title) || 'Custom connected block';\n  return __jsx(React.Fragment, null, __jsx(View, _extends({}, props, {\n    mode: \"edit\",\n    blockTitle: blockTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  })), __jsx(SidebarPortal, {\n    selected: props.selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(InlineForm, {\n    schema: schemaObject,\n    title: schemaObject.title,\n    onChangeField: (id, value) => {\n      props.onChangeBlock(props.block, _objectSpread(_objectSpread({}, props.data), {}, {\n        [id]: value\n      }));\n    },\n    formData: props.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })));\n};\nconst EditWrapper = compose(connectToProviderData(props => {\n  var _props$data;\n  return {\n    provider_url: (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.provider_url\n  };\n}))(Edit);\nexport default (props => {\n  return __jsx(VisibilitySensor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(EditWrapper, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  })));\n});","map":{"version":3,"names":["React","compose","SidebarPortal","InlineForm","config","VisibilitySensor","connectToProviderData","getSchema","View","Edit","props","type","data","blockSchema","blocks","blocksConfig","custom_connected_block","schemaObject","blockTitle","title","selected","id","value","onChangeBlock","block","EditWrapper","provider_url"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/manage/Blocks/CustomConnectedBlock/Edit.jsx"],"sourcesContent":["import React from 'react';\nimport { compose } from 'redux';\nimport { SidebarPortal } from '@plone/volto/components';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport config from '@plone/volto/registry';\nimport { VisibilitySensor } from '@eeacms/volto-datablocks/components';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport getSchema from './schema';\nimport { View } from './View';\nimport './style.less';\n\nconst Edit = (props) => {\n  const type = props.data.type;\n  const blockSchema =\n    config.blocks.blocksConfig.custom_connected_block.blocks?.[type]\n      ?.getSchema || null;\n  const schemaObject = getSchema(props, config, blockSchema?.(props, config));\n  const blockTitle =\n    config.blocks.blocksConfig.custom_connected_block.blocks?.[type]?.title ||\n    'Custom connected block';\n\n  return (\n    <>\n      <View {...props} mode=\"edit\" blockTitle={blockTitle} />\n\n      <SidebarPortal selected={props.selected}>\n        <InlineForm\n          schema={schemaObject}\n          title={schemaObject.title}\n          onChangeField={(id, value) => {\n            props.onChangeBlock(props.block, {\n              ...props.data,\n              [id]: value,\n            });\n          }}\n          formData={props.data}\n        />\n      </SidebarPortal>\n    </>\n  );\n};\n\nconst EditWrapper = compose(\n  connectToProviderData((props) => ({\n    provider_url: props.data?.provider_url,\n  })),\n)(Edit);\n\nexport default (props) => {\n  return (\n    <VisibilitySensor>\n      <EditWrapper {...props} />\n    </VisibilitySensor>\n  );\n};\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,aAAa,QAAQ,yBAAyB;AACvD,OAAOC,UAAU,MAAM,gDAAgD;AACvE,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,SAASC,qBAAqB,QAAQ,+BAA+B;AACrE,OAAOC,SAAS,MAAM,UAAU;AAChC,SAASC,IAAI,QAAQ,QAAQ;AAC7B,OAAO,cAAc;AAErB,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EACtB,MAAMC,IAAI,GAAGD,KAAK,CAACE,IAAI,CAACD,IAAI;EAC5B,MAAME,WAAW,GACf,0BAAAT,MAAM,CAACU,MAAM,CAACC,YAAY,CAACC,sBAAsB,CAACF,MAAM,oFAAxD,sBAA2DH,IAAI,CAAC,2DAAhE,uBACIJ,SAAS,KAAI,IAAI;EACvB,MAAMU,YAAY,GAAGV,SAAS,CAACG,KAAK,EAAEN,MAAM,EAAES,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAGH,KAAK,EAAEN,MAAM,CAAC,CAAC;EAC3E,MAAMc,UAAU,GACd,2BAAAd,MAAM,CAACU,MAAM,CAACC,YAAY,CAACC,sBAAsB,CAACF,MAAM,qFAAxD,uBAA2DH,IAAI,CAAC,2DAAhE,uBAAkEQ,KAAK,KACvE,wBAAwB;EAE1B,OACE,4BACE,MAAC,IAAI,eAAKT,KAAK;IAAE,IAAI,EAAC,MAAM;IAAC,UAAU,EAAEQ,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,EAEvD,MAAC,aAAa;IAAC,QAAQ,EAAER,KAAK,CAACU,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACtC,MAAC,UAAU;IACT,MAAM,EAAEH,YAAa;IACrB,KAAK,EAAEA,YAAY,CAACE,KAAM;IAC1B,aAAa,EAAE,CAACE,EAAE,EAAEC,KAAK,KAAK;MAC5BZ,KAAK,CAACa,aAAa,CAACb,KAAK,CAACc,KAAK,kCAC1Bd,KAAK,CAACE,IAAI;QACb,CAACS,EAAE,GAAGC;MAAK,GACX;IACJ,CAAE;IACF,QAAQ,EAAEZ,KAAK,CAACE,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACrB,CACY,CACf;AAEP,CAAC;AAED,MAAMa,WAAW,GAAGxB,OAAO,CACzBK,qBAAqB,CAAEI,KAAK;EAAA;EAAA,OAAM;IAChCgB,YAAY,iBAAEhB,KAAK,CAACE,IAAI,gDAAV,YAAYc;EAC5B,CAAC;AAAA,CAAC,CAAC,CACJ,CAACjB,IAAI,CAAC;AAEP,gBAAgBC,KAAK,IAAK;EACxB,OACE,MAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACf,MAAC,WAAW,eAAKA,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,CACT;AAEvB,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}