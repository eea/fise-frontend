{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"location\", \"routes\", \"filter\"];\nimport { matchRoutes } from 'react-router-config';\nimport { mapSeries, isPromise } from './utils';\nimport { endGlobalLoad } from '@plone/volto/actions/asyncConnect/asyncConnect';\nexport function filterComponents(branch) {\n  return branch.reduce(function (result, _ref) {\n    var route = _ref.route,\n      match = _ref.match;\n    if (route.component && route.component.reduxAsyncConnect) {\n      result.push([route.component, {\n        route: route,\n        match: match\n      }]);\n    }\n    return result;\n  }, []);\n}\nexport function loadAsyncConnect(_ref2) {\n  var location = _ref2.location,\n    _ref2$routes = _ref2.routes,\n    routes = _ref2$routes === void 0 ? [] : _ref2$routes,\n    _ref2$filter = _ref2.filter,\n    filter = _ref2$filter === void 0 ? function () {\n      return true;\n    } : _ref2$filter,\n    rest = _objectWithoutProperties(_ref2, _excluded);\n  var layered = filterComponents(matchRoutes(routes, location.pathname));\n  if (layered.length === 0) {\n    return Promise.resolve();\n  }\n\n  // this allows us to have nested promises, that rely on each other's completion\n  // cycle\n  return mapSeries(layered, function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      component = _ref4[0],\n      routeParams = _ref4[1];\n    if (component == null) {\n      return Promise.resolve();\n    }\n\n    // Collect the results of each component\n    var results = [];\n    var asyncItems = component.reduxAsyncConnect;\n    var asyncItemsArr = _toConsumableArray(component.reduxAsyncConnect);\n\n    // get array of results\n    asyncItems.forEach(function (item) {\n      if (filter(item, component)) {\n        // handle Volto's voltoLoadAsyncProps\n        if (item.key === 'voltoLoadAsyncProps') {\n          results.push(item);\n          var asyncPropsItems = item.promise(_objectSpread(_objectSpread(_objectSpread({}, rest), routeParams), {}, {\n            location: location,\n            routes: routes\n          }));\n          asyncItemsArr.push.apply(asyncItemsArr, _toConsumableArray(asyncPropsItems));\n          asyncPropsItems.forEach(function (asyncPropItem) {\n            var innerPromiseOrResult = asyncPropItem && asyncPropItem.promise || asyncPropItem;\n            if (isPromise(innerPromiseOrResult)) {\n              innerPromiseOrResult = innerPromiseOrResult[\"catch\"](function (error) {\n                return {\n                  error: error\n                };\n              });\n            }\n            results.push(innerPromiseOrResult);\n          });\n          return;\n        }\n\n        // handles default case of classic asyncConnect\n        var promiseOrResult = item.promise(_objectSpread(_objectSpread(_objectSpread({}, rest), routeParams), {}, {\n          location: location,\n          routes: routes\n        }));\n        if (isPromise(promiseOrResult)) {\n          promiseOrResult = promiseOrResult[\"catch\"](function (error) {\n            return {\n              error: error\n            };\n          });\n        }\n        results.push(promiseOrResult);\n      }\n    });\n\n    // map results to keys for prop injection\n    var resolver = function resolver(finalResults) {\n      return Object.assign({}, finalResults.map(function (result, idx) {\n        var key = asyncItemsArr[idx].key;\n        return key ? _defineProperty({}, key, result) : null;\n      }));\n    };\n    return Promise.all(results).then(resolver);\n  });\n}\nexport function loadOnServer(args) {\n  return loadAsyncConnect(args).then(function () {\n    args.store.dispatch(endGlobalLoad());\n  });\n}","map":{"version":3,"names":["matchRoutes","mapSeries","isPromise","endGlobalLoad","filterComponents","branch","reduce","result","route","match","component","reduxAsyncConnect","push","loadAsyncConnect","location","routes","filter","rest","layered","pathname","length","Promise","resolve","routeParams","results","asyncItems","asyncItemsArr","forEach","item","key","asyncPropsItems","promise","asyncPropItem","innerPromiseOrResult","error","promiseOrResult","resolver","finalResults","Object","assign","map","idx","all","then","loadOnServer","args","store","dispatch"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/helpers/AsyncConnect/ssr.js"],"sourcesContent":["import { matchRoutes } from 'react-router-config';\nimport { mapSeries, isPromise } from './utils';\nimport { endGlobalLoad } from '@plone/volto/actions/asyncConnect/asyncConnect';\n\nexport function filterComponents(branch) {\n  return branch.reduce((result, { route, match }) => {\n    if (route.component && route.component.reduxAsyncConnect) {\n      result.push([route.component, { route, match }]);\n    }\n\n    return result;\n  }, []);\n}\n\nexport function loadAsyncConnect({\n  location,\n  routes = [],\n  filter = () => true,\n  ...rest\n}) {\n  const layered = filterComponents(matchRoutes(routes, location.pathname));\n\n  if (layered.length === 0) {\n    return Promise.resolve();\n  }\n\n  // this allows us to have nested promises, that rely on each other's completion\n  // cycle\n  return mapSeries(layered, ([component, routeParams]) => {\n    if (component == null) {\n      return Promise.resolve();\n    }\n\n    // Collect the results of each component\n    const results = [];\n    const asyncItems = component.reduxAsyncConnect;\n    const asyncItemsArr = [...component.reduxAsyncConnect];\n\n    // get array of results\n    asyncItems.forEach((item) => {\n      if (filter(item, component)) {\n        // handle Volto's voltoLoadAsyncProps\n        if (item.key === 'voltoLoadAsyncProps') {\n          results.push(item);\n          const asyncPropsItems = item.promise({\n            ...rest,\n            ...routeParams,\n            location,\n            routes,\n          });\n          asyncItemsArr.push(...asyncPropsItems);\n\n          asyncPropsItems.forEach((asyncPropItem) => {\n            let innerPromiseOrResult =\n              (asyncPropItem && asyncPropItem.promise) || asyncPropItem;\n\n            if (isPromise(innerPromiseOrResult)) {\n              innerPromiseOrResult = innerPromiseOrResult.catch((error) => ({\n                error,\n              }));\n            }\n            results.push(innerPromiseOrResult);\n          });\n          return;\n        }\n\n        // handles default case of classic asyncConnect\n        let promiseOrResult = item.promise({\n          ...rest,\n          ...routeParams,\n          location,\n          routes,\n        });\n\n        if (isPromise(promiseOrResult)) {\n          promiseOrResult = promiseOrResult.catch((error) => ({ error }));\n        }\n\n        results.push(promiseOrResult);\n      }\n    });\n\n    // map results to keys for prop injection\n    const resolver = (finalResults) => {\n      return Object.assign(\n        {},\n        finalResults.map((result, idx) => {\n          const { key } = asyncItemsArr[idx];\n          return key ? { [key]: result } : null;\n        }),\n      );\n    };\n\n    return Promise.all(results).then(resolver);\n  });\n}\n\nexport function loadOnServer(args) {\n  return loadAsyncConnect(args).then(() => {\n    args.store.dispatch(endGlobalLoad());\n  });\n}\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}