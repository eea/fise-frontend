{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/manage/Blocks/SimpleDataTable/Edit.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { SidebarPortal } from '@plone/volto/components'; // EditBlock\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport config from '@plone/volto/registry';\nimport { VisibilitySensor } from '@eeacms/volto-datablocks/components';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\nimport { SimpleDataTableSchema } from './schema';\nimport { SimpleDataTableView } from './View';\nconst DefaultEdit = compose(connectToProviderData(props => {\n  var _props$visualization_, _props$data, _props$data2;\n  const {\n    max_count = 5\n  } = props.data;\n  return {\n    provider_url: ((_props$visualization_ = props.visualization_data) === null || _props$visualization_ === void 0 ? void 0 : _props$visualization_.provider_url) || ((_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.provider_url) || ((_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.url),\n    pagination: {\n      enabled: props.data.has_pagination,\n      itemsPerPage: typeof max_count !== 'number' ? parseInt(max_count) : max_count\n    }\n  };\n}))(props => {\n  const {\n    schema = {}\n  } = props;\n  return __jsx(React.Fragment, null, __jsx(SimpleDataTableView, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  })), __jsx(SidebarPortal, {\n    selected: props.selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(InlineForm, {\n    schema: schema,\n    title: schema.title,\n    onChangeField: (id, value) => {\n      props.onChangeBlock(props.block, _objectSpread(_objectSpread({}, props.data), {}, {\n        [id]: value\n      }));\n    },\n    formData: props.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n});\nclass Edit extends Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"getSchema\", () => {\n      var _config$blocks$blocks, _config$blocks$blocks2, _config$blocks$blocks3;\n      const template = this.props.data.template || 'default';\n      const templateSchema = ((_config$blocks$blocks = config.blocks.blocksConfig.simpleDataConnectedTable) === null || _config$blocks$blocks === void 0 ? void 0 : (_config$blocks$blocks2 = _config$blocks$blocks.templates) === null || _config$blocks$blocks2 === void 0 ? void 0 : (_config$blocks$blocks3 = _config$blocks$blocks2[template]) === null || _config$blocks$blocks3 === void 0 ? void 0 : _config$blocks$blocks3.schema) || {};\n      const schema = SimpleDataTableSchema(config, typeof templateSchema === 'function' ? templateSchema(config) : templateSchema);\n\n      // TODO: create picker for columns to include\n      const {\n        provider_data\n      } = this.props;\n      if (!provider_data) return schema;\n      const choices = Array.from(Object.keys(provider_data).sort()).map(n => [n, n]);\n      schema.properties.columns.schema.properties.column.choices = choices;\n      schema.properties.columns.schema.properties.column_link.choices = choices;\n      return schema;\n    });\n  }\n  render() {\n    var _config$blocks$blocks4, _config$blocks$blocks5, _config$blocks$blocks6;\n    const {\n      template = 'default'\n    } = this.props.data;\n    const schema = this.getSchema();\n    const TableEdit = ((_config$blocks$blocks4 = config.blocks.blocksConfig.simpleDataConnectedTable) === null || _config$blocks$blocks4 === void 0 ? void 0 : (_config$blocks$blocks5 = _config$blocks$blocks4.templates) === null || _config$blocks$blocks5 === void 0 ? void 0 : (_config$blocks$blocks6 = _config$blocks$blocks5[template]) === null || _config$blocks$blocks6 === void 0 ? void 0 : _config$blocks$blocks6.edit) || DefaultEdit;\n    return __jsx(TableEdit, _extends({}, this.props, {\n      schema: schema,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 12\n      }\n    }));\n  }\n}\nconst EditWrapper = compose(connectToProviderData(props => {\n  var _props$visualization_2, _props$data3, _props$data4;\n  const {\n    max_count = 5\n  } = props.data;\n  return {\n    provider_url: ((_props$visualization_2 = props.visualization_data) === null || _props$visualization_2 === void 0 ? void 0 : _props$visualization_2.provider_url) || ((_props$data3 = props.data) === null || _props$data3 === void 0 ? void 0 : _props$data3.provider_url) || ((_props$data4 = props.data) === null || _props$data4 === void 0 ? void 0 : _props$data4.url),\n    pagination: {\n      enabled: props.data.has_pagination,\n      itemsPerPage: typeof max_count !== 'number' ? parseInt(max_count) : max_count\n    }\n  };\n}))(Edit);\nexport default (props => {\n  return __jsx(VisibilitySensor, {\n    offset: {\n      top: -150,\n      bottom: -150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, __jsx(EditWrapper, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  })));\n});","map":{"version":3,"names":["React","Component","compose","SidebarPortal","InlineForm","config","VisibilitySensor","connectToProviderData","SimpleDataTableSchema","SimpleDataTableView","DefaultEdit","props","max_count","data","provider_url","visualization_data","url","pagination","enabled","has_pagination","itemsPerPage","parseInt","schema","selected","title","id","value","onChangeBlock","block","Edit","template","templateSchema","blocks","blocksConfig","simpleDataConnectedTable","templates","provider_data","choices","Array","from","Object","keys","sort","map","n","properties","columns","column","column_link","render","getSchema","TableEdit","edit","EditWrapper","top","bottom"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/manage/Blocks/SimpleDataTable/Edit.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { SidebarPortal } from '@plone/volto/components'; // EditBlock\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport config from '@plone/volto/registry';\nimport { VisibilitySensor } from '@eeacms/volto-datablocks/components';\nimport { connectToProviderData } from '@eeacms/volto-datablocks/hocs';\n\nimport { SimpleDataTableSchema } from './schema';\nimport { SimpleDataTableView } from './View';\n\nconst DefaultEdit = compose(\n  connectToProviderData((props) => {\n    const { max_count = 5 } = props.data;\n    return {\n      provider_url:\n        props.visualization_data?.provider_url ||\n        props.data?.provider_url ||\n        props.data?.url,\n      pagination: {\n        enabled: props.data.has_pagination,\n        itemsPerPage:\n          typeof max_count !== 'number' ? parseInt(max_count) : max_count,\n      },\n    };\n  }),\n)((props) => {\n  const { schema = {} } = props;\n\n  return (\n    <>\n      <SimpleDataTableView {...props} />\n      <SidebarPortal selected={props.selected}>\n        <InlineForm\n          schema={schema}\n          title={schema.title}\n          onChangeField={(id, value) => {\n            props.onChangeBlock(props.block, {\n              ...props.data,\n              [id]: value,\n            });\n          }}\n          formData={props.data}\n        />\n      </SidebarPortal>\n    </>\n  );\n});\n\nclass Edit extends Component {\n  getSchema = () => {\n    const template = this.props.data.template || 'default';\n\n    const templateSchema =\n      config.blocks.blocksConfig.simpleDataConnectedTable?.templates?.[template]\n        ?.schema || {};\n\n    const schema = SimpleDataTableSchema(\n      config,\n      typeof templateSchema === 'function'\n        ? templateSchema(config)\n        : templateSchema,\n    );\n\n    // TODO: create picker for columns to include\n    const { provider_data } = this.props;\n\n    if (!provider_data) return schema;\n\n    const choices = Array.from(Object.keys(provider_data).sort()).map((n) => [\n      n,\n      n,\n    ]);\n\n    schema.properties.columns.schema.properties.column.choices = choices;\n    schema.properties.columns.schema.properties.column_link.choices = choices;\n\n    return schema;\n  };\n\n  render() {\n    const { template = 'default' } = this.props.data;\n    const schema = this.getSchema();\n\n    const TableEdit =\n      config.blocks.blocksConfig.simpleDataConnectedTable?.templates?.[template]\n        ?.edit || DefaultEdit;\n\n    return <TableEdit {...this.props} schema={schema} />;\n  }\n}\n\nconst EditWrapper = compose(\n  connectToProviderData((props) => {\n    const { max_count = 5 } = props.data;\n    return {\n      provider_url:\n        props.visualization_data?.provider_url ||\n        props.data?.provider_url ||\n        props.data?.url,\n      pagination: {\n        enabled: props.data.has_pagination,\n        itemsPerPage:\n          typeof max_count !== 'number' ? parseInt(max_count) : max_count,\n      },\n    };\n  }),\n)(Edit);\n\nexport default (props) => {\n  return (\n    <VisibilitySensor offset={{ top: -150, bottom: -150 }}>\n      <EditWrapper {...props} />\n    </VisibilitySensor>\n  );\n};\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,aAAa,QAAQ,yBAAyB,CAAC,CAAC;AACzD,OAAOC,UAAU,MAAM,gDAAgD;AACvE,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,SAASC,qBAAqB,QAAQ,+BAA+B;AAErE,SAASC,qBAAqB,QAAQ,UAAU;AAChD,SAASC,mBAAmB,QAAQ,QAAQ;AAE5C,MAAMC,WAAW,GAAGR,OAAO,CACzBK,qBAAqB,CAAEI,KAAK,IAAK;EAAA;EAC/B,MAAM;IAAEC,SAAS,GAAG;EAAE,CAAC,GAAGD,KAAK,CAACE,IAAI;EACpC,OAAO;IACLC,YAAY,EACV,0BAAAH,KAAK,CAACI,kBAAkB,0DAAxB,sBAA0BD,YAAY,qBACtCH,KAAK,CAACE,IAAI,gDAAV,YAAYC,YAAY,sBACxBH,KAAK,CAACE,IAAI,iDAAV,aAAYG,GAAG;IACjBC,UAAU,EAAE;MACVC,OAAO,EAAEP,KAAK,CAACE,IAAI,CAACM,cAAc;MAClCC,YAAY,EACV,OAAOR,SAAS,KAAK,QAAQ,GAAGS,QAAQ,CAACT,SAAS,CAAC,GAAGA;IAC1D;EACF,CAAC;AACH,CAAC,CAAC,CACH,CAAED,KAAK,IAAK;EACX,MAAM;IAAEW,MAAM,GAAG,CAAC;EAAE,CAAC,GAAGX,KAAK;EAE7B,OACE,4BACE,MAAC,mBAAmB,eAAKA,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,EAClC,MAAC,aAAa;IAAC,QAAQ,EAAEA,KAAK,CAACY,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACtC,MAAC,UAAU;IACT,MAAM,EAAED,MAAO;IACf,KAAK,EAAEA,MAAM,CAACE,KAAM;IACpB,aAAa,EAAE,CAACC,EAAE,EAAEC,KAAK,KAAK;MAC5Bf,KAAK,CAACgB,aAAa,CAAChB,KAAK,CAACiB,KAAK,kCAC1BjB,KAAK,CAACE,IAAI;QACb,CAACY,EAAE,GAAGC;MAAK,GACX;IACJ,CAAE;IACF,QAAQ,EAAEf,KAAK,CAACE,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACrB,CACY,CACf;AAEP,CAAC,CAAC;AAEF,MAAMgB,IAAI,SAAS5B,SAAS,CAAC;EAAA;IAAA;IAAA,mCACf,MAAM;MAAA;MAChB,MAAM6B,QAAQ,GAAG,IAAI,CAACnB,KAAK,CAACE,IAAI,CAACiB,QAAQ,IAAI,SAAS;MAEtD,MAAMC,cAAc,GAClB,0BAAA1B,MAAM,CAAC2B,MAAM,CAACC,YAAY,CAACC,wBAAwB,oFAAnD,sBAAqDC,SAAS,qFAA9D,uBAAiEL,QAAQ,CAAC,2DAA1E,uBACIR,MAAM,KAAI,CAAC,CAAC;MAElB,MAAMA,MAAM,GAAGd,qBAAqB,CAClCH,MAAM,EACN,OAAO0B,cAAc,KAAK,UAAU,GAChCA,cAAc,CAAC1B,MAAM,CAAC,GACtB0B,cAAc,CACnB;;MAED;MACA,MAAM;QAAEK;MAAc,CAAC,GAAG,IAAI,CAACzB,KAAK;MAEpC,IAAI,CAACyB,aAAa,EAAE,OAAOd,MAAM;MAEjC,MAAMe,OAAO,GAAGC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACC,IAAI,CAACL,aAAa,CAAC,CAACM,IAAI,EAAE,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAK,CACvEA,CAAC,EACDA,CAAC,CACF,CAAC;MAEFtB,MAAM,CAACuB,UAAU,CAACC,OAAO,CAACxB,MAAM,CAACuB,UAAU,CAACE,MAAM,CAACV,OAAO,GAAGA,OAAO;MACpEf,MAAM,CAACuB,UAAU,CAACC,OAAO,CAACxB,MAAM,CAACuB,UAAU,CAACG,WAAW,CAACX,OAAO,GAAGA,OAAO;MAEzE,OAAOf,MAAM;IACf,CAAC;EAAA;EAED2B,MAAM,GAAG;IAAA;IACP,MAAM;MAAEnB,QAAQ,GAAG;IAAU,CAAC,GAAG,IAAI,CAACnB,KAAK,CAACE,IAAI;IAChD,MAAMS,MAAM,GAAG,IAAI,CAAC4B,SAAS,EAAE;IAE/B,MAAMC,SAAS,GACb,2BAAA9C,MAAM,CAAC2B,MAAM,CAACC,YAAY,CAACC,wBAAwB,qFAAnD,uBAAqDC,SAAS,qFAA9D,uBAAiEL,QAAQ,CAAC,2DAA1E,uBACIsB,IAAI,KAAI1C,WAAW;IAEzB,OAAO,MAAC,SAAS,eAAK,IAAI,CAACC,KAAK;MAAE,MAAM,EAAEW,MAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAG;EACtD;AACF;AAEA,MAAM+B,WAAW,GAAGnD,OAAO,CACzBK,qBAAqB,CAAEI,KAAK,IAAK;EAAA;EAC/B,MAAM;IAAEC,SAAS,GAAG;EAAE,CAAC,GAAGD,KAAK,CAACE,IAAI;EACpC,OAAO;IACLC,YAAY,EACV,2BAAAH,KAAK,CAACI,kBAAkB,2DAAxB,uBAA0BD,YAAY,sBACtCH,KAAK,CAACE,IAAI,iDAAV,aAAYC,YAAY,sBACxBH,KAAK,CAACE,IAAI,iDAAV,aAAYG,GAAG;IACjBC,UAAU,EAAE;MACVC,OAAO,EAAEP,KAAK,CAACE,IAAI,CAACM,cAAc;MAClCC,YAAY,EACV,OAAOR,SAAS,KAAK,QAAQ,GAAGS,QAAQ,CAACT,SAAS,CAAC,GAAGA;IAC1D;EACF,CAAC;AACH,CAAC,CAAC,CACH,CAACiB,IAAI,CAAC;AAEP,gBAAgBlB,KAAK,IAAK;EACxB,OACE,MAAC,gBAAgB;IAAC,MAAM,EAAE;MAAE2C,GAAG,EAAE,CAAC,GAAG;MAAEC,MAAM,EAAE,CAAC;IAAI,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACpD,MAAC,WAAW,eAAK5C,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,CACT;AAEvB,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}