{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/CheckboxWidget.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n/**\n * CheckboxWidget component.\n * @module components/manage/Widgets/CheckboxWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'semantic-ui-react';\nimport { injectIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components';\n\n/**\n * CheckboxWidget component class.\n * @function CheckboxWidget\n * @returns {string} Markup of the component.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Active\",\n *  type: 'boolean',\n * }\n * ```\n */\nconst CheckboxWidget = props => {\n  const {\n    id,\n    title,\n    value,\n    onChange,\n    isDisabled\n  } = props;\n  return __jsx(FormFieldWrapper, _extends({}, props, {\n    columns: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(Checkbox, {\n    name: `field-${id}`,\n    checked: value || false,\n    disabled: isDisabled,\n    onChange: (event, {\n      checked\n    }) => {\n      onChange(id, checked);\n    },\n    label: __jsx(\"label\", {\n      htmlFor: `field-${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }\n    }, title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nCheckboxWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nCheckboxWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null\n};\nexport default injectIntl(CheckboxWidget);","map":{"version":3,"names":["React","PropTypes","Checkbox","injectIntl","FormFieldWrapper","CheckboxWidget","props","id","title","value","onChange","isDisabled","event","checked","propTypes","string","isRequired","description","required","bool","error","arrayOf","func","onEdit","onDelete","wrapped","defaultProps"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/CheckboxWidget.jsx"],"sourcesContent":["/**\n * CheckboxWidget component.\n * @module components/manage/Widgets/CheckboxWidget\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'semantic-ui-react';\n\nimport { injectIntl } from 'react-intl';\nimport { FormFieldWrapper } from '@plone/volto/components';\n\n/**\n * CheckboxWidget component class.\n * @function CheckboxWidget\n * @returns {string} Markup of the component.\n *\n * To use it, in schema properties, declare a field like:\n *\n * ```jsx\n * {\n *  title: \"Active\",\n *  type: 'boolean',\n * }\n * ```\n */\nconst CheckboxWidget = (props) => {\n  const { id, title, value, onChange, isDisabled } = props;\n\n  return (\n    <FormFieldWrapper {...props} columns={1}>\n      <div className=\"wrapper\">\n        <Checkbox\n          name={`field-${id}`}\n          checked={value || false}\n          disabled={isDisabled}\n          onChange={(event, { checked }) => {\n            onChange(id, checked);\n          }}\n          label={<label htmlFor={`field-${id}`}>{title}</label>}\n        />\n      </div>\n    </FormFieldWrapper>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nCheckboxWidget.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  wrapped: PropTypes.bool,\n};\n\n/**\n * Default properties.\n * @property {Object} defaultProps Default properties.\n * @static\n */\nCheckboxWidget.defaultProps = {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n};\n\nexport default injectIntl(CheckboxWidget);\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C,SAASC,UAAU,QAAQ,YAAY;AACvC,SAASC,gBAAgB,QAAQ,yBAAyB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,MAAM;IAAEC,EAAE;IAAEC,KAAK;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAGL,KAAK;EAExD,OACE,MAAC,gBAAgB,eAAKA,KAAK;IAAE,OAAO,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACtC;IAAK,SAAS,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACtB,MAAC,QAAQ;IACP,IAAI,EAAG,SAAQC,EAAG,EAAE;IACpB,OAAO,EAAEE,KAAK,IAAI,KAAM;IACxB,QAAQ,EAAEE,UAAW;IACrB,QAAQ,EAAE,CAACC,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MAChCH,QAAQ,CAACH,EAAE,EAAEM,OAAO,CAAC;IACvB,CAAE;IACF,KAAK,EAAE;MAAO,OAAO,EAAG,SAAQN,EAAG,EAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAEC,KAAK,CAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACtD,CACE,CACW;AAEvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAH,cAAc,CAACS,SAAS,GAAG;EACzBP,EAAE,EAAEN,SAAS,CAACc,MAAM,CAACC,UAAU;EAC/BR,KAAK,EAAEP,SAAS,CAACc,MAAM,CAACC,UAAU;EAClCC,WAAW,EAAEhB,SAAS,CAACc,MAAM;EAC7BG,QAAQ,EAAEjB,SAAS,CAACkB,IAAI;EACxBC,KAAK,EAAEnB,SAAS,CAACoB,OAAO,CAACpB,SAAS,CAACc,MAAM,CAAC;EAC1CN,KAAK,EAAER,SAAS,CAACkB,IAAI;EACrBT,QAAQ,EAAET,SAAS,CAACqB,IAAI;EACxBC,MAAM,EAAEtB,SAAS,CAACqB,IAAI;EACtBE,QAAQ,EAAEvB,SAAS,CAACqB,IAAI;EACxBG,OAAO,EAAExB,SAAS,CAACkB;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAd,cAAc,CAACqB,YAAY,GAAG;EAC5BT,WAAW,EAAE,IAAI;EACjBC,QAAQ,EAAE,KAAK;EACfE,KAAK,EAAE,EAAE;EACTX,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,IAAI;EACda,MAAM,EAAE,IAAI;EACZC,QAAQ,EAAE;AACZ,CAAC;AAED,eAAerB,UAAU,CAACE,cAAc,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}