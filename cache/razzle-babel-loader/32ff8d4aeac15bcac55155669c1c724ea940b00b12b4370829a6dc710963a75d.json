{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/AppExtras/AppExtras.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { matchPath } from 'react-router';\nimport config from '@plone/volto/registry';\nvar AppExtras = function AppExtras(props) {\n  var settings = config.settings;\n  var _settings$appExtras = settings.appExtras,\n    appExtras = _settings$appExtras === void 0 ? [] : _settings$appExtras;\n  var pathname = props.pathname;\n  var active = appExtras.map(function (reg) {\n    var match = matchPath(pathname, reg.match);\n    return match ? {\n      reg: reg,\n      match: match\n    } : null;\n  }).filter(function (reg) {\n    return reg;\n  });\n  return active.map(function (_ref, i) {\n    var _ref$reg = _ref.reg,\n      component = _ref$reg.component,\n      extraProps = _ref$reg.props,\n      match = _ref.match;\n    var Insert = component;\n    return __jsx(Insert, _extends({\n      key: \"appextra-\".concat(i),\n      match: match\n    }, props, extraProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }));\n  });\n};\n_c = AppExtras;\nexport default AppExtras;\nvar _c;\n$RefreshReg$(_c, \"AppExtras\");","map":{"version":3,"names":["React","matchPath","config","AppExtras","props","settings","appExtras","pathname","active","map","reg","match","filter","i","component","extraProps","Insert"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/AppExtras/AppExtras.jsx"],"sourcesContent":["import React from 'react';\nimport { matchPath } from 'react-router';\nimport config from '@plone/volto/registry';\n\nconst AppExtras = (props) => {\n  const { settings } = config;\n  const { appExtras = [] } = settings;\n  const { pathname } = props;\n  const active = appExtras\n    .map((reg) => {\n      const match = matchPath(pathname, reg.match);\n      return match ? { reg, match } : null;\n    })\n    .filter((reg) => reg);\n\n  return active.map(({ reg: { component, props: extraProps }, match }, i) => {\n    const Insert = component;\n    return (\n      <Insert key={`appextra-${i}`} match={match} {...props} {...extraProps} />\n    );\n  });\n};\n\nexport default AppExtras;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAIC,KAAK,EAAK;EAC3B,IAAQC,QAAQ,GAAKH,MAAM,CAAnBG,QAAQ;EAChB,0BAA2BA,QAAQ,CAA3BC,SAAS;IAATA,SAAS,oCAAG,EAAE;EACtB,IAAQC,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ;EAChB,IAAMC,MAAM,GAAGF,SAAS,CACrBG,GAAG,CAAC,UAACC,GAAG,EAAK;IACZ,IAAMC,KAAK,GAAGV,SAAS,CAACM,QAAQ,EAAEG,GAAG,CAACC,KAAK,CAAC;IAC5C,OAAOA,KAAK,GAAG;MAAED,GAAG,EAAHA,GAAG;MAAEC,KAAK,EAALA;IAAM,CAAC,GAAG,IAAI;EACtC,CAAC,CAAC,CACDC,MAAM,CAAC,UAACF,GAAG;IAAA,OAAKA,GAAG;EAAA,EAAC;EAEvB,OAAOF,MAAM,CAACC,GAAG,CAAC,gBAAmDI,CAAC,EAAK;IAAA,oBAAtDH,GAAG;MAAII,SAAS,YAATA,SAAS;MAASC,UAAU,YAAjBX,KAAK;MAAgBO,KAAK,QAALA,KAAK;IAC/D,IAAMK,MAAM,GAAGF,SAAS;IACxB,OACE,MAAC,MAAM;MAAC,GAAG,qBAAcD,CAAC,CAAG;MAAC,KAAK,EAAEF;IAAM,GAAKP,KAAK,EAAMW,UAAU;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAI;EAE7E,CAAC,CAAC;AACJ,CAAC;AAAC,KAjBIZ,SAAS;AAmBf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}