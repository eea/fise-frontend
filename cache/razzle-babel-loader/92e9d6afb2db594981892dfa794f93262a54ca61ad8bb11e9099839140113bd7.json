{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SearchDetails.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { FormattedMessage, defineMessages, useIntl } from 'react-intl';\nvar messages = defineMessages({\n  searchResults: {\n    \"id\": \"Search results\",\n    \"defaultMessage\": \"Search results\"\n  }\n});\nvar SearchDetails = function SearchDetails(_ref) {\n  _s();\n  var total = _ref.total,\n    text = _ref.text,\n    _ref$as = _ref.as,\n    as = _ref$as === void 0 ? 'h4' : _ref$as,\n    data = _ref.data;\n  var El = as;\n  var intl = useIntl();\n  return __jsx(El, {\n    className: \"search-details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, text && __jsx(React.Fragment, null, __jsx(FormattedMessage, {\n    id: \"Searched for: <em>{searchedtext}</em>.\",\n    defaultMessage: \"Searched for: <em>{searchedtext}</em>.\",\n    values: {\n      em: function em() {\n        for (var _len = arguments.length, chunks = new Array(_len), _key = 0; _key < _len; _key++) {\n          chunks[_key] = arguments[_key];\n        }\n        return __jsx(\"em\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 36\n          }\n        }, chunks);\n      },\n      searchedtext: text\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  })), data.showTotalResults && __jsx(React.Fragment, null, ' ', intl.formatMessage(messages.searchResults), \": \", total)));\n};\n_s(SearchDetails, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = SearchDetails;\nexport default SearchDetails;\nvar _c;\n$RefreshReg$(_c, \"SearchDetails\");","map":{"version":3,"names":["React","FormattedMessage","defineMessages","useIntl","messages","searchResults","SearchDetails","total","text","as","data","El","intl","em","chunks","searchedtext","showTotalResults","formatMessage"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Search/components/SearchDetails.jsx"],"sourcesContent":["import React from 'react';\nimport { FormattedMessage, defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  searchResults: {\n    id: 'Search results',\n    defaultMessage: 'Search results',\n  },\n});\n\nconst SearchDetails = ({ total, text, as = 'h4', data }) => {\n  const El = as;\n  const intl = useIntl();\n  return (\n    <El className=\"search-details\">\n      <>\n        {text && (\n          <>\n            <FormattedMessage\n              id=\"Searched for: <em>{searchedtext}</em>.\"\n              defaultMessage=\"Searched for: <em>{searchedtext}</em>.\"\n              values={{\n                em: (...chunks) => <em>{chunks}</em>,\n                searchedtext: text,\n              }}\n            />\n          </>\n        )}\n        {data.showTotalResults && (\n          <>\n            {' '}\n            {intl.formatMessage(messages.searchResults)}: {total}\n          </>\n        )}\n      </>\n    </El>\n  );\n};\n\nexport default SearchDetails;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,cAAc,EAAEC,OAAO,QAAQ,YAAY;AAEtE,IAAMC,QAAQ,GAAGF,cAAc,CAAC;EAC9BG,aAAa;IAAA;IAAA;EAAA;AAIf,CAAC,CAAC;AAEF,IAAMC,aAAa,GAAG,SAAhBA,aAAa,OAAyC;EAAA;EAAA,IAAnCC,KAAK,QAALA,KAAK;IAAEC,IAAI,QAAJA,IAAI;IAAA,eAAEC,EAAE;IAAFA,EAAE,wBAAG,IAAI;IAAEC,IAAI,QAAJA,IAAI;EACnD,IAAMC,EAAE,GAAGF,EAAE;EACb,IAAMG,IAAI,GAAGT,OAAO,EAAE;EACtB,OACE,MAAC,EAAE;IAAC,SAAS,EAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC5B,4BACGK,IAAI,IACH,4BACE,MAAC,gBAAgB;IACf,EAAE,EAAC,wCAAwC;IAC3C,cAAc,EAAC,wCAAwC;IACvD,MAAM,EAAE;MACNK,EAAE,EAAE;QAAA,kCAAIC,MAAM;UAANA,MAAM;QAAA;QAAA,OAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAKA,MAAM,CAAM;MAAA;MACpCC,YAAY,EAAEP;IAChB,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACF,CAEL,EACAE,IAAI,CAACM,gBAAgB,IACpB,4BACG,GAAG,EACHJ,IAAI,CAACK,aAAa,CAACb,QAAQ,CAACC,aAAa,CAAC,QAAIE,KAAK,CAEvD,CACA,CACA;AAET,CAAC;AAAC,GA3BID,aAAa;EAAA,QAEJH,OAAO;AAAA;AAAA,KAFhBG,aAAa;AA6BnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[{"id":"Search results","defaultMessage":"Search results"},{"id":"Searched for: <em>{searchedtext}</em>.","defaultMessage":"Searched for: <em>{searchedtext}</em>."}]}},"sourceType":"module","externalDependencies":[]}