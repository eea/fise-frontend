{"ast":null,"code":"/* eslint no-console: [\"error\", { allow: [\"error\"] }] */\nimport { toast } from 'react-toastify';\nimport { ZOTERO_SETTINGS } from '../constants';\nexport function getZoteroSettings() {\n  return {\n    type: ZOTERO_SETTINGS,\n    request: {\n      op: 'get',\n      path: `/@zotero`\n    }\n  };\n}\nconst testForErrors = response => {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n};\nconst handleErrors = (response, component) => {\n  console.error('handleErrors', response.statusText || response.message, component);\n  toast.error(`Sorry an error has occurred. We have been notified and are looking into it. Please come back later and if the issue persists please contact the site administrator.`);\n  return response;\n};\nconst handleSilentErrors = (response, component) => {\n  if (Object.keys(response.failed).length > 0) {\n    console.error('handleSilentErrors', response.failed[0].message);\n    throw Error(response.failed[0].message);\n  }\n  return response;\n};\n\n// ZOTERO\nexport function fetchZoteroCollections(zoteroUrlBase, headers) {\n  return dispatch => {\n    dispatch(setZoteroCollectionsPending());\n    return fetch(zoteroUrlBase, {\n      method: 'GET',\n      headers\n    }).then(response => testForErrors(response)).then(response => {\n      const totalResults = parseInt(response.headers.get('Total-Results'), 10);\n      return new Promise((resolve, reject) => {\n        response.json().then(results => resolve({\n          results,\n          totalResults\n        })).catch(error => reject(error));\n      });\n    }).then(data => {\n      return dispatch(setZoteroCollectionsSuccess(data));\n    }).catch(error => {\n      handleErrors(error, 'Zotero Collections');\n      dispatch(setZoteroCollectionsFail(error));\n    });\n  };\n}\nexport function fetchZoteroSubCollections(zoteroUrlBase, headers) {\n  return dispatch => {\n    dispatch(setZoteroSubCollectionsPending());\n    return fetch(zoteroUrlBase, {\n      method: 'GET',\n      headers\n    }).then(response => testForErrors(response)).then(response => {\n      const totalResults = parseInt(response.headers.get('Total-Results'), 10);\n      return new Promise((resolve, reject) => {\n        response.json().then(results => resolve({\n          results,\n          totalResults\n        })).catch(error => reject(error));\n      });\n    }).then(data => {\n      return dispatch(setZoteroSubCollectionsSuccess(data));\n    }).catch(error => {\n      handleErrors(error, 'Zotero SubCollections');\n      dispatch(setZoteroSubCollectionsFail(error));\n    });\n  };\n}\nexport function fetchZoteroItems(zoteroUrlBase, headers) {\n  return dispatch => {\n    dispatch(setZoteroItemsPending());\n    return fetch(zoteroUrlBase, {\n      method: 'GET',\n      headers\n    }).then(response => testForErrors(response)).then(response => {\n      const totalResults = parseInt(response.headers.get('Total-Results'), 10);\n      return new Promise((resolve, reject) => {\n        response.json().then(results => resolve({\n          results,\n          totalResults\n        })).catch(error => reject(error));\n      });\n    }).then(data => dispatch(setZoteroItemsSuccess(data))).catch(error => {\n      handleErrors(error, 'Zotero Items');\n      dispatch(setZoteroItemsFail(error));\n    });\n  };\n}\nexport function fetchZoteroSearchItems(zoteroUrlBase, headers) {\n  return dispatch => {\n    dispatch(setZoteroSearchItemsPending());\n    return fetch(zoteroUrlBase, {\n      method: 'GET',\n      headers\n    }).then(response => testForErrors(response)).then(response => {\n      const totalResults = parseInt(response.headers.get('Total-Results'), 10);\n      return new Promise((resolve, reject) => {\n        response.json().then(results => resolve({\n          results,\n          totalResults\n        })).catch(error => reject(error));\n      });\n    }).then(result => {\n      dispatch(setZoteroSearchItemsSuccess(result));\n    }).catch(error => {\n      handleErrors(error, 'Zotero Search Items');\n      dispatch(setZoteroSearchItemsFail(error));\n    });\n  };\n}\n\n// OPENAIRE\n/**\n * Will request data for all received urls and try to repare illegal JSON if parse fails\n * @param {Object[]} openaireUrls - list of urls for openaire to fetch\n * @param {string} openaireUrls[] - urls for openaire ex: for autho or title\n * @param {Function} dispatch - dispatch function\n * @param {Object} actionObjectToDispatch - object conatining all action creators to call in case of pending, succes and fail\n * @param {Function} actionObjectToDispatch.pending - action to dispatch call in case of pending\n * @param {Function} actionObjectToDispatch.success - action to dispatch call in case of succes\n * @param {Function} actionObjectToDispatch.fail - action to dispatch call in case of fail\n * @param {string} errorText - text to send to sentry to indicate where the error happened\n */\nconst getOpenaireSearchItems = async (openaireUrls, dispatch, actionObjectToDispatch, errorText) => {\n  dispatch(actionObjectToDispatch.pending());\n  const fetchPromises = openaireUrls.map(url => fetch(url, {\n    method: 'GET'\n  }));\n  try {\n    const fetchResponses = await Promise.all(fetchPromises);\n    const testResponses = fetchResponses.map(response => testForErrors(response));\n    const textPromises = testResponses.map(response => response.text());\n    const responseTextList = await Promise.all(textPromises);\n    // Sometimes the result contains zero starting numbers like $: 0022324234\n    // which make the JSON.parse give errors\n    // if the response is parseable we will do the usual process\n    // if not, we will replace the $ property to try and stringify the number\n    const result = [];\n    responseTextList.forEach(textResponse => {\n      try {\n        const text = JSON.parse(textResponse);\n        result.push(text);\n      } catch (errorParse) {\n        // apparently regex will not direclty identify \"$\" so we replace the value\n        const searchInitialId = '$';\n        const replaceWithNew = '__id_z';\n        const chunkZ = textResponse.replaceAll(searchInitialId, replaceWithNew);\n        const fixCode = /\"__id_z\" : (0[0-9]+) /g;\n        const resultText = chunkZ.replaceAll(fixCode, (match, code) => {\n          return '\"__id_z\": \"' + code + '\"';\n        });\n\n        // change it back to \"$\" to not modify the existing code and formatting\n        const searchNewId = '__id_z';\n        const replaceWithInitial = '$';\n        const resultParsed = JSON.parse(resultText.replaceAll(searchNewId, replaceWithInitial));\n        result.push(resultParsed);\n      }\n    });\n    dispatch(actionObjectToDispatch.success(result));\n  } catch (error) {\n    handleErrors(error, errorText);\n    dispatch(actionObjectToDispatch.fail(error));\n  }\n};\nexport function fetchOpenairePubSearchItems(openairePubUrls) {\n  return dispatch => {\n    getOpenaireSearchItems(openairePubUrls, dispatch, {\n      pending: setOpenairePubSearchItemsPending,\n      success: setOpenairePubSearchItemsSuccess,\n      fail: setOpenairePubSearchItemsFail\n    }, 'Openaire Publications Search Items');\n  };\n}\nexport function fetchOpenaireRsdSearchItems(openaireRsdUrls) {\n  return dispatch => {\n    dispatch(setOpenaireRsdSearchItemsPending());\n    getOpenaireSearchItems(openaireRsdUrls, dispatch, {\n      pending: setOpenaireRsdSearchItemsPending,\n      success: setOpenaireRsdSearchItemsSuccess,\n      fail: setOpenaireRsdSearchItemsFail\n    }, 'Openaire Rsd Search Items');\n  };\n}\nexport function fetchZoteroItemCitation(zoteroUrlBase, headers) {\n  return dispatch => {\n    dispatch(setZoteroItemCitationPending());\n    return fetch(zoteroUrlBase, {\n      method: 'GET',\n      headers\n    }).then(response => testForErrors(response)).then(response => response.text()).then(result => {\n      dispatch(setZoteroItemCitationSuccess({\n        result\n      }));\n    }).catch(error => {\n      handleErrors(error, 'Zotero Item Citation');\n      dispatch(setZoteroItemCitationFail(error));\n    });\n  };\n}\nexport function saveItemToZotero(zoteroUrlBase, headers, body) {\n  return dispatch => {\n    dispatch(saveItemToZoteroPending());\n    return fetch(zoteroUrlBase, {\n      method: 'POST',\n      headers,\n      body\n    }).then(response => testForErrors(response)).then(response => response.json()).then(result => {\n      handleSilentErrors(result, 'Save Item to Zotero');\n      dispatch(saveItemToZoteroSuccess(result));\n    }).catch(error => {\n      handleErrors(error, 'Save Item to Zotero');\n      dispatch(saveItemToZoteroFail(error));\n    });\n  };\n}\n\n// COLLECTIONS\nfunction setZoteroCollectionsPending(data) {\n  return {\n    type: 'ZOTERO_COLLECTIONS_PENDING',\n    result: data\n  };\n}\nfunction setZoteroCollectionsSuccess(data) {\n  return {\n    type: 'ZOTERO_COLLECTIONS_SUCCESS',\n    result: data\n  };\n}\nfunction setZoteroCollectionsFail(data) {\n  return {\n    type: 'ZOTERO_COLLECTIONS_FAIL',\n    result: data\n  };\n}\nfunction setZoteroSubCollectionsPending(data) {\n  return {\n    type: 'ZOTERO_SUB_COLLECTIONS_PENDING',\n    result: data\n  };\n}\nfunction setZoteroSubCollectionsSuccess(data) {\n  return {\n    type: 'ZOTERO_SUB_COLLECTIONS_SUCCESS',\n    result: data\n  };\n}\nfunction setZoteroSubCollectionsFail(data) {\n  return {\n    type: 'ZOTERO_SUB_COLLECTIONS_FAIL',\n    result: data\n  };\n}\n\n// ITEMS\nfunction saveItemToZoteroPending(data) {\n  return {\n    type: 'ZOTERO_ITEM_SAVED_PENDING',\n    result: data\n  };\n}\nfunction saveItemToZoteroSuccess(data) {\n  return {\n    type: 'ZOTERO_ITEM_SAVED_SUCCESS',\n    result: data\n  };\n}\nfunction saveItemToZoteroFail(data) {\n  return {\n    type: 'ZOTERO_ITEM_SAVED_FAIL',\n    result: data\n  };\n}\nfunction setZoteroItemCitationPending(data) {\n  return {\n    type: 'ZOTERO_ITEM_CITATION_PENDING',\n    result: data\n  };\n}\nfunction setZoteroItemCitationSuccess(data) {\n  return {\n    type: 'ZOTERO_ITEM_CITATION_SUCCESS',\n    result: data\n  };\n}\nfunction setZoteroItemCitationFail(data) {\n  return {\n    type: 'ZOTERO_ITEM_CITATION_FAIL',\n    result: data\n  };\n}\nfunction setZoteroItemsPending(data) {\n  return {\n    type: 'ZOTERO_ITEMS_PENDING',\n    result: data\n  };\n}\nfunction setZoteroItemsSuccess(data) {\n  return {\n    type: 'ZOTERO_ITEMS_SUCCESS',\n    result: data\n  };\n}\nfunction setZoteroItemsFail(data) {\n  return {\n    type: 'ZOTERO_ITEMS_FAIL',\n    result: data\n  };\n}\n// ZOTERO_SEARCH\nfunction setZoteroSearchItemsPending(data) {\n  return {\n    type: 'ZOTERO_SEARCH_ITEMS_PENDING',\n    result: data\n  };\n}\nfunction setZoteroSearchItemsSuccess(results, totalResults) {\n  return {\n    type: 'ZOTERO_SEARCH_ITEMS_SUCCESS',\n    result: {\n      results,\n      totalResults\n    }\n  };\n}\nfunction setZoteroSearchItemsFail(data) {\n  return {\n    type: 'ZOTERO_SEARCH_ITEMS_FAIL',\n    result: data\n  };\n}\n// OPENAIRE_SEARCH\nfunction setOpenairePubSearchItemsPending(data) {\n  return {\n    type: 'OPENAIRE_ITEMS_PUB_PENDING',\n    result: data\n  };\n}\nfunction setOpenairePubSearchItemsSuccess(data) {\n  return {\n    type: 'OPENAIRE_ITEMS_PUB_SUCCESS',\n    result: data\n  };\n}\nfunction setOpenairePubSearchItemsFail(data) {\n  return {\n    type: 'OPENAIRE_ITEMS_PUB_FAIL',\n    result: data\n  };\n}\nfunction setOpenaireRsdSearchItemsPending(data) {\n  return {\n    type: 'OPENAIRE_ITEMS_RSD_PENDING',\n    result: data\n  };\n}\nfunction setOpenaireRsdSearchItemsSuccess(data) {\n  return {\n    type: 'OPENAIRE_ITEMS_RSD_SUCCESS',\n    result: data\n  };\n}\nfunction setOpenaireRsdSearchItemsFail(data) {\n  return {\n    type: 'OPENAIRE_ITEMS_RSD_FAIL',\n    result: data\n  };\n}","map":{"version":3,"names":["toast","ZOTERO_SETTINGS","getZoteroSettings","type","request","op","path","testForErrors","response","ok","Error","statusText","handleErrors","component","console","error","message","handleSilentErrors","Object","keys","failed","length","fetchZoteroCollections","zoteroUrlBase","headers","dispatch","setZoteroCollectionsPending","fetch","method","then","totalResults","parseInt","get","Promise","resolve","reject","json","results","catch","data","setZoteroCollectionsSuccess","setZoteroCollectionsFail","fetchZoteroSubCollections","setZoteroSubCollectionsPending","setZoteroSubCollectionsSuccess","setZoteroSubCollectionsFail","fetchZoteroItems","setZoteroItemsPending","setZoteroItemsSuccess","setZoteroItemsFail","fetchZoteroSearchItems","setZoteroSearchItemsPending","result","setZoteroSearchItemsSuccess","setZoteroSearchItemsFail","getOpenaireSearchItems","openaireUrls","actionObjectToDispatch","errorText","pending","fetchPromises","map","url","fetchResponses","all","testResponses","textPromises","text","responseTextList","forEach","textResponse","JSON","parse","push","errorParse","searchInitialId","replaceWithNew","chunkZ","replaceAll","fixCode","resultText","match","code","searchNewId","replaceWithInitial","resultParsed","success","fail","fetchOpenairePubSearchItems","openairePubUrls","setOpenairePubSearchItemsPending","setOpenairePubSearchItemsSuccess","setOpenairePubSearchItemsFail","fetchOpenaireRsdSearchItems","openaireRsdUrls","setOpenaireRsdSearchItemsPending","setOpenaireRsdSearchItemsSuccess","setOpenaireRsdSearchItemsFail","fetchZoteroItemCitation","setZoteroItemCitationPending","setZoteroItemCitationSuccess","setZoteroItemCitationFail","saveItemToZotero","body","saveItemToZoteroPending","saveItemToZoteroSuccess","saveItemToZoteroFail"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-slate-zotero/src/plugins/zotero/editor/actions.js"],"sourcesContent":["/* eslint no-console: [\"error\", { allow: [\"error\"] }] */\nimport { toast } from 'react-toastify';\nimport { ZOTERO_SETTINGS } from '../constants';\n\nexport function getZoteroSettings() {\n  return {\n    type: ZOTERO_SETTINGS,\n    request: {\n      op: 'get',\n      path: `/@zotero`,\n    },\n  };\n}\n\nconst testForErrors = (response) => {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n};\n\nconst handleErrors = (response, component) => {\n  console.error(\n    'handleErrors',\n    response.statusText || response.message,\n    component,\n  );\n  toast.error(\n    `Sorry an error has occurred. We have been notified and are looking into it. Please come back later and if the issue persists please contact the site administrator.`,\n  );\n  return response;\n};\n\nconst handleSilentErrors = (response, component) => {\n  if (Object.keys(response.failed).length > 0) {\n    console.error('handleSilentErrors', response.failed[0].message);\n\n    throw Error(response.failed[0].message);\n  }\n  return response;\n};\n\n// ZOTERO\nexport function fetchZoteroCollections(zoteroUrlBase, headers) {\n  return (dispatch) => {\n    dispatch(setZoteroCollectionsPending());\n    return fetch(zoteroUrlBase, {\n      method: 'GET',\n      headers,\n    })\n      .then((response) => testForErrors(response))\n      .then((response) => {\n        const totalResults = parseInt(\n          response.headers.get('Total-Results'),\n          10,\n        );\n        return new Promise((resolve, reject) => {\n          response\n            .json()\n            .then((results) => resolve({ results, totalResults }))\n            .catch((error) => reject(error));\n        });\n      })\n      .then((data) => {\n        return dispatch(setZoteroCollectionsSuccess(data));\n      })\n      .catch((error) => {\n        handleErrors(error, 'Zotero Collections');\n        dispatch(setZoteroCollectionsFail(error));\n      });\n  };\n}\nexport function fetchZoteroSubCollections(zoteroUrlBase, headers) {\n  return (dispatch) => {\n    dispatch(setZoteroSubCollectionsPending());\n    return fetch(zoteroUrlBase, {\n      method: 'GET',\n      headers,\n    })\n      .then((response) => testForErrors(response))\n      .then((response) => {\n        const totalResults = parseInt(\n          response.headers.get('Total-Results'),\n          10,\n        );\n        return new Promise((resolve, reject) => {\n          response\n            .json()\n            .then((results) => resolve({ results, totalResults }))\n            .catch((error) => reject(error));\n        });\n      })\n      .then((data) => {\n        return dispatch(setZoteroSubCollectionsSuccess(data));\n      })\n      .catch((error) => {\n        handleErrors(error, 'Zotero SubCollections');\n        dispatch(setZoteroSubCollectionsFail(error));\n      });\n  };\n}\n\nexport function fetchZoteroItems(zoteroUrlBase, headers) {\n  return (dispatch) => {\n    dispatch(setZoteroItemsPending());\n    return fetch(zoteroUrlBase, {\n      method: 'GET',\n      headers,\n    })\n      .then((response) => testForErrors(response))\n      .then((response) => {\n        const totalResults = parseInt(\n          response.headers.get('Total-Results'),\n          10,\n        );\n        return new Promise((resolve, reject) => {\n          response\n            .json()\n            .then((results) => resolve({ results, totalResults }))\n            .catch((error) => reject(error));\n        });\n      })\n      .then((data) => dispatch(setZoteroItemsSuccess(data)))\n      .catch((error) => {\n        handleErrors(error, 'Zotero Items');\n        dispatch(setZoteroItemsFail(error));\n      });\n  };\n}\n\nexport function fetchZoteroSearchItems(zoteroUrlBase, headers) {\n  return (dispatch) => {\n    dispatch(setZoteroSearchItemsPending());\n    return fetch(zoteroUrlBase, {\n      method: 'GET',\n      headers,\n    })\n      .then((response) => testForErrors(response))\n      .then((response) => {\n        const totalResults = parseInt(\n          response.headers.get('Total-Results'),\n          10,\n        );\n        return new Promise((resolve, reject) => {\n          response\n            .json()\n            .then((results) => resolve({ results, totalResults }))\n            .catch((error) => reject(error));\n        });\n      })\n      .then((result) => {\n        dispatch(setZoteroSearchItemsSuccess(result));\n      })\n      .catch((error) => {\n        handleErrors(error, 'Zotero Search Items');\n        dispatch(setZoteroSearchItemsFail(error));\n      });\n  };\n}\n\n// OPENAIRE\n/**\n * Will request data for all received urls and try to repare illegal JSON if parse fails\n * @param {Object[]} openaireUrls - list of urls for openaire to fetch\n * @param {string} openaireUrls[] - urls for openaire ex: for autho or title\n * @param {Function} dispatch - dispatch function\n * @param {Object} actionObjectToDispatch - object conatining all action creators to call in case of pending, succes and fail\n * @param {Function} actionObjectToDispatch.pending - action to dispatch call in case of pending\n * @param {Function} actionObjectToDispatch.success - action to dispatch call in case of succes\n * @param {Function} actionObjectToDispatch.fail - action to dispatch call in case of fail\n * @param {string} errorText - text to send to sentry to indicate where the error happened\n */\nconst getOpenaireSearchItems = async (\n  openaireUrls,\n  dispatch,\n  actionObjectToDispatch,\n  errorText,\n) => {\n  dispatch(actionObjectToDispatch.pending());\n\n  const fetchPromises = openaireUrls.map((url) =>\n    fetch(url, {\n      method: 'GET',\n    }),\n  );\n\n  try {\n    const fetchResponses = await Promise.all(fetchPromises);\n    const testResponses = fetchResponses.map((response) =>\n      testForErrors(response),\n    );\n    const textPromises = testResponses.map((response) => response.text());\n    const responseTextList = await Promise.all(textPromises);\n    // Sometimes the result contains zero starting numbers like $: 0022324234\n    // which make the JSON.parse give errors\n    // if the response is parseable we will do the usual process\n    // if not, we will replace the $ property to try and stringify the number\n    const result = [];\n\n    responseTextList.forEach((textResponse) => {\n      try {\n        const text = JSON.parse(textResponse);\n        result.push(text);\n      } catch (errorParse) {\n        // apparently regex will not direclty identify \"$\" so we replace the value\n        const searchInitialId = '$';\n        const replaceWithNew = '__id_z';\n        const chunkZ = textResponse.replaceAll(searchInitialId, replaceWithNew);\n\n        const fixCode = /\"__id_z\" : (0[0-9]+) /g;\n        const resultText = chunkZ.replaceAll(fixCode, (match, code) => {\n          return '\"__id_z\": \"' + code + '\"';\n        });\n\n        // change it back to \"$\" to not modify the existing code and formatting\n        const searchNewId = '__id_z';\n        const replaceWithInitial = '$';\n        const resultParsed = JSON.parse(\n          resultText.replaceAll(searchNewId, replaceWithInitial),\n        );\n        result.push(resultParsed);\n      }\n    });\n    dispatch(actionObjectToDispatch.success(result));\n  } catch (error) {\n    handleErrors(error, errorText);\n    dispatch(actionObjectToDispatch.fail(error));\n  }\n};\n\nexport function fetchOpenairePubSearchItems(openairePubUrls) {\n  return (dispatch) => {\n    getOpenaireSearchItems(\n      openairePubUrls,\n      dispatch,\n      {\n        pending: setOpenairePubSearchItemsPending,\n        success: setOpenairePubSearchItemsSuccess,\n        fail: setOpenairePubSearchItemsFail,\n      },\n      'Openaire Publications Search Items',\n    );\n  };\n}\n\nexport function fetchOpenaireRsdSearchItems(openaireRsdUrls) {\n  return (dispatch) => {\n    dispatch(setOpenaireRsdSearchItemsPending());\n    getOpenaireSearchItems(\n      openaireRsdUrls,\n      dispatch,\n      {\n        pending: setOpenaireRsdSearchItemsPending,\n        success: setOpenaireRsdSearchItemsSuccess,\n        fail: setOpenaireRsdSearchItemsFail,\n      },\n      'Openaire Rsd Search Items',\n    );\n  };\n}\n\nexport function fetchZoteroItemCitation(zoteroUrlBase, headers) {\n  return (dispatch) => {\n    dispatch(setZoteroItemCitationPending());\n    return fetch(zoteroUrlBase, {\n      method: 'GET',\n      headers,\n    })\n      .then((response) => testForErrors(response))\n      .then((response) => response.text())\n      .then((result) => {\n        dispatch(setZoteroItemCitationSuccess({ result }));\n      })\n      .catch((error) => {\n        handleErrors(error, 'Zotero Item Citation');\n        dispatch(setZoteroItemCitationFail(error));\n      });\n  };\n}\n\nexport function saveItemToZotero(zoteroUrlBase, headers, body) {\n  return (dispatch) => {\n    dispatch(saveItemToZoteroPending());\n    return fetch(zoteroUrlBase, {\n      method: 'POST',\n      headers,\n      body,\n    })\n      .then((response) => testForErrors(response))\n      .then((response) => response.json())\n      .then((result) => {\n        handleSilentErrors(result, 'Save Item to Zotero');\n        dispatch(saveItemToZoteroSuccess(result));\n      })\n      .catch((error) => {\n        handleErrors(error, 'Save Item to Zotero');\n        dispatch(saveItemToZoteroFail(error));\n      });\n  };\n}\n\n// COLLECTIONS\nfunction setZoteroCollectionsPending(data) {\n  return {\n    type: 'ZOTERO_COLLECTIONS_PENDING',\n    result: data,\n  };\n}\nfunction setZoteroCollectionsSuccess(data) {\n  return {\n    type: 'ZOTERO_COLLECTIONS_SUCCESS',\n    result: data,\n  };\n}\nfunction setZoteroCollectionsFail(data) {\n  return {\n    type: 'ZOTERO_COLLECTIONS_FAIL',\n    result: data,\n  };\n}\n\nfunction setZoteroSubCollectionsPending(data) {\n  return {\n    type: 'ZOTERO_SUB_COLLECTIONS_PENDING',\n    result: data,\n  };\n}\nfunction setZoteroSubCollectionsSuccess(data) {\n  return {\n    type: 'ZOTERO_SUB_COLLECTIONS_SUCCESS',\n    result: data,\n  };\n}\nfunction setZoteroSubCollectionsFail(data) {\n  return {\n    type: 'ZOTERO_SUB_COLLECTIONS_FAIL',\n    result: data,\n  };\n}\n\n// ITEMS\nfunction saveItemToZoteroPending(data) {\n  return {\n    type: 'ZOTERO_ITEM_SAVED_PENDING',\n    result: data,\n  };\n}\n\nfunction saveItemToZoteroSuccess(data) {\n  return {\n    type: 'ZOTERO_ITEM_SAVED_SUCCESS',\n    result: data,\n  };\n}\n\nfunction saveItemToZoteroFail(data) {\n  return {\n    type: 'ZOTERO_ITEM_SAVED_FAIL',\n    result: data,\n  };\n}\n\nfunction setZoteroItemCitationPending(data) {\n  return {\n    type: 'ZOTERO_ITEM_CITATION_PENDING',\n    result: data,\n  };\n}\nfunction setZoteroItemCitationSuccess(data) {\n  return {\n    type: 'ZOTERO_ITEM_CITATION_SUCCESS',\n    result: data,\n  };\n}\nfunction setZoteroItemCitationFail(data) {\n  return {\n    type: 'ZOTERO_ITEM_CITATION_FAIL',\n    result: data,\n  };\n}\n\nfunction setZoteroItemsPending(data) {\n  return {\n    type: 'ZOTERO_ITEMS_PENDING',\n    result: data,\n  };\n}\n\nfunction setZoteroItemsSuccess(data) {\n  return {\n    type: 'ZOTERO_ITEMS_SUCCESS',\n    result: data,\n  };\n}\n\nfunction setZoteroItemsFail(data) {\n  return {\n    type: 'ZOTERO_ITEMS_FAIL',\n    result: data,\n  };\n}\n// ZOTERO_SEARCH\nfunction setZoteroSearchItemsPending(data) {\n  return {\n    type: 'ZOTERO_SEARCH_ITEMS_PENDING',\n    result: data,\n  };\n}\n\nfunction setZoteroSearchItemsSuccess(results, totalResults) {\n  return {\n    type: 'ZOTERO_SEARCH_ITEMS_SUCCESS',\n    result: { results, totalResults },\n  };\n}\n\nfunction setZoteroSearchItemsFail(data) {\n  return {\n    type: 'ZOTERO_SEARCH_ITEMS_FAIL',\n    result: data,\n  };\n}\n// OPENAIRE_SEARCH\nfunction setOpenairePubSearchItemsPending(data) {\n  return {\n    type: 'OPENAIRE_ITEMS_PUB_PENDING',\n    result: data,\n  };\n}\n\nfunction setOpenairePubSearchItemsSuccess(data) {\n  return {\n    type: 'OPENAIRE_ITEMS_PUB_SUCCESS',\n    result: data,\n  };\n}\n\nfunction setOpenairePubSearchItemsFail(data) {\n  return {\n    type: 'OPENAIRE_ITEMS_PUB_FAIL',\n    result: data,\n  };\n}\n\nfunction setOpenaireRsdSearchItemsPending(data) {\n  return {\n    type: 'OPENAIRE_ITEMS_RSD_PENDING',\n    result: data,\n  };\n}\n\nfunction setOpenaireRsdSearchItemsSuccess(data) {\n  return {\n    type: 'OPENAIRE_ITEMS_RSD_SUCCESS',\n    result: data,\n  };\n}\n\nfunction setOpenaireRsdSearchItemsFail(data) {\n  return {\n    type: 'OPENAIRE_ITEMS_RSD_FAIL',\n    result: data,\n  };\n}\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}