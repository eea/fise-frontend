{"ast":null,"code":"import _uniq from \"lodash/uniq\";\nimport _union from \"lodash/union\";\nimport _map from \"lodash/map\";\nimport _keys from \"lodash/keys\";\nimport _concat from \"lodash/concat\";\nimport _compact from \"lodash/compact\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/IdWidget.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * IdWidget component.\n * @module components/manage/Widgets/IdWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Input } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Icon, FormFieldWrapper } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nimport { getQuerystring } from '@plone/volto/actions';\nconst messages = defineMessages({\n  reservedId: {\n    \"id\": \"This is a reserved name and can't be used\",\n    \"defaultMessage\": \"This is a reserved name and can't be used\"\n  },\n  invalidCharacters: {\n    \"id\": \"Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \\\"-\\\", \\\"_\\\", and \\\".\\\" are allowed.\",\n    \"defaultMessage\": \"Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \\\"-\\\", \\\"_\\\", and \\\".\\\" are allowed.\"\n  }\n});\n\n/**\n * The id widget.\n *\n * This is the id widget to handle for example the short name field.\n */\nclass IdWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Actions\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: [],\n      reservedIds: _compact(_uniq(_union(config.settings.reservedIds, _map(config.settings.nonContentRoutes, route => String(route).replace(/[^a-z-]/g, '')))))\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.fieldValidation = this.fieldValidation.bind(this);\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n    this.props.getQuerystring();\n    this.fieldValidation(this.props.value);\n  }\n\n  /**\n   * Field validation.\n   * @method fieldValidation\n   * @param {string} value New value\n   * @returns {undefined}\n   */\n  fieldValidation(value) {\n    const error = [];\n\n    // Check reserved id's\n    if (this.state.reservedIds.indexOf(value) !== -1) {\n      error.push(this.props.intl.formatMessage(messages.reservedId));\n    }\n\n    // Check invalid characters\n    if (!/^[.a-z0-9_-]*$/.test(value)) {\n      error.push(this.props.intl.formatMessage(messages.invalidCharacters));\n    }\n\n    // Check indexes\n    if (this.props.indexes.indexOf(value) !== -1) {\n      error.push(this.props.intl.formatMessage(messages.reservedId));\n    }\n    this.setState({\n      error\n    });\n  }\n\n  /**\n   * Handle the field change.\n   * @method handleChange\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  handleChange({\n    target\n  }) {\n    this.fieldValidation(target.value);\n    this.props.onChange(this.props.id, target.value === '' ? undefined : target.value);\n  }\n\n  /**\n   * Handle the field blur.\n   * @method handleBlur\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  handleBlur({\n    target\n  }) {\n    this.fieldValidation(target.value);\n    this.props.onBlur(this.props.id, target.value === '' ? undefined : target.value);\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      value,\n      onClick,\n      icon,\n      iconAction,\n      minLength,\n      maxLength,\n      placeholder\n    } = this.props;\n    const props = _objectSpread(_objectSpread({}, this.props), {}, {\n      error: _concat(this.props.error, this.state.error)\n    });\n    return __jsx(FormFieldWrapper, _extends({}, props, {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }\n    }), __jsx(Input, {\n      id: `field-${id}`,\n      name: id,\n      value: value || '',\n      disabled: this.props.isDisabled,\n      icon: icon || null,\n      placeholder: placeholder,\n      onChange: this.handleChange,\n      onBlur: this.handleBlur,\n      onClick: () => onClick(),\n      ref: node => {\n        this.node = node;\n      },\n      minLength: minLength || null,\n      maxLength: maxLength || null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }), icon && iconAction && __jsx(\"button\", {\n      className: `field-${id}-action-button`,\n      onClick: iconAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }, __jsx(Icon, {\n      name: icon,\n      size: \"18px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n_defineProperty(IdWidget, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  required: PropTypes.bool,\n  error: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  focus: PropTypes.bool,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  onEdit: PropTypes.func,\n  onDelete: PropTypes.func,\n  icon: PropTypes.shape({\n    xmlns: PropTypes.string,\n    viewBox: PropTypes.string,\n    content: PropTypes.string\n  }),\n  iconAction: PropTypes.func,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  wrapped: PropTypes.bool,\n  placeholder: PropTypes.string\n});\n_defineProperty(IdWidget, \"defaultProps\", {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: () => {},\n  onBlur: () => {},\n  onClick: () => {},\n  onEdit: null,\n  onDelete: null,\n  focus: false,\n  icon: null,\n  iconAction: null,\n  minLength: null,\n  maxLength: null\n});\nexport default compose(injectIntl, connect((state, props) => ({\n  indexes: _keys(state.querystring.indexes)\n}), {\n  getQuerystring\n}))(IdWidget);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Input","defineMessages","injectIntl","Icon","FormFieldWrapper","config","getQuerystring","messages","reservedId","invalidCharacters","IdWidget","constructor","props","state","error","reservedIds","settings","nonContentRoutes","route","String","replace","handleChange","bind","handleBlur","fieldValidation","componentDidMount","focus","node","value","indexOf","push","intl","formatMessage","test","indexes","setState","target","onChange","id","undefined","onBlur","render","onClick","icon","iconAction","minLength","maxLength","placeholder","isDisabled","string","isRequired","title","description","required","bool","arrayOf","func","onEdit","onDelete","shape","xmlns","viewBox","content","number","wrapped","querystring"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Widgets/IdWidget.jsx"],"sourcesContent":["/**\n * IdWidget component.\n * @module components/manage/Widgets/IdWidget\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Input } from 'semantic-ui-react';\nimport { compact, concat, keys, map, union, uniq } from 'lodash';\n\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Icon, FormFieldWrapper } from '@plone/volto/components';\nimport config from '@plone/volto/registry';\nimport { getQuerystring } from '@plone/volto/actions';\n\nconst messages = defineMessages({\n  reservedId: {\n    id: \"This is a reserved name and can't be used\",\n    defaultMessage: \"This is a reserved name and can't be used\",\n  },\n  invalidCharacters: {\n    id:\n      'Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \"-\", \"_\", and \".\" are allowed.',\n    defaultMessage:\n      'Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \"-\", \"_\", and \".\" are allowed.',\n  },\n});\n\n/**\n * The id widget.\n *\n * This is the id widget to handle for example the short name field.\n */\nclass IdWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    required: PropTypes.bool,\n    error: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.string,\n    focus: PropTypes.bool,\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    onClick: PropTypes.func,\n    onEdit: PropTypes.func,\n    onDelete: PropTypes.func,\n    icon: PropTypes.shape({\n      xmlns: PropTypes.string,\n      viewBox: PropTypes.string,\n      content: PropTypes.string,\n    }),\n    iconAction: PropTypes.func,\n    minLength: PropTypes.number,\n    maxLength: PropTypes.number,\n    wrapped: PropTypes.bool,\n    placeholder: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: null,\n    onChange: () => {},\n    onBlur: () => {},\n    onClick: () => {},\n    onEdit: null,\n    onDelete: null,\n    focus: false,\n    icon: null,\n    iconAction: null,\n    minLength: null,\n    maxLength: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Actions\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: [],\n      reservedIds: compact(\n        uniq(\n          union(\n            config.settings.reservedIds,\n            map(config.settings.nonContentRoutes, (route) =>\n              String(route).replace(/[^a-z-]/g, ''),\n            ),\n          ),\n        ),\n      ),\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.fieldValidation = this.fieldValidation.bind(this);\n  }\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n    this.props.getQuerystring();\n    this.fieldValidation(this.props.value);\n  }\n\n  /**\n   * Field validation.\n   * @method fieldValidation\n   * @param {string} value New value\n   * @returns {undefined}\n   */\n  fieldValidation(value) {\n    const error = [];\n\n    // Check reserved id's\n    if (this.state.reservedIds.indexOf(value) !== -1) {\n      error.push(this.props.intl.formatMessage(messages.reservedId));\n    }\n\n    // Check invalid characters\n    if (!/^[.a-z0-9_-]*$/.test(value)) {\n      error.push(this.props.intl.formatMessage(messages.invalidCharacters));\n    }\n\n    // Check indexes\n    if (this.props.indexes.indexOf(value) !== -1) {\n      error.push(this.props.intl.formatMessage(messages.reservedId));\n    }\n\n    this.setState({ error });\n  }\n\n  /**\n   * Handle the field change.\n   * @method handleChange\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  handleChange({ target }) {\n    this.fieldValidation(target.value);\n    this.props.onChange(\n      this.props.id,\n      target.value === '' ? undefined : target.value,\n    );\n  }\n\n  /**\n   * Handle the field blur.\n   * @method handleBlur\n   * @param {Object} event Event object\n   * @returns {undefined}\n   */\n  handleBlur({ target }) {\n    this.fieldValidation(target.value);\n    this.props.onBlur(\n      this.props.id,\n      target.value === '' ? undefined : target.value,\n    );\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      value,\n      onClick,\n      icon,\n      iconAction,\n      minLength,\n      maxLength,\n      placeholder,\n    } = this.props;\n\n    const props = {\n      ...this.props,\n      error: concat(this.props.error, this.state.error),\n    };\n\n    return (\n      <FormFieldWrapper {...props} className=\"text\">\n        <Input\n          id={`field-${id}`}\n          name={id}\n          value={value || ''}\n          disabled={this.props.isDisabled}\n          icon={icon || null}\n          placeholder={placeholder}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onClick={() => onClick()}\n          ref={(node) => {\n            this.node = node;\n          }}\n          minLength={minLength || null}\n          maxLength={maxLength || null}\n        />\n        {icon && iconAction && (\n          <button className={`field-${id}-action-button`} onClick={iconAction}>\n            <Icon name={icon} size=\"18px\" />\n          </button>\n        )}\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      indexes: keys(state.querystring.indexes),\n    }),\n    {\n      getQuerystring,\n    },\n  ),\n)(IdWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"This is a reserved name and can't be used","defaultMessage":"This is a reserved name and can't be used"},{"id":"Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \"-\", \"_\", and \".\" are allowed.","defaultMessage":"Only lowercase letters (a-z) without accents, numbers (0-9), and the characters \"-\", \"_\", and \".\" are allowed."}]}},"sourceType":"module","externalDependencies":[]}