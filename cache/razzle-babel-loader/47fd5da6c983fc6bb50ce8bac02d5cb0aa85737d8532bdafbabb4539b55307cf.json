{"ast":null,"code":"import _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _map from \"lodash/map\";\nimport _isEqual from \"lodash/isEqual\";\nimport _find from \"lodash/find\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Sharing/Sharing.jsx\";\nvar __jsx = React.createElement;\n/**\n * Sharing container.\n * @module components/manage/Sharing/Sharing\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Plug, Pluggable } from '@plone/volto/components/manage/Pluggable';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { Button, Checkbox, Container, Form, Icon as IconOld, Input, Segment, Table } from 'semantic-ui-react';\nimport jwtDecode from 'jwt-decode';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { updateSharing, getSharing } from '@plone/volto/actions';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { Icon, Toolbar, Toast } from '@plone/volto/components';\nimport { toast } from 'react-toastify';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\nvar messages = defineMessages({\n  searchForUserOrGroup: {\n    \"id\": \"Search for user or group\",\n    \"defaultMessage\": \"Search for user or group\"\n  },\n  inherit: {\n    \"id\": \"Inherit permissions from higher levels\",\n    \"defaultMessage\": \"Inherit permissions from higher levels\"\n  },\n  save: {\n    \"id\": \"Save\",\n    \"defaultMessage\": \"Save\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  sharing: {\n    \"id\": \"Sharing\",\n    \"defaultMessage\": \"Sharing\"\n  },\n  user: {\n    \"id\": \"User\",\n    \"defaultMessage\": \"User\"\n  },\n  group: {\n    \"id\": \"Group\",\n    \"defaultMessage\": \"Group\"\n  },\n  globalRole: {\n    \"id\": \"Global role\",\n    \"defaultMessage\": \"Global role\"\n  },\n  inheritedValue: {\n    \"id\": \"Inherited value\",\n    \"defaultMessage\": \"Inherited value\"\n  },\n  permissionsUpdated: {\n    \"id\": \"Permissions updated\",\n    \"defaultMessage\": \"Permissions updated\"\n  },\n  permissionsUpdatedSuccessfully: {\n    \"id\": \"Permissions have been updated successfully\",\n    \"defaultMessage\": \"Permissions have been updated successfully\"\n  }\n});\n\n/**\n * SharingComponent class.\n * @class SharingComponent\n * @extends Component\n */\nvar SharingComponent = /*#__PURE__*/function (_Component) {\n  _inherits(SharingComponent, _Component);\n  var _super = _createSuper(SharingComponent);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  function SharingComponent(props) {\n    var _this;\n    _classCallCheck(this, SharingComponent);\n    _this = _super.call(this, props);\n    _this.onCancel = _this.onCancel.bind(_assertThisInitialized(_this));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onChangeSearch = _this.onChangeSearch.bind(_assertThisInitialized(_this));\n    _this.onSearch = _this.onSearch.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.onToggleInherit = _this.onToggleInherit.bind(_assertThisInitialized(_this));\n    _this.state = {\n      search: '',\n      inherit: props.inherit,\n      entries: props.entries,\n      isClient: false\n    };\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(SharingComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n      this.setState({\n        isClient: true\n      });\n    }\n\n    /**\n     * Component will receive props\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Next properties\n     * @returns {undefined}\n     */\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n      if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n        this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n        toast.success(__jsx(Toast, {\n          success: true,\n          title: this.props.intl.formatMessage(messages.permissionsUpdated),\n          content: this.props.intl.formatMessage(messages.permissionsUpdatedSuccessfully),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 9\n          }\n        }));\n      }\n      this.setState({\n        inherit: this.props.inherit === null ? nextProps.inherit : this.state.inherit,\n        entries: _map(nextProps.entries, function (entry) {\n          var values = _find(_this2.state.entries, {\n            id: entry.id\n          });\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            roles: values ? values.roles : entry.roles\n          });\n        })\n      });\n    }\n\n    /**\n     * Submit handler\n     * @method onSubmit\n     * @param {object} event Event object.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      var data = {\n        entries: []\n      };\n      event.preventDefault();\n      if (this.props.inherit !== this.state.inherit) {\n        data.inherit = this.state.inherit;\n      }\n      for (var i = 0; i < this.props.entries.length; i += 1) {\n        if (!_isEqual(this.props.entries[i].roles, this.state.entries[i].roles)) {\n          data.entries.push({\n            id: this.state.entries[i].id,\n            type: this.state.entries[i].type,\n            roles: this.state.entries[i].roles\n          });\n        }\n      }\n      this.props.updateSharing(getBaseUrl(this.props.pathname), data);\n    }\n\n    /**\n     * Search handler\n     * @method onSearch\n     * @param {object} event Event object.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSearch\",\n    value: function onSearch(event) {\n      event.preventDefault();\n      this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n    }\n\n    /**\n     * On change search handler\n     * @method onChangeSearch\n     * @param {object} event Event object.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onChangeSearch\",\n    value: function onChangeSearch(event) {\n      this.setState({\n        search: event.target.value\n      });\n    }\n\n    /**\n     * On toggle inherit handler\n     * @method onToggleInherit\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onToggleInherit\",\n    value: function onToggleInherit() {\n      this.setState({\n        inherit: !this.state.inherit\n      });\n    }\n\n    /**\n     * On change handler\n     * @method onChange\n     * @param {object} event Event object\n     * @param {string} value Entry value\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onChange\",\n    value: function onChange(event, _ref) {\n      var value = _ref.value;\n      var _value$split = value.split(':'),\n        _value$split2 = _slicedToArray(_value$split, 2),\n        principal = _value$split2[0],\n        role = _value$split2[1];\n      this.setState({\n        entries: _map(this.state.entries, function (entry) {\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            roles: entry.id === principal ? _objectSpread(_objectSpread({}, entry.roles), {}, _defineProperty({}, role, !entry.roles[role])) : entry.roles\n          });\n        })\n      });\n    }\n\n    /**\n     * Cancel handler\n     * @method onCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.props.history.push(getBaseUrl(this.props.pathname));\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$available,\n        _this3 = this,\n        _this$state$entries;\n      return __jsx(Container, {\n        id: \"page-sharing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 7\n        }\n      }, __jsx(Helmet, {\n        title: this.props.intl.formatMessage(messages.sharing),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 9\n        }\n      }), __jsx(Segment.Group, {\n        raised: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 9\n        }\n      }, __jsx(Pluggable, {\n        name: \"sharing-component\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }\n      }), __jsx(Plug, {\n        pluggable: \"sharing-component\",\n        id: \"sharing-component-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }\n      }, __jsx(Segment, {\n        className: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Sharing for {title}\",\n        defaultMessage: \"Sharing for {title}\",\n        values: {\n          title: __jsx(\"q\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 34\n            }\n          }, this.props.title)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }\n      }))), __jsx(Plug, {\n        pluggable: \"sharing-component\",\n        id: \"sharing-component-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }\n      }, __jsx(Segment, {\n        secondary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"You can control who can view and edit your item using the list below.\",\n        defaultMessage: \"You can control who can view and edit your item using the list below.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }\n      }))), __jsx(Plug, {\n        pluggable: \"sharing-component\",\n        id: \"sharing-component-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }\n      }, __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }\n      }, __jsx(Form, {\n        onSubmit: this.onSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }\n      }, __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 17\n        }\n      }, __jsx(Input, {\n        name: \"SearchableText\",\n        action: {\n          icon: 'search'\n        },\n        placeholder: this.props.intl.formatMessage(messages.searchForUserOrGroup),\n        onChange: this.onChangeSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 19\n        }\n      }))))), __jsx(Plug, {\n        pluggable: \"sharing-component\",\n        id: \"sharing-component-form\",\n        dependencies: [this.state.entries, this.props.available_roles],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }\n      }, __jsx(Form, {\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }\n      }, __jsx(Table, {\n        celled: true,\n        padded: true,\n        striped: true,\n        attached: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 15\n        }\n      }, __jsx(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 17\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 19\n        }\n      }, __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Name\",\n        defaultMessage: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 23\n        }\n      })), (_this$props$available = this.props.available_roles) === null || _this$props$available === void 0 ? void 0 : _this$props$available.map(function (role) {\n        return __jsx(Table.HeaderCell, {\n          key: role.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 23\n          }\n        }, role.title);\n      }))), __jsx(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 17\n        }\n      }, (_this$state$entries = this.state.entries) === null || _this$state$entries === void 0 ? void 0 : _this$state$entries.map(function (entry) {\n        var _this3$props$availabl;\n        return __jsx(Table.Row, {\n          key: entry.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 21\n          }\n        }, __jsx(Table.Cell, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 23\n          }\n        }, __jsx(IconOld, {\n          name: entry.type === 'user' ? 'user' : 'users',\n          title: entry.type === 'user' ? _this3.props.intl.formatMessage(messages.user) : _this3.props.intl.formatMessage(messages.group),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }\n        }), ' ', entry.title, entry.login && \" (\".concat(entry.login, \")\")), (_this3$props$availabl = _this3.props.available_roles) === null || _this3$props$availabl === void 0 ? void 0 : _this3$props$availabl.map(function (role) {\n          return __jsx(Table.Cell, {\n            key: role.id,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 25\n            }\n          }, entry.roles[role.id] === 'global' && __jsx(IconOld, {\n            name: \"check circle outline\",\n            title: _this3.props.intl.formatMessage(messages.globalRole),\n            color: \"blue\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }\n          }), entry.roles[role.id] === 'acquired' && __jsx(IconOld, {\n            name: \"check circle outline\",\n            color: \"green\",\n            title: _this3.props.intl.formatMessage(messages.inheritedValue),\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 29\n            }\n          }), typeof entry.roles[role.id] === 'boolean' && __jsx(Checkbox, {\n            onChange: _this3.onChange,\n            value: \"\".concat(entry.id, \":\").concat(role.id),\n            checked: entry.roles[role.id],\n            disabled: entry.login === _this3.props.login,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 29\n            }\n          }));\n        }));\n      }))), __jsx(Segment, {\n        attached: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 15\n        }\n      }, __jsx(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 17\n        }\n      }, __jsx(Checkbox, {\n        checked: this.state.inherit,\n        onChange: this.onToggleInherit,\n        label: this.props.intl.formatMessage(messages.inherit),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 19\n        }\n      })), __jsx(\"p\", {\n        className: \"help\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 17\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.\",\n        defaultMessage: \"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.\",\n        values: {\n          inherited: __jsx(IconOld, {\n            name: \"check circle outline\",\n            color: \"green\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 25\n            }\n          }),\n          global: __jsx(IconOld, {\n            name: \"check circle outline\",\n            color: \"blue\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 25\n            }\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 19\n        }\n      }))), __jsx(Segment, {\n        className: \"actions\",\n        attached: true,\n        clearing: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 15\n        }\n      }, __jsx(Button, {\n        basic: true,\n        primary: true,\n        floated: \"right\",\n        type: \"submit\",\n        \"aria-label\": this.props.intl.formatMessage(messages.save),\n        title: this.props.intl.formatMessage(messages.save),\n        loading: this.props.updateRequest.loading,\n        onClick: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        className: \"circled\",\n        name: aheadSVG,\n        size: \"30px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 19\n        }\n      })), __jsx(Button, {\n        basic: true,\n        secondary: true,\n        \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n        title: this.props.intl.formatMessage(messages.cancel),\n        floated: \"right\",\n        onClick: this.onCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        className: \"circled\",\n        name: clearSVG,\n        size: \"30px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 19\n        }\n      })))))), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(Link, {\n          to: \"\".concat(getBaseUrl(this.props.pathname)),\n          className: \"item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }\n        }, __jsx(Icon, {\n          name: backSVG,\n          className: \"contents circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.back),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 19\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return SharingComponent;\n}(Component);\n_defineProperty(SharingComponent, \"propTypes\", {\n  updateSharing: PropTypes.func.isRequired,\n  getSharing: PropTypes.func.isRequired,\n  updateRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  pathname: PropTypes.string.isRequired,\n  entries: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    login: PropTypes.string,\n    roles: PropTypes.object,\n    title: PropTypes.string,\n    type: PropTypes.string\n  })).isRequired,\n  available_roles: PropTypes.arrayOf(PropTypes.object).isRequired,\n  inherit: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  login: PropTypes.string\n});\n_defineProperty(SharingComponent, \"defaultProps\", {\n  inherit: null,\n  login: ''\n});\nexport default compose(withRouter, injectIntl, connect(function (state, props) {\n  return {\n    entries: state.sharing.data.entries,\n    inherit: state.sharing.data.inherit,\n    available_roles: state.sharing.data.available_roles,\n    updateRequest: state.sharing.update,\n    pathname: props.location.pathname,\n    title: state.content.data.title,\n    login: state.userSession.token ? jwtDecode(state.userSession.token).sub : ''\n  };\n}, {\n  updateSharing: updateSharing,\n  getSharing: getSharing\n}))(SharingComponent);","map":{"version":3,"names":["React","Component","PropTypes","Plug","Pluggable","Helmet","connect","compose","Link","withRouter","Portal","Button","Checkbox","Container","Form","Icon","IconOld","Input","Segment","Table","jwtDecode","FormattedMessage","defineMessages","injectIntl","updateSharing","getSharing","getBaseUrl","Toolbar","Toast","toast","aheadSVG","clearSVG","backSVG","messages","searchForUserOrGroup","inherit","save","cancel","back","sharing","user","group","globalRole","inheritedValue","permissionsUpdated","permissionsUpdatedSuccessfully","SharingComponent","props","onCancel","bind","onChange","onChangeSearch","onSearch","onSubmit","onToggleInherit","state","search","entries","isClient","pathname","setState","nextProps","updateRequest","loading","loaded","success","intl","formatMessage","entry","values","id","roles","event","data","preventDefault","i","length","push","type","target","value","split","principal","role","history","title","icon","available_roles","map","login","inherited","global","document","getElementById","func","isRequired","shape","bool","string","arrayOf","object","update","location","content","userSession","token","sub"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Sharing/Sharing.jsx"],"sourcesContent":["/**\n * Sharing container.\n * @module components/manage/Sharing/Sharing\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Plug, Pluggable } from '@plone/volto/components/manage/Pluggable';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { find, isEqual, map } from 'lodash';\nimport { Portal } from 'react-portal';\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Form,\n  Icon as IconOld,\n  Input,\n  Segment,\n  Table,\n} from 'semantic-ui-react';\nimport jwtDecode from 'jwt-decode';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { updateSharing, getSharing } from '@plone/volto/actions';\nimport { getBaseUrl } from '@plone/volto/helpers';\nimport { Icon, Toolbar, Toast } from '@plone/volto/components';\nimport { toast } from 'react-toastify';\n\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  searchForUserOrGroup: {\n    id: 'Search for user or group',\n    defaultMessage: 'Search for user or group',\n  },\n  inherit: {\n    id: 'Inherit permissions from higher levels',\n    defaultMessage: 'Inherit permissions from higher levels',\n  },\n  save: {\n    id: 'Save',\n    defaultMessage: 'Save',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  sharing: {\n    id: 'Sharing',\n    defaultMessage: 'Sharing',\n  },\n  user: {\n    id: 'User',\n    defaultMessage: 'User',\n  },\n  group: {\n    id: 'Group',\n    defaultMessage: 'Group',\n  },\n  globalRole: {\n    id: 'Global role',\n    defaultMessage: 'Global role',\n  },\n  inheritedValue: {\n    id: 'Inherited value',\n    defaultMessage: 'Inherited value',\n  },\n  permissionsUpdated: {\n    id: 'Permissions updated',\n    defaultMessage: 'Permissions updated',\n  },\n  permissionsUpdatedSuccessfully: {\n    id: 'Permissions have been updated successfully',\n    defaultMessage: 'Permissions have been updated successfully',\n  },\n});\n\n/**\n * SharingComponent class.\n * @class SharingComponent\n * @extends Component\n */\nclass SharingComponent extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateSharing: PropTypes.func.isRequired,\n    getSharing: PropTypes.func.isRequired,\n    updateRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    entries: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        login: PropTypes.string,\n        roles: PropTypes.object,\n        title: PropTypes.string,\n        type: PropTypes.string,\n      }),\n    ).isRequired,\n    available_roles: PropTypes.arrayOf(PropTypes.object).isRequired,\n    inherit: PropTypes.bool,\n    title: PropTypes.string.isRequired,\n    login: PropTypes.string,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    inherit: null,\n    login: '',\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Sharing\n   */\n  constructor(props) {\n    super(props);\n    this.onCancel = this.onCancel.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onToggleInherit = this.onToggleInherit.bind(this);\n    this.state = {\n      search: '',\n      inherit: props.inherit,\n      entries: props.entries,\n      isClient: false,\n    };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n      toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.permissionsUpdated)}\n          content={this.props.intl.formatMessage(\n            messages.permissionsUpdatedSuccessfully,\n          )}\n        />,\n      );\n    }\n    this.setState({\n      inherit:\n        this.props.inherit === null ? nextProps.inherit : this.state.inherit,\n      entries: map(nextProps.entries, (entry) => {\n        const values = find(this.state.entries, { id: entry.id });\n        return {\n          ...entry,\n          roles: values ? values.roles : entry.roles,\n        };\n      }),\n    });\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSubmit(event) {\n    const data = { entries: [] };\n    event.preventDefault();\n    if (this.props.inherit !== this.state.inherit) {\n      data.inherit = this.state.inherit;\n    }\n    for (let i = 0; i < this.props.entries.length; i += 1) {\n      if (!isEqual(this.props.entries[i].roles, this.state.entries[i].roles)) {\n        data.entries.push({\n          id: this.state.entries[i].id,\n          type: this.state.entries[i].type,\n          roles: this.state.entries[i].roles,\n        });\n      }\n    }\n    this.props.updateSharing(getBaseUrl(this.props.pathname), data);\n  }\n\n  /**\n   * Search handler\n   * @method onSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onSearch(event) {\n    event.preventDefault();\n    this.props.getSharing(getBaseUrl(this.props.pathname), this.state.search);\n  }\n\n  /**\n   * On change search handler\n   * @method onChangeSearch\n   * @param {object} event Event object.\n   * @returns {undefined}\n   */\n  onChangeSearch(event) {\n    this.setState({\n      search: event.target.value,\n    });\n  }\n\n  /**\n   * On toggle inherit handler\n   * @method onToggleInherit\n   * @returns {undefined}\n   */\n  onToggleInherit() {\n    this.setState({\n      inherit: !this.state.inherit,\n    });\n  }\n\n  /**\n   * On change handler\n   * @method onChange\n   * @param {object} event Event object\n   * @param {string} value Entry value\n   * @returns {undefined}\n   */\n  onChange(event, { value }) {\n    const [principal, role] = value.split(':');\n    this.setState({\n      entries: map(this.state.entries, (entry) => ({\n        ...entry,\n        roles:\n          entry.id === principal\n            ? {\n                ...entry.roles,\n                [role]: !entry.roles[role],\n              }\n            : entry.roles,\n      })),\n    });\n  }\n\n  /**\n   * Cancel handler\n   * @method onCancel\n   * @returns {undefined}\n   */\n  onCancel() {\n    this.props.history.push(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Container id=\"page-sharing\">\n        <Helmet title={this.props.intl.formatMessage(messages.sharing)} />\n        <Segment.Group raised>\n          <Pluggable name=\"sharing-component\" />\n          <Plug pluggable=\"sharing-component\" id=\"sharing-component-title\">\n            <Segment className=\"primary\">\n              <FormattedMessage\n                id=\"Sharing for {title}\"\n                defaultMessage=\"Sharing for {title}\"\n                values={{ title: <q>{this.props.title}</q> }}\n              />\n            </Segment>\n          </Plug>\n          <Plug\n            pluggable=\"sharing-component\"\n            id=\"sharing-component-description\"\n          >\n            <Segment secondary>\n              <FormattedMessage\n                id=\"You can control who can view and edit your item using the list below.\"\n                defaultMessage=\"You can control who can view and edit your item using the list below.\"\n              />\n            </Segment>\n          </Plug>\n          <Plug pluggable=\"sharing-component\" id=\"sharing-component-search\">\n            <Segment>\n              <Form onSubmit={this.onSearch}>\n                <Form.Field>\n                  <Input\n                    name=\"SearchableText\"\n                    action={{ icon: 'search' }}\n                    placeholder={this.props.intl.formatMessage(\n                      messages.searchForUserOrGroup,\n                    )}\n                    onChange={this.onChangeSearch}\n                  />\n                </Form.Field>\n              </Form>\n            </Segment>\n          </Plug>\n          <Plug\n            pluggable=\"sharing-component\"\n            id=\"sharing-component-form\"\n            dependencies={[this.state.entries, this.props.available_roles]}\n          >\n            <Form onSubmit={this.onSubmit}>\n              <Table celled padded striped attached>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>\n                      <FormattedMessage id=\"Name\" defaultMessage=\"Name\" />\n                    </Table.HeaderCell>\n                    {this.props.available_roles?.map((role) => (\n                      <Table.HeaderCell key={role.id}>\n                        {role.title}\n                      </Table.HeaderCell>\n                    ))}\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {this.state.entries?.map((entry) => (\n                    <Table.Row key={entry.id}>\n                      <Table.Cell>\n                        <IconOld\n                          name={entry.type === 'user' ? 'user' : 'users'}\n                          title={\n                            entry.type === 'user'\n                              ? this.props.intl.formatMessage(messages.user)\n                              : this.props.intl.formatMessage(messages.group)\n                          }\n                        />{' '}\n                        {entry.title}\n                        {entry.login && ` (${entry.login})`}\n                      </Table.Cell>\n                      {this.props.available_roles?.map((role) => (\n                        <Table.Cell key={role.id}>\n                          {entry.roles[role.id] === 'global' && (\n                            <IconOld\n                              name=\"check circle outline\"\n                              title={this.props.intl.formatMessage(\n                                messages.globalRole,\n                              )}\n                              color=\"blue\"\n                            />\n                          )}\n                          {entry.roles[role.id] === 'acquired' && (\n                            <IconOld\n                              name=\"check circle outline\"\n                              color=\"green\"\n                              title={this.props.intl.formatMessage(\n                                messages.inheritedValue,\n                              )}\n                            />\n                          )}\n                          {typeof entry.roles[role.id] === 'boolean' && (\n                            <Checkbox\n                              onChange={this.onChange}\n                              value={`${entry.id}:${role.id}`}\n                              checked={entry.roles[role.id]}\n                              disabled={entry.login === this.props.login}\n                            />\n                          )}\n                        </Table.Cell>\n                      ))}\n                    </Table.Row>\n                  ))}\n                </Table.Body>\n              </Table>\n              <Segment attached>\n                <Form.Field>\n                  <Checkbox\n                    checked={this.state.inherit}\n                    onChange={this.onToggleInherit}\n                    label={this.props.intl.formatMessage(messages.inherit)}\n                  />\n                </Form.Field>\n                <p className=\"help\">\n                  <FormattedMessage\n                    id=\"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.\"\n                    defaultMessage=\"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.\"\n                    values={{\n                      inherited: (\n                        <IconOld name=\"check circle outline\" color=\"green\" />\n                      ),\n                      global: (\n                        <IconOld name=\"check circle outline\" color=\"blue\" />\n                      ),\n                    }}\n                  />\n                </p>\n              </Segment>\n              <Segment className=\"actions\" attached clearing>\n                <Button\n                  basic\n                  primary\n                  floated=\"right\"\n                  type=\"submit\"\n                  aria-label={this.props.intl.formatMessage(messages.save)}\n                  title={this.props.intl.formatMessage(messages.save)}\n                  loading={this.props.updateRequest.loading}\n                  onClick={this.onSubmit}\n                >\n                  <Icon className=\"circled\" name={aheadSVG} size=\"30px\" />\n                </Button>\n                <Button\n                  basic\n                  secondary\n                  aria-label={this.props.intl.formatMessage(messages.cancel)}\n                  title={this.props.intl.formatMessage(messages.cancel)}\n                  floated=\"right\"\n                  onClick={this.onCancel}\n                >\n                  <Icon className=\"circled\" name={clearSVG} size=\"30px\" />\n                </Button>\n              </Segment>\n            </Form>\n          </Plug>\n        </Segment.Group>\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <Link\n                  to={`${getBaseUrl(this.props.pathname)}`}\n                  className=\"item\"\n                >\n                  <Icon\n                    name={backSVG}\n                    className=\"contents circled\"\n                    size=\"30px\"\n                    title={this.props.intl.formatMessage(messages.back)}\n                  />\n                </Link>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      entries: state.sharing.data.entries,\n      inherit: state.sharing.data.inherit,\n      available_roles: state.sharing.data.available_roles,\n      updateRequest: state.sharing.update,\n      pathname: props.location.pathname,\n      title: state.content.data.title,\n      login: state.userSession.token\n        ? jwtDecode(state.userSession.token).sub\n        : '',\n    }),\n    { updateSharing, getSharing },\n  ),\n)(SharingComponent);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Search for user or group","defaultMessage":"Search for user or group"},{"id":"Inherit permissions from higher levels","defaultMessage":"Inherit permissions from higher levels"},{"id":"Save","defaultMessage":"Save"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Back","defaultMessage":"Back"},{"id":"Sharing","defaultMessage":"Sharing"},{"id":"User","defaultMessage":"User"},{"id":"Group","defaultMessage":"Group"},{"id":"Global role","defaultMessage":"Global role"},{"id":"Inherited value","defaultMessage":"Inherited value"},{"id":"Permissions updated","defaultMessage":"Permissions updated"},{"id":"Permissions have been updated successfully","defaultMessage":"Permissions have been updated successfully"},{"id":"Sharing for {title}","defaultMessage":"Sharing for {title}"},{"id":"You can control who can view and edit your item using the list below.","defaultMessage":"You can control who can view and edit your item using the list below."},{"id":"Name","defaultMessage":"Name"},{"id":"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator.","defaultMessage":"By default, permissions from the container of this item are inherited. If you disable this, only the explicitly defined sharing permissions will be valid. In the overview, the symbol {inherited} indicates an inherited value. Similarly, the symbol {global} indicates a global role, which is managed by the site administrator."}]}},"sourceType":"module","externalDependencies":[]}