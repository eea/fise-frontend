{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/**\n * Geolocation reducer.\n * @module reducers/geolocation/geolocation\n */\nimport { GET_GEONAMES, GET_GEODATA } from '@eeacms/volto-widget-geolocation/actionTypes';\nvar initialState = {\n  get: {\n    loaded: false,\n    loading: false,\n    error: null\n  },\n  api: null,\n  data: null,\n  subrequests: {}\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Geolocation reducer.\n * @function content\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function geolocation() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var result = action.result;\n  switch (action.type) {\n    case \"\".concat(GET_GEONAMES, \"_PENDING\"):\n    case \"\".concat(GET_GEODATA, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        api: null\n      }, getRequestKey(action.type), {\n        loading: true,\n        loaded: false,\n        error: null\n      }));\n    case \"\".concat(GET_GEONAMES, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        api: _objectSpread({}, result)\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: true,\n        error: null\n      }));\n    case \"\".concat(GET_GEODATA, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        data: _objectSpread({}, result)\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: true,\n        error: null\n      }));\n    case \"\".concat(GET_GEONAMES, \"_FAIL\"):\n    case \"\".concat(GET_GEODATA, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        api: null,\n        data: null\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: false,\n        error: action.error\n      }));\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_GEONAMES","GET_GEODATA","initialState","get","loaded","loading","error","api","data","subrequests","getRequestKey","actionType","split","toLowerCase","geolocation","state","action","result","type"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-widget-geolocation/src/reducers/geolocation.js"],"sourcesContent":["/**\n * Geolocation reducer.\n * @module reducers/geolocation/geolocation\n */\nimport {\n  GET_GEONAMES,\n  GET_GEODATA,\n} from '@eeacms/volto-widget-geolocation/actionTypes';\n\nconst initialState = {\n  get: {\n    loaded: false,\n    loading: false,\n    error: null,\n  },\n  api: null,\n  data: null,\n  subrequests: {},\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Geolocation reducer.\n * @function content\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function geolocation(state = initialState, action = {}) {\n  let { result } = action;\n  switch (action.type) {\n    case `${GET_GEONAMES}_PENDING`:\n    case `${GET_GEODATA}_PENDING`:\n      return {\n        ...state,\n        api: null,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_GEONAMES}_SUCCESS`:\n      return {\n        ...state,\n        api: { ...result },\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${GET_GEODATA}_SUCCESS`:\n      return {\n        ...state,\n        data: { ...result },\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${GET_GEONAMES}_FAIL`:\n    case `${GET_GEODATA}_FAIL`:\n      return {\n        ...state,\n        api: null,\n        data: null,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,SACEA,YAAY,EACZC,WAAW,QACN,8CAA8C;AAErD,IAAMC,YAAY,GAAG;EACnBC,GAAG,EAAE;IACHC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,GAAG,EAAE,IAAI;EACTC,IAAI,EAAE,IAAI;EACVC,WAAW,EAAE,CAAC;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAa,CAACC,UAAU,EAAE;EACjC,OAAOA,UAAU,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,WAAW,GAAoC;EAAA,IAAnCC,KAAK,uEAAGb,YAAY;EAAA,IAAEc,MAAM,uEAAG,CAAC,CAAC;EACnE,IAAMC,MAAM,GAAKD,MAAM,CAAjBC,MAAM;EACZ,QAAQD,MAAM,CAACE,IAAI;IACjB,eAAQlB,YAAY;IACpB,eAAQC,WAAW;MACjB,uCACKc,KAAK;QACRR,GAAG,EAAE;MAAI,GACRG,aAAa,CAACM,MAAM,CAACE,IAAI,CAAC,EAAG;QAC5Bb,OAAO,EAAE,IAAI;QACbD,MAAM,EAAE,KAAK;QACbE,KAAK,EAAE;MACT,CAAC;IAEL,eAAQN,YAAY;MAClB,uCACKe,KAAK;QACRR,GAAG,oBAAOU,MAAM;MAAE,GACjBP,aAAa,CAACM,MAAM,CAACE,IAAI,CAAC,EAAG;QAC5Bb,OAAO,EAAE,KAAK;QACdD,MAAM,EAAE,IAAI;QACZE,KAAK,EAAE;MACT,CAAC;IAEL,eAAQL,WAAW;MACjB,uCACKc,KAAK;QACRP,IAAI,oBAAOS,MAAM;MAAE,GAClBP,aAAa,CAACM,MAAM,CAACE,IAAI,CAAC,EAAG;QAC5Bb,OAAO,EAAE,KAAK;QACdD,MAAM,EAAE,IAAI;QACZE,KAAK,EAAE;MACT,CAAC;IAEL,eAAQN,YAAY;IACpB,eAAQC,WAAW;MACjB,uCACKc,KAAK;QACRR,GAAG,EAAE,IAAI;QACTC,IAAI,EAAE;MAAI,GACTE,aAAa,CAACM,MAAM,CAACE,IAAI,CAAC,EAAG;QAC5Bb,OAAO,EAAE,KAAK;QACdD,MAAM,EAAE,KAAK;QACbE,KAAK,EAAEU,MAAM,CAACV;MAChB,CAAC;IAEL;MACE,OAAOS,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}