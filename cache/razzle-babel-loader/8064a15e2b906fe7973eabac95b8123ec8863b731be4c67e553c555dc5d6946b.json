{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react'; // , useState\nimport { useSlate } from 'slate-react';\n\n/**\n * A component that can lift the editor to higher level\n *\n * Use like:\n * <SlateEditor ...><EditorReference onHasEditor=((editor) =>\n * this.setState({editor}) /></SlateEditor>\n *\n * With this you have access to the Slate editor \"out of tree\".\n */\n\nvar EditorReference = function EditorReference(_ref) {\n  _s();\n  var onHasEditor = _ref.onHasEditor;\n  var editor = useSlate();\n  React.useEffect(function () {\n    onHasEditor(editor);\n  }, [onHasEditor, editor]);\n  return null;\n};\n_s(EditorReference, \"JQETyOoJbF9SbL8dOSYWUc6SGeM=\", false, function () {\n  return [useSlate];\n});\n_c = EditorReference;\nexport default EditorReference;\nvar _c;\n$RefreshReg$(_c, \"EditorReference\");","map":{"version":3,"names":["React","useSlate","EditorReference","onHasEditor","editor","useEffect"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/packages/volto-slate/src/editor/EditorReference.jsx"],"sourcesContent":["import React from 'react'; // , useState\nimport { useSlate } from 'slate-react';\n\n/**\n * A component that can lift the editor to higher level\n *\n * Use like:\n * <SlateEditor ...><EditorReference onHasEditor=((editor) =>\n * this.setState({editor}) /></SlateEditor>\n *\n * With this you have access to the Slate editor \"out of tree\".\n */\n\nconst EditorReference = ({ onHasEditor }) => {\n  const editor = useSlate();\n  React.useEffect(() => {\n    onHasEditor(editor);\n  }, [onHasEditor, editor]);\n  return null;\n};\n\nexport default EditorReference;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,SAASC,QAAQ,QAAQ,aAAa;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAe,OAAwB;EAAA;EAAA,IAAlBC,WAAW,QAAXA,WAAW;EACpC,IAAMC,MAAM,GAAGH,QAAQ,EAAE;EACzBD,KAAK,CAACK,SAAS,CAAC,YAAM;IACpBF,WAAW,CAACC,MAAM,CAAC;EACrB,CAAC,EAAE,CAACD,WAAW,EAAEC,MAAM,CAAC,CAAC;EACzB,OAAO,IAAI;AACb,CAAC;AAAC,GANIF,eAAe;EAAA,QACJD,QAAQ;AAAA;AAAA,KADnBC,eAAe;AAQrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}