{"ast":null,"code":"import _regeneratorRuntime from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/* eslint-disable no-throw-literal */\nimport { getBaseUrl } from '@plone/volto/helpers';\nvar setLegendColumns = function setLegendColumns(legendsNo, device) {\n  switch (device) {\n    case 'widescreen':\n      return legendsNo ? legendsNo : 1;\n    case 'large':\n      return legendsNo ? legendsNo : 1;\n    case 'computer':\n      return legendsNo ? legendsNo : 1;\n    case 'tablet':\n      return 1;\n    case 'mobile':\n      return 1;\n    default:\n      return 1;\n  }\n};\nvar fetchArcGISData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(url) {\n    var res, error, data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(getBaseUrl(''), \"/cors-proxy/\").concat(url, \"?f=json\"));\n          case 2:\n            res = _context.sent;\n            if (!(res.status !== 200)) {\n              _context.next = 8;\n              break;\n            }\n            _context.next = 6;\n            return res.json();\n          case 6:\n            error = _context.sent;\n            throw {\n              message: error.message,\n              status: error.cod\n            };\n          case 8:\n            _context.next = 10;\n            return res.json();\n          case 10:\n            data = _context.sent;\n            if (!(data.error && data.error.code === 400)) {\n              _context.next = 13;\n              break;\n            }\n            throw {\n              message: data.error.message.message,\n              status: data.status\n            };\n          case 13:\n            return _context.abrupt(\"return\", data);\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function fetchArcGISData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport { setLegendColumns, fetchArcGISData };","map":{"version":3,"names":["getBaseUrl","setLegendColumns","legendsNo","device","fetchArcGISData","url","fetch","res","status","json","error","message","cod","data","code"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-eea-map/src/utils.js"],"sourcesContent":["/* eslint-disable no-throw-literal */\nimport { getBaseUrl } from '@plone/volto/helpers';\nconst setLegendColumns = (legendsNo, device) => {\n  switch (device) {\n    case 'widescreen':\n      return legendsNo ? legendsNo : 1;\n    case 'large':\n      return legendsNo ? legendsNo : 1;\n    case 'computer':\n      return legendsNo ? legendsNo : 1;\n    case 'tablet':\n      return 1;\n    case 'mobile':\n      return 1;\n    default:\n      return 1;\n  }\n};\n\nconst fetchArcGISData = async (url) => {\n  const res = await fetch(`${getBaseUrl('')}/cors-proxy/${url}?f=json`);\n  if (res.status !== 200) {\n    const error = await res.json();\n    throw { message: error.message, status: error.cod };\n  }\n  const data = await res.json();\n  if (data.error && data.error.code === 400) {\n    throw { message: data.error.message.message, status: data.status };\n  }\n  return data;\n};\n\nexport { setLegendColumns, fetchArcGISData };\n"],"mappings":";;AAAA;AACA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,SAAS,EAAEC,MAAM,EAAK;EAC9C,QAAQA,MAAM;IACZ,KAAK,YAAY;MACf,OAAOD,SAAS,GAAGA,SAAS,GAAG,CAAC;IAClC,KAAK,OAAO;MACV,OAAOA,SAAS,GAAGA,SAAS,GAAG,CAAC;IAClC,KAAK,UAAU;MACb,OAAOA,SAAS,GAAGA,SAAS,GAAG,CAAC;IAClC,KAAK,QAAQ;MACX,OAAO,CAAC;IACV,KAAK,QAAQ;MACX,OAAO,CAAC;IACV;MACE,OAAO,CAAC;EAAC;AAEf,CAAC;AAED,IAAME,eAAe;EAAA,sEAAG,iBAAOC,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACdC,KAAK,WAAIN,UAAU,CAAC,EAAE,CAAC,yBAAeK,GAAG,aAAU;UAAA;YAA/DE,GAAG;YAAA,MACLA,GAAG,CAACC,MAAM,KAAK,GAAG;cAAA;cAAA;YAAA;YAAA;YAAA,OACAD,GAAG,CAACE,IAAI,EAAE;UAAA;YAAxBC,KAAK;YAAA,MACL;cAAEC,OAAO,EAAED,KAAK,CAACC,OAAO;cAAEH,MAAM,EAAEE,KAAK,CAACE;YAAI,CAAC;UAAA;YAAA;YAAA,OAElCL,GAAG,CAACE,IAAI,EAAE;UAAA;YAAvBI,IAAI;YAAA,MACNA,IAAI,CAACH,KAAK,IAAIG,IAAI,CAACH,KAAK,CAACI,IAAI,KAAK,GAAG;cAAA;cAAA;YAAA;YAAA,MACjC;cAAEH,OAAO,EAAEE,IAAI,CAACH,KAAK,CAACC,OAAO,CAACA,OAAO;cAAEH,MAAM,EAAEK,IAAI,CAACL;YAAO,CAAC;UAAA;YAAA,iCAE7DK,IAAI;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACZ;EAAA,gBAXKT,eAAe;IAAA;EAAA;AAAA,GAWpB;AAED,SAASH,gBAAgB,EAAEG,eAAe"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}