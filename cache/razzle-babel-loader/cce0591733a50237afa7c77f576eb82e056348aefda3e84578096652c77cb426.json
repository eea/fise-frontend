{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport EmbedMapView from './components/Blocks/EmbedEEAMap/View';\nimport EmbedMapEdit from './components/Blocks/EmbedEEAMap/Edit';\nimport world from '@plone/volto/icons/world.svg';\nimport DataQueryWidget from './components/widgets/DataQueryWidget';\nimport LayerSelectWidget from './components/widgets/LayerSelectWidget';\nimport MapEditorWidget from './components/widgets/MapEditorWidget';\nimport ObjectTypesWidget from './components/widgets/ObjectTypesWidget';\nimport VisualizationEditorWidget from './components/visualization/VisualizationEditorWidget';\nimport VisualizationView from './components/visualization/VisualizationView';\nimport { data_visualizations } from './middlewares';\nimport * as addonReducers from './reducers';\nexport default (config => {\n  config.settings.allowed_cors_destinations = [...(config.settings.allowed_cors_destinations || []), 'land.discomap.eea.europa.eu', 'marine.discomap.eea.europa.eu', 'climate.discomap.eea.europa.eu', 'image.discomap.eea.europa.eu', 'ldp.discomap.eea.europa.eu', 'bio.discomap.eea.europa.eu', 'air.discomap.eea.europa.eu', 'maratlas.discomap.eea.europa.eu', 'forest.discomap.eea.europa.eu', 'water.discomap.eea.europa.eu', 'noise.discomap.eea.europa.eu', 'copernicus.discomap.eea.europa.eu'];\n\n  // EEA MAP BLOCK\n\n  // config.blocks.blocksConfig.eea_map_block = {\n  //   id: 'eea_map_block', //  The name (id) of the block\n  //   title: 'EEA Map', //  The display name of the block\n  //   icon: world, //  The icon used in the block chooser\n  //   group: 'common', //The group (blocks can be grouped, displayed in the chooser)\n  //   view: EEAMapView, //The view mode component\n  //   edit: EEAMapEdit, // The edit mode component\n  //   sidebarTab: 1, // The sidebar tab you want to be selected when selecting the block\n  //   security: {\n  //     addPermission: [], //  Future proof (not implemented yet) add user permission role(s)\n  //     view: [], //Future proof (not implemented yet) view user role(s)\n  //   },\n  //   variations: [\n  //     {\n  //       id: 'default',\n  //       title: 'EEA Map (default)',\n  //       isDefault: true,\n  //       view: EEAMapView,\n  //     },\n  //     {\n  //       id: 'extra',\n  //       title: 'Extra variation (expand if needed)',\n  //       isDefault: true,\n  //       view: EEAMapView,\n  //     },\n  //   ],\n  // };\n\n  config.blocks.blocksConfig.embed_eea_map_block = {\n    id: 'embed_eea_map_block',\n    // The name (id) of the block\n    title: 'Embed EEA Map',\n    // The display name of the block\n    icon: world,\n    // The icon used in the block chooser\n    group: 'common',\n    // The group (blocks can be grouped, displayed in the chooser)\n    view: EmbedMapView,\n    // The view mode component\n    edit: EmbedMapEdit,\n    // The edit mode component\n    sidebarTab: 1,\n    // The sidebar tab you want to be selected when selecting the block\n    security: {\n      addPermission: [],\n      // Future proof (not implemented yet) add user permission role(s)\n      view: [] // Future proof (not implemented yet) view user role(s)\n    },\n\n    variations: [{\n      id: 'default',\n      title: 'EEA Map (default)',\n      isDefault: true,\n      view: EmbedMapView\n    }, {\n      id: 'extra',\n      title: 'Extra variation (expand if needed)',\n      isDefault: true,\n      view: EmbedMapView\n    }]\n  };\n  config.widgets.widget.map_edit_widget = MapEditorWidget;\n  config.widgets.widget.map_layers_widget = LayerSelectWidget;\n  config.widgets.widget.object_types_widget = ObjectTypesWidget;\n  config.widgets.widget.data_query_widget = DataQueryWidget;\n\n  //map editor for the visualization(content-type)\n  config.widgets.id.map_visualization_data = VisualizationEditorWidget;\n  //map viewer for the visualization(content-type)\n  config.views.contentTypesViews.map_visualization = VisualizationView;\n  config.settings.storeExtenders = [...(config.settings.storeExtenders || []), data_visualizations];\n  config.addonReducers = _objectSpread(_objectSpread({}, config.addonReducers), addonReducers);\n  return config;\n});","map":{"version":3,"names":["EmbedMapView","EmbedMapEdit","world","DataQueryWidget","LayerSelectWidget","MapEditorWidget","ObjectTypesWidget","VisualizationEditorWidget","VisualizationView","data_visualizations","addonReducers","config","settings","allowed_cors_destinations","blocks","blocksConfig","embed_eea_map_block","id","title","icon","group","view","edit","sidebarTab","security","addPermission","variations","isDefault","widgets","widget","map_edit_widget","map_layers_widget","object_types_widget","data_query_widget","map_visualization_data","views","contentTypesViews","map_visualization","storeExtenders"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-eea-map/src/index.js"],"sourcesContent":["import EmbedMapView from './components/Blocks/EmbedEEAMap/View';\nimport EmbedMapEdit from './components/Blocks/EmbedEEAMap/Edit';\n\nimport world from '@plone/volto/icons/world.svg';\nimport DataQueryWidget from './components/widgets/DataQueryWidget';\nimport LayerSelectWidget from './components/widgets/LayerSelectWidget';\nimport MapEditorWidget from './components/widgets/MapEditorWidget';\nimport ObjectTypesWidget from './components/widgets/ObjectTypesWidget';\nimport VisualizationEditorWidget from './components/visualization/VisualizationEditorWidget';\nimport VisualizationView from './components/visualization/VisualizationView';\n\nimport { data_visualizations } from './middlewares';\nimport * as addonReducers from './reducers';\n\nexport default (config) => {\n  config.settings.allowed_cors_destinations = [\n    ...(config.settings.allowed_cors_destinations || []),\n    'land.discomap.eea.europa.eu',\n    'marine.discomap.eea.europa.eu',\n    'climate.discomap.eea.europa.eu',\n    'image.discomap.eea.europa.eu',\n    'ldp.discomap.eea.europa.eu',\n    'bio.discomap.eea.europa.eu',\n    'air.discomap.eea.europa.eu',\n    'maratlas.discomap.eea.europa.eu',\n    'forest.discomap.eea.europa.eu',\n    'water.discomap.eea.europa.eu',\n    'noise.discomap.eea.europa.eu',\n    'copernicus.discomap.eea.europa.eu',\n  ];\n\n  // EEA MAP BLOCK\n\n  // config.blocks.blocksConfig.eea_map_block = {\n  //   id: 'eea_map_block', //  The name (id) of the block\n  //   title: 'EEA Map', //  The display name of the block\n  //   icon: world, //  The icon used in the block chooser\n  //   group: 'common', //The group (blocks can be grouped, displayed in the chooser)\n  //   view: EEAMapView, //The view mode component\n  //   edit: EEAMapEdit, // The edit mode component\n  //   sidebarTab: 1, // The sidebar tab you want to be selected when selecting the block\n  //   security: {\n  //     addPermission: [], //  Future proof (not implemented yet) add user permission role(s)\n  //     view: [], //Future proof (not implemented yet) view user role(s)\n  //   },\n  //   variations: [\n  //     {\n  //       id: 'default',\n  //       title: 'EEA Map (default)',\n  //       isDefault: true,\n  //       view: EEAMapView,\n  //     },\n  //     {\n  //       id: 'extra',\n  //       title: 'Extra variation (expand if needed)',\n  //       isDefault: true,\n  //       view: EEAMapView,\n  //     },\n  //   ],\n  // };\n\n  config.blocks.blocksConfig.embed_eea_map_block = {\n    id: 'embed_eea_map_block', // The name (id) of the block\n    title: 'Embed EEA Map', // The display name of the block\n    icon: world, // The icon used in the block chooser\n    group: 'common', // The group (blocks can be grouped, displayed in the chooser)\n    view: EmbedMapView, // The view mode component\n    edit: EmbedMapEdit, // The edit mode component\n    sidebarTab: 1, // The sidebar tab you want to be selected when selecting the block\n    security: {\n      addPermission: [], // Future proof (not implemented yet) add user permission role(s)\n      view: [], // Future proof (not implemented yet) view user role(s)\n    },\n    variations: [\n      {\n        id: 'default',\n        title: 'EEA Map (default)',\n        isDefault: true,\n        view: EmbedMapView,\n      },\n      {\n        id: 'extra',\n        title: 'Extra variation (expand if needed)',\n        isDefault: true,\n        view: EmbedMapView,\n      },\n    ],\n  };\n\n  config.widgets.widget.map_edit_widget = MapEditorWidget;\n  config.widgets.widget.map_layers_widget = LayerSelectWidget;\n  config.widgets.widget.object_types_widget = ObjectTypesWidget;\n  config.widgets.widget.data_query_widget = DataQueryWidget;\n\n  //map editor for the visualization(content-type)\n  config.widgets.id.map_visualization_data = VisualizationEditorWidget;\n  //map viewer for the visualization(content-type)\n  config.views.contentTypesViews.map_visualization = VisualizationView;\n\n  config.settings.storeExtenders = [\n    ...(config.settings.storeExtenders || []),\n    data_visualizations,\n  ];\n\n  config.addonReducers = {\n    ...config.addonReducers,\n    ...addonReducers,\n  };\n\n  return config;\n};\n"],"mappings":";;;AAAA,OAAOA,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,YAAY,MAAM,sCAAsC;AAE/D,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,eAAe,MAAM,sCAAsC;AAClE,OAAOC,iBAAiB,MAAM,wCAAwC;AACtE,OAAOC,eAAe,MAAM,sCAAsC;AAClE,OAAOC,iBAAiB,MAAM,wCAAwC;AACtE,OAAOC,yBAAyB,MAAM,sDAAsD;AAC5F,OAAOC,iBAAiB,MAAM,8CAA8C;AAE5E,SAASC,mBAAmB,QAAQ,eAAe;AACnD,OAAO,KAAKC,aAAa,MAAM,YAAY;AAE3C,gBAAgBC,MAAM,IAAK;EACzBA,MAAM,CAACC,QAAQ,CAACC,yBAAyB,GAAG,CAC1C,IAAIF,MAAM,CAACC,QAAQ,CAACC,yBAAyB,IAAI,EAAE,CAAC,EACpD,6BAA6B,EAC7B,+BAA+B,EAC/B,gCAAgC,EAChC,8BAA8B,EAC9B,4BAA4B,EAC5B,4BAA4B,EAC5B,4BAA4B,EAC5B,iCAAiC,EACjC,+BAA+B,EAC/B,8BAA8B,EAC9B,8BAA8B,EAC9B,mCAAmC,CACpC;;EAED;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAF,MAAM,CAACG,MAAM,CAACC,YAAY,CAACC,mBAAmB,GAAG;IAC/CC,EAAE,EAAE,qBAAqB;IAAE;IAC3BC,KAAK,EAAE,eAAe;IAAE;IACxBC,IAAI,EAAEjB,KAAK;IAAE;IACbkB,KAAK,EAAE,QAAQ;IAAE;IACjBC,IAAI,EAAErB,YAAY;IAAE;IACpBsB,IAAI,EAAErB,YAAY;IAAE;IACpBsB,UAAU,EAAE,CAAC;IAAE;IACfC,QAAQ,EAAE;MACRC,aAAa,EAAE,EAAE;MAAE;MACnBJ,IAAI,EAAE,EAAE,CAAE;IACZ,CAAC;;IACDK,UAAU,EAAE,CACV;MACET,EAAE,EAAE,SAAS;MACbC,KAAK,EAAE,mBAAmB;MAC1BS,SAAS,EAAE,IAAI;MACfN,IAAI,EAAErB;IACR,CAAC,EACD;MACEiB,EAAE,EAAE,OAAO;MACXC,KAAK,EAAE,oCAAoC;MAC3CS,SAAS,EAAE,IAAI;MACfN,IAAI,EAAErB;IACR,CAAC;EAEL,CAAC;EAEDW,MAAM,CAACiB,OAAO,CAACC,MAAM,CAACC,eAAe,GAAGzB,eAAe;EACvDM,MAAM,CAACiB,OAAO,CAACC,MAAM,CAACE,iBAAiB,GAAG3B,iBAAiB;EAC3DO,MAAM,CAACiB,OAAO,CAACC,MAAM,CAACG,mBAAmB,GAAG1B,iBAAiB;EAC7DK,MAAM,CAACiB,OAAO,CAACC,MAAM,CAACI,iBAAiB,GAAG9B,eAAe;;EAEzD;EACAQ,MAAM,CAACiB,OAAO,CAACX,EAAE,CAACiB,sBAAsB,GAAG3B,yBAAyB;EACpE;EACAI,MAAM,CAACwB,KAAK,CAACC,iBAAiB,CAACC,iBAAiB,GAAG7B,iBAAiB;EAEpEG,MAAM,CAACC,QAAQ,CAAC0B,cAAc,GAAG,CAC/B,IAAI3B,MAAM,CAACC,QAAQ,CAAC0B,cAAc,IAAI,EAAE,CAAC,EACzC7B,mBAAmB,CACpB;EAEDE,MAAM,CAACD,aAAa,mCACfC,MAAM,CAACD,aAAa,GACpBA,aAAa,CACjB;EAED,OAAOC,MAAM;AACf,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}