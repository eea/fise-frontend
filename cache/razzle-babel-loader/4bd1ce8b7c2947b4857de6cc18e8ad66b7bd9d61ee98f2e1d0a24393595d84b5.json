{"ast":null,"code":"import _remove from \"lodash/remove\";\nimport _map from \"lodash/map\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Table/Edit.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Edit text block.\n * @module components/manage/Blocks/Title/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { Button, Segment, Table, Form } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport cx from 'classnames';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport Cell from '@plone/volto/components/manage/Blocks/Table/Cell';\nimport { Field, Icon } from '@plone/volto/components';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport rowBeforeSVG from '@plone/volto/icons/row-before.svg';\nimport rowAfterSVG from '@plone/volto/icons/row-after.svg';\nimport colBeforeSVG from '@plone/volto/icons/column-before.svg';\nimport colAfterSVG from '@plone/volto/icons/column-after.svg';\nimport rowDeleteSVG from '@plone/volto/icons/row-delete.svg';\nimport colDeleteSVG from '@plone/volto/icons/column-delete.svg';\nconst getId = () => Math.floor(Math.random() * Math.pow(2, 24)).toString(32);\nconst valueToDraft = value => ({\n  blocks: [{\n    data: {},\n    depth: 0,\n    entityRanges: [],\n    inlineStyleRanges: [],\n    key: getId(),\n    text: value,\n    type: 'unstyled'\n  }],\n  entityMap: {}\n});\nconst emptyCell = type => ({\n  key: getId(),\n  type: type || 'data',\n  value: valueToDraft('')\n});\nconst emptyRow = cells => ({\n  key: getId(),\n  cells: _map(cells, () => emptyCell())\n});\nconst initialTable = () => ({\n  fixed: true,\n  compact: false,\n  basic: false,\n  celled: true,\n  inverted: false,\n  striped: false,\n  rows: [{\n    key: getId(),\n    cells: [{\n      key: getId(),\n      type: 'header',\n      value: valueToDraft('')\n    }, {\n      key: getId(),\n      type: 'header',\n      value: valueToDraft('')\n    }]\n  }, {\n    key: getId(),\n    cells: [{\n      key: getId(),\n      type: 'data',\n      value: valueToDraft('')\n    }, {\n      key: getId(),\n      type: 'data',\n      value: valueToDraft('')\n    }]\n  }]\n});\nconst messages = defineMessages({\n  insertRowBefore: {\n    \"id\": \"Insert row before\",\n    \"defaultMessage\": \"Insert row before\"\n  },\n  insertRowAfter: {\n    \"id\": \"Insert row after\",\n    \"defaultMessage\": \"Insert row after\"\n  },\n  deleteRow: {\n    \"id\": \"Delete row\",\n    \"defaultMessage\": \"Delete row\"\n  },\n  insertColBefore: {\n    \"id\": \"Insert col before\",\n    \"defaultMessage\": \"Insert col before\"\n  },\n  insertColAfter: {\n    \"id\": \"Insert col after\",\n    \"defaultMessage\": \"Insert col after\"\n  },\n  deleteCol: {\n    \"id\": \"Delete col\",\n    \"defaultMessage\": \"Delete col\"\n  },\n  fixed: {\n    \"id\": \"Fixed width table cells\",\n    \"defaultMessage\": \"Fixed width columns\"\n  },\n  compact: {\n    \"id\": \"Make the table compact\",\n    \"defaultMessage\": \"Reduce cell padding\"\n  },\n  basic: {\n    \"id\": \"Reduce complexity\",\n    \"defaultMessage\": \"Minimalistic table design\"\n  },\n  celled: {\n    \"id\": \"Divide each row into separate cells\",\n    \"defaultMessage\": \"Add border to inner columns\"\n  },\n  striped: {\n    \"id\": \"Stripe alternate rows with color\",\n    \"defaultMessage\": \"Alternate row background color\"\n  },\n  headerCell: {\n    \"id\": \"Header cell\",\n    \"defaultMessage\": \"Header cell\"\n  }\n});\n\n/**\n * Edit text block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: {\n        row: 0,\n        cell: 0\n      },\n      isClient: false\n    };\n    this.onSelectCell = this.onSelectCell.bind(this);\n    this.onInsertRowBefore = this.onInsertRowBefore.bind(this);\n    this.onInsertRowAfter = this.onInsertRowAfter.bind(this);\n    this.onInsertColBefore = this.onInsertColBefore.bind(this);\n    this.onInsertColAfter = this.onInsertColAfter.bind(this);\n    this.onDeleteRow = this.onDeleteRow.bind(this);\n    this.onDeleteCol = this.onDeleteCol.bind(this);\n    this.onChangeCell = this.onChangeCell.bind(this);\n    this.toggleCellType = this.toggleCellType.bind(this);\n    this.toggleBool = this.toggleBool.bind(this);\n    this.toggleFixed = this.toggleFixed.bind(this);\n    this.toggleCompact = this.toggleCompact.bind(this);\n    this.toggleBasic = this.toggleBasic.bind(this);\n    this.toggleCelled = this.toggleCelled.bind(this);\n    this.toggleStriped = this.toggleStriped.bind(this);\n    const {\n      convertToRaw\n    } = props.draftJs;\n    this.convertToRaw = convertToRaw;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (!this.props.data.table) {\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        table: initialTable()\n      }));\n    }\n    this.setState({\n      isClient: true\n    });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!nextProps.data.table) {\n      this.props.onChangeBlock(nextProps.block, _objectSpread(_objectSpread({}, nextProps.data), {}, {\n        table: initialTable()\n      }));\n    }\n  }\n\n  /**\n   * Select cell handler\n   * @method onSelectCell\n   * @param {Number} row Row index.\n   * @param {Number} cell Cell index.\n   * @returns {undefined}\n   */\n  onSelectCell(row, cell) {\n    this.setState({\n      selected: {\n        row,\n        cell\n      }\n    });\n  }\n\n  /**\n   * Change cell handler\n   * @method onChangeCell\n   * @param {Number} row Row index.\n   * @param {Number} cell Cell index.\n   * @param {Object} editorState Editor state.\n   * @returns {undefined}\n   */\n  onChangeCell(row, cell, editorState) {\n    const table = _objectSpread({}, this.props.data.table);\n    table.rows[row].cells[cell].value = this.convertToRaw(editorState.getCurrentContent());\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table\n    }));\n  }\n\n  /**\n   * Toggle cell type\n   * @method toggleCellType\n   * @returns {undefined}\n   */\n  toggleCellType() {\n    const table = _objectSpread({}, this.props.data.table);\n    let type = table.rows[this.state.selected.row].cells[this.state.selected.cell].type;\n    table.rows[this.state.selected.row].cells[this.state.selected.cell].type = type === 'header' ? 'data' : 'header';\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table\n    }));\n  }\n\n  /**\n   * Insert row before handler\n   * @method onInsertRowBefore\n   * @returns {undefined}\n   */\n  onInsertRowBefore(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table: _objectSpread(_objectSpread({}, table), {}, {\n        rows: [...table.rows.slice(0, this.state.selected.row), emptyRow(table.rows[0].cells), ...table.rows.slice(this.state.selected.row)]\n      })\n    }));\n    this.setState({\n      selected: {\n        row: this.state.selected.row + 1,\n        cell: this.state.selected.cell\n      }\n    });\n  }\n\n  /**\n   * Insert row after handler\n   * @method onInsertRowAfter\n   * @returns {undefined}\n   */\n  onInsertRowAfter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table: _objectSpread(_objectSpread({}, table), {}, {\n        rows: [...table.rows.slice(0, this.state.selected.row + 1), emptyRow(table.rows[0].cells), ...table.rows.slice(this.state.selected.row + 1)]\n      })\n    }));\n  }\n\n  /**\n   * Insert col before handler\n   * @method onInsertColBefore\n   * @returns {undefined}\n   */\n  onInsertColBefore(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table: _objectSpread(_objectSpread({}, table), {}, {\n        rows: _map(table.rows, (row, index) => _objectSpread(_objectSpread({}, row), {}, {\n          cells: [...row.cells.slice(0, this.state.selected.cell), emptyCell(table.rows[index].cells[this.state.selected.cell].type), ...row.cells.slice(this.state.selected.cell)]\n        }))\n      })\n    }));\n    this.setState({\n      selected: {\n        row: this.state.selected.row,\n        cell: this.state.selected.cell + 1\n      }\n    });\n  }\n\n  /**\n   * Insert col after handler\n   * @method onInsertColAfter\n   * @returns {undefined}\n   */\n  onInsertColAfter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table: _objectSpread(_objectSpread({}, table), {}, {\n        rows: _map(table.rows, (row, index) => _objectSpread(_objectSpread({}, row), {}, {\n          cells: [...row.cells.slice(0, this.state.selected.cell + 1), emptyCell(table.rows[index].cells[this.state.selected.cell].type), ...row.cells.slice(this.state.selected.cell + 1)]\n        }))\n      })\n    }));\n  }\n\n  /**\n   * Delete col handler\n   * @method onDeleteCol\n   * @returns {undefined}\n   */\n  onDeleteCol(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    if (this.state.selected.cell === table.rows[0].cells.length - 1) {\n      this.setState({\n        selected: {\n          row: this.state.selected.row,\n          cell: this.state.selected.cell - 1\n        }\n      });\n    }\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table: _objectSpread(_objectSpread({}, table), {}, {\n        rows: _map(table.rows, row => _objectSpread(_objectSpread({}, row), {}, {\n          cells: _remove(row.cells, (cell, index) => index !== this.state.selected.cell)\n        }))\n      })\n    }));\n  }\n\n  /**\n   * Delete row handler\n   * @method onDeleteRow\n   * @returns {undefined}\n   */\n  onDeleteRow(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    if (this.state.selected.row === table.rows.length - 1) {\n      this.setState({\n        selected: {\n          row: this.state.selected.row - 1,\n          cell: this.state.selected.cell\n        }\n      });\n    }\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table: _objectSpread(_objectSpread({}, table), {}, {\n        rows: _remove(table.rows, (row, index) => index !== this.state.selected.row)\n      })\n    }));\n  }\n\n  /**\n   * Toggle bool\n   * @method toggleBool\n   * @param {string} value Value to toggle.\n   * @returns {undefined}\n   */\n  toggleBool(value) {\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n      table: _objectSpread(_objectSpread({}, table), {}, {\n        [value]: !table[value]\n      })\n    }));\n  }\n\n  /**\n   * Toggle fixed\n   * @method toggleFixed\n   * @returns {undefined}\n   */\n  toggleFixed() {\n    this.toggleBool('fixed');\n  }\n\n  /**\n   * Toggle compact\n   * @method toggleCompact\n   * @returns {undefined}\n   */\n  toggleCompact() {\n    this.toggleBool('compact');\n  }\n\n  /**\n   * Toggle basic\n   * @method toggleBasic\n   * @returns {undefined}\n   */\n  toggleBasic() {\n    this.toggleBool('basic');\n  }\n\n  /**\n   * Toggle celled\n   * @method toggleCelled\n   * @returns {undefined}\n   */\n  toggleCelled() {\n    this.toggleBool('celled');\n  }\n\n  /**\n   * Toggle striped\n   * @method toggleStriped\n   * @returns {undefined}\n   */\n  toggleStriped() {\n    this.toggleBool('striped');\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (!this.state.isClient) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 14\n        }\n      });\n    }\n    return __jsx(\"div\", {\n      className: cx('block table', {\n        selected: this.props.selected\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 7\n      }\n    }, this.props.selected && __jsx(\"div\", {\n      className: \"toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 11\n      }\n    }, __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      onClick: this.onInsertRowBefore,\n      title: this.props.intl.formatMessage(messages.insertRowBefore),\n      \"aria-label\": this.props.intl.formatMessage(messages.insertRowBefore),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: rowBeforeSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 17\n      }\n    }))), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      onClick: this.onInsertRowAfter,\n      title: this.props.intl.formatMessage(messages.insertRowAfter),\n      \"aria-label\": this.props.intl.formatMessage(messages.insertRowAfter),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: rowAfterSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 17\n      }\n    }))), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      onClick: this.onDeleteRow,\n      disabled: this.props.data.table && this.props.data.table.rows.length === 1,\n      title: this.props.intl.formatMessage(messages.deleteRow),\n      \"aria-label\": this.props.intl.formatMessage(messages.deleteRow),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: rowDeleteSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 17\n      }\n    }))), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      onClick: this.onInsertColBefore,\n      title: this.props.intl.formatMessage(messages.insertColBefore),\n      \"aria-label\": this.props.intl.formatMessage(messages.insertColBefore),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: colBeforeSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 17\n      }\n    }))), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      onClick: this.onInsertColAfter,\n      title: this.props.intl.formatMessage(messages.insertColAfter),\n      \"aria-label\": this.props.intl.formatMessage(messages.insertColAfter),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: colAfterSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 17\n      }\n    }))), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      onClick: this.onDeleteCol,\n      disabled: this.props.data.table && this.props.data.table.rows[0].cells.length === 1,\n      title: this.props.intl.formatMessage(messages.deleteCol),\n      \"aria-label\": this.props.intl.formatMessage(messages.deleteCol),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: colDeleteSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 17\n      }\n    })))), this.props.data.table && __jsx(Table, {\n      fixed: this.props.data.table.fixed,\n      compact: this.props.data.table.compact,\n      basic: this.props.data.table.basic ? 'very' : false,\n      celled: this.props.data.table.celled,\n      inverted: this.props.data.table.inverted,\n      striped: this.props.data.table.striped,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 11\n      }\n    }, __jsx(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 13\n      }\n    }, _map(this.props.data.table.rows, (row, rowIndex) => __jsx(Table.Row, {\n      key: row.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 17\n      }\n    }, _map(row.cells, (cell, cellIndex) => {\n      var _this$props$data;\n      return __jsx(Table.Cell, {\n        key: cell.key,\n        as: cell.type === 'header' ? 'th' : 'td',\n        className: rowIndex === this.state.selected.row && cellIndex === this.state.selected.cell && this.props.selected ? 'selected' : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 21\n        }\n      }, __jsx(Cell, {\n        editable: this.props.editable,\n        value: cell.value,\n        row: rowIndex,\n        cell: cellIndex,\n        onSelectCell: this.onSelectCell,\n        selected: rowIndex === this.state.selected.row && cellIndex === this.state.selected.cell,\n        isTableBlockSelected: this.props.selected,\n        onAddBlock: this.props.onAddBlock,\n        onSelectBlock: this.props.onSelectBlock,\n        onChange: this.onChangeCell,\n        index: this.props.index,\n        disableNewBlocks: (_this$props$data = this.props.data) === null || _this$props$data === void 0 ? void 0 : _this$props$data.disableNewBlocks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 23\n        }\n      }));\n    }))))), this.props.selected && this.state.isClient && __jsx(Portal, {\n      node: document.getElementById('sidebar-properties'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      method: \"post\",\n      onSubmit: event => {\n        event.preventDefault();\n        event.stopPropagation();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 13\n      }\n    }, __jsx(Segment, {\n      secondary: true,\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Table\",\n      defaultMessage: \"Table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 15\n      }\n    }, __jsx(Field, {\n      id: \"fixed\",\n      title: this.props.intl.formatMessage(messages.fixed),\n      type: \"boolean\",\n      value: this.props.data.table && this.props.data.table.fixed,\n      onChange: () => this.toggleFixed(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 17\n      }\n    }), __jsx(Field, {\n      id: \"celled\",\n      title: this.props.intl.formatMessage(messages.celled),\n      type: \"boolean\",\n      value: this.props.data.table && this.props.data.table.celled,\n      onChange: this.toggleCelled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 17\n      }\n    }), __jsx(Field, {\n      id: \"striped\",\n      title: this.props.intl.formatMessage(messages.striped),\n      type: \"boolean\",\n      value: this.props.data.table && this.props.data.table.striped,\n      onChange: this.toggleStriped,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 17\n      }\n    }), __jsx(Field, {\n      id: \"compact\",\n      title: this.props.intl.formatMessage(messages.compact),\n      type: \"boolean\",\n      value: this.props.data.table && this.props.data.table.compact,\n      onChange: () => this.toggleCompact(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 17\n      }\n    }), __jsx(Field, {\n      id: \"basic\",\n      title: this.props.intl.formatMessage(messages.basic),\n      type: \"boolean\",\n      value: this.props.data.table && this.props.data.table.basic,\n      onChange: this.toggleBasic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      secondary: true,\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Cell\",\n      defaultMessage: \"Cell\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      attached: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 15\n      }\n    }, __jsx(Field, {\n      id: \"celltype\",\n      title: this.props.intl.formatMessage(messages.headerCell),\n      type: \"boolean\",\n      value: this.props.data.table && this.props.data.table.rows[this.state.selected.row].cells[this.state.selected.cell].type === 'header',\n      onChange: this.toggleCellType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 17\n      }\n    })))));\n  }\n}\n_defineProperty(Edit, \"propTypes\", {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  detached: PropTypes.bool,\n  index: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  onAddBlock: PropTypes.func.isRequired,\n  onInsertBlock: PropTypes.func.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  onDeleteBlock: PropTypes.func.isRequired,\n  onMutateBlock: PropTypes.func.isRequired,\n  onFocusPreviousBlock: PropTypes.func.isRequired,\n  onFocusNextBlock: PropTypes.func.isRequired,\n  onSelectBlock: PropTypes.func.isRequired\n});\n_defineProperty(Edit, \"defaultProps\", {\n  detached: false\n});\nexport default compose(injectLazyLibs(['draftJs']), injectIntl)(Edit);","map":{"version":3,"names":["React","Component","PropTypes","compose","Button","Segment","Table","Form","Portal","cx","FormattedMessage","defineMessages","injectIntl","Cell","Field","Icon","injectLazyLibs","rowBeforeSVG","rowAfterSVG","colBeforeSVG","colAfterSVG","rowDeleteSVG","colDeleteSVG","getId","Math","floor","random","pow","toString","valueToDraft","value","blocks","data","depth","entityRanges","inlineStyleRanges","key","text","type","entityMap","emptyCell","emptyRow","cells","initialTable","fixed","compact","basic","celled","inverted","striped","rows","messages","insertRowBefore","insertRowAfter","deleteRow","insertColBefore","insertColAfter","deleteCol","headerCell","Edit","constructor","props","state","selected","row","cell","isClient","onSelectCell","bind","onInsertRowBefore","onInsertRowAfter","onInsertColBefore","onInsertColAfter","onDeleteRow","onDeleteCol","onChangeCell","toggleCellType","toggleBool","toggleFixed","toggleCompact","toggleBasic","toggleCelled","toggleStriped","convertToRaw","draftJs","componentDidMount","table","onChangeBlock","block","setState","UNSAFE_componentWillReceiveProps","nextProps","editorState","getCurrentContent","e","preventDefault","stopPropagation","slice","index","length","render","intl","formatMessage","rowIndex","cellIndex","editable","onAddBlock","onSelectBlock","disableNewBlocks","document","getElementById","event","objectOf","any","isRequired","detached","bool","number","string","func","onInsertBlock","onDeleteBlock","onMutateBlock","onFocusPreviousBlock","onFocusNextBlock"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Table/Edit.jsx"],"sourcesContent":["/**\n * Edit text block.\n * @module components/manage/Blocks/Title/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { map, remove } from 'lodash';\nimport { Button, Segment, Table, Form } from 'semantic-ui-react';\nimport { Portal } from 'react-portal';\nimport cx from 'classnames';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport Cell from '@plone/volto/components/manage/Blocks/Table/Cell';\nimport { Field, Icon } from '@plone/volto/components';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport rowBeforeSVG from '@plone/volto/icons/row-before.svg';\nimport rowAfterSVG from '@plone/volto/icons/row-after.svg';\nimport colBeforeSVG from '@plone/volto/icons/column-before.svg';\nimport colAfterSVG from '@plone/volto/icons/column-after.svg';\nimport rowDeleteSVG from '@plone/volto/icons/row-delete.svg';\nimport colDeleteSVG from '@plone/volto/icons/column-delete.svg';\n\nconst getId = () => Math.floor(Math.random() * Math.pow(2, 24)).toString(32);\n\nconst valueToDraft = (value) => ({\n  blocks: [\n    {\n      data: {},\n      depth: 0,\n      entityRanges: [],\n      inlineStyleRanges: [],\n      key: getId(),\n      text: value,\n      type: 'unstyled',\n    },\n  ],\n  entityMap: {},\n});\n\nconst emptyCell = (type) => ({\n  key: getId(),\n  type: type || 'data',\n  value: valueToDraft(''),\n});\n\nconst emptyRow = (cells) => ({\n  key: getId(),\n  cells: map(cells, () => emptyCell()),\n});\n\nconst initialTable = () => ({\n  fixed: true,\n  compact: false,\n  basic: false,\n  celled: true,\n  inverted: false,\n  striped: false,\n  rows: [\n    {\n      key: getId(),\n      cells: [\n        {\n          key: getId(),\n          type: 'header',\n          value: valueToDraft(''),\n        },\n        {\n          key: getId(),\n          type: 'header',\n          value: valueToDraft(''),\n        },\n      ],\n    },\n    {\n      key: getId(),\n      cells: [\n        {\n          key: getId(),\n          type: 'data',\n          value: valueToDraft(''),\n        },\n        {\n          key: getId(),\n          type: 'data',\n          value: valueToDraft(''),\n        },\n      ],\n    },\n  ],\n});\n\nconst messages = defineMessages({\n  insertRowBefore: {\n    id: 'Insert row before',\n    defaultMessage: 'Insert row before',\n  },\n  insertRowAfter: {\n    id: 'Insert row after',\n    defaultMessage: 'Insert row after',\n  },\n  deleteRow: {\n    id: 'Delete row',\n    defaultMessage: 'Delete row',\n  },\n  insertColBefore: {\n    id: 'Insert col before',\n    defaultMessage: 'Insert col before',\n  },\n  insertColAfter: {\n    id: 'Insert col after',\n    defaultMessage: 'Insert col after',\n  },\n  deleteCol: {\n    id: 'Delete col',\n    defaultMessage: 'Delete col',\n  },\n  fixed: {\n    id: 'Fixed width table cells',\n    defaultMessage: 'Fixed width columns',\n  },\n  compact: {\n    id: 'Make the table compact',\n    defaultMessage: 'Reduce cell padding',\n  },\n  basic: {\n    id: 'Reduce complexity',\n    defaultMessage: 'Minimalistic table design',\n  },\n  celled: {\n    id: 'Divide each row into separate cells',\n    defaultMessage: 'Add border to inner columns',\n  },\n  striped: {\n    id: 'Stripe alternate rows with color',\n    defaultMessage: 'Alternate row background color',\n  },\n  headerCell: {\n    id: 'Header cell',\n    defaultMessage: 'Header cell',\n  },\n});\n\n/**\n * Edit text block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    detached: PropTypes.bool,\n    index: PropTypes.number.isRequired,\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    onAddBlock: PropTypes.func.isRequired,\n    onInsertBlock: PropTypes.func.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    onMutateBlock: PropTypes.func.isRequired,\n    onFocusPreviousBlock: PropTypes.func.isRequired,\n    onFocusNextBlock: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    detached: false,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: {\n        row: 0,\n        cell: 0,\n      },\n      isClient: false,\n    };\n    this.onSelectCell = this.onSelectCell.bind(this);\n    this.onInsertRowBefore = this.onInsertRowBefore.bind(this);\n    this.onInsertRowAfter = this.onInsertRowAfter.bind(this);\n    this.onInsertColBefore = this.onInsertColBefore.bind(this);\n    this.onInsertColAfter = this.onInsertColAfter.bind(this);\n    this.onDeleteRow = this.onDeleteRow.bind(this);\n    this.onDeleteCol = this.onDeleteCol.bind(this);\n    this.onChangeCell = this.onChangeCell.bind(this);\n    this.toggleCellType = this.toggleCellType.bind(this);\n    this.toggleBool = this.toggleBool.bind(this);\n    this.toggleFixed = this.toggleFixed.bind(this);\n    this.toggleCompact = this.toggleCompact.bind(this);\n    this.toggleBasic = this.toggleBasic.bind(this);\n    this.toggleCelled = this.toggleCelled.bind(this);\n    this.toggleStriped = this.toggleStriped.bind(this);\n\n    const { convertToRaw } = props.draftJs;\n    this.convertToRaw = convertToRaw;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (!this.props.data.table) {\n      this.props.onChangeBlock(this.props.block, {\n        ...this.props.data,\n        table: initialTable(),\n      });\n    }\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!nextProps.data.table) {\n      this.props.onChangeBlock(nextProps.block, {\n        ...nextProps.data,\n        table: initialTable(),\n      });\n    }\n  }\n\n  /**\n   * Select cell handler\n   * @method onSelectCell\n   * @param {Number} row Row index.\n   * @param {Number} cell Cell index.\n   * @returns {undefined}\n   */\n  onSelectCell(row, cell) {\n    this.setState({ selected: { row, cell } });\n  }\n\n  /**\n   * Change cell handler\n   * @method onChangeCell\n   * @param {Number} row Row index.\n   * @param {Number} cell Cell index.\n   * @param {Object} editorState Editor state.\n   * @returns {undefined}\n   */\n  onChangeCell(row, cell, editorState) {\n    const table = { ...this.props.data.table };\n    table.rows[row].cells[cell].value = this.convertToRaw(\n      editorState.getCurrentContent(),\n    );\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table,\n    });\n  }\n\n  /**\n   * Toggle cell type\n   * @method toggleCellType\n   * @returns {undefined}\n   */\n  toggleCellType() {\n    const table = { ...this.props.data.table };\n    let type =\n      table.rows[this.state.selected.row].cells[this.state.selected.cell].type;\n    table.rows[this.state.selected.row].cells[this.state.selected.cell].type =\n      type === 'header' ? 'data' : 'header';\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table,\n    });\n  }\n\n  /**\n   * Insert row before handler\n   * @method onInsertRowBefore\n   * @returns {undefined}\n   */\n  onInsertRowBefore(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: [\n          ...table.rows.slice(0, this.state.selected.row),\n          emptyRow(table.rows[0].cells),\n          ...table.rows.slice(this.state.selected.row),\n        ],\n      },\n    });\n    this.setState({\n      selected: {\n        row: this.state.selected.row + 1,\n        cell: this.state.selected.cell,\n      },\n    });\n  }\n\n  /**\n   * Insert row after handler\n   * @method onInsertRowAfter\n   * @returns {undefined}\n   */\n  onInsertRowAfter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: [\n          ...table.rows.slice(0, this.state.selected.row + 1),\n          emptyRow(table.rows[0].cells),\n          ...table.rows.slice(this.state.selected.row + 1),\n        ],\n      },\n    });\n  }\n\n  /**\n   * Insert col before handler\n   * @method onInsertColBefore\n   * @returns {undefined}\n   */\n  onInsertColBefore(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: map(table.rows, (row, index) => ({\n          ...row,\n          cells: [\n            ...row.cells.slice(0, this.state.selected.cell),\n            emptyCell(table.rows[index].cells[this.state.selected.cell].type),\n            ...row.cells.slice(this.state.selected.cell),\n          ],\n        })),\n      },\n    });\n    this.setState({\n      selected: {\n        row: this.state.selected.row,\n        cell: this.state.selected.cell + 1,\n      },\n    });\n  }\n\n  /**\n   * Insert col after handler\n   * @method onInsertColAfter\n   * @returns {undefined}\n   */\n  onInsertColAfter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: map(table.rows, (row, index) => ({\n          ...row,\n          cells: [\n            ...row.cells.slice(0, this.state.selected.cell + 1),\n            emptyCell(table.rows[index].cells[this.state.selected.cell].type),\n            ...row.cells.slice(this.state.selected.cell + 1),\n          ],\n        })),\n      },\n    });\n  }\n\n  /**\n   * Delete col handler\n   * @method onDeleteCol\n   * @returns {undefined}\n   */\n  onDeleteCol(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n\n    if (this.state.selected.cell === table.rows[0].cells.length - 1) {\n      this.setState({\n        selected: {\n          row: this.state.selected.row,\n          cell: this.state.selected.cell - 1,\n        },\n      });\n    }\n\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: map(table.rows, (row) => ({\n          ...row,\n          cells: remove(\n            row.cells,\n            (cell, index) => index !== this.state.selected.cell,\n          ),\n        })),\n      },\n    });\n  }\n\n  /**\n   * Delete row handler\n   * @method onDeleteRow\n   * @returns {undefined}\n   */\n  onDeleteRow(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const table = this.props.data.table;\n\n    if (this.state.selected.row === table.rows.length - 1) {\n      this.setState({\n        selected: {\n          row: this.state.selected.row - 1,\n          cell: this.state.selected.cell,\n        },\n      });\n    }\n\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        rows: remove(\n          table.rows,\n          (row, index) => index !== this.state.selected.row,\n        ),\n      },\n    });\n  }\n\n  /**\n   * Toggle bool\n   * @method toggleBool\n   * @param {string} value Value to toggle.\n   * @returns {undefined}\n   */\n  toggleBool(value) {\n    const table = this.props.data.table;\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      table: {\n        ...table,\n        [value]: !table[value],\n      },\n    });\n  }\n\n  /**\n   * Toggle fixed\n   * @method toggleFixed\n   * @returns {undefined}\n   */\n  toggleFixed() {\n    this.toggleBool('fixed');\n  }\n\n  /**\n   * Toggle compact\n   * @method toggleCompact\n   * @returns {undefined}\n   */\n  toggleCompact() {\n    this.toggleBool('compact');\n  }\n\n  /**\n   * Toggle basic\n   * @method toggleBasic\n   * @returns {undefined}\n   */\n  toggleBasic() {\n    this.toggleBool('basic');\n  }\n\n  /**\n   * Toggle celled\n   * @method toggleCelled\n   * @returns {undefined}\n   */\n  toggleCelled() {\n    this.toggleBool('celled');\n  }\n\n  /**\n   * Toggle striped\n   * @method toggleStriped\n   * @returns {undefined}\n   */\n  toggleStriped() {\n    this.toggleBool('striped');\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (!this.state.isClient) {\n      return <div />;\n    }\n\n    return (\n      <div className={cx('block table', { selected: this.props.selected })}>\n        {this.props.selected && (\n          <div className=\"toolbar\">\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertRowBefore}\n                title={this.props.intl.formatMessage(messages.insertRowBefore)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertRowBefore,\n                )}\n              >\n                <Icon name={rowBeforeSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertRowAfter}\n                title={this.props.intl.formatMessage(messages.insertRowAfter)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertRowAfter,\n                )}\n              >\n                <Icon name={rowAfterSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onDeleteRow}\n                disabled={\n                  this.props.data.table &&\n                  this.props.data.table.rows.length === 1\n                }\n                title={this.props.intl.formatMessage(messages.deleteRow)}\n                aria-label={this.props.intl.formatMessage(messages.deleteRow)}\n              >\n                <Icon name={rowDeleteSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertColBefore}\n                title={this.props.intl.formatMessage(messages.insertColBefore)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertColBefore,\n                )}\n              >\n                <Icon name={colBeforeSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onInsertColAfter}\n                title={this.props.intl.formatMessage(messages.insertColAfter)}\n                aria-label={this.props.intl.formatMessage(\n                  messages.insertColAfter,\n                )}\n              >\n                <Icon name={colAfterSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n            <Button.Group>\n              <Button\n                icon\n                basic\n                onClick={this.onDeleteCol}\n                disabled={\n                  this.props.data.table &&\n                  this.props.data.table.rows[0].cells.length === 1\n                }\n                title={this.props.intl.formatMessage(messages.deleteCol)}\n                aria-label={this.props.intl.formatMessage(messages.deleteCol)}\n              >\n                <Icon name={colDeleteSVG} size=\"24px\" />\n              </Button>\n            </Button.Group>\n          </div>\n        )}\n        {this.props.data.table && (\n          <Table\n            fixed={this.props.data.table.fixed}\n            compact={this.props.data.table.compact}\n            basic={this.props.data.table.basic ? 'very' : false}\n            celled={this.props.data.table.celled}\n            inverted={this.props.data.table.inverted}\n            striped={this.props.data.table.striped}\n          >\n            <Table.Body>\n              {map(this.props.data.table.rows, (row, rowIndex) => (\n                <Table.Row key={row.key}>\n                  {map(row.cells, (cell, cellIndex) => (\n                    <Table.Cell\n                      key={cell.key}\n                      as={cell.type === 'header' ? 'th' : 'td'}\n                      className={\n                        rowIndex === this.state.selected.row &&\n                        cellIndex === this.state.selected.cell &&\n                        this.props.selected\n                          ? 'selected'\n                          : ''\n                      }\n                    >\n                      <Cell\n                        editable={this.props.editable}\n                        value={cell.value}\n                        row={rowIndex}\n                        cell={cellIndex}\n                        onSelectCell={this.onSelectCell}\n                        selected={\n                          rowIndex === this.state.selected.row &&\n                          cellIndex === this.state.selected.cell\n                        }\n                        isTableBlockSelected={this.props.selected}\n                        onAddBlock={this.props.onAddBlock}\n                        onSelectBlock={this.props.onSelectBlock}\n                        onChange={this.onChangeCell}\n                        index={this.props.index}\n                        disableNewBlocks={this.props.data?.disableNewBlocks}\n                      />\n                    </Table.Cell>\n                  ))}\n                </Table.Row>\n              ))}\n            </Table.Body>\n          </Table>\n        )}\n        {this.props.selected && this.state.isClient && (\n          <Portal node={document.getElementById('sidebar-properties')}>\n            <Form\n              method=\"post\"\n              onSubmit={(event) => {\n                event.preventDefault();\n                event.stopPropagation();\n              }}\n            >\n              <Segment secondary attached>\n                <FormattedMessage id=\"Table\" defaultMessage=\"Table\" />\n              </Segment>\n              <Segment attached>\n                <Field\n                  id=\"fixed\"\n                  title={this.props.intl.formatMessage(messages.fixed)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.fixed}\n                  onChange={() => this.toggleFixed()}\n                />\n                <Field\n                  id=\"celled\"\n                  title={this.props.intl.formatMessage(messages.celled)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.celled}\n                  onChange={this.toggleCelled}\n                />\n                <Field\n                  id=\"striped\"\n                  title={this.props.intl.formatMessage(messages.striped)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.striped}\n                  onChange={this.toggleStriped}\n                />\n                <Field\n                  id=\"compact\"\n                  title={this.props.intl.formatMessage(messages.compact)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.compact}\n                  onChange={() => this.toggleCompact()}\n                />\n                <Field\n                  id=\"basic\"\n                  title={this.props.intl.formatMessage(messages.basic)}\n                  type=\"boolean\"\n                  value={this.props.data.table && this.props.data.table.basic}\n                  onChange={this.toggleBasic}\n                />\n              </Segment>\n              <Segment secondary attached>\n                <FormattedMessage id=\"Cell\" defaultMessage=\"Cell\" />\n              </Segment>\n              <Segment attached>\n                <Field\n                  id=\"celltype\"\n                  title={this.props.intl.formatMessage(messages.headerCell)}\n                  type=\"boolean\"\n                  value={\n                    this.props.data.table &&\n                    this.props.data.table.rows[this.state.selected.row].cells[\n                      this.state.selected.cell\n                    ].type === 'header'\n                  }\n                  onChange={this.toggleCellType}\n                />\n              </Segment>\n            </Form>\n          </Portal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default compose(injectLazyLibs(['draftJs']), injectIntl)(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Insert row before","defaultMessage":"Insert row before"},{"id":"Insert row after","defaultMessage":"Insert row after"},{"id":"Delete row","defaultMessage":"Delete row"},{"id":"Insert col before","defaultMessage":"Insert col before"},{"id":"Insert col after","defaultMessage":"Insert col after"},{"id":"Delete col","defaultMessage":"Delete col"},{"id":"Fixed width table cells","defaultMessage":"Fixed width columns"},{"id":"Make the table compact","defaultMessage":"Reduce cell padding"},{"id":"Reduce complexity","defaultMessage":"Minimalistic table design"},{"id":"Divide each row into separate cells","defaultMessage":"Add border to inner columns"},{"id":"Stripe alternate rows with color","defaultMessage":"Alternate row background color"},{"id":"Header cell","defaultMessage":"Header cell"},{"id":"Table","defaultMessage":"Table"},{"id":"Cell","defaultMessage":"Cell"}]}},"sourceType":"module","externalDependencies":[]}