{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/customizations/volto/components/theme/Login/Login.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Login container.\n * @module components/theme/Login/Login\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Button, Form, Input, Segment, Grid } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { withRouter } from 'react-router-dom';\nimport { Icon } from '@plone/volto/components';\nimport { getNavigation, login } from '@plone/volto/actions';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport config from '@plone/volto/registry';\nconst messages = defineMessages({\n  login: {\n    \"id\": \"Log in\",\n    \"defaultMessage\": \"Log in\"\n  },\n  loginName: {\n    \"id\": \"Login Name\",\n    \"defaultMessage\": \"Login Name\"\n  },\n  Login: {\n    \"id\": \"Login\",\n    \"defaultMessage\": \"Login\"\n  },\n  password: {\n    \"id\": \"Password\",\n    \"defaultMessage\": \"Password\"\n  },\n  cancel: {\n    \"id\": \"Cancel\",\n    \"defaultMessage\": \"Cancel\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  loginFailed: {\n    \"id\": \"Login Failed\",\n    \"defaultMessage\": \"Login Failed\"\n  },\n  loginFailedContent: {\n    \"id\": \"Both email address and password are case sensitive, check that caps lock is not enabled.\",\n    \"defaultMessage\": \"Both email address and password are case sensitive, check that caps lock is not enabled.\"\n  },\n  register: {\n    \"id\": \"Register\",\n    \"defaultMessage\": \"Register\"\n  },\n  forgotPassword: {\n    \"id\": \"box_forgot_password_option\",\n    \"defaultMessage\": \"Forgot your password?\"\n  }\n});\n\n/**\n * Login class.\n * @class Login\n * @extends Component\n */\nclass Login extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onLogin = this.onLogin.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.token) {\n      const returnUrl = this.props.returnUrl !== '/logout' ? this.props.returnUrl || '/' : '/';\n      this.props.history.push(returnUrl, {\n        isFromLogin: true\n      });\n      if (toast.isActive('loginFailed')) {\n        toast.dismiss('loginFailed');\n      }\n    } else {\n      if (this.props.location.pathname === '/logout') {\n        this.props.history.push('/', {\n          isFromLogin: true\n        });\n      }\n    }\n    if (nextProps.error) {\n      if (!toast.isActive('loginFailed')) {\n        toast.error(__jsx(Toast, {\n          error: true,\n          title: this.props.intl.formatMessage(messages.loginFailed),\n          content: this.props.intl.formatMessage(messages.loginFailedContent),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }\n        }), {\n          autoClose: false,\n          toastId: 'loginFailed'\n        });\n      }\n    }\n  }\n  UNSAFE_componentWillMount() {\n    if (config.settings.isMultilingual) {\n      this.props.getNavigation(`/${this.props.lang}`, config.settings.navDepth);\n    } else {\n      this.props.getNavigation('/', config.settings.navDepth);\n    }\n  }\n  componentWillUnmount() {\n    if (config.settings.isMultilingual) {\n      this.props.getNavigation(`/${this.props.lang}`, config.settings.navDepth);\n    } else {\n      this.props.getNavigation('/', config.settings.navDepth);\n    }\n    if (toast.isActive('loginFailed')) {\n      toast.dismiss('loginFailed');\n    }\n  }\n\n  /**\n   * On login handler\n   * @method onLogin\n   * @param {Object} event Event object.\n   * @returns {undefined}\n   */\n  onLogin(event) {\n    this.props.login(document.getElementsByName('login')[0].value, document.getElementsByName('password')[0].value);\n    event.preventDefault();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return __jsx(\"div\", {\n      id: \"page-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }\n    }, __jsx(Helmet, {\n      title: this.props.intl.formatMessage(messages.Login),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }), __jsx(Container, {\n      text: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, __jsx(Form, {\n      method: \"post\",\n      onSubmit: this.onLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }, __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, __jsx(Segment, {\n      className: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Log In\",\n      defaultMessage: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Sign in to start session\",\n      defaultMessage: \"Sign in to start session\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    })), __jsx(Segment, {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Field, {\n      inline: true,\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      width: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 23\n      }\n    }, __jsx(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 27\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Login Name\",\n      defaultMessage: \"Login Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    })))), __jsx(Grid.Column, {\n      width: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 23\n      }\n    }, __jsx(Input, {\n      id: \"login\",\n      name: \"login\",\n      placeholder: this.props.intl.formatMessage(messages.loginName),\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }))), __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      stretched: true,\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 23\n      }\n    }, __jsx(\"p\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"If you you do not have an account here, head over to the {registrationform}.\",\n      defaultMessage: \"If you you do not have an account here, head over to the {registrationform}.\",\n      values: {\n        registrationform: /* eslint-disable jsx-a11y/tabindex-no-positive */\n        __jsx(Link, {\n          to: \"/register\",\n          tabIndex: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 33\n          }\n        }, __jsx(FormattedMessage, {\n          id: \"registration form\",\n          defaultMessage: \"registration form\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 35\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 27\n      }\n    })))))), __jsx(Form.Field, {\n      inline: true,\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    }, __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      stretched: true,\n      width: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    }, __jsx(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 27\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Password\",\n      defaultMessage: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 29\n      }\n    })))), __jsx(Grid.Column, {\n      stretched: true,\n      width: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 23\n      }\n    }, __jsx(Input, {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      placeholder: this.props.intl.formatMessage(messages.password),\n      tabIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 25\n      }\n    }))), __jsx(Grid.Row, {\n      stretched: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }, __jsx(Grid.Column, {\n      stretched: true,\n      width: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 23\n      }\n    }, __jsx(\"p\", {\n      className: \"help\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 25\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"If you have forgotten your password, {forgotpassword}\",\n      defaultMessage: \"If you have forgotten your password, {forgotpassword}\",\n      values: {\n        forgotpassword: __jsx(Link, {\n          to: \"/password-reset\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 33\n          }\n        }, this.props.intl.formatMessage(messages.forgotPassword))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 27\n      }\n    }))))))), __jsx(Segment, {\n      className: \"actions\",\n      clearing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      basic: true,\n      primary: true,\n      floated: \"right\",\n      type: \"submit\",\n      id: \"login-form-submit\",\n      \"aria-label\": this.props.intl.formatMessage(messages.login),\n      title: this.props.intl.formatMessage(messages.login),\n      loading: this.props.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      className: \"circled\",\n      name: aheadSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 19\n      }\n    })), __jsx(Button, {\n      basic: true,\n      secondary: true,\n      id: \"login-form-cancel\",\n      as: Link,\n      to: \"/\",\n      \"aria-label\": this.props.intl.formatMessage(messages.cancel),\n      title: this.props.intl.formatMessage(messages.cancel),\n      floated: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      className: \"circled\",\n      name: clearSVG,\n      size: \"30px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 19\n      }\n    })))))));\n  }\n}\n_defineProperty(Login, \"propTypes\", {\n  login: PropTypes.func.isRequired,\n  error: PropTypes.shape({\n    message: PropTypes.string\n  }),\n  loading: PropTypes.bool,\n  token: PropTypes.string,\n  // eslint-disable-line react/no-unused-prop-types\n  returnUrl: PropTypes.string\n});\n_defineProperty(Login, \"defaultProps\", {\n  error: null,\n  loading: null,\n  token: null,\n  returnUrl: null\n});\nexport default compose(withRouter, injectIntl, connect((state, props) => ({\n  lang: state.intl.locale,\n  error: state.userSession.login.error,\n  loading: state.userSession.login.loading,\n  token: state.userSession.token,\n  returnUrl: qs.parse(props.location.search).return_url || props.location.pathname.replace(/\\/login$/, '').replace(/\\/logout$/, '') || '/'\n}), {\n  login,\n  getNavigation\n}))(Login);","map":{"version":3,"names":["React","Component","PropTypes","Helmet","connect","compose","Link","Container","Button","Form","Input","Segment","Grid","FormattedMessage","defineMessages","injectIntl","qs","withRouter","Icon","getNavigation","login","toast","Toast","aheadSVG","clearSVG","config","messages","loginName","Login","password","cancel","error","loginFailed","loginFailedContent","register","forgotPassword","constructor","props","onLogin","bind","UNSAFE_componentWillReceiveProps","nextProps","token","returnUrl","history","push","isFromLogin","isActive","dismiss","location","pathname","intl","formatMessage","autoClose","toastId","UNSAFE_componentWillMount","settings","isMultilingual","lang","navDepth","componentWillUnmount","event","document","getElementsByName","value","preventDefault","render","registrationform","forgotpassword","loading","func","isRequired","shape","message","string","bool","state","locale","userSession","parse","search","return_url","replace"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/customizations/volto/components/theme/Login/Login.jsx"],"sourcesContent":["/**\n * Login container.\n * @module components/theme/Login/Login\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n  Button,\n  Form,\n  Input,\n  Segment,\n  Grid,\n} from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport qs from 'query-string';\nimport { withRouter } from 'react-router-dom';\n\nimport { Icon } from '@plone/volto/components';\nimport { getNavigation, login } from '@plone/volto/actions';\nimport { toast } from 'react-toastify';\nimport { Toast } from '@plone/volto/components';\n\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\n\nimport config from '@plone/volto/registry';\n\nconst messages = defineMessages({\n  login: {\n    id: 'Log in',\n    defaultMessage: 'Log in',\n  },\n  loginName: {\n    id: 'Login Name',\n    defaultMessage: 'Login Name',\n  },\n  Login: {\n    id: 'Login',\n    defaultMessage: 'Login',\n  },\n  password: {\n    id: 'Password',\n    defaultMessage: 'Password',\n  },\n  cancel: {\n    id: 'Cancel',\n    defaultMessage: 'Cancel',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  loginFailed: {\n    id: 'Login Failed',\n    defaultMessage: 'Login Failed',\n  },\n  loginFailedContent: {\n    id:\n      'Both email address and password are case sensitive, check that caps lock is not enabled.',\n    defaultMessage:\n      'Both email address and password are case sensitive, check that caps lock is not enabled.',\n  },\n  register: {\n    id: 'Register',\n    defaultMessage: 'Register',\n  },\n  forgotPassword: {\n    id: 'box_forgot_password_option',\n    defaultMessage: 'Forgot your password?',\n  },\n});\n\n/**\n * Login class.\n * @class Login\n * @extends Component\n */\nclass Login extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    login: PropTypes.func.isRequired,\n    error: PropTypes.shape({\n      message: PropTypes.string,\n    }),\n    loading: PropTypes.bool,\n    token: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n    returnUrl: PropTypes.string,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    error: null,\n    loading: null,\n    token: null,\n    returnUrl: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.onLogin = this.onLogin.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.token) {\n      const returnUrl =\n        this.props.returnUrl !== '/logout' ? this.props.returnUrl || '/' : '/';\n      this.props.history.push(returnUrl, {\n        isFromLogin: true,\n      });\n      if (toast.isActive('loginFailed')) {\n        toast.dismiss('loginFailed');\n      }\n    } else {\n      if (this.props.location.pathname === '/logout') {\n        this.props.history.push('/', {\n          isFromLogin: true,\n        });\n      }\n    }\n    if (nextProps.error) {\n      if (!toast.isActive('loginFailed')) {\n        toast.error(\n          <Toast\n            error\n            title={this.props.intl.formatMessage(messages.loginFailed)}\n            content={this.props.intl.formatMessage(messages.loginFailedContent)}\n          />,\n          { autoClose: false, toastId: 'loginFailed' },\n        );\n      }\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    if (config.settings.isMultilingual) {\n      this.props.getNavigation(`/${this.props.lang}`, config.settings.navDepth);\n    } else {\n      this.props.getNavigation('/', config.settings.navDepth);\n    }\n  }\n\n  componentWillUnmount() {\n    if (config.settings.isMultilingual) {\n      this.props.getNavigation(`/${this.props.lang}`, config.settings.navDepth);\n    } else {\n      this.props.getNavigation('/', config.settings.navDepth);\n    }\n\n    if (toast.isActive('loginFailed')) {\n      toast.dismiss('loginFailed');\n    }\n  }\n\n  /**\n   * On login handler\n   * @method onLogin\n   * @param {Object} event Event object.\n   * @returns {undefined}\n   */\n  onLogin(event) {\n    this.props.login(\n      document.getElementsByName('login')[0].value,\n      document.getElementsByName('password')[0].value,\n    );\n    event.preventDefault();\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <div id=\"page-login\">\n        <Helmet title={this.props.intl.formatMessage(messages.Login)} />\n        <Container text>\n          <Form method=\"post\" onSubmit={this.onLogin}>\n            <Segment.Group raised>\n              <Segment className=\"primary\">\n                <FormattedMessage id=\"Log In\" defaultMessage=\"Login\" />\n              </Segment>\n              <Segment secondary>\n                <FormattedMessage\n                  id=\"Sign in to start session\"\n                  defaultMessage=\"Sign in to start session\"\n                />\n              </Segment>\n              <Segment className=\"form\">\n                <Form.Field inline className=\"help\">\n                  <Grid>\n                    <Grid.Row stretched>\n                      <Grid.Column width=\"4\">\n                        <div className=\"wrapper\">\n                          <label htmlFor=\"login\">\n                            <FormattedMessage\n                              id=\"Login Name\"\n                              defaultMessage=\"Login Name\"\n                            />\n                          </label>\n                        </div>\n                      </Grid.Column>\n                      <Grid.Column width=\"8\">\n                        {/* eslint-disable jsx-a11y/no-autofocus */}\n                        <Input\n                          id=\"login\"\n                          name=\"login\"\n                          placeholder={this.props.intl.formatMessage(\n                            messages.loginName,\n                          )}\n                          autoFocus\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row stretched>\n                      <Grid.Column stretched width=\"12\">\n                        <p className=\"help\">\n                          <FormattedMessage\n                            id=\"If you you do not have an account here, head over to the {registrationform}.\"\n                            defaultMessage=\"If you you do not have an account here, head over to the {registrationform}.\"\n                            values={{\n                              registrationform: (\n                                /* eslint-disable jsx-a11y/tabindex-no-positive */\n                                <Link to=\"/register\" tabIndex={1}>\n                                  <FormattedMessage\n                                    id=\"registration form\"\n                                    defaultMessage=\"registration form\"\n                                  />\n                                </Link>\n                              ),\n                            }}\n                          />\n                        </p>\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form.Field>\n                <Form.Field inline className=\"help\">\n                  <Grid>\n                    <Grid.Row stretched>\n                      <Grid.Column stretched width=\"4\">\n                        <div className=\"wrapper\">\n                          <label htmlFor=\"password\">\n                            <FormattedMessage\n                              id=\"Password\"\n                              defaultMessage=\"Password\"\n                            />\n                          </label>\n                        </div>\n                      </Grid.Column>\n                      <Grid.Column stretched width=\"8\">\n                        <Input\n                          type=\"password\"\n                          id=\"password\"\n                          name=\"password\"\n                          placeholder={this.props.intl.formatMessage(\n                            messages.password,\n                          )}\n                          tabIndex={0}\n                        />\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row stretched>\n                      <Grid.Column stretched width=\"12\">\n                        <p className=\"help\">\n                          <FormattedMessage\n                            id=\"If you have forgotten your password, {forgotpassword}\"\n                            defaultMessage=\"If you have forgotten your password, {forgotpassword}\"\n                            values={{\n                              forgotpassword: (\n                                <Link to=\"/password-reset\">\n                                  {this.props.intl.formatMessage(\n                                    messages.forgotPassword,\n                                  )}\n                                </Link>\n                              ),\n                            }}\n                          />\n                        </p>\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form.Field>\n              </Segment>\n              <Segment className=\"actions\" clearing>\n                <Button\n                  basic\n                  primary\n                  floated=\"right\"\n                  type=\"submit\"\n                  id=\"login-form-submit\"\n                  aria-label={this.props.intl.formatMessage(messages.login)}\n                  title={this.props.intl.formatMessage(messages.login)}\n                  loading={this.props.loading}\n                >\n                  <Icon className=\"circled\" name={aheadSVG} size=\"30px\" />\n                </Button>\n\n                <Button\n                  basic\n                  secondary\n                  id=\"login-form-cancel\"\n                  as={Link}\n                  to=\"/\"\n                  aria-label={this.props.intl.formatMessage(messages.cancel)}\n                  title={this.props.intl.formatMessage(messages.cancel)}\n                  floated=\"right\"\n                >\n                  <Icon className=\"circled\" name={clearSVG} size=\"30px\" />\n                </Button>\n              </Segment>\n            </Segment.Group>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n  injectIntl,\n  connect(\n    (state, props) => ({\n      lang: state.intl.locale,\n      error: state.userSession.login.error,\n      loading: state.userSession.login.loading,\n      token: state.userSession.token,\n      returnUrl:\n        qs.parse(props.location.search).return_url ||\n        props.location.pathname\n          .replace(/\\/login$/, '')\n          .replace(/\\/logout$/, '') ||\n        '/',\n    }),\n    { login, getNavigation },\n  ),\n)(Login);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Log in","defaultMessage":"Log in"},{"id":"Login Name","defaultMessage":"Login Name"},{"id":"Login","defaultMessage":"Login"},{"id":"Password","defaultMessage":"Password"},{"id":"Cancel","defaultMessage":"Cancel"},{"id":"Error","defaultMessage":"Error"},{"id":"Login Failed","defaultMessage":"Login Failed"},{"id":"Both email address and password are case sensitive, check that caps lock is not enabled.","defaultMessage":"Both email address and password are case sensitive, check that caps lock is not enabled."},{"id":"Register","defaultMessage":"Register"},{"id":"box_forgot_password_option","defaultMessage":"Forgot your password?"},{"id":"Log In","defaultMessage":"Login"},{"id":"Sign in to start session","defaultMessage":"Sign in to start session"},{"id":"If you you do not have an account here, head over to the {registrationform}.","defaultMessage":"If you you do not have an account here, head over to the {registrationform}."},{"id":"registration form","defaultMessage":"registration form"},{"id":"If you have forgotten your password, {forgotpassword}","defaultMessage":"If you have forgotten your password, {forgotpassword}"}]}},"sourceType":"module","externalDependencies":[]}