{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar TextBlockSchema = function TextBlockSchema(data) {\n  var override_toc = data.override_toc;\n  return {\n    title: 'Advanced settings',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['override_toc'].concat(_toConsumableArray(override_toc ? ['level', 'entry_text'] : []))\n    }],\n    properties: {\n      override_toc: {\n        title: 'Override TOC entry',\n        type: 'boolean'\n      },\n      level: {\n        title: 'TOC entry level',\n        choices: [['h1', 'h1'], ['h2', 'h2'], ['h3', 'h3'], ['h4', 'h4'], ['h5', 'h5'], ['h6', 'h6']]\n      },\n      entry_text: {\n        title: 'Entry text for TOC'\n      }\n    },\n    required: []\n  };\n};\n_c = TextBlockSchema;\nexport default TextBlockSchema;\nvar _c;\n$RefreshReg$(_c, \"TextBlockSchema\");","map":{"version":3,"names":["TextBlockSchema","data","override_toc","title","fieldsets","id","fields","properties","type","level","choices","entry_text","required"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/blocks/Text/schema.js"],"sourcesContent":["const TextBlockSchema = (data) => {\n  const { override_toc } = data;\n  return {\n    title: 'Advanced settings',\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: [\n          'override_toc',\n          ...(override_toc ? ['level', 'entry_text'] : []),\n        ],\n      },\n    ],\n    properties: {\n      override_toc: {\n        title: 'Override TOC entry',\n        type: 'boolean',\n      },\n      level: {\n        title: 'TOC entry level',\n        choices: [\n          ['h1', 'h1'],\n          ['h2', 'h2'],\n          ['h3', 'h3'],\n          ['h4', 'h4'],\n          ['h5', 'h5'],\n          ['h6', 'h6'],\n        ],\n      },\n      entry_text: {\n        title: 'Entry text for TOC',\n      },\n    },\n    required: [],\n  };\n};\n\nexport default TextBlockSchema;\n"],"mappings":";AAAA,IAAMA,eAAe,GAAG,SAAlBA,eAAe,CAAIC,IAAI,EAAK;EAChC,IAAQC,YAAY,GAAKD,IAAI,CAArBC,YAAY;EACpB,OAAO;IACLC,KAAK,EAAE,mBAAmB;IAC1BC,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbF,KAAK,EAAE,SAAS;MAChBG,MAAM,GACJ,cAAc,4BACVJ,YAAY,GAAG,CAAC,OAAO,EAAE,YAAY,CAAC,GAAG,EAAE;IAEnD,CAAC,CACF;IACDK,UAAU,EAAE;MACVL,YAAY,EAAE;QACZC,KAAK,EAAE,oBAAoB;QAC3BK,IAAI,EAAE;MACR,CAAC;MACDC,KAAK,EAAE;QACLN,KAAK,EAAE,iBAAiB;QACxBO,OAAO,EAAE,CACP,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC;MAEhB,CAAC;MACDC,UAAU,EAAE;QACVR,KAAK,EAAE;MACT;IACF,CAAC;IACDS,QAAQ,EAAE;EACZ,CAAC;AACH,CAAC;AAAC,KApCIZ,eAAe;AAsCrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}