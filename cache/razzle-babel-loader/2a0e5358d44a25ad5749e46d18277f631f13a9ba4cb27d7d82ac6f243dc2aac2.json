{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/components/manage/Blocks/SimpleDataTable/templates/expandable/Edit.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { SidebarPortal } from '@plone/volto/components'; // EditBlock\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport config from '@plone/volto/registry';\nimport { connectToMultipleProviders } from '@eeacms/volto-datablocks/hocs';\nimport { SimpleDataTableSchema } from '@eeacms/volto-datablocks/components/manage/Blocks/SimpleDataTable/schema';\nimport { SimpleDataTableView } from '@eeacms/volto-datablocks/components/manage/Blocks/SimpleDataTable/View';\nvar Edit = /*#__PURE__*/function (_Component) {\n  _inherits(Edit, _Component);\n  var _super = _createSuper(Edit);\n  function Edit() {\n    var _this;\n    _classCallCheck(this, Edit);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"getSchema\", function () {\n      var _config$blocks$blocks, _config$blocks$blocks2, _config$blocks$blocks3, _this$props$data;\n      var template = _this.props.data.template || 'default';\n      var templateSchema = ((_config$blocks$blocks = config.blocks.blocksConfig.simpleDataConnectedTable) === null || _config$blocks$blocks === void 0 ? void 0 : (_config$blocks$blocks2 = _config$blocks$blocks.templates) === null || _config$blocks$blocks2 === void 0 ? void 0 : (_config$blocks$blocks3 = _config$blocks$blocks2[template]) === null || _config$blocks$blocks3 === void 0 ? void 0 : _config$blocks$blocks3.schema) || {};\n      var schema = SimpleDataTableSchema(config, templateSchema(config));\n      var provider_url = (_this$props$data = _this.props.data) === null || _this$props$data === void 0 ? void 0 : _this$props$data.provider_url;\n      var provider_data = provider_url ? _this.props.providers_data[provider_url] : '';\n      if (!provider_data) return schema;\n      var choices = Array.from(Object.keys(provider_data).sort()).map(function (n) {\n        return [n, n];\n      });\n      schema.properties.columns.schema.properties.column.choices = choices;\n      schema.properties.columns.schema.properties.column_link.choices = choices;\n      var map_provider_url = _this.props.data.popup_map_provider_url ? _this.props.data.popup_map_provider_url : '';\n      var table_provider_url = _this.props.data.popup_table_provider_url ? _this.props.data.popup_table_provider_url : '';\n      var map_provider_data = _this.props.providers_data && _this.props.providers_data[map_provider_url] ? _this.props.providers_data[map_provider_url] : '';\n      var table_provider_data = _this.props.providers_data && _this.props.providers_data[table_provider_url] ? _this.props.providers_data[table_provider_url] : '';\n      var mapChoices = map_provider_data ? Array.from(Object.keys(map_provider_data).sort()).map(function (n) {\n        return [n, n];\n      }) : [];\n      var tableChoices = table_provider_data ? Array.from(Object.keys(table_provider_data).sort()).map(function (n) {\n        return [n, n];\n      }) : [];\n      schema.properties.popup_data_query.choices = choices;\n      schema.properties.image_url.choices = choices;\n      schema.properties.popupTitle.choices = choices;\n      schema.properties.popupDescription.choices = choices;\n      schema.properties.popupUrl.choices = choices;\n      schema.properties.popupEmail.choices = choices;\n      schema.properties.defaultSortColumn.choices = choices;\n\n      //set choices for the popup table columns\n      schema.properties.popupTableColumns.schema.properties.column.choices = tableChoices;\n      schema.properties.popupTableColumns.schema.properties.column_link.choices = tableChoices;\n\n      //set choices for the popup map\n      schema.properties.popupLong.choices = mapChoices;\n      schema.properties.popupLat.choices = mapChoices;\n      // schema.properties.popupCountryCode.choices = mapChoices;\n      // schema.properties.popupMapLabel.choices = mapChoices;\n\n      return schema;\n    });\n    return _this;\n  }\n  _createClass(Edit, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var schema = this.getSchema();\n      return __jsx(React.Fragment, null, __jsx(SimpleDataTableView, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      })), __jsx(SidebarPortal, {\n        selected: this.props.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, __jsx(InlineForm, {\n        schema: this.getSchema(),\n        title: schema.title,\n        onChangeField: function onChangeField(id, value) {\n          _this2.props.onChangeBlock(_this2.props.block, _objectSpread(_objectSpread({}, _this2.props.data), {}, _defineProperty({}, id, value)));\n        },\n        formData: this.props.data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n  return Edit;\n}(Component);\nexport default compose(connectToMultipleProviders(function (props) {\n  var _props$data = props.data,\n    provider_url = _props$data.provider_url,\n    popup_map_provider_url = _props$data.popup_map_provider_url,\n    popup_table_provider_url = _props$data.popup_table_provider_url;\n  var providers = [{\n    provider_url: provider_url\n  }, {\n    provider_url: popup_map_provider_url\n  }, {\n    provider_url: popup_table_provider_url\n  }];\n  return {\n    providers: providers\n  };\n}))(Edit);","map":{"version":3,"names":["React","Component","compose","SidebarPortal","InlineForm","config","connectToMultipleProviders","SimpleDataTableSchema","SimpleDataTableView","Edit","template","props","data","templateSchema","blocks","blocksConfig","simpleDataConnectedTable","templates","schema","provider_url","provider_data","providers_data","choices","Array","from","Object","keys","sort","map","n","properties","columns","column","column_link","map_provider_url","popup_map_provider_url","table_provider_url","popup_table_provider_url","map_provider_data","table_provider_data","mapChoices","tableChoices","popup_data_query","image_url","popupTitle","popupDescription","popupUrl","popupEmail","defaultSortColumn","popupTableColumns","popupLong","popupLat","getSchema","selected","title","id","value","onChangeBlock","block","providers"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-forests-theme/src/components/manage/Blocks/SimpleDataTable/templates/expandable/Edit.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { SidebarPortal } from '@plone/volto/components'; // EditBlock\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\n\nimport config from '@plone/volto/registry';\n\nimport { connectToMultipleProviders } from '@eeacms/volto-datablocks/hocs';\n\nimport { SimpleDataTableSchema } from '@eeacms/volto-datablocks/components/manage/Blocks/SimpleDataTable/schema';\nimport { SimpleDataTableView } from '@eeacms/volto-datablocks/components/manage/Blocks/SimpleDataTable/View';\n\nclass Edit extends Component {\n  getSchema = () => {\n    const template = this.props.data.template || 'default';\n    const templateSchema =\n      config.blocks.blocksConfig.simpleDataConnectedTable?.templates?.[template]\n        ?.schema || {};\n\n    const schema = SimpleDataTableSchema(config, templateSchema(config));\n\n    const provider_url = this.props.data?.provider_url;\n    const provider_data = provider_url\n      ? this.props.providers_data[provider_url]\n      : '';\n\n    if (!provider_data) return schema;\n\n    const choices = Array.from(Object.keys(provider_data).sort()).map((n) => [\n      n,\n      n,\n    ]);\n\n    schema.properties.columns.schema.properties.column.choices = choices;\n    schema.properties.columns.schema.properties.column_link.choices = choices;\n\n    const map_provider_url = this.props.data.popup_map_provider_url\n      ? this.props.data.popup_map_provider_url\n      : '';\n    const table_provider_url = this.props.data.popup_table_provider_url\n      ? this.props.data.popup_table_provider_url\n      : '';\n\n    const map_provider_data =\n      this.props.providers_data && this.props.providers_data[map_provider_url]\n        ? this.props.providers_data[map_provider_url]\n        : '';\n\n    const table_provider_data =\n      this.props.providers_data && this.props.providers_data[table_provider_url]\n        ? this.props.providers_data[table_provider_url]\n        : '';\n\n    const mapChoices = map_provider_data\n      ? Array.from(Object.keys(map_provider_data).sort()).map((n) => [n, n])\n      : [];\n\n    const tableChoices = table_provider_data\n      ? Array.from(Object.keys(table_provider_data).sort()).map((n) => [n, n])\n      : [];\n    schema.properties.popup_data_query.choices = choices;\n\n    schema.properties.image_url.choices = choices;\n    schema.properties.popupTitle.choices = choices;\n    schema.properties.popupDescription.choices = choices;\n    schema.properties.popupUrl.choices = choices;\n    schema.properties.popupEmail.choices = choices;\n\n    schema.properties.defaultSortColumn.choices = choices;\n\n    //set choices for the popup table columns\n    schema.properties.popupTableColumns.schema.properties.column.choices = tableChoices;\n    schema.properties.popupTableColumns.schema.properties.column_link.choices = tableChoices;\n\n    //set choices for the popup map\n    schema.properties.popupLong.choices = mapChoices;\n    schema.properties.popupLat.choices = mapChoices;\n    // schema.properties.popupCountryCode.choices = mapChoices;\n    // schema.properties.popupMapLabel.choices = mapChoices;\n\n    return schema;\n  };\n\n  render() {\n    const schema = this.getSchema();\n    return (\n      <>\n        <SimpleDataTableView {...this.props} />\n\n        <SidebarPortal selected={this.props.selected}>\n          <InlineForm\n            schema={this.getSchema()}\n            title={schema.title}\n            onChangeField={(id, value) => {\n              this.props.onChangeBlock(this.props.block, {\n                ...this.props.data,\n                [id]: value,\n              });\n            }}\n            formData={this.props.data}\n          />\n        </SidebarPortal>\n      </>\n    );\n  }\n}\n\nexport default compose(\n  connectToMultipleProviders((props) => {\n    const {\n      provider_url,\n      popup_map_provider_url,\n      popup_table_provider_url,\n    } = props.data;\n    const providers = [\n      {\n        provider_url: provider_url,\n      },\n      { provider_url: popup_map_provider_url },\n      { provider_url: popup_table_provider_url },\n    ];\n    return { providers };\n  }),\n)(Edit);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}