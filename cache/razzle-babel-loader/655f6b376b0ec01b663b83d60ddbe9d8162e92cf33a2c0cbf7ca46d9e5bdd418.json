{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-widget-geolocation/src/components/manage/Widgets/SearchGeoName.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport InlineForm from './InlineForm';\nimport { Icon as VoltoIcon } from '@plone/volto/components';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport { GeoSearchSchema as schema } from './schema';\nimport ListResults from './ListResults';\nimport { getGeonameSettings } from '@eeacms/volto-widget-geolocation/actions';\nimport worldSVG from '@plone/volto/icons/world.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\nexport default _s(function (props) {\n  var _subrequest$geonamesU, _subrequest$geonamesU2, _subrequest$geonamesU3;\n  _s();\n  var id = props.id,\n    data = props.data,\n    block = props.block,\n    setPopup = props.setPopup,\n    onChange = props.onChange,\n    onChangeSchema = props.onChangeSchema;\n  var _React$useState = React.useState(data.geolocation),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    resultsValue = _React$useState2[0],\n    setResultsValue = _React$useState2[1];\n  var InlineFormSchema = schema(props);\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    searchUrl = _React$useState4[0],\n    setSearchUrl = _React$useState4[1];\n  var subrequest = useSelector(function (state) {\n    return state.content.subrequests;\n  }, shallowEqual);\n  var geonamesUrl = Object.keys(subrequest).find(function (item) {\n    return item === searchUrl;\n  });\n  var results = (_subrequest$geonamesU = subrequest[geonamesUrl]) === null || _subrequest$geonamesU === void 0 ? void 0 : (_subrequest$geonamesU2 = _subrequest$geonamesU.data) === null || _subrequest$geonamesU2 === void 0 ? void 0 : _subrequest$geonamesU2.geonames;\n  var loading = (_subrequest$geonamesU3 = subrequest[geonamesUrl]) === null || _subrequest$geonamesU3 === void 0 ? void 0 : _subrequest$geonamesU3.loading;\n  var dispatch = useDispatch();\n  var saveResultsValue = function saveResultsValue(item) {\n    setResultsValue(function (prevState) {\n      return [].concat(_toConsumableArray(prevState || []), [{\n        label: item.toponymName,\n        value: 'geo-' + item.geonameId\n      }]);\n    });\n  };\n  var changeTaglist = function changeTaglist(field, value) {\n    setResultsValue(function (prevState) {\n      return field ? field.map(function (item) {\n        return {\n          label: item.label,\n          value: item.value\n        };\n      }) : null;\n    });\n  };\n  //componentDidMount\n  React.useEffect(function () {\n    dispatch(getGeonameSettings());\n  }, [dispatch]);\n  var onChangeValues = React.useCallback(function (field, value) {\n    if (field === 'searchUrl') {\n      setSearchUrl(value);\n    } else if (onChangeSchema) {\n      onChangeSchema(field, value);\n    } else {\n      onChange(id, _objectSpread(_objectSpread({}, data), {}, _defineProperty({}, field, value))); //eea.coremetadata: As we don't have blocksData here\n    }\n  }, [onChangeSchema, onChange, data, id]);\n  return __jsx(InlineForm, _extends({\n    data: data,\n    schema: InlineFormSchema,\n    block: block,\n    setValue: changeTaglist,\n    value: resultsValue,\n    title: schema.title,\n    icon: __jsx(VoltoIcon, {\n      size: \"24px\",\n      name: worldSVG,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }),\n    onChangeField: function onChangeField(id, value) {\n      return onChangeValues(id, value);\n    },\n    headerActions: __jsx(React.Fragment, null, __jsx(\"button\", {\n      onClick: function onClick() {\n        onChange(id, Array.isArray(resultsValue) //eea.coremetadata behaviour #https://github.com/eea/eea.coremetadata/blob/develop/eea/coremetadata/interfaces.py#L130\n        ? {\n          geolocation: resultsValue\n        } : resultsValue);\n        setPopup(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, __jsx(VoltoIcon, {\n      size: \"24px\",\n      name: checkSVG,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    })), __jsx(\"button\", {\n      onClick: function onClick() {\n        setPopup(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, __jsx(VoltoIcon, {\n      size: \"24px\",\n      name: clearSVG,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }))),\n    footer: (results === null || results === void 0 ? void 0 : results.length) && __jsx(ListResults, {\n      results: results,\n      loading: loading,\n      setValue: saveResultsValue,\n      value: resultsValue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    })\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }));\n}, \"75/V/1ay1Ud0D2wVtAXBeNbCS3A=\", false, function () {\n  return [useSelector, useDispatch];\n});","map":{"version":3,"names":["React","InlineForm","Icon","VoltoIcon","useSelector","shallowEqual","useDispatch","GeoSearchSchema","schema","ListResults","getGeonameSettings","worldSVG","clearSVG","checkSVG","props","id","data","block","setPopup","onChange","onChangeSchema","useState","geolocation","resultsValue","setResultsValue","InlineFormSchema","searchUrl","setSearchUrl","subrequest","state","content","subrequests","geonamesUrl","Object","keys","find","item","results","geonames","loading","dispatch","saveResultsValue","prevState","label","toponymName","value","geonameId","changeTaglist","field","map","useEffect","onChangeValues","useCallback","title","Array","isArray","length"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-widget-geolocation/src/components/manage/Widgets/SearchGeoName.jsx"],"sourcesContent":["import React from 'react';\nimport InlineForm from './InlineForm';\nimport { Icon as VoltoIcon } from '@plone/volto/components';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\n\nimport { GeoSearchSchema as schema } from './schema';\nimport ListResults from './ListResults';\nimport { getGeonameSettings } from '@eeacms/volto-widget-geolocation/actions';\nimport worldSVG from '@plone/volto/icons/world.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\n\nexport default (props) => {\n  const { id, data, block, setPopup, onChange, onChangeSchema } = props;\n  const [resultsValue, setResultsValue] = React.useState(data.geolocation);\n  const InlineFormSchema = schema(props);\n  const [searchUrl, setSearchUrl] = React.useState('');\n  const subrequest = useSelector(\n    (state) => state.content.subrequests,\n    shallowEqual,\n  );\n  const geonamesUrl = Object.keys(subrequest).find(\n    (item) => item === searchUrl,\n  );\n  const results = subrequest[geonamesUrl]?.data?.geonames;\n  const loading = subrequest[geonamesUrl]?.loading;\n  const dispatch = useDispatch();\n\n  const saveResultsValue = (item) => {\n    setResultsValue((prevState) => [\n      ...(prevState || []),\n      {\n        label: item.toponymName,\n        value: 'geo-' + item.geonameId,\n      },\n    ]);\n  };\n\n  const changeTaglist = (field, value) => {\n    setResultsValue((prevState) =>\n      field\n        ? field.map((item) => ({\n            label: item.label,\n            value: item.value,\n          }))\n        : null,\n    );\n  };\n  //componentDidMount\n  React.useEffect(() => {\n    dispatch(getGeonameSettings());\n  }, [dispatch]);\n\n  const onChangeValues = React.useCallback(\n    (field, value) => {\n      if (field === 'searchUrl') {\n        setSearchUrl(value);\n      } else if (onChangeSchema) {\n        onChangeSchema(field, value);\n      } else {\n        onChange(id, { ...data, [field]: value }); //eea.coremetadata: As we don't have blocksData here\n      }\n    },\n    [onChangeSchema, onChange, data, id],\n  );\n  return (\n    <InlineForm\n      data={data}\n      schema={InlineFormSchema}\n      block={block}\n      setValue={changeTaglist}\n      value={resultsValue}\n      title={schema.title}\n      icon={<VoltoIcon size=\"24px\" name={worldSVG} />}\n      onChangeField={(id, value) => {\n        return onChangeValues(id, value);\n      }}\n      headerActions={\n        <>\n          <button\n            onClick={() => {\n              onChange(\n                id,\n                Array.isArray(resultsValue) //eea.coremetadata behaviour #https://github.com/eea/eea.coremetadata/blob/develop/eea/coremetadata/interfaces.py#L130\n                  ? { geolocation: resultsValue }\n                  : resultsValue,\n              );\n              setPopup(false);\n            }}\n          >\n            <VoltoIcon size=\"24px\" name={checkSVG} />\n          </button>\n          <button\n            onClick={() => {\n              setPopup(false);\n            }}\n          >\n            <VoltoIcon size=\"24px\" name={clearSVG} />\n          </button>\n        </>\n      }\n      footer={\n        results?.length && (\n          <ListResults\n            results={results}\n            loading={loading}\n            setValue={saveResultsValue}\n            value={resultsValue}\n          />\n        )\n      }\n      {...props}\n    />\n  );\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}