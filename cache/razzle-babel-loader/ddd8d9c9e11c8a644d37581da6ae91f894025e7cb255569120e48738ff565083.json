{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport * as slateReducers from './reducers';\nimport installSlate from './editor';\nimport installTextBlock from './blocks/Text';\nimport installTableBlock from './blocks/Table';\nimport RichTextWidget from './widgets/RichTextWidget';\nimport RichTextWidgetView from './widgets/RichTextWidgetView';\nimport HtmlSlateWidget from './widgets/HtmlSlateWidget';\nimport ObjectByTypeWidget from './widgets/ObjectByTypeWidget';\nexport default (config => {\n  var _config$widgets$views;\n  config = [installSlate, installTextBlock, installTableBlock].reduce((acc, apply) => apply(acc), config);\n  config.settings.defaultBlockType = 'slate';\n  config.settings.slate.toolbarButtons = ['bold', 'italic', 'strikethrough', 'link', 'separator', 'heading-two', 'heading-three', 'separator', 'sub', 'sup', 'separator', 'numbered-list', 'bulleted-list', 'blockquote', 'styleMenu'];\n  config.addonReducers = _objectSpread(_objectSpread({}, config.addonReducers), slateReducers);\n  config.views = _objectSpread({}, config.views);\n  config.widgets.widget.slate = RichTextWidget;\n  config.widgets.widget.slate_richtext = RichTextWidget;\n  config.widgets.widget.slate_html = HtmlSlateWidget;\n  config.widgets.widget.richtext = HtmlSlateWidget;\n  config.widgets.widget.object_by_type = ObjectByTypeWidget;\n\n  // volto-widgets-view\n  if ((_config$widgets$views = config.widgets.views) !== null && _config$widgets$views !== void 0 && _config$widgets$views.widget) {\n    config.widgets.views.widget.slate = RichTextWidgetView;\n    config.widgets.views.widget.slate_richtext = RichTextWidgetView;\n  }\n  return config;\n});","map":{"version":3,"names":["slateReducers","installSlate","installTextBlock","installTableBlock","RichTextWidget","RichTextWidgetView","HtmlSlateWidget","ObjectByTypeWidget","config","reduce","acc","apply","settings","defaultBlockType","slate","toolbarButtons","addonReducers","views","widgets","widget","slate_richtext","slate_html","richtext","object_by_type"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/packages/volto-slate/src/index.js"],"sourcesContent":["import * as slateReducers from './reducers';\n\nimport installSlate from './editor';\nimport installTextBlock from './blocks/Text';\nimport installTableBlock from './blocks/Table';\nimport RichTextWidget from './widgets/RichTextWidget';\nimport RichTextWidgetView from './widgets/RichTextWidgetView';\nimport HtmlSlateWidget from './widgets/HtmlSlateWidget';\nimport ObjectByTypeWidget from './widgets/ObjectByTypeWidget';\n\nexport default (config) => {\n  config = [installSlate, installTextBlock, installTableBlock].reduce(\n    (acc, apply) => apply(acc),\n    config,\n  );\n\n  config.settings.defaultBlockType = 'slate';\n\n  config.settings.slate.toolbarButtons = [\n    'bold',\n    'italic',\n    'strikethrough',\n    'link',\n    'separator',\n    'heading-two',\n    'heading-three',\n    'separator',\n    'sub',\n    'sup',\n    'separator',\n    'numbered-list',\n    'bulleted-list',\n    'blockquote',\n    'styleMenu',\n  ];\n\n  config.addonReducers = {\n    ...config.addonReducers,\n    ...slateReducers,\n  };\n\n  config.views = {\n    ...config.views,\n  };\n\n  config.widgets.widget.slate = RichTextWidget;\n  config.widgets.widget.slate_richtext = RichTextWidget;\n  config.widgets.widget.slate_html = HtmlSlateWidget;\n  config.widgets.widget.richtext = HtmlSlateWidget;\n  config.widgets.widget.object_by_type = ObjectByTypeWidget;\n\n  // volto-widgets-view\n  if (config.widgets.views?.widget) {\n    config.widgets.views.widget.slate = RichTextWidgetView;\n    config.widgets.views.widget.slate_richtext = RichTextWidgetView;\n  }\n\n  return config;\n};\n"],"mappings":";;;AAAA,OAAO,KAAKA,aAAa,MAAM,YAAY;AAE3C,OAAOC,YAAY,MAAM,UAAU;AACnC,OAAOC,gBAAgB,MAAM,eAAe;AAC5C,OAAOC,iBAAiB,MAAM,gBAAgB;AAC9C,OAAOC,cAAc,MAAM,0BAA0B;AACrD,OAAOC,kBAAkB,MAAM,8BAA8B;AAC7D,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAOC,kBAAkB,MAAM,8BAA8B;AAE7D,gBAAgBC,MAAM,IAAK;EAAA;EACzBA,MAAM,GAAG,CAACP,YAAY,EAAEC,gBAAgB,EAAEC,iBAAiB,CAAC,CAACM,MAAM,CACjE,CAACC,GAAG,EAAEC,KAAK,KAAKA,KAAK,CAACD,GAAG,CAAC,EAC1BF,MAAM,CACP;EAEDA,MAAM,CAACI,QAAQ,CAACC,gBAAgB,GAAG,OAAO;EAE1CL,MAAM,CAACI,QAAQ,CAACE,KAAK,CAACC,cAAc,GAAG,CACrC,MAAM,EACN,QAAQ,EACR,eAAe,EACf,MAAM,EACN,WAAW,EACX,aAAa,EACb,eAAe,EACf,WAAW,EACX,KAAK,EACL,KAAK,EACL,WAAW,EACX,eAAe,EACf,eAAe,EACf,YAAY,EACZ,WAAW,CACZ;EAEDP,MAAM,CAACQ,aAAa,mCACfR,MAAM,CAACQ,aAAa,GACpBhB,aAAa,CACjB;EAEDQ,MAAM,CAACS,KAAK,qBACPT,MAAM,CAACS,KAAK,CAChB;EAEDT,MAAM,CAACU,OAAO,CAACC,MAAM,CAACL,KAAK,GAAGV,cAAc;EAC5CI,MAAM,CAACU,OAAO,CAACC,MAAM,CAACC,cAAc,GAAGhB,cAAc;EACrDI,MAAM,CAACU,OAAO,CAACC,MAAM,CAACE,UAAU,GAAGf,eAAe;EAClDE,MAAM,CAACU,OAAO,CAACC,MAAM,CAACG,QAAQ,GAAGhB,eAAe;EAChDE,MAAM,CAACU,OAAO,CAACC,MAAM,CAACI,cAAc,GAAGhB,kBAAkB;;EAEzD;EACA,6BAAIC,MAAM,CAACU,OAAO,CAACD,KAAK,kDAApB,sBAAsBE,MAAM,EAAE;IAChCX,MAAM,CAACU,OAAO,CAACD,KAAK,CAACE,MAAM,CAACL,KAAK,GAAGT,kBAAkB;IACtDG,MAAM,CAACU,OAAO,CAACD,KAAK,CAACE,MAAM,CAACC,cAAc,GAAGf,kBAAkB;EACjE;EAEA,OAAOG,MAAM;AACf,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}