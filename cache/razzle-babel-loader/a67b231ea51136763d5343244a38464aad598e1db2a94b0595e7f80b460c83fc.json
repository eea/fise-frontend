{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/manage/Blocks/SourcesBlock/Edit.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React, { useState } from 'react';\nimport { Button, Form, Grid, Accordion } from 'semantic-ui-react';\nimport { Field, Icon, TextWidget } from '@plone/volto/components';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nconst SourceEdit = ({\n  data,\n  onChangeBlock,\n  block\n}) => {\n  const {\n    0: activeAccIndex,\n    1: setActiveAccIndex\n  } = useState(0);\n  function handleAccClick(e, titleProps) {\n    const {\n      index\n    } = titleProps;\n    const newIndex = activeAccIndex === index ? -1 : index;\n    setActiveAccIndex(newIndex);\n  }\n  return __jsx(Accordion, {\n    fluid: true,\n    styled: true,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Accordion.Title, {\n    active: activeAccIndex === 0,\n    index: 0,\n    onClick: handleAccClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Sources\", activeAccIndex === 0 ? __jsx(Icon, {\n    name: upSVG,\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }) : __jsx(Icon, {\n    name: downSVG,\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  })), __jsx(Accordion.Content, {\n    active: activeAccIndex === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, data.chartSources && data.chartSources.length ? data.chartSources.map((item, index) => __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, __jsx(TextWidget, {\n    title: \"Source\",\n    id: `chart-source_${index}`,\n    type: \"text\",\n    value: item.chart_source,\n    required: false,\n    onChange: (e, d) => {\n      const dataClone = JSON.parse(JSON.stringify(data.chartSources));\n      dataClone[index].chart_source = d;\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        chartSources: dataClone\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), __jsx(TextWidget, {\n    title: \"Source Link\",\n    id: `chart-source_link_${index}`,\n    type: \"text\",\n    value: item.chart_source_link,\n    required: false,\n    onChange: (e, d) => {\n      const dataClone = JSON.parse(JSON.stringify(data.chartSources));\n      dataClone[index].chart_source_link = d;\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        chartSources: dataClone\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }))) : '', __jsx(Form.Field, {\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, __jsx(Grid.Row, {\n    stretched: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(Grid.Column, {\n    stretched: true,\n    columns: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    primary: true,\n    onClick: () => {\n      const chartSources = data.chartSources && data.chartSources.length ? JSON.parse(JSON.stringify(data.chartSources)) : [];\n      chartSources.push({\n        chart_source_link: '',\n        chart_source: ''\n      });\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        chartSources: chartSources\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, \"Add source\"))))))), __jsx(Accordion.Title, {\n    active: activeAccIndex === 1,\n    index: 1,\n    onClick: handleAccClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Source (legacy)\", activeAccIndex === 1 ? __jsx(Icon, {\n    name: upSVG,\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }) : __jsx(Icon, {\n    name: downSVG,\n    size: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), __jsx(Accordion.Content, {\n    active: activeAccIndex === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, __jsx(Field, {\n    title: \"Source\",\n    id: \"chart-source\",\n    type: \"text\",\n    value: data.chart_source || '',\n    required: false,\n    onChange: (e, d) => onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n      chart_source: d\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), __jsx(Field, {\n    title: \"Source Link\",\n    id: \"chart-source-link\",\n    type: \"text\",\n    value: data.chart_source_link || '',\n    required: false,\n    onChange: (e, d) => onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n      chart_source_link: d\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })));\n};\nexport default SourceEdit;","map":{"version":3,"names":["React","useState","Button","Form","Grid","Accordion","Field","Icon","TextWidget","upSVG","downSVG","SourceEdit","data","onChangeBlock","block","activeAccIndex","setActiveAccIndex","handleAccClick","e","titleProps","index","newIndex","chartSources","length","map","item","chart_source","d","dataClone","JSON","parse","stringify","chart_source_link","push"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/manage/Blocks/SourcesBlock/Edit.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, Grid, Accordion } from 'semantic-ui-react';\nimport { Field, Icon, TextWidget } from '@plone/volto/components';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport downSVG from '@plone/volto/icons/down-key.svg';\n\nconst SourceEdit = ({ data, onChangeBlock, block }) => {\n  const [activeAccIndex, setActiveAccIndex] = useState(0);\n\n  function handleAccClick(e, titleProps) {\n    const { index } = titleProps;\n    const newIndex = activeAccIndex === index ? -1 : index;\n\n    setActiveAccIndex(newIndex);\n  }\n\n  return (\n    <Accordion fluid styled className=\"form\">\n      <Accordion.Title\n        active={activeAccIndex === 0}\n        index={0}\n        onClick={handleAccClick}\n      >\n        Sources\n        {activeAccIndex === 0 ? (\n          <Icon name={upSVG} size=\"20px\" />\n        ) : (\n          <Icon name={downSVG} size=\"20px\" />\n        )}\n      </Accordion.Title>\n      <Accordion.Content active={activeAccIndex === 0}>\n        {data.chartSources && data.chartSources.length\n          ? data.chartSources.map((item, index) => (\n              <React.Fragment>\n                <TextWidget\n                  title=\"Source\"\n                  id={`chart-source_${index}`}\n                  type=\"text\"\n                  value={item.chart_source}\n                  required={false}\n                  onChange={(e, d) => {\n                    const dataClone = JSON.parse(\n                      JSON.stringify(data.chartSources),\n                    );\n                    dataClone[index].chart_source = d;\n                    onChangeBlock(block, {\n                      ...data,\n                      chartSources: dataClone,\n                    });\n                  }}\n                />\n                <TextWidget\n                  title=\"Source Link\"\n                  id={`chart-source_link_${index}`}\n                  type=\"text\"\n                  value={item.chart_source_link}\n                  required={false}\n                  onChange={(e, d) => {\n                    const dataClone = JSON.parse(\n                      JSON.stringify(data.chartSources),\n                    );\n                    dataClone[index].chart_source_link = d;\n                    onChangeBlock(block, {\n                      ...data,\n                      chartSources: dataClone,\n                    });\n                  }}\n                />\n              </React.Fragment>\n            ))\n          : ''}\n\n        <Form.Field inline>\n          <Grid>\n            <Grid.Row stretched>\n              <Grid.Column stretched columns={12}>\n                <div className=\"wrapper\">\n                  <Button\n                    primary\n                    onClick={() => {\n                      const chartSources =\n                        data.chartSources && data.chartSources.length\n                          ? JSON.parse(JSON.stringify(data.chartSources))\n                          : [];\n                      chartSources.push({\n                        chart_source_link: '',\n                        chart_source: '',\n                      });\n                      onChangeBlock(block, {\n                        ...data,\n                        chartSources: chartSources,\n                      });\n                    }}\n                  >\n                    Add source\n                  </Button>\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Form.Field>\n      </Accordion.Content>\n\n      <Accordion.Title\n        active={activeAccIndex === 1}\n        index={1}\n        onClick={handleAccClick}\n      >\n        Source (legacy)\n        {activeAccIndex === 1 ? (\n          <Icon name={upSVG} size=\"20px\" />\n        ) : (\n          <Icon name={downSVG} size=\"20px\" />\n        )}\n      </Accordion.Title>\n      <Accordion.Content active={activeAccIndex === 1}>\n        <Field\n          title=\"Source\"\n          id=\"chart-source\"\n          type=\"text\"\n          value={data.chart_source || ''}\n          required={false}\n          onChange={(e, d) =>\n            onChangeBlock(block, {\n              ...data,\n              chart_source: d,\n            })\n          }\n        />\n        <Field\n          title=\"Source Link\"\n          id=\"chart-source-link\"\n          type=\"text\"\n          value={data.chart_source_link || ''}\n          required={false}\n          onChange={(e, d) =>\n            onChangeBlock(block, {\n              ...data,\n              chart_source_link: d,\n            })\n          }\n        />\n      </Accordion.Content>\n    </Accordion>\n  );\n};\n\nexport default SourceEdit;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}