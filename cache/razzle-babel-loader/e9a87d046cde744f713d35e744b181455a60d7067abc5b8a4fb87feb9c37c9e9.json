{"ast":null,"code":"import _map from \"lodash/map\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/ToC/variations/HorizontalMenu.jsx\";\nvar __jsx = React.createElement;\n/**\n * View toc block.\n * @module components/manage/Blocks/ToC/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Menu } from 'semantic-ui-react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nconst RenderMenuItems = ({\n  items\n}) => {\n  return _map(items, item => {\n    var _item$items;\n    const {\n      id,\n      level,\n      title\n    } = item;\n    return item && __jsx(React.Fragment, {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, __jsx(Menu.Item, {\n      className: `headline-${level}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, __jsx(AnchorLink, {\n      href: `#${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, title)), ((_item$items = item.items) === null || _item$items === void 0 ? void 0 : _item$items.length) > 0 && __jsx(RenderMenuItems, {\n      items: item.items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 38\n      }\n    }));\n  });\n};\n\n/**\n * View toc block class.\n * @class View\n * @extends Component\n */\nconst View = ({\n  data,\n  tocEntries\n}) => {\n  return __jsx(React.Fragment, null, data.title && !data.hide_title ? __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, data.title || __jsx(FormattedMessage, {\n    id: \"Table of Contents\",\n    defaultMessage: \"Table of Contents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })) : '', __jsx(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(RenderMenuItems, {\n    items: tocEntries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })));\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default injectIntl(View);","map":{"version":3,"names":["React","PropTypes","Menu","FormattedMessage","injectIntl","AnchorLink","RenderMenuItems","items","item","id","level","title","length","View","data","tocEntries","hide_title","propTypes","properties","objectOf","any","isRequired"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/ToC/variations/HorizontalMenu.jsx"],"sourcesContent":["/**\n * View toc block.\n * @module components/manage/Blocks/ToC/View\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { map } from 'lodash';\nimport { Menu } from 'semantic-ui-react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\n\nconst RenderMenuItems = ({ items }) => {\n  return map(items, (item) => {\n    const { id, level, title } = item;\n    return (\n      item && (\n        <React.Fragment key={id}>\n          <Menu.Item className={`headline-${level}`}>\n            <AnchorLink href={`#${id}`}>{title}</AnchorLink>\n          </Menu.Item>\n          {item.items?.length > 0 && <RenderMenuItems items={item.items} />}\n        </React.Fragment>\n      )\n    );\n  });\n};\n\n/**\n * View toc block class.\n * @class View\n * @extends Component\n */\nconst View = ({ data, tocEntries }) => {\n  return (\n    <>\n      {data.title && !data.hide_title ? (\n        <h2>\n          {data.title || (\n            <FormattedMessage\n              id=\"Table of Contents\"\n              defaultMessage=\"Table of Contents\"\n            />\n          )}\n        </h2>\n      ) : (\n        ''\n      )}\n      <Menu>\n        <RenderMenuItems items={tocEntries} />\n      </Menu>\n    </>\n  );\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default injectIntl(View);\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,gBAAgB,EAAEC,UAAU,QAAQ,YAAY;AACzD,OAAOC,UAAU,MAAM,iCAAiC;AAExD,MAAMC,eAAe,GAAG,CAAC;EAAEC;AAAM,CAAC,KAAK;EACrC,OAAO,KAAIA,KAAK,EAAGC,IAAI,IAAK;IAAA;IAC1B,MAAM;MAAEC,EAAE;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAGH,IAAI;IACjC,OACEA,IAAI,IACF,MAAC,KAAK,CAAC,QAAQ;MAAC,GAAG,EAAEC,EAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACtB,MAAC,IAAI,CAAC,IAAI;MAAC,SAAS,EAAG,YAAWC,KAAM,EAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACxC,MAAC,UAAU;MAAC,IAAI,EAAG,IAAGD,EAAG,EAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAEE,KAAK,CAAc,CACtC,EACX,gBAAAH,IAAI,CAACD,KAAK,gDAAV,YAAYK,MAAM,IAAG,CAAC,IAAI,MAAC,eAAe;MAAC,KAAK,EAAEJ,IAAI,CAACD,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CAEpE;EAEL,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMM,IAAI,GAAG,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,KAAK;EACrC,OACE,4BACGD,IAAI,CAACH,KAAK,IAAI,CAACG,IAAI,CAACE,UAAU,GAC7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGF,IAAI,CAACH,KAAK,IACT,MAAC,gBAAgB;IACf,EAAE,EAAC,mBAAmB;IACtB,cAAc,EAAC,mBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAErC,CACE,GAEL,EACD,EACD,MAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACH,MAAC,eAAe;IAAC,KAAK,EAAEI,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACjC,CACN;AAEP,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAF,IAAI,CAACI,SAAS,GAAG;EACfC,UAAU,EAAEjB,SAAS,CAACkB,QAAQ,CAAClB,SAAS,CAACmB,GAAG,CAAC,CAACC;AAChD,CAAC;AAED,eAAejB,UAAU,CAACS,IAAI,CAAC"},"metadata":{"react-intl":{"messages":[{"id":"Table of Contents","defaultMessage":"Table of Contents"}]}},"sourceType":"module","externalDependencies":[]}