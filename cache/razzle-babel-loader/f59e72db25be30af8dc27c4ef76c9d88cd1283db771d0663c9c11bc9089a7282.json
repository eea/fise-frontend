{"ast":null,"code":"const TableOfContentsSchema = ({\n  data\n}) => {\n  const {\n    variation = 'default'\n  } = data;\n  return {\n    title: 'Table of Contents',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['title', 'hide_title', ...(variation === 'default' ? ['ordered'] : []), 'levels']\n    }],\n    properties: {\n      title: {\n        title: 'Block title'\n      },\n      hide_title: {\n        title: 'Hide title',\n        type: 'boolean'\n      },\n      levels: {\n        title: 'Entries',\n        isMulti: true,\n        choices: [['h1', 'h1'], ['h2', 'h2'], ['h3', 'h3'], ['h4', 'h4'], ['h5', 'h5'], ['h6', 'h6']]\n      },\n      ordered: {\n        title: 'Ordered',\n        type: 'boolean'\n      }\n    },\n    required: []\n  };\n};\nexport default TableOfContentsSchema;","map":{"version":3,"names":["TableOfContentsSchema","data","variation","title","fieldsets","id","fields","properties","hide_title","type","levels","isMulti","choices","ordered","required"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/ToC/Schema.jsx"],"sourcesContent":["const TableOfContentsSchema = ({ data }) => {\n  const { variation = 'default' } = data;\n\n  return {\n    title: 'Table of Contents',\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: [\n          'title',\n          'hide_title',\n          ...(variation === 'default' ? ['ordered'] : []),\n          'levels',\n        ],\n      },\n    ],\n    properties: {\n      title: {\n        title: 'Block title',\n      },\n      hide_title: {\n        title: 'Hide title',\n        type: 'boolean',\n      },\n      levels: {\n        title: 'Entries',\n        isMulti: true,\n        choices: [\n          ['h1', 'h1'],\n          ['h2', 'h2'],\n          ['h3', 'h3'],\n          ['h4', 'h4'],\n          ['h5', 'h5'],\n          ['h6', 'h6'],\n        ],\n      },\n      ordered: {\n        title: 'Ordered',\n        type: 'boolean',\n      },\n    },\n    required: [],\n  };\n};\n\nexport default TableOfContentsSchema;\n"],"mappings":"AAAA,MAAMA,qBAAqB,GAAG,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC1C,MAAM;IAAEC,SAAS,GAAG;EAAU,CAAC,GAAGD,IAAI;EAEtC,OAAO;IACLE,KAAK,EAAE,mBAAmB;IAC1BC,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbF,KAAK,EAAE,SAAS;MAChBG,MAAM,EAAE,CACN,OAAO,EACP,YAAY,EACZ,IAAIJ,SAAS,KAAK,SAAS,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAC/C,QAAQ;IAEZ,CAAC,CACF;IACDK,UAAU,EAAE;MACVJ,KAAK,EAAE;QACLA,KAAK,EAAE;MACT,CAAC;MACDK,UAAU,EAAE;QACVL,KAAK,EAAE,YAAY;QACnBM,IAAI,EAAE;MACR,CAAC;MACDC,MAAM,EAAE;QACNP,KAAK,EAAE,SAAS;QAChBQ,OAAO,EAAE,IAAI;QACbC,OAAO,EAAE,CACP,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC;MAEhB,CAAC;MACDC,OAAO,EAAE;QACPV,KAAK,EAAE,SAAS;QAChBM,IAAI,EAAE;MACR;IACF,CAAC;IACDK,QAAQ,EAAE;EACZ,CAAC;AACH,CAAC;AAED,eAAed,qBAAqB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}