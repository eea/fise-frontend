{"ast":null,"code":"import _map from \"lodash/map\";\nimport _isEmpty from \"lodash/isEmpty\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Contents/ContentsPropertiesModal.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Contents properties modal.\n * @module components/manage/Contents/ContentsPropertiesModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { updateContent } from '@plone/volto/actions';\nimport { ModalForm } from '@plone/volto/components';\nconst messages = defineMessages({\n  properties: {\n    \"id\": \"Properties\",\n    \"defaultMessage\": \"Properties\"\n  },\n  default: {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  effectiveTitle: {\n    \"id\": \"Publishing Date\",\n    \"defaultMessage\": \"Publishing Date\"\n  },\n  effectiveDescription: {\n    \"id\": \"If this date is in the future, the content will not show up in listings and searches until this date.\",\n    \"defaultMessage\": \"If this date is in the future, the content will not show up in listings and searches until this date.\"\n  },\n  expiresTitle: {\n    \"id\": \"Expiration Date\",\n    \"defaultMessage\": \"Expiration Date\"\n  },\n  expiresDescription: {\n    \"id\": \"When this date is reached, the content will nolonger be visible in listings and searches.\",\n    \"defaultMessage\": \"When this date is reached, the content will nolonger be visible in listings and searches.\"\n  },\n  rightsTitle: {\n    \"id\": \"Rights\",\n    \"defaultMessage\": \"Rights\"\n  },\n  rightsDescription: {\n    \"id\": \"Copyright statement or other rights information on this item.\",\n    \"defaultMessage\": \"Copyright statement or other rights information on this item.\"\n  },\n  creatorsTitle: {\n    \"id\": \"Creators\",\n    \"defaultMessage\": \"Creators\"\n  },\n  creatorsDescription: {\n    \"id\": \"Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.\",\n    \"defaultMessage\": \"Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.\"\n  },\n  excludeFromNavTitle: {\n    \"id\": \"Exclude from navigation\",\n    \"defaultMessage\": \"Exclude from navigation\"\n  },\n  excludeFromNavDescription: {\n    \"id\": \"If selected, this item will not appear in the navigation tree\",\n    \"defaultMessage\": \"If selected, this item will not appear in the navigation tree\"\n  },\n  yes: {\n    \"id\": \"Yes\",\n    \"defaultMessage\": \"Yes\"\n  },\n  no: {\n    \"id\": \"No\",\n    \"defaultMessage\": \"No\"\n  }\n});\n\n/**\n * ContentsPropertiesModal class.\n * @class ContentsPropertiesModal\n * @extends Component\n */\nclass ContentsPropertiesModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} data Form data\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    if (_isEmpty(data)) {\n      this.props.onOk();\n    } else {\n      this.props.updateContent(this.props.items, _map(this.props.items, () => data));\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return this.props.open && __jsx(ModalForm, {\n      open: this.props.open,\n      onSubmit: this.onSubmit,\n      onCancel: this.props.onCancel,\n      title: this.props.intl.formatMessage(messages.properties),\n      schema: {\n        fieldsets: [{\n          id: 'default',\n          title: this.props.intl.formatMessage(messages.default),\n          fields: ['effective', 'expires', 'rights', 'creators', 'exclude_from_nav']\n        }],\n        properties: {\n          effective: {\n            description: this.props.intl.formatMessage(messages.effectiveDescription),\n            title: this.props.intl.formatMessage(messages.effectiveTitle),\n            type: 'string',\n            widget: 'datetime'\n          },\n          expires: {\n            description: this.props.intl.formatMessage(messages.expiresDescription),\n            title: this.props.intl.formatMessage(messages.expiresTitle),\n            type: 'string',\n            widget: 'datetime'\n          },\n          rights: {\n            description: this.props.intl.formatMessage(messages.rightsDescription),\n            title: this.props.intl.formatMessage(messages.rightsTitle),\n            type: 'string',\n            widget: 'textarea'\n          },\n          creators: {\n            description: this.props.intl.formatMessage(messages.creatorsDescription),\n            title: this.props.intl.formatMessage(messages.creatorsTitle),\n            type: 'array'\n          },\n          exclude_from_nav: {\n            description: this.props.intl.formatMessage(messages.excludeFromNavDescription),\n            title: this.props.intl.formatMessage(messages.excludeFromNavTitle),\n            type: 'array',\n            choices: [[true, this.props.intl.formatMessage(messages.yes)], [false, this.props.intl.formatMessage(messages.no)]]\n          }\n        },\n        required: []\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    });\n  }\n}\n_defineProperty(ContentsPropertiesModal, \"propTypes\", {\n  updateContent: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  request: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  open: PropTypes.bool.isRequired,\n  onOk: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect(state => ({\n  request: state.content.update\n}), {\n  updateContent\n}))(ContentsPropertiesModal);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","defineMessages","injectIntl","updateContent","ModalForm","messages","properties","default","effectiveTitle","effectiveDescription","expiresTitle","expiresDescription","rightsTitle","rightsDescription","creatorsTitle","creatorsDescription","excludeFromNavTitle","excludeFromNavDescription","yes","no","ContentsPropertiesModal","constructor","props","onSubmit","bind","UNSAFE_componentWillReceiveProps","nextProps","request","loading","loaded","onOk","data","items","render","open","onCancel","intl","formatMessage","fieldsets","id","title","fields","effective","description","type","widget","expires","rights","creators","exclude_from_nav","choices","required","func","isRequired","arrayOf","string","shape","bool","state","content","update"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Contents/ContentsPropertiesModal.jsx"],"sourcesContent":["/**\n * Contents properties modal.\n * @module components/manage/Contents/ContentsPropertiesModal\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { isEmpty, map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { updateContent } from '@plone/volto/actions';\nimport { ModalForm } from '@plone/volto/components';\n\nconst messages = defineMessages({\n  properties: {\n    id: 'Properties',\n    defaultMessage: 'Properties',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  effectiveTitle: {\n    id: 'Publishing Date',\n    defaultMessage: 'Publishing Date',\n  },\n  effectiveDescription: {\n    id:\n      'If this date is in the future, the content will not show up in listings and searches until this date.',\n    defaultMessage:\n      'If this date is in the future, the content will not show up in listings and searches until this date.',\n  },\n  expiresTitle: {\n    id: 'Expiration Date',\n    defaultMessage: 'Expiration Date',\n  },\n  expiresDescription: {\n    id:\n      'When this date is reached, the content will nolonger be visible in listings and searches.',\n    defaultMessage:\n      'When this date is reached, the content will nolonger be visible in listings and searches.',\n  },\n  rightsTitle: {\n    id: 'Rights',\n    defaultMessage: 'Rights',\n  },\n  rightsDescription: {\n    id: 'Copyright statement or other rights information on this item.',\n    defaultMessage:\n      'Copyright statement or other rights information on this item.',\n  },\n  creatorsTitle: {\n    id: 'Creators',\n    defaultMessage: 'Creators',\n  },\n  creatorsDescription: {\n    id:\n      'Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.',\n    defaultMessage:\n      'Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.',\n  },\n  excludeFromNavTitle: {\n    id: 'Exclude from navigation',\n    defaultMessage: 'Exclude from navigation',\n  },\n  excludeFromNavDescription: {\n    id: 'If selected, this item will not appear in the navigation tree',\n    defaultMessage:\n      'If selected, this item will not appear in the navigation tree',\n  },\n  yes: {\n    id: 'Yes',\n    defaultMessage: 'Yes',\n  },\n  no: {\n    id: 'No',\n    defaultMessage: 'No',\n  },\n});\n\n/**\n * ContentsPropertiesModal class.\n * @class ContentsPropertiesModal\n * @extends Component\n */\nclass ContentsPropertiesModal extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    updateContent: PropTypes.func.isRequired,\n    items: PropTypes.arrayOf(PropTypes.string).isRequired,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    open: PropTypes.bool.isRequired,\n    onOk: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsUploadModal\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.request.loading && nextProps.request.loaded) {\n      this.props.onOk();\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} data Form data\n   * @returns {undefined}\n   */\n  onSubmit(data) {\n    if (isEmpty(data)) {\n      this.props.onOk();\n    } else {\n      this.props.updateContent(\n        this.props.items,\n        map(this.props.items, () => data),\n      );\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      this.props.open && (\n        <ModalForm\n          open={this.props.open}\n          onSubmit={this.onSubmit}\n          onCancel={this.props.onCancel}\n          title={this.props.intl.formatMessage(messages.properties)}\n          schema={{\n            fieldsets: [\n              {\n                id: 'default',\n                title: this.props.intl.formatMessage(messages.default),\n                fields: [\n                  'effective',\n                  'expires',\n                  'rights',\n                  'creators',\n                  'exclude_from_nav',\n                ],\n              },\n            ],\n            properties: {\n              effective: {\n                description: this.props.intl.formatMessage(\n                  messages.effectiveDescription,\n                ),\n                title: this.props.intl.formatMessage(messages.effectiveTitle),\n                type: 'string',\n                widget: 'datetime',\n              },\n              expires: {\n                description: this.props.intl.formatMessage(\n                  messages.expiresDescription,\n                ),\n                title: this.props.intl.formatMessage(messages.expiresTitle),\n                type: 'string',\n                widget: 'datetime',\n              },\n              rights: {\n                description: this.props.intl.formatMessage(\n                  messages.rightsDescription,\n                ),\n                title: this.props.intl.formatMessage(messages.rightsTitle),\n                type: 'string',\n                widget: 'textarea',\n              },\n              creators: {\n                description: this.props.intl.formatMessage(\n                  messages.creatorsDescription,\n                ),\n                title: this.props.intl.formatMessage(messages.creatorsTitle),\n                type: 'array',\n              },\n              exclude_from_nav: {\n                description: this.props.intl.formatMessage(\n                  messages.excludeFromNavDescription,\n                ),\n                title: this.props.intl.formatMessage(\n                  messages.excludeFromNavTitle,\n                ),\n                type: 'array',\n                choices: [\n                  [true, this.props.intl.formatMessage(messages.yes)],\n                  [false, this.props.intl.formatMessage(messages.no)],\n                ],\n              },\n            },\n            required: [],\n          }}\n        />\n      )\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      request: state.content.update,\n    }),\n    { updateContent },\n  ),\n)(ContentsPropertiesModal);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Properties","defaultMessage":"Properties"},{"id":"Default","defaultMessage":"Default"},{"id":"Publishing Date","defaultMessage":"Publishing Date"},{"id":"If this date is in the future, the content will not show up in listings and searches until this date.","defaultMessage":"If this date is in the future, the content will not show up in listings and searches until this date."},{"id":"Expiration Date","defaultMessage":"Expiration Date"},{"id":"When this date is reached, the content will nolonger be visible in listings and searches.","defaultMessage":"When this date is reached, the content will nolonger be visible in listings and searches."},{"id":"Rights","defaultMessage":"Rights"},{"id":"Copyright statement or other rights information on this item.","defaultMessage":"Copyright statement or other rights information on this item."},{"id":"Creators","defaultMessage":"Creators"},{"id":"Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first.","defaultMessage":"Persons responsible for creating the content of this item. Please enter a list of user names, one per line. The principal creator should come first."},{"id":"Exclude from navigation","defaultMessage":"Exclude from navigation"},{"id":"If selected, this item will not appear in the navigation tree","defaultMessage":"If selected, this item will not appear in the navigation tree"},{"id":"Yes","defaultMessage":"Yes"},{"id":"No","defaultMessage":"No"}]}},"sourceType":"module","externalDependencies":[]}