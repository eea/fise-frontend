{"ast":null,"code":"const _excluded = [\"children\"],\n  _excluded2 = [\"children\"];\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/blocks/Title/TitleBlockEdit.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/**\n * Edit title/description block.\n * @module volto-slate/blocks/Title/TitleBlockEdit\n */\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Editor, Node, Transforms, Range, createEditor } from 'slate';\nimport { ReactEditor, Editable, Slate, withReact } from 'slate-react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\nimport { P } from 'volto-slate/constants';\nimport cx from 'classnames';\nconst messages = defineMessages({\n  description: {\n    \"id\": \"Add a description\\u2026\",\n    \"defaultMessage\": \"Add a description\\u2026\"\n  },\n  title: {\n    \"id\": \"Type the title\\u2026\",\n    \"defaultMessage\": \"Type the title\\u2026\"\n  }\n});\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\n/**\n * Edit title block component.\n * @class TitleBlockEdit\n * @extends Component\n */\nexport const TitleBlockEdit = props => {\n  const {\n    onDeleteBlock,\n    selected,\n    index,\n    onChangeField,\n    onSelectBlock,\n    onAddBlock,\n    onFocusPreviousBlock,\n    onFocusNextBlock,\n    block,\n    blockNode,\n    className,\n    formFieldName,\n    properties,\n    metadata,\n    data,\n    detached,\n    editable\n  } = props;\n  const {\n    0: editor\n  } = useState(withReact(createEditor()));\n  const {\n    0: initialValue\n  } = useState([{\n    type: P,\n    children: [{\n      text: (metadata === null || metadata === void 0 ? void 0 : metadata[formFieldName]) || (properties === null || properties === void 0 ? void 0 : properties[formFieldName]) || ''\n    }]\n  }]);\n  const intl = useIntl();\n  const prevSelected = usePrevious(selected);\n  const text = useMemo(() => (metadata === null || metadata === void 0 ? void 0 : metadata[formFieldName]) || (properties === null || properties === void 0 ? void 0 : properties[formFieldName]) || '', [metadata, properties, formFieldName]);\n  const placeholder = useMemo(() => data.placeholder || intl.formatMessage(messages[formFieldName]), [data.placeholder, formFieldName, intl]);\n  const disableNewBlocks = useMemo(() => detached, [detached]);\n  const TitleOrDescription = useMemo(() => {\n    let TitleOrDescription;\n    if (formFieldName === 'title') {\n      TitleOrDescription = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n        let {\n            children\n          } = _ref,\n          rest = _objectWithoutProperties(_ref, _excluded);\n        return __jsx(\"h1\", _extends({}, rest, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }\n        }), children);\n      });\n    } else {\n      TitleOrDescription = /*#__PURE__*/React.forwardRef((_ref2, ref) => {\n        let {\n            children\n          } = _ref2,\n          rest = _objectWithoutProperties(_ref2, _excluded2);\n        return __jsx(\"div\", _extends({}, rest, {\n          ref: ref,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 9\n          }\n        }), children);\n      });\n    }\n    return TitleOrDescription;\n  }, [formFieldName]);\n  useEffect(() => {\n    if (!prevSelected && selected) {\n      if (editor.selection && Range.isCollapsed(editor.selection)) {\n        // keep selection\n        ReactEditor.focus(editor);\n      } else {\n        // nothing is selected, move focus to end\n        ReactEditor.focus(editor);\n        Transforms.select(editor, Editor.end(editor, []));\n      }\n    }\n  }, [prevSelected, selected, editor]);\n  useEffect(() => {\n    // undo/redo handler\n    const oldText = Node.string(editor);\n    if (oldText !== text) {\n      Transforms.insertText(editor, text, {\n        at: [0, 0]\n      });\n    }\n  }, [editor, text]);\n  const handleChange = useCallback(() => {\n    const newText = Node.string(editor);\n    if (newText !== text) {\n      onChangeField(formFieldName, newText);\n    }\n  }, [editor, formFieldName, onChangeField, text]);\n  const handleKeyDown = useCallback(ev => {\n    if (formFieldName === 'description' && ev.key === 'Backspace' && Node.string(editor).length === 0) {\n      ev.preventDefault();\n      onDeleteBlock(block, true);\n    } else if (ev.key === 'Return' || ev.key === 'Enter') {\n      ev.preventDefault();\n      if (!disableNewBlocks) {\n        onSelectBlock(onAddBlock(config.settings.defaultBlockType, index + 1));\n      }\n    } else if (ev.key === 'ArrowUp') {\n      ev.preventDefault();\n      onFocusPreviousBlock(block, blockNode.current);\n    } else if (ev.key === 'ArrowDown') {\n      ev.preventDefault();\n      onFocusNextBlock(block, blockNode.current);\n    }\n  }, [index, blockNode, formFieldName, editor, onDeleteBlock, disableNewBlocks, onSelectBlock, onAddBlock, onFocusPreviousBlock, onFocusNextBlock, block]);\n  const handleFocus = useCallback(() => {\n    onSelectBlock(block);\n  }, [block, onSelectBlock]);\n  const renderElement = useCallback(({\n    attributes,\n    children,\n    element\n  }) => {\n    return __jsx(TitleOrDescription, _extends({}, attributes, {\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }), children);\n  }, [TitleOrDescription, className] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  if (typeof window.__SERVER__ !== 'undefined') {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 12\n      }\n    });\n  }\n  return __jsx(Slate, {\n    editor: editor,\n    onChange: handleChange,\n    value: initialValue,\n    className: cx({\n      block: formFieldName === 'description',\n      description: formFieldName === 'description',\n      selected: formFieldName === 'description' && selected\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, __jsx(Editable, {\n    readOnly: !editable,\n    onKeyDown: handleKeyDown,\n    placeholder: placeholder,\n    renderElement: renderElement,\n    onFocus: handleFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }));\n};\nTitleBlockEdit.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  onChangeField: PropTypes.func.isRequired,\n  onSelectBlock: PropTypes.func.isRequired,\n  onDeleteBlock: PropTypes.func.isRequired,\n  onAddBlock: PropTypes.func.isRequired,\n  onFocusPreviousBlock: PropTypes.func.isRequired,\n  onFocusNextBlock: PropTypes.func.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  editable: PropTypes.bool,\n  detached: PropTypes.bool,\n  blockNode: PropTypes.any,\n  className: PropTypes.string,\n  formFieldName: PropTypes.string\n};\nTitleBlockEdit.defaultProps = {\n  detached: false,\n  editable: true\n};\nexport default TitleBlockEdit;","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","Editor","Node","Transforms","Range","createEditor","ReactEditor","Editable","Slate","withReact","PropTypes","defineMessages","useIntl","config","P","cx","messages","description","title","usePrevious","value","ref","current","TitleBlockEdit","props","onDeleteBlock","selected","index","onChangeField","onSelectBlock","onAddBlock","onFocusPreviousBlock","onFocusNextBlock","block","blockNode","className","formFieldName","properties","metadata","data","detached","editable","editor","initialValue","type","children","text","intl","prevSelected","placeholder","formatMessage","disableNewBlocks","TitleOrDescription","forwardRef","rest","selection","isCollapsed","focus","select","end","oldText","string","insertText","at","handleChange","newText","handleKeyDown","ev","key","length","preventDefault","settings","defaultBlockType","handleFocus","renderElement","attributes","element","window","__SERVER__","propTypes","objectOf","any","isRequired","bool","number","func","defaultProps"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/blocks/Title/TitleBlockEdit.jsx"],"sourcesContent":["/**\n * Edit title/description block.\n * @module volto-slate/blocks/Title/TitleBlockEdit\n */\n\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Editor, Node, Transforms, Range, createEditor } from 'slate';\nimport { ReactEditor, Editable, Slate, withReact } from 'slate-react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\nimport config from '@plone/volto/registry';\nimport { P } from 'volto-slate/constants';\nimport cx from 'classnames';\n\nconst messages = defineMessages({\n  description: {\n    id: 'Add a description…',\n    defaultMessage: 'Add a description…',\n  },\n  title: {\n    id: 'Type the title…',\n    defaultMessage: 'Type the title…',\n  },\n});\n\nfunction usePrevious(value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n\n/**\n * Edit title block component.\n * @class TitleBlockEdit\n * @extends Component\n */\nexport const TitleBlockEdit = (props) => {\n  const {\n    onDeleteBlock,\n    selected,\n    index,\n    onChangeField,\n    onSelectBlock,\n    onAddBlock,\n    onFocusPreviousBlock,\n    onFocusNextBlock,\n    block,\n    blockNode,\n    className,\n    formFieldName,\n    properties,\n    metadata,\n    data,\n    detached,\n    editable,\n  } = props;\n\n  const [editor] = useState(withReact(createEditor()));\n  const [initialValue] = useState([\n    {\n      type: P,\n      children: [\n        {\n          text: metadata?.[formFieldName] || properties?.[formFieldName] || '',\n        },\n      ],\n    },\n  ]);\n\n  const intl = useIntl();\n\n  const prevSelected = usePrevious(selected);\n\n  const text = useMemo(\n    () => metadata?.[formFieldName] || properties?.[formFieldName] || '',\n    [metadata, properties, formFieldName],\n  );\n\n  const placeholder = useMemo(\n    () => data.placeholder || intl.formatMessage(messages[formFieldName]),\n    [data.placeholder, formFieldName, intl],\n  );\n  const disableNewBlocks = useMemo(() => detached, [detached]);\n\n  const TitleOrDescription = useMemo(() => {\n    let TitleOrDescription;\n    if (formFieldName === 'title') {\n      TitleOrDescription = React.forwardRef(({ children, ...rest }, ref) => (\n        <h1 {...rest} ref={ref}>\n          {children}\n        </h1>\n      ));\n    } else {\n      TitleOrDescription = React.forwardRef(({ children, ...rest }, ref) => (\n        <div {...rest} ref={ref}>\n          {children}\n        </div>\n      ));\n    }\n    return TitleOrDescription;\n  }, [formFieldName]);\n\n  useEffect(() => {\n    if (!prevSelected && selected) {\n      if (editor.selection && Range.isCollapsed(editor.selection)) {\n        // keep selection\n        ReactEditor.focus(editor);\n      } else {\n        // nothing is selected, move focus to end\n        ReactEditor.focus(editor);\n        Transforms.select(editor, Editor.end(editor, []));\n      }\n    }\n  }, [prevSelected, selected, editor]);\n\n  useEffect(() => {\n    // undo/redo handler\n    const oldText = Node.string(editor);\n    if (oldText !== text) {\n      Transforms.insertText(editor, text, {\n        at: [0, 0],\n      });\n    }\n  }, [editor, text]);\n\n  const handleChange = useCallback(() => {\n    const newText = Node.string(editor);\n    if (newText !== text) {\n      onChangeField(formFieldName, newText);\n    }\n  }, [editor, formFieldName, onChangeField, text]);\n\n  const handleKeyDown = useCallback(\n    (ev) => {\n      if (\n        formFieldName === 'description' &&\n        ev.key === 'Backspace' &&\n        Node.string(editor).length === 0\n      ) {\n        ev.preventDefault();\n        onDeleteBlock(block, true);\n      } else if (ev.key === 'Return' || ev.key === 'Enter') {\n        ev.preventDefault();\n        if (!disableNewBlocks) {\n          onSelectBlock(\n            onAddBlock(config.settings.defaultBlockType, index + 1),\n          );\n        }\n      } else if (ev.key === 'ArrowUp') {\n        ev.preventDefault();\n        onFocusPreviousBlock(block, blockNode.current);\n      } else if (ev.key === 'ArrowDown') {\n        ev.preventDefault();\n        onFocusNextBlock(block, blockNode.current);\n      }\n    },\n    [\n      index,\n      blockNode,\n      formFieldName,\n      editor,\n      onDeleteBlock,\n      disableNewBlocks,\n      onSelectBlock,\n      onAddBlock,\n      onFocusPreviousBlock,\n      onFocusNextBlock,\n      block,\n    ],\n  );\n\n  const handleFocus = useCallback(() => {\n    onSelectBlock(block);\n  }, [block, onSelectBlock]);\n\n  const renderElement = useCallback(\n    ({ attributes, children, element }) => {\n      return (\n        <TitleOrDescription {...attributes} className={className}>\n          {children}\n        </TitleOrDescription>\n      );\n    },\n    [TitleOrDescription, className], // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  if (typeof window.__SERVER__ !== 'undefined') {\n    return <div />;\n  }\n\n  return (\n    <Slate\n      editor={editor}\n      onChange={handleChange}\n      value={initialValue}\n      className={cx({\n        block: formFieldName === 'description',\n        description: formFieldName === 'description',\n        selected: formFieldName === 'description' && selected,\n      })}\n    >\n      <Editable\n        readOnly={!editable}\n        onKeyDown={handleKeyDown}\n        placeholder={placeholder}\n        renderElement={renderElement}\n        onFocus={handleFocus}\n      ></Editable>\n    </Slate>\n  );\n};\n\nTitleBlockEdit.propTypes = {\n  properties: PropTypes.objectOf(PropTypes.any).isRequired,\n  selected: PropTypes.bool.isRequired,\n  block: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  onChangeField: PropTypes.func.isRequired,\n  onSelectBlock: PropTypes.func.isRequired,\n  onDeleteBlock: PropTypes.func.isRequired,\n  onAddBlock: PropTypes.func.isRequired,\n  onFocusPreviousBlock: PropTypes.func.isRequired,\n  onFocusNextBlock: PropTypes.func.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  editable: PropTypes.bool,\n  detached: PropTypes.bool,\n  blockNode: PropTypes.any,\n  className: PropTypes.string,\n  formFieldName: PropTypes.string,\n};\n\nTitleBlockEdit.defaultProps = {\n  detached: false,\n  editable: true,\n};\n\nexport default TitleBlockEdit;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Add a description…","defaultMessage":"Add a description…"},{"id":"Type the title…","defaultMessage":"Type the title…"}]}},"sourceType":"module","externalDependencies":[]}