{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Image/ImageSidebar.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment } from 'semantic-ui-react';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { BlockDataForm, Icon } from '@plone/volto/components';\nimport { isInternalURL, flattenToAppURL } from '@plone/volto/helpers';\nimport { ImageSchema } from './schema';\nimport imageSVG from '@plone/volto/icons/image.svg';\nconst ImageSidebar = props => {\n  const {\n    data,\n    block,\n    onChangeBlock\n  } = props;\n  const intl = useIntl();\n  const schema = ImageSchema({\n    formData: data,\n    intl\n  });\n  return __jsx(React.Fragment, null, __jsx(\"header\", {\n    className: \"header pulled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"Image\",\n    defaultMessage: \"Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }))), __jsx(Segment, {\n    className: \"sidebar-metadata-container\",\n    secondary: true,\n    attached: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, data.url ? __jsx(React.Fragment, null, data.url.split('/').slice(-1)[0], isInternalURL(data.url) && __jsx(\"img\", {\n    src: `${flattenToAppURL(data.url)}/@@images/image/mini`,\n    alt: data.alt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }), !isInternalURL(data.url) && __jsx(\"img\", {\n    src: data.url,\n    alt: data.alt,\n    style: {\n      width: '50%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  })) : __jsx(React.Fragment, null, __jsx(FormattedMessage, {\n    id: \"No image selected\",\n    defaultMessage: \"No image selected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), __jsx(Icon, {\n    name: imageSVG,\n    size: \"100px\",\n    color: \"#b8c6c8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }))), __jsx(BlockDataForm, {\n    schema: schema,\n    title: schema.title,\n    onChangeField: (id, value) => {\n      onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n        [id]: value\n      }));\n    },\n    formData: data,\n    block: block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n};\nImageSidebar.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired\n};\nexport default ImageSidebar;","map":{"version":3,"names":["React","PropTypes","Segment","useIntl","FormattedMessage","BlockDataForm","Icon","isInternalURL","flattenToAppURL","ImageSchema","imageSVG","ImageSidebar","props","data","block","onChangeBlock","intl","schema","formData","url","split","slice","alt","width","title","id","value","propTypes","objectOf","any","isRequired","string","func"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Image/ImageSidebar.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment } from 'semantic-ui-react';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { BlockDataForm, Icon } from '@plone/volto/components';\nimport { isInternalURL, flattenToAppURL } from '@plone/volto/helpers';\nimport { ImageSchema } from './schema';\nimport imageSVG from '@plone/volto/icons/image.svg';\n\nconst ImageSidebar = (props) => {\n  const { data, block, onChangeBlock } = props;\n  const intl = useIntl();\n  const schema = ImageSchema({ formData: data, intl });\n  return (\n    <>\n      <header className=\"header pulled\">\n        <h2>\n          <FormattedMessage id=\"Image\" defaultMessage=\"Image\" />\n        </h2>\n      </header>\n\n      <Segment className=\"sidebar-metadata-container\" secondary attached>\n        {data.url ? (\n          <>\n            {data.url.split('/').slice(-1)[0]}\n            {isInternalURL(data.url) && (\n              <img\n                src={`${flattenToAppURL(data.url)}/@@images/image/mini`}\n                alt={data.alt}\n              />\n            )}\n            {!isInternalURL(data.url) && (\n              <img src={data.url} alt={data.alt} style={{ width: '50%' }} />\n            )}\n          </>\n        ) : (\n          <>\n            <FormattedMessage\n              id=\"No image selected\"\n              defaultMessage=\"No image selected\"\n            />\n            <Icon name={imageSVG} size=\"100px\" color=\"#b8c6c8\" />\n          </>\n        )}\n      </Segment>\n      <BlockDataForm\n        schema={schema}\n        title={schema.title}\n        onChangeField={(id, value) => {\n          onChangeBlock(block, {\n            ...data,\n            [id]: value,\n          });\n        }}\n        formData={data}\n        block={block}\n      />\n    </>\n  );\n};\n\nImageSidebar.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n  block: PropTypes.string.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n};\n\nexport default ImageSidebar;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Image","defaultMessage":"Image"},{"id":"No image selected","defaultMessage":"No image selected"}]}},"sourceType":"module","externalDependencies":[]}