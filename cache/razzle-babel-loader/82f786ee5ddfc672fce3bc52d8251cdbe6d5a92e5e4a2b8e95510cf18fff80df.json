{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/Collection/SelectListingType.jsx\";\nvar __jsx = React.createElement;\nimport appsSVG from '@plone/volto/icons/apps.svg';\nimport contentListingSVG from '@plone/volto/icons/content-listing.svg';\nimport tableSVG from '@plone/volto/icons/table.svg';\nimport { Button, Form, Grid } from 'semantic-ui-react';\nimport React, { Component } from 'react';\nimport { Icon } from '@plone/volto/components';\nclass SelectListingType extends Component {\n  render() {\n    return __jsx(Form.Field, {\n      inline: true,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, __jsx(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, __jsx(Grid.Column, {\n      width: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"field-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, \"Listing view\"))), __jsx(Grid.Column, {\n      width: \"8\",\n      className: \"align-tools\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      title: \"Inline content listing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      name: contentListingSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 19\n      }\n    }))), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      title: \"Tiles Listing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      name: appsSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }\n    }))), __jsx(Button.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      title: \"Table listing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, __jsx(Icon, {\n      name: tableSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }\n    })))))));\n  }\n}\nexport default SelectListingType;","map":{"version":3,"names":["appsSVG","contentListingSVG","tableSVG","Button","Form","Grid","React","Component","Icon","SelectListingType","render"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-addons-forest/src/Collection/SelectListingType.jsx"],"sourcesContent":["import appsSVG from '@plone/volto/icons/apps.svg';\nimport contentListingSVG from '@plone/volto/icons/content-listing.svg';\nimport tableSVG from '@plone/volto/icons/table.svg';\nimport { Button, Form, Grid } from 'semantic-ui-react';\nimport React, { Component } from 'react';\nimport { Icon } from '@plone/volto/components';\n\nclass SelectListingType extends Component {\n  render() {\n    return (\n      <Form.Field inline required={true}>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width=\"4\">\n              <div className=\"wrapper\">\n                <label htmlFor=\"field-align\">Listing view</label>\n              </div>\n            </Grid.Column>\n            <Grid.Column width=\"8\" className=\"align-tools\">\n              <Button.Group>\n                <Button icon basic title=\"Inline content listing\">\n                  <Icon name={contentListingSVG} size=\"24px\" />\n                </Button>\n              </Button.Group>\n              <Button.Group>\n                <Button icon basic title=\"Tiles Listing\">\n                  <Icon name={appsSVG} size=\"24px\" />\n                </Button>\n              </Button.Group>\n              <Button.Group>\n                <Button icon basic title=\"Table listing\">\n                  <Icon name={tableSVG} size=\"24px\" />\n                </Button>\n              </Button.Group>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Form.Field>\n    );\n  }\n}\nexport default SelectListingType;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,6BAA6B;AACjD,OAAOC,iBAAiB,MAAM,wCAAwC;AACtE,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,SAASC,MAAM,EAAEC,IAAI,EAAEC,IAAI,QAAQ,mBAAmB;AACtD,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,yBAAyB;AAE9C,MAAMC,iBAAiB,SAASF,SAAS,CAAC;EACxCG,MAAM,GAAG;IACP,OACE,MAAC,IAAI,CAAC,KAAK;MAAC,MAAM;MAAC,QAAQ,EAAE,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAChC,MAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACH,MAAC,IAAI,CAAC,GAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACP,MAAC,IAAI,CAAC,MAAM;MAAC,KAAK,EAAC,GAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACpB;MAAK,SAAS,EAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACtB;MAAO,OAAO,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,kBAAqB,CAC7C,CACM,EACd,MAAC,IAAI,CAAC,MAAM;MAAC,KAAK,EAAC,GAAG;MAAC,SAAS,EAAC,aAAa;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC5C,MAAC,MAAM,CAAC,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACX,MAAC,MAAM;MAAC,IAAI;MAAC,KAAK;MAAC,KAAK,EAAC,wBAAwB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC/C,MAAC,IAAI;MAAC,IAAI,EAAET,iBAAkB;MAAC,IAAI,EAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACtC,CACI,EACf,MAAC,MAAM,CAAC,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACX,MAAC,MAAM;MAAC,IAAI;MAAC,KAAK;MAAC,KAAK,EAAC,eAAe;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACtC,MAAC,IAAI;MAAC,IAAI,EAAED,OAAQ;MAAC,IAAI,EAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CAC5B,CACI,EACf,MAAC,MAAM,CAAC,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACX,MAAC,MAAM;MAAC,IAAI;MAAC,KAAK;MAAC,KAAK,EAAC,eAAe;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACtC,MAAC,IAAI;MAAC,IAAI,EAAEE,QAAS;MAAC,IAAI,EAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CAC7B,CACI,CACH,CACL,CACN,CACI;EAEjB;AACF;AACA,eAAeO,iBAAiB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}