{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _regeneratorRuntime from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _pull from \"lodash/pull\";\nimport _mapValues from \"lodash/mapValues\";\nimport _map from \"lodash/map\";\nimport _keys from \"lodash/keys\";\nimport _indexOf from \"lodash/indexOf\";\nimport _find from \"lodash/find\";\nimport _filter from \"lodash/filter\";\nimport _concat from \"lodash/concat\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Contents/Contents.jsx\",\n  _this8 = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\n/**\n * Contents component.\n * @module components/manage/Contents/Contents\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Portal } from 'react-portal';\nimport { Link } from 'react-router-dom';\nimport { Button, Confirm, Container, Divider, Dropdown, Menu, Input, Segment, Table, Loader, Dimmer } from 'semantic-ui-react';\nimport move from 'lodash-move';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { asyncConnect } from '@plone/volto/helpers';\nimport { searchContent, cut, copy, copyContent, deleteContent, listActions, moveContent, orderContent, sortContent, updateColumnsContent, linkIntegrityCheck, getContent } from '@plone/volto/actions';\nimport Indexes, { defaultIndexes } from '@plone/volto/constants/Indexes';\nimport { ContentsBreadcrumbs, ContentsIndexHeader, ContentsItem, ContentsRenameModal, ContentsUploadModal, ContentsWorkflowModal, ContentsTagsModal, ContentsPropertiesModal, Pagination, Popup, Toolbar, Toast, Icon, Unauthorized } from '@plone/volto/components';\nimport { Helmet, getBaseUrl } from '@plone/volto/helpers';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport cutSVG from '@plone/volto/icons/cut.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport copySVG from '@plone/volto/icons/copy.svg';\nimport tagSVG from '@plone/volto/icons/tag.svg';\nimport renameSVG from '@plone/volto/icons/rename.svg';\nimport semaphoreSVG from '@plone/volto/icons/semaphore.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\nimport propertiesSVG from '@plone/volto/icons/properties.svg';\nimport pasteSVG from '@plone/volto/icons/paste.svg';\nimport zoomSVG from '@plone/volto/icons/zoom.svg';\nimport checkboxUncheckedSVG from '@plone/volto/icons/checkbox-unchecked.svg';\nimport checkboxCheckedSVG from '@plone/volto/icons/checkbox-checked.svg';\nimport checkboxIndeterminateSVG from '@plone/volto/icons/checkbox-indeterminate.svg';\nimport configurationSVG from '@plone/volto/icons/configuration-app.svg';\nimport sortDownSVG from '@plone/volto/icons/sort-down.svg';\nimport sortUpSVG from '@plone/volto/icons/sort-up.svg';\nimport downKeySVG from '@plone/volto/icons/down-key.svg';\nimport moreSVG from '@plone/volto/icons/more.svg';\nvar messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  contents: {\n    \"id\": \"Contents\",\n    \"defaultMessage\": \"Contents\"\n  },\n  copy: {\n    \"id\": \"Copy\",\n    \"defaultMessage\": \"Copy\"\n  },\n  cut: {\n    \"id\": \"Cut\",\n    \"defaultMessage\": \"Cut\"\n  },\n  error: {\n    \"id\": \"You can't paste this content here\",\n    \"defaultMessage\": \"You can't paste this content here\"\n  },\n  \"delete\": {\n    \"id\": \"Delete\",\n    \"defaultMessage\": \"Delete\"\n  },\n  deleteConfirm: {\n    \"id\": \"Do you really want to delete the following items?\",\n    \"defaultMessage\": \"Do you really want to delete the following items?\"\n  },\n  deleteError: {\n    \"id\": \"The item could not be deleted.\",\n    \"defaultMessage\": \"The item could not be deleted.\"\n  },\n  loading: {\n    \"id\": \"loading\",\n    \"defaultMessage\": \"Loading\"\n  },\n  home: {\n    \"id\": \"Home\",\n    \"defaultMessage\": \"Home\"\n  },\n  filter: {\n    \"id\": \"Filter\\u2026\",\n    \"defaultMessage\": \"Filter\\u2026\"\n  },\n  messageCopied: {\n    \"id\": \"Item(s) copied.\",\n    \"defaultMessage\": \"Item(s) copied.\"\n  },\n  messageCut: {\n    \"id\": \"Item(s) cut.\",\n    \"defaultMessage\": \"Item(s) cut.\"\n  },\n  messageUpdate: {\n    \"id\": \"Item(s) has been updated.\",\n    \"defaultMessage\": \"Item(s) has been updated.\"\n  },\n  messageReorder: {\n    \"id\": \"Item succesfully moved.\",\n    \"defaultMessage\": \"Item succesfully moved.\"\n  },\n  messagePasted: {\n    \"id\": \"Item(s) pasted.\",\n    \"defaultMessage\": \"Item(s) pasted.\"\n  },\n  messageWorkflowUpdate: {\n    \"id\": \"Item(s) state has been updated.\",\n    \"defaultMessage\": \"Item(s) state has been updated.\"\n  },\n  paste: {\n    \"id\": \"Paste\",\n    \"defaultMessage\": \"Paste\"\n  },\n  properties: {\n    \"id\": \"Properties\",\n    \"defaultMessage\": \"Properties\"\n  },\n  rearrangeBy: {\n    \"id\": \"Rearrange items by\\u2026\",\n    \"defaultMessage\": \"Rearrange items by\\u2026\"\n  },\n  rename: {\n    \"id\": \"Rename\",\n    \"defaultMessage\": \"Rename\"\n  },\n  select: {\n    \"id\": \"Select\\u2026\",\n    \"defaultMessage\": \"Select\\u2026\"\n  },\n  selected: {\n    \"id\": \"{count} selected\",\n    \"defaultMessage\": \"{count} selected\"\n  },\n  selectColumns: {\n    \"id\": \"Select columns to show\",\n    \"defaultMessage\": \"Select columns to show\"\n  },\n  sort: {\n    \"id\": \"sort\",\n    \"defaultMessage\": \"sort\"\n  },\n  state: {\n    \"id\": \"State\",\n    \"defaultMessage\": \"State\"\n  },\n  tags: {\n    \"id\": \"Tags\",\n    \"defaultMessage\": \"Tags\"\n  },\n  upload: {\n    \"id\": \"Upload\",\n    \"defaultMessage\": \"Upload\"\n  },\n  success: {\n    \"id\": \"Success\",\n    \"defaultMessage\": \"Success\"\n  },\n  publicationDate: {\n    \"id\": \"Publication date\",\n    \"defaultMessage\": \"Publication date\"\n  },\n  createdOn: {\n    \"id\": \"Created on\",\n    \"defaultMessage\": \"Created on\"\n  },\n  expirationDate: {\n    \"id\": \"Expiration date\",\n    \"defaultMessage\": \"Expiration date\"\n  },\n  id: {\n    \"id\": \"ID\",\n    \"defaultMessage\": \"ID\"\n  },\n  uid: {\n    \"id\": \"UID\",\n    \"defaultMessage\": \"UID\"\n  },\n  reviewState: {\n    \"id\": \"Review state\",\n    \"defaultMessage\": \"Review state\"\n  },\n  folder: {\n    \"id\": \"Folder\",\n    \"defaultMessage\": \"Folder\"\n  },\n  excludedFromNavigation: {\n    \"id\": \"Excluded from navigation\",\n    \"defaultMessage\": \"Excluded from navigation\"\n  },\n  objectSize: {\n    \"id\": \"Object Size\",\n    \"defaultMessage\": \"Object Size\"\n  },\n  lastCommentedDate: {\n    \"id\": \"Last comment date\",\n    \"defaultMessage\": \"Last comment date\"\n  },\n  totalComments: {\n    \"id\": \"Total comments\",\n    \"defaultMessage\": \"Total comments\"\n  },\n  creator: {\n    \"id\": \"Creator\",\n    \"defaultMessage\": \"Creator\"\n  },\n  endDate: {\n    \"id\": \"End Date\",\n    \"defaultMessage\": \"End Date\"\n  },\n  startDate: {\n    \"id\": \"Start Date\",\n    \"defaultMessage\": \"Start Date\"\n  },\n  all: {\n    \"id\": \"All\",\n    \"defaultMessage\": \"All\"\n  },\n  linkIntegrityMessageHeader: {\n    \"id\": \"Potential link breakage\",\n    \"defaultMessage\": \"Potential link breakage\"\n  },\n  linkIntegrityMessageBody: {\n    \"id\": \"By deleting this item, you will break links that exist in the items listed below. If this is indeed what you want to do, we recommend that remove these references first.\",\n    \"defaultMessage\": \"By deleting this item, you will break links that exist in the items listed below. If this is indeed what you want to do, we recommend that remove these references first.\"\n  },\n  linkIntegrityMessageExtra: {\n    \"id\": \"This Page is referenced by the following items:\",\n    \"defaultMessage\": \"This Page is referenced by the following items:\"\n  },\n  deleteItemMessage: {\n    \"id\": \"Items to be deleted:\",\n    \"defaultMessage\": \"Items to be deleted:\"\n  }\n});\n\n/**\n * Contents class.\n * @class Contents\n * @extends Component\n */\nvar Contents = /*#__PURE__*/function (_Component) {\n  _inherits(Contents, _Component);\n  var _super = _createSuper(Contents);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsComponent\n   */\n  function Contents(props) {\n    var _this$props$sort, _this$props$sort2;\n    var _this;\n    _classCallCheck(this, Contents);\n    _this = _super.call(this, props);\n    _this.onDeselect = _this.onDeselect.bind(_assertThisInitialized(_this));\n    _this.onSelect = _this.onSelect.bind(_assertThisInitialized(_this));\n    _this.onSelectAll = _this.onSelectAll.bind(_assertThisInitialized(_this));\n    _this.onSelectIndex = _this.onSelectIndex.bind(_assertThisInitialized(_this));\n    _this.onSelectNone = _this.onSelectNone.bind(_assertThisInitialized(_this));\n    _this.onDeleteOk = _this.onDeleteOk.bind(_assertThisInitialized(_this));\n    _this.onDeleteCancel = _this.onDeleteCancel.bind(_assertThisInitialized(_this));\n    _this.onUploadOk = _this.onUploadOk.bind(_assertThisInitialized(_this));\n    _this.onUploadCancel = _this.onUploadCancel.bind(_assertThisInitialized(_this));\n    _this.onRenameOk = _this.onRenameOk.bind(_assertThisInitialized(_this));\n    _this.onRenameCancel = _this.onRenameCancel.bind(_assertThisInitialized(_this));\n    _this.onTagsOk = _this.onTagsOk.bind(_assertThisInitialized(_this));\n    _this.onTagsCancel = _this.onTagsCancel.bind(_assertThisInitialized(_this));\n    _this.onPropertiesOk = _this.onPropertiesOk.bind(_assertThisInitialized(_this));\n    _this.onPropertiesCancel = _this.onPropertiesCancel.bind(_assertThisInitialized(_this));\n    _this.onWorkflowOk = _this.onWorkflowOk.bind(_assertThisInitialized(_this));\n    _this.onWorkflowCancel = _this.onWorkflowCancel.bind(_assertThisInitialized(_this));\n    _this.onChangeFilter = _this.onChangeFilter.bind(_assertThisInitialized(_this));\n    _this.onChangePage = _this.onChangePage.bind(_assertThisInitialized(_this));\n    _this.onChangePageSize = _this.onChangePageSize.bind(_assertThisInitialized(_this));\n    _this.onOrderIndex = _this.onOrderIndex.bind(_assertThisInitialized(_this));\n    _this.onOrderItem = _this.onOrderItem.bind(_assertThisInitialized(_this));\n    _this.onSortItems = _this.onSortItems.bind(_assertThisInitialized(_this));\n    _this.onMoveToTop = _this.onMoveToTop.bind(_assertThisInitialized(_this));\n    _this.onChangeSelected = _this.onChangeSelected.bind(_assertThisInitialized(_this));\n    _this.onMoveToBottom = _this.onMoveToBottom.bind(_assertThisInitialized(_this));\n    _this.cut = _this.cut.bind(_assertThisInitialized(_this));\n    _this.copy = _this.copy.bind(_assertThisInitialized(_this));\n    _this[\"delete\"] = _this[\"delete\"].bind(_assertThisInitialized(_this));\n    _this.upload = _this.upload.bind(_assertThisInitialized(_this));\n    _this.rename = _this.rename.bind(_assertThisInitialized(_this));\n    _this.tags = _this.tags.bind(_assertThisInitialized(_this));\n    _this.properties = _this.properties.bind(_assertThisInitialized(_this));\n    _this.workflow = _this.workflow.bind(_assertThisInitialized(_this));\n    _this.paste = _this.paste.bind(_assertThisInitialized(_this));\n    _this.fetchContents = _this.fetchContents.bind(_assertThisInitialized(_this));\n    _this.orderTimeout = null;\n    _this.state = {\n      selected: [],\n      showDelete: false,\n      showUpload: false,\n      showRename: false,\n      showTags: false,\n      showProperties: false,\n      showWorkflow: false,\n      itemsToDelete: [],\n      items: _this.props.items,\n      filter: '',\n      currentPage: 0,\n      pageSize: 50,\n      index: _this.props.index || {\n        order: _keys(Indexes),\n        values: _mapValues(Indexes, function (value, key) {\n          return _objectSpread(_objectSpread({}, value), {}, {\n            selected: _indexOf(defaultIndexes, key) !== -1\n          });\n        }),\n        selectedCount: defaultIndexes.length + 1\n      },\n      sort_on: ((_this$props$sort = _this.props.sort) === null || _this$props$sort === void 0 ? void 0 : _this$props$sort.on) || 'getObjPositionInParent',\n      sort_order: ((_this$props$sort2 = _this.props.sort) === null || _this$props$sort2 === void 0 ? void 0 : _this$props$sort2.order) || 'ascending',\n      isClient: false,\n      linkIntegrityBreakages: ''\n    };\n    _this.filterTimeout = null;\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(Contents, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchContents();\n      this.setState({\n        isClient: true\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function () {\n      var _componentDidUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_, prevState) {\n        var _this2 = this;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.state.itemsToDelete !== prevState.itemsToDelete && this.state.itemsToDelete.length > 0)) {\n                  _context.next = 7;\n                  break;\n                }\n                _context.t0 = this;\n                _context.next = 4;\n                return this.props.linkIntegrityCheck(_map(this.state.itemsToDelete, function (item) {\n                  return _this2.getFieldById(item, 'UID');\n                }));\n              case 4:\n                _context.t1 = _context.sent;\n                _context.t2 = {\n                  linkIntegrityBreakages: _context.t1\n                };\n                _context.t0.setState.call(_context.t0, _context.t2);\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function componentDidUpdate(_x, _x2) {\n        return _componentDidUpdate.apply(this, arguments);\n      }\n      return componentDidUpdate;\n    }()\n    /**\n     * Component will receive props\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Next properties\n     * @returns {undefined}\n     */\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this3 = this;\n      if (this.props.clipboardRequest.loading && nextProps.clipboardRequest.loaded || this.props.deleteRequest.loading && nextProps.deleteRequest.loaded || this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n        this.fetchContents(nextProps.pathname);\n      }\n      if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n        this.props.toastify.toast.success(__jsx(Toast, {\n          success: true,\n          title: this.props.intl.formatMessage(messages.success),\n          content: this.props.intl.formatMessage(messages.messageUpdate),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 9\n          }\n        }));\n      }\n      if (this.props.pathname !== nextProps.pathname) {\n        // Refetching content to sync the current object in the toolbar\n        this.props.getContent(getBaseUrl(nextProps.pathname));\n        this.setState({\n          currentPage: 0\n        }, function () {\n          return _this3.setState({\n            filter: ''\n          }, function () {\n            return _this3.fetchContents(nextProps.pathname);\n          });\n        });\n      }\n      if (this.props.searchRequest.loading && nextProps.searchRequest.loaded) {\n        this.setState({\n          items: nextProps.items\n        });\n      }\n      if (this.props.clipboardRequest.loading && nextProps.clipboardRequest.error) {\n        this.props.toastify.toast.error(__jsx(Toast, {\n          error: true,\n          title: this.props.intl.formatMessage(messages.error),\n          content: this.props.intl.formatMessage(messages.error),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 9\n          }\n        }));\n      }\n      if (this.props.clipboardRequest.loading && nextProps.clipboardRequest.loaded) {\n        this.props.toastify.toast.success(__jsx(Toast, {\n          success: true,\n          title: this.props.intl.formatMessage(messages.success),\n          content: this.props.intl.formatMessage(messages.messagePasted),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 9\n          }\n        }));\n      }\n      if (this.props.deleteRequest.loading && nextProps.deleteRequest.error) {\n        this.props.toastify.toast.error(__jsx(Toast, {\n          error: true,\n          title: this.props.intl.formatMessage(messages.deleteError),\n          content: this.props.intl.formatMessage(messages.deleteError),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 9\n          }\n        }));\n      }\n      if (this.props.orderRequest.loading && nextProps.orderRequest.loaded) {\n        this.props.toastify.toast.success(__jsx(Toast, {\n          success: true,\n          title: this.props.intl.formatMessage(messages.success),\n          content: this.props.intl.formatMessage(messages.messageReorder),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 9\n          }\n        }));\n      }\n    }\n\n    /**\n     * On deselect handler\n     * @method onDeselect\n     * @param {object} event Event object\n     * @param {string} value Value\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onDeselect\",\n    value: function onDeselect(event, _ref) {\n      var value = _ref.value;\n      this.setState({\n        selected: _pull(this.state.selected, value)\n      });\n    }\n\n    /**\n     * On select handler\n     * @method onSelect\n     * @param {object} event Event object\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSelect\",\n    value: function onSelect(event, id) {\n      if (_indexOf(this.state.selected, id) === -1) {\n        this.setState({\n          selected: _concat(this.state.selected, id)\n        });\n      } else {\n        this.setState({\n          selected: _pull(this.state.selected, id)\n        });\n      }\n    }\n\n    /**\n     * On select all handler\n     * @method onSelectAll\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSelectAll\",\n    value: function onSelectAll() {\n      this.setState({\n        selected: _map(this.state.items, function (item) {\n          return item['@id'];\n        })\n      });\n    }\n\n    /**\n     * On select none handler\n     * @method onSelectNone\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSelectNone\",\n    value: function onSelectNone() {\n      this.setState({\n        selected: []\n      });\n    }\n\n    /**\n     * On select index\n     * @method onSelectIndex\n     * @param {object} event Event object.\n     * @param {string} value Index value.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSelectIndex\",\n    value: function onSelectIndex(event, _ref2) {\n      var value = _ref2.value;\n      var newIndex = _objectSpread(_objectSpread({}, this.state.index), {}, {\n        selectedCount: this.state.index.selectedCount + (this.state.index.values[value].selected ? -1 : 1),\n        values: _mapValues(this.state.index.values, function (indexValue, indexKey) {\n          return _objectSpread(_objectSpread({}, indexValue), {}, {\n            selected: indexKey === value ? !indexValue.selected : indexValue.selected\n          });\n        })\n      });\n      this.setState({\n        index: newIndex\n      });\n      this.props.updateColumnsContent(getBaseUrl(this.props.pathname), newIndex);\n    }\n\n    /**\n     * On change filter\n     * @method onChangeFilter\n     * @param {object} event Event object.\n     * @param {string} value Filter value.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onChangeFilter\",\n    value: function onChangeFilter(event, _ref3) {\n      var value = _ref3.value;\n      var self = this;\n      clearTimeout(self.filterTimeout);\n      this.setState({\n        filter: value\n      }, function () {\n        self.filterTimeout = setTimeout(function () {\n          self.fetchContents();\n        }, 200);\n      });\n    }\n\n    /**\n     * On change selected values (Filter)\n     * @method onChangeSelected\n     * @param {object} event Event object.\n     * @param {string} value Filter value.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onChangeSelected\",\n    value: function onChangeSelected(event, _ref4) {\n      var value = _ref4.value;\n      event.stopPropagation();\n      var _this$state = this.state,\n        items = _this$state.items,\n        selected = _this$state.selected;\n      var filteredItems = _filter(selected, function (selectedItem) {\n        return _find(items, function (item) {\n          return item['@id'] === selectedItem;\n        }).title.toLowerCase().includes(value.toLowerCase());\n      });\n      this.setState({\n        filteredItems: filteredItems,\n        selectedMenuFilter: value\n      });\n    }\n\n    /**\n     * On change page\n     * @method onChangePage\n     * @param {object} event Event object.\n     * @param {string} value Page value.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onChangePage\",\n    value: function onChangePage(event, _ref5) {\n      var _this4 = this;\n      var value = _ref5.value;\n      this.setState({\n        currentPage: value\n      }, function () {\n        return _this4.fetchContents();\n      });\n    }\n\n    /**\n     * On change page size\n     * @method onChangePageSize\n     * @param {object} event Event object.\n     * @param {string} value Page size value.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onChangePageSize\",\n    value: function onChangePageSize(event, _ref6) {\n      var _this5 = this;\n      var value = _ref6.value;\n      this.setState({\n        pageSize: value,\n        currentPage: 0\n      }, function () {\n        return _this5.fetchContents();\n      });\n    }\n\n    /**\n     * On order index\n     * @method onOrderIndex\n     * @param {number} index Index\n     * @param {number} delta Delta\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onOrderIndex\",\n    value: function onOrderIndex(index, delta) {\n      this.setState({\n        index: _objectSpread(_objectSpread({}, this.state.index), {}, {\n          order: move(this.state.index.order, index, index + delta)\n        })\n      });\n      this.props.updateColumnsContent(getBaseUrl(this.props.pathname), this.state.index);\n    }\n\n    /**\n     * On order item\n     * @method onOrderItem\n     * @param {string} id Item id\n     * @param {number} itemIndex Item index\n     * @param {number} delta Delta\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onOrderItem\",\n    value: function onOrderItem(id, itemIndex, delta, backend) {\n      if (backend) {\n        this.props.orderContent(getBaseUrl(this.props.pathname), id.replace(/^.*\\//, ''), delta);\n      } else {\n        this.setState({\n          items: move(this.state.items, itemIndex, itemIndex + delta)\n        });\n      }\n    }\n\n    /**\n     * On sort items\n     * @method onSortItems\n     * @param {object} event Event object\n     * @param {string} value Item index\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSortItems\",\n    value: function onSortItems(event, _ref7) {\n      var value = _ref7.value;\n      var values = value.split('|');\n      this.setState({\n        sort_on: values[0],\n        sort_order: values[1]\n      });\n      this.props.sortContent(getBaseUrl(this.props.pathname), values[0], values[1]);\n    }\n\n    /**\n     * On move to top\n     * @method onMoveToTop\n     * @param {object} event Event object\n     * @param {string} value Item index\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onMoveToTop\",\n    value: function onMoveToTop(event, _ref8) {\n      var _this6 = this;\n      var value = _ref8.value;\n      var id = this.state.items[value]['@id'];\n      value = this.state.currentPage * this.state.pageSize + value;\n      this.props.orderContent(getBaseUrl(this.props.pathname), id.replace(/^.*\\//, ''), -value);\n      this.setState({\n        currentPage: 0\n      }, function () {\n        return _this6.fetchContents();\n      });\n    }\n\n    /**\n     * On move to bottom\n     * @method onMoveToBottom\n     * @param {object} event Event object\n     * @param {string} value Item index\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onMoveToBottom\",\n    value: function onMoveToBottom(event, _ref9) {\n      var value = _ref9.value;\n      this.onOrderItem(this.state.items[value]['@id'], value, this.state.items.length - 1 - value, false);\n      this.onOrderItem(this.state.items[value]['@id'], value, this.state.items.length - 1 - value, true);\n    }\n\n    /**\n     * On delete ok\n     * @method onDeleteOk\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onDeleteOk\",\n    value: function onDeleteOk() {\n      this.props.deleteContent(this.state.itemsToDelete);\n      this.setState({\n        showDelete: false,\n        itemsToDelete: [],\n        selected: []\n      });\n    }\n\n    /**\n     * On delete cancel\n     * @method onDeleteCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onDeleteCancel\",\n    value: function onDeleteCancel() {\n      this.setState({\n        showDelete: false,\n        itemsToDelete: []\n      });\n    }\n\n    /**\n     * On upload ok\n     * @method onUploadOk\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onUploadOk\",\n    value: function onUploadOk() {\n      this.fetchContents();\n      this.setState({\n        showUpload: false\n      });\n    }\n\n    /**\n     * On upload cancel\n     * @method onUploadCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onUploadCancel\",\n    value: function onUploadCancel() {\n      this.setState({\n        showUpload: false\n      });\n    }\n\n    /**\n     * On rename ok\n     * @method onRenameOk\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onRenameOk\",\n    value: function onRenameOk() {\n      this.setState({\n        showRename: false,\n        selected: []\n      });\n    }\n\n    /**\n     * On rename cancel\n     * @method onRenameCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onRenameCancel\",\n    value: function onRenameCancel() {\n      this.setState({\n        showRename: false\n      });\n    }\n\n    /**\n     * On tags ok\n     * @method onTagsOk\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onTagsOk\",\n    value: function onTagsOk() {\n      this.setState({\n        showTags: false,\n        selected: []\n      });\n    }\n\n    /**\n     * On tags cancel\n     * @method onTagsCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onTagsCancel\",\n    value: function onTagsCancel() {\n      this.setState({\n        showTags: false\n      });\n    }\n\n    /**\n     * On properties ok\n     * @method onPropertiesOk\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onPropertiesOk\",\n    value: function onPropertiesOk() {\n      this.setState({\n        showProperties: false,\n        selected: []\n      });\n    }\n\n    /**\n     * On properties cancel\n     * @method onPropertiesCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onPropertiesCancel\",\n    value: function onPropertiesCancel() {\n      this.setState({\n        showProperties: false\n      });\n    }\n\n    /**\n     * On workflow ok\n     * @method onWorkflowOk\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onWorkflowOk\",\n    value: function onWorkflowOk() {\n      this.fetchContents();\n      this.setState({\n        showWorkflow: false,\n        selected: []\n      });\n      this.props.toastify.toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.messageWorkflowUpdate),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 7\n        }\n      }));\n    }\n\n    /**\n     * On workflow cancel\n     * @method onWorkflowCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onWorkflowCancel\",\n    value: function onWorkflowCancel() {\n      this.setState({\n        showWorkflow: false\n      });\n    }\n\n    /**\n     * Get field by id\n     * @method getFieldById\n     * @param {string} id Id of object\n     * @param {string} field Field of object\n     * @returns {string} Field of object\n     */\n  }, {\n    key: \"getFieldById\",\n    value: function getFieldById(id, field) {\n      var item = _find(this.state.items, {\n        '@id': id\n      });\n      return item ? item[field] : '';\n    }\n\n    /**\n     * Fetch contents handler\n     * @method fetchContents\n     * @param {string} pathname Pathname to fetch contents.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"fetchContents\",\n    value: function fetchContents(pathname) {\n      if (this.state.pageSize === this.props.intl.formatMessage(messages.all)) {\n        //'All'\n        this.props.searchContent(getBaseUrl(pathname || this.props.pathname), _objectSpread({\n          'path.depth': 1,\n          sort_on: this.state.sort_on,\n          sort_order: this.state.sort_order,\n          metadata_fields: '_all',\n          b_size: 100000000\n        }, this.state.filter && {\n          SearchableText: \"\".concat(this.state.filter, \"*\")\n        }));\n      } else {\n        this.props.searchContent(getBaseUrl(pathname || this.props.pathname), _objectSpread(_objectSpread({\n          'path.depth': 1,\n          sort_on: this.state.sort_on,\n          sort_order: this.state.sort_order,\n          metadata_fields: '_all'\n        }, this.state.filter && {\n          SearchableText: \"\".concat(this.state.filter, \"*\")\n        }), {}, {\n          b_size: this.state.pageSize,\n          b_start: this.state.currentPage * this.state.pageSize\n        }));\n      }\n    }\n\n    /**\n     * Cut handler\n     * @method cut\n     * @param {Object} event Event object.\n     * @param {string} value Value of the event.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"cut\",\n    value: function cut(event, _ref10) {\n      var value = _ref10.value;\n      this.props.cut(value ? [value] : this.state.selected);\n      this.onSelectNone();\n      this.props.toastify.toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.messageCut),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 7\n        }\n      }));\n    }\n\n    /**\n     * Copy handler\n     * @method copy\n     * @param {Object} event Event object.\n     * @param {string} value Value of the event.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"copy\",\n    value: function copy(event, _ref11) {\n      var value = _ref11.value;\n      this.props.copy(value ? [value] : this.state.selected);\n      this.onSelectNone();\n      this.props.toastify.toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.success),\n        content: this.props.intl.formatMessage(messages.messageCopied),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 7\n        }\n      }));\n    }\n\n    /**\n     * Delete handler\n     * @method delete\n     * @param {Object} event Event object.\n     * @param {string} value Value of the event.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"delete\",\n    value: function _delete(event, _ref12) {\n      var value = _ref12.value;\n      this.setState({\n        showDelete: true,\n        itemsToDelete: value ? [value] : this.state.selected\n      });\n    }\n\n    /**\n     * Upload handler\n     * @method upload\n     * @returns {undefined}\n     */\n  }, {\n    key: \"upload\",\n    value: function upload() {\n      this.setState({\n        showUpload: true\n      });\n    }\n\n    /**\n     * Rename handler\n     * @method rename\n     * @returns {undefined}\n     */\n  }, {\n    key: \"rename\",\n    value: function rename() {\n      this.setState({\n        showRename: true\n      });\n    }\n\n    /**\n     * Tags handler\n     * @method tags\n     * @returns {undefined}\n     */\n  }, {\n    key: \"tags\",\n    value: function tags() {\n      this.setState({\n        showTags: true\n      });\n    }\n\n    /**\n     * Properties handler\n     * @method properties\n     * @returns {undefined}\n     */\n  }, {\n    key: \"properties\",\n    value: function properties() {\n      this.setState({\n        showProperties: true\n      });\n    }\n\n    /**\n     * Workflow handler\n     * @method workflow\n     * @returns {undefined}\n     */\n  }, {\n    key: \"workflow\",\n    value: function workflow() {\n      this.setState({\n        showWorkflow: true\n      });\n    }\n\n    /**\n     * Paste handler\n     * @method paste\n     * @returns {undefined}\n     */\n  }, {\n    key: \"paste\",\n    value: function paste() {\n      if (this.props.action === 'copy') {\n        this.props.copyContent(this.props.source, getBaseUrl(this.props.pathname));\n      }\n      if (this.props.action === 'cut') {\n        this.props.moveContent(this.props.source, getBaseUrl(this.props.pathname));\n      }\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$clipboard,\n        _this$props$clipboard2,\n        _this$props$deleteReq,\n        _this$props$deleteReq2,\n        _this$props$updateReq,\n        _this$props$updateReq2,\n        _this$props$orderRequ,\n        _this$props$orderRequ2,\n        _this$props$searchReq,\n        _this$props$searchReq2,\n        _this$props$objectAct,\n        _this7 = this;\n      var selected = this.state.selected.length > 0;\n      var filteredItems = this.state.filteredItems || this.state.selected;\n      var path = getBaseUrl(this.props.pathname);\n      var folderContentsAction = _find(this.props.objectActions, {\n        id: 'folderContents'\n      });\n      var loading = ((_this$props$clipboard = this.props.clipboardRequest) === null || _this$props$clipboard === void 0 ? void 0 : _this$props$clipboard.loading) && !((_this$props$clipboard2 = this.props.clipboardRequest) !== null && _this$props$clipboard2 !== void 0 && _this$props$clipboard2.error) || ((_this$props$deleteReq = this.props.deleteRequest) === null || _this$props$deleteReq === void 0 ? void 0 : _this$props$deleteReq.loading) && !((_this$props$deleteReq2 = this.props.deleteRequest) !== null && _this$props$deleteReq2 !== void 0 && _this$props$deleteReq2.error) || ((_this$props$updateReq = this.props.updateRequest) === null || _this$props$updateReq === void 0 ? void 0 : _this$props$updateReq.loading) && !((_this$props$updateReq2 = this.props.updateRequest) !== null && _this$props$updateReq2 !== void 0 && _this$props$updateReq2.error) || ((_this$props$orderRequ = this.props.orderRequest) === null || _this$props$orderRequ === void 0 ? void 0 : _this$props$orderRequ.loading) && !((_this$props$orderRequ2 = this.props.orderRequest) !== null && _this$props$orderRequ2 !== void 0 && _this$props$orderRequ2.error) || ((_this$props$searchReq = this.props.searchRequest) === null || _this$props$searchReq === void 0 ? void 0 : _this$props$searchReq.loading) && !((_this$props$searchReq2 = this.props.searchRequest) !== null && _this$props$searchReq2 !== void 0 && _this$props$searchReq2.error);\n      return this.props.token && ((_this$props$objectAct = this.props.objectActions) === null || _this$props$objectAct === void 0 ? void 0 : _this$props$objectAct.length) > 0 ? __jsx(React.Fragment, null, folderContentsAction ? __jsx(Container, {\n        id: \"page-contents\",\n        className: \"folder-contents\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167,\n          columnNumber: 11\n        }\n      }, __jsx(Dimmer.Dimmable, {\n        as: \"div\",\n        blurring: true,\n        dimmed: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168,\n          columnNumber: 13\n        }\n      }, __jsx(Dimmer, {\n        active: loading,\n        inverted: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 15\n        }\n      }, __jsx(Loader, {\n        indeterminate: true,\n        size: \"massive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1170,\n          columnNumber: 17\n        }\n      }, this.props.intl.formatMessage(messages.loading))), __jsx(Helmet, {\n        title: this.props.intl.formatMessage(messages.contents),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 15\n        }\n      }), __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1178,\n          columnNumber: 15\n        }\n      }, __jsx(\"article\", {\n        id: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1179,\n          columnNumber: 17\n        }\n      }, __jsx(Confirm, {\n        open: this.state.showDelete,\n        confirmButton: \"Delete\",\n        header: this.props.intl.formatMessage(messages.deleteConfirm),\n        content: __jsx(\"div\", {\n          className: \"content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1187,\n            columnNumber: 23\n          }\n        }, __jsx(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1188,\n            columnNumber: 25\n          }\n        }, this.props.intl.formatMessage(messages.deleteItemMessage)), __jsx(\"ul\", {\n          className: \"content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1193,\n            columnNumber: 25\n          }\n        }, _map(this.state.itemsToDelete, function (item) {\n          return __jsx(\"li\", {\n            key: item,\n            __self: _this7,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1195,\n              columnNumber: 29\n            }\n          }, _this7.getFieldById(item, 'title'));\n        })), this.state.linkIntegrityBreakages.length > 0 ? __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1201,\n            columnNumber: 27\n          }\n        }, __jsx(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1202,\n            columnNumber: 29\n          }\n        }, this.props.intl.formatMessage(messages.linkIntegrityMessageHeader)), __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 29\n          }\n        }, this.props.intl.formatMessage(messages.linkIntegrityMessageBody)), __jsx(\"ul\", {\n          className: \"content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1212,\n            columnNumber: 29\n          }\n        }, _map(this.state.linkIntegrityBreakages, function (item) {\n          return __jsx(\"li\", {\n            key: item['@id'],\n            __self: _this7,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1216,\n              columnNumber: 35\n            }\n          }, __jsx(\"a\", {\n            href: item['@id'],\n            __self: _this7,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1217,\n              columnNumber: 37\n            }\n          }, item.title), __jsx(\"p\", {\n            __self: _this7,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1218,\n              columnNumber: 37\n            }\n          }, _this7.props.intl.formatMessage(messages.linkIntegrityMessageExtra)), __jsx(\"ul\", {\n            className: \"content\",\n            __self: _this7,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 37\n            }\n          }, _map(item.breaches, function (breach) {\n            return __jsx(\"li\", {\n              key: breach['@id'],\n              __self: _this7,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 41\n              }\n            }, __jsx(\"a\", {\n              href: breach['@id'],\n              __self: _this7,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1226,\n                columnNumber: 43\n              }\n            }, breach.title));\n          })));\n        }))) : __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1238,\n            columnNumber: 27\n          }\n        })),\n        onCancel: this.onDeleteCancel,\n        onConfirm: this.onDeleteOk,\n        size: \"mini\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 19\n        }\n      }), __jsx(ContentsUploadModal, {\n        open: this.state.showUpload,\n        onCancel: this.onUploadCancel,\n        onOk: this.onUploadOk,\n        pathname: getBaseUrl(this.props.pathname),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1246,\n          columnNumber: 19\n        }\n      }), __jsx(ContentsRenameModal, {\n        open: this.state.showRename,\n        onCancel: this.onRenameCancel,\n        onOk: this.onRenameOk,\n        items: _map(this.state.selected, function (item) {\n          return {\n            url: item,\n            title: _this7.getFieldById(item, 'title'),\n            id: _this7.getFieldById(item, 'id')\n          };\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1252,\n          columnNumber: 19\n        }\n      }), __jsx(ContentsTagsModal, {\n        open: this.state.showTags,\n        onCancel: this.onTagsCancel,\n        onOk: this.onTagsOk,\n        items: _map(this.state.selected, function (item) {\n          return {\n            url: item,\n            subjects: _this7.getFieldById(item, 'Subject')\n          };\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1262,\n          columnNumber: 19\n        }\n      }), __jsx(ContentsPropertiesModal, {\n        open: this.state.showProperties,\n        onCancel: this.onPropertiesCancel,\n        onOk: this.onPropertiesOk,\n        items: this.state.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1271,\n          columnNumber: 19\n        }\n      }), this.state.showWorkflow && __jsx(ContentsWorkflowModal, {\n        open: this.state.showWorkflow,\n        onCancel: this.onWorkflowCancel,\n        onOk: this.onWorkflowOk,\n        items: this.state.selected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1278,\n          columnNumber: 21\n        }\n      }), __jsx(\"section\", {\n        id: \"content-core\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1285,\n          columnNumber: 19\n        }\n      }, __jsx(Segment.Group, {\n        raised: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1286,\n          columnNumber: 21\n        }\n      }, __jsx(Menu, {\n        secondary: true,\n        attached: true,\n        className: \"top-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1287,\n          columnNumber: 23\n        }\n      }, __jsx(Menu.Menu, {\n        className: \"top-menu-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1288,\n          columnNumber: 25\n        }\n      }, __jsx(Popup, {\n        trigger: __jsx(Menu.Item, {\n          icon: true,\n          as: Button,\n          onClick: this.upload,\n          className: \"upload\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1291,\n            columnNumber: 31\n          }\n        }, __jsx(Icon, {\n          name: uploadSVG,\n          color: \"#007eb1\",\n          size: \"24px\",\n          className: \"upload\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1297,\n            columnNumber: 33\n          }\n        })),\n        position: \"top center\",\n        content: this.props.intl.formatMessage(messages.upload),\n        size: \"mini\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1289,\n          columnNumber: 27\n        }\n      })), __jsx(Menu.Menu, {\n        className: \"top-menu-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1312,\n          columnNumber: 25\n        }\n      }, __jsx(Popup, {\n        trigger: __jsx(Menu.Item, {\n          icon: true,\n          as: Button,\n          onClick: this.rename,\n          disabled: !selected,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1315,\n            columnNumber: 31\n          }\n        }, __jsx(Icon, {\n          name: renameSVG,\n          color: selected ? '#826a6a' : 'grey',\n          size: \"24px\",\n          className: \"rename\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1321,\n            columnNumber: 33\n          }\n        })),\n        position: \"top center\",\n        content: this.props.intl.formatMessage(messages.rename),\n        size: \"mini\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1313,\n          columnNumber: 27\n        }\n      }), __jsx(Popup, {\n        trigger: __jsx(Menu.Item, {\n          icon: true,\n          as: Button,\n          onClick: this.workflow,\n          disabled: !selected,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1337,\n            columnNumber: 31\n          }\n        }, __jsx(Icon, {\n          name: semaphoreSVG,\n          color: selected ? '#826a6a' : 'grey',\n          size: \"24px\",\n          className: \"semaphore\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1343,\n            columnNumber: 33\n          }\n        })),\n        position: \"top center\",\n        content: this.props.intl.formatMessage(messages.state),\n        size: \"mini\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1335,\n          columnNumber: 27\n        }\n      }), __jsx(Popup, {\n        trigger: __jsx(Menu.Item, {\n          icon: true,\n          as: Button,\n          onClick: this.tags,\n          disabled: !selected,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1359,\n            columnNumber: 31\n          }\n        }, __jsx(Icon, {\n          name: tagSVG,\n          color: selected ? '#826a6a' : 'grey',\n          size: \"24px\",\n          className: \"tag\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1365,\n            columnNumber: 33\n          }\n        })),\n        position: \"top center\",\n        content: this.props.intl.formatMessage(messages.tags),\n        size: \"mini\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1357,\n          columnNumber: 27\n        }\n      }), __jsx(Popup, {\n        trigger: __jsx(Menu.Item, {\n          icon: true,\n          as: Button,\n          onClick: this.properties,\n          disabled: !selected,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1382,\n            columnNumber: 31\n          }\n        }, __jsx(Icon, {\n          name: propertiesSVG,\n          color: selected ? '#826a6a' : 'grey',\n          size: \"24px\",\n          className: \"properties\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1388,\n            columnNumber: 33\n          }\n        })),\n        position: \"top center\",\n        content: this.props.intl.formatMessage(messages.properties),\n        size: \"mini\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1380,\n          columnNumber: 27\n        }\n      })), __jsx(Menu.Menu, {\n        className: \"top-menu-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1403,\n          columnNumber: 25\n        }\n      }, __jsx(Popup, {\n        trigger: __jsx(Menu.Item, {\n          icon: true,\n          as: Button,\n          onClick: this.cut,\n          disabled: !selected,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1406,\n            columnNumber: 31\n          }\n        }, __jsx(Icon, {\n          name: cutSVG,\n          color: selected ? '#826a6a' : 'grey',\n          size: \"24px\",\n          className: \"cut\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1412,\n            columnNumber: 33\n          }\n        })),\n        position: \"top center\",\n        content: this.props.intl.formatMessage(messages.cut),\n        size: \"mini\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1404,\n          columnNumber: 27\n        }\n      }), __jsx(Popup, {\n        trigger: __jsx(Menu.Item, {\n          icon: true,\n          as: Button,\n          onClick: this.copy,\n          disabled: !selected,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1428,\n            columnNumber: 31\n          }\n        }, __jsx(Icon, {\n          name: copySVG,\n          color: selected ? '#826a6a' : 'grey',\n          size: \"24px\",\n          className: \"copy\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1434,\n            columnNumber: 33\n          }\n        })),\n        position: \"top center\",\n        content: this.props.intl.formatMessage(messages.copy),\n        size: \"mini\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1426,\n          columnNumber: 27\n        }\n      }), __jsx(Popup, {\n        trigger: __jsx(Menu.Item, {\n          icon: true,\n          as: Button,\n          onClick: this.paste,\n          disabled: !this.props.action,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1451,\n            columnNumber: 31\n          }\n        }, __jsx(Icon, {\n          name: pasteSVG,\n          color: selected ? '#826a6a' : 'grey',\n          size: \"24px\",\n          className: \"paste\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1457,\n            columnNumber: 33\n          }\n        })),\n        position: \"top center\",\n        content: this.props.intl.formatMessage(messages.paste),\n        size: \"mini\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1449,\n          columnNumber: 27\n        }\n      }), __jsx(Popup, {\n        trigger: __jsx(Menu.Item, {\n          icon: true,\n          as: Button,\n          onClick: this[\"delete\"],\n          disabled: !selected,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1474,\n            columnNumber: 31\n          }\n        }, __jsx(Icon, {\n          name: deleteSVG,\n          color: selected ? '#e40166' : 'grey',\n          size: \"24px\",\n          className: \"delete\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1480,\n            columnNumber: 33\n          }\n        })),\n        position: \"top center\",\n        content: this.props.intl.formatMessage(messages[\"delete\"]),\n        size: \"mini\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1472,\n          columnNumber: 27\n        }\n      })), __jsx(Menu.Menu, {\n        position: \"right\",\n        className: \"top-menu-searchbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1495,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"ui right aligned category search item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1499,\n          columnNumber: 27\n        }\n      }, __jsx(Input, {\n        type: \"text\",\n        transparent: true,\n        placeholder: this.props.intl.formatMessage(messages.filter),\n        size: \"small\",\n        value: this.state.filter,\n        onChange: this.onChangeFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1500,\n          columnNumber: 29\n        }\n      }), __jsx(Icon, {\n        name: zoomSVG,\n        size: \"30px\",\n        color: \"#007eb1\",\n        className: \"zoom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1510,\n          columnNumber: 29\n        }\n      }), __jsx(\"div\", {\n        className: \"results\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1516,\n          columnNumber: 29\n        }\n      })))), __jsx(Segment, {\n        secondary: true,\n        attached: true,\n        className: \"contents-breadcrumbs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1520,\n          columnNumber: 23\n        }\n      }, __jsx(ContentsBreadcrumbs, {\n        items: this.props.breadcrumbs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1525,\n          columnNumber: 25\n        }\n      }), __jsx(Dropdown, {\n        item: true,\n        upward: false,\n        icon: __jsx(Icon, {\n          name: moreSVG,\n          size: \"24px\",\n          color: \"#826a6a\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1530,\n            columnNumber: 29\n          }\n        }),\n        className: \"right floating selectIndex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1526,\n          columnNumber: 25\n        }\n      }, __jsx(Dropdown.Menu, {\n        className: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1534,\n          columnNumber: 27\n        }\n      }, __jsx(Dropdown.Header, {\n        content: this.props.intl.formatMessage(messages.selectColumns),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1535,\n          columnNumber: 29\n        }\n      }), __jsx(Dropdown.Menu, {\n        scrolling: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1540,\n          columnNumber: 29\n        }\n      }, _map(_filter(this.state.index.order, function (index) {\n        return index !== 'sortable_title';\n      }), function (index) {\n        return __jsx(Dropdown.Item, {\n          key: index,\n          value: index,\n          onClick: _this7.onSelectIndex,\n          className: \"iconAlign\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1547,\n            columnNumber: 35\n          }\n        }, _this7.state.index.values[index].selected ? __jsx(Icon, {\n          name: checkboxCheckedSVG,\n          size: \"24px\",\n          color: \"#007eb1\",\n          className: _this7.state.index.values[index].label,\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1554,\n            columnNumber: 39\n          }\n        }) : __jsx(Icon, {\n          name: checkboxUncheckedSVG,\n          className: _this7.state.index.values[index].label,\n          size: \"24px\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1563,\n            columnNumber: 39\n          }\n        }), __jsx(\"span\", {\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1571,\n            columnNumber: 37\n          }\n        }, ' ', _this7.props.intl.formatMessage({\n          id: _this7.state.index.values[index].label,\n          defaultMessage: _this7.state.index.values[index].label\n        })));\n      }))))), __jsx(\"div\", {\n        className: \"contents-table-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1588,\n          columnNumber: 23\n        }\n      }, __jsx(Table, {\n        selectable: true,\n        compact: true,\n        singleLine: true,\n        attached: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1589,\n          columnNumber: 25\n        }\n      }, __jsx(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1590,\n          columnNumber: 27\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1591,\n          columnNumber: 29\n        }\n      }, __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1592,\n          columnNumber: 31\n        }\n      }, __jsx(Popup, {\n        menu: true,\n        position: \"bottom left\",\n        flowing: true,\n        basic: true,\n        on: \"click\",\n        popper: {\n          className: 'dropdown-popup'\n        },\n        trigger: __jsx(Icon, {\n          name: configurationSVG,\n          size: \"24px\",\n          color: \"#826a6a\",\n          className: \"dropdown-popup-trigger configuration-svg\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1603,\n            columnNumber: 37\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1593,\n          columnNumber: 33\n        }\n      }, __jsx(Menu, {\n        vertical: true,\n        borderless: true,\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1611,\n          columnNumber: 35\n        }\n      }, __jsx(Menu.Header, {\n        content: this.props.intl.formatMessage(messages.rearrangeBy),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1612,\n          columnNumber: 37\n        }\n      }), _map(['id', 'sortable_title', 'EffectiveDate', 'CreationDate', 'ModificationDate', 'portal_type'], function (index) {\n        return __jsx(Dropdown, {\n          key: index,\n          item: true,\n          simple: true,\n          className: \"sort_\".concat(index, \" icon-align\"),\n          icon: __jsx(Icon, {\n            name: downKeySVG,\n            size: \"24px\",\n            className: \"left\",\n            __self: _this7,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1633,\n              columnNumber: 45\n            }\n          }),\n          text: _this7.props.intl.formatMessage({\n            id: Indexes[index].label\n          }),\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1627,\n            columnNumber: 41\n          }\n        }, __jsx(Dropdown.Menu, {\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1643,\n            columnNumber: 43\n          }\n        }, __jsx(Dropdown.Item, {\n          onClick: _this7.onSortItems,\n          value: \"\".concat(Indexes[index].sort_on, \"|ascending\"),\n          className: \"sort_\".concat(Indexes[index].sort_on, \"_ascending icon-align\"),\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1644,\n            columnNumber: 45\n          }\n        }, __jsx(Icon, {\n          name: sortDownSVG,\n          size: \"24px\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1649,\n            columnNumber: 47\n          }\n        }), ' ', __jsx(FormattedMessage, {\n          id: \"Ascending\",\n          defaultMessage: \"Ascending\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1653,\n            columnNumber: 47\n          }\n        })), __jsx(Dropdown.Item, {\n          onClick: _this7.onSortItems,\n          value: \"\".concat(Indexes[index].sort_on, \"|descending\"),\n          className: \"sort_\".concat(Indexes[index].sort_on, \"_descending icon-align\"),\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1658,\n            columnNumber: 45\n          }\n        }, __jsx(Icon, {\n          name: sortUpSVG,\n          size: \"24px\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1663,\n            columnNumber: 47\n          }\n        }), ' ', __jsx(FormattedMessage, {\n          id: \"Descending\",\n          defaultMessage: \"Descending\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1667,\n            columnNumber: 47\n          }\n        }))));\n      })))), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1679,\n          columnNumber: 31\n        }\n      }, __jsx(Popup, {\n        menu: true,\n        position: \"bottom left\",\n        flowing: true,\n        basic: true,\n        on: \"click\",\n        popper: {\n          className: 'dropdown-popup'\n        },\n        trigger: __jsx(Icon, {\n          name: this.state.selected.length === 0 ? checkboxUncheckedSVG : this.state.selected.length === this.state.items.length ? checkboxCheckedSVG : checkboxIndeterminateSVG,\n          color: this.state.selected.length > 0 ? '#007eb1' : '#826a6a',\n          className: \"dropdown-popup-trigger\",\n          size: \"24px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1690,\n            columnNumber: 37\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1680,\n          columnNumber: 33\n        }\n      }, __jsx(Menu, {\n        vertical: true,\n        borderless: true,\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1709,\n          columnNumber: 35\n        }\n      }, __jsx(Menu.Header, {\n        content: this.props.intl.formatMessage(messages.select),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1710,\n          columnNumber: 37\n        }\n      }), __jsx(Menu.Item, {\n        onClick: this.onSelectAll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1715,\n          columnNumber: 37\n        }\n      }, __jsx(Icon, {\n        name: checkboxCheckedSVG,\n        color: \"#007eb1\",\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1716,\n          columnNumber: 39\n        }\n      }), ' ', __jsx(FormattedMessage, {\n        id: \"All\",\n        defaultMessage: \"All\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1721,\n          columnNumber: 39\n        }\n      })), __jsx(Menu.Item, {\n        onClick: this.onSelectNone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1726,\n          columnNumber: 37\n        }\n      }, __jsx(Icon, {\n        name: checkboxUncheckedSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1727,\n          columnNumber: 39\n        }\n      }), ' ', __jsx(FormattedMessage, {\n        id: \"None\",\n        defaultMessage: \"None\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1731,\n          columnNumber: 39\n        }\n      })), __jsx(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1736,\n          columnNumber: 37\n        }\n      }), __jsx(Menu.Header, {\n        content: this.props.intl.formatMessage(messages.selected, {\n          count: this.state.selected.length\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1737,\n          columnNumber: 37\n        }\n      }), __jsx(Input, {\n        icon: __jsx(Icon, {\n          name: zoomSVG,\n          size: \"24px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1744,\n            columnNumber: 45\n          }\n        }),\n        iconPosition: \"left\",\n        className: \"item search\",\n        placeholder: this.props.intl.formatMessage(messages.filter),\n        value: this.state.selectedMenuFilter || '',\n        onChange: this.onChangeSelected,\n        onClick: function onClick(e) {\n          e.preventDefault();\n          e.stopPropagation();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1743,\n          columnNumber: 37\n        }\n      }), __jsx(Menu.Menu, {\n        scrolling: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1759,\n          columnNumber: 37\n        }\n      }, _map(filteredItems, function (item) {\n        return __jsx(Menu.Item, {\n          key: item,\n          value: item,\n          onClick: _this7.onDeselect,\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1761,\n            columnNumber: 41\n          }\n        }, __jsx(Icon, {\n          name: deleteSVG,\n          color: \"#e40166\",\n          size: \"24px\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1766,\n            columnNumber: 43\n          }\n        }), ' ', _this7.getFieldById(item, 'title'));\n      }))))), __jsx(Table.HeaderCell, {\n        width: Math.ceil(16 / this.state.index.selectedCount),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1778,\n          columnNumber: 31\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Title\",\n        defaultMessage: \"Title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1783,\n          columnNumber: 33\n        }\n      })), _map(this.state.index.order, function (index, order) {\n        return _this7.state.index.values[index].selected && __jsx(ContentsIndexHeader, {\n          key: index,\n          width: Math.ceil(16 / _this7.state.index.selectedCount),\n          label: _this7.state.index.values[index].label,\n          order: order,\n          onOrderIndex: _this7.onOrderIndex,\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1792,\n            columnNumber: 37\n          }\n        });\n      }), __jsx(Table.HeaderCell, {\n        textAlign: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1805,\n          columnNumber: 31\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Actions\",\n        defaultMessage: \"Actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1806,\n          columnNumber: 33\n        }\n      })))), __jsx(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1813,\n          columnNumber: 27\n        }\n      }, this.state.items.map(function (item, order) {\n        return __jsx(ContentsItem, {\n          key: item['@id'],\n          item: item,\n          order: order,\n          selected: _indexOf(_this7.state.selected, item['@id']) !== -1,\n          onClick: _this7.onSelect,\n          indexes: _filter(_map(_this7.state.index.order, function (index) {\n            return {\n              id: index,\n              type: _this7.state.index.values[index].type\n            };\n          }), function (index) {\n            return _this7.state.index.values[index.id].selected;\n          }),\n          onCut: _this7.cut,\n          onCopy: _this7.copy,\n          onDelete: _this7[\"delete\"],\n          onOrderItem: _this7.onOrderItem,\n          onMoveToTop: _this7.onMoveToTop,\n          onMoveToBottom: _this7.onMoveToBottom,\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1815,\n            columnNumber: 31\n          }\n        });\n      })))), __jsx(\"div\", {\n        className: \"contents-pagination\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1844,\n          columnNumber: 23\n        }\n      }, __jsx(Pagination, {\n        current: this.state.currentPage,\n        total: Math.ceil(this.props.total / this.state.pageSize),\n        pageSize: this.state.pageSize,\n        pageSizes: [50, this.props.intl.formatMessage(messages.all)],\n        onChangePage: this.onChangePage,\n        onChangePageSize: this.onChangePageSize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1845,\n          columnNumber: 25\n        }\n      })))))), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1864,\n          columnNumber: 17\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        inner: __jsx(Link, {\n          to: \"\".concat(path),\n          \"aria-label\": this.props.intl.formatMessage(messages.back),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1868,\n            columnNumber: 23\n          }\n        }, __jsx(Icon, {\n          name: backSVG,\n          className: \"contents circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.back),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1874,\n            columnNumber: 25\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1865,\n          columnNumber: 19\n        }\n      })))) : __jsx(Unauthorized, {\n        staticContext: this.props.staticContext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1888,\n          columnNumber: 11\n        }\n      })) : __jsx(Unauthorized, {\n        staticContext: this.props.staticContext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1892,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n  return Contents;\n}(Component);\n_defineProperty(Contents, \"propTypes\", {\n  action: PropTypes.string,\n  source: PropTypes.arrayOf(PropTypes.string),\n  searchContent: PropTypes.func.isRequired,\n  cut: PropTypes.func.isRequired,\n  copy: PropTypes.func.isRequired,\n  copyContent: PropTypes.func.isRequired,\n  deleteContent: PropTypes.func.isRequired,\n  moveContent: PropTypes.func.isRequired,\n  orderContent: PropTypes.func.isRequired,\n  sortContent: PropTypes.func.isRequired,\n  updateColumnsContent: PropTypes.func.isRequired,\n  linkIntegrityCheck: PropTypes.func.isRequired,\n  clipboardRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  deleteRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  updateRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  searchRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    '@type': PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string\n  })),\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    url: PropTypes.string\n  })).isRequired,\n  total: PropTypes.number.isRequired,\n  pathname: PropTypes.string.isRequired\n});\n_defineProperty(Contents, \"defaultProps\", {\n  items: [],\n  action: null,\n  source: null,\n  index: {\n    order: _keys(Indexes),\n    values: _mapValues(Indexes, function (value, key) {\n      return _objectSpread(_objectSpread({}, value), {}, {\n        selected: _indexOf(defaultIndexes, key) !== -1\n      });\n    }),\n    selectedCount: defaultIndexes.length + 1\n  }\n});\nvar dndContext;\nvar DragDropConnector = function DragDropConnector(props) {\n  _s();\n  var DragDropContext = props.reactDnd.DragDropContext;\n  var HTML5Backend = props.reactDndHtml5Backend[\"default\"];\n  var DndConnectedContents = React.useMemo(function () {\n    if (!dndContext) {\n      dndContext = DragDropContext(HTML5Backend);\n    }\n    return dndContext(Contents);\n  }, [DragDropContext, HTML5Backend]);\n  return __jsx(DndConnectedContents, _extends({}, props, {\n    __self: _this8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1910,\n      columnNumber: 10\n    }\n  }));\n};\n_s(DragDropConnector, \"NUzahrJANmJaPxVbSx+/A5Tmcj8=\");\n_c = DragDropConnector;\nexport var __test__ = compose(injectIntl, injectLazyLibs(['toastify', 'reactDnd']), connect(function (store, props) {\n  return {\n    token: store.userSession.token,\n    items: store.search.items,\n    sort: store.content.update.sort,\n    index: store.content.updatecolumns.idx,\n    breadcrumbs: store.breadcrumbs.items,\n    total: store.search.total,\n    searchRequest: {\n      loading: store.search.loading,\n      loaded: store.search.loaded\n    },\n    pathname: props.location.pathname,\n    action: store.clipboard.action,\n    source: store.clipboard.source,\n    clipboardRequest: store.clipboard.request,\n    deleteRequest: store.content[\"delete\"],\n    updateRequest: store.content.update,\n    objectActions: store.actions.actions.object,\n    orderRequest: store.content.order\n  };\n}, {\n  searchContent: searchContent,\n  cut: cut,\n  copy: copy,\n  copyContent: copyContent,\n  deleteContent: deleteContent,\n  listActions: listActions,\n  moveContent: moveContent,\n  orderContent: orderContent,\n  sortContent: sortContent,\n  updateColumnsContent: updateColumnsContent,\n  linkIntegrityCheck: linkIntegrityCheck,\n  getContent: getContent\n}))(Contents);\nexport default compose(injectIntl, connect(function (store, props) {\n  return {\n    token: store.userSession.token,\n    items: store.search.items,\n    sort: store.content.update.sort,\n    index: store.content.updatecolumns.idx,\n    breadcrumbs: store.breadcrumbs.items,\n    total: store.search.total,\n    searchRequest: {\n      loading: store.search.loading,\n      loaded: store.search.loaded\n    },\n    pathname: props.location.pathname,\n    action: store.clipboard.action,\n    source: store.clipboard.source,\n    clipboardRequest: store.clipboard.request,\n    deleteRequest: store.content[\"delete\"],\n    updateRequest: store.content.update,\n    objectActions: store.actions.actions.object,\n    orderRequest: store.content.order\n  };\n}, {\n  searchContent: searchContent,\n  cut: cut,\n  copy: copy,\n  copyContent: copyContent,\n  deleteContent: deleteContent,\n  listActions: listActions,\n  moveContent: moveContent,\n  orderContent: orderContent,\n  sortContent: sortContent,\n  updateColumnsContent: updateColumnsContent,\n  linkIntegrityCheck: linkIntegrityCheck,\n  getContent: getContent\n}), asyncConnect([{\n  key: 'actions',\n  // Dispatch async/await to make the operation syncronous, otherwise it returns\n  // before the promise is resolved\n  promise: function () {\n    var _promise = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref13) {\n      var location, dispatch;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              location = _ref13.location, dispatch = _ref13.store.dispatch;\n              _context2.next = 3;\n              return dispatch(listActions(getBaseUrl(location.pathname)));\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    function promise(_x3) {\n      return _promise.apply(this, arguments);\n    }\n    return promise;\n  }()\n}]), injectLazyLibs(['toastify', 'reactDnd', 'reactDndHtml5Backend']))(DragDropConnector);\nvar _c;\n$RefreshReg$(_c, \"DragDropConnector\");","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Portal","Link","Button","Confirm","Container","Divider","Dropdown","Menu","Input","Segment","Table","Loader","Dimmer","move","FormattedMessage","defineMessages","injectIntl","asyncConnect","searchContent","cut","copy","copyContent","deleteContent","listActions","moveContent","orderContent","sortContent","updateColumnsContent","linkIntegrityCheck","getContent","Indexes","defaultIndexes","ContentsBreadcrumbs","ContentsIndexHeader","ContentsItem","ContentsRenameModal","ContentsUploadModal","ContentsWorkflowModal","ContentsTagsModal","ContentsPropertiesModal","Pagination","Popup","Toolbar","Toast","Icon","Unauthorized","Helmet","getBaseUrl","injectLazyLibs","backSVG","cutSVG","deleteSVG","copySVG","tagSVG","renameSVG","semaphoreSVG","uploadSVG","propertiesSVG","pasteSVG","zoomSVG","checkboxUncheckedSVG","checkboxCheckedSVG","checkboxIndeterminateSVG","configurationSVG","sortDownSVG","sortUpSVG","downKeySVG","moreSVG","messages","back","contents","error","deleteConfirm","deleteError","loading","home","filter","messageCopied","messageCut","messageUpdate","messageReorder","messagePasted","messageWorkflowUpdate","paste","properties","rearrangeBy","rename","select","selected","selectColumns","sort","state","tags","upload","success","publicationDate","createdOn","expirationDate","id","uid","reviewState","folder","excludedFromNavigation","objectSize","lastCommentedDate","totalComments","creator","endDate","startDate","all","linkIntegrityMessageHeader","linkIntegrityMessageBody","linkIntegrityMessageExtra","deleteItemMessage","Contents","props","onDeselect","bind","onSelect","onSelectAll","onSelectIndex","onSelectNone","onDeleteOk","onDeleteCancel","onUploadOk","onUploadCancel","onRenameOk","onRenameCancel","onTagsOk","onTagsCancel","onPropertiesOk","onPropertiesCancel","onWorkflowOk","onWorkflowCancel","onChangeFilter","onChangePage","onChangePageSize","onOrderIndex","onOrderItem","onSortItems","onMoveToTop","onChangeSelected","onMoveToBottom","workflow","fetchContents","orderTimeout","showDelete","showUpload","showRename","showTags","showProperties","showWorkflow","itemsToDelete","items","currentPage","pageSize","index","order","values","value","key","selectedCount","length","sort_on","on","sort_order","isClient","linkIntegrityBreakages","filterTimeout","setState","_","prevState","item","getFieldById","nextProps","clipboardRequest","loaded","deleteRequest","updateRequest","pathname","toastify","toast","intl","formatMessage","searchRequest","orderRequest","event","newIndex","indexValue","indexKey","self","clearTimeout","setTimeout","stopPropagation","filteredItems","selectedItem","title","toLowerCase","includes","selectedMenuFilter","delta","itemIndex","backend","replace","split","field","metadata_fields","b_size","SearchableText","b_start","action","source","path","folderContentsAction","objectActions","token","breaches","breach","url","subjects","breadcrumbs","label","defaultMessage","className","count","e","preventDefault","Math","ceil","map","type","total","document","getElementById","staticContext","string","arrayOf","func","isRequired","shape","bool","description","number","dndContext","DragDropConnector","DragDropContext","reactDnd","HTML5Backend","reactDndHtml5Backend","DndConnectedContents","useMemo","__test__","store","userSession","search","content","update","updatecolumns","idx","location","clipboard","request","actions","object","promise","dispatch"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Contents/Contents.jsx"],"sourcesContent":["/**\n * Contents component.\n * @module components/manage/Contents/Contents\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Portal } from 'react-portal';\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n  Confirm,\n  Container,\n  Divider,\n  Dropdown,\n  Menu,\n  Input,\n  Segment,\n  Table,\n  Loader,\n  Dimmer,\n} from 'semantic-ui-react';\nimport {\n  concat,\n  filter,\n  find,\n  indexOf,\n  keys,\n  map,\n  mapValues,\n  pull,\n} from 'lodash';\nimport move from 'lodash-move';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { asyncConnect } from '@plone/volto/helpers';\n\nimport {\n  searchContent,\n  cut,\n  copy,\n  copyContent,\n  deleteContent,\n  listActions,\n  moveContent,\n  orderContent,\n  sortContent,\n  updateColumnsContent,\n  linkIntegrityCheck,\n  getContent,\n} from '@plone/volto/actions';\nimport Indexes, { defaultIndexes } from '@plone/volto/constants/Indexes';\nimport {\n  ContentsBreadcrumbs,\n  ContentsIndexHeader,\n  ContentsItem,\n  ContentsRenameModal,\n  ContentsUploadModal,\n  ContentsWorkflowModal,\n  ContentsTagsModal,\n  ContentsPropertiesModal,\n  Pagination,\n  Popup,\n  Toolbar,\n  Toast,\n  Icon,\n  Unauthorized,\n} from '@plone/volto/components';\n\nimport { Helmet, getBaseUrl } from '@plone/volto/helpers';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport backSVG from '@plone/volto/icons/back.svg';\nimport cutSVG from '@plone/volto/icons/cut.svg';\nimport deleteSVG from '@plone/volto/icons/delete.svg';\nimport copySVG from '@plone/volto/icons/copy.svg';\nimport tagSVG from '@plone/volto/icons/tag.svg';\nimport renameSVG from '@plone/volto/icons/rename.svg';\nimport semaphoreSVG from '@plone/volto/icons/semaphore.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\nimport propertiesSVG from '@plone/volto/icons/properties.svg';\nimport pasteSVG from '@plone/volto/icons/paste.svg';\nimport zoomSVG from '@plone/volto/icons/zoom.svg';\nimport checkboxUncheckedSVG from '@plone/volto/icons/checkbox-unchecked.svg';\nimport checkboxCheckedSVG from '@plone/volto/icons/checkbox-checked.svg';\nimport checkboxIndeterminateSVG from '@plone/volto/icons/checkbox-indeterminate.svg';\nimport configurationSVG from '@plone/volto/icons/configuration-app.svg';\nimport sortDownSVG from '@plone/volto/icons/sort-down.svg';\nimport sortUpSVG from '@plone/volto/icons/sort-up.svg';\nimport downKeySVG from '@plone/volto/icons/down-key.svg';\nimport moreSVG from '@plone/volto/icons/more.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  contents: {\n    id: 'Contents',\n    defaultMessage: 'Contents',\n  },\n  copy: {\n    id: 'Copy',\n    defaultMessage: 'Copy',\n  },\n  cut: {\n    id: 'Cut',\n    defaultMessage: 'Cut',\n  },\n  error: {\n    id: \"You can't paste this content here\",\n    defaultMessage: \"You can't paste this content here\",\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n  deleteConfirm: {\n    id: 'Do you really want to delete the following items?',\n    defaultMessage: 'Do you really want to delete the following items?',\n  },\n  deleteError: {\n    id: 'The item could not be deleted.',\n    defaultMessage: 'The item could not be deleted.',\n  },\n  loading: {\n    id: 'loading',\n    defaultMessage: 'Loading',\n  },\n  home: {\n    id: 'Home',\n    defaultMessage: 'Home',\n  },\n  filter: {\n    id: 'Filter…',\n    defaultMessage: 'Filter…',\n  },\n  messageCopied: {\n    id: 'Item(s) copied.',\n    defaultMessage: 'Item(s) copied.',\n  },\n  messageCut: {\n    id: 'Item(s) cut.',\n    defaultMessage: 'Item(s) cut.',\n  },\n  messageUpdate: {\n    id: 'Item(s) has been updated.',\n    defaultMessage: 'Item(s) has been updated.',\n  },\n  messageReorder: {\n    id: 'Item succesfully moved.',\n    defaultMessage: 'Item succesfully moved.',\n  },\n  messagePasted: {\n    id: 'Item(s) pasted.',\n    defaultMessage: 'Item(s) pasted.',\n  },\n  messageWorkflowUpdate: {\n    id: 'Item(s) state has been updated.',\n    defaultMessage: 'Item(s) state has been updated.',\n  },\n  paste: {\n    id: 'Paste',\n    defaultMessage: 'Paste',\n  },\n  properties: {\n    id: 'Properties',\n    defaultMessage: 'Properties',\n  },\n  rearrangeBy: {\n    id: 'Rearrange items by…',\n    defaultMessage: 'Rearrange items by…',\n  },\n  rename: {\n    id: 'Rename',\n    defaultMessage: 'Rename',\n  },\n  select: {\n    id: 'Select…',\n    defaultMessage: 'Select…',\n  },\n  selected: {\n    id: '{count} selected',\n    defaultMessage: '{count} selected',\n  },\n  selectColumns: {\n    id: 'Select columns to show',\n    defaultMessage: 'Select columns to show',\n  },\n  sort: {\n    id: 'sort',\n    defaultMessage: 'sort',\n  },\n  state: {\n    id: 'State',\n    defaultMessage: 'State',\n  },\n  tags: {\n    id: 'Tags',\n    defaultMessage: 'Tags',\n  },\n  upload: {\n    id: 'Upload',\n    defaultMessage: 'Upload',\n  },\n  success: {\n    id: 'Success',\n    defaultMessage: 'Success',\n  },\n  publicationDate: {\n    id: 'Publication date',\n    defaultMessage: 'Publication date',\n  },\n  createdOn: {\n    id: 'Created on',\n    defaultMessage: 'Created on',\n  },\n  expirationDate: {\n    id: 'Expiration date',\n    defaultMessage: 'Expiration date',\n  },\n  id: {\n    id: 'ID',\n    defaultMessage: 'ID',\n  },\n  uid: {\n    id: 'UID',\n    defaultMessage: 'UID',\n  },\n  reviewState: {\n    id: 'Review state',\n    defaultMessage: 'Review state',\n  },\n  folder: {\n    id: 'Folder',\n    defaultMessage: 'Folder',\n  },\n  excludedFromNavigation: {\n    id: 'Excluded from navigation',\n    defaultMessage: 'Excluded from navigation',\n  },\n  objectSize: {\n    id: 'Object Size',\n    defaultMessage: 'Object Size',\n  },\n  lastCommentedDate: {\n    id: 'Last comment date',\n    defaultMessage: 'Last comment date',\n  },\n  totalComments: {\n    id: 'Total comments',\n    defaultMessage: 'Total comments',\n  },\n  creator: {\n    id: 'Creator',\n    defaultMessage: 'Creator',\n  },\n  endDate: {\n    id: 'End Date',\n    defaultMessage: 'End Date',\n  },\n  startDate: {\n    id: 'Start Date',\n    defaultMessage: 'Start Date',\n  },\n  all: {\n    id: 'All',\n    defaultMessage: 'All',\n  },\n  linkIntegrityMessageHeader: {\n    id: 'Potential link breakage',\n    defaultMessage: 'Potential link breakage',\n  },\n  linkIntegrityMessageBody: {\n    id:\n      'By deleting this item, you will break ' +\n      'links that exist in the items listed below. ' +\n      'If this is indeed what you want to do, ' +\n      'we recommend that remove these references first.',\n    defaultMessage:\n      'By deleting this item, ' +\n      'you will break links that exist in the items ' +\n      'listed below. If this is indeed what you ' +\n      'want to do, we recommend that remove ' +\n      'these references first.',\n  },\n  linkIntegrityMessageExtra: {\n    id: 'This Page is referenced by the following items:',\n    defaultMessage: 'This Page is referenced by the following items:',\n  },\n  deleteItemMessage: {\n    id: 'Items to be deleted:',\n    defaultMessage: 'Items to be deleted:',\n  },\n});\n\n/**\n * Contents class.\n * @class Contents\n * @extends Component\n */\nclass Contents extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    action: PropTypes.string,\n    source: PropTypes.arrayOf(PropTypes.string),\n    searchContent: PropTypes.func.isRequired,\n    cut: PropTypes.func.isRequired,\n    copy: PropTypes.func.isRequired,\n    copyContent: PropTypes.func.isRequired,\n    deleteContent: PropTypes.func.isRequired,\n    moveContent: PropTypes.func.isRequired,\n    orderContent: PropTypes.func.isRequired,\n    sortContent: PropTypes.func.isRequired,\n    updateColumnsContent: PropTypes.func.isRequired,\n    linkIntegrityCheck: PropTypes.func.isRequired,\n    clipboardRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    deleteRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    updateRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    searchRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        '@type': PropTypes.string,\n        title: PropTypes.string,\n        description: PropTypes.string,\n      }),\n    ),\n    breadcrumbs: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        url: PropTypes.string,\n      }),\n    ).isRequired,\n    total: PropTypes.number.isRequired,\n    pathname: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    items: [],\n    action: null,\n    source: null,\n    index: {\n      order: keys(Indexes),\n      values: mapValues(Indexes, (value, key) => ({\n        ...value,\n        selected: indexOf(defaultIndexes, key) !== -1,\n      })),\n      selectedCount: defaultIndexes.length + 1,\n    },\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs ContentsComponent\n   */\n  constructor(props) {\n    super(props);\n    this.onDeselect = this.onDeselect.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onSelectAll = this.onSelectAll.bind(this);\n    this.onSelectIndex = this.onSelectIndex.bind(this);\n    this.onSelectNone = this.onSelectNone.bind(this);\n    this.onDeleteOk = this.onDeleteOk.bind(this);\n    this.onDeleteCancel = this.onDeleteCancel.bind(this);\n    this.onUploadOk = this.onUploadOk.bind(this);\n    this.onUploadCancel = this.onUploadCancel.bind(this);\n    this.onRenameOk = this.onRenameOk.bind(this);\n    this.onRenameCancel = this.onRenameCancel.bind(this);\n    this.onTagsOk = this.onTagsOk.bind(this);\n    this.onTagsCancel = this.onTagsCancel.bind(this);\n    this.onPropertiesOk = this.onPropertiesOk.bind(this);\n    this.onPropertiesCancel = this.onPropertiesCancel.bind(this);\n    this.onWorkflowOk = this.onWorkflowOk.bind(this);\n    this.onWorkflowCancel = this.onWorkflowCancel.bind(this);\n    this.onChangeFilter = this.onChangeFilter.bind(this);\n    this.onChangePage = this.onChangePage.bind(this);\n    this.onChangePageSize = this.onChangePageSize.bind(this);\n    this.onOrderIndex = this.onOrderIndex.bind(this);\n    this.onOrderItem = this.onOrderItem.bind(this);\n    this.onSortItems = this.onSortItems.bind(this);\n    this.onMoveToTop = this.onMoveToTop.bind(this);\n    this.onChangeSelected = this.onChangeSelected.bind(this);\n    this.onMoveToBottom = this.onMoveToBottom.bind(this);\n    this.cut = this.cut.bind(this);\n    this.copy = this.copy.bind(this);\n    this.delete = this.delete.bind(this);\n    this.upload = this.upload.bind(this);\n    this.rename = this.rename.bind(this);\n    this.tags = this.tags.bind(this);\n    this.properties = this.properties.bind(this);\n    this.workflow = this.workflow.bind(this);\n    this.paste = this.paste.bind(this);\n    this.fetchContents = this.fetchContents.bind(this);\n    this.orderTimeout = null;\n    this.state = {\n      selected: [],\n      showDelete: false,\n      showUpload: false,\n      showRename: false,\n      showTags: false,\n      showProperties: false,\n      showWorkflow: false,\n      itemsToDelete: [],\n      items: this.props.items,\n      filter: '',\n      currentPage: 0,\n      pageSize: 50,\n      index: this.props.index || {\n        order: keys(Indexes),\n        values: mapValues(Indexes, (value, key) => ({\n          ...value,\n          selected: indexOf(defaultIndexes, key) !== -1,\n        })),\n        selectedCount: defaultIndexes.length + 1,\n      },\n      sort_on: this.props.sort?.on || 'getObjPositionInParent',\n      sort_order: this.props.sort?.order || 'ascending',\n      isClient: false,\n      linkIntegrityBreakages: '',\n    };\n    this.filterTimeout = null;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.fetchContents();\n    this.setState({ isClient: true });\n  }\n\n  async componentDidUpdate(_, prevState) {\n    if (\n      this.state.itemsToDelete !== prevState.itemsToDelete &&\n      this.state.itemsToDelete.length > 0\n    ) {\n      this.setState({\n        linkIntegrityBreakages: await this.props.linkIntegrityCheck(\n          map(this.state.itemsToDelete, (item) =>\n            this.getFieldById(item, 'UID'),\n          ),\n        ),\n      });\n    }\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      (this.props.clipboardRequest.loading &&\n        nextProps.clipboardRequest.loaded) ||\n      (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded) ||\n      (this.props.updateRequest.loading && nextProps.updateRequest.loaded)\n    ) {\n      this.fetchContents(nextProps.pathname);\n    }\n    if (this.props.updateRequest.loading && nextProps.updateRequest.loaded) {\n      this.props.toastify.toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.messageUpdate)}\n        />,\n      );\n    }\n    if (this.props.pathname !== nextProps.pathname) {\n      // Refetching content to sync the current object in the toolbar\n      this.props.getContent(getBaseUrl(nextProps.pathname));\n      this.setState(\n        {\n          currentPage: 0,\n        },\n        () =>\n          this.setState({ filter: '' }, () =>\n            this.fetchContents(nextProps.pathname),\n          ),\n      );\n    }\n    if (this.props.searchRequest.loading && nextProps.searchRequest.loaded) {\n      this.setState({\n        items: nextProps.items,\n      });\n    }\n    if (\n      this.props.clipboardRequest.loading &&\n      nextProps.clipboardRequest.error\n    ) {\n      this.props.toastify.toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.error)}\n          content={this.props.intl.formatMessage(messages.error)}\n        />,\n      );\n    }\n\n    if (\n      this.props.clipboardRequest.loading &&\n      nextProps.clipboardRequest.loaded\n    ) {\n      this.props.toastify.toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.messagePasted)}\n        />,\n      );\n    }\n\n    if (this.props.deleteRequest.loading && nextProps.deleteRequest.error) {\n      this.props.toastify.toast.error(\n        <Toast\n          error\n          title={this.props.intl.formatMessage(messages.deleteError)}\n          content={this.props.intl.formatMessage(messages.deleteError)}\n        />,\n      );\n    }\n\n    if (this.props.orderRequest.loading && nextProps.orderRequest.loaded) {\n      this.props.toastify.toast.success(\n        <Toast\n          success\n          title={this.props.intl.formatMessage(messages.success)}\n          content={this.props.intl.formatMessage(messages.messageReorder)}\n        />,\n      );\n    }\n  }\n\n  /**\n   * On deselect handler\n   * @method onDeselect\n   * @param {object} event Event object\n   * @param {string} value Value\n   * @returns {undefined}\n   */\n  onDeselect(event, { value }) {\n    this.setState({\n      selected: pull(this.state.selected, value),\n    });\n  }\n\n  /**\n   * On select handler\n   * @method onSelect\n   * @param {object} event Event object\n   * @returns {undefined}\n   */\n  onSelect(event, id) {\n    if (indexOf(this.state.selected, id) === -1) {\n      this.setState({\n        selected: concat(this.state.selected, id),\n      });\n    } else {\n      this.setState({\n        selected: pull(this.state.selected, id),\n      });\n    }\n  }\n\n  /**\n   * On select all handler\n   * @method onSelectAll\n   * @returns {undefined}\n   */\n  onSelectAll() {\n    this.setState({\n      selected: map(this.state.items, (item) => item['@id']),\n    });\n  }\n\n  /**\n   * On select none handler\n   * @method onSelectNone\n   * @returns {undefined}\n   */\n  onSelectNone() {\n    this.setState({\n      selected: [],\n    });\n  }\n\n  /**\n   * On select index\n   * @method onSelectIndex\n   * @param {object} event Event object.\n   * @param {string} value Index value.\n   * @returns {undefined}\n   */\n  onSelectIndex(event, { value }) {\n    let newIndex = {\n      ...this.state.index,\n      selectedCount:\n        this.state.index.selectedCount +\n        (this.state.index.values[value].selected ? -1 : 1),\n      values: mapValues(this.state.index.values, (indexValue, indexKey) => ({\n        ...indexValue,\n        selected:\n          indexKey === value ? !indexValue.selected : indexValue.selected,\n      })),\n    };\n    this.setState({\n      index: newIndex,\n    });\n    this.props.updateColumnsContent(getBaseUrl(this.props.pathname), newIndex);\n  }\n\n  /**\n   * On change filter\n   * @method onChangeFilter\n   * @param {object} event Event object.\n   * @param {string} value Filter value.\n   * @returns {undefined}\n   */\n  onChangeFilter(event, { value }) {\n    const self = this;\n    clearTimeout(self.filterTimeout);\n    this.setState(\n      {\n        filter: value,\n      },\n      () => {\n        self.filterTimeout = setTimeout(() => {\n          self.fetchContents();\n        }, 200);\n      },\n    );\n  }\n\n  /**\n   * On change selected values (Filter)\n   * @method onChangeSelected\n   * @param {object} event Event object.\n   * @param {string} value Filter value.\n   * @returns {undefined}\n   */\n  onChangeSelected(event, { value }) {\n    event.stopPropagation();\n    const { items, selected } = this.state;\n\n    const filteredItems = filter(selected, (selectedItem) =>\n      find(items, (item) => item['@id'] === selectedItem)\n        .title.toLowerCase()\n        .includes(value.toLowerCase()),\n    );\n\n    this.setState({\n      filteredItems,\n      selectedMenuFilter: value,\n    });\n  }\n\n  /**\n   * On change page\n   * @method onChangePage\n   * @param {object} event Event object.\n   * @param {string} value Page value.\n   * @returns {undefined}\n   */\n  onChangePage(event, { value }) {\n    this.setState(\n      {\n        currentPage: value,\n      },\n      () => this.fetchContents(),\n    );\n  }\n\n  /**\n   * On change page size\n   * @method onChangePageSize\n   * @param {object} event Event object.\n   * @param {string} value Page size value.\n   * @returns {undefined}\n   */\n  onChangePageSize(event, { value }) {\n    this.setState(\n      {\n        pageSize: value,\n        currentPage: 0,\n      },\n      () => this.fetchContents(),\n    );\n  }\n\n  /**\n   * On order index\n   * @method onOrderIndex\n   * @param {number} index Index\n   * @param {number} delta Delta\n   * @returns {undefined}\n   */\n  onOrderIndex(index, delta) {\n    this.setState({\n      index: {\n        ...this.state.index,\n        order: move(this.state.index.order, index, index + delta),\n      },\n    });\n    this.props.updateColumnsContent(\n      getBaseUrl(this.props.pathname),\n      this.state.index,\n    );\n  }\n\n  /**\n   * On order item\n   * @method onOrderItem\n   * @param {string} id Item id\n   * @param {number} itemIndex Item index\n   * @param {number} delta Delta\n   * @returns {undefined}\n   */\n  onOrderItem(id, itemIndex, delta, backend) {\n    if (backend) {\n      this.props.orderContent(\n        getBaseUrl(this.props.pathname),\n        id.replace(/^.*\\//, ''),\n        delta,\n      );\n    } else {\n      this.setState({\n        items: move(this.state.items, itemIndex, itemIndex + delta),\n      });\n    }\n  }\n\n  /**\n   * On sort items\n   * @method onSortItems\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n  onSortItems(event, { value }) {\n    const values = value.split('|');\n    this.setState({\n      sort_on: values[0],\n      sort_order: values[1],\n    });\n    this.props.sortContent(\n      getBaseUrl(this.props.pathname),\n      values[0],\n      values[1],\n    );\n  }\n\n  /**\n   * On move to top\n   * @method onMoveToTop\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n  onMoveToTop(event, { value }) {\n    const id = this.state.items[value]['@id'];\n    value = this.state.currentPage * this.state.pageSize + value;\n    this.props.orderContent(\n      getBaseUrl(this.props.pathname),\n      id.replace(/^.*\\//, ''),\n      -value,\n    );\n    this.setState(\n      {\n        currentPage: 0,\n      },\n      () => this.fetchContents(),\n    );\n  }\n\n  /**\n   * On move to bottom\n   * @method onMoveToBottom\n   * @param {object} event Event object\n   * @param {string} value Item index\n   * @returns {undefined}\n   */\n  onMoveToBottom(event, { value }) {\n    this.onOrderItem(\n      this.state.items[value]['@id'],\n      value,\n      this.state.items.length - 1 - value,\n      false,\n    );\n    this.onOrderItem(\n      this.state.items[value]['@id'],\n      value,\n      this.state.items.length - 1 - value,\n      true,\n    );\n  }\n\n  /**\n   * On delete ok\n   * @method onDeleteOk\n   * @returns {undefined}\n   */\n  onDeleteOk() {\n    this.props.deleteContent(this.state.itemsToDelete);\n    this.setState({\n      showDelete: false,\n      itemsToDelete: [],\n      selected: [],\n    });\n  }\n\n  /**\n   * On delete cancel\n   * @method onDeleteCancel\n   * @returns {undefined}\n   */\n  onDeleteCancel() {\n    this.setState({\n      showDelete: false,\n      itemsToDelete: [],\n    });\n  }\n\n  /**\n   * On upload ok\n   * @method onUploadOk\n   * @returns {undefined}\n   */\n  onUploadOk() {\n    this.fetchContents();\n    this.setState({\n      showUpload: false,\n    });\n  }\n\n  /**\n   * On upload cancel\n   * @method onUploadCancel\n   * @returns {undefined}\n   */\n  onUploadCancel() {\n    this.setState({\n      showUpload: false,\n    });\n  }\n\n  /**\n   * On rename ok\n   * @method onRenameOk\n   * @returns {undefined}\n   */\n  onRenameOk() {\n    this.setState({\n      showRename: false,\n      selected: [],\n    });\n  }\n\n  /**\n   * On rename cancel\n   * @method onRenameCancel\n   * @returns {undefined}\n   */\n  onRenameCancel() {\n    this.setState({\n      showRename: false,\n    });\n  }\n\n  /**\n   * On tags ok\n   * @method onTagsOk\n   * @returns {undefined}\n   */\n  onTagsOk() {\n    this.setState({\n      showTags: false,\n      selected: [],\n    });\n  }\n\n  /**\n   * On tags cancel\n   * @method onTagsCancel\n   * @returns {undefined}\n   */\n  onTagsCancel() {\n    this.setState({\n      showTags: false,\n    });\n  }\n\n  /**\n   * On properties ok\n   * @method onPropertiesOk\n   * @returns {undefined}\n   */\n  onPropertiesOk() {\n    this.setState({\n      showProperties: false,\n      selected: [],\n    });\n  }\n\n  /**\n   * On properties cancel\n   * @method onPropertiesCancel\n   * @returns {undefined}\n   */\n  onPropertiesCancel() {\n    this.setState({\n      showProperties: false,\n    });\n  }\n\n  /**\n   * On workflow ok\n   * @method onWorkflowOk\n   * @returns {undefined}\n   */\n  onWorkflowOk() {\n    this.fetchContents();\n    this.setState({\n      showWorkflow: false,\n      selected: [],\n    });\n    this.props.toastify.toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.messageWorkflowUpdate)}\n      />,\n    );\n  }\n\n  /**\n   * On workflow cancel\n   * @method onWorkflowCancel\n   * @returns {undefined}\n   */\n  onWorkflowCancel() {\n    this.setState({\n      showWorkflow: false,\n    });\n  }\n\n  /**\n   * Get field by id\n   * @method getFieldById\n   * @param {string} id Id of object\n   * @param {string} field Field of object\n   * @returns {string} Field of object\n   */\n  getFieldById(id, field) {\n    const item = find(this.state.items, { '@id': id });\n    return item ? item[field] : '';\n  }\n\n  /**\n   * Fetch contents handler\n   * @method fetchContents\n   * @param {string} pathname Pathname to fetch contents.\n   * @returns {undefined}\n   */\n  fetchContents(pathname) {\n    if (this.state.pageSize === this.props.intl.formatMessage(messages.all)) {\n      //'All'\n      this.props.searchContent(getBaseUrl(pathname || this.props.pathname), {\n        'path.depth': 1,\n        sort_on: this.state.sort_on,\n        sort_order: this.state.sort_order,\n        metadata_fields: '_all',\n        b_size: 100000000,\n        ...(this.state.filter && { SearchableText: `${this.state.filter}*` }),\n      });\n    } else {\n      this.props.searchContent(getBaseUrl(pathname || this.props.pathname), {\n        'path.depth': 1,\n        sort_on: this.state.sort_on,\n        sort_order: this.state.sort_order,\n        metadata_fields: '_all',\n        ...(this.state.filter && { SearchableText: `${this.state.filter}*` }),\n        b_size: this.state.pageSize,\n        b_start: this.state.currentPage * this.state.pageSize,\n      });\n    }\n  }\n\n  /**\n   * Cut handler\n   * @method cut\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n  cut(event, { value }) {\n    this.props.cut(value ? [value] : this.state.selected);\n    this.onSelectNone();\n    this.props.toastify.toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.messageCut)}\n      />,\n    );\n  }\n\n  /**\n   * Copy handler\n   * @method copy\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n  copy(event, { value }) {\n    this.props.copy(value ? [value] : this.state.selected);\n    this.onSelectNone();\n    this.props.toastify.toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.success)}\n        content={this.props.intl.formatMessage(messages.messageCopied)}\n      />,\n    );\n  }\n\n  /**\n   * Delete handler\n   * @method delete\n   * @param {Object} event Event object.\n   * @param {string} value Value of the event.\n   * @returns {undefined}\n   */\n  delete(event, { value }) {\n    this.setState({\n      showDelete: true,\n      itemsToDelete: value ? [value] : this.state.selected,\n    });\n  }\n\n  /**\n   * Upload handler\n   * @method upload\n   * @returns {undefined}\n   */\n  upload() {\n    this.setState({\n      showUpload: true,\n    });\n  }\n\n  /**\n   * Rename handler\n   * @method rename\n   * @returns {undefined}\n   */\n  rename() {\n    this.setState({\n      showRename: true,\n    });\n  }\n\n  /**\n   * Tags handler\n   * @method tags\n   * @returns {undefined}\n   */\n  tags() {\n    this.setState({\n      showTags: true,\n    });\n  }\n\n  /**\n   * Properties handler\n   * @method properties\n   * @returns {undefined}\n   */\n  properties() {\n    this.setState({\n      showProperties: true,\n    });\n  }\n\n  /**\n   * Workflow handler\n   * @method workflow\n   * @returns {undefined}\n   */\n  workflow() {\n    this.setState({\n      showWorkflow: true,\n    });\n  }\n\n  /**\n   * Paste handler\n   * @method paste\n   * @returns {undefined}\n   */\n  paste() {\n    if (this.props.action === 'copy') {\n      this.props.copyContent(\n        this.props.source,\n        getBaseUrl(this.props.pathname),\n      );\n    }\n    if (this.props.action === 'cut') {\n      this.props.moveContent(\n        this.props.source,\n        getBaseUrl(this.props.pathname),\n      );\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const selected = this.state.selected.length > 0;\n    const filteredItems = this.state.filteredItems || this.state.selected;\n    const path = getBaseUrl(this.props.pathname);\n    const folderContentsAction = find(this.props.objectActions, {\n      id: 'folderContents',\n    });\n    const loading =\n      (this.props.clipboardRequest?.loading &&\n        !this.props.clipboardRequest?.error) ||\n      (this.props.deleteRequest?.loading && !this.props.deleteRequest?.error) ||\n      (this.props.updateRequest?.loading && !this.props.updateRequest?.error) ||\n      (this.props.orderRequest?.loading && !this.props.orderRequest?.error) ||\n      (this.props.searchRequest?.loading && !this.props.searchRequest?.error);\n\n    return this.props.token && this.props.objectActions?.length > 0 ? (\n      <>\n        {folderContentsAction ? (\n          <Container id=\"page-contents\" className=\"folder-contents\">\n            <Dimmer.Dimmable as=\"div\" blurring dimmed={loading}>\n              <Dimmer active={loading} inverted>\n                <Loader indeterminate size=\"massive\">\n                  {this.props.intl.formatMessage(messages.loading)}\n                </Loader>\n              </Dimmer>\n\n              <Helmet\n                title={this.props.intl.formatMessage(messages.contents)}\n              />\n              <div className=\"container\">\n                <article id=\"content\">\n                  <Confirm\n                    open={this.state.showDelete}\n                    confirmButton=\"Delete\"\n                    header={this.props.intl.formatMessage(\n                      messages.deleteConfirm,\n                    )}\n                    content={\n                      <div className=\"content\">\n                        <h3>\n                          {this.props.intl.formatMessage(\n                            messages.deleteItemMessage,\n                          )}\n                        </h3>\n                        <ul className=\"content\">\n                          {map(this.state.itemsToDelete, (item) => (\n                            <li key={item}>\n                              {this.getFieldById(item, 'title')}\n                            </li>\n                          ))}\n                        </ul>\n                        {this.state.linkIntegrityBreakages.length > 0 ? (\n                          <div>\n                            <h3>\n                              {this.props.intl.formatMessage(\n                                messages.linkIntegrityMessageHeader,\n                              )}\n                            </h3>\n                            <p>\n                              {this.props.intl.formatMessage(\n                                messages.linkIntegrityMessageBody,\n                              )}\n                            </p>\n                            <ul className=\"content\">\n                              {map(\n                                this.state.linkIntegrityBreakages,\n                                (item) => (\n                                  <li key={item['@id']}>\n                                    <a href={item['@id']}>{item.title}</a>\n                                    <p>\n                                      {this.props.intl.formatMessage(\n                                        messages.linkIntegrityMessageExtra,\n                                      )}\n                                    </p>\n                                    <ul className=\"content\">\n                                      {map(item.breaches, (breach) => (\n                                        <li key={breach['@id']}>\n                                          <a href={breach['@id']}>\n                                            {breach.title}\n                                          </a>\n                                        </li>\n                                      ))}\n                                    </ul>\n                                  </li>\n                                ),\n                              )}\n                            </ul>\n                          </div>\n                        ) : (\n                          <div></div>\n                        )}\n                      </div>\n                    }\n                    onCancel={this.onDeleteCancel}\n                    onConfirm={this.onDeleteOk}\n                    size=\"mini\"\n                  />\n                  <ContentsUploadModal\n                    open={this.state.showUpload}\n                    onCancel={this.onUploadCancel}\n                    onOk={this.onUploadOk}\n                    pathname={getBaseUrl(this.props.pathname)}\n                  />\n                  <ContentsRenameModal\n                    open={this.state.showRename}\n                    onCancel={this.onRenameCancel}\n                    onOk={this.onRenameOk}\n                    items={map(this.state.selected, (item) => ({\n                      url: item,\n                      title: this.getFieldById(item, 'title'),\n                      id: this.getFieldById(item, 'id'),\n                    }))}\n                  />\n                  <ContentsTagsModal\n                    open={this.state.showTags}\n                    onCancel={this.onTagsCancel}\n                    onOk={this.onTagsOk}\n                    items={map(this.state.selected, (item) => ({\n                      url: item,\n                      subjects: this.getFieldById(item, 'Subject'),\n                    }))}\n                  />\n                  <ContentsPropertiesModal\n                    open={this.state.showProperties}\n                    onCancel={this.onPropertiesCancel}\n                    onOk={this.onPropertiesOk}\n                    items={this.state.selected}\n                  />\n                  {this.state.showWorkflow && (\n                    <ContentsWorkflowModal\n                      open={this.state.showWorkflow}\n                      onCancel={this.onWorkflowCancel}\n                      onOk={this.onWorkflowOk}\n                      items={this.state.selected}\n                    />\n                  )}\n                  <section id=\"content-core\">\n                    <Segment.Group raised>\n                      <Menu secondary attached className=\"top-menu\">\n                        <Menu.Menu className=\"top-menu-menu\">\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.upload}\n                                className=\"upload\"\n                              >\n                                <Icon\n                                  name={uploadSVG}\n                                  color=\"#007eb1\"\n                                  size=\"24px\"\n                                  className=\"upload\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.upload,\n                            )}\n                            size=\"mini\"\n                          />\n                        </Menu.Menu>\n                        <Menu.Menu className=\"top-menu-menu\">\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.rename}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={renameSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"rename\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.rename,\n                            )}\n                            size=\"mini\"\n                          />\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.workflow}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={semaphoreSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"semaphore\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.state,\n                            )}\n                            size=\"mini\"\n                          />\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.tags}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={tagSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"tag\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.tags,\n                            )}\n                            size=\"mini\"\n                          />\n\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.properties}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={propertiesSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"properties\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.properties,\n                            )}\n                            size=\"mini\"\n                          />\n                        </Menu.Menu>\n                        <Menu.Menu className=\"top-menu-menu\">\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.cut}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={cutSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"cut\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.cut,\n                            )}\n                            size=\"mini\"\n                          />\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.copy}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={copySVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"copy\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.copy,\n                            )}\n                            size=\"mini\"\n                          />\n\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.paste}\n                                disabled={!this.props.action}\n                              >\n                                <Icon\n                                  name={pasteSVG}\n                                  color={selected ? '#826a6a' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"paste\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.paste,\n                            )}\n                            size=\"mini\"\n                          />\n\n                          <Popup\n                            trigger={\n                              <Menu.Item\n                                icon\n                                as={Button}\n                                onClick={this.delete}\n                                disabled={!selected}\n                              >\n                                <Icon\n                                  name={deleteSVG}\n                                  color={selected ? '#e40166' : 'grey'}\n                                  size=\"24px\"\n                                  className=\"delete\"\n                                />\n                              </Menu.Item>\n                            }\n                            position=\"top center\"\n                            content={this.props.intl.formatMessage(\n                              messages.delete,\n                            )}\n                            size=\"mini\"\n                          />\n                        </Menu.Menu>\n                        <Menu.Menu\n                          position=\"right\"\n                          className=\"top-menu-searchbox\"\n                        >\n                          <div className=\"ui right aligned category search item\">\n                            <Input\n                              type=\"text\"\n                              transparent\n                              placeholder={this.props.intl.formatMessage(\n                                messages.filter,\n                              )}\n                              size=\"small\"\n                              value={this.state.filter}\n                              onChange={this.onChangeFilter}\n                            />\n                            <Icon\n                              name={zoomSVG}\n                              size=\"30px\"\n                              color=\"#007eb1\"\n                              className=\"zoom\"\n                            />\n                            <div className=\"results\" />\n                          </div>\n                        </Menu.Menu>\n                      </Menu>\n                      <Segment\n                        secondary\n                        attached\n                        className=\"contents-breadcrumbs\"\n                      >\n                        <ContentsBreadcrumbs items={this.props.breadcrumbs} />\n                        <Dropdown\n                          item\n                          upward={false}\n                          icon={\n                            <Icon name={moreSVG} size=\"24px\" color=\"#826a6a\" />\n                          }\n                          className=\"right floating selectIndex\"\n                        >\n                          <Dropdown.Menu className=\"left\">\n                            <Dropdown.Header\n                              content={this.props.intl.formatMessage(\n                                messages.selectColumns,\n                              )}\n                            />\n                            <Dropdown.Menu scrolling>\n                              {map(\n                                filter(\n                                  this.state.index.order,\n                                  (index) => index !== 'sortable_title',\n                                ),\n                                (index) => (\n                                  <Dropdown.Item\n                                    key={index}\n                                    value={index}\n                                    onClick={this.onSelectIndex}\n                                    className=\"iconAlign\"\n                                  >\n                                    {this.state.index.values[index].selected ? (\n                                      <Icon\n                                        name={checkboxCheckedSVG}\n                                        size=\"24px\"\n                                        color=\"#007eb1\"\n                                        className={\n                                          this.state.index.values[index].label\n                                        }\n                                      />\n                                    ) : (\n                                      <Icon\n                                        name={checkboxUncheckedSVG}\n                                        className={\n                                          this.state.index.values[index].label\n                                        }\n                                        size=\"24px\"\n                                      />\n                                    )}\n                                    <span>\n                                      {' '}\n                                      {this.props.intl.formatMessage({\n                                        id: this.state.index.values[index]\n                                          .label,\n                                        defaultMessage: this.state.index.values[\n                                          index\n                                        ].label,\n                                      })}\n                                    </span>\n                                  </Dropdown.Item>\n                                ),\n                              )}\n                            </Dropdown.Menu>\n                          </Dropdown.Menu>\n                        </Dropdown>\n                      </Segment>\n                      <div className=\"contents-table-wrapper\">\n                        <Table selectable compact singleLine attached>\n                          <Table.Header>\n                            <Table.Row>\n                              <Table.HeaderCell>\n                                <Popup\n                                  menu={true}\n                                  position=\"bottom left\"\n                                  flowing={true}\n                                  basic={true}\n                                  on=\"click\"\n                                  popper={{\n                                    className: 'dropdown-popup',\n                                  }}\n                                  trigger={\n                                    <Icon\n                                      name={configurationSVG}\n                                      size=\"24px\"\n                                      color=\"#826a6a\"\n                                      className=\"dropdown-popup-trigger configuration-svg\"\n                                    />\n                                  }\n                                >\n                                  <Menu vertical borderless fluid>\n                                    <Menu.Header\n                                      content={this.props.intl.formatMessage(\n                                        messages.rearrangeBy,\n                                      )}\n                                    />\n                                    {map(\n                                      [\n                                        'id',\n                                        'sortable_title',\n                                        'EffectiveDate',\n                                        'CreationDate',\n                                        'ModificationDate',\n                                        'portal_type',\n                                      ],\n                                      (index) => (\n                                        <Dropdown\n                                          key={index}\n                                          item\n                                          simple\n                                          className={`sort_${index} icon-align`}\n                                          icon={\n                                            <Icon\n                                              name={downKeySVG}\n                                              size=\"24px\"\n                                              className=\"left\"\n                                            />\n                                          }\n                                          text={this.props.intl.formatMessage({\n                                            id: Indexes[index].label,\n                                          })}\n                                        >\n                                          <Dropdown.Menu>\n                                            <Dropdown.Item\n                                              onClick={this.onSortItems}\n                                              value={`${Indexes[index].sort_on}|ascending`}\n                                              className={`sort_${Indexes[index].sort_on}_ascending icon-align`}\n                                            >\n                                              <Icon\n                                                name={sortDownSVG}\n                                                size=\"24px\"\n                                              />{' '}\n                                              <FormattedMessage\n                                                id=\"Ascending\"\n                                                defaultMessage=\"Ascending\"\n                                              />\n                                            </Dropdown.Item>\n                                            <Dropdown.Item\n                                              onClick={this.onSortItems}\n                                              value={`${Indexes[index].sort_on}|descending`}\n                                              className={`sort_${Indexes[index].sort_on}_descending icon-align`}\n                                            >\n                                              <Icon\n                                                name={sortUpSVG}\n                                                size=\"24px\"\n                                              />{' '}\n                                              <FormattedMessage\n                                                id=\"Descending\"\n                                                defaultMessage=\"Descending\"\n                                              />\n                                            </Dropdown.Item>\n                                          </Dropdown.Menu>\n                                        </Dropdown>\n                                      ),\n                                    )}\n                                  </Menu>\n                                </Popup>\n                              </Table.HeaderCell>\n                              <Table.HeaderCell>\n                                <Popup\n                                  menu={true}\n                                  position=\"bottom left\"\n                                  flowing={true}\n                                  basic={true}\n                                  on=\"click\"\n                                  popper={{\n                                    className: 'dropdown-popup',\n                                  }}\n                                  trigger={\n                                    <Icon\n                                      name={\n                                        this.state.selected.length === 0\n                                          ? checkboxUncheckedSVG\n                                          : this.state.selected.length ===\n                                            this.state.items.length\n                                          ? checkboxCheckedSVG\n                                          : checkboxIndeterminateSVG\n                                      }\n                                      color={\n                                        this.state.selected.length > 0\n                                          ? '#007eb1'\n                                          : '#826a6a'\n                                      }\n                                      className=\"dropdown-popup-trigger\"\n                                      size=\"24px\"\n                                    />\n                                  }\n                                >\n                                  <Menu vertical borderless fluid>\n                                    <Menu.Header\n                                      content={this.props.intl.formatMessage(\n                                        messages.select,\n                                      )}\n                                    />\n                                    <Menu.Item onClick={this.onSelectAll}>\n                                      <Icon\n                                        name={checkboxCheckedSVG}\n                                        color=\"#007eb1\"\n                                        size=\"24px\"\n                                      />{' '}\n                                      <FormattedMessage\n                                        id=\"All\"\n                                        defaultMessage=\"All\"\n                                      />\n                                    </Menu.Item>\n                                    <Menu.Item onClick={this.onSelectNone}>\n                                      <Icon\n                                        name={checkboxUncheckedSVG}\n                                        size=\"24px\"\n                                      />{' '}\n                                      <FormattedMessage\n                                        id=\"None\"\n                                        defaultMessage=\"None\"\n                                      />\n                                    </Menu.Item>\n                                    <Divider />\n                                    <Menu.Header\n                                      content={this.props.intl.formatMessage(\n                                        messages.selected,\n                                        { count: this.state.selected.length },\n                                      )}\n                                    />\n                                    <Input\n                                      icon={<Icon name={zoomSVG} size=\"24px\" />}\n                                      iconPosition=\"left\"\n                                      className=\"item search\"\n                                      placeholder={this.props.intl.formatMessage(\n                                        messages.filter,\n                                      )}\n                                      value={\n                                        this.state.selectedMenuFilter || ''\n                                      }\n                                      onChange={this.onChangeSelected}\n                                      onClick={(e) => {\n                                        e.preventDefault();\n                                        e.stopPropagation();\n                                      }}\n                                    />\n                                    <Menu.Menu scrolling>\n                                      {map(filteredItems, (item) => (\n                                        <Menu.Item\n                                          key={item}\n                                          value={item}\n                                          onClick={this.onDeselect}\n                                        >\n                                          <Icon\n                                            name={deleteSVG}\n                                            color=\"#e40166\"\n                                            size=\"24px\"\n                                          />{' '}\n                                          {this.getFieldById(item, 'title')}\n                                        </Menu.Item>\n                                      ))}\n                                    </Menu.Menu>\n                                  </Menu>\n                                </Popup>\n                              </Table.HeaderCell>\n                              <Table.HeaderCell\n                                width={Math.ceil(\n                                  16 / this.state.index.selectedCount,\n                                )}\n                              >\n                                <FormattedMessage\n                                  id=\"Title\"\n                                  defaultMessage=\"Title\"\n                                />\n                              </Table.HeaderCell>\n                              {map(\n                                this.state.index.order,\n                                (index, order) =>\n                                  this.state.index.values[index].selected && (\n                                    <ContentsIndexHeader\n                                      key={index}\n                                      width={Math.ceil(\n                                        16 / this.state.index.selectedCount,\n                                      )}\n                                      label={\n                                        this.state.index.values[index].label\n                                      }\n                                      order={order}\n                                      onOrderIndex={this.onOrderIndex}\n                                    />\n                                  ),\n                              )}\n                              <Table.HeaderCell textAlign=\"right\">\n                                <FormattedMessage\n                                  id=\"Actions\"\n                                  defaultMessage=\"Actions\"\n                                />\n                              </Table.HeaderCell>\n                            </Table.Row>\n                          </Table.Header>\n                          <Table.Body>\n                            {this.state.items.map((item, order) => (\n                              <ContentsItem\n                                key={item['@id']}\n                                item={item}\n                                order={order}\n                                selected={\n                                  indexOf(this.state.selected, item['@id']) !==\n                                  -1\n                                }\n                                onClick={this.onSelect}\n                                indexes={filter(\n                                  map(this.state.index.order, (index) => ({\n                                    id: index,\n                                    type: this.state.index.values[index].type,\n                                  })),\n                                  (index) =>\n                                    this.state.index.values[index.id].selected,\n                                )}\n                                onCut={this.cut}\n                                onCopy={this.copy}\n                                onDelete={this.delete}\n                                onOrderItem={this.onOrderItem}\n                                onMoveToTop={this.onMoveToTop}\n                                onMoveToBottom={this.onMoveToBottom}\n                              />\n                            ))}\n                          </Table.Body>\n                        </Table>\n                      </div>\n\n                      <div className=\"contents-pagination\">\n                        <Pagination\n                          current={this.state.currentPage}\n                          total={Math.ceil(\n                            this.props.total / this.state.pageSize,\n                          )}\n                          pageSize={this.state.pageSize}\n                          pageSizes={[\n                            50,\n                            this.props.intl.formatMessage(messages.all),\n                          ]}\n                          onChangePage={this.onChangePage}\n                          onChangePageSize={this.onChangePageSize}\n                        />\n                      </div>\n                    </Segment.Group>\n                  </section>\n                </article>\n              </div>\n              {this.state.isClient && (\n                <Portal node={document.getElementById('toolbar')}>\n                  <Toolbar\n                    pathname={this.props.pathname}\n                    inner={\n                      <Link\n                        to={`${path}`}\n                        aria-label={this.props.intl.formatMessage(\n                          messages.back,\n                        )}\n                      >\n                        <Icon\n                          name={backSVG}\n                          className=\"contents circled\"\n                          size=\"30px\"\n                          title={this.props.intl.formatMessage(messages.back)}\n                        />\n                      </Link>\n                    }\n                  />\n                </Portal>\n              )}\n            </Dimmer.Dimmable>\n          </Container>\n        ) : (\n          <Unauthorized staticContext={this.props.staticContext} />\n        )}\n      </>\n    ) : (\n      <Unauthorized staticContext={this.props.staticContext} />\n    );\n  }\n}\n\nlet dndContext;\n\nconst DragDropConnector = (props) => {\n  const { DragDropContext } = props.reactDnd;\n  const HTML5Backend = props.reactDndHtml5Backend.default;\n\n  const DndConnectedContents = React.useMemo(() => {\n    if (!dndContext) {\n      dndContext = DragDropContext(HTML5Backend);\n    }\n    return dndContext(Contents);\n  }, [DragDropContext, HTML5Backend]);\n\n  return <DndConnectedContents {...props} />;\n};\n\nexport const __test__ = compose(\n  injectIntl,\n  injectLazyLibs(['toastify', 'reactDnd']),\n  connect(\n    (store, props) => {\n      return {\n        token: store.userSession.token,\n        items: store.search.items,\n        sort: store.content.update.sort,\n        index: store.content.updatecolumns.idx,\n        breadcrumbs: store.breadcrumbs.items,\n        total: store.search.total,\n        searchRequest: {\n          loading: store.search.loading,\n          loaded: store.search.loaded,\n        },\n        pathname: props.location.pathname,\n        action: store.clipboard.action,\n        source: store.clipboard.source,\n        clipboardRequest: store.clipboard.request,\n        deleteRequest: store.content.delete,\n        updateRequest: store.content.update,\n        objectActions: store.actions.actions.object,\n        orderRequest: store.content.order,\n      };\n    },\n    {\n      searchContent,\n      cut,\n      copy,\n      copyContent,\n      deleteContent,\n      listActions,\n      moveContent,\n      orderContent,\n      sortContent,\n      updateColumnsContent,\n      linkIntegrityCheck,\n      getContent,\n    },\n  ),\n)(Contents);\n\nexport default compose(\n  injectIntl,\n  connect(\n    (store, props) => {\n      return {\n        token: store.userSession.token,\n        items: store.search.items,\n        sort: store.content.update.sort,\n        index: store.content.updatecolumns.idx,\n        breadcrumbs: store.breadcrumbs.items,\n        total: store.search.total,\n        searchRequest: {\n          loading: store.search.loading,\n          loaded: store.search.loaded,\n        },\n        pathname: props.location.pathname,\n        action: store.clipboard.action,\n        source: store.clipboard.source,\n        clipboardRequest: store.clipboard.request,\n        deleteRequest: store.content.delete,\n        updateRequest: store.content.update,\n        objectActions: store.actions.actions.object,\n        orderRequest: store.content.order,\n      };\n    },\n    {\n      searchContent,\n      cut,\n      copy,\n      copyContent,\n      deleteContent,\n      listActions,\n      moveContent,\n      orderContent,\n      sortContent,\n      updateColumnsContent,\n      linkIntegrityCheck,\n      getContent,\n    },\n  ),\n  asyncConnect([\n    {\n      key: 'actions',\n      // Dispatch async/await to make the operation syncronous, otherwise it returns\n      // before the promise is resolved\n      promise: async ({ location, store: { dispatch } }) =>\n        await dispatch(listActions(getBaseUrl(location.pathname))),\n    },\n  ]),\n  injectLazyLibs(['toastify', 'reactDnd', 'reactDndHtml5Backend']),\n)(DragDropConnector);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"Contents","defaultMessage":"Contents"},{"id":"Copy","defaultMessage":"Copy"},{"id":"Cut","defaultMessage":"Cut"},{"id":"You can't paste this content here","defaultMessage":"You can't paste this content here"},{"id":"Delete","defaultMessage":"Delete"},{"id":"Do you really want to delete the following items?","defaultMessage":"Do you really want to delete the following items?"},{"id":"The item could not be deleted.","defaultMessage":"The item could not be deleted."},{"id":"loading","defaultMessage":"Loading"},{"id":"Home","defaultMessage":"Home"},{"id":"Filter…","defaultMessage":"Filter…"},{"id":"Item(s) copied.","defaultMessage":"Item(s) copied."},{"id":"Item(s) cut.","defaultMessage":"Item(s) cut."},{"id":"Item(s) has been updated.","defaultMessage":"Item(s) has been updated."},{"id":"Item succesfully moved.","defaultMessage":"Item succesfully moved."},{"id":"Item(s) pasted.","defaultMessage":"Item(s) pasted."},{"id":"Item(s) state has been updated.","defaultMessage":"Item(s) state has been updated."},{"id":"Paste","defaultMessage":"Paste"},{"id":"Properties","defaultMessage":"Properties"},{"id":"Rearrange items by…","defaultMessage":"Rearrange items by…"},{"id":"Rename","defaultMessage":"Rename"},{"id":"Select…","defaultMessage":"Select…"},{"id":"{count} selected","defaultMessage":"{count} selected"},{"id":"Select columns to show","defaultMessage":"Select columns to show"},{"id":"sort","defaultMessage":"sort"},{"id":"State","defaultMessage":"State"},{"id":"Tags","defaultMessage":"Tags"},{"id":"Upload","defaultMessage":"Upload"},{"id":"Success","defaultMessage":"Success"},{"id":"Publication date","defaultMessage":"Publication date"},{"id":"Created on","defaultMessage":"Created on"},{"id":"Expiration date","defaultMessage":"Expiration date"},{"id":"ID","defaultMessage":"ID"},{"id":"UID","defaultMessage":"UID"},{"id":"Review state","defaultMessage":"Review state"},{"id":"Folder","defaultMessage":"Folder"},{"id":"Excluded from navigation","defaultMessage":"Excluded from navigation"},{"id":"Object Size","defaultMessage":"Object Size"},{"id":"Last comment date","defaultMessage":"Last comment date"},{"id":"Total comments","defaultMessage":"Total comments"},{"id":"Creator","defaultMessage":"Creator"},{"id":"End Date","defaultMessage":"End Date"},{"id":"Start Date","defaultMessage":"Start Date"},{"id":"All","defaultMessage":"All"},{"id":"Potential link breakage","defaultMessage":"Potential link breakage"},{"id":"By deleting this item, you will break links that exist in the items listed below. If this is indeed what you want to do, we recommend that remove these references first.","defaultMessage":"By deleting this item, you will break links that exist in the items listed below. If this is indeed what you want to do, we recommend that remove these references first."},{"id":"This Page is referenced by the following items:","defaultMessage":"This Page is referenced by the following items:"},{"id":"Items to be deleted:","defaultMessage":"Items to be deleted:"},{"id":"Ascending","defaultMessage":"Ascending"},{"id":"Descending","defaultMessage":"Descending"},{"id":"None","defaultMessage":"None"},{"id":"Title","defaultMessage":"Title"},{"id":"Actions","defaultMessage":"Actions"}]}},"sourceType":"module","externalDependencies":[]}