{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/blocks/Table/Cell.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { EditorReference, SlateEditor } from 'volto-slate/editor';\nimport { ReactEditor } from 'slate-react';\nimport config from '@plone/volto/registry';\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n    this.handleContainerFocus = this.handleContainerFocus.bind(this);\n    this.state = {\n      editor: null\n    };\n    this.tableblockExtensions = config.settings.slate.tableblockExtensions;\n  }\n  componentWillUnmount() {\n    this.isUnmounted = true;\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.isTableBlockSelected !== this.props.isTableBlockSelected && this.props.isTableBlockSelected && this.props.cell === 0 && this.props.row === 0 && (!this.props.selectedCell || this.props.selectedCell.row === 0 && this.props.selectedCell.cell === 0)) {\n      this.props.onSelectCell(this.props.row, this.props.cell);\n\n      // Wait for Slate to initialize before asking it to focus\n      if (this.state.editor) {\n        setTimeout(() => !this.isUnmounted && ReactEditor.focus(this.state.editor), 0);\n      }\n    }\n  }\n  onChange(val) {\n    this.props.onChange(this.props.row, this.props.cell, [...val]);\n  }\n  handleContainerFocus() {\n    this.props.onSelectCell(this.props.row, this.props.cell);\n  }\n  render() {\n    return __CLIENT__ && __jsx(SlateEditor, {\n      tabIndex: 0,\n      onChange: this.onChange,\n      extensions: this.tableblockExtensions,\n      value: this.props.value,\n      selected: this.props.selected,\n      onFocus: this.handleContainerFocus,\n      onClick: this.handleContainerFocus,\n      debug: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, __jsx(EditorReference, {\n      onHasEditor: editor => !this.state.editor && this.setState({\n        editor\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }));\n  }\n}\n_defineProperty(Cell, \"propTypes\", {\n  onSelectCell: PropTypes.func.isRequired,\n  row: PropTypes.number,\n  cell: PropTypes.number,\n  value: PropTypes.array,\n  selected: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  isTableBlockSelected: PropTypes.bool\n});\n_defineProperty(Cell, \"defaultProps\", {});\nexport default Cell;","map":{"version":3,"names":["React","Component","PropTypes","EditorReference","SlateEditor","ReactEditor","config","Cell","constructor","props","onChange","bind","handleContainerFocus","state","editor","tableblockExtensions","settings","slate","componentWillUnmount","isUnmounted","componentDidUpdate","prevProps","isTableBlockSelected","cell","row","selectedCell","onSelectCell","setTimeout","focus","val","render","__CLIENT__","value","selected","setState","func","isRequired","number","array","bool"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/volto-slate/src/blocks/Table/Cell.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { EditorReference, SlateEditor } from 'volto-slate/editor';\nimport { ReactEditor } from 'slate-react';\nimport config from '@plone/volto/registry';\n\nclass Cell extends Component {\n  static propTypes = {\n    onSelectCell: PropTypes.func.isRequired,\n    row: PropTypes.number,\n    cell: PropTypes.number,\n    value: PropTypes.array,\n    selected: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    isTableBlockSelected: PropTypes.bool,\n  };\n\n  static defaultProps = {};\n\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n    this.handleContainerFocus = this.handleContainerFocus.bind(this);\n    this.state = { editor: null };\n    this.tableblockExtensions = config.settings.slate.tableblockExtensions;\n  }\n\n  componentWillUnmount() {\n    this.isUnmounted = true;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.isTableBlockSelected !== this.props.isTableBlockSelected &&\n      this.props.isTableBlockSelected &&\n      this.props.cell === 0 &&\n      this.props.row === 0 &&\n      (!this.props.selectedCell ||\n        (this.props.selectedCell.row === 0 &&\n          this.props.selectedCell.cell === 0))\n    ) {\n      this.props.onSelectCell(this.props.row, this.props.cell);\n\n      // Wait for Slate to initialize before asking it to focus\n      if (this.state.editor) {\n        setTimeout(\n          () => !this.isUnmounted && ReactEditor.focus(this.state.editor),\n          0,\n        );\n      }\n    }\n  }\n\n  onChange(val) {\n    this.props.onChange(this.props.row, this.props.cell, [...val]);\n  }\n\n  handleContainerFocus() {\n    this.props.onSelectCell(this.props.row, this.props.cell);\n  }\n\n  render() {\n    return (\n      __CLIENT__ && (\n        <SlateEditor\n          tabIndex={0}\n          onChange={this.onChange}\n          extensions={this.tableblockExtensions}\n          value={this.props.value}\n          selected={this.props.selected}\n          onFocus={this.handleContainerFocus}\n          onClick={this.handleContainerFocus}\n          debug={false}\n        >\n          <EditorReference\n            onHasEditor={(editor) =>\n              !this.state.editor && this.setState({ editor })\n            }\n          />\n        </SlateEditor>\n      )\n    );\n  }\n}\n\nexport default Cell;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,eAAe,EAAEC,WAAW,QAAQ,oBAAoB;AACjE,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,MAAMC,IAAI,SAASN,SAAS,CAAC;EAa3BO,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;IACxC,IAAI,CAACC,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACD,IAAI,CAAC,IAAI,CAAC;IAChE,IAAI,CAACE,KAAK,GAAG;MAAEC,MAAM,EAAE;IAAK,CAAC;IAC7B,IAAI,CAACC,oBAAoB,GAAGT,MAAM,CAACU,QAAQ,CAACC,KAAK,CAACF,oBAAoB;EACxE;EAEAG,oBAAoB,GAAG;IACrB,IAAI,CAACC,WAAW,GAAG,IAAI;EACzB;EAEAC,kBAAkB,CAACC,SAAS,EAAE;IAC5B,IACEA,SAAS,CAACC,oBAAoB,KAAK,IAAI,CAACb,KAAK,CAACa,oBAAoB,IAClE,IAAI,CAACb,KAAK,CAACa,oBAAoB,IAC/B,IAAI,CAACb,KAAK,CAACc,IAAI,KAAK,CAAC,IACrB,IAAI,CAACd,KAAK,CAACe,GAAG,KAAK,CAAC,KACnB,CAAC,IAAI,CAACf,KAAK,CAACgB,YAAY,IACtB,IAAI,CAAChB,KAAK,CAACgB,YAAY,CAACD,GAAG,KAAK,CAAC,IAChC,IAAI,CAACf,KAAK,CAACgB,YAAY,CAACF,IAAI,KAAK,CAAE,CAAC,EACxC;MACA,IAAI,CAACd,KAAK,CAACiB,YAAY,CAAC,IAAI,CAACjB,KAAK,CAACe,GAAG,EAAE,IAAI,CAACf,KAAK,CAACc,IAAI,CAAC;;MAExD;MACA,IAAI,IAAI,CAACV,KAAK,CAACC,MAAM,EAAE;QACrBa,UAAU,CACR,MAAM,CAAC,IAAI,CAACR,WAAW,IAAId,WAAW,CAACuB,KAAK,CAAC,IAAI,CAACf,KAAK,CAACC,MAAM,CAAC,EAC/D,CAAC,CACF;MACH;IACF;EACF;EAEAJ,QAAQ,CAACmB,GAAG,EAAE;IACZ,IAAI,CAACpB,KAAK,CAACC,QAAQ,CAAC,IAAI,CAACD,KAAK,CAACe,GAAG,EAAE,IAAI,CAACf,KAAK,CAACc,IAAI,EAAE,CAAC,GAAGM,GAAG,CAAC,CAAC;EAChE;EAEAjB,oBAAoB,GAAG;IACrB,IAAI,CAACH,KAAK,CAACiB,YAAY,CAAC,IAAI,CAACjB,KAAK,CAACe,GAAG,EAAE,IAAI,CAACf,KAAK,CAACc,IAAI,CAAC;EAC1D;EAEAO,MAAM,GAAG;IACP,OACEC,UAAU,IACR,MAAC,WAAW;MACV,QAAQ,EAAE,CAAE;MACZ,QAAQ,EAAE,IAAI,CAACrB,QAAS;MACxB,UAAU,EAAE,IAAI,CAACK,oBAAqB;MACtC,KAAK,EAAE,IAAI,CAACN,KAAK,CAACuB,KAAM;MACxB,QAAQ,EAAE,IAAI,CAACvB,KAAK,CAACwB,QAAS;MAC9B,OAAO,EAAE,IAAI,CAACrB,oBAAqB;MACnC,OAAO,EAAE,IAAI,CAACA,oBAAqB;MACnC,KAAK,EAAE,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEb,MAAC,eAAe;MACd,WAAW,EAAGE,MAAM,IAClB,CAAC,IAAI,CAACD,KAAK,CAACC,MAAM,IAAI,IAAI,CAACoB,QAAQ,CAAC;QAAEpB;MAAO,CAAC,CAC/C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACD,CAEL;EAEL;AACF;AAAC,gBA9EKP,IAAI,eACW;EACjBmB,YAAY,EAAExB,SAAS,CAACiC,IAAI,CAACC,UAAU;EACvCZ,GAAG,EAAEtB,SAAS,CAACmC,MAAM;EACrBd,IAAI,EAAErB,SAAS,CAACmC,MAAM;EACtBL,KAAK,EAAE9B,SAAS,CAACoC,KAAK;EACtBL,QAAQ,EAAE/B,SAAS,CAACqC,IAAI;EACxB7B,QAAQ,EAAER,SAAS,CAACiC,IAAI,CAACC,UAAU;EACnCd,oBAAoB,EAAEpB,SAAS,CAACqC;AAClC,CAAC;AAAA,gBATGhC,IAAI,kBAWc,CAAC,CAAC;AAqE1B,eAAeA,IAAI"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}