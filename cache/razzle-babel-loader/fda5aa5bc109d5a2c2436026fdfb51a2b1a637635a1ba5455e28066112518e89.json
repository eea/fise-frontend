{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { LOAD_LAZY_LIBRARY } from '@plone/volto/constants/ActionTypes';\nconst initialState = {};\nexport default function lazyLibraries(state = initialState, action = {}) {\n  switch (action.type) {\n    case LOAD_LAZY_LIBRARY:\n      const {\n        libName,\n        libModule\n      } = action;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [libName]: libModule\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["LOAD_LAZY_LIBRARY","initialState","lazyLibraries","state","action","type","libName","libModule"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/lazyLibraries/lazyLibraries.js"],"sourcesContent":["import { LOAD_LAZY_LIBRARY } from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {};\n\nexport default function lazyLibraries(state = initialState, action = {}) {\n  switch (action.type) {\n    case LOAD_LAZY_LIBRARY:\n      const { libName, libModule } = action;\n      return {\n        ...state,\n        [libName]: libModule,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;AAAA,SAASA,iBAAiB,QAAQ,oCAAoC;AAEtE,MAAMC,YAAY,GAAG,CAAC,CAAC;AAEvB,eAAe,SAASC,aAAa,CAACC,KAAK,GAAGF,YAAY,EAAEG,MAAM,GAAG,CAAC,CAAC,EAAE;EACvE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKL,iBAAiB;MACpB,MAAM;QAAEM,OAAO;QAAEC;MAAU,CAAC,GAAGH,MAAM;MACrC,uCACKD,KAAK;QACR,CAACG,OAAO,GAAGC;MAAS;IAExB;MACE,OAAOJ,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}