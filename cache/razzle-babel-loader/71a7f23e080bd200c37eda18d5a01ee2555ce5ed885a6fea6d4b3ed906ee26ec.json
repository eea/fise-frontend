{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/packages/volto-slate/src/blocks/Text/ShortcutListing.jsx\";\nvar __jsx = React.createElement;\nimport { Segment, List } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport React from 'react';\nconst ShortcutListing = props => {\n  var _config$settings, _config$settings$slat;\n  const hotkeys = (_config$settings = config.settings) === null || _config$settings === void 0 ? void 0 : (_config$settings$slat = _config$settings.slate) === null || _config$settings$slat === void 0 ? void 0 : _config$settings$slat.hotkeys;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"Editor shortcuts\")), __jsx(Segment, {\n    secondary: true,\n    attached: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(List.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, \"Type a slash (\", __jsx(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 27\n    }\n  }, \"/\"), \") to change block type\"), Object.entries(hotkeys || {}).map(([shortcut, {\n    format,\n    type\n  }]) => __jsx(List.Item, {\n    key: shortcut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, `${shortcut}: ${format}`))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"On Windows, the MOD key is Ctrl, on Mac OS X it's Cmd.\")));\n};\nexport default ShortcutListing;","map":{"version":3,"names":["Segment","List","config","React","ShortcutListing","props","hotkeys","settings","slate","Object","entries","map","shortcut","format","type"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/packages/volto-slate/src/blocks/Text/ShortcutListing.jsx"],"sourcesContent":["import { Segment, List } from 'semantic-ui-react';\nimport config from '@plone/volto/registry';\nimport React from 'react';\n\nconst ShortcutListing = (props) => {\n  const hotkeys = config.settings?.slate?.hotkeys;\n  return (\n    <div>\n      <header className=\"header\">\n        <h2>Editor shortcuts</h2>\n      </header>\n\n      <Segment secondary attached>\n        <List>\n          <List.Item>\n            Type a slash (<em>/</em>) to change block type\n          </List.Item>\n          {Object.entries(hotkeys || {}).map(([shortcut, { format, type }]) => (\n            <List.Item key={shortcut}>{`${shortcut}: ${format}`}</List.Item>\n          ))}\n        </List>\n        <div>On Windows, the MOD key is Ctrl, on Mac OS X it's Cmd.</div>\n      </Segment>\n    </div>\n  );\n};\n\nexport default ShortcutListing;\n"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,IAAI,QAAQ,mBAAmB;AACjD,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAAA;EACjC,MAAMC,OAAO,uBAAGJ,MAAM,CAACK,QAAQ,8EAAf,iBAAiBC,KAAK,0DAAtB,sBAAwBF,OAAO;EAC/C,OACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAQ,SAAS,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBAAyB,CAClB,EAET,MAAC,OAAO;IAAC,SAAS;IAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACzB,MAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACH,MAAC,IAAI,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,qBACM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAU,2BACd,EACXG,MAAM,CAACC,OAAO,CAACJ,OAAO,IAAI,CAAC,CAAC,CAAC,CAACK,GAAG,CAAC,CAAC,CAACC,QAAQ,EAAE;IAAEC,MAAM;IAAEC;EAAK,CAAC,CAAC,KAC9D,MAAC,IAAI,CAAC,IAAI;IAAC,GAAG,EAAEF,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,GAAEA,QAAS,KAAIC,MAAO,EAAC,CACpD,CAAC,CACG,EACP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4DAAiE,CACzD,CACN;AAEV,CAAC;AAED,eAAeT,eAAe"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}