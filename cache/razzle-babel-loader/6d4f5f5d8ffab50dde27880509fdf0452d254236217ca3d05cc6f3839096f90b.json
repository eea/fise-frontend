{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Text/View.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\n/**\n * View text block.\n * @module components/manage/Blocks/Text/View\n */\n\nimport PropTypes from 'prop-types';\nimport redraft from 'redraft';\nimport React from 'react';\nimport config from '@plone/volto/registry';\n\n/**\n * View text block class.\n * @class View\n * @extends Component\n */\nvar View = function View(_ref) {\n  var data = _ref.data;\n  return data.text ? redraft(data.text, config.settings.richtextViewSettings.ToHTMLRenderers, config.settings.richtextViewSettings.ToHTMLOptions) : __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  });\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\n_c = View;\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default View;\nvar _c;\n$RefreshReg$(_c, \"View\");","map":{"version":3,"names":["PropTypes","redraft","React","config","View","data","text","settings","richtextViewSettings","ToHTMLRenderers","ToHTMLOptions","propTypes","objectOf","any","isRequired"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Text/View.jsx"],"sourcesContent":["/**\n * View text block.\n * @module components/manage/Blocks/Text/View\n */\n\nimport PropTypes from 'prop-types';\nimport redraft from 'redraft';\nimport React from 'react';\nimport config from '@plone/volto/registry';\n\n/**\n * View text block class.\n * @class View\n * @extends Component\n */\nconst View = ({ data }) =>\n  data.text ? (\n    redraft(\n      data.text,\n      config.settings.richtextViewSettings.ToHTMLRenderers,\n      config.settings.richtextViewSettings.ToHTMLOptions,\n    )\n  ) : (\n    <br />\n  );\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default View;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,OAAO,MAAM,SAAS;AAC7B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,uBAAuB;;AAE1C;AACA;AACA;AACA;AACA;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAI;EAAA,IAAMC,IAAI,QAAJA,IAAI;EAAA,OAClBA,IAAI,CAACC,IAAI,GACPL,OAAO,CACLI,IAAI,CAACC,IAAI,EACTH,MAAM,CAACI,QAAQ,CAACC,oBAAoB,CAACC,eAAe,EACpDN,MAAM,CAACI,QAAQ,CAACC,oBAAoB,CAACE,aAAa,CACnD,GAED;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACD;AAAA;;AAEH;AACA;AACA;AACA;AACA;AAJA,KAXMN,IAAI;AAgBVA,IAAI,CAACO,SAAS,GAAG;EACfN,IAAI,EAAEL,SAAS,CAACY,QAAQ,CAACZ,SAAS,CAACa,GAAG,CAAC,CAACC;AAC1C,CAAC;AAED,eAAeV,IAAI;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}