{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-plotlycharts/src/ConnectedChart2/Download.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport downloadSVG from '../static/download-cloud-fill.svg';\n// import { Icon } from '@plone/volto/components';\n\nimport { trackLink } from '@eeacms/volto-matomo/utils';\n// import { Button } from 'semantic-ui-react';\n\nfunction getHeaders(headers) {\n  let str = '';\n  headers.forEach(header => {\n    if (str !== '') str += ',';\n    if (header.includes(',')) {\n      str += `\"${header}\"`;\n    } else {\n      str += header;\n    }\n  });\n  return str + '\\r\\n';\n}\nfunction getData(array) {\n  let str = '';\n  for (let i = 0; i < array.length; i++) {\n    let row = '';\n    for (let key in array[i]) {\n      const column = array[i][key];\n      if (row !== '') row += ',';\n      if (typeof column === 'number' && column.toString().includes(',') || typeof column === 'string' && column.includes(',')) {\n        row += `\"${column}\"`;\n      } else {\n        row += column;\n      }\n    }\n    str += row + '\\r\\n';\n  }\n  return str;\n}\nfunction convertToCSV(array, readme = []) {\n  const headers = Object.keys(array[0]);\n  let str = getHeaders(headers);\n  str += getData(array);\n  for (let i = 0; i < 5; i++) {\n    str += '\\r\\n';\n  }\n  readme.forEach(text => {\n    str += text + '\\r\\n';\n  });\n  return str;\n}\nfunction convertMatrixToCSV(matrix, readme = []) {\n  let str = '';\n  matrix.forEach(array => {\n    str += getHeaders(Object.keys(array[0]));\n    str += getData(array);\n    for (let i = 0; i < 2; i++) {\n      str += '\\r\\n';\n    }\n  });\n  for (let i = 0; i < 3; i++) {\n    str += '\\r\\n';\n  }\n  readme.forEach(text => {\n    str += text + '\\r\\n';\n  });\n  return str;\n}\nfunction exportCSVFile(csv, title = 'data') {\n  let fileTitle = title.toLowerCase().replace(' ', '_');\n  let exportedFilenmae = fileTitle.includes('.csv') ? fileTitle : fileTitle + '.csv';\n  trackLink({\n    href: window.location.href + exportedFilenmae,\n    linkType: 'download'\n  });\n  let blob = new Blob([csv], {\n    type: 'text/csv;charset=utf-8;'\n  });\n  if (navigator.msSaveBlob) {\n    // IE 10+\n    navigator.msSaveBlob(blob, exportedFilenmae);\n  } else {\n    let link = document.createElement('a');\n    if (link.download !== undefined) {\n      // feature detection\n      // Browsers that support HTML5 download attribute\n      if (document) {\n        let url = URL.createObjectURL(blob);\n        link.setAttribute('href', url);\n        link.setAttribute('download', exportedFilenmae);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n  }\n}\nconst spreadCoreMetadata = (core_metadata, maxRowsProvData) => {\n  let spread_metadata = {};\n  Object.keys(core_metadata).forEach(key => {\n    if (core_metadata[key].length > 0) {\n      core_metadata[key].forEach(item => {\n        Object.keys(item).forEach(subkey => {\n          if (!spread_metadata['Core metadata']) {\n            spread_metadata['Core metadata'] = [' '];\n          } else {\n            spread_metadata['Core metadata'].push(' ');\n          }\n          if (!spread_metadata[`${key}_${subkey}`]) {\n            spread_metadata[`${key}_${subkey}`] = [item[subkey]];\n          } else {\n            spread_metadata[`${key}_${subkey}`].push(item[subkey]);\n          }\n        });\n      });\n    }\n  });\n  const coreMaxRows = Object.values(spread_metadata).reduce((a, b) => a.length > b.length ? a : b).length;\n  const maxRows = maxRowsProvData > coreMaxRows ? maxRowsProvData : coreMaxRows;\n  let evenMatrix = spread_metadata;\n  Object.entries(evenMatrix).forEach(([key, items]) => {\n    if (items.length < maxRows) {\n      for (let i = items.length; i < maxRows; i++) {\n        items.push('');\n      }\n    }\n  });\n  return evenMatrix;\n};\nconst Download = props => {\n  const {\n    // sources,\n    // className,\n    title,\n    provider_data,\n    provider_metadata,\n    providers_data,\n    providers_metadata,\n    core_metadata,\n    include_core_metadata_download\n  } = props;\n  const handleDownloadData = () => {\n    var _core_metadata$data_p, _core_metadata$other_, _core_metadata$tempor;\n    let array = [];\n    let readme = provider_metadata !== null && provider_metadata !== void 0 && provider_metadata.readme ? [provider_metadata === null || provider_metadata === void 0 ? void 0 : provider_metadata.readme] : [];\n    const mappedData = _objectSpread({}, provider_data);\n    Object.entries(mappedData).forEach(([key, items]) => {\n      items.forEach((item, index) => {\n        if (!array[index]) array[index] = {};\n        array[index][key] = item;\n      });\n    });\n    const hasCoreMetadata = (core_metadata === null || core_metadata === void 0 ? void 0 : (_core_metadata$data_p = core_metadata.data_provenance) === null || _core_metadata$data_p === void 0 ? void 0 : _core_metadata$data_p.length) > 0 || (core_metadata === null || core_metadata === void 0 ? void 0 : (_core_metadata$other_ = core_metadata.other_organisation) === null || _core_metadata$other_ === void 0 ? void 0 : _core_metadata$other_.length) > 0 || (core_metadata === null || core_metadata === void 0 ? void 0 : (_core_metadata$tempor = core_metadata.temporal_coverage) === null || _core_metadata$tempor === void 0 ? void 0 : _core_metadata$tempor.length) > 0;\n    if (include_core_metadata_download && hasCoreMetadata) {\n      const maxRowsMappedData = Object.values(mappedData).reduce((a, b) => a.length > b.length ? a : b).length;\n      Object.entries(spreadCoreMetadata(core_metadata, maxRowsMappedData)).forEach(([key, items]) => {\n        items.forEach((item, index) => {\n          if (!array[index]) array[index] = {};\n          array[index][key] = item;\n        });\n      });\n    }\n    const csv = convertToCSV(array, readme);\n    exportCSVFile(csv, title);\n  };\n  const handleDownloadMultipleData = () => {\n    let array = [];\n    let readme = [];\n    Object.keys(providers_data).forEach((pKey, pIndex) => {\n      if (!array[pIndex]) array[pIndex] = [];\n      Object.entries(providers_data[pKey]).forEach(([key, items]) => {\n        items.forEach((item, index) => {\n          if (!array[pIndex][index]) array[pIndex][index] = {};\n          array[pIndex][index][key] = item;\n          index++;\n        });\n      });\n    });\n    Object.keys(providers_metadata).forEach(pKey => {\n      if (providers_metadata[pKey].readme) {\n        readme.push(providers_metadata[pKey].readme);\n      }\n    });\n    const csv = convertMatrixToCSV(array, readme);\n    exportCSVFile(csv, title);\n  };\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"plotly-download-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, provider_data && __jsx(\"img\", {\n    className: \"discreet plotly-download-button\",\n    title: \"Download data\",\n    alt: \"Download data\",\n    onClick: () => handleDownloadData(),\n    src: downloadSVG,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }), providers_data && __jsx(\"img\", {\n    className: \"discreet plotly-download-button\",\n    title: \"Download data\",\n    alt: \"Download data\",\n    onClick: () => handleDownloadMultipleData(),\n    src: downloadSVG,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  })));\n};\nexport default Download;","map":{"version":3,"names":["React","downloadSVG","trackLink","getHeaders","headers","str","forEach","header","includes","getData","array","i","length","row","key","column","toString","convertToCSV","readme","Object","keys","text","convertMatrixToCSV","matrix","exportCSVFile","csv","title","fileTitle","toLowerCase","replace","exportedFilenmae","href","window","location","linkType","blob","Blob","type","navigator","msSaveBlob","link","document","createElement","download","undefined","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","spreadCoreMetadata","core_metadata","maxRowsProvData","spread_metadata","item","subkey","push","coreMaxRows","values","reduce","a","b","maxRows","evenMatrix","entries","items","Download","props","provider_data","provider_metadata","providers_data","providers_metadata","include_core_metadata_download","handleDownloadData","mappedData","index","hasCoreMetadata","data_provenance","other_organisation","temporal_coverage","maxRowsMappedData","handleDownloadMultipleData","pKey","pIndex"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-plotlycharts/src/ConnectedChart2/Download.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport downloadSVG from '../static/download-cloud-fill.svg';\n// import { Icon } from '@plone/volto/components';\n\nimport { trackLink } from '@eeacms/volto-matomo/utils';\n// import { Button } from 'semantic-ui-react';\n\nfunction getHeaders(headers) {\n  let str = '';\n  headers.forEach((header) => {\n    if (str !== '') str += ',';\n    if (header.includes(',')) {\n      str += `\"${header}\"`;\n    } else {\n      str += header;\n    }\n  });\n  return str + '\\r\\n';\n}\n\nfunction getData(array) {\n  let str = '';\n  for (let i = 0; i < array.length; i++) {\n    let row = '';\n    for (let key in array[i]) {\n      const column = array[i][key];\n      if (row !== '') row += ',';\n      if (\n        (typeof column === 'number' && column.toString().includes(',')) ||\n        (typeof column === 'string' && column.includes(','))\n      ) {\n        row += `\"${column}\"`;\n      } else {\n        row += column;\n      }\n    }\n\n    str += row + '\\r\\n';\n  }\n\n  return str;\n}\n\nfunction convertToCSV(array, readme = []) {\n  const headers = Object.keys(array[0]);\n  let str = getHeaders(headers);\n\n  str += getData(array);\n\n  for (let i = 0; i < 5; i++) {\n    str += '\\r\\n';\n  }\n\n  readme.forEach((text) => {\n    str += text + '\\r\\n';\n  });\n\n  return str;\n}\n\nfunction convertMatrixToCSV(matrix, readme = []) {\n  let str = '';\n\n  matrix.forEach((array) => {\n    str += getHeaders(Object.keys(array[0]));\n    str += getData(array);\n    for (let i = 0; i < 2; i++) {\n      str += '\\r\\n';\n    }\n  });\n\n  for (let i = 0; i < 3; i++) {\n    str += '\\r\\n';\n  }\n\n  readme.forEach((text) => {\n    str += text + '\\r\\n';\n  });\n\n  return str;\n}\n\nfunction exportCSVFile(csv, title = 'data') {\n  let fileTitle = title.toLowerCase().replace(' ', '_');\n  let exportedFilenmae = fileTitle.includes('.csv')\n    ? fileTitle\n    : fileTitle + '.csv';\n  trackLink({\n    href: window.location.href + exportedFilenmae,\n    linkType: 'download',\n  });\n\n  let blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n  if (navigator.msSaveBlob) {\n    // IE 10+\n    navigator.msSaveBlob(blob, exportedFilenmae);\n  } else {\n    let link = document.createElement('a');\n    if (link.download !== undefined) {\n      // feature detection\n      // Browsers that support HTML5 download attribute\n      if (document) {\n        let url = URL.createObjectURL(blob);\n        link.setAttribute('href', url);\n        link.setAttribute('download', exportedFilenmae);\n        link.style.visibility = 'hidden';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n  }\n}\n\nconst spreadCoreMetadata = (core_metadata, maxRowsProvData) => {\n  let spread_metadata = {};\n  Object.keys(core_metadata).forEach((key) => {\n    if (core_metadata[key].length > 0) {\n      core_metadata[key].forEach((item) => {\n        Object.keys(item).forEach((subkey) => {\n          if (!spread_metadata['Core metadata']) {\n            spread_metadata['Core metadata'] = [' '];\n          } else {\n            spread_metadata['Core metadata'].push(' ');\n          }\n          if (!spread_metadata[`${key}_${subkey}`]) {\n            spread_metadata[`${key}_${subkey}`] = [item[subkey]];\n          } else {\n            spread_metadata[`${key}_${subkey}`].push(item[subkey]);\n          }\n        });\n      });\n    }\n  });\n\n  const coreMaxRows = Object.values(spread_metadata).reduce((a, b) =>\n    a.length > b.length ? a : b,\n  ).length;\n\n  const maxRows = maxRowsProvData > coreMaxRows ? maxRowsProvData : coreMaxRows;\n\n  let evenMatrix = spread_metadata;\n  Object.entries(evenMatrix).forEach(([key, items]) => {\n    if (items.length < maxRows) {\n      for (let i = items.length; i < maxRows; i++) {\n        items.push('');\n      }\n    }\n  });\n  return evenMatrix;\n};\n\nconst Download = (props) => {\n  const {\n    // sources,\n    // className,\n    title,\n    provider_data,\n    provider_metadata,\n    providers_data,\n    providers_metadata,\n    core_metadata,\n    include_core_metadata_download,\n  } = props;\n  const handleDownloadData = () => {\n    let array = [];\n    let readme = provider_metadata?.readme ? [provider_metadata?.readme] : [];\n    const mappedData = {\n      ...provider_data,\n    };\n    Object.entries(mappedData).forEach(([key, items]) => {\n      items.forEach((item, index) => {\n        if (!array[index]) array[index] = {};\n        array[index][key] = item;\n      });\n    });\n    const hasCoreMetadata =\n      core_metadata?.data_provenance?.length > 0 ||\n      core_metadata?.other_organisation?.length > 0 ||\n      core_metadata?.temporal_coverage?.length > 0;\n\n    if (include_core_metadata_download && hasCoreMetadata) {\n      const maxRowsMappedData = Object.values(mappedData).reduce((a, b) =>\n        a.length > b.length ? a : b,\n      ).length;\n\n      Object.entries(\n        spreadCoreMetadata(core_metadata, maxRowsMappedData),\n      ).forEach(([key, items]) => {\n        items.forEach((item, index) => {\n          if (!array[index]) array[index] = {};\n          array[index][key] = item;\n        });\n      });\n    }\n\n    const csv = convertToCSV(array, readme);\n    exportCSVFile(csv, title);\n  };\n\n  const handleDownloadMultipleData = () => {\n    let array = [];\n    let readme = [];\n    Object.keys(providers_data).forEach((pKey, pIndex) => {\n      if (!array[pIndex]) array[pIndex] = [];\n      Object.entries(providers_data[pKey]).forEach(([key, items]) => {\n        items.forEach((item, index) => {\n          if (!array[pIndex][index]) array[pIndex][index] = {};\n          array[pIndex][index][key] = item;\n          index++;\n        });\n      });\n    });\n    Object.keys(providers_metadata).forEach((pKey) => {\n      if (providers_metadata[pKey].readme) {\n        readme.push(providers_metadata[pKey].readme);\n      }\n    });\n    const csv = convertMatrixToCSV(array, readme);\n    exportCSVFile(csv, title);\n  };\n\n  return (\n    <>\n      <div className=\"plotly-download-container\">\n        {provider_data && (\n          <img\n            className=\"discreet plotly-download-button\"\n            title=\"Download data\"\n            alt=\"Download data\"\n            onClick={() => handleDownloadData()}\n            src={downloadSVG}\n          />\n        )}\n\n        {providers_data && (\n          <img\n            className=\"discreet plotly-download-button\"\n            title=\"Download data\"\n            alt=\"Download data\"\n            onClick={() => handleDownloadMultipleData()}\n            src={downloadSVG}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Download;\n"],"mappings":";;;;;AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,mCAAmC;AAC3D;;AAEA,SAASC,SAAS,QAAQ,4BAA4B;AACtD;;AAEA,SAASC,UAAU,CAACC,OAAO,EAAE;EAC3B,IAAIC,GAAG,GAAG,EAAE;EACZD,OAAO,CAACE,OAAO,CAAEC,MAAM,IAAK;IAC1B,IAAIF,GAAG,KAAK,EAAE,EAAEA,GAAG,IAAI,GAAG;IAC1B,IAAIE,MAAM,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;MACxBH,GAAG,IAAK,IAAGE,MAAO,GAAE;IACtB,CAAC,MAAM;MACLF,GAAG,IAAIE,MAAM;IACf;EACF,CAAC,CAAC;EACF,OAAOF,GAAG,GAAG,MAAM;AACrB;AAEA,SAASI,OAAO,CAACC,KAAK,EAAE;EACtB,IAAIL,GAAG,GAAG,EAAE;EACZ,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,IAAIE,GAAG,GAAG,EAAE;IACZ,KAAK,IAAIC,GAAG,IAAIJ,KAAK,CAACC,CAAC,CAAC,EAAE;MACxB,MAAMI,MAAM,GAAGL,KAAK,CAACC,CAAC,CAAC,CAACG,GAAG,CAAC;MAC5B,IAAID,GAAG,KAAK,EAAE,EAAEA,GAAG,IAAI,GAAG;MAC1B,IACG,OAAOE,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACC,QAAQ,EAAE,CAACR,QAAQ,CAAC,GAAG,CAAC,IAC7D,OAAOO,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACP,QAAQ,CAAC,GAAG,CAAE,EACpD;QACAK,GAAG,IAAK,IAAGE,MAAO,GAAE;MACtB,CAAC,MAAM;QACLF,GAAG,IAAIE,MAAM;MACf;IACF;IAEAV,GAAG,IAAIQ,GAAG,GAAG,MAAM;EACrB;EAEA,OAAOR,GAAG;AACZ;AAEA,SAASY,YAAY,CAACP,KAAK,EAAEQ,MAAM,GAAG,EAAE,EAAE;EACxC,MAAMd,OAAO,GAAGe,MAAM,CAACC,IAAI,CAACV,KAAK,CAAC,CAAC,CAAC,CAAC;EACrC,IAAIL,GAAG,GAAGF,UAAU,CAACC,OAAO,CAAC;EAE7BC,GAAG,IAAII,OAAO,CAACC,KAAK,CAAC;EAErB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1BN,GAAG,IAAI,MAAM;EACf;EAEAa,MAAM,CAACZ,OAAO,CAAEe,IAAI,IAAK;IACvBhB,GAAG,IAAIgB,IAAI,GAAG,MAAM;EACtB,CAAC,CAAC;EAEF,OAAOhB,GAAG;AACZ;AAEA,SAASiB,kBAAkB,CAACC,MAAM,EAAEL,MAAM,GAAG,EAAE,EAAE;EAC/C,IAAIb,GAAG,GAAG,EAAE;EAEZkB,MAAM,CAACjB,OAAO,CAAEI,KAAK,IAAK;IACxBL,GAAG,IAAIF,UAAU,CAACgB,MAAM,CAACC,IAAI,CAACV,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACxCL,GAAG,IAAII,OAAO,CAACC,KAAK,CAAC;IACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BN,GAAG,IAAI,MAAM;IACf;EACF,CAAC,CAAC;EAEF,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1BN,GAAG,IAAI,MAAM;EACf;EAEAa,MAAM,CAACZ,OAAO,CAAEe,IAAI,IAAK;IACvBhB,GAAG,IAAIgB,IAAI,GAAG,MAAM;EACtB,CAAC,CAAC;EAEF,OAAOhB,GAAG;AACZ;AAEA,SAASmB,aAAa,CAACC,GAAG,EAAEC,KAAK,GAAG,MAAM,EAAE;EAC1C,IAAIC,SAAS,GAAGD,KAAK,CAACE,WAAW,EAAE,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EACrD,IAAIC,gBAAgB,GAAGH,SAAS,CAACnB,QAAQ,CAAC,MAAM,CAAC,GAC7CmB,SAAS,GACTA,SAAS,GAAG,MAAM;EACtBzB,SAAS,CAAC;IACR6B,IAAI,EAAEC,MAAM,CAACC,QAAQ,CAACF,IAAI,GAAGD,gBAAgB;IAC7CI,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACX,GAAG,CAAC,EAAE;IAAEY,IAAI,EAAE;EAA0B,CAAC,CAAC;EAC/D,IAAIC,SAAS,CAACC,UAAU,EAAE;IACxB;IACAD,SAAS,CAACC,UAAU,CAACJ,IAAI,EAAEL,gBAAgB,CAAC;EAC9C,CAAC,MAAM;IACL,IAAIU,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACtC,IAAIF,IAAI,CAACG,QAAQ,KAAKC,SAAS,EAAE;MAC/B;MACA;MACA,IAAIH,QAAQ,EAAE;QACZ,IAAII,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACZ,IAAI,CAAC;QACnCK,IAAI,CAACQ,YAAY,CAAC,MAAM,EAAEH,GAAG,CAAC;QAC9BL,IAAI,CAACQ,YAAY,CAAC,UAAU,EAAElB,gBAAgB,CAAC;QAC/CU,IAAI,CAACS,KAAK,CAACC,UAAU,GAAG,QAAQ;QAChCT,QAAQ,CAACU,IAAI,CAACC,WAAW,CAACZ,IAAI,CAAC;QAC/BA,IAAI,CAACa,KAAK,EAAE;QACZZ,QAAQ,CAACU,IAAI,CAACG,WAAW,CAACd,IAAI,CAAC;MACjC;IACF;EACF;AACF;AAEA,MAAMe,kBAAkB,GAAG,CAACC,aAAa,EAAEC,eAAe,KAAK;EAC7D,IAAIC,eAAe,GAAG,CAAC,CAAC;EACxBvC,MAAM,CAACC,IAAI,CAACoC,aAAa,CAAC,CAAClD,OAAO,CAAEQ,GAAG,IAAK;IAC1C,IAAI0C,aAAa,CAAC1C,GAAG,CAAC,CAACF,MAAM,GAAG,CAAC,EAAE;MACjC4C,aAAa,CAAC1C,GAAG,CAAC,CAACR,OAAO,CAAEqD,IAAI,IAAK;QACnCxC,MAAM,CAACC,IAAI,CAACuC,IAAI,CAAC,CAACrD,OAAO,CAAEsD,MAAM,IAAK;UACpC,IAAI,CAACF,eAAe,CAAC,eAAe,CAAC,EAAE;YACrCA,eAAe,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC;UAC1C,CAAC,MAAM;YACLA,eAAe,CAAC,eAAe,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;UAC5C;UACA,IAAI,CAACH,eAAe,CAAE,GAAE5C,GAAI,IAAG8C,MAAO,EAAC,CAAC,EAAE;YACxCF,eAAe,CAAE,GAAE5C,GAAI,IAAG8C,MAAO,EAAC,CAAC,GAAG,CAACD,IAAI,CAACC,MAAM,CAAC,CAAC;UACtD,CAAC,MAAM;YACLF,eAAe,CAAE,GAAE5C,GAAI,IAAG8C,MAAO,EAAC,CAAC,CAACC,IAAI,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC;UACxD;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAEF,MAAME,WAAW,GAAG3C,MAAM,CAAC4C,MAAM,CAACL,eAAe,CAAC,CAACM,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAC7DD,CAAC,CAACrD,MAAM,GAAGsD,CAAC,CAACtD,MAAM,GAAGqD,CAAC,GAAGC,CAAC,CAC5B,CAACtD,MAAM;EAER,MAAMuD,OAAO,GAAGV,eAAe,GAAGK,WAAW,GAAGL,eAAe,GAAGK,WAAW;EAE7E,IAAIM,UAAU,GAAGV,eAAe;EAChCvC,MAAM,CAACkD,OAAO,CAACD,UAAU,CAAC,CAAC9D,OAAO,CAAC,CAAC,CAACQ,GAAG,EAAEwD,KAAK,CAAC,KAAK;IACnD,IAAIA,KAAK,CAAC1D,MAAM,GAAGuD,OAAO,EAAE;MAC1B,KAAK,IAAIxD,CAAC,GAAG2D,KAAK,CAAC1D,MAAM,EAAED,CAAC,GAAGwD,OAAO,EAAExD,CAAC,EAAE,EAAE;QAC3C2D,KAAK,CAACT,IAAI,CAAC,EAAE,CAAC;MAChB;IACF;EACF,CAAC,CAAC;EACF,OAAOO,UAAU;AACnB,CAAC;AAED,MAAMG,QAAQ,GAAIC,KAAK,IAAK;EAC1B,MAAM;IACJ;IACA;IACA9C,KAAK;IACL+C,aAAa;IACbC,iBAAiB;IACjBC,cAAc;IACdC,kBAAkB;IAClBpB,aAAa;IACbqB;EACF,CAAC,GAAGL,KAAK;EACT,MAAMM,kBAAkB,GAAG,MAAM;IAAA;IAC/B,IAAIpE,KAAK,GAAG,EAAE;IACd,IAAIQ,MAAM,GAAGwD,iBAAiB,aAAjBA,iBAAiB,eAAjBA,iBAAiB,CAAExD,MAAM,GAAG,CAACwD,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAExD,MAAM,CAAC,GAAG,EAAE;IACzE,MAAM6D,UAAU,qBACXN,aAAa,CACjB;IACDtD,MAAM,CAACkD,OAAO,CAACU,UAAU,CAAC,CAACzE,OAAO,CAAC,CAAC,CAACQ,GAAG,EAAEwD,KAAK,CAAC,KAAK;MACnDA,KAAK,CAAChE,OAAO,CAAC,CAACqD,IAAI,EAAEqB,KAAK,KAAK;QAC7B,IAAI,CAACtE,KAAK,CAACsE,KAAK,CAAC,EAAEtE,KAAK,CAACsE,KAAK,CAAC,GAAG,CAAC,CAAC;QACpCtE,KAAK,CAACsE,KAAK,CAAC,CAAClE,GAAG,CAAC,GAAG6C,IAAI;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,MAAMsB,eAAe,GACnB,CAAAzB,aAAa,aAAbA,aAAa,gDAAbA,aAAa,CAAE0B,eAAe,0DAA9B,sBAAgCtE,MAAM,IAAG,CAAC,IAC1C,CAAA4C,aAAa,aAAbA,aAAa,gDAAbA,aAAa,CAAE2B,kBAAkB,0DAAjC,sBAAmCvE,MAAM,IAAG,CAAC,IAC7C,CAAA4C,aAAa,aAAbA,aAAa,gDAAbA,aAAa,CAAE4B,iBAAiB,0DAAhC,sBAAkCxE,MAAM,IAAG,CAAC;IAE9C,IAAIiE,8BAA8B,IAAII,eAAe,EAAE;MACrD,MAAMI,iBAAiB,GAAGlE,MAAM,CAAC4C,MAAM,CAACgB,UAAU,CAAC,CAACf,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAC9DD,CAAC,CAACrD,MAAM,GAAGsD,CAAC,CAACtD,MAAM,GAAGqD,CAAC,GAAGC,CAAC,CAC5B,CAACtD,MAAM;MAERO,MAAM,CAACkD,OAAO,CACZd,kBAAkB,CAACC,aAAa,EAAE6B,iBAAiB,CAAC,CACrD,CAAC/E,OAAO,CAAC,CAAC,CAACQ,GAAG,EAAEwD,KAAK,CAAC,KAAK;QAC1BA,KAAK,CAAChE,OAAO,CAAC,CAACqD,IAAI,EAAEqB,KAAK,KAAK;UAC7B,IAAI,CAACtE,KAAK,CAACsE,KAAK,CAAC,EAAEtE,KAAK,CAACsE,KAAK,CAAC,GAAG,CAAC,CAAC;UACpCtE,KAAK,CAACsE,KAAK,CAAC,CAAClE,GAAG,CAAC,GAAG6C,IAAI;QAC1B,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IAEA,MAAMlC,GAAG,GAAGR,YAAY,CAACP,KAAK,EAAEQ,MAAM,CAAC;IACvCM,aAAa,CAACC,GAAG,EAAEC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAM4D,0BAA0B,GAAG,MAAM;IACvC,IAAI5E,KAAK,GAAG,EAAE;IACd,IAAIQ,MAAM,GAAG,EAAE;IACfC,MAAM,CAACC,IAAI,CAACuD,cAAc,CAAC,CAACrE,OAAO,CAAC,CAACiF,IAAI,EAAEC,MAAM,KAAK;MACpD,IAAI,CAAC9E,KAAK,CAAC8E,MAAM,CAAC,EAAE9E,KAAK,CAAC8E,MAAM,CAAC,GAAG,EAAE;MACtCrE,MAAM,CAACkD,OAAO,CAACM,cAAc,CAACY,IAAI,CAAC,CAAC,CAACjF,OAAO,CAAC,CAAC,CAACQ,GAAG,EAAEwD,KAAK,CAAC,KAAK;QAC7DA,KAAK,CAAChE,OAAO,CAAC,CAACqD,IAAI,EAAEqB,KAAK,KAAK;UAC7B,IAAI,CAACtE,KAAK,CAAC8E,MAAM,CAAC,CAACR,KAAK,CAAC,EAAEtE,KAAK,CAAC8E,MAAM,CAAC,CAACR,KAAK,CAAC,GAAG,CAAC,CAAC;UACpDtE,KAAK,CAAC8E,MAAM,CAAC,CAACR,KAAK,CAAC,CAAClE,GAAG,CAAC,GAAG6C,IAAI;UAChCqB,KAAK,EAAE;QACT,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IACF7D,MAAM,CAACC,IAAI,CAACwD,kBAAkB,CAAC,CAACtE,OAAO,CAAEiF,IAAI,IAAK;MAChD,IAAIX,kBAAkB,CAACW,IAAI,CAAC,CAACrE,MAAM,EAAE;QACnCA,MAAM,CAAC2C,IAAI,CAACe,kBAAkB,CAACW,IAAI,CAAC,CAACrE,MAAM,CAAC;MAC9C;IACF,CAAC,CAAC;IACF,MAAMO,GAAG,GAAGH,kBAAkB,CAACZ,KAAK,EAAEQ,MAAM,CAAC;IAC7CM,aAAa,CAACC,GAAG,EAAEC,KAAK,CAAC;EAC3B,CAAC;EAED,OACE,4BACE;IAAK,SAAS,EAAC,2BAA2B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACvC+C,aAAa,IACZ;IACE,SAAS,EAAC,iCAAiC;IAC3C,KAAK,EAAC,eAAe;IACrB,GAAG,EAAC,eAAe;IACnB,OAAO,EAAE,MAAMK,kBAAkB,EAAG;IACpC,GAAG,EAAE7E,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAEpB,EAEA0E,cAAc,IACb;IACE,SAAS,EAAC,iCAAiC;IAC3C,KAAK,EAAC,eAAe;IACrB,GAAG,EAAC,eAAe;IACnB,OAAO,EAAE,MAAMW,0BAA0B,EAAG;IAC5C,GAAG,EAAErF,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAEpB,CACG,CACL;AAEP,CAAC;AAED,eAAesE,QAAQ"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}