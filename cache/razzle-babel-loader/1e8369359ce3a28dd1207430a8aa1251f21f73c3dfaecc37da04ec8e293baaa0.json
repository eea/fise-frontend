{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/DragDropList/DragDropList.jsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React, { useRef } from 'react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { v4 as uuid } from 'uuid';\nconst getPlaceholder = (draggedDOM, sourceIndex, destinationIndex) => {\n  // Because of the margin rendering rules, there is no easy\n  // way to calculate the offset of the placeholder.\n  //\n  // (Note that this is the reason we cannot use the solutions\n  // published on the net, because they assume that we are in control\n  // of the content and there are no additional margins involved.)\n  //\n  // To get a placeholder that looks good in all cases, we\n  // fill up the space between the previous and the next element.\n  const childrenArray = [...draggedDOM.parentNode.children];\n  // Remove the source element\n  childrenArray.splice(sourceIndex, 1);\n  // Also remove the placeholder that the library always inserts at the end\n  childrenArray.splice(-1, 1);\n  const parentRect = draggedDOM.parentNode.getBoundingClientRect();\n  const prevNode = childrenArray[destinationIndex - 1];\n  const nextNode = childrenArray[destinationIndex];\n  let top, bottom;\n  if (prevNode) {\n    const prevRect = prevNode.getBoundingClientRect();\n    top = prevRect.top + prevRect.height - parentRect.top;\n  } else {\n    top = 0;\n  }\n  if (nextNode) {\n    const nextRect = nextNode.getBoundingClientRect();\n    bottom = nextRect.top - parentRect.top;\n  } else {\n    bottom = parentRect.bottom + draggedDOM.getBoundingClientRect().height - parentRect.top;\n  }\n  return {\n    clientY: top,\n    clientHeight: bottom - top,\n    clientX: parseFloat(window.getComputedStyle(draggedDOM.parentNode).paddingLeft),\n    clientWidth: draggedDOM.clientWidth\n  };\n};\nconst DragDropList = props => {\n  const {\n    childList,\n    children,\n    onMoveItem,\n    as = 'div',\n    style,\n    forwardedAriaLabelledBy,\n    reactBeautifulDnd\n  } = props; //renderChild\n  const {\n    DragDropContext,\n    Draggable,\n    Droppable\n  } = reactBeautifulDnd;\n  const [placeholderProps, setPlaceholderProps] = React.useState({});\n  const [uid] = React.useState(uuid());\n  // queueing timed action\n  const timer = useRef(null);\n  const onDragStart = React.useCallback(event => {\n    clearTimeout(timer.current);\n    const queryAttr = 'data-rbd-draggable-id';\n    const domQuery = `[${queryAttr}='${event.draggableId}']`;\n    const draggedDOM = document.querySelector(domQuery);\n    if (!draggedDOM) {\n      return;\n    }\n    const sourceIndex = event.source.index;\n    setPlaceholderProps(getPlaceholder(draggedDOM, sourceIndex, sourceIndex));\n  }, []);\n  const onDragEnd = React.useCallback(result => {\n    clearTimeout(timer.current);\n    onMoveItem(result);\n    setPlaceholderProps({});\n  }, [onMoveItem]);\n  const onDragUpdate = React.useCallback(update => {\n    clearTimeout(timer.current);\n    setPlaceholderProps({});\n    if (!update.destination) {\n      return;\n    }\n    const draggableId = update.draggableId;\n    const queryAttr = 'data-rbd-draggable-id';\n    const domQuery = `[${queryAttr}='${draggableId}']`;\n    const draggedDOM = document.querySelector(domQuery);\n    if (!draggedDOM) {\n      return;\n    }\n    const sourceIndex = update.source.index;\n    const destinationIndex = update.destination.index;\n    // Wait until the animations have finished, to make it look good.\n    timer.current = setTimeout(() => setPlaceholderProps(getPlaceholder(draggedDOM, sourceIndex, destinationIndex)), 250);\n  }, []);\n  const AsDomComponent = as;\n  return __jsx(DragDropContext, {\n    onDragStart: onDragStart,\n    onDragUpdate: onDragUpdate,\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, __jsx(Droppable, {\n    droppableId: uid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, (provided, snapshot) => __jsx(AsDomComponent, _extends({\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      position: 'relative'\n    }),\n    \"aria-labelledby\": forwardedAriaLabelledBy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), childList.filter(([id, child]) => id && child) // beware numbers!\n  .map(([childId, child], index) => __jsx(Draggable, {\n    draggableId: childId.toString(),\n    index: index,\n    key: childId,\n    style: {\n      userSelect: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, draginfo => children({\n    child,\n    childId,\n    index,\n    draginfo\n  }))), provided.placeholder, !_isEmpty(placeholderProps) && snapshot.isDraggingOver && __jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      top: placeholderProps.clientY,\n      left: placeholderProps.clientX,\n      height: placeholderProps.clientHeight,\n      background: '#eee',\n      width: placeholderProps.clientWidth,\n      borderRadius: '3px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }))));\n};\nexport default injectLazyLibs(['reactBeautifulDnd'])(DragDropList);","map":{"version":3,"names":["React","useRef","injectLazyLibs","v4","uuid","getPlaceholder","draggedDOM","sourceIndex","destinationIndex","childrenArray","parentNode","children","splice","parentRect","getBoundingClientRect","prevNode","nextNode","top","bottom","prevRect","height","nextRect","clientY","clientHeight","clientX","parseFloat","window","getComputedStyle","paddingLeft","clientWidth","DragDropList","props","childList","onMoveItem","as","style","forwardedAriaLabelledBy","reactBeautifulDnd","DragDropContext","Draggable","Droppable","placeholderProps","setPlaceholderProps","useState","uid","timer","onDragStart","useCallback","event","clearTimeout","current","queryAttr","domQuery","draggableId","document","querySelector","source","index","onDragEnd","result","onDragUpdate","update","destination","setTimeout","AsDomComponent","provided","snapshot","innerRef","droppableProps","position","filter","id","child","map","childId","toString","userSelect","draginfo","placeholder","isDraggingOver","left","background","width","borderRadius"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/DragDropList/DragDropList.jsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { isEmpty } from 'lodash';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { v4 as uuid } from 'uuid';\n\nconst getPlaceholder = (draggedDOM, sourceIndex, destinationIndex) => {\n  // Because of the margin rendering rules, there is no easy\n  // way to calculate the offset of the placeholder.\n  //\n  // (Note that this is the reason we cannot use the solutions\n  // published on the net, because they assume that we are in control\n  // of the content and there are no additional margins involved.)\n  //\n  // To get a placeholder that looks good in all cases, we\n  // fill up the space between the previous and the next element.\n  const childrenArray = [...draggedDOM.parentNode.children];\n  // Remove the source element\n  childrenArray.splice(sourceIndex, 1);\n  // Also remove the placeholder that the library always inserts at the end\n  childrenArray.splice(-1, 1);\n  const parentRect = draggedDOM.parentNode.getBoundingClientRect();\n  const prevNode = childrenArray[destinationIndex - 1];\n  const nextNode = childrenArray[destinationIndex];\n  let top, bottom;\n  if (prevNode) {\n    const prevRect = prevNode.getBoundingClientRect();\n    top = prevRect.top + prevRect.height - parentRect.top;\n  } else {\n    top = 0;\n  }\n  if (nextNode) {\n    const nextRect = nextNode.getBoundingClientRect();\n    bottom = nextRect.top - parentRect.top;\n  } else {\n    bottom =\n      parentRect.bottom +\n      draggedDOM.getBoundingClientRect().height -\n      parentRect.top;\n  }\n  return {\n    clientY: top,\n    clientHeight: bottom - top,\n    clientX: parseFloat(\n      window.getComputedStyle(draggedDOM.parentNode).paddingLeft,\n    ),\n    clientWidth: draggedDOM.clientWidth,\n  };\n};\n\nconst DragDropList = (props) => {\n  const {\n    childList,\n    children,\n    onMoveItem,\n    as = 'div',\n    style,\n    forwardedAriaLabelledBy,\n    reactBeautifulDnd,\n  } = props; //renderChild\n  const { DragDropContext, Draggable, Droppable } = reactBeautifulDnd;\n  const [placeholderProps, setPlaceholderProps] = React.useState({});\n  const [uid] = React.useState(uuid());\n  // queueing timed action\n  const timer = useRef(null);\n\n  const onDragStart = React.useCallback((event) => {\n    clearTimeout(timer.current);\n    const queryAttr = 'data-rbd-draggable-id';\n    const domQuery = `[${queryAttr}='${event.draggableId}']`;\n    const draggedDOM = document.querySelector(domQuery);\n    if (!draggedDOM) {\n      return;\n    }\n    const sourceIndex = event.source.index;\n    setPlaceholderProps(getPlaceholder(draggedDOM, sourceIndex, sourceIndex));\n  }, []);\n\n  const onDragEnd = React.useCallback(\n    (result) => {\n      clearTimeout(timer.current);\n      onMoveItem(result);\n      setPlaceholderProps({});\n    },\n    [onMoveItem],\n  );\n\n  const onDragUpdate = React.useCallback((update) => {\n    clearTimeout(timer.current);\n    setPlaceholderProps({});\n    if (!update.destination) {\n      return;\n    }\n    const draggableId = update.draggableId;\n    const queryAttr = 'data-rbd-draggable-id';\n    const domQuery = `[${queryAttr}='${draggableId}']`;\n    const draggedDOM = document.querySelector(domQuery);\n    if (!draggedDOM) {\n      return;\n    }\n    const sourceIndex = update.source.index;\n    const destinationIndex = update.destination.index;\n    // Wait until the animations have finished, to make it look good.\n    timer.current = setTimeout(\n      () =>\n        setPlaceholderProps(\n          getPlaceholder(draggedDOM, sourceIndex, destinationIndex),\n        ),\n      250,\n    );\n  }, []);\n\n  const AsDomComponent = as;\n  return (\n    <DragDropContext\n      onDragStart={onDragStart}\n      onDragUpdate={onDragUpdate}\n      onDragEnd={onDragEnd}\n    >\n      <Droppable droppableId={uid}>\n        {(provided, snapshot) => (\n          <AsDomComponent\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            style={{ ...style, position: 'relative' }}\n            aria-labelledby={forwardedAriaLabelledBy}\n          >\n            {childList\n              .filter(([id, child]) => id && child) // beware numbers!\n              .map(([childId, child], index) => (\n                <Draggable\n                  draggableId={childId.toString()}\n                  index={index}\n                  key={childId}\n                  style={{\n                    userSelect: 'none',\n                  }}\n                >\n                  {(draginfo) => children({ child, childId, index, draginfo })}\n                </Draggable>\n              ))}\n            {provided.placeholder}\n            {!isEmpty(placeholderProps) && snapshot.isDraggingOver && (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: placeholderProps.clientY,\n                  left: placeholderProps.clientX,\n                  height: placeholderProps.clientHeight,\n                  background: '#eee',\n                  width: placeholderProps.clientWidth,\n                  borderRadius: '3px',\n                }}\n              />\n            )}\n          </AsDomComponent>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default injectLazyLibs(['reactBeautifulDnd'])(DragDropList);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}