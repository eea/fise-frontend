{"ast":null,"code":"import _join from \"lodash/join\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/customizations/volto/helpers/Html/Html.jsx\";\nvar __jsx = React.createElement;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Html helper.\n * @module helpers/Html\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport serialize from 'serialize-javascript';\nimport { BodyClass } from '@plone/volto/helpers';\nimport { runtimeConfig } from '@plone/volto/runtime_config';\n\n/**\n * Html class.\n * Wrapper component containing HTML metadata and boilerplate tags.\n * Used in server-side code only to wrap the string output of the\n * rendered route component.\n *\n * The only thing this component doesn't (and can't) include is the\n * HTML doctype declaration, which is added to the rendered output\n * by the server.js file.\n * @function Html\n * @param {Object} props Component properties.\n * @param {Object} props.assets Assets to be rendered.\n * @param {Object} props.component Content to be rendered as child node.\n * @param {Object} props.store Store object.\n * @returns {string} Markup of the not found page.\n */\n\n/**\n * Html class.\n * @class Html\n * @extends Component\n */\nclass Html extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _store$getState;\n    const {\n      extractor,\n      markup,\n      store\n    } = this.props;\n    const head = Helmet.rewind();\n    const bodyClass = _join(BodyClass.rewind(), ' ');\n    const pathName = (_store$getState = store.getState()) === null || _store$getState === void 0 ? void 0 : _store$getState.router.location.pathname;\n    const renderScripts = ['/header', '/head', '/footer'].includes(pathName);\n    return __jsx(\"html\", {\n      lang: \"en\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, __jsx(\"head\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, __jsx(\"meta\", {\n      charSet: \"utf-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }), head.base.toComponent(), head.title.toComponent(), head.meta.toComponent(), !renderScripts && head.link.toComponent(), !renderScripts && head.script.toComponent(), __jsx(\"script\", {\n      dangerouslySetInnerHTML: {\n        __html: `window.env = ${serialize(runtimeConfig)};`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), __jsx(\"link\", {\n      rel: \"shortcut icon\",\n      href: \"/favicon.ico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"generator\",\n      content: \"Volto - http://plone.org\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"apple-mobile-web-app-capable\",\n      content: \"yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), !renderScripts && extractor.getLinkElements().map(elem => /*#__PURE__*/React.cloneElement(elem, {\n      crossOrigin: false ? undefined : 'true'\n    })), !renderScripts && false && __jsx(React.Fragment, null, extractor.getStyleElements())), __jsx(\"body\", {\n      className: bodyClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      role: \"navigation\",\n      \"aria-label\": \"Toolbar\",\n      id: \"toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      id: \"main\",\n      dangerouslySetInnerHTML: {\n        __html: markup\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      id: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), __jsx(\"script\", {\n      dangerouslySetInnerHTML: {\n        __html: `window.__data=${serialize(store.getState())};`\n      },\n      charSet: \"UTF-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), !renderScripts && this.props.extractScripts !== false ? extractor.getScriptElements().map(elem => /*#__PURE__*/React.cloneElement(elem, {\n      crossOrigin: false ? undefined : 'true'\n    })) : ''));\n  }\n}\n_defineProperty(Html, \"propTypes\", {\n  extractor: PropTypes.shape({\n    getLinkElements: PropTypes.func.isRequired,\n    getScriptElements: PropTypes.func.isRequired,\n    getStyleElements: PropTypes.func.isRequired\n  }).isRequired,\n  markup: PropTypes.string.isRequired,\n  store: PropTypes.shape({\n    getState: PropTypes.func\n  }).isRequired\n});\nexport default Html;","map":{"version":3,"names":["React","Component","PropTypes","Helmet","serialize","BodyClass","runtimeConfig","Html","render","extractor","markup","store","props","head","rewind","bodyClass","pathName","getState","router","location","pathname","renderScripts","includes","base","toComponent","title","meta","link","script","__html","getLinkElements","map","elem","cloneElement","crossOrigin","undefined","getStyleElements","extractScripts","getScriptElements","shape","func","isRequired","string"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-forests-theme/src/customizations/volto/helpers/Html/Html.jsx"],"sourcesContent":["/**\n * Html helper.\n * @module helpers/Html\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from '@plone/volto/helpers';\nimport serialize from 'serialize-javascript';\nimport { join } from 'lodash';\nimport { BodyClass } from '@plone/volto/helpers';\nimport { runtimeConfig } from '@plone/volto/runtime_config';\n\n/**\n * Html class.\n * Wrapper component containing HTML metadata and boilerplate tags.\n * Used in server-side code only to wrap the string output of the\n * rendered route component.\n *\n * The only thing this component doesn't (and can't) include is the\n * HTML doctype declaration, which is added to the rendered output\n * by the server.js file.\n * @function Html\n * @param {Object} props Component properties.\n * @param {Object} props.assets Assets to be rendered.\n * @param {Object} props.component Content to be rendered as child node.\n * @param {Object} props.store Store object.\n * @returns {string} Markup of the not found page.\n */\n\n/**\n * Html class.\n * @class Html\n * @extends Component\n */\nclass Html extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    extractor: PropTypes.shape({\n      getLinkElements: PropTypes.func.isRequired,\n      getScriptElements: PropTypes.func.isRequired,\n      getStyleElements: PropTypes.func.isRequired,\n    }).isRequired,\n    markup: PropTypes.string.isRequired,\n    store: PropTypes.shape({\n      getState: PropTypes.func,\n    }).isRequired,\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { extractor, markup, store } = this.props;\n    const head = Helmet.rewind();\n    const bodyClass = join(BodyClass.rewind(), ' ');\n    const pathName = store.getState()?.router.location.pathname;\n    const renderScripts = ['/header', '/head', '/footer'].includes(pathName);\n    return (\n      <html lang=\"en\">\n        <head>\n          <meta charSet=\"utf-8\" />\n          {head.base.toComponent()}\n          {head.title.toComponent()}\n          {head.meta.toComponent()}\n          {!renderScripts && head.link.toComponent()}\n          {!renderScripts && head.script.toComponent()}\n\n          <script\n            dangerouslySetInnerHTML={{\n              __html: `window.env = ${serialize(runtimeConfig)};`,\n            }}\n          />\n\n          <link rel=\"shortcut icon\" href=\"/favicon.ico\" />\n          <meta name=\"generator\" content=\"Volto - http://plone.org\" />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n          <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n          {/* Add the crossorigin while in development */}\n          {!renderScripts &&\n            extractor.getLinkElements().map((elem) =>\n              React.cloneElement(elem, {\n                crossOrigin:\n                  process.env.NODE_ENV === 'production' ? undefined : 'true',\n              }),\n            )}\n          {/* Styles in development are loaded with Webpack's style-loader, in production,\n               they need to be static*/}\n          {!renderScripts && process.env.NODE_ENV === 'production' && (\n            <>{extractor.getStyleElements()}</>\n          )}\n        </head>\n        <body className={bodyClass}>\n          <div role=\"navigation\" aria-label=\"Toolbar\" id=\"toolbar\" />\n          <div id=\"main\" dangerouslySetInnerHTML={{ __html: markup }} />\n          <div id=\"sidebar\" />\n          <script\n            dangerouslySetInnerHTML={{\n              __html: `window.__data=${serialize(store.getState())};`,\n            }}\n            charSet=\"UTF-8\"\n          />\n          {/* Add the crossorigin while in development */}\n          {!renderScripts && this.props.extractScripts !== false\n            ? extractor.getScriptElements().map((elem) =>\n                React.cloneElement(elem, {\n                  crossOrigin:\n                    process.env.NODE_ENV === 'production' ? undefined : 'true',\n                }),\n              )\n            : ''}\n        </body>\n      </html>\n    );\n  }\n}\nexport default Html;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}