{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport messages from '@eeacms/volto-listing-block/messages';\nimport alignLeftSVG from '@plone/volto/icons/align-left.svg';\nimport alignCenterSVG from '@plone/volto/icons/align-center.svg';\nconst ALIGN_INFO_MAP = {\n  align_left: [alignLeftSVG, 'Left'],\n  align_center: [alignCenterSVG, 'Center']\n};\nexport const setBasicStylingSchema = args => {\n  const {\n    schema,\n    intl\n  } = args;\n  schema.properties.styles.schema = {\n    fieldsets: [{\n      id: 'styling',\n      title: 'Styling',\n      fields: ['theme', 'inverted', 'rounded']\n    }],\n    properties: {\n      theme: {\n        title: intl.formatMessage(messages.Theme),\n        description: intl.formatMessage(messages.ThemeHelp),\n        choices: [['', intl.formatMessage(messages.ThemeDefault)], ['primary', intl.formatMessage(messages.ThemePrimary)], ['secondary', intl.formatMessage(messages.ThemeSecondary)], ['tertiary', intl.formatMessage(messages.ThemeTertiary)]]\n      },\n      inverted: {\n        title: intl.formatMessage(messages.Inverted),\n        description: intl.formatMessage(messages.InvertedHelp),\n        type: 'boolean'\n      },\n      rounded: {\n        title: intl.formatMessage(messages.Rounded),\n        description: intl.formatMessage(messages.RoundedHelp),\n        type: 'boolean'\n      }\n    },\n    required: []\n  };\n  return schema;\n};\nconst CallToActionSchema = ({\n  formData\n}) => {\n  var _formData$itemModel, _formData$itemModel$c;\n  return {\n    fieldsets: [{\n      id: 'default',\n      fields: ['enable', ...(formData !== null && formData !== void 0 && (_formData$itemModel = formData.itemModel) !== null && _formData$itemModel !== void 0 && (_formData$itemModel$c = _formData$itemModel.callToAction) !== null && _formData$itemModel$c !== void 0 && _formData$itemModel$c.enable ? ['label', (formData === null || formData === void 0 ? void 0 : formData['@type']) === 'listing' ? 'urlTemplate' : 'href'] : [])],\n      //\n      title: 'Default'\n    }],\n    properties: {\n      enable: {\n        type: 'boolean',\n        title: 'Show action'\n      },\n      label: {\n        title: 'Action label',\n        default: 'Read more',\n        defaultValue: 'Read more'\n      },\n      href: {\n        title: 'Action URL',\n        widget: 'object_browser',\n        mode: 'link',\n        selectedItemAttrs: ['Title', 'Description'],\n        allowExternals: true\n      },\n      urlTemplate: {\n        title: 'Action URL Template',\n        description: 'Enter a path. Available placeholders: $URL, $PORTAL_URL. If empty, the result URL will be used.'\n      }\n    },\n    required: []\n  };\n};\nexport const setCardModelSchema = args => {\n  var _formData$itemModel2;\n  const {\n    formData,\n    schema\n  } = args;\n\n  // console.log('setCardModelSchema', args);\n\n  const itemModelSchema = schema.properties.itemModel.schema;\n  itemModelSchema.fieldsets[0].fields = [...itemModelSchema.fieldsets[0].fields, 'hasDate', 'hasDescription', ...(formData !== null && formData !== void 0 && (_formData$itemModel2 = formData.itemModel) !== null && _formData$itemModel2 !== void 0 && _formData$itemModel2.hasDescription ? ['maxDescription'] : []), 'hasMetaType', 'hasLabel', 'hasTags', 'callToAction'];\n  itemModelSchema.properties = _objectSpread(_objectSpread({}, itemModelSchema.properties), {}, {\n    hasDate: {\n      title: 'Publication date',\n      type: 'boolean'\n    },\n    hasDescription: {\n      title: 'Description',\n      type: 'boolean'\n    },\n    maxDescription: {\n      title: 'Description max lines',\n      description: \"Limit description to a maximum number of lines by adding trailing '...'\",\n      type: 'number',\n      default: 2,\n      minimum: 0,\n      maximum: 5\n    },\n    hasMetaType: {\n      title: 'Show portal type',\n      type: 'boolean'\n    },\n    hasLabel: {\n      title: 'Show new/archived label',\n      type: 'boolean'\n    },\n    hasTags: {\n      title: 'Show tags',\n      type: 'boolean'\n    },\n    callToAction: {\n      widget: 'object',\n      schema: CallToActionSchema({\n        formData\n      })\n    }\n  });\n  return schema;\n};\nexport const setItemModelSchema = args => {\n  var _formData$itemModel3;\n  const {\n    formData,\n    schema\n  } = args;\n  const itemModelSchema = schema.properties.itemModel.schema;\n\n  // console.log('setItemModelSchema', args);\n\n  itemModelSchema.fieldsets[0].fields = [...itemModelSchema.fieldsets[0].fields, 'hasDate', 'hasDescription', 'maxDescription', 'hasImage', ...((_formData$itemModel3 = formData.itemModel) !== null && _formData$itemModel3 !== void 0 && _formData$itemModel3.hasImage ? ['imageOnRightSide'] : [])\n  // 'hasMetaType',\n  // 'hasLabel',\n  // 'hasTags',\n  // 'callToAction',\n  ];\n\n  itemModelSchema.properties = _objectSpread(_objectSpread({}, itemModelSchema.properties), {}, {\n    hasDate: {\n      title: 'Publication date',\n      type: 'boolean'\n    },\n    hasDescription: {\n      title: 'Description',\n      type: 'boolean',\n      default: true\n    },\n    maxDescription: {\n      title: 'Description max lines',\n      description: \"Limit description to a maximum number of lines by adding trailing '...'\",\n      type: 'number',\n      default: 2,\n      minimum: 0,\n      maximum: 5\n    },\n    hasImage: {\n      title: 'Image',\n      type: 'boolean',\n      default: true\n    },\n    imageOnRightSide: {\n      title: 'Image on Right (Default is Left)',\n      type: 'boolean'\n    }\n    // hasMetaType: {\n    //   title: 'Show portal type',\n    //   type: 'boolean',\n    // },\n    // hasLabel: {\n    //   title: 'Show new/archived label',\n    //   type: 'boolean',\n    // },\n    // hasTags: {\n    //   title: 'Show tags',\n    //   type: 'boolean',\n    // },\n  });\n\n  return schema;\n};\nexport const setCardStylingSchema = ({\n  schema\n}) => {\n  const styleSchema = schema.properties.styles.schema;\n  styleSchema.fieldsets[0].fields.push('text_align');\n  styleSchema.properties = _objectSpread(_objectSpread({}, styleSchema.properties), {}, {\n    text_align: {\n      title: 'Text align',\n      widget: 'style_text_align',\n      actions: Object.keys(ALIGN_INFO_MAP),\n      actionsInfoMap: ALIGN_INFO_MAP\n    }\n  });\n  return schema;\n};","map":{"version":3,"names":["messages","alignLeftSVG","alignCenterSVG","ALIGN_INFO_MAP","align_left","align_center","setBasicStylingSchema","args","schema","intl","properties","styles","fieldsets","id","title","fields","theme","formatMessage","Theme","description","ThemeHelp","choices","ThemeDefault","ThemePrimary","ThemeSecondary","ThemeTertiary","inverted","Inverted","InvertedHelp","type","rounded","Rounded","RoundedHelp","required","CallToActionSchema","formData","itemModel","callToAction","enable","label","default","defaultValue","href","widget","mode","selectedItemAttrs","allowExternals","urlTemplate","setCardModelSchema","itemModelSchema","hasDescription","hasDate","maxDescription","minimum","maximum","hasMetaType","hasLabel","hasTags","setItemModelSchema","hasImage","imageOnRightSide","setCardStylingSchema","styleSchema","push","text_align","actions","Object","keys","actionsInfoMap"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-listing-block/src/blocks/Listing/schema.js"],"sourcesContent":["import messages from '@eeacms/volto-listing-block/messages';\n\nimport alignLeftSVG from '@plone/volto/icons/align-left.svg';\nimport alignCenterSVG from '@plone/volto/icons/align-center.svg';\n\nconst ALIGN_INFO_MAP = {\n  align_left: [alignLeftSVG, 'Left'],\n  align_center: [alignCenterSVG, 'Center'],\n};\n\nexport const setBasicStylingSchema = (args) => {\n  const { schema, intl } = args;\n  schema.properties.styles.schema = {\n    fieldsets: [\n      {\n        id: 'styling',\n        title: 'Styling',\n        fields: ['theme', 'inverted', 'rounded'],\n      },\n    ],\n    properties: {\n      theme: {\n        title: intl.formatMessage(messages.Theme),\n        description: intl.formatMessage(messages.ThemeHelp),\n        choices: [\n          ['', intl.formatMessage(messages.ThemeDefault)],\n          ['primary', intl.formatMessage(messages.ThemePrimary)],\n          ['secondary', intl.formatMessage(messages.ThemeSecondary)],\n          ['tertiary', intl.formatMessage(messages.ThemeTertiary)],\n        ],\n      },\n      inverted: {\n        title: intl.formatMessage(messages.Inverted),\n        description: intl.formatMessage(messages.InvertedHelp),\n        type: 'boolean',\n      },\n      rounded: {\n        title: intl.formatMessage(messages.Rounded),\n        description: intl.formatMessage(messages.RoundedHelp),\n        type: 'boolean',\n      },\n    },\n    required: [],\n  };\n\n  return schema;\n};\n\nconst CallToActionSchema = ({ formData }) => {\n  return {\n    fieldsets: [\n      {\n        id: 'default',\n        fields: [\n          'enable',\n          ...(formData?.itemModel?.callToAction?.enable\n            ? [\n                'label',\n                formData?.['@type'] === 'listing' ? 'urlTemplate' : 'href',\n              ]\n            : []),\n        ], //\n        title: 'Default',\n      },\n    ],\n    properties: {\n      enable: {\n        type: 'boolean',\n        title: 'Show action',\n      },\n      label: {\n        title: 'Action label',\n        default: 'Read more',\n        defaultValue: 'Read more',\n      },\n      href: {\n        title: 'Action URL',\n        widget: 'object_browser',\n        mode: 'link',\n        selectedItemAttrs: ['Title', 'Description'],\n        allowExternals: true,\n      },\n      urlTemplate: {\n        title: 'Action URL Template',\n        description:\n          'Enter a path. Available placeholders: $URL, $PORTAL_URL. If empty, the result URL will be used.',\n      },\n    },\n    required: [],\n  };\n};\n\nexport const setCardModelSchema = (args) => {\n  const { formData, schema } = args;\n\n  // console.log('setCardModelSchema', args);\n\n  const itemModelSchema = schema.properties.itemModel.schema;\n  itemModelSchema.fieldsets[0].fields = [\n    ...itemModelSchema.fieldsets[0].fields,\n    'hasDate',\n    'hasDescription',\n    ...(formData?.itemModel?.hasDescription ? ['maxDescription'] : []),\n    'hasMetaType',\n    'hasLabel',\n    'hasTags',\n    'callToAction',\n  ];\n  itemModelSchema.properties = {\n    ...itemModelSchema.properties,\n    hasDate: {\n      title: 'Publication date',\n      type: 'boolean',\n    },\n    hasDescription: {\n      title: 'Description',\n      type: 'boolean',\n    },\n    maxDescription: {\n      title: 'Description max lines',\n      description:\n        \"Limit description to a maximum number of lines by adding trailing '...'\",\n      type: 'number',\n      default: 2,\n      minimum: 0,\n      maximum: 5,\n    },\n    hasMetaType: {\n      title: 'Show portal type',\n      type: 'boolean',\n    },\n    hasLabel: {\n      title: 'Show new/archived label',\n      type: 'boolean',\n    },\n    hasTags: {\n      title: 'Show tags',\n      type: 'boolean',\n    },\n    callToAction: {\n      widget: 'object',\n      schema: CallToActionSchema({ formData }),\n    },\n  };\n  return schema;\n};\n\nexport const setItemModelSchema = (args) => {\n  const { formData, schema } = args;\n  const itemModelSchema = schema.properties.itemModel.schema;\n\n  // console.log('setItemModelSchema', args);\n\n  itemModelSchema.fieldsets[0].fields = [\n    ...itemModelSchema.fieldsets[0].fields,\n    'hasDate',\n    'hasDescription',\n    'maxDescription',\n    'hasImage',\n    ...(formData.itemModel?.hasImage ? ['imageOnRightSide'] : []),\n    // 'hasMetaType',\n    // 'hasLabel',\n    // 'hasTags',\n    // 'callToAction',\n  ];\n  itemModelSchema.properties = {\n    ...itemModelSchema.properties,\n\n    hasDate: {\n      title: 'Publication date',\n      type: 'boolean',\n    },\n    hasDescription: {\n      title: 'Description',\n      type: 'boolean',\n      default: true,\n    },\n    maxDescription: {\n      title: 'Description max lines',\n      description:\n        \"Limit description to a maximum number of lines by adding trailing '...'\",\n      type: 'number',\n      default: 2,\n      minimum: 0,\n      maximum: 5,\n    },\n    hasImage: {\n      title: 'Image',\n      type: 'boolean',\n      default: true,\n    },\n    imageOnRightSide: {\n      title: 'Image on Right (Default is Left)',\n      type: 'boolean',\n    },\n    // hasMetaType: {\n    //   title: 'Show portal type',\n    //   type: 'boolean',\n    // },\n    // hasLabel: {\n    //   title: 'Show new/archived label',\n    //   type: 'boolean',\n    // },\n    // hasTags: {\n    //   title: 'Show tags',\n    //   type: 'boolean',\n    // },\n  };\n  return schema;\n};\n\nexport const setCardStylingSchema = ({ schema }) => {\n  const styleSchema = schema.properties.styles.schema;\n  styleSchema.fieldsets[0].fields.push('text_align');\n  styleSchema.properties = {\n    ...styleSchema.properties,\n    text_align: {\n      title: 'Text align',\n      widget: 'style_text_align',\n      actions: Object.keys(ALIGN_INFO_MAP),\n      actionsInfoMap: ALIGN_INFO_MAP,\n    },\n  };\n\n  return schema;\n};\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}