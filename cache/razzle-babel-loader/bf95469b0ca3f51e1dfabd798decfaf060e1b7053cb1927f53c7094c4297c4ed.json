{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { v4 as uuid } from 'uuid';\nimport { emptyBlocksForm } from '@plone/volto/helpers';\nexport const empty = () => {\n  const tabId = uuid();\n  return {\n    blocks: {\n      [tabId]: _objectSpread({\n        '@type': 'tab'\n      }, emptyBlocksForm())\n    },\n    blocks_layout: {\n      items: [tabId]\n    }\n  };\n};\nexport const emptyTab = () => _objectSpread({\n  '@type': 'tab'\n}, emptyBlocksForm());\nexport const scrollToTarget = (target, offsetHeight = 0) => {\n  const bodyRect = document.body.getBoundingClientRect().top;\n  const targetRect = target.getBoundingClientRect().top;\n  const targetPosition = targetRect - bodyRect - offsetHeight;\n  window.scrollTo({\n    top: targetPosition,\n    behavior: 'smooth'\n  });\n  return;\n};","map":{"version":3,"names":["v4","uuid","emptyBlocksForm","empty","tabId","blocks","blocks_layout","items","emptyTab","scrollToTarget","target","offsetHeight","bodyRect","document","body","getBoundingClientRect","top","targetRect","targetPosition","window","scrollTo","behavior"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-tabs-block/src/helpers.js"],"sourcesContent":["import { v4 as uuid } from 'uuid';\nimport { emptyBlocksForm } from '@plone/volto/helpers';\n\nexport const empty = () => {\n  const tabId = uuid();\n\n  return {\n    blocks: {\n      [tabId]: {\n        '@type': 'tab',\n        ...emptyBlocksForm(),\n      },\n    },\n    blocks_layout: {\n      items: [tabId],\n    },\n  };\n};\n\nexport const emptyTab = () => ({\n  '@type': 'tab',\n  ...emptyBlocksForm(),\n});\n\nexport const scrollToTarget = (target, offsetHeight = 0) => {\n  const bodyRect = document.body.getBoundingClientRect().top;\n  const targetRect = target.getBoundingClientRect().top;\n  const targetPosition = targetRect - bodyRect - offsetHeight;\n\n  window.scrollTo({\n    top: targetPosition,\n    behavior: 'smooth',\n  });\n\n  return;\n};\n"],"mappings":";;;AAAA,SAASA,EAAE,IAAIC,IAAI,QAAQ,MAAM;AACjC,SAASC,eAAe,QAAQ,sBAAsB;AAEtD,OAAO,MAAMC,KAAK,GAAG,MAAM;EACzB,MAAMC,KAAK,GAAGH,IAAI,EAAE;EAEpB,OAAO;IACLI,MAAM,EAAE;MACN,CAACD,KAAK;QACJ,OAAO,EAAE;MAAK,GACXF,eAAe,EAAE;IAExB,CAAC;IACDI,aAAa,EAAE;MACbC,KAAK,EAAE,CAACH,KAAK;IACf;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMI,QAAQ,GAAG;EACtB,OAAO,EAAE;AAAK,GACXN,eAAe,EAAE,CACpB;AAEF,OAAO,MAAMO,cAAc,GAAG,CAACC,MAAM,EAAEC,YAAY,GAAG,CAAC,KAAK;EAC1D,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,IAAI,CAACC,qBAAqB,EAAE,CAACC,GAAG;EAC1D,MAAMC,UAAU,GAAGP,MAAM,CAACK,qBAAqB,EAAE,CAACC,GAAG;EACrD,MAAME,cAAc,GAAGD,UAAU,GAAGL,QAAQ,GAAGD,YAAY;EAE3DQ,MAAM,CAACC,QAAQ,CAAC;IACdJ,GAAG,EAAEE,cAAc;IACnBG,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF;AACF,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}