{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/DatabaseInformation.jsx\";\nvar __jsx = React.createElement;\n/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/DatabaseInformation\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { Container, Divider, Message, Segment, Table } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { getDatabaseInformation } from '@plone/volto/actions';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\nvar messages = defineMessages({\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  databaseInformation: {\n    \"id\": \"Database Information\",\n    \"defaultMessage\": \"Database Information\"\n  }\n});\n\n/**\n * DatabaseInformation class.\n * @class DatabaseInformation\n * @extends Component\n */\nvar DatabaseInformation = /*#__PURE__*/function (_Component) {\n  _inherits(DatabaseInformation, _Component);\n  var _super = _createSuper(DatabaseInformation);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  function DatabaseInformation(props) {\n    var _this;\n    _classCallCheck(this, DatabaseInformation);\n    _this = _super.call(this, props);\n    _this.state = {\n      isClient: false\n    };\n    return _this;\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  _createClass(DatabaseInformation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getDatabaseInformation();\n      this.setState({\n        isClient: true\n      });\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return this.props.databaseInformation ? __jsx(Container, {\n        id: \"database-page\",\n        className: \"controlpanel-database\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, __jsx(Helmet, {\n        title: this.props.intl.formatMessage(messages.databaseInformation),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }), __jsx(Segment.Group, {\n        raised: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, __jsx(Segment, {\n        className: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Database Information\",\n        defaultMessage: \"Database Information\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      })), __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, __jsx(Message, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"The Database Manager allow you to view database status information\",\n        defaultMessage: \"The Database Manager allow you to view database status information\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }))), __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, __jsx(Message, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, __jsx(Message.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Database main\",\n        defaultMessage: \"Database main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }))), __jsx(Table, {\n        celled: true,\n        padded: true,\n        columns: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, __jsx(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, __jsx(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Database Location\",\n        defaultMessage: \"Database Location\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      })), __jsx(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }\n      }, this.props.databaseInformation.db_name)), __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, __jsx(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Database Size\",\n        defaultMessage: \"Database Size\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      })), __jsx(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }\n      }, this.props.databaseInformation.database_size)), __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, __jsx(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Total number of objects in the database\",\n        defaultMessage: \"Total number of objects in the database\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      })), __jsx(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }\n      }, this.props.databaseInformation.db_size)), __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, __jsx(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Total number of objects in memory from all caches\",\n        defaultMessage: \"Total number of objects in memory from all caches\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      })), __jsx(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 19\n        }\n      }, this.props.databaseInformation.cache_size)), __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, __jsx(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Target number of objects in memory per cache\",\n        defaultMessage: \"Target number of objects in memory per cache\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      })), __jsx(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 19\n        }\n      }, this.props.databaseInformation.cache_length)), __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }, __jsx(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Target memory size per cache in bytes\",\n        defaultMessage: \"Target memory size per cache in bytes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }\n      })), __jsx(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 19\n        }\n      }, this.props.databaseInformation.cache_length_bytes))))), __jsx(Segment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }, __jsx(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }), __jsx(Message, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      }, __jsx(Message.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Total number of objects in each cache\",\n        defaultMessage: \"Total number of objects in each cache\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }\n      }))), __jsx(Table, {\n        celled: true,\n        padded: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, __jsx(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }\n      }, __jsx(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }, __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Cache Name\",\n        defaultMessage: \"Cache Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Number of active objects\",\n        defaultMessage: \"Number of active objects\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }\n      })), __jsx(Table.HeaderCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 19\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Total active and non-active objects\",\n        defaultMessage: \"Total active and non-active objects\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      })))), this.props.databaseInformation.cache_detail_length.map(function (item) {\n        return __jsx(Table.Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 19\n          }\n        }, __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }\n        }, item.connection), __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 21\n          }\n        }, item.ngsize), __jsx(Table.Cell, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }\n        }, item.size));\n      })))), this.state.isClient && __jsx(Portal, {\n        node: document.getElementById('toolbar'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }\n      }, __jsx(Toolbar, {\n        pathname: this.props.pathname,\n        hideDefaultViewButtons: true,\n        inner: __jsx(React.Fragment, null, __jsx(Link, {\n          to: \"/controlpanel\",\n          className: \"item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 19\n          }\n        }, __jsx(Icon, {\n          name: backSVG,\n          \"aria-label\": this.props.intl.formatMessage(messages.back),\n          className: \"contents circled\",\n          size: \"30px\",\n          title: this.props.intl.formatMessage(messages.back),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }\n      }))) : null;\n    }\n  }]);\n  return DatabaseInformation;\n}(Component);\n_defineProperty(DatabaseInformation, \"propTypes\", {\n  getDatabaseInformation: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, connect(function (state, props) {\n  return {\n    databaseInformation: state.controlpanels.databaseinformation,\n    pathname: props.location.pathname\n  };\n}, {\n  getDatabaseInformation: getDatabaseInformation\n}))(DatabaseInformation);","map":{"version":3,"names":["React","Component","PropTypes","connect","compose","Link","Portal","Container","Divider","Message","Segment","Table","FormattedMessage","defineMessages","injectIntl","getDatabaseInformation","Helmet","Icon","Toolbar","backSVG","messages","back","databaseInformation","DatabaseInformation","props","state","isClient","setState","intl","formatMessage","db_name","database_size","db_size","cache_size","cache_length","cache_length_bytes","cache_detail_length","map","item","connection","ngsize","size","document","getElementById","pathname","func","isRequired","controlpanels","databaseinformation","location"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Controlpanels/DatabaseInformation.jsx"],"sourcesContent":["/**\n * Users controlpanel container.\n * @module components/manage/Controlpanels/DatabaseInformation\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { Portal } from 'react-portal';\nimport { Container, Divider, Message, Segment, Table } from 'semantic-ui-react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { getDatabaseInformation } from '@plone/volto/actions';\nimport { Helmet } from '@plone/volto/helpers';\nimport { Icon, Toolbar } from '@plone/volto/components';\nimport backSVG from '@plone/volto/icons/back.svg';\n\nconst messages = defineMessages({\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  databaseInformation: {\n    id: 'Database Information',\n    defaultMessage: 'Database Information',\n  },\n});\n\n/**\n * DatabaseInformation class.\n * @class DatabaseInformation\n * @extends Component\n */\nclass DatabaseInformation extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getDatabaseInformation: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs DiffComponent\n   */\n  constructor(props) {\n    super(props);\n    this.state = { isClient: false };\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.props.getDatabaseInformation();\n    this.setState({ isClient: true });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return this.props.databaseInformation ? (\n      <Container id=\"database-page\" className=\"controlpanel-database\">\n        <Helmet\n          title={this.props.intl.formatMessage(messages.databaseInformation)}\n        />\n        <Segment.Group raised>\n          <Segment className=\"primary\">\n            <FormattedMessage\n              id=\"Database Information\"\n              defaultMessage=\"Database Information\"\n            />\n          </Segment>\n          <Segment>\n            <Message>\n              <FormattedMessage\n                id=\"The Database Manager allow you to view database status information\"\n                defaultMessage=\"The Database Manager allow you to view database status information\"\n              />\n            </Message>\n          </Segment>\n          <Segment>\n            <Message>\n              <Message.Header>\n                <FormattedMessage\n                  id=\"Database main\"\n                  defaultMessage=\"Database main\"\n                />\n              </Message.Header>\n            </Message>\n            <Table celled padded columns=\"2\">\n              <Table.Body>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Database Location\"\n                      defaultMessage=\"Database Location\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.db_name}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Database Size\"\n                      defaultMessage=\"Database Size\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.database_size}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Total number of objects in the database\"\n                      defaultMessage=\"Total number of objects in the database\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.db_size}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Total number of objects in memory from all caches\"\n                      defaultMessage=\"Total number of objects in memory from all caches\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.cache_size}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Target number of objects in memory per cache\"\n                      defaultMessage=\"Target number of objects in memory per cache\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.cache_length}\n                  </Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>\n                    <FormattedMessage\n                      id=\"Target memory size per cache in bytes\"\n                      defaultMessage=\"Target memory size per cache in bytes\"\n                    />\n                  </Table.Cell>\n                  <Table.Cell>\n                    {this.props.databaseInformation.cache_length_bytes}\n                  </Table.Cell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </Segment>\n          <Segment>\n            <Divider />\n\n            <Message>\n              <Message.Header>\n                <FormattedMessage\n                  id=\"Total number of objects in each cache\"\n                  defaultMessage=\"Total number of objects in each cache\"\n                />\n              </Message.Header>\n            </Message>\n            <Table celled padded>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>\n                    <FormattedMessage\n                      id=\"Cache Name\"\n                      defaultMessage=\"Cache Name\"\n                    />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <FormattedMessage\n                      id=\"Number of active objects\"\n                      defaultMessage=\"Number of active objects\"\n                    />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <FormattedMessage\n                      id=\"Total active and non-active objects\"\n                      defaultMessage=\"Total active and non-active objects\"\n                    />\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              {this.props.databaseInformation.cache_detail_length.map(\n                (item) => (\n                  <Table.Row>\n                    <Table.Cell>{item.connection}</Table.Cell>\n                    <Table.Cell>{item.ngsize}</Table.Cell>\n                    <Table.Cell>{item.size}</Table.Cell>\n                  </Table.Row>\n                ),\n              )}\n            </Table>\n          </Segment>\n        </Segment.Group>\n\n        {this.state.isClient && (\n          <Portal node={document.getElementById('toolbar')}>\n            <Toolbar\n              pathname={this.props.pathname}\n              hideDefaultViewButtons\n              inner={\n                <>\n                  <Link to=\"/controlpanel\" className=\"item\">\n                    <Icon\n                      name={backSVG}\n                      aria-label={this.props.intl.formatMessage(messages.back)}\n                      className=\"contents circled\"\n                      size=\"30px\"\n                      title={this.props.intl.formatMessage(messages.back)}\n                    />\n                  </Link>\n                </>\n              }\n            />\n          </Portal>\n        )}\n      </Container>\n    ) : null;\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state, props) => ({\n      databaseInformation: state.controlpanels.databaseinformation,\n      pathname: props.location.pathname,\n    }),\n    { getDatabaseInformation },\n  ),\n)(DatabaseInformation);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Back","defaultMessage":"Back"},{"id":"Database Information","defaultMessage":"Database Information"},{"id":"The Database Manager allow you to view database status information","defaultMessage":"The Database Manager allow you to view database status information"},{"id":"Database main","defaultMessage":"Database main"},{"id":"Database Location","defaultMessage":"Database Location"},{"id":"Database Size","defaultMessage":"Database Size"},{"id":"Total number of objects in the database","defaultMessage":"Total number of objects in the database"},{"id":"Total number of objects in memory from all caches","defaultMessage":"Total number of objects in memory from all caches"},{"id":"Target number of objects in memory per cache","defaultMessage":"Target number of objects in memory per cache"},{"id":"Target memory size per cache in bytes","defaultMessage":"Target memory size per cache in bytes"},{"id":"Total number of objects in each cache","defaultMessage":"Total number of objects in each cache"},{"id":"Cache Name","defaultMessage":"Cache Name"},{"id":"Number of active objects","defaultMessage":"Number of active objects"},{"id":"Total active and non-active objects","defaultMessage":"Total active and non-active objects"}]}},"sourceType":"module","externalDependencies":[]}