{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-plotlycharts/src/hocs/connectBlockToVisualization.js\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React, { useEffect, useMemo } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect, useDispatch } from 'react-redux';\nimport { getVisualization, removeVisualization } from '@eeacms/volto-plotlycharts/actions';\n\n/**\n * connectBlockToVisualization.\n *\n * @param {} WrappedComponent\n */\nfunction connectBlockToVisualization(getConfig = () => ({})) {\n  return WrappedComponent => {\n    return connect(state => ({\n      data_visualizations: state.data_visualizations\n    }))(withRouter(props => {\n      var _props$data_visualiza, _props$data_visualiza2, _props$data_visualiza3, _props$data_visualiza4, _props$data_visualiza5, _props$data_visualiza6;\n      const dispatch = useDispatch();\n      const config = useMemo(() => getConfig(props), [props]);\n      const vis_url = useMemo(() => config.vis_url, [config.vis_url]);\n      const use_live_data = useMemo(() => {\n        var _config$use_live_data;\n        return (_config$use_live_data = config.use_live_data) !== null && _config$use_live_data !== void 0 ? _config$use_live_data : true;\n      }, [config.use_live_data]);\n      const isPending = vis_url ? (_props$data_visualiza = props.data_visualizations) === null || _props$data_visualiza === void 0 ? void 0 : (_props$data_visualiza2 = _props$data_visualiza.pendingVisualizations) === null || _props$data_visualiza2 === void 0 ? void 0 : _props$data_visualiza2[vis_url] : false;\n      const isFailed = vis_url ? (_props$data_visualiza3 = props.data_visualizations) === null || _props$data_visualiza3 === void 0 ? void 0 : (_props$data_visualiza4 = _props$data_visualiza3.failedVisualizations) === null || _props$data_visualiza4 === void 0 ? void 0 : _props$data_visualiza4[vis_url] : false;\n      const visualization_data = vis_url ? (_props$data_visualiza5 = props.data_visualizations) === null || _props$data_visualiza5 === void 0 ? void 0 : (_props$data_visualiza6 = _props$data_visualiza5.data) === null || _props$data_visualiza6 === void 0 ? void 0 : _props$data_visualiza6[vis_url] : null;\n      const readyToDispatch = vis_url && !visualization_data && !isPending && !isFailed;\n      useEffect(() => {\n        if (visualization_data) {\n          dispatch(removeVisualization(vis_url));\n        }\n        /* eslint-disable-next-line */\n      }, [use_live_data]);\n      useEffect(() => {\n        if (readyToDispatch) {\n          dispatch(getVisualization(vis_url, use_live_data));\n        }\n      });\n      return __jsx(WrappedComponent, _extends({}, props, {\n        visualization_data: visualization_data,\n        loadingVisualizationData: isPending,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }));\n    }));\n  };\n}\nexport default connectBlockToVisualization;","map":{"version":3,"names":["React","useEffect","useMemo","withRouter","connect","useDispatch","getVisualization","removeVisualization","connectBlockToVisualization","getConfig","WrappedComponent","state","data_visualizations","props","dispatch","config","vis_url","use_live_data","isPending","pendingVisualizations","isFailed","failedVisualizations","visualization_data","data","readyToDispatch"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-plotlycharts/src/hocs/connectBlockToVisualization.js"],"sourcesContent":["import React, { useEffect, useMemo } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect, useDispatch } from 'react-redux';\nimport {\n  getVisualization,\n  removeVisualization,\n} from '@eeacms/volto-plotlycharts/actions';\n\n/**\n * connectBlockToVisualization.\n *\n * @param {} WrappedComponent\n */\nfunction connectBlockToVisualization(getConfig = () => ({})) {\n  return (WrappedComponent) => {\n    return connect((state) => ({\n      data_visualizations: state.data_visualizations,\n    }))(\n      withRouter((props) => {\n        const dispatch = useDispatch();\n        const config = useMemo(() => getConfig(props), [props]);\n\n        const vis_url = useMemo(() => config.vis_url, [config.vis_url]);\n        const use_live_data = useMemo(() => config.use_live_data ?? true, [\n          config.use_live_data,\n        ]);\n\n        const isPending = vis_url\n          ? props.data_visualizations?.pendingVisualizations?.[vis_url]\n          : false;\n\n        const isFailed = vis_url\n          ? props.data_visualizations?.failedVisualizations?.[vis_url]\n          : false;\n\n        const visualization_data = vis_url\n          ? props.data_visualizations?.data?.[vis_url]\n          : null;\n\n        const readyToDispatch =\n          vis_url && !visualization_data && !isPending && !isFailed;\n\n        useEffect(() => {\n          if (visualization_data) {\n            dispatch(removeVisualization(vis_url));\n          }\n          /* eslint-disable-next-line */\n        }, [use_live_data]);\n\n        useEffect(() => {\n          if (readyToDispatch) {\n            dispatch(getVisualization(vis_url, use_live_data));\n          }\n        });\n\n        return (\n          <WrappedComponent\n            {...props}\n            visualization_data={visualization_data}\n            loadingVisualizationData={isPending}\n          />\n        );\n      }),\n    );\n  };\n}\n\nexport default connectBlockToVisualization;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AACjD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,OAAO,EAAEC,WAAW,QAAQ,aAAa;AAClD,SACEC,gBAAgB,EAChBC,mBAAmB,QACd,oCAAoC;;AAE3C;AACA;AACA;AACA;AACA;AACA,SAASC,2BAA2B,CAACC,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE;EAC3D,OAAQC,gBAAgB,IAAK;IAC3B,OAAON,OAAO,CAAEO,KAAK,KAAM;MACzBC,mBAAmB,EAAED,KAAK,CAACC;IAC7B,CAAC,CAAC,CAAC,CACDT,UAAU,CAAEU,KAAK,IAAK;MAAA;MACpB,MAAMC,QAAQ,GAAGT,WAAW,EAAE;MAC9B,MAAMU,MAAM,GAAGb,OAAO,CAAC,MAAMO,SAAS,CAACI,KAAK,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;MAEvD,MAAMG,OAAO,GAAGd,OAAO,CAAC,MAAMa,MAAM,CAACC,OAAO,EAAE,CAACD,MAAM,CAACC,OAAO,CAAC,CAAC;MAC/D,MAAMC,aAAa,GAAGf,OAAO,CAAC;QAAA;QAAA,gCAAMa,MAAM,CAACE,aAAa,yEAAI,IAAI;MAAA,GAAE,CAChEF,MAAM,CAACE,aAAa,CACrB,CAAC;MAEF,MAAMC,SAAS,GAAGF,OAAO,4BACrBH,KAAK,CAACD,mBAAmB,oFAAzB,sBAA2BO,qBAAqB,2DAAhD,uBAAmDH,OAAO,CAAC,GAC3D,KAAK;MAET,MAAMI,QAAQ,GAAGJ,OAAO,6BACpBH,KAAK,CAACD,mBAAmB,qFAAzB,uBAA2BS,oBAAoB,2DAA/C,uBAAkDL,OAAO,CAAC,GAC1D,KAAK;MAET,MAAMM,kBAAkB,GAAGN,OAAO,6BAC9BH,KAAK,CAACD,mBAAmB,qFAAzB,uBAA2BW,IAAI,2DAA/B,uBAAkCP,OAAO,CAAC,GAC1C,IAAI;MAER,MAAMQ,eAAe,GACnBR,OAAO,IAAI,CAACM,kBAAkB,IAAI,CAACJ,SAAS,IAAI,CAACE,QAAQ;MAE3DnB,SAAS,CAAC,MAAM;QACd,IAAIqB,kBAAkB,EAAE;UACtBR,QAAQ,CAACP,mBAAmB,CAACS,OAAO,CAAC,CAAC;QACxC;QACA;MACF,CAAC,EAAE,CAACC,aAAa,CAAC,CAAC;MAEnBhB,SAAS,CAAC,MAAM;QACd,IAAIuB,eAAe,EAAE;UACnBV,QAAQ,CAACR,gBAAgB,CAACU,OAAO,EAAEC,aAAa,CAAC,CAAC;QACpD;MACF,CAAC,CAAC;MAEF,OACE,MAAC,gBAAgB,eACXJ,KAAK;QACT,kBAAkB,EAAES,kBAAmB;QACvC,wBAAwB,EAAEJ,SAAU;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACpC;IAEN,CAAC,CAAC,CACH;EACH,CAAC;AACH;AAEA,eAAeV,2BAA2B"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}