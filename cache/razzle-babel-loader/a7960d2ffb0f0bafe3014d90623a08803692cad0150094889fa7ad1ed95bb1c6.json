{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/packages/volto-slate/src/editor/plugins/Image/render.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelected, useFocused } from 'slate-react';\nexport var ImageElement = function ImageElement(props) {\n  _s();\n  var attributes = props.attributes,\n    children = props.children,\n    element = props.element;\n  var selected = useSelected();\n  var focused = useFocused();\n  var style = {\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '20em',\n    boxShadow: selected && focused ? '0 0 0 2px blue' : 'none'\n  };\n  return __jsx(\"span\", _extends({}, attributes, {\n    style: {\n      display: 'inline-block'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }), children, __jsx(\"img\", {\n    alt: \"\",\n    src: element.url,\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n};\n_s(ImageElement, \"HuPpo5U0EHtf6bNXFVpc3GQNhHc=\", false, function () {\n  return [useSelected, useFocused];\n});\n_c = ImageElement;\nvar _c;\n$RefreshReg$(_c, \"ImageElement\");","map":{"version":3,"names":["React","useSelected","useFocused","ImageElement","props","attributes","children","element","selected","focused","style","display","maxWidth","maxHeight","boxShadow","url"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/packages/volto-slate/src/editor/plugins/Image/render.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelected, useFocused } from 'slate-react';\n\nexport const ImageElement = (props) => {\n  const { attributes, children, element } = props;\n  const selected = useSelected();\n  const focused = useFocused();\n\n  const style = {\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '20em',\n    boxShadow: selected && focused ? '0 0 0 2px blue' : 'none',\n  };\n\n  return (\n    <span {...attributes} style={{ display: 'inline-block' }}>\n      {children}\n      <img alt=\"\" src={element.url} style={style} />\n    </span>\n  );\n};\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,UAAU,QAAQ,aAAa;AAErD,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAK,EAAK;EAAA;EACrC,IAAQC,UAAU,GAAwBD,KAAK,CAAvCC,UAAU;IAAEC,QAAQ,GAAcF,KAAK,CAA3BE,QAAQ;IAAEC,OAAO,GAAKH,KAAK,CAAjBG,OAAO;EACrC,IAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,IAAMQ,OAAO,GAAGP,UAAU,EAAE;EAE5B,IAAMQ,KAAK,GAAG;IACZC,OAAO,EAAE,OAAO;IAChBC,QAAQ,EAAE,MAAM;IAChBC,SAAS,EAAE,MAAM;IACjBC,SAAS,EAAEN,QAAQ,IAAIC,OAAO,GAAG,gBAAgB,GAAG;EACtD,CAAC;EAED,OACE,2BAAUJ,UAAU;IAAE,KAAK,EAAE;MAAEM,OAAO,EAAE;IAAe,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IACtDL,QAAQ,EACT;IAAK,GAAG,EAAC,EAAE;IAAC,GAAG,EAAEC,OAAO,CAACQ,GAAI;IAAC,KAAK,EAAEL,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACzC;AAEX,CAAC;AAAC,GAlBWP,YAAY;EAAA,QAENF,WAAW,EACZC,UAAU;AAAA;AAAA,KAHfC,YAAY;AAAA;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}