{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Image/schema.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { defineMessages } from 'react-intl';\nconst messages = defineMessages({\n  Source: {\n    \"id\": \"Source\",\n    \"defaultMessage\": \"Source\"\n  },\n  Image: {\n    \"id\": \"Image\",\n    \"defaultMessage\": \"Image\"\n  },\n  AltText: {\n    \"id\": \"Alt text\",\n    \"defaultMessage\": \"Alt text\"\n  },\n  Align: {\n    \"id\": \"Alignment\",\n    \"defaultMessage\": \"Alignment\"\n  },\n  size: {\n    \"id\": \"Image size\",\n    \"defaultMessage\": \"Image size\"\n  },\n  LinkTo: {\n    \"id\": \"Link to\",\n    \"defaultMessage\": \"Link to\"\n  },\n  openLinkInNewTab: {\n    \"id\": \"Open in a new tab\",\n    \"defaultMessage\": \"Open in a new tab\"\n  },\n  AltTextHint: {\n    \"id\": \"Alt text hint\",\n    \"defaultMessage\": \"Leave empty if the image is purely decorative.\"\n  },\n  AltTextHintLinkText: {\n    \"id\": \"Alt text hint link text\",\n    \"defaultMessage\": \"Describe the purpose of the image.\"\n  }\n});\nexport function ImageSchema({\n  formData,\n  intl\n}) {\n  return {\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: [...(formData.url ? ['url', 'alt', 'align', 'size'] : [])]\n    }, ...(formData.url ? [{\n      id: 'link_settings',\n      title: 'Link settings',\n      fields: ['href', 'openLinkInNewTab']\n    }] : [])],\n    properties: {\n      url: {\n        title: intl.formatMessage(messages.Source),\n        widget: 'url'\n      },\n      alt: {\n        title: intl.formatMessage(messages.AltText),\n        description: __jsx(React.Fragment, null, __jsx(\"a\", {\n          href: \"https://www.w3.org/WAI/tutorials/images/decision-tree/\",\n          title: intl.formatMessage(messages.openLinkInNewTab),\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }\n        }, intl.formatMessage(messages.AltTextHintLinkText)), ' ', intl.formatMessage(messages.AltTextHint))\n      },\n      align: {\n        title: intl.formatMessage(messages.Align),\n        widget: 'align'\n      },\n      size: {\n        title: intl.formatMessage(messages.size),\n        widget: 'image_size'\n      },\n      href: {\n        title: intl.formatMessage(messages.LinkTo),\n        widget: 'object_browser',\n        mode: 'link',\n        selectedItemAttrs: ['Title', 'Description', 'hasPreviewImage'],\n        allowExternals: true\n      },\n      openLinkInNewTab: {\n        title: intl.formatMessage(messages.openLinkInNewTab),\n        type: 'boolean'\n      }\n    },\n    required: []\n  };\n}","map":{"version":3,"names":["defineMessages","messages","Source","Image","AltText","Align","size","LinkTo","openLinkInNewTab","AltTextHint","AltTextHintLinkText","ImageSchema","formData","intl","fieldsets","id","title","fields","url","properties","formatMessage","widget","alt","description","align","href","mode","selectedItemAttrs","allowExternals","type","required"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Blocks/Image/schema.js"],"sourcesContent":["import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  Source: {\n    id: 'Source',\n    defaultMessage: 'Source',\n  },\n  Image: {\n    id: 'Image',\n    defaultMessage: 'Image',\n  },\n  AltText: {\n    id: 'Alt text',\n    defaultMessage: 'Alt text',\n  },\n  Align: {\n    id: 'Alignment',\n    defaultMessage: 'Alignment',\n  },\n  size: {\n    id: 'Image size',\n    defaultMessage: 'Image size',\n  },\n  LinkTo: {\n    id: 'Link to',\n    defaultMessage: 'Link to',\n  },\n  openLinkInNewTab: {\n    id: 'Open in a new tab',\n    defaultMessage: 'Open in a new tab',\n  },\n  AltTextHint: {\n    id: 'Alt text hint',\n    defaultMessage: 'Leave empty if the image is purely decorative.',\n  },\n  AltTextHintLinkText: {\n    id: 'Alt text hint link text',\n    defaultMessage: 'Describe the purpose of the image.',\n  },\n});\n\nexport function ImageSchema({ formData, intl }) {\n  return {\n    fieldsets: [\n      {\n        id: 'default',\n        title: 'Default',\n        fields: [...(formData.url ? ['url', 'alt', 'align', 'size'] : [])],\n      },\n      ...(formData.url\n        ? [\n            {\n              id: 'link_settings',\n              title: 'Link settings',\n              fields: ['href', 'openLinkInNewTab'],\n            },\n          ]\n        : []),\n    ],\n    properties: {\n      url: {\n        title: intl.formatMessage(messages.Source),\n        widget: 'url',\n      },\n      alt: {\n        title: intl.formatMessage(messages.AltText),\n        description: (\n          <>\n            <a\n              href=\"https://www.w3.org/WAI/tutorials/images/decision-tree/\"\n              title={intl.formatMessage(messages.openLinkInNewTab)}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {intl.formatMessage(messages.AltTextHintLinkText)}\n            </a>{' '}\n            {intl.formatMessage(messages.AltTextHint)}\n          </>\n        ),\n      },\n      align: {\n        title: intl.formatMessage(messages.Align),\n        widget: 'align',\n      },\n      size: {\n        title: intl.formatMessage(messages.size),\n        widget: 'image_size',\n      },\n      href: {\n        title: intl.formatMessage(messages.LinkTo),\n        widget: 'object_browser',\n        mode: 'link',\n        selectedItemAttrs: ['Title', 'Description', 'hasPreviewImage'],\n        allowExternals: true,\n      },\n      openLinkInNewTab: {\n        title: intl.formatMessage(messages.openLinkInNewTab),\n        type: 'boolean',\n      },\n    },\n    required: [],\n  };\n}\n"],"mappings":";;;AAAA,SAASA,cAAc,QAAQ,YAAY;AAE3C,MAAMC,QAAQ,GAAGD,cAAc,CAAC;EAC9BE,MAAM;IAAA;IAAA;EAAA,CAGL;EACDC,KAAK;IAAA;IAAA;EAAA,CAGJ;EACDC,OAAO;IAAA;IAAA;EAAA,CAGN;EACDC,KAAK;IAAA;IAAA;EAAA,CAGJ;EACDC,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,MAAM;IAAA;IAAA;EAAA,CAGL;EACDC,gBAAgB;IAAA;IAAA;EAAA,CAGf;EACDC,WAAW;IAAA;IAAA;EAAA,CAGV;EACDC,mBAAmB;IAAA;IAAA;EAAA;AAIrB,CAAC,CAAC;AAEF,OAAO,SAASC,WAAW,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,EAAE;EAC9C,OAAO;IACLC,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbC,KAAK,EAAE,SAAS;MAChBC,MAAM,EAAE,CAAC,IAAIL,QAAQ,CAACM,GAAG,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,GAAG,EAAE,CAAC;IACnE,CAAC,EACD,IAAIN,QAAQ,CAACM,GAAG,GACZ,CACE;MACEH,EAAE,EAAE,eAAe;MACnBC,KAAK,EAAE,eAAe;MACtBC,MAAM,EAAE,CAAC,MAAM,EAAE,kBAAkB;IACrC,CAAC,CACF,GACD,EAAE,CAAC,CACR;IACDE,UAAU,EAAE;MACVD,GAAG,EAAE;QACHF,KAAK,EAAEH,IAAI,CAACO,aAAa,CAACnB,QAAQ,CAACC,MAAM,CAAC;QAC1CmB,MAAM,EAAE;MACV,CAAC;MACDC,GAAG,EAAE;QACHN,KAAK,EAAEH,IAAI,CAACO,aAAa,CAACnB,QAAQ,CAACG,OAAO,CAAC;QAC3CmB,WAAW,EACT,4BACE;UACE,IAAI,EAAC,wDAAwD;UAC7D,KAAK,EAAEV,IAAI,CAACO,aAAa,CAACnB,QAAQ,CAACO,gBAAgB,CAAE;UACrD,MAAM,EAAC,QAAQ;UACf,GAAG,EAAC,qBAAqB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAExBK,IAAI,CAACO,aAAa,CAACnB,QAAQ,CAACS,mBAAmB,CAAC,CAC/C,EAAC,GAAG,EACPG,IAAI,CAACO,aAAa,CAACnB,QAAQ,CAACQ,WAAW,CAAC;MAG/C,CAAC;MACDe,KAAK,EAAE;QACLR,KAAK,EAAEH,IAAI,CAACO,aAAa,CAACnB,QAAQ,CAACI,KAAK,CAAC;QACzCgB,MAAM,EAAE;MACV,CAAC;MACDf,IAAI,EAAE;QACJU,KAAK,EAAEH,IAAI,CAACO,aAAa,CAACnB,QAAQ,CAACK,IAAI,CAAC;QACxCe,MAAM,EAAE;MACV,CAAC;MACDI,IAAI,EAAE;QACJT,KAAK,EAAEH,IAAI,CAACO,aAAa,CAACnB,QAAQ,CAACM,MAAM,CAAC;QAC1Cc,MAAM,EAAE,gBAAgB;QACxBK,IAAI,EAAE,MAAM;QACZC,iBAAiB,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,iBAAiB,CAAC;QAC9DC,cAAc,EAAE;MAClB,CAAC;MACDpB,gBAAgB,EAAE;QAChBQ,KAAK,EAAEH,IAAI,CAACO,aAAa,CAACnB,QAAQ,CAACO,gBAAgB,CAAC;QACpDqB,IAAI,EAAE;MACR;IACF,CAAC;IACDC,QAAQ,EAAE;EACZ,CAAC;AACH"},"metadata":{"react-intl":{"messages":[{"id":"Source","defaultMessage":"Source"},{"id":"Image","defaultMessage":"Image"},{"id":"Alt text","defaultMessage":"Alt text"},{"id":"Alignment","defaultMessage":"Alignment"},{"id":"Image size","defaultMessage":"Image size"},{"id":"Link to","defaultMessage":"Link to"},{"id":"Open in a new tab","defaultMessage":"Open in a new tab"},{"id":"Alt text hint","defaultMessage":"Leave empty if the image is purely decorative."},{"id":"Alt text hint link text","defaultMessage":"Describe the purpose of the image."}]}},"sourceType":"module","externalDependencies":[]}