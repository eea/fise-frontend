{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _map from \"lodash/map\";\nimport _keys from \"lodash/keys\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-widget-geolocation/src/components/manage/Widgets/InlineForm.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport React from 'react';\nimport Select from 'react-select';\nimport { Option, DropdownIndicator, selectTheme, customSelectStyles } from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { Field } from '@plone/volto/components';\nimport { Segment, Message, Card } from 'semantic-ui-react';\nvar messages = defineMessages({\n  editValues: {\n    \"id\": \"Edit values\",\n    \"defaultMessage\": \"Edit values\"\n  },\n  error: {\n    \"id\": \"Error\",\n    \"defaultMessage\": \"Error\"\n  },\n  thereWereSomeErrors: {\n    \"id\": \"There were some errors\",\n    \"defaultMessage\": \"There were some errors\"\n  }\n});\nvar InlineForm = function InlineForm(props) {\n  var block = props.block,\n    data = props.data,\n    setValue = props.setValue,\n    description = props.description,\n    value = props.value,\n    error = props.error,\n    _props$errors = props.errors,\n    errors = _props$errors === void 0 ? {} : _props$errors,\n    onChangeField = props.onChangeField,\n    schema = props.schema,\n    title = props.title,\n    icon = props.icon,\n    headerActions = props.headerActions,\n    footer = props.footer,\n    intl = props.intl;\n  var _ = intl.formatMessage;\n  var defaultFieldset = schema.fieldsets.find(function (o) {\n    return o.id === 'default';\n  });\n  var other = schema.fieldsets.filter(function (o) {\n    return o.id !== 'default';\n  });\n  return __jsx(Segment.Group, {\n    className: \"form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    className: \"header pulled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, icon, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, title || _(messages.editValues)), headerActions), description && __jsx(Segment, {\n    secondary: true,\n    className: \"attached\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, description), _keys(errors).length > 0 && __jsx(Message, {\n    icon: \"warning\",\n    negative: true,\n    attached: true,\n    header: _(messages.error),\n    content: _(messages.thereWereSomeErrors),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), error && __jsx(Message, {\n    icon: \"warning\",\n    negative: true,\n    attached: true,\n    header: _(messages.error),\n    content: error.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), __jsx(Segment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    isClearable: true,\n    isMulti: true,\n    menuIsOpen: false,\n    id: \"select-listingblock-template\",\n    name: \"select-listingblock-template\",\n    className: \"react-select-container\",\n    classNamePrefix: \"react-select\",\n    options: [],\n    styles: _objectSpread(_objectSpread({}, customSelectStyles), {}, {\n      dropdownIndicator: function dropdownIndicator(styles) {\n        return {\n          display: 'none'\n        };\n      }\n    }),\n    theme: selectTheme,\n    components: {\n      DropdownIndicator: DropdownIndicator,\n      Option: Option\n    },\n    value: value || [],\n    onChange: function onChange(field, value) {\n      setValue(field, value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    id: \"blockform-fieldset-\".concat(defaultFieldset.id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, _map(defaultFieldset.fields, function (field, index) {\n    var _schema$properties$fi;\n    return __jsx(Field, _extends({}, schema.properties[field], {\n      id: field,\n      fieldSet: defaultFieldset.title.toLowerCase(),\n      focus: index === 0,\n      value: (data === null || data === void 0 ? void 0 : data[field]) || ((_schema$properties$fi = schema.properties[field]) === null || _schema$properties$fi === void 0 ? void 0 : _schema$properties$fi[\"default\"]),\n      required: schema.required.indexOf(field) !== -1,\n      onChange: function onChange(id, value) {\n        onChangeField(id, value);\n      },\n      key: field,\n      error: errors[field],\n      block: block,\n      data: data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }));\n  })), other.map(function (fieldset) {\n    return __jsx(\"div\", {\n      key: fieldset.id,\n      id: \"blockform-fieldset-\".concat(fieldset.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, title && __jsx(Segment, {\n      className: \"secondary attached\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, fieldset.title), __jsx(Segment, {\n      className: \"attached\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, _map(fieldset.fields, function (field) {\n      return __jsx(Field, _extends({}, schema.properties[field], {\n        id: field,\n        value: data[field] || schema.properties[field][\"default\"],\n        required: schema.required.indexOf(field) !== -1,\n        onChange: function onChange(id, value) {\n          onChangeField(id, value);\n        },\n        key: field,\n        error: errors[field],\n        block: block,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      }));\n    })));\n  }), footer);\n};\n_c = InlineForm;\nInlineForm.defaultProps = {\n  block: null,\n  description: null,\n  onChangeField: null,\n  error: null,\n  errors: {},\n  schema: {},\n  data: {}\n};\nInlineForm.propTypes = {\n  block: PropTypes.string,\n  description: PropTypes.string,\n  schema: PropTypes.shape({\n    fieldsets: PropTypes.arrayOf(PropTypes.shape({\n      fields: PropTypes.arrayOf(PropTypes.string),\n      id: PropTypes.string,\n      title: PropTypes.string\n    })),\n    properties: PropTypes.objectOf(PropTypes.any),\n    definitions: PropTypes.objectOf(PropTypes.any),\n    required: PropTypes.arrayOf(PropTypes.string)\n  }),\n  data: PropTypes.objectOf(PropTypes.any),\n  pathname: PropTypes.string,\n  onChangeField: PropTypes.func,\n  error: PropTypes.shape({\n    message: PropTypes.string\n  })\n};\nexport default _c2 = injectIntl(InlineForm, {\n  forwardRef: true\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"InlineForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["PropTypes","defineMessages","injectIntl","React","Select","Option","DropdownIndicator","selectTheme","customSelectStyles","Field","Segment","Message","Card","messages","editValues","error","thereWereSomeErrors","InlineForm","props","block","data","setValue","description","value","errors","onChangeField","schema","title","icon","headerActions","footer","intl","_","formatMessage","defaultFieldset","fieldsets","find","o","id","other","filter","length","message","dropdownIndicator","styles","display","field","fields","index","properties","toLowerCase","required","indexOf","map","fieldset","defaultProps","propTypes","string","shape","arrayOf","objectOf","any","definitions","pathname","func","forwardRef"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-widget-geolocation/src/components/manage/Widgets/InlineForm.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport React from 'react';\nimport Select from 'react-select';\nimport {\n  Option,\n  DropdownIndicator,\n  selectTheme,\n  customSelectStyles,\n} from '@plone/volto/components/manage/Widgets/SelectStyling';\nimport { keys, map } from 'lodash';\nimport { Field } from '@plone/volto/components';\nimport { Segment, Message, Card } from 'semantic-ui-react';\n\nconst messages = defineMessages({\n  editValues: {\n    id: 'Edit values',\n    defaultMessage: 'Edit values',\n  },\n  error: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  thereWereSomeErrors: {\n    id: 'There were some errors',\n    defaultMessage: 'There were some errors',\n  },\n});\n\nconst InlineForm = (props) => {\n  const {\n    block,\n    data,\n    setValue,\n    description,\n    value,\n    error, // Such as {message: \"It's not good\"}\n    errors = {},\n    onChangeField,\n    schema,\n    title,\n    icon,\n    headerActions,\n    footer,\n    intl,\n  } = props;\n  const _ = intl.formatMessage;\n  const defaultFieldset = schema.fieldsets.find((o) => o.id === 'default');\n  const other = schema.fieldsets.filter((o) => o.id !== 'default');\n  return (\n    <Segment.Group className=\"form\">\n      <header className=\"header pulled\">\n        {icon}\n        <h2>{title || _(messages.editValues)}</h2>\n        {headerActions}\n      </header>\n      {description && (\n        <Segment secondary className=\"attached\">\n          {description}\n        </Segment>\n      )}\n      {keys(errors).length > 0 && (\n        <Message\n          icon=\"warning\"\n          negative\n          attached\n          header={_(messages.error)}\n          content={_(messages.thereWereSomeErrors)}\n        />\n      )}\n      {error && (\n        <Message\n          icon=\"warning\"\n          negative\n          attached\n          header={_(messages.error)}\n          content={error.message}\n        />\n      )}\n      <Segment>\n        <Card fluid>\n          <Select\n            isClearable={true}\n            isMulti={true}\n            menuIsOpen={false}\n            id=\"select-listingblock-template\"\n            name=\"select-listingblock-template\"\n            className=\"react-select-container\"\n            classNamePrefix=\"react-select\"\n            options={[]}\n            styles={{\n              ...customSelectStyles,\n              dropdownIndicator: (styles) => ({\n                display: 'none',\n              }),\n            }}\n            theme={selectTheme}\n            components={{ DropdownIndicator, Option }}\n            value={value || []}\n            onChange={(field, value) => {\n              setValue(field, value);\n            }}\n          />\n        </Card>\n      </Segment>\n      <div id={`blockform-fieldset-${defaultFieldset.id}`}>\n        {map(defaultFieldset.fields, (field, index) => (\n          <Field\n            {...schema.properties[field]}\n            id={field}\n            fieldSet={defaultFieldset.title.toLowerCase()}\n            focus={index === 0}\n            value={data?.[field] || schema.properties[field]?.default}\n            required={schema.required.indexOf(field) !== -1}\n            onChange={(id, value) => {\n              onChangeField(id, value);\n            }}\n            key={field}\n            error={errors[field]}\n            block={block}\n            data={data}\n          />\n        ))}\n      </div>\n\n      {other.map((fieldset) => (\n        <div key={fieldset.id} id={`blockform-fieldset-${fieldset.id}`}>\n          {title && (\n            <Segment className=\"secondary attached\">{fieldset.title}</Segment>\n          )}\n          <Segment className=\"attached\">\n            {map(fieldset.fields, (field) => (\n              <Field\n                {...schema.properties[field]}\n                id={field}\n                value={data[field] || schema.properties[field].default}\n                required={schema.required.indexOf(field) !== -1}\n                onChange={(id, value) => {\n                  onChangeField(id, value);\n                }}\n                key={field}\n                error={errors[field]}\n                block={block}\n              />\n            ))}\n          </Segment>\n        </div>\n      ))}\n      {footer}\n    </Segment.Group>\n  );\n};\n\nInlineForm.defaultProps = {\n  block: null,\n  description: null,\n  onChangeField: null,\n  error: null,\n  errors: {},\n  schema: {},\n  data: {},\n};\n\nInlineForm.propTypes = {\n  block: PropTypes.string,\n  description: PropTypes.string,\n  schema: PropTypes.shape({\n    fieldsets: PropTypes.arrayOf(\n      PropTypes.shape({\n        fields: PropTypes.arrayOf(PropTypes.string),\n        id: PropTypes.string,\n        title: PropTypes.string,\n      }),\n    ),\n    properties: PropTypes.objectOf(PropTypes.any),\n    definitions: PropTypes.objectOf(PropTypes.any),\n    required: PropTypes.arrayOf(PropTypes.string),\n  }),\n  data: PropTypes.objectOf(PropTypes.any),\n  pathname: PropTypes.string,\n  onChangeField: PropTypes.func,\n  error: PropTypes.shape({\n    message: PropTypes.string,\n  }),\n};\n\nexport default injectIntl(InlineForm, { forwardRef: true });\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Edit values","defaultMessage":"Edit values"},{"id":"Error","defaultMessage":"Error"},{"id":"There were some errors","defaultMessage":"There were some errors"}]}},"sourceType":"module","externalDependencies":[]}