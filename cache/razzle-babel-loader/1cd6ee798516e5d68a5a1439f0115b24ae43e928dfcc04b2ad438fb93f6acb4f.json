{"ast":null,"code":"var blocksArray = function blocksArray(config) {\n  return Object.keys(config.blocks.blocksConfig).map(function (key) {\n    var _config$blocks$blocks;\n    if ((_config$blocks$blocks = config.blocks.blocksConfig[key]) !== null && _config$blocks$blocks !== void 0 && _config$blocks$blocks.restricted) {\n      return false;\n    } else {\n      var _config$blocks$blocks2;\n      var title = ((_config$blocks$blocks2 = config.blocks.blocksConfig[key]) === null || _config$blocks$blocks2 === void 0 ? void 0 : _config$blocks$blocks2.title) || key;\n      return [key, title];\n    }\n  }).filter(function (val) {\n    return !!val;\n  });\n};\nexport default (function (config) {\n  return {\n    title: 'Tabs block settings',\n    fieldsets: [{\n      id: 'default',\n      title: 'Default',\n      fields: ['placeholder', 'instructions', 'allowedBlocks', 'required', 'fixed', 'disableNewBlocks', 'readOnly', 'readOnlySettings']\n    }],\n    properties: {\n      allowedBlocks: {\n        title: 'Allowed blocks',\n        description: 'Allow only the following blocks types',\n        type: 'array',\n        items: {\n          choices: blocksArray(config)\n        }\n      },\n      placeholder: {\n        title: 'Helper text',\n        description: 'A short hint that describes the expected value within this block',\n        type: 'string'\n      },\n      instructions: {\n        title: 'Instructions',\n        description: 'Detailed expected value within this block',\n        type: 'string',\n        widget: 'richtext'\n      },\n      required: {\n        title: 'Required',\n        description: \"Don't allow deletion of this block\",\n        type: 'boolean'\n      },\n      fixed: {\n        title: 'Fixed position',\n        description: 'Disable drag & drop on this block',\n        type: 'boolean'\n      },\n      disableNewBlocks: {\n        title: 'Disable new blocks',\n        description: 'Disable creation of new blocks after this block',\n        type: 'boolean'\n      },\n      readOnly: {\n        title: 'Read-only',\n        description: 'Disable editing on this block',\n        type: 'boolean'\n      },\n      readOnlySettings: {\n        title: 'Read-only settings',\n        description: 'Disable editing on columns block settings',\n        type: 'boolean'\n      }\n    },\n    required: []\n  };\n});","map":{"version":3,"names":["blocksArray","config","Object","keys","blocks","blocksConfig","map","key","restricted","title","filter","val","fieldsets","id","fields","properties","allowedBlocks","description","type","items","choices","placeholder","instructions","widget","required","fixed","disableNewBlocks","readOnly","readOnlySettings"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-tabs-block/src/components/layoutSchema.js"],"sourcesContent":["const blocksArray = (config) => {\n  return Object.keys(config.blocks.blocksConfig)\n    .map((key) => {\n      if (config.blocks.blocksConfig[key]?.restricted) {\n        return false;\n      } else {\n        const title = config.blocks.blocksConfig[key]?.title || key;\n        return [key, title];\n      }\n    })\n    .filter((val) => !!val);\n};\n\nexport default (config) => ({\n  title: 'Tabs block settings',\n  fieldsets: [\n    {\n      id: 'default',\n      title: 'Default',\n      fields: [\n        'placeholder',\n        'instructions',\n        'allowedBlocks',\n        'required',\n        'fixed',\n        'disableNewBlocks',\n        'readOnly',\n        'readOnlySettings',\n      ],\n    },\n  ],\n  properties: {\n    allowedBlocks: {\n      title: 'Allowed blocks',\n      description: 'Allow only the following blocks types',\n      type: 'array',\n      items: {\n        choices: blocksArray(config),\n      },\n    },\n    placeholder: {\n      title: 'Helper text',\n      description:\n        'A short hint that describes the expected value within this block',\n      type: 'string',\n    },\n    instructions: {\n      title: 'Instructions',\n      description: 'Detailed expected value within this block',\n      type: 'string',\n      widget: 'richtext',\n    },\n    required: {\n      title: 'Required',\n      description: \"Don't allow deletion of this block\",\n      type: 'boolean',\n    },\n    fixed: {\n      title: 'Fixed position',\n      description: 'Disable drag & drop on this block',\n      type: 'boolean',\n    },\n    disableNewBlocks: {\n      title: 'Disable new blocks',\n      description: 'Disable creation of new blocks after this block',\n      type: 'boolean',\n    },\n    readOnly: {\n      title: 'Read-only',\n      description: 'Disable editing on this block',\n      type: 'boolean',\n    },\n    readOnlySettings: {\n      title: 'Read-only settings',\n      description: 'Disable editing on columns block settings',\n      type: 'boolean',\n    },\n  },\n  required: [],\n});\n"],"mappings":"AAAA,IAAMA,WAAW,GAAG,SAAdA,WAAW,CAAIC,MAAM,EAAK;EAC9B,OAAOC,MAAM,CAACC,IAAI,CAACF,MAAM,CAACG,MAAM,CAACC,YAAY,CAAC,CAC3CC,GAAG,CAAC,UAACC,GAAG,EAAK;IAAA;IACZ,6BAAIN,MAAM,CAACG,MAAM,CAACC,YAAY,CAACE,GAAG,CAAC,kDAA/B,sBAAiCC,UAAU,EAAE;MAC/C,OAAO,KAAK;IACd,CAAC,MAAM;MAAA;MACL,IAAMC,KAAK,GAAG,2BAAAR,MAAM,CAACG,MAAM,CAACC,YAAY,CAACE,GAAG,CAAC,2DAA/B,uBAAiCE,KAAK,KAAIF,GAAG;MAC3D,OAAO,CAACA,GAAG,EAAEE,KAAK,CAAC;IACrB;EACF,CAAC,CAAC,CACDC,MAAM,CAAC,UAACC,GAAG;IAAA,OAAK,CAAC,CAACA,GAAG;EAAA,EAAC;AAC3B,CAAC;AAED,gBAAe,UAACV,MAAM;EAAA,OAAM;IAC1BQ,KAAK,EAAE,qBAAqB;IAC5BG,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,SAAS;MACbJ,KAAK,EAAE,SAAS;MAChBK,MAAM,EAAE,CACN,aAAa,EACb,cAAc,EACd,eAAe,EACf,UAAU,EACV,OAAO,EACP,kBAAkB,EAClB,UAAU,EACV,kBAAkB;IAEtB,CAAC,CACF;IACDC,UAAU,EAAE;MACVC,aAAa,EAAE;QACbP,KAAK,EAAE,gBAAgB;QACvBQ,WAAW,EAAE,uCAAuC;QACpDC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE;UACLC,OAAO,EAAEpB,WAAW,CAACC,MAAM;QAC7B;MACF,CAAC;MACDoB,WAAW,EAAE;QACXZ,KAAK,EAAE,aAAa;QACpBQ,WAAW,EACT,kEAAkE;QACpEC,IAAI,EAAE;MACR,CAAC;MACDI,YAAY,EAAE;QACZb,KAAK,EAAE,cAAc;QACrBQ,WAAW,EAAE,2CAA2C;QACxDC,IAAI,EAAE,QAAQ;QACdK,MAAM,EAAE;MACV,CAAC;MACDC,QAAQ,EAAE;QACRf,KAAK,EAAE,UAAU;QACjBQ,WAAW,EAAE,oCAAoC;QACjDC,IAAI,EAAE;MACR,CAAC;MACDO,KAAK,EAAE;QACLhB,KAAK,EAAE,gBAAgB;QACvBQ,WAAW,EAAE,mCAAmC;QAChDC,IAAI,EAAE;MACR,CAAC;MACDQ,gBAAgB,EAAE;QAChBjB,KAAK,EAAE,oBAAoB;QAC3BQ,WAAW,EAAE,iDAAiD;QAC9DC,IAAI,EAAE;MACR,CAAC;MACDS,QAAQ,EAAE;QACRlB,KAAK,EAAE,WAAW;QAClBQ,WAAW,EAAE,+BAA+B;QAC5CC,IAAI,EAAE;MACR,CAAC;MACDU,gBAAgB,EAAE;QAChBnB,KAAK,EAAE,oBAAoB;QAC3BQ,WAAW,EAAE,2CAA2C;QACxDC,IAAI,EAAE;MACR;IACF,CAAC;IACDM,QAAQ,EAAE;EACZ,CAAC;AAAA,CAAC"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}