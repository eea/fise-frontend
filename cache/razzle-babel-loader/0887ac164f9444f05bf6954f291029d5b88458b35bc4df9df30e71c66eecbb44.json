{"ast":null,"code":"import _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _range from \"lodash/range\";\nimport _map from \"lodash/map\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/Widgets/CollectionYears.jsx\";\nvar __jsx = React.createElement;\n/**\n * CollectionYears component.\n * @module components/manage/Widgets/CollectionYears\n */\n\nimport React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { Form, Grid, Label, Icon as IconOld, Dropdown } from 'semantic-ui-react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nvar messages = defineMessages({\n  \"default\": {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  idTitle: {\n    \"id\": \"Short Name\",\n    \"defaultMessage\": \"Short Name\"\n  },\n  idDescription: {\n    \"id\": \"Used for programmatic access to the fieldset.\",\n    \"defaultMessage\": \"Used for programmatic access to the fieldset.\"\n  },\n  title: {\n    \"id\": \"Title\",\n    \"defaultMessage\": \"Title\"\n  },\n  description: {\n    \"id\": \"Description\",\n    \"defaultMessage\": \"Description\"\n  },\n  required: {\n    \"id\": \"Required\",\n    \"defaultMessage\": \"Required\"\n  }\n});\nvar currentYear = new Date().getFullYear();\nvar years = _range(1929, currentYear).map(function (y) {\n  return {\n    text: y,\n    value: y\n  };\n});\n\n/**\n * CollectionYears component class.\n * @class CollectionYears\n * @extends Component\n */\nvar CollectionYears = /*#__PURE__*/function (_Component) {\n  _inherits(CollectionYears, _Component);\n  var _super = _createSuper(CollectionYears);\n  function CollectionYears() {\n    _classCallCheck(this, CollectionYears);\n    return _super.apply(this, arguments);\n  }\n  _createClass(CollectionYears, [{\n    key: \"componentDidMount\",\n    value:\n    /**\n     * Property types.\n     * @property {Object} propTypes Property types.\n     * @static\n     */\n    // static propTypes = {\n    //   id: PropTypes.string.isRequired,\n    //   title: PropTypes.string.isRequired,\n    //   description: PropTypes.string,\n    //   required: PropTypes.bool,\n    //   error: PropTypes.arrayOf(PropTypes.string),\n    //   value: PropTypes.string,\n    //   focus: PropTypes.bool,\n    //   onChange: PropTypes.func,\n    //   onEdit: PropTypes.func,\n    //   onDelete: PropTypes.func,\n    //   icon: PropTypes.shape({\n    //     xmlns: PropTypes.string,\n    //     viewBox: PropTypes.string,\n    //     content: PropTypes.string,\n    //   }),\n    //   iconAction: PropTypes.func,\n    // };\n\n    /**\n     * Default properties.\n     * @property {Object} defaultProps Default properties.\n     * @static\n     */\n\n    /**\n     * Component did mount lifecycle method\n     * @method componentDidMount\n     * @returns {undefined}\n     */\n    function componentDidMount() {\n      if (this.props.focus) {\n        this.node.focus();\n      }\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      var _this$props = this.props,\n        id = _this$props.id,\n        title = _this$props.title,\n        required = _this$props.required,\n        description = _this$props.description,\n        error = _this$props.error,\n        value = _this$props.value,\n        onEdit = _this$props.onEdit,\n        onDelete = _this$props.onDelete,\n        intl = _this$props.intl,\n        icon = _this$props.icon,\n        iconAction = _this$props.iconAction,\n        fieldSet = _this$props.fieldSet;\n      var schema = {\n        fieldsets: [{\n          id: 'default',\n          title: intl.formatMessage(messages[\"default\"]),\n          fields: ['title', 'id', 'description', 'required']\n        }],\n        properties: {\n          id: {\n            type: 'string',\n            title: intl.formatMessage(messages.idTitle),\n            description: intl.formatMessage(messages.idDescription)\n          },\n          title: {\n            type: 'string',\n            title: intl.formatMessage(messages.title)\n          },\n          description: {\n            type: 'string',\n            widget: 'textarea',\n            title: intl.formatMessage(messages.description)\n          },\n          required: {\n            type: 'boolean',\n            title: intl.formatMessage(messages.required)\n          }\n        },\n        required: ['id', 'title']\n      };\n      return __jsx(Form.Field, {\n        inline: true,\n        required: required,\n        error: error.length > 0,\n        className: description ? 'help text' : 'text',\n        id: \"\".concat(fieldSet || 'field', \"-\").concat(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }\n      }, __jsx(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }, __jsx(Grid.Row, {\n        stretched: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }, __jsx(Grid.Column, {\n        width: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"field-\".concat(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }\n      }, onEdit && __jsx(\"i\", {\n        \"aria-hidden\": \"true\",\n        className: \"grey bars icon drag handle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }), title))), __jsx(Grid.Column, {\n        width: \"8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }\n      }, onEdit && __jsx(\"div\", {\n        className: \"toolbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, __jsx(\"button\", {\n        className: \"item ui noborder button\",\n        onClick: function onClick() {\n          return onEdit(id, schema);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 19\n        }\n      }, __jsx(IconOld, {\n        name: \"write square\",\n        size: \"large\",\n        color: \"blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }\n      })), __jsx(\"button\", {\n        \"aria-label\": \"Delete\",\n        className: \"item ui noborder button\",\n        onClick: function onClick() {\n          return onDelete(id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 19\n        }\n      }, __jsx(IconOld, {\n        name: \"close\",\n        size: \"large\",\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }\n      }))), __jsx(Dropdown, {\n        placeholder: \"Start Year\",\n        search: true,\n        selection: true,\n        options: years,\n        value: value && value.start_year,\n        onChange: function onChange(e, data) {\n          return _this.props.onChange(id, {\n            end_year: value && value.end_year,\n            start_year: data.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }\n      }), __jsx(Dropdown, {\n        placeholder: \"End Year\",\n        search: true,\n        selection: true,\n        options: years,\n        value: value && value.end_year,\n        onChange: function onChange(e, data) {\n          return _this.props.onChange(id, {\n            end_year: data.value,\n            start_year: value && value.start_year\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }\n      }), _map(error, function (message) {\n        return __jsx(Label, {\n          key: message,\n          basic: true,\n          color: \"red\",\n          pointing: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }\n        }, message);\n      }), icon && iconAction && __jsx(\"button\", {\n        onClick: iconAction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }\n      }, __jsx(Icon, {\n        name: icon,\n        size: \"18px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 19\n        }\n      })))), description && __jsx(Grid.Row, {\n        stretched: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }\n      }, __jsx(Grid.Column, {\n        stretched: true,\n        width: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }\n      }, __jsx(\"p\", {\n        className: \"help\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }\n      }, description)))));\n    }\n  }]);\n  return CollectionYears;\n}(Component);\n_defineProperty(CollectionYears, \"defaultProps\", {\n  description: null,\n  required: false,\n  error: [],\n  value: null,\n  onChange: null,\n  onEdit: null,\n  onDelete: null,\n  focus: false,\n  icon: null,\n  iconAction: null\n});\nexport default _c = injectIntl(CollectionYears);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","Form","Grid","Label","Icon","IconOld","Dropdown","defineMessages","injectIntl","messages","idTitle","idDescription","title","description","required","currentYear","Date","getFullYear","years","map","y","text","value","CollectionYears","props","focus","node","id","error","onEdit","onDelete","intl","icon","iconAction","fieldSet","schema","fieldsets","formatMessage","fields","properties","type","widget","length","start_year","e","data","onChange","end_year","message"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/Widgets/CollectionYears.jsx"],"sourcesContent":["/**\n * CollectionYears component.\n * @module components/manage/Widgets/CollectionYears\n */\n\nimport React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport {\n  Form,\n  Grid,\n  Label,\n  Icon as IconOld,\n  Dropdown,\n} from 'semantic-ui-react';\nimport { map } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport { range } from 'lodash';\n\nconst messages = defineMessages({\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  idTitle: {\n    id: 'Short Name',\n    defaultMessage: 'Short Name',\n  },\n  idDescription: {\n    id: 'Used for programmatic access to the fieldset.',\n    defaultMessage: 'Used for programmatic access to the fieldset.',\n  },\n  title: {\n    id: 'Title',\n    defaultMessage: 'Title',\n  },\n  description: {\n    id: 'Description',\n    defaultMessage: 'Description',\n  },\n  required: {\n    id: 'Required',\n    defaultMessage: 'Required',\n  },\n});\n\nconst currentYear = new Date().getFullYear();\nconst years = range(1929, currentYear).map((y) => ({\n  text: y,\n  value: y,\n}));\n\n/**\n * CollectionYears component class.\n * @class CollectionYears\n * @extends Component\n */\nclass CollectionYears extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  // static propTypes = {\n  //   id: PropTypes.string.isRequired,\n  //   title: PropTypes.string.isRequired,\n  //   description: PropTypes.string,\n  //   required: PropTypes.bool,\n  //   error: PropTypes.arrayOf(PropTypes.string),\n  //   value: PropTypes.string,\n  //   focus: PropTypes.bool,\n  //   onChange: PropTypes.func,\n  //   onEdit: PropTypes.func,\n  //   onDelete: PropTypes.func,\n  //   icon: PropTypes.shape({\n  //     xmlns: PropTypes.string,\n  //     viewBox: PropTypes.string,\n  //     content: PropTypes.string,\n  //   }),\n  //   iconAction: PropTypes.func,\n  // };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    description: null,\n    required: false,\n    error: [],\n    value: null,\n    onChange: null,\n    onEdit: null,\n    onDelete: null,\n    focus: false,\n    icon: null,\n    iconAction: null,\n  };\n\n  /**\n   * Component did mount lifecycle method\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    if (this.props.focus) {\n      this.node.focus();\n    }\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      id,\n      title,\n      required,\n      description,\n      error,\n      value,\n      // onChange,\n      onEdit,\n      onDelete,\n      intl,\n      icon,\n      iconAction,\n      fieldSet,\n    } = this.props;\n\n    const schema = {\n      fieldsets: [\n        {\n          id: 'default',\n          title: intl.formatMessage(messages.default),\n          fields: ['title', 'id', 'description', 'required'],\n        },\n      ],\n      properties: {\n        id: {\n          type: 'string',\n          title: intl.formatMessage(messages.idTitle),\n          description: intl.formatMessage(messages.idDescription),\n        },\n        title: {\n          type: 'string',\n          title: intl.formatMessage(messages.title),\n        },\n        description: {\n          type: 'string',\n          widget: 'textarea',\n          title: intl.formatMessage(messages.description),\n        },\n        required: {\n          type: 'boolean',\n          title: intl.formatMessage(messages.required),\n        },\n      },\n      required: ['id', 'title'],\n    };\n\n    return (\n      <Form.Field\n        inline\n        required={required}\n        error={error.length > 0}\n        className={description ? 'help text' : 'text'}\n        id={`${fieldSet || 'field'}-${id}`}\n      >\n        <Grid>\n          <Grid.Row stretched>\n            <Grid.Column width=\"4\">\n              <div className=\"wrapper\">\n                <label htmlFor={`field-${id}`}>\n                  {onEdit && (\n                    <i\n                      aria-hidden=\"true\"\n                      className=\"grey bars icon drag handle\"\n                    />\n                  )}\n                  {title}\n                </label>\n              </div>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              {onEdit && (\n                <div className=\"toolbar\">\n                  <button\n                    className=\"item ui noborder button\"\n                    onClick={() => onEdit(id, schema)}\n                  >\n                    <IconOld name=\"write square\" size=\"large\" color=\"blue\" />\n                  </button>\n                  <button\n                    aria-label=\"Delete\"\n                    className=\"item ui noborder button\"\n                    onClick={() => onDelete(id)}\n                  >\n                    <IconOld name=\"close\" size=\"large\" color=\"red\" />\n                  </button>\n                </div>\n              )}\n\n              <Dropdown\n                placeholder=\"Start Year\"\n                search\n                selection\n                options={years}\n                value={value && value.start_year}\n                onChange={(e, data) =>\n                  this.props.onChange(id, {\n                    end_year: value && value.end_year,\n                    start_year: data.value,\n                  })\n                }\n              />\n\n              <Dropdown\n                placeholder=\"End Year\"\n                search\n                selection\n                options={years}\n                value={value && value.end_year}\n                onChange={(e, data) =>\n                  this.props.onChange(id, {\n                    end_year: data.value,\n                    start_year: value && value.start_year,\n                  })\n                }\n              />\n              {map(error, (message) => (\n                <Label key={message} basic color=\"red\" pointing>\n                  {message}\n                </Label>\n              ))}\n              {icon && iconAction && (\n                <button onClick={iconAction}>\n                  <Icon name={icon} size=\"18px\" />\n                </button>\n              )}\n            </Grid.Column>\n          </Grid.Row>\n          {description && (\n            <Grid.Row stretched>\n              <Grid.Column stretched width=\"12\">\n                <p className=\"help\">{description}</p>\n              </Grid.Column>\n            </Grid.Row>\n          )}\n        </Grid>\n      </Form.Field>\n    );\n  }\n}\n\nexport default injectIntl(CollectionYears);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Default","defaultMessage":"Default"},{"id":"Short Name","defaultMessage":"Short Name"},{"id":"Used for programmatic access to the fieldset.","defaultMessage":"Used for programmatic access to the fieldset."},{"id":"Title","defaultMessage":"Title"},{"id":"Description","defaultMessage":"Description"},{"id":"Required","defaultMessage":"Required"}]}},"sourceType":"module","externalDependencies":[]}