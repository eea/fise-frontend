{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-tableau/src/TableauBlock/Edit.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { SidebarPortal } from '@plone/volto/components';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport config from '@plone/volto/registry';\nimport getSchema from './schema';\nimport View from './View';\nvar Edit = function Edit(props) {\n  _s();\n  var _React$useState = React.useState(getSchema(config)),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    schema = _React$useState2[0];\n  return __jsx(React.Fragment, null, __jsx(View, _extends({}, props, {\n    mode: \"edit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  })), __jsx(SidebarPortal, {\n    selected: props.selected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(InlineForm, {\n    schema: schema,\n    title: schema.title,\n    onChangeField: function onChangeField(id, value) {\n      props.onChangeBlock(props.block, _objectSpread(_objectSpread({}, props.data), {}, _defineProperty({}, id, value)));\n    },\n    formData: props.data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  })));\n};\n_s(Edit, \"q0j2wMlMCFaIwVy6jUyauQRt1+o=\");\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","SidebarPortal","InlineForm","config","getSchema","View","Edit","props","useState","schema","selected","title","id","value","onChangeBlock","block","data"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-tableau/src/TableauBlock/Edit.jsx"],"sourcesContent":["import React from 'react';\nimport { SidebarPortal } from '@plone/volto/components';\nimport InlineForm from '@plone/volto/components/manage/Form/InlineForm';\nimport config from '@plone/volto/registry';\nimport getSchema from './schema';\nimport View from './View';\n\nconst Edit = (props) => {\n  const [schema] = React.useState(getSchema(config));\n\n  return (\n    <>\n      <View {...props} mode=\"edit\" />\n      <SidebarPortal selected={props.selected}>\n        <InlineForm\n          schema={schema}\n          title={schema.title}\n          onChangeField={(id, value) => {\n            props.onChangeBlock(props.block, {\n              ...props.data,\n              [id]: value,\n            });\n          }}\n          formData={props.data}\n        />\n      </SidebarPortal>\n    </>\n  );\n};\n\nexport default Edit;\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,yBAAyB;AACvD,OAAOC,UAAU,MAAM,gDAAgD;AACvE,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,SAAS,MAAM,UAAU;AAChC,OAAOC,IAAI,MAAM,QAAQ;AAEzB,IAAMC,IAAI,GAAG,SAAPA,IAAI,CAAIC,KAAK,EAAK;EAAA;EACtB,sBAAiBP,KAAK,CAACQ,QAAQ,CAACJ,SAAS,CAACD,MAAM,CAAC,CAAC;IAAA;IAA3CM,MAAM;EAEb,OACE,4BACE,MAAC,IAAI,eAAKF,KAAK;IAAE,IAAI,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,EAC/B,MAAC,aAAa;IAAC,QAAQ,EAAEA,KAAK,CAACG,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACtC,MAAC,UAAU;IACT,MAAM,EAAED,MAAO;IACf,KAAK,EAAEA,MAAM,CAACE,KAAM;IACpB,aAAa,EAAE,uBAACC,EAAE,EAAEC,KAAK,EAAK;MAC5BN,KAAK,CAACO,aAAa,CAACP,KAAK,CAACQ,KAAK,kCAC1BR,KAAK,CAACS,IAAI,2BACZJ,EAAE,EAAGC,KAAK,GACX;IACJ,CAAE;IACF,QAAQ,EAAEN,KAAK,CAACS,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACrB,CACY,CACf;AAEP,CAAC;AAAC,GArBIV,IAAI;AAAA,KAAJA,IAAI;AAuBV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}