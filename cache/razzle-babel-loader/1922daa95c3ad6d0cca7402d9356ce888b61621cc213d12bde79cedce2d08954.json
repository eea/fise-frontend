{"ast":null,"code":"import _toConsumableArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { SET_TABLEAU_API } from '@eeacms/volto-tableau/constants';\n\n//need to see if we need redux anymore for this\nexport default (function (middlewares) {\n  return [function (store) {\n    return function (next) {\n      return function (action) {\n        var state = store.getState();\n        var _ref = action || {},\n          _ref$version = _ref.version,\n          version = _ref$version === void 0 ? '' : _ref$version;\n        if (action.type === \"\".concat(SET_TABLEAU_API, \"_PENDING\") && !state.tableau.loading[version]) {\n          // loadTableauScript(() => {}, version);\n          // fetchTableau(version)\n          //   .then((response) => {\n          //     if (mode === 'edit') {\n          //       toast.success(<Toast success title={response.message} />);\n          //     }\n          //     store.dispatch({\n          //       type: `${SET_TABLEAU_API}_SUCCESS`,\n          //       version,\n          //       api: response,\n          //     });\n          //   })\n          //   .catch((error) => {\n          //     if (mode === 'edit') {\n          //       toast.error(<Toast error title={error.message} />);\n          //     }\n          //     store.dispatch({\n          //       type: `${SET_TABLEAU_API}_FAILED`,\n          //       version,\n          //     });\n          //   });\n        }\n        return next(action);\n      };\n    };\n  }].concat(_toConsumableArray(middlewares));\n});","map":{"version":3,"names":["SET_TABLEAU_API","middlewares","store","next","action","state","getState","version","type","tableau","loading"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-tableau/src/middleware.js"],"sourcesContent":["import { SET_TABLEAU_API } from '@eeacms/volto-tableau/constants';\n\n//need to see if we need redux anymore for this\nexport default (middlewares) => [\n  (store) => (next) => (action) => {\n    const state = store.getState();\n    const { version = '' } = action || {};\n\n    if (\n      action.type === `${SET_TABLEAU_API}_PENDING` &&\n      !state.tableau.loading[version]\n    ) {\n      // loadTableauScript(() => {}, version);\n      // fetchTableau(version)\n      //   .then((response) => {\n      //     if (mode === 'edit') {\n      //       toast.success(<Toast success title={response.message} />);\n      //     }\n      //     store.dispatch({\n      //       type: `${SET_TABLEAU_API}_SUCCESS`,\n      //       version,\n      //       api: response,\n      //     });\n      //   })\n      //   .catch((error) => {\n      //     if (mode === 'edit') {\n      //       toast.error(<Toast error title={error.message} />);\n      //     }\n      //     store.dispatch({\n      //       type: `${SET_TABLEAU_API}_FAILED`,\n      //       version,\n      //     });\n      //   });\n    }\n\n    return next(action);\n  },\n  ...middlewares,\n];\n"],"mappings":";AAAA,SAASA,eAAe,QAAQ,iCAAiC;;AAEjE;AACA,gBAAe,UAACC,WAAW;EAAA,QACzB,UAACC,KAAK;IAAA,OAAK,UAACC,IAAI;MAAA,OAAK,UAACC,MAAM,EAAK;QAC/B,IAAMC,KAAK,GAAGH,KAAK,CAACI,QAAQ,EAAE;QAC9B,WAAyBF,MAAM,IAAI,CAAC,CAAC;UAAA,oBAA7BG,OAAO;UAAPA,OAAO,6BAAG,EAAE;QAEpB,IACEH,MAAM,CAACI,IAAI,eAAQR,eAAe,aAAU,IAC5C,CAACK,KAAK,CAACI,OAAO,CAACC,OAAO,CAACH,OAAO,CAAC,EAC/B;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QAAA;QAGF,OAAOJ,IAAI,CAACC,MAAM,CAAC;MACrB,CAAC;IAAA;EAAA,6BACEH,WAAW;AAAA,CACf"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}