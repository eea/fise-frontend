{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"scrollCheck\", \"resizeCheck\", \"partialVisibility\", \"delayedCall\", \"offset\", \"Placeholder\"];\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/theme/VisibilitySensor/VisibilitySensor.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ReactVisibilitySensor from 'react-visibility-sensor';\nvar VisibilitySensor = function VisibilitySensor(_ref) {\n  _s();\n  var children = _ref.children,\n    _ref$scrollCheck = _ref.scrollCheck,\n    scrollCheck = _ref$scrollCheck === void 0 ? true : _ref$scrollCheck,\n    _ref$resizeCheck = _ref.resizeCheck,\n    resizeCheck = _ref$resizeCheck === void 0 ? true : _ref$resizeCheck,\n    _ref$partialVisibilit = _ref.partialVisibility,\n    partialVisibility = _ref$partialVisibilit === void 0 ? true : _ref$partialVisibilit,\n    _ref$delayedCall = _ref.delayedCall,\n    delayedCall = _ref$delayedCall === void 0 ? true : _ref$delayedCall,\n    _ref$offset = _ref.offset,\n    offset = _ref$offset === void 0 ? {\n      top: -50,\n      bottom: -50\n    } : _ref$offset,\n    _ref$Placeholder = _ref.Placeholder,\n    Placeholder = _ref$Placeholder === void 0 ? function () {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 23\n        }\n      }, \"\\xA0\");\n    } : _ref$Placeholder,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    active = _React$useState2[0],\n    setActive = _React$useState2[1];\n  return __jsx(ReactVisibilitySensor, _extends({\n    scrollCheck: scrollCheck,\n    resizeCheck: resizeCheck,\n    partialVisibility: partialVisibility,\n    delayedCall: delayedCall,\n    onChange: function onChange(visible) {\n      if (visible && active) {\n        setActive(false);\n      }\n    },\n    active: active,\n    getDOMElement: function getDOMElement(val) {\n      return val === null || val === void 0 ? void 0 : val.el;\n    },\n    offset: offset\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }), function (_ref2) {\n    var isVisible = _ref2.isVisible;\n    if (isVisible || !active) {\n      return children;\n    }\n    return __jsx(Placeholder, _extends({}, rest, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }\n    }));\n  });\n};\n_s(VisibilitySensor, \"8U9J+wJN8vvBTuOPDEeGZkZ5XMY=\");\n_c = VisibilitySensor;\nexport default VisibilitySensor;\nvar _c;\n$RefreshReg$(_c, \"VisibilitySensor\");","map":{"version":3,"names":["React","ReactVisibilitySensor","VisibilitySensor","children","scrollCheck","resizeCheck","partialVisibility","delayedCall","offset","top","bottom","Placeholder","rest","useState","active","setActive","visible","val","el","isVisible"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-datablocks/src/components/theme/VisibilitySensor/VisibilitySensor.jsx"],"sourcesContent":["import React from 'react';\nimport ReactVisibilitySensor from 'react-visibility-sensor';\n\nconst VisibilitySensor = ({\n  children,\n  scrollCheck = true,\n  resizeCheck = true,\n  partialVisibility = true,\n  delayedCall = true,\n  offset = { top: -50, bottom: -50 },\n  Placeholder = () => <div>&nbsp;</div>,\n  ...rest\n}) => {\n  const [active, setActive] = React.useState(true);\n\n  return (\n    <ReactVisibilitySensor\n      scrollCheck={scrollCheck}\n      resizeCheck={resizeCheck}\n      partialVisibility={partialVisibility}\n      delayedCall={delayedCall}\n      onChange={(visible) => {\n        if (visible && active) {\n          setActive(false);\n        }\n      }}\n      active={active}\n      getDOMElement={(val) => {\n        return val?.el;\n      }}\n      offset={offset}\n      {...rest}\n    >\n      {({ isVisible }) => {\n        if (isVisible || !active) {\n          return children;\n        }\n\n        return <Placeholder {...rest} />;\n      }}\n    </ReactVisibilitySensor>\n  );\n};\n\nexport default VisibilitySensor;\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,qBAAqB,MAAM,yBAAyB;AAE3D,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,OAShB;EAAA;EAAA,IARJC,QAAQ,QAARA,QAAQ;IAAA,wBACRC,WAAW;IAAXA,WAAW,iCAAG,IAAI;IAAA,wBAClBC,WAAW;IAAXA,WAAW,iCAAG,IAAI;IAAA,6BAClBC,iBAAiB;IAAjBA,iBAAiB,sCAAG,IAAI;IAAA,wBACxBC,WAAW;IAAXA,WAAW,iCAAG,IAAI;IAAA,mBAClBC,MAAM;IAANA,MAAM,4BAAG;MAAEC,GAAG,EAAE,CAAC,EAAE;MAAEC,MAAM,EAAE,CAAC;IAAG,CAAC;IAAA,wBAClCC,WAAW;IAAXA,WAAW,iCAAG;MAAA,OAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,UAAiB;IAAA;IAClCC,IAAI;EAEP,sBAA4BZ,KAAK,CAACa,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAzCC,MAAM;IAAEC,SAAS;EAExB,OACE,MAAC,qBAAqB;IACpB,WAAW,EAAEX,WAAY;IACzB,WAAW,EAAEC,WAAY;IACzB,iBAAiB,EAAEC,iBAAkB;IACrC,WAAW,EAAEC,WAAY;IACzB,QAAQ,EAAE,kBAACS,OAAO,EAAK;MACrB,IAAIA,OAAO,IAAIF,MAAM,EAAE;QACrBC,SAAS,CAAC,KAAK,CAAC;MAClB;IACF,CAAE;IACF,MAAM,EAAED,MAAO;IACf,aAAa,EAAE,uBAACG,GAAG,EAAK;MACtB,OAAOA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEC,EAAE;IAChB,CAAE;IACF,MAAM,EAAEV;EAAO,GACXI,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,IAEP,iBAAmB;IAAA,IAAhBO,SAAS,SAATA,SAAS;IACX,IAAIA,SAAS,IAAI,CAACL,MAAM,EAAE;MACxB,OAAOX,QAAQ;IACjB;IAEA,OAAO,MAAC,WAAW,eAAKS,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAI;EAClC,CAAC,CACqB;AAE5B,CAAC;AAAC,GAvCIV,gBAAgB;AAAA,KAAhBA,gBAAgB;AAyCtB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}