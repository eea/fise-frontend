{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { GET_PORTLETS } from '../constants';\nvar initialState = {\n  error: null,\n  managers: {},\n  loaded: false,\n  loading: false\n};\n\n/**\n * Data providers reducer.\n * @function mosaic_settings\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function portlets() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case \"\".concat(GET_PORTLETS, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        loaded: false,\n        loading: true\n      });\n    case \"\".concat(GET_PORTLETS, \"_SUCCESS\"):\n      var managers = _objectSpread({}, state.managers);\n      if (action.subrequest) {\n        managers[action.subrequest] = action.result.portlets || [];\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: null,\n        managers: managers,\n        loaded: true,\n        loading: false\n      });\n    case \"\".concat(GET_PORTLETS, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.error,\n        // items: [],\n        // portlets: {},\n        loaded: false,\n        loading: false\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_PORTLETS","initialState","error","managers","loaded","loading","portlets","state","action","type","subrequest","result"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-addons-forest/src/reducers/portlets.js"],"sourcesContent":["import { GET_PORTLETS } from '../constants';\n\nconst initialState = {\n  error: null,\n  managers: {},\n  loaded: false,\n  loading: false,\n};\n\n/**\n * Data providers reducer.\n * @function mosaic_settings\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function portlets(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${GET_PORTLETS}_PENDING`:\n      return {\n        ...state,\n        error: null,\n        loaded: false,\n        loading: true,\n      };\n    case `${GET_PORTLETS}_SUCCESS`:\n      const managers = {\n        ...state.managers,\n      };\n      if (action.subrequest) {\n        managers[action.subrequest] = action.result.portlets || [];\n      }\n      return {\n        ...state,\n        error: null,\n        managers,\n        loaded: true,\n        loading: false,\n      };\n    case `${GET_PORTLETS}_FAIL`:\n      return {\n        ...state,\n        error: action.error,\n        // items: [],\n        // portlets: {},\n        loaded: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,cAAc;AAE3C,IAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,CAAC,CAAC;EACZC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,QAAQ,GAAoC;EAAA,IAAnCC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM,uEAAG,CAAC,CAAC;EAChE,QAAQA,MAAM,CAACC,IAAI;IACjB,eAAQT,YAAY;MAClB,uCACKO,KAAK;QACRL,KAAK,EAAE,IAAI;QACXE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAI;IAEjB,eAAQL,YAAY;MAClB,IAAMG,QAAQ,qBACTI,KAAK,CAACJ,QAAQ,CAClB;MACD,IAAIK,MAAM,CAACE,UAAU,EAAE;QACrBP,QAAQ,CAACK,MAAM,CAACE,UAAU,CAAC,GAAGF,MAAM,CAACG,MAAM,CAACL,QAAQ,IAAI,EAAE;MAC5D;MACA,uCACKC,KAAK;QACRL,KAAK,EAAE,IAAI;QACXC,QAAQ,EAARA,QAAQ;QACRC,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MAAK;IAElB,eAAQL,YAAY;MAClB,uCACKO,KAAK;QACRL,KAAK,EAAEM,MAAM,CAACN,KAAK;QACnB;QACA;QACAE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MAAK;IAElB;MACE,OAAOE,KAAK;EAAC;AAEnB"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}