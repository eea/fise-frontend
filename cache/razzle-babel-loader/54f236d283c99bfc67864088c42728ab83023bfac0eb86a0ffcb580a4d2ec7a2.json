{"ast":null,"code":"import _uniqBy from \"lodash/uniqBy\";\nconst _excluded = [\"children\"];\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Workflow/Workflow.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/**\n * Workflow component.\n * @module components/manage/Workflow/Workflow\n */\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { FormFieldWrapper, Icon, Toast } from '@plone/volto/components';\nimport { flattenToAppURL, getCurrentStateMapping, getWorkflowOptions } from '@plone/volto/helpers';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\nimport { getContent, getWorkflow, transitionWorkflow } from '@plone/volto/actions';\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\nconst messages = defineMessages({\n  messageUpdated: {\n    \"id\": \"Workflow updated.\",\n    \"defaultMessage\": \"Workflow updated.\"\n  },\n  messageNoWorkflow: {\n    \"id\": \"No workflow\",\n    \"defaultMessage\": \"No workflow\"\n  },\n  state: {\n    \"id\": \"State\",\n    \"defaultMessage\": \"State\"\n  }\n});\nconst SingleValue = injectLazyLibs('reactSelect')(_ref => {\n  let {\n      children\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const stateDecorator = {\n    marginRight: '10px',\n    display: 'inline-block',\n    backgroundColor: props.selectProps.value.color || null,\n    content: ' ',\n    height: '10px',\n    width: '10px',\n    borderRadius: '50%'\n  };\n  const {\n    SingleValue\n  } = props.reactSelect.components;\n  return __jsx(SingleValue, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), __jsx(\"span\", {\n    style: stateDecorator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), children);\n});\nconst Option = injectLazyLibs('reactSelect')(props => {\n  const stateDecorator = {\n    marginRight: '10px',\n    display: 'inline-block',\n    backgroundColor: props.selectProps.value.value === props.data.value ? props.selectProps.value.color : null,\n    content: ' ',\n    height: '10px',\n    width: '10px',\n    borderRadius: '50%',\n    border: props.selectProps.value.value !== props.data.value ? `1px solid ${props.data.color}` : null\n  };\n  const {\n    Option\n  } = props['reactSelect'].components;\n  return __jsx(Option, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }), __jsx(\"span\", {\n    style: stateDecorator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginRight: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, props.label), props.isFocused && !props.isSelected && __jsx(Icon, {\n    name: checkSVG,\n    size: \"18px\",\n    color: \"#b8c6c8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), props.isSelected && __jsx(Icon, {\n    name: checkSVG,\n    size: \"18px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 28\n    }\n  }));\n});\nconst DropdownIndicator = injectLazyLibs('reactSelect')(props => {\n  const {\n    DropdownIndicator\n  } = props.reactSelect.components;\n  return __jsx(DropdownIndicator, _extends({}, props, {\n    \"data-testid\": \"workflow-select-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }), props.selectProps.menuIsOpen ? __jsx(Icon, {\n    name: upSVG,\n    size: \"24px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }) : __jsx(Icon, {\n    name: downSVG,\n    size: \"24px\",\n    color: \"#007bc1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }));\n});\nconst selectTheme = theme => _objectSpread(_objectSpread({}, theme), {}, {\n  borderRadius: 0,\n  colors: _objectSpread(_objectSpread({}, theme.colors), {}, {\n    primary25: 'hotpink',\n    primary: '#b8c6c8'\n  })\n});\nconst customSelectStyles = {\n  control: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    border: 'none',\n    borderBottom: '2px solid #b8c6c8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid'\n  }),\n  menu: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '2px solid #b8c6c8'\n  }),\n  indicatorSeparator: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    width: null\n  }),\n  valueContainer: styles => _objectSpread(_objectSpread({}, styles), {}, {\n    padding: 0\n  }),\n  option: (styles, state) => _objectSpread(_objectSpread({}, styles), {}, {\n    backgroundColor: null,\n    minHeight: '50px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '12px 12px',\n    color: state.isSelected ? '#007bc1' : state.isFocused ? '#4a4a4a' : 'inherit',\n    ':active': {\n      backgroundColor: null\n    },\n    span: {\n      flex: '0 0 auto'\n    },\n    svg: {\n      flex: '0 0 auto'\n    }\n  })\n};\n\n/**\n * Workflow container class.\n * @class Workflow\n * @extends Component\n */\nclass Workflow extends Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"transition\", selectedOption => {\n      this.props.transitionWorkflow(flattenToAppURL(selectedOption.url));\n      toast.success(__jsx(Toast, {\n        success: true,\n        title: this.props.intl.formatMessage(messages.messageUpdated),\n        content: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 7\n        }\n      }));\n    });\n    _defineProperty(this, \"selectValue\", option => {\n      const stateDecorator = {\n        marginLeft: '10px',\n        marginRight: '10px',\n        display: 'inline-block',\n        backgroundColor: option.color || null,\n        content: ' ',\n        height: '10px',\n        width: '10px',\n        borderRadius: '50%'\n      };\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 7\n        }\n      }, __jsx(\"span\", {\n        style: stateDecorator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 9\n        }\n      }), __jsx(\"span\", {\n        className: \"Select-value-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }\n      }, option.label));\n    });\n    _defineProperty(this, \"optionRenderer\", option => {\n      const stateDecorator = {\n        marginLeft: '10px',\n        marginRight: '10px',\n        display: 'inline-block',\n        backgroundColor: this.props.currentStateValue.value === option.value ? option.color : null,\n        content: ' ',\n        height: '10px',\n        width: '10px',\n        borderRadius: '50%',\n        border: this.props.currentStateValue.value !== option.value ? `1px solid ${option.color}` : null\n      };\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 7\n        }\n      }, __jsx(\"span\", {\n        style: stateDecorator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 9\n        }\n      }), __jsx(\"span\", {\n        style: {\n          marginRight: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 9\n        }\n      }, option.label), __jsx(Icon, {\n        name: checkSVG,\n        size: \"24px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 9\n        }\n      }));\n    });\n  }\n  componentDidMount() {\n    this.props.getWorkflow(this.props.pathname);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.getWorkflow(nextProps.pathname);\n    }\n    if (!this.props.loaded && nextProps.loaded) {\n      this.props.getWorkflow(nextProps.pathname);\n      this.props.getContent(nextProps.pathname);\n    }\n  }\n\n  /**\n   * On transition handler\n   * @method transition\n   * @param {string} event Event object\n   * @returns {undefined}\n   */\n\n  render() {\n    const {\n      Placeholder\n    } = this.props.reactSelect.components;\n    const Select = this.props.reactSelect.default;\n    return __jsx(FormFieldWrapper, _extends({\n      id: \"state-select\",\n      title: this.props.intl.formatMessage(messages.state)\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 7\n      }\n    }), __jsx(Select, {\n      name: \"state-select\",\n      className: \"react-select-container\",\n      classNamePrefix: \"react-select\",\n      isDisabled: !this.props.content.review_state || this.props.transitions.length === 0,\n      options: _uniqBy(this.props.transitions.map(transition => getWorkflowOptions(transition)), 'label').concat(this.props.currentStateValue),\n      styles: customSelectStyles,\n      theme: selectTheme,\n      components: {\n        DropdownIndicator,\n        Placeholder,\n        Option,\n        SingleValue\n      },\n      onChange: this.transition,\n      value: this.props.content.review_state ? this.props.currentStateValue : {\n        label: this.props.intl.formatMessage(messages.messageNoWorkflow),\n        value: 'noworkflow'\n      },\n      isSearchable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n_defineProperty(Workflow, \"propTypes\", {\n  getContent: PropTypes.func.isRequired,\n  getWorkflow: PropTypes.func.isRequired,\n  transitionWorkflow: PropTypes.func.isRequired,\n  loaded: PropTypes.bool.isRequired,\n  pathname: PropTypes.string.isRequired,\n  history: PropTypes.arrayOf(PropTypes.shape({\n    review_state: PropTypes.string\n  })),\n  transitions: PropTypes.arrayOf(PropTypes.shape({\n    '@id': PropTypes.string,\n    title: PropTypes.string\n  }))\n});\n_defineProperty(Workflow, \"defaultProps\", {\n  history: [],\n  transitions: []\n});\nexport default compose(injectIntl, injectLazyLibs(['reactSelect']), connect(state => ({\n  loaded: state.workflow.transition.loaded,\n  content: state.content.data,\n  history: state.workflow.history,\n  transitions: state.workflow.transitions,\n  currentStateValue: getCurrentStateMapping(state.workflow.currentState)\n}), {\n  getContent,\n  getWorkflow,\n  transitionWorkflow\n}))(Workflow);","map":{"version":3,"names":["React","Component","Fragment","PropTypes","compose","connect","toast","defineMessages","injectIntl","FormFieldWrapper","Icon","Toast","flattenToAppURL","getCurrentStateMapping","getWorkflowOptions","injectLazyLibs","getContent","getWorkflow","transitionWorkflow","downSVG","upSVG","checkSVG","messages","messageUpdated","messageNoWorkflow","state","SingleValue","children","props","stateDecorator","marginRight","display","backgroundColor","selectProps","value","color","content","height","width","borderRadius","reactSelect","components","Option","data","border","label","isFocused","isSelected","DropdownIndicator","menuIsOpen","selectTheme","theme","colors","primary25","primary","customSelectStyles","control","styles","borderBottom","boxShadow","borderBottomStyle","menu","top","marginTop","indicatorSeparator","valueContainer","padding","option","minHeight","justifyContent","alignItems","span","flex","svg","Workflow","selectedOption","url","success","intl","formatMessage","marginLeft","currentStateValue","componentDidMount","pathname","UNSAFE_componentWillReceiveProps","nextProps","loaded","render","Placeholder","Select","default","review_state","transitions","length","map","transition","concat","func","isRequired","bool","string","history","arrayOf","shape","title","workflow","currentState"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Workflow/Workflow.jsx"],"sourcesContent":["/**\n * Workflow component.\n * @module components/manage/Workflow/Workflow\n */\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { uniqBy } from 'lodash';\nimport { toast } from 'react-toastify';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { FormFieldWrapper, Icon, Toast } from '@plone/volto/components';\nimport {\n  flattenToAppURL,\n  getCurrentStateMapping,\n  getWorkflowOptions,\n} from '@plone/volto/helpers';\n\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n\nimport {\n  getContent,\n  getWorkflow,\n  transitionWorkflow,\n} from '@plone/volto/actions';\n\nimport downSVG from '@plone/volto/icons/down-key.svg';\nimport upSVG from '@plone/volto/icons/up-key.svg';\nimport checkSVG from '@plone/volto/icons/check.svg';\n\nconst messages = defineMessages({\n  messageUpdated: {\n    id: 'Workflow updated.',\n    defaultMessage: 'Workflow updated.',\n  },\n  messageNoWorkflow: {\n    id: 'No workflow',\n    defaultMessage: 'No workflow',\n  },\n  state: {\n    id: 'State',\n    defaultMessage: 'State',\n  },\n});\n\nconst SingleValue = injectLazyLibs('reactSelect')(({ children, ...props }) => {\n  const stateDecorator = {\n    marginRight: '10px',\n    display: 'inline-block',\n    backgroundColor: props.selectProps.value.color || null,\n    content: ' ',\n    height: '10px',\n    width: '10px',\n    borderRadius: '50%',\n  };\n  const { SingleValue } = props.reactSelect.components;\n  return (\n    <SingleValue {...props}>\n      <span style={stateDecorator} />\n      {children}\n    </SingleValue>\n  );\n});\n\nconst Option = injectLazyLibs('reactSelect')((props) => {\n  const stateDecorator = {\n    marginRight: '10px',\n    display: 'inline-block',\n    backgroundColor:\n      props.selectProps.value.value === props.data.value\n        ? props.selectProps.value.color\n        : null,\n    content: ' ',\n    height: '10px',\n    width: '10px',\n    borderRadius: '50%',\n    border:\n      props.selectProps.value.value !== props.data.value\n        ? `1px solid ${props.data.color}`\n        : null,\n  };\n\n  const { Option } = props['reactSelect'].components;\n  return (\n    <Option {...props}>\n      <span style={stateDecorator} />\n      <div style={{ marginRight: 'auto' }}>{props.label}</div>\n      {props.isFocused && !props.isSelected && (\n        <Icon name={checkSVG} size=\"18px\" color=\"#b8c6c8\" />\n      )}\n      {props.isSelected && <Icon name={checkSVG} size=\"18px\" color=\"#007bc1\" />}\n    </Option>\n  );\n});\n\nconst DropdownIndicator = injectLazyLibs('reactSelect')((props) => {\n  const { DropdownIndicator } = props.reactSelect.components;\n  return (\n    <DropdownIndicator {...props} data-testid=\"workflow-select-dropdown\">\n      {props.selectProps.menuIsOpen ? (\n        <Icon name={upSVG} size=\"24px\" color=\"#007bc1\" />\n      ) : (\n        <Icon name={downSVG} size=\"24px\" color=\"#007bc1\" />\n      )}\n    </DropdownIndicator>\n  );\n});\n\nconst selectTheme = (theme) => ({\n  ...theme,\n  borderRadius: 0,\n  colors: {\n    ...theme.colors,\n    primary25: 'hotpink',\n    primary: '#b8c6c8',\n  },\n});\n\nconst customSelectStyles = {\n  control: (styles, state) => ({\n    ...styles,\n    border: 'none',\n    borderBottom: '2px solid #b8c6c8',\n    boxShadow: 'none',\n    borderBottomStyle: state.menuIsOpen ? 'dotted' : 'solid',\n  }),\n  menu: (styles, state) => ({\n    ...styles,\n    top: null,\n    marginTop: 0,\n    boxShadow: 'none',\n    borderBottom: '2px solid #b8c6c8',\n  }),\n  indicatorSeparator: (styles) => ({\n    ...styles,\n    width: null,\n  }),\n  valueContainer: (styles) => ({\n    ...styles,\n    padding: 0,\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: null,\n    minHeight: '50px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '12px 12px',\n    color: state.isSelected\n      ? '#007bc1'\n      : state.isFocused\n      ? '#4a4a4a'\n      : 'inherit',\n    ':active': {\n      backgroundColor: null,\n    },\n    span: {\n      flex: '0 0 auto',\n    },\n    svg: {\n      flex: '0 0 auto',\n    },\n  }),\n};\n\n/**\n * Workflow container class.\n * @class Workflow\n * @extends Component\n */\nclass Workflow extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    getContent: PropTypes.func.isRequired,\n    getWorkflow: PropTypes.func.isRequired,\n    transitionWorkflow: PropTypes.func.isRequired,\n    loaded: PropTypes.bool.isRequired,\n    pathname: PropTypes.string.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        review_state: PropTypes.string,\n      }),\n    ),\n    transitions: PropTypes.arrayOf(\n      PropTypes.shape({\n        '@id': PropTypes.string,\n        title: PropTypes.string,\n      }),\n    ),\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    history: [],\n    transitions: [],\n  };\n\n  componentDidMount() {\n    this.props.getWorkflow(this.props.pathname);\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname) {\n      this.props.getWorkflow(nextProps.pathname);\n    }\n    if (!this.props.loaded && nextProps.loaded) {\n      this.props.getWorkflow(nextProps.pathname);\n      this.props.getContent(nextProps.pathname);\n    }\n  }\n\n  /**\n   * On transition handler\n   * @method transition\n   * @param {string} event Event object\n   * @returns {undefined}\n   */\n  transition = (selectedOption) => {\n    this.props.transitionWorkflow(flattenToAppURL(selectedOption.url));\n    toast.success(\n      <Toast\n        success\n        title={this.props.intl.formatMessage(messages.messageUpdated)}\n        content=\"\"\n      />,\n    );\n  };\n\n  selectValue = (option) => {\n    const stateDecorator = {\n      marginLeft: '10px',\n      marginRight: '10px',\n      display: 'inline-block',\n      backgroundColor: option.color || null,\n      content: ' ',\n      height: '10px',\n      width: '10px',\n      borderRadius: '50%',\n    };\n    return (\n      <Fragment>\n        <span style={stateDecorator} />\n        <span className=\"Select-value-label\">{option.label}</span>\n      </Fragment>\n    );\n  };\n\n  optionRenderer = (option) => {\n    const stateDecorator = {\n      marginLeft: '10px',\n      marginRight: '10px',\n      display: 'inline-block',\n      backgroundColor:\n        this.props.currentStateValue.value === option.value\n          ? option.color\n          : null,\n      content: ' ',\n      height: '10px',\n      width: '10px',\n      borderRadius: '50%',\n      border:\n        this.props.currentStateValue.value !== option.value\n          ? `1px solid ${option.color}`\n          : null,\n    };\n\n    return (\n      <Fragment>\n        <span style={stateDecorator} />\n        <span style={{ marginRight: 'auto' }}>{option.label}</span>\n        <Icon name={checkSVG} size=\"24px\" />\n      </Fragment>\n    );\n  };\n\n  render() {\n    const { Placeholder } = this.props.reactSelect.components;\n    const Select = this.props.reactSelect.default;\n\n    return (\n      <FormFieldWrapper\n        id=\"state-select\"\n        title={this.props.intl.formatMessage(messages.state)}\n        {...this.props}\n      >\n        <Select\n          name=\"state-select\"\n          className=\"react-select-container\"\n          classNamePrefix=\"react-select\"\n          isDisabled={\n            !this.props.content.review_state ||\n            this.props.transitions.length === 0\n          }\n          options={uniqBy(\n            this.props.transitions.map((transition) =>\n              getWorkflowOptions(transition),\n            ),\n            'label',\n          ).concat(this.props.currentStateValue)}\n          styles={customSelectStyles}\n          theme={selectTheme}\n          components={{\n            DropdownIndicator,\n            Placeholder,\n            Option,\n            SingleValue,\n          }}\n          onChange={this.transition}\n          value={\n            this.props.content.review_state\n              ? this.props.currentStateValue\n              : {\n                  label: this.props.intl.formatMessage(\n                    messages.messageNoWorkflow,\n                  ),\n                  value: 'noworkflow',\n                }\n          }\n          isSearchable={false}\n        />\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['reactSelect']),\n  connect(\n    (state) => ({\n      loaded: state.workflow.transition.loaded,\n      content: state.content.data,\n      history: state.workflow.history,\n      transitions: state.workflow.transitions,\n      currentStateValue: getCurrentStateMapping(state.workflow.currentState),\n    }),\n    { getContent, getWorkflow, transitionWorkflow },\n  ),\n)(Workflow);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Workflow updated.","defaultMessage":"Workflow updated."},{"id":"No workflow","defaultMessage":"No workflow"},{"id":"State","defaultMessage":"State"}]}},"sourceType":"module","externalDependencies":[]}