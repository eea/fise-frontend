{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _slicedToArray from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/BlockChooser/BlockChooserButton.jsx\",\n  _this = this,\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport addSVG from '@plone/volto/icons/circle-plus.svg';\nimport { blockHasValue } from '@plone/volto/helpers';\nimport { Icon, BlockChooser } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\nvar messages = defineMessages({\n  addBlock: {\n    \"id\": \"Add block\",\n    \"defaultMessage\": \"Add block\"\n  }\n});\nexport var ButtonComponent = function ButtonComponent(props) {\n  _s();\n  var intl = useIntl();\n  var _props$className = props.className,\n    className = _props$className === void 0 ? 'block-add-button' : _props$className,\n    _props$size = props.size,\n    size = _props$size === void 0 ? '19px' : _props$size,\n    onShowBlockChooser = props.onShowBlockChooser;\n  return __jsx(Button, {\n    icon: true,\n    basic: true,\n    title: intl.formatMessage(messages.addBlock),\n    onClick: function onClick(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      onShowBlockChooser();\n    },\n    className: className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(Icon, {\n    name: addSVG,\n    className: className,\n    size: size,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n_s(ButtonComponent, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = ButtonComponent;\nvar BlockChooserButton = function BlockChooserButton(props) {\n  _s2();\n  var block = props.block,\n    allowedBlocks = props.allowedBlocks,\n    showRestricted = props.showRestricted,\n    data = props.data,\n    onMutateBlock = props.onMutateBlock,\n    onInsertBlock = props.onInsertBlock,\n    blocksConfig = props.blocksConfig,\n    buttonComponent = props.buttonComponent,\n    properties = props.properties;\n  var disableNewBlocks = data.disableNewBlocks;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    addNewBlockOpened = _React$useState2[0],\n    setAddNewBlockOpened = _React$useState2[1];\n  var blockChooserRef = React.useRef();\n  var handleClickOutside = React.useCallback(function (e) {\n    if (blockChooserRef.current && doesNodeContainClick(blockChooserRef.current, e)) return;\n    setAddNewBlockOpened(false);\n  }, []);\n  var Component = buttonComponent || ButtonComponent;\n  React.useEffect(function () {\n    document.addEventListener('mousedown', handleClickOutside, false);\n    return function () {\n      document.removeEventListener('mousedown', handleClickOutside, false);\n    };\n  }, [handleClickOutside]);\n  return __jsx(React.Fragment, null, !disableNewBlocks && !blockHasValue(data) && __jsx(Component, _extends({}, props, {\n    onShowBlockChooser: function onShowBlockChooser() {\n      return setAddNewBlockOpened(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), addNewBlockOpened && __jsx(BlockChooser, {\n    onMutateBlock: onMutateBlock ? function (id, value) {\n      setAddNewBlockOpened(false);\n      onMutateBlock(id, value);\n    } : null,\n    onInsertBlock: onInsertBlock ? function (id, value) {\n      setAddNewBlockOpened(false);\n      onInsertBlock(id, value);\n    } : null,\n    currentBlock: block,\n    allowedBlocks: allowedBlocks,\n    blocksConfig: blocksConfig,\n    properties: properties,\n    showRestricted: showRestricted,\n    ref: blockChooserRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }));\n};\n_s2(BlockChooserButton, \"Wuzj51Gbho1YPdojAdfGpniTZ1w=\");\n_c2 = BlockChooserButton;\nexport default BlockChooserButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"ButtonComponent\");\n$RefreshReg$(_c2, \"BlockChooserButton\");","map":{"version":3,"names":["React","doesNodeContainClick","addSVG","blockHasValue","Icon","BlockChooser","Button","defineMessages","useIntl","messages","addBlock","ButtonComponent","props","intl","className","size","onShowBlockChooser","formatMessage","e","preventDefault","stopPropagation","BlockChooserButton","block","allowedBlocks","showRestricted","data","onMutateBlock","onInsertBlock","blocksConfig","buttonComponent","properties","disableNewBlocks","useState","addNewBlockOpened","setAddNewBlockOpened","blockChooserRef","useRef","handleClickOutside","useCallback","current","Component","useEffect","document","addEventListener","removeEventListener","id","value"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/BlockChooser/BlockChooserButton.jsx"],"sourcesContent":["import React from 'react';\nimport { doesNodeContainClick } from 'semantic-ui-react/dist/commonjs/lib';\nimport addSVG from '@plone/volto/icons/circle-plus.svg';\nimport { blockHasValue } from '@plone/volto/helpers';\nimport { Icon, BlockChooser } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport { defineMessages, useIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  addBlock: {\n    id: 'Add block',\n    defaultMessage: 'Add block',\n  },\n});\n\nexport const ButtonComponent = (props) => {\n  const intl = useIntl();\n  const {\n    className = 'block-add-button',\n    size = '19px',\n    onShowBlockChooser,\n  } = props;\n\n  return (\n    <Button\n      icon\n      basic\n      title={intl.formatMessage(messages.addBlock)}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onShowBlockChooser();\n      }}\n      className={className}\n    >\n      <Icon name={addSVG} className={className} size={size} />\n    </Button>\n  );\n};\n\nconst BlockChooserButton = (props) => {\n  const {\n    block,\n    allowedBlocks,\n    showRestricted,\n    data,\n    onMutateBlock,\n    onInsertBlock,\n    blocksConfig,\n    buttonComponent,\n    properties,\n  } = props;\n  const { disableNewBlocks } = data;\n  const [addNewBlockOpened, setAddNewBlockOpened] = React.useState(false);\n\n  const blockChooserRef = React.useRef();\n\n  const handleClickOutside = React.useCallback((e) => {\n    if (\n      blockChooserRef.current &&\n      doesNodeContainClick(blockChooserRef.current, e)\n    )\n      return;\n    setAddNewBlockOpened(false);\n  }, []);\n\n  const Component = buttonComponent || ButtonComponent;\n\n  React.useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside, false);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside, false);\n    };\n  }, [handleClickOutside]);\n\n  return (\n    <>\n      {!disableNewBlocks && !blockHasValue(data) && (\n        <Component\n          {...props}\n          onShowBlockChooser={() => setAddNewBlockOpened(true)}\n        />\n      )}\n      {addNewBlockOpened && (\n        <BlockChooser\n          onMutateBlock={\n            onMutateBlock\n              ? (id, value) => {\n                  setAddNewBlockOpened(false);\n                  onMutateBlock(id, value);\n                }\n              : null\n          }\n          onInsertBlock={\n            onInsertBlock\n              ? (id, value) => {\n                  setAddNewBlockOpened(false);\n                  onInsertBlock(id, value);\n                }\n              : null\n          }\n          currentBlock={block}\n          allowedBlocks={allowedBlocks}\n          blocksConfig={blocksConfig}\n          properties={properties}\n          showRestricted={showRestricted}\n          ref={blockChooserRef}\n        />\n      )}\n    </>\n  );\n};\n\nexport default BlockChooserButton;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Add block","defaultMessage":"Add block"}]}},"sourceType":"module","externalDependencies":[]}