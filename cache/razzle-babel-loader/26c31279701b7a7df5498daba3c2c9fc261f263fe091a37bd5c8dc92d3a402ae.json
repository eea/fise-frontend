{"ast":null,"code":"import _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _startsWith from \"lodash/startsWith\";\nimport { CREATE_USER, DELETE_USER, GET_USER, LIST_USERS, UPDATE_PASSWORD, UPDATE_USER, INITIAL_PASSWORD, RESET_PASSWORD } from '@plone/volto/constants/ActionTypes';\nvar initialState = {\n  user: {},\n  users: [],\n  create: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  get: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  list: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  \"delete\": {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  update: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  update_password: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  password: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  initial: {\n    error: null,\n    loaded: false,\n    loading: false\n  },\n  reset: {\n    error: null,\n    loaded: false,\n    loading: false\n  }\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  if (_startsWith(actionType, 'UPDATE_PASSWORD')) {\n    return 'update_password';\n  }\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Users reducer.\n * @function users\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function users() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  switch (action.type) {\n    case \"\".concat(CREATE_USER, \"_PENDING\"):\n    case \"\".concat(DELETE_USER, \"_PENDING\"):\n    case \"\".concat(GET_USER, \"_PENDING\"):\n    case \"\".concat(LIST_USERS, \"_PENDING\"):\n    case \"\".concat(UPDATE_USER, \"_PENDING\"):\n    case \"\".concat(UPDATE_PASSWORD, \"_PENDING\"):\n    case \"\".concat(INITIAL_PASSWORD, \"_PENDING\"):\n    case \"\".concat(RESET_PASSWORD, \"_PENDING\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, getRequestKey(action.type), {\n        loading: true,\n        loaded: false,\n        error: null\n      }));\n    case \"\".concat(GET_USER, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        user: action.result\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: true,\n        error: null\n      }));\n    case \"\".concat(LIST_USERS, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        users: action.result\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: true,\n        error: null\n      }));\n    case \"\".concat(CREATE_USER, \"_SUCCESS\"):\n    case \"\".concat(DELETE_USER, \"_SUCCESS\"):\n    case \"\".concat(UPDATE_USER, \"_SUCCESS\"):\n    case \"\".concat(UPDATE_PASSWORD, \"_SUCCESS\"):\n    case \"\".concat(INITIAL_PASSWORD, \"_SUCCESS\"):\n    case \"\".concat(RESET_PASSWORD, \"_SUCCESS\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, getRequestKey(action.type), {\n        loading: false,\n        loaded: true,\n        error: null\n      }));\n    case \"\".concat(GET_USER, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        user: {}\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: false,\n        error: action.error\n      }));\n    case \"\".concat(LIST_USERS, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        users: []\n      }, getRequestKey(action.type), {\n        loading: false,\n        loaded: false,\n        error: action.error\n      }));\n    case \"\".concat(CREATE_USER, \"_FAIL\"):\n    case \"\".concat(DELETE_USER, \"_FAIL\"):\n    case \"\".concat(UPDATE_USER, \"_FAIL\"):\n    case \"\".concat(UPDATE_PASSWORD, \"_FAIL\"):\n    case \"\".concat(INITIAL_PASSWORD, \"_FAIL\"):\n    case \"\".concat(RESET_PASSWORD, \"_FAIL\"):\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, getRequestKey(action.type), {\n        loading: false,\n        loaded: false,\n        error: action.error\n      }));\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["CREATE_USER","DELETE_USER","GET_USER","LIST_USERS","UPDATE_PASSWORD","UPDATE_USER","INITIAL_PASSWORD","RESET_PASSWORD","initialState","user","users","create","error","loaded","loading","get","list","update","update_password","password","initial","reset","getRequestKey","actionType","split","toLowerCase","state","action","type","result"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/reducers/users/users.js"],"sourcesContent":["/**\n * Users reducer.\n * @module reducers/users/users\n */\n\nimport { startsWith } from 'lodash';\n\nimport {\n  CREATE_USER,\n  DELETE_USER,\n  GET_USER,\n  LIST_USERS,\n  UPDATE_PASSWORD,\n  UPDATE_USER,\n  INITIAL_PASSWORD,\n  RESET_PASSWORD,\n} from '@plone/volto/constants/ActionTypes';\n\nconst initialState = {\n  user: {},\n  users: [],\n  create: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  get: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  list: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  delete: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  update: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  update_password: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  password: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  initial: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n  reset: {\n    error: null,\n    loaded: false,\n    loading: false,\n  },\n};\n\n/**\n * Get request key\n * @function getRequestKey\n * @param {string} actionType Action type.\n * @returns {string} Request key.\n */\nfunction getRequestKey(actionType) {\n  if (startsWith(actionType, 'UPDATE_PASSWORD')) {\n    return 'update_password';\n  }\n  return actionType.split('_')[0].toLowerCase();\n}\n\n/**\n * Users reducer.\n * @function users\n * @param {Object} state Current state.\n * @param {Object} action Action to be handled.\n * @returns {Object} New state.\n */\nexport default function users(state = initialState, action = {}) {\n  switch (action.type) {\n    case `${CREATE_USER}_PENDING`:\n    case `${DELETE_USER}_PENDING`:\n    case `${GET_USER}_PENDING`:\n    case `${LIST_USERS}_PENDING`:\n    case `${UPDATE_USER}_PENDING`:\n    case `${UPDATE_PASSWORD}_PENDING`:\n    case `${INITIAL_PASSWORD}_PENDING`:\n    case `${RESET_PASSWORD}_PENDING`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: true,\n          loaded: false,\n          error: null,\n        },\n      };\n    case `${GET_USER}_SUCCESS`:\n      return {\n        ...state,\n        user: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${LIST_USERS}_SUCCESS`:\n      return {\n        ...state,\n        users: action.result,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${CREATE_USER}_SUCCESS`:\n    case `${DELETE_USER}_SUCCESS`:\n    case `${UPDATE_USER}_SUCCESS`:\n    case `${UPDATE_PASSWORD}_SUCCESS`:\n    case `${INITIAL_PASSWORD}_SUCCESS`:\n    case `${RESET_PASSWORD}_SUCCESS`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: true,\n          error: null,\n        },\n      };\n    case `${GET_USER}_FAIL`:\n      return {\n        ...state,\n        user: {},\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${LIST_USERS}_FAIL`:\n      return {\n        ...state,\n        users: [],\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    case `${CREATE_USER}_FAIL`:\n    case `${DELETE_USER}_FAIL`:\n    case `${UPDATE_USER}_FAIL`:\n    case `${UPDATE_PASSWORD}_FAIL`:\n    case `${INITIAL_PASSWORD}_FAIL`:\n    case `${RESET_PASSWORD}_FAIL`:\n      return {\n        ...state,\n        [getRequestKey(action.type)]: {\n          loading: false,\n          loaded: false,\n          error: action.error,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}