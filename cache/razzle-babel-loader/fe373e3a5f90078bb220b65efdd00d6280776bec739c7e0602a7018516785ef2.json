{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Sidebar/AlignBlock.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport imageLeftSVG from '@plone/volto/icons/image-left.svg';\nimport imageRightSVG from '@plone/volto/icons/image-right.svg';\nimport imageFitSVG from '@plone/volto/icons/image-fit.svg';\nimport imageWideSVG from '@plone/volto/icons/image-wide.svg';\nimport imageFullSVG from '@plone/volto/icons/image-full.svg';\nvar messages = defineMessages({\n  left: {\n    \"id\": \"Left\",\n    \"defaultMessage\": \"Left\"\n  },\n  right: {\n    \"id\": \"Right\",\n    \"defaultMessage\": \"Right\"\n  },\n  center: {\n    \"id\": \"Center\",\n    \"defaultMessage\": \"Center\"\n  },\n  wide: {\n    \"id\": \"Wide\",\n    \"defaultMessage\": \"Wide\"\n  },\n  full: {\n    \"id\": \"Full\",\n    \"defaultMessage\": \"Full\"\n  }\n});\nvar AlignBlock = function AlignBlock(_ref) {\n  _s();\n  var align = _ref.align,\n    onChangeBlock = _ref.onChangeBlock,\n    data = _ref.data,\n    block = _ref.block,\n    _ref$actions = _ref.actions,\n    actions = _ref$actions === void 0 ? ['left', 'right', 'center', 'full'] : _ref$actions;\n  var intl = useIntl();\n  var ICON_MAP = {\n    left: imageLeftSVG,\n    right: imageRightSVG,\n    center: imageFitSVG,\n    wide: imageWideSVG,\n    full: imageFullSVG\n  };\n  function onAlignBlock(align) {\n    onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n      align: align\n    }));\n  }\n  return __jsx(\"div\", {\n    className: \"align-buttons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, actions.map(function (action) {\n    return __jsx(Button.Group, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      icon: true,\n      basic: true,\n      \"aria-label\": intl.formatMessage(messages[action]),\n      onClick: function onClick() {\n        return onAlignBlock(action);\n      },\n      active: action === 'center' && !data.align || data.align === action,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, __jsx(Icon, {\n      name: ICON_MAP[action],\n      size: \"24px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    })));\n  }));\n};\n_s(AlignBlock, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n_c = AlignBlock;\nexport default AlignBlock;\nvar _c;\n$RefreshReg$(_c, \"AlignBlock\");","map":{"version":3,"names":["defineMessages","useIntl","Icon","Button","imageLeftSVG","imageRightSVG","imageFitSVG","imageWideSVG","imageFullSVG","messages","left","right","center","wide","full","AlignBlock","align","onChangeBlock","data","block","actions","intl","ICON_MAP","onAlignBlock","map","action","formatMessage"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Sidebar/AlignBlock.jsx"],"sourcesContent":["import { defineMessages, useIntl } from 'react-intl';\nimport { Icon } from '@plone/volto/components';\nimport { Button } from 'semantic-ui-react';\nimport imageLeftSVG from '@plone/volto/icons/image-left.svg';\nimport imageRightSVG from '@plone/volto/icons/image-right.svg';\nimport imageFitSVG from '@plone/volto/icons/image-fit.svg';\nimport imageWideSVG from '@plone/volto/icons/image-wide.svg';\nimport imageFullSVG from '@plone/volto/icons/image-full.svg';\n\nconst messages = defineMessages({\n  left: {\n    id: 'Left',\n    defaultMessage: 'Left',\n  },\n  right: {\n    id: 'Right',\n    defaultMessage: 'Right',\n  },\n  center: {\n    id: 'Center',\n    defaultMessage: 'Center',\n  },\n  wide: {\n    id: 'Wide',\n    defaultMessage: 'Wide',\n  },\n  full: {\n    id: 'Full',\n    defaultMessage: 'Full',\n  },\n});\n\nconst AlignBlock = ({\n  align,\n  onChangeBlock,\n  data,\n  block,\n  actions = ['left', 'right', 'center', 'full'],\n}) => {\n  const intl = useIntl();\n\n  const ICON_MAP = {\n    left: imageLeftSVG,\n    right: imageRightSVG,\n    center: imageFitSVG,\n    wide: imageWideSVG,\n    full: imageFullSVG,\n  };\n\n  function onAlignBlock(align) {\n    onChangeBlock(block, {\n      ...data,\n      align,\n    });\n  }\n\n  return (\n    <div className=\"align-buttons\">\n      {actions.map((action) => (\n        <Button.Group>\n          <Button\n            icon\n            basic\n            aria-label={intl.formatMessage(messages[action])}\n            onClick={() => onAlignBlock(action)}\n            active={\n              (action === 'center' && !data.align) || data.align === action\n            }\n          >\n            <Icon name={ICON_MAP[action]} size=\"24px\" />\n          </Button>\n        </Button.Group>\n      ))}\n    </div>\n  );\n};\n\nexport default AlignBlock;\n"],"mappings":";;;;;;AAAA,SAASA,cAAc,EAAEC,OAAO,QAAQ,YAAY;AACpD,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,OAAOC,YAAY,MAAM,mCAAmC;AAC5D,OAAOC,aAAa,MAAM,oCAAoC;AAC9D,OAAOC,WAAW,MAAM,kCAAkC;AAC1D,OAAOC,YAAY,MAAM,mCAAmC;AAC5D,OAAOC,YAAY,MAAM,mCAAmC;AAE5D,IAAMC,QAAQ,GAAGT,cAAc,CAAC;EAC9BU,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,KAAK;IAAA;IAAA;EAAA,CAGJ;EACDC,MAAM;IAAA;IAAA;EAAA,CAGL;EACDC,IAAI;IAAA;IAAA;EAAA,CAGH;EACDC,IAAI;IAAA;IAAA;EAAA;AAIN,CAAC,CAAC;AAEF,IAAMC,UAAU,GAAG,SAAbA,UAAU,OAMV;EAAA;EAAA,IALJC,KAAK,QAALA,KAAK;IACLC,aAAa,QAAbA,aAAa;IACbC,IAAI,QAAJA,IAAI;IACJC,KAAK,QAALA,KAAK;IAAA,oBACLC,OAAO;IAAPA,OAAO,6BAAG,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC;EAE7C,IAAMC,IAAI,GAAGpB,OAAO,EAAE;EAEtB,IAAMqB,QAAQ,GAAG;IACfZ,IAAI,EAAEN,YAAY;IAClBO,KAAK,EAAEN,aAAa;IACpBO,MAAM,EAAEN,WAAW;IACnBO,IAAI,EAAEN,YAAY;IAClBO,IAAI,EAAEN;EACR,CAAC;EAED,SAASe,YAAY,CAACP,KAAK,EAAE;IAC3BC,aAAa,CAACE,KAAK,kCACdD,IAAI;MACPF,KAAK,EAALA;IAAK,GACL;EACJ;EAEA,OACE;IAAK,SAAS,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC3BI,OAAO,CAACI,GAAG,CAAC,UAACC,MAAM;IAAA,OAClB,MAAC,MAAM,CAAC,KAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACX,MAAC,MAAM;MACL,IAAI;MACJ,KAAK;MACL,cAAYJ,IAAI,CAACK,aAAa,CAACjB,QAAQ,CAACgB,MAAM,CAAC,CAAE;MACjD,OAAO,EAAE;QAAA,OAAMF,YAAY,CAACE,MAAM,CAAC;MAAA,CAAC;MACpC,MAAM,EACHA,MAAM,KAAK,QAAQ,IAAI,CAACP,IAAI,CAACF,KAAK,IAAKE,IAAI,CAACF,KAAK,KAAKS,MACxD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAED,MAAC,IAAI;MAAC,IAAI,EAAEH,QAAQ,CAACG,MAAM,CAAE;MAAC,IAAI,EAAC,MAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACrC,CACI;EAAA,CAChB,CAAC,CACE;AAEV,CAAC;AAAC,GA3CIV,UAAU;EAAA,QAODd,OAAO;AAAA;AAAA,KAPhBc,UAAU;AA6ChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[{"id":"Left","defaultMessage":"Left"},{"id":"Right","defaultMessage":"Right"},{"id":"Center","defaultMessage":"Center"},{"id":"Wide","defaultMessage":"Wide"},{"id":"Full","defaultMessage":"Full"}]}},"sourceType":"module","externalDependencies":[]}