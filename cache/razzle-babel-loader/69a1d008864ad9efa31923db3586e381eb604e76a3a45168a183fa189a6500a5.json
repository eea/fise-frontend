{"ast":null,"code":"import _extends from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/extends.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _isEqual from \"lodash/isEqual\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-object-widget/src/Widget/AttachedImageWidget.jsx\";\nvar __jsx = React.createElement;\nimport loadable from '@loadable/component';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Dimmer, Loader, Message, Button, Input } from 'semantic-ui-react';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport { createContent } from '@plone/volto/actions';\nimport { flattenToAppURL, getBaseUrl, isInternalURL } from '@plone/volto/helpers';\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\nimport './style.css';\nvar Dropzone = loadable({\n  resolved: {},\n  chunkName: function chunkName() {\n    return \"react-dropzone\";\n  },\n  isReady: function isReady(props) {\n    var key = this.resolve(props);\n    if (this.resolved[key] !== true) {\n      return false;\n    }\n    if (typeof __webpack_modules__ !== 'undefined') {\n      return !!__webpack_modules__[key];\n    }\n    return false;\n  },\n  importAsync: function importAsync() {\n    return import( /* webpackChunkName: \"react-dropzone\" */'react-dropzone');\n  },\n  requireAsync: function requireAsync(props) {\n    var _this = this;\n    var key = this.resolve(props);\n    this.resolved[key] = false;\n    return this.importAsync(props).then(function (resolved) {\n      _this.resolved[key] = true;\n      return resolved;\n    });\n  },\n  requireSync: function requireSync(props) {\n    var id = this.resolve(props);\n    if (typeof __webpack_require__ !== 'undefined') {\n      return __webpack_require__(id);\n    }\n    return eval('module.require')(id);\n  },\n  resolve: function resolve() {\n    if (require.resolveWeak) {\n      return require.resolveWeak(\"react-dropzone\");\n    }\n    return eval('require.resolve')(\"react-dropzone\");\n  }\n});\n_c = Dropzone;\nvar messages = defineMessages({\n  AttachedImageWidgetInputPlaceholder: {\n    \"id\": \"Browse the site, drop an image, or type an URL\",\n    \"defaultMessage\": \"Browse the site, drop an image, or type an URL\"\n  }\n});\nexport var AttachedImageWidget = /*#__PURE__*/function (_Component) {\n  _inherits(AttachedImageWidget, _Component);\n  var _super = _createSuper(AttachedImageWidget);\n  function AttachedImageWidget() {\n    var _this2;\n    _classCallCheck(this, AttachedImageWidget);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this2), \"state\", {\n      uploading: false,\n      url: '',\n      dragging: false\n    });\n    _defineProperty(_assertThisInitialized(_this2), \"onUploadImage\", function (e) {\n      e.stopPropagation();\n      var file = e.target.files[0];\n      _this2.setState({\n        uploading: true\n      });\n      readAsDataURL(file).then(function (data) {\n        var fields = data.match(/^data:(.*);(.*),(.*)$/);\n        _this2.props.createContent(getBaseUrl(_this2.props.pathname), {\n          '@type': 'Image',\n          title: file.name,\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file.name\n          }\n        }, _this2.props.block);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this2), \"onChangeUrl\", function (_ref) {\n      var target = _ref.target;\n      _this2.setState({\n        url: target.value\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this2), \"onSubmitUrl\", function () {\n      _this2.props.onChange(_this2.props.id, flattenToAppURL(_this2.state.url));\n    });\n    _defineProperty(_assertThisInitialized(_this2), \"resetSubmitUrl\", function () {\n      _this2.setState({\n        url: ''\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this2), \"onDrop\", function (file) {\n      _this2.setState({\n        uploading: true\n      });\n      readAsDataURL(file[0]).then(function (data) {\n        var fields = data.match(/^data:(.*);(.*),(.*)$/);\n        _this2.props.createContent(getBaseUrl(_this2.props.pathname), {\n          '@type': 'Image',\n          title: file[0].name,\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file[0].name\n          }\n        }, _this2.props.block);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this2), \"onDragEnter\", function () {\n      _this2.setState({\n        dragging: true\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this2), \"onDragLeave\", function () {\n      _this2.setState({\n        dragging: false\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this2), \"node\", /*#__PURE__*/React.createRef());\n    return _this2;\n  }\n  _createClass(AttachedImageWidget, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value:\n    /**\n     * Component will receive props\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Next properties\n     * @returns {undefined}\n     */\n    function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.props.request.loading && nextProps.request.loaded && this.state.uploading) {\n        this.setState({\n          uploading: false\n        });\n        this.props.onChange(this.props.id, nextProps.content['@id']);\n      }\n    }\n\n    /**\n     * @param {*} nextProps\n     * @returns {boolean}\n     * @memberof Edit\n     */\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !_isEqual(this.props.value, nextProps.value) || !_isEqual(this.state, nextState);\n    }\n\n    /**\n     * Upload image handler (not used), but useful in case that we want a button\n     * not powered by react-dropzone\n     * @method onUploadImage\n     * @returns {undefined}\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var placeholder = this.props.placeholder || this.props.intl.formatMessage(messages.AttachedImageWidgetInputPlaceholder);\n      return __jsx(FormFieldWrapper, _extends({\n        columns: 1,\n        className: \"field-attached-image\"\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 7\n        }\n      }), __jsx(\"div\", {\n        className: \"wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }, this.props.title)), this.props.value && __jsx(\"div\", {\n        className: \"preview\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }\n      }, __jsx(\"img\", {\n        src: isInternalURL(this.props.value) ? \"\".concat(flattenToAppURL(this.props.value), \"/@@images/image/preview\") : this.props.value,\n        alt: \"Preview\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }), __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        basic: true,\n        icon: true,\n        className: \"cancel\",\n        onClick: function onClick(e) {\n          e.stopPropagation();\n          _this3.setState({\n            url: ''\n          }, function () {\n            _this3.onSubmitUrl();\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }\n      }, __jsx(Icon, {\n        name: clearSVG,\n        size: \"30px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }\n      })))), !this.props.value && __jsx(Dropzone, {\n        noClick: true,\n        onDrop: this.onDrop,\n        onDragEnter: this.onDragEnter,\n        onDragLeave: this.onDragLeave,\n        className: \"dropzone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }\n      }, function (_ref2) {\n        var getRootProps = _ref2.getRootProps,\n          getInputProps = _ref2.getInputProps;\n        return __jsx(\"div\", _extends({}, getRootProps(), {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }\n        }), __jsx(Message, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }\n        }, _this3.state.dragging && __jsx(Dimmer, {\n          active: true,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 43\n          }\n        }), _this3.state.uploading && __jsx(Dimmer, {\n          active: true,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 21\n          }\n        }, __jsx(Loader, {\n          indeterminate: true,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 23\n          }\n        }, \"Uploading image\")), __jsx(\"div\", {\n          className: \"no-image-wrapper\",\n          style: {\n            textAlign: 'center'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 19\n          }\n        }, __jsx(\"img\", {\n          src: imageBlockSVG,\n          alt: \"\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 21\n          }\n        }), __jsx(\"div\", {\n          className: \"toolbar-inner\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 21\n          }\n        }, __jsx(Button.Group, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 23\n          }\n        }, __jsx(Button, {\n          basic: true,\n          icon: true,\n          onClick: function onClick(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            _this3.props.openObjectBrowser({\n              mode: 'image',\n              currentPath: _this3.props.pathname,\n              onSelectItem: function onSelectItem(url) {\n                _this3.setState({\n                  url: url\n                });\n              }\n            });\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }\n        }, __jsx(Icon, {\n          name: navTreeSVG,\n          size: \"24px\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 27\n          }\n        })), __jsx(Button, {\n          as: \"label\",\n          basic: true,\n          icon: true,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }\n        }, __jsx(Icon, {\n          name: uploadSVG,\n          size: \"24px\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 27\n          }\n        }), __jsx(\"input\", _extends({}, getInputProps({\n          type: 'file',\n          onChange: _this3.onUploadImage,\n          style: {\n            display: 'none'\n          }\n        }), {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 27\n          }\n        })))), __jsx(\"div\", {\n          style: {\n            flexGrow: 1\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 23\n          }\n        }), __jsx(Input, {\n          onChange: _this3.onChangeUrl,\n          placeholder: placeholder,\n          value: _this3.state.url,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 23\n          }\n        }), __jsx(\"div\", {\n          style: {\n            flexGrow: 1\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 23\n          }\n        }), __jsx(Button.Group, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 23\n          }\n        }, _this3.state.url && __jsx(Button, {\n          basic: true,\n          icon: true,\n          secondary: true,\n          className: \"cancel\",\n          onClick: function onClick(e) {\n            e.stopPropagation();\n            _this3.setState({\n              url: ''\n            });\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 27\n          }\n        }, __jsx(Icon, {\n          name: clearSVG,\n          size: \"24px\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }\n        })), __jsx(Button, {\n          basic: true,\n          icon: true,\n          primary: true,\n          disabled: !_this3.state.url,\n          onClick: function onClick(e) {\n            e.stopPropagation();\n            _this3.onSubmitUrl();\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }\n        }, __jsx(Icon, {\n          name: aheadSVG,\n          size: \"24px\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 27\n          }\n        })))))));\n      }));\n    }\n  }]);\n  return AttachedImageWidget;\n}(Component);\n_defineProperty(AttachedImageWidget, \"propTypes\", {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  value: PropTypes.any,\n  block: PropTypes.string.isRequired,\n  request: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  pathname: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  openObjectBrowser: PropTypes.func.isRequired\n});\nexport default compose(injectIntl, withObjectBrowser, connect(function (state, props) {\n  var _state$content$subreq;\n  return {\n    pathname: state.router.location.pathname,\n    request: state.content.subrequests[props.block] || {},\n    content: (_state$content$subreq = state.content.subrequests[props.block]) === null || _state$content$subreq === void 0 ? void 0 : _state$content$subreq.data\n  };\n}, {\n  createContent: createContent\n}))(AttachedImageWidget);\nvar _c;\n$RefreshReg$(_c, \"Dropzone\");","map":{"version":3,"names":["loadable","PropTypes","React","Component","connect","compose","readAsDataURL","defineMessages","injectIntl","Dimmer","Loader","Message","Button","Input","FormFieldWrapper","Icon","withObjectBrowser","createContent","flattenToAppURL","getBaseUrl","isInternalURL","imageBlockSVG","clearSVG","navTreeSVG","aheadSVG","uploadSVG","Dropzone","messages","AttachedImageWidgetInputPlaceholder","AttachedImageWidget","uploading","url","dragging","e","stopPropagation","file","target","files","setState","then","data","fields","match","props","pathname","title","name","image","encoding","filename","block","value","onChange","id","state","createRef","nextProps","request","loading","loaded","content","nextState","placeholder","intl","formatMessage","onSubmitUrl","onDrop","onDragEnter","onDragLeave","getRootProps","getInputProps","textAlign","preventDefault","openObjectBrowser","mode","currentPath","onSelectItem","type","onUploadImage","style","display","flexGrow","onChangeUrl","string","any","isRequired","shape","bool","func","router","location","subrequests"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-object-widget/src/Widget/AttachedImageWidget.jsx"],"sourcesContent":["import { isEqual } from 'lodash';\nimport loadable from '@loadable/component';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { readAsDataURL } from 'promise-file-reader';\n\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Dimmer, Loader, Message, Button, Input } from 'semantic-ui-react';\nimport { FormFieldWrapper, Icon } from '@plone/volto/components';\nimport withObjectBrowser from '@plone/volto/components/manage/Sidebar/ObjectBrowser';\nimport { createContent } from '@plone/volto/actions';\nimport {\n  flattenToAppURL,\n  getBaseUrl,\n  isInternalURL,\n} from '@plone/volto/helpers';\n\nimport imageBlockSVG from '@plone/volto/components/manage/Blocks/Image/block-image.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport navTreeSVG from '@plone/volto/icons/nav.svg';\nimport aheadSVG from '@plone/volto/icons/ahead.svg';\nimport uploadSVG from '@plone/volto/icons/upload.svg';\n\nimport './style.css';\n\nconst Dropzone = loadable(() => import('react-dropzone'));\n\nconst messages = defineMessages({\n  AttachedImageWidgetInputPlaceholder: {\n    id: 'Browse the site, drop an image, or type an URL',\n    defaultMessage: 'Browse the site, drop an image, or type an URL',\n  },\n});\n\nexport class AttachedImageWidget extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    id: PropTypes.string,\n    title: PropTypes.string,\n    value: PropTypes.any,\n    block: PropTypes.string.isRequired,\n    request: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    pathname: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    openObjectBrowser: PropTypes.func.isRequired,\n  };\n\n  state = {\n    uploading: false,\n    url: '',\n    dragging: false,\n  };\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.request.loading &&\n      nextProps.request.loaded &&\n      this.state.uploading\n    ) {\n      this.setState({\n        uploading: false,\n      });\n      this.props.onChange(this.props.id, nextProps.content['@id']);\n    }\n  }\n\n  /**\n   * @param {*} nextProps\n   * @returns {boolean}\n   * @memberof Edit\n   */\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      !isEqual(this.props.value, nextProps.value) ||\n      !isEqual(this.state, nextState)\n    );\n  }\n\n  /**\n   * Upload image handler (not used), but useful in case that we want a button\n   * not powered by react-dropzone\n   * @method onUploadImage\n   * @returns {undefined}\n   */\n  onUploadImage = (e) => {\n    e.stopPropagation();\n    const file = e.target.files[0];\n    this.setState({\n      uploading: true,\n    });\n    readAsDataURL(file).then((data) => {\n      const fields = data.match(/^data:(.*);(.*),(.*)$/);\n      this.props.createContent(\n        getBaseUrl(this.props.pathname),\n        {\n          '@type': 'Image',\n          title: file.name,\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file.name,\n          },\n        },\n        this.props.block,\n      );\n    });\n  };\n\n  /**\n   * Change url handler\n   * @method onChangeUrl\n   * @param {Object} target Target object\n   * @returns {undefined}\n   */\n  onChangeUrl = ({ target }) => {\n    this.setState({\n      url: target.value,\n    });\n  };\n\n  /**\n   * Submit url handler\n   * @method onSubmitUrl\n   * @param {object} e Event\n   * @returns {undefined}\n   */\n  onSubmitUrl = () => {\n    this.props.onChange(this.props.id, flattenToAppURL(this.state.url));\n  };\n\n  resetSubmitUrl = () => {\n    this.setState({\n      url: '',\n    });\n  };\n\n  /**\n   * Drop handler\n   * @method onDrop\n   * @param {array} files File objects\n   * @returns {undefined}\n   */\n  onDrop = (file) => {\n    this.setState({\n      uploading: true,\n    });\n\n    readAsDataURL(file[0]).then((data) => {\n      const fields = data.match(/^data:(.*);(.*),(.*)$/);\n      this.props.createContent(\n        getBaseUrl(this.props.pathname),\n        {\n          '@type': 'Image',\n          title: file[0].name,\n          image: {\n            data: fields[3],\n            encoding: fields[2],\n            'content-type': fields[1],\n            filename: file[0].name,\n          },\n        },\n        this.props.block,\n      );\n    });\n  };\n\n  onDragEnter = () => {\n    this.setState({ dragging: true });\n  };\n\n  onDragLeave = () => {\n    this.setState({ dragging: false });\n  };\n\n  node = React.createRef();\n\n  render() {\n    const placeholder =\n      this.props.placeholder ||\n      this.props.intl.formatMessage(\n        messages.AttachedImageWidgetInputPlaceholder,\n      );\n\n    return (\n      <FormFieldWrapper\n        columns={1}\n        className=\"field-attached-image\"\n        {...this.props}\n      >\n        <div className=\"wrapper\">\n          <label>{this.props.title}</label>\n        </div>\n        {this.props.value && (\n          <div className=\"preview\">\n            <img\n              src={\n                isInternalURL(this.props.value)\n                  ? `${flattenToAppURL(\n                      this.props.value,\n                    )}/@@images/image/preview`\n                  : this.props.value\n              }\n              alt=\"Preview\"\n            />\n            <Button.Group>\n              <Button\n                basic\n                icon\n                className=\"cancel\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  this.setState({ url: '' }, () => {\n                    this.onSubmitUrl();\n                  });\n                }}\n              >\n                <Icon name={clearSVG} size=\"30px\" />\n              </Button>\n            </Button.Group>\n          </div>\n        )}\n        {!this.props.value && (\n          <Dropzone\n            noClick\n            onDrop={this.onDrop}\n            onDragEnter={this.onDragEnter}\n            onDragLeave={this.onDragLeave}\n            className=\"dropzone\"\n          >\n            {({ getRootProps, getInputProps }) => (\n              <div {...getRootProps()}>\n                <Message>\n                  {this.state.dragging && <Dimmer active></Dimmer>}\n                  {this.state.uploading && (\n                    <Dimmer active>\n                      <Loader indeterminate>Uploading image</Loader>\n                    </Dimmer>\n                  )}\n                  <div\n                    className=\"no-image-wrapper\"\n                    style={{ textAlign: 'center' }}\n                  >\n                    <img src={imageBlockSVG} alt=\"\" />\n                    <div className=\"toolbar-inner\">\n                      <Button.Group>\n                        <Button\n                          basic\n                          icon\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            e.preventDefault();\n                            this.props.openObjectBrowser({\n                              mode: 'image',\n                              currentPath: this.props.pathname,\n                              onSelectItem: (url) => {\n                                this.setState({ url });\n                              },\n                            });\n                          }}\n                        >\n                          <Icon name={navTreeSVG} size=\"24px\" />\n                        </Button>\n                        <Button as=\"label\" basic icon>\n                          <Icon name={uploadSVG} size=\"24px\" />\n                          <input\n                            {...getInputProps({\n                              type: 'file',\n                              onChange: this.onUploadImage,\n                              style: { display: 'none' },\n                            })}\n                          />\n                        </Button>\n                      </Button.Group>\n                      <div style={{ flexGrow: 1 }} />\n                      <Input\n                        onChange={this.onChangeUrl}\n                        placeholder={placeholder}\n                        value={this.state.url}\n                      />\n                      <div style={{ flexGrow: 1 }} />\n                      <Button.Group>\n                        {this.state.url && (\n                          <Button\n                            basic\n                            icon\n                            secondary\n                            className=\"cancel\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              this.setState({ url: '' });\n                            }}\n                          >\n                            <Icon name={clearSVG} size=\"24px\" />\n                          </Button>\n                        )}\n                        <Button\n                          basic\n                          icon\n                          primary\n                          disabled={!this.state.url}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            this.onSubmitUrl();\n                          }}\n                        >\n                          <Icon name={aheadSVG} size=\"24px\" />\n                        </Button>\n                      </Button.Group>\n                    </div>\n                  </div>\n                </Message>\n              </div>\n            )}\n          </Dropzone>\n        )}\n      </FormFieldWrapper>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  withObjectBrowser,\n  connect(\n    (state, props) => ({\n      pathname: state.router.location.pathname,\n      request: state.content.subrequests[props.block] || {},\n      content: state.content.subrequests[props.block]?.data,\n    }),\n    {\n      createContent,\n    },\n  ),\n)(AttachedImageWidget);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Browse the site, drop an image, or type an URL","defaultMessage":"Browse the site, drop an image, or type an URL"}]}},"sourceType":"module","externalDependencies":[]}