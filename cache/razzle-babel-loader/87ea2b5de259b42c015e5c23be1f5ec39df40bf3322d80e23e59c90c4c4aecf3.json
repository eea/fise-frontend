{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/components/UniversalCard/CardImage.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { ConditionalLink } from '@plone/volto/components';\nimport PreviewImage from '@eeacms/volto-listing-block/PreviewImage';\nvar getLabel = function getLabel(props) {\n  // { text: 'new', side: 'left', color: 'green' }\n  var item = props.item,\n    _props$itemModel = props.itemModel,\n    itemModel = _props$itemModel === void 0 ? {} : _props$itemModel;\n  var text = item.isNew ? 'New' : item.isExpired ? 'Archived' : null;\n  return itemModel !== null && itemModel !== void 0 && itemModel.hasLabel && text ? {\n    text: text,\n    side: 'left',\n    // TODO: set the colors from css?\n    color: item.review_state === 'archived' ? 'yellow' : 'green'\n  } : null;\n};\nvar CardImage = function CardImage(props) {\n  var item = props.item,\n    isEditMode = props.isEditMode,\n    preview_image = props.preview_image;\n  var label = getLabel(props);\n  return __jsx(ConditionalLink, {\n    className: \"image\",\n    item: item,\n    condition: !isEditMode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, !isEditMode ? __jsx(PreviewImage, {\n    item: item,\n    preview_image: preview_image,\n    alt: item.title,\n    label: label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }) : __jsx(\"div\", {\n    className: 'image',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(PreviewImage, {\n    item: item,\n    preview_image: preview_image,\n    alt: item.title,\n    label: label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })));\n};\n_c = CardImage;\nexport default CardImage;\nvar _c;\n$RefreshReg$(_c, \"CardImage\");","map":{"version":3,"names":["React","ConditionalLink","PreviewImage","getLabel","props","item","itemModel","text","isNew","isExpired","hasLabel","side","color","review_state","CardImage","isEditMode","preview_image","label","title"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@eeacms/volto-listing-block/src/components/UniversalCard/CardImage.jsx"],"sourcesContent":["import React from 'react';\nimport { ConditionalLink } from '@plone/volto/components';\n\nimport PreviewImage from '@eeacms/volto-listing-block/PreviewImage';\n\nconst getLabel = (props) => {\n  // { text: 'new', side: 'left', color: 'green' }\n  const { item, itemModel = {} } = props;\n  const text = item.isNew ? 'New' : item.isExpired ? 'Archived' : null;\n\n  return itemModel?.hasLabel && text\n    ? {\n        text,\n        side: 'left',\n        // TODO: set the colors from css?\n        color: item.review_state === 'archived' ? 'yellow' : 'green',\n      }\n    : null;\n};\n\nconst CardImage = (props) => {\n  const { item, isEditMode, preview_image } = props;\n  const label = getLabel(props);\n\n  return (\n    <ConditionalLink className=\"image\" item={item} condition={!isEditMode}>\n      {!isEditMode ? (\n        <PreviewImage\n          item={item}\n          preview_image={preview_image}\n          alt={item.title}\n          label={label}\n        />\n      ) : (\n        <div className={'image'}>\n          <PreviewImage\n            item={item}\n            preview_image={preview_image}\n            alt={item.title}\n            label={label}\n          />\n        </div>\n      )}\n    </ConditionalLink>\n  );\n};\n\nexport default CardImage;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,yBAAyB;AAEzD,OAAOC,YAAY,MAAM,0CAA0C;AAEnE,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,KAAK,EAAK;EAC1B;EACA,IAAQC,IAAI,GAAqBD,KAAK,CAA9BC,IAAI;IAAA,mBAAqBD,KAAK,CAAxBE,SAAS;IAATA,SAAS,iCAAG,CAAC,CAAC;EAC5B,IAAMC,IAAI,GAAGF,IAAI,CAACG,KAAK,GAAG,KAAK,GAAGH,IAAI,CAACI,SAAS,GAAG,UAAU,GAAG,IAAI;EAEpE,OAAOH,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEI,QAAQ,IAAIH,IAAI,GAC9B;IACEA,IAAI,EAAJA,IAAI;IACJI,IAAI,EAAE,MAAM;IACZ;IACAC,KAAK,EAAEP,IAAI,CAACQ,YAAY,KAAK,UAAU,GAAG,QAAQ,GAAG;EACvD,CAAC,GACD,IAAI;AACV,CAAC;AAED,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAIV,KAAK,EAAK;EAC3B,IAAQC,IAAI,GAAgCD,KAAK,CAAzCC,IAAI;IAAEU,UAAU,GAAoBX,KAAK,CAAnCW,UAAU;IAAEC,aAAa,GAAKZ,KAAK,CAAvBY,aAAa;EACvC,IAAMC,KAAK,GAAGd,QAAQ,CAACC,KAAK,CAAC;EAE7B,OACE,MAAC,eAAe;IAAC,SAAS,EAAC,OAAO;IAAC,IAAI,EAAEC,IAAK;IAAC,SAAS,EAAE,CAACU,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACnE,CAACA,UAAU,GACV,MAAC,YAAY;IACX,IAAI,EAAEV,IAAK;IACX,aAAa,EAAEW,aAAc;IAC7B,GAAG,EAAEX,IAAI,CAACa,KAAM;IAChB,KAAK,EAAED,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACb,GAEF;IAAK,SAAS,EAAE,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACtB,MAAC,YAAY;IACX,IAAI,EAAEZ,IAAK;IACX,aAAa,EAAEW,aAAc;IAC7B,GAAG,EAAEX,IAAI,CAACa,KAAM;IAChB,KAAK,EAAED,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACb,CAEL,CACe;AAEtB,CAAC;AAAC,KAzBIH,SAAS;AA2Bf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}