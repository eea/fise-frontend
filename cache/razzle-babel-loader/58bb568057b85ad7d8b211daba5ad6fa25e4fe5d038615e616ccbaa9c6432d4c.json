{"ast":null,"code":"import _objectSpread from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/home/tooler/code/work/forests-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Comments/Comments.jsx\";\nvar __jsx = React.createElement;\n/**\n * Comments components.\n * @module components/theme/Comments/Comments\n */\n\nimport { addComment, deleteComment, listComments, listMoreComments } from '@plone/volto/actions';\nimport { Avatar, CommentEditModal, Form } from '@plone/volto/components';\nimport { flattenToAppURL, getBaseUrl, getColor } from '@plone/volto/helpers';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Button, Comment, Container, Icon } from 'semantic-ui-react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n// import { Button, Grid, Segment, Container } from 'semantic-ui-react';\n\nvar messages = defineMessages({\n  comment: {\n    \"id\": \"Comment\",\n    \"defaultMessage\": \"Comment\"\n  },\n  comments: {\n    \"id\": \"Comments\",\n    \"defaultMessage\": \"Comments\"\n  },\n  commentDescription: {\n    \"id\": \"You can add a comment by filling out the form below. Plain text formatting.\",\n    \"defaultMessage\": \"You can add a comment by filling out the form below. Plain text formatting.\"\n  },\n  \"default\": {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  \"delete\": {\n    \"id\": \"Delete\",\n    \"defaultMessage\": \"Delete\"\n  },\n  edit: {\n    \"id\": \"Edit\",\n    \"defaultMessage\": \"Edit\"\n  },\n  reply: {\n    \"id\": \"Reply\",\n    \"defaultMessage\": \"Reply\"\n  },\n  hideReplies: {\n    \"id\": \"Hide Replies\",\n    \"defaultMessage\": \"Hide Replies\"\n  },\n  showReplies: {\n    \"id\": \"Show Replies\",\n    \"defaultMessage\": \"Show Replies\"\n  },\n  loadMoreComments: {\n    \"id\": \"Load more\",\n    \"defaultMessage\": \"Load more...\"\n  }\n});\n/**\n * Schema for the Form components to show an input field with it's label\n * @param {Object} intl\n */\nvar makeFormSchema = function makeFormSchema(intl) {\n  return {\n    fieldsets: [{\n      fields: ['comment'],\n      id: 'default',\n      title: intl.formatMessage(messages[\"default\"])\n    }],\n    properties: {\n      comment: {\n        title: intl.formatMessage(messages.comment),\n        type: 'string',\n        widget: 'textarea'\n      }\n    },\n    required: ['comment1']\n  };\n};\n\n/**\n * Comments container class.\n * @class Comments\n * @extends Component\n */\nvar Comments = /*#__PURE__*/function (_Component) {\n  _inherits(Comments, _Component);\n  var _super = _createSuper(Comments);\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Comments\n   */\n  function Comments(props) {\n    var _this;\n    _classCallCheck(this, Comments);\n    _this = _super.call(this, props);\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.onDelete = _this.onDelete.bind(_assertThisInitialized(_this));\n    _this.onEdit = _this.onEdit.bind(_assertThisInitialized(_this));\n    _this.onEditOk = _this.onEditOk.bind(_assertThisInitialized(_this));\n    _this.onEditCancel = _this.onEditCancel.bind(_assertThisInitialized(_this));\n    _this.setReplyTo = _this.setReplyTo.bind(_assertThisInitialized(_this));\n    _this.loadMoreComments = _this.loadMoreComments.bind(_assertThisInitialized(_this));\n    _this.state = {\n      showEdit: false,\n      editId: null,\n      editText: null,\n      replyTo: null,\n      collapsedComments: {}\n    };\n    return _this;\n  }\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.listComments(getBaseUrl(this.props.pathname));\n    }\n\n    /**\n     * Component will receive props\n     * @method componentWillReceiveProps\n     * @param {Object} nextProps Next properties\n     * @returns {undefined}\n     */\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.pathname !== this.props.pathname || this.props.addRequest.loading && nextProps.addRequest.loaded || this.props.deleteRequest.loading && nextProps.deleteRequest.loaded) {\n        this.props.listComments(getBaseUrl(nextProps.pathname));\n      }\n    }\n\n    /**\n     * Submit handler\n     * @method onSubmit\n     * @param {Object} formData Form data.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(formData) {\n      this.props.addComment(getBaseUrl(this.props.pathname), formData.comment, this.state.replyTo);\n      this.setState({\n        replyTo: null\n      });\n    }\n\n    /**\n     * The id of the comment that will receive a reply\n     * @param {string} commentId\n     */\n  }, {\n    key: \"setReplyTo\",\n    value: function setReplyTo(commentId) {\n      this.setState({\n        replyTo: commentId\n      });\n    }\n\n    /**\n     * Calls the action listMoreComments passing the received url for next array of comments\n     */\n  }, {\n    key: \"loadMoreComments\",\n    value: function loadMoreComments() {\n      this.props.listMoreComments(this.props.next);\n    }\n\n    /**\n     * Delete handler\n     * @method onDelete\n     * @param {Object} event Event object.\n     * @param {string} value Delete value.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onDelete\",\n    value: function onDelete(value) {\n      this.props.deleteComment(value);\n    }\n\n    /**\n     * Will hide all replies to the specific comment\n     * including replies to any of the replies\n     * @param {string} commentId\n     */\n  }, {\n    key: \"hideReply\",\n    value: function hideReply(commentId) {\n      this.setState(function (prevState) {\n        var hasComment = prevState.collapsedComments[commentId];\n        var collapsedComments = prevState.collapsedComments;\n        return {\n          collapsedComments: _objectSpread(_objectSpread({}, collapsedComments), {}, _defineProperty({}, commentId, !hasComment))\n        };\n      });\n    }\n\n    /**\n     * Edit handler\n     * @method onEdit\n     * @param {Object} event Event object.\n     * @param {string} value Delete value.\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onEdit\",\n    value: function onEdit(value) {\n      this.setState({\n        showEdit: true,\n        editId: value.id,\n        editText: value.text\n      });\n    }\n\n    /**\n     * On edit ok\n     * @method onEditOk\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onEditOk\",\n    value: function onEditOk() {\n      this.setState({\n        showEdit: false,\n        editId: null,\n        editText: null\n      });\n      this.props.listComments(getBaseUrl(this.props.pathname));\n    }\n\n    /**\n     * On edit cancel\n     * @method onEditCancel\n     * @returns {undefined}\n     */\n  }, {\n    key: \"onEditCancel\",\n    value: function onEditCancel(ev) {\n      this.setState({\n        showEdit: false,\n        editId: null,\n        editText: null,\n        replyTo: null\n      });\n    }\n  }, {\n    key: \"addRepliesAsChildrenToComments\",\n    value: function addRepliesAsChildrenToComments(items) {\n      var initialValue = {};\n      var allCommentsWithCildren = items.reduce(function (accumulator, item) {\n        return _objectSpread(_defineProperty({}, item.comment_id, {\n          comment: item,\n          children: []\n        }), accumulator);\n      }, initialValue);\n      items.forEach(function (comment) {\n        if (comment.in_reply_to) {\n          allCommentsWithCildren[comment.in_reply_to].children.push(comment);\n        }\n      });\n      return allCommentsWithCildren;\n    }\n\n    /**\n     * Render method.\n     * @method render\n     * @returns {string} Markup for the component.\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var items = this.props.items;\n      var moment = this.props.moment[\"default\"];\n      var collapsedComments = this.state.collapsedComments;\n      // object with comment ids, to easily verify if any comment has children\n      var allCommentsWithCildren = this.addRepliesAsChildrenToComments(items);\n      // all comments that are not a reply will be shown in the first iteration\n      var allPrimaryComments = items.filter(function (comment) {\n        return !comment.in_reply_to;\n      });\n\n      // recursively makes comments with their replies nested\n      // each iteration will show replies to the specific comment using allCommentsWithCildren\n      var commentElement = function commentElement(comment) {\n        return __jsx(Comment, {\n          key: comment.comment_id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 7\n          }\n        }, __jsx(Avatar, {\n          src: comment.author_image,\n          title: comment.author_name || 'Anonymous',\n          color: getColor(comment.author_username),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 9\n          }\n        }), __jsx(Comment.Content, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 9\n          }\n        }, __jsx(Comment.Author, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 11\n          }\n        }, comment.author_name), __jsx(Comment.Metadata, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 11\n          }\n        }, __jsx(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }\n        }, ' ', __jsx(\"span\", {\n          title: moment(comment.creation_date).format('LLLL'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }\n        }, moment(comment.creation_date).fromNow()))), __jsx(Comment.Text, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 11\n          }\n        }, ' ', comment.text['mime-type'] === 'text/html' ? __jsx(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: comment.text.data\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }\n        }) : comment.text.data), __jsx(Comment.Actions, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 11\n          }\n        }, __jsx(Comment.Action, {\n          as: \"a\",\n          \"aria-label\": _this2.props.intl.formatMessage(messages.reply),\n          onClick: function onClick() {\n            return _this2.setReplyTo(comment.comment_id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }\n        }, __jsx(FormattedMessage, {\n          id: \"Reply\",\n          defaultMessage: \"Reply\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }\n        })), comment.is_editable && __jsx(Comment.Action, {\n          onClick: function onClick() {\n            return _this2.onEdit({\n              id: flattenToAppURL(comment['@id']),\n              text: comment.text.data\n            });\n          },\n          \"aria-label\": _this2.props.intl.formatMessage(messages.edit),\n          value: {\n            id: flattenToAppURL(comment['@id']),\n            text: comment.text.data\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }\n        }, __jsx(FormattedMessage, {\n          id: \"Edit\",\n          defaultMessage: \"Edit\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }\n        })), comment.is_deletable && __jsx(Comment.Action, {\n          \"aria-label\": _this2.props.intl.formatMessage(messages[\"delete\"]),\n          onClick: function onClick() {\n            return _this2.onDelete(flattenToAppURL(comment['@id']));\n          },\n          color: \"red\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }\n        }, __jsx(Icon, {\n          name: \"delete\",\n          color: \"red\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }\n        }), __jsx(FormattedMessage, {\n          id: \"Delete\",\n          defaultMessage: \"Delete\",\n          color: \"red\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }\n        })), __jsx(Comment.Action, {\n          as: \"a\",\n          onClick: function onClick() {\n            return _this2.hideReply(comment.comment_id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }\n        }, allCommentsWithCildren[comment.comment_id].children.length > 0 ? _this2.state.collapsedComments[comment.comment_id] ? __jsx(React.Fragment, null, __jsx(Icon, {\n          name: \"eye\",\n          color: \"blue\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 21\n          }\n        }), __jsx(FormattedMessage, {\n          id: \"Show Replies\",\n          defaultMessage: \"Show Replies\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 21\n          }\n        })) : __jsx(React.Fragment, null, __jsx(Icon, {\n          name: \"minus\",\n          color: \"blue\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 21\n          }\n        }), __jsx(FormattedMessage, {\n          id: \"Hide Replies\",\n          defaultMessage: \"Hide Replies\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 21\n          }\n        })) : null)), __jsx(\"div\", {\n          id: \"reply-place-\".concat(comment.comment_id),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 11\n          }\n        })), allCommentsWithCildren[comment.comment_id].children.length > 0 ? allCommentsWithCildren[comment.comment_id].children.map(function (child, index) {\n          return __jsx(Comment.Group, {\n            collapsed: collapsedComments[comment.comment_id],\n            key: \"group-\".concat(index, \"-\").concat(comment.comment_id),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }\n          }, commentElement(child));\n        }) : null);\n      };\n      return __jsx(Container, {\n        className: \"comments\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 7\n        }\n      }, __jsx(CommentEditModal, {\n        open: this.state.showEdit,\n        onCancel: this.onEditCancel,\n        onOk: this.onEditOk,\n        id: this.state.editId,\n        text: this.state.editText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 9\n        }\n      }), __jsx(\"div\", {\n        id: \"comment-add-id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 9\n        }\n      }, __jsx(Form, {\n        onSubmit: this.onSubmit,\n        onCancel: this.onEditCancel,\n        submitLabel: this.props.intl.formatMessage(messages.comment),\n        resetAfterSubmit: true,\n        schema: makeFormSchema(this.props.intl),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }\n      })), __jsx(Comment.Group, {\n        threaded: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 9\n        }\n      }, allPrimaryComments.map(function (item) {\n        return commentElement(item);\n      })), this.props.items_total > this.props.items.length && __jsx(Button, {\n        fluid: true,\n        basic: true,\n        color: \"blue\",\n        onClick: this.loadMoreComments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }\n      }, __jsx(FormattedMessage, {\n        id: \"Load more\",\n        defaultMessage: \"Load more...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }\n      })), this.state.replyTo && __jsx(Portal, {\n        node: document && document.getElementById(\"reply-place-\".concat(this.state.replyTo)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }\n      }, __jsx(Form, {\n        onSubmit: this.onSubmit,\n        onCancel: this.onEditCancel,\n        submitLabel: this.props.intl.formatMessage(messages.comment),\n        resetAfterSubmit: true,\n        schema: makeFormSchema(this.props.intl),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n  return Comments;\n}(Component);\n_defineProperty(Comments, \"propTypes\", {\n  addComment: PropTypes.func.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n  listComments: PropTypes.func.isRequired,\n  listMoreComments: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    author_name: PropTypes.string,\n    creation_date: PropTypes.string,\n    text: PropTypes.shape({\n      data: PropTypes.string,\n      'mime-type': PropTypes.string\n    }),\n    is_deletable: PropTypes.bool,\n    is_editable: PropTypes.bool\n  })).isRequired,\n  addRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  deleteRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired\n});\nexport default compose(injectIntl, injectLazyLibs(['moment']), connect(function (state) {\n  return {\n    items: state.comments.items,\n    next: state.comments.next,\n    items_total: state.comments.items_total,\n    addRequest: state.comments.add,\n    deleteRequest: state.comments[\"delete\"]\n  };\n}, {\n  addComment: addComment,\n  deleteComment: deleteComment,\n  listComments: listComments,\n  listMoreComments: listMoreComments\n}))(Comments);","map":{"version":3,"names":["addComment","deleteComment","listComments","listMoreComments","Avatar","CommentEditModal","Form","flattenToAppURL","getBaseUrl","getColor","PropTypes","React","Component","defineMessages","FormattedMessage","injectIntl","Portal","connect","compose","Button","Comment","Container","Icon","injectLazyLibs","messages","comment","comments","commentDescription","edit","reply","hideReplies","showReplies","loadMoreComments","makeFormSchema","intl","fieldsets","fields","id","title","formatMessage","properties","type","widget","required","Comments","props","onSubmit","bind","onDelete","onEdit","onEditOk","onEditCancel","setReplyTo","state","showEdit","editId","editText","replyTo","collapsedComments","pathname","nextProps","addRequest","loading","loaded","deleteRequest","formData","setState","commentId","next","value","prevState","hasComment","text","ev","items","initialValue","allCommentsWithCildren","reduce","accumulator","item","comment_id","children","forEach","in_reply_to","push","moment","addRepliesAsChildrenToComments","allPrimaryComments","filter","commentElement","author_image","author_name","author_username","creation_date","format","fromNow","__html","data","is_editable","is_deletable","hideReply","length","map","child","index","items_total","document","getElementById","func","isRequired","string","arrayOf","shape","bool","add"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Comments/Comments.jsx"],"sourcesContent":["/**\n * Comments components.\n * @module components/theme/Comments/Comments\n */\n\nimport {\n  addComment,\n  deleteComment,\n  listComments,\n  listMoreComments,\n} from '@plone/volto/actions';\nimport { Avatar, CommentEditModal, Form } from '@plone/volto/components';\nimport { flattenToAppURL, getBaseUrl, getColor } from '@plone/volto/helpers';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Button, Comment, Container, Icon } from 'semantic-ui-react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n// import { Button, Grid, Segment, Container } from 'semantic-ui-react';\n\nconst messages = defineMessages({\n  comment: {\n    id: 'Comment',\n    defaultMessage: 'Comment',\n  },\n  comments: {\n    id: 'Comments',\n    defaultMessage: 'Comments',\n  },\n  commentDescription: {\n    id:\n      'You can add a comment by filling out the form below. Plain text formatting.',\n    defaultMessage:\n      'You can add a comment by filling out the form below. Plain text formatting.',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n  edit: {\n    id: 'Edit',\n    defaultMessage: 'Edit',\n  },\n  reply: {\n    id: 'Reply',\n    defaultMessage: 'Reply',\n  },\n  hideReplies: {\n    id: 'Hide Replies',\n    defaultMessage: 'Hide Replies',\n  },\n  showReplies: {\n    id: 'Show Replies',\n    defaultMessage: 'Show Replies',\n  },\n  loadMoreComments: {\n    id: 'Load more',\n    defaultMessage: 'Load more...',\n  },\n});\n/**\n * Schema for the Form components to show an input field with it's label\n * @param {Object} intl\n */\nconst makeFormSchema = (intl) => ({\n  fieldsets: [\n    {\n      fields: ['comment'],\n      id: 'default',\n      title: intl.formatMessage(messages.default),\n    },\n  ],\n  properties: {\n    comment: {\n      title: intl.formatMessage(messages.comment),\n      type: 'string',\n      widget: 'textarea',\n    },\n  },\n  required: ['comment1'],\n});\n\n/**\n * Comments container class.\n * @class Comments\n * @extends Component\n */\nclass Comments extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    addComment: PropTypes.func.isRequired,\n    deleteComment: PropTypes.func.isRequired,\n    listComments: PropTypes.func.isRequired,\n    listMoreComments: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        author_name: PropTypes.string,\n        creation_date: PropTypes.string,\n        text: PropTypes.shape({\n          data: PropTypes.string,\n          'mime-type': PropTypes.string,\n        }),\n        is_deletable: PropTypes.bool,\n        is_editable: PropTypes.bool,\n      }),\n    ).isRequired,\n    addRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    deleteRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Comments\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onEditOk = this.onEditOk.bind(this);\n    this.onEditCancel = this.onEditCancel.bind(this);\n    this.setReplyTo = this.setReplyTo.bind(this);\n    this.loadMoreComments = this.loadMoreComments.bind(this);\n    this.state = {\n      showEdit: false,\n      editId: null,\n      editText: null,\n      replyTo: null,\n      collapsedComments: {},\n    };\n  }\n\n  componentDidMount() {\n    this.props.listComments(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.pathname !== this.props.pathname ||\n      (this.props.addRequest.loading && nextProps.addRequest.loaded) ||\n      (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded)\n    ) {\n      this.props.listComments(getBaseUrl(nextProps.pathname));\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} formData Form data.\n   * @returns {undefined}\n   */\n  onSubmit(formData) {\n    this.props.addComment(\n      getBaseUrl(this.props.pathname),\n      formData.comment,\n      this.state.replyTo,\n    );\n    this.setState({ replyTo: null });\n  }\n\n  /**\n   * The id of the comment that will receive a reply\n   * @param {string} commentId\n   */\n  setReplyTo(commentId) {\n    this.setState({ replyTo: commentId });\n  }\n\n  /**\n   * Calls the action listMoreComments passing the received url for next array of comments\n   */\n  loadMoreComments() {\n    this.props.listMoreComments(this.props.next);\n  }\n\n  /**\n   * Delete handler\n   * @method onDelete\n   * @param {Object} event Event object.\n   * @param {string} value Delete value.\n   * @returns {undefined}\n   */\n  onDelete(value) {\n    this.props.deleteComment(value);\n  }\n\n  /**\n   * Will hide all replies to the specific comment\n   * including replies to any of the replies\n   * @param {string} commentId\n   */\n  hideReply(commentId) {\n    this.setState((prevState) => {\n      const hasComment = prevState.collapsedComments[commentId];\n      const { collapsedComments } = prevState;\n\n      return {\n        collapsedComments: {\n          ...collapsedComments,\n          [commentId]: !hasComment,\n        },\n      };\n    });\n  }\n\n  /**\n   * Edit handler\n   * @method onEdit\n   * @param {Object} event Event object.\n   * @param {string} value Delete value.\n   * @returns {undefined}\n   */\n  onEdit(value) {\n    this.setState({\n      showEdit: true,\n      editId: value.id,\n      editText: value.text,\n    });\n  }\n\n  /**\n   * On edit ok\n   * @method onEditOk\n   * @returns {undefined}\n   */\n  onEditOk() {\n    this.setState({\n      showEdit: false,\n      editId: null,\n      editText: null,\n    });\n    this.props.listComments(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * On edit cancel\n   * @method onEditCancel\n   * @returns {undefined}\n   */\n  onEditCancel(ev) {\n    this.setState({\n      showEdit: false,\n      editId: null,\n      editText: null,\n      replyTo: null,\n    });\n  }\n\n  addRepliesAsChildrenToComments(items) {\n    let initialValue = {};\n    const allCommentsWithCildren = items.reduce((accumulator, item) => {\n      return {\n        [item.comment_id]: { comment: item, children: [] },\n        ...accumulator,\n      };\n    }, initialValue);\n\n    items.forEach((comment) => {\n      if (comment.in_reply_to) {\n        allCommentsWithCildren[comment.in_reply_to].children.push(comment);\n      }\n    });\n    return allCommentsWithCildren;\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { items } = this.props;\n    const moment = this.props.moment.default;\n    const { collapsedComments } = this.state;\n    // object with comment ids, to easily verify if any comment has children\n    const allCommentsWithCildren = this.addRepliesAsChildrenToComments(items);\n    // all comments that are not a reply will be shown in the first iteration\n    const allPrimaryComments = items.filter((comment) => !comment.in_reply_to);\n\n    // recursively makes comments with their replies nested\n    // each iteration will show replies to the specific comment using allCommentsWithCildren\n    const commentElement = (comment) => (\n      <Comment key={comment.comment_id}>\n        <Avatar\n          src={comment.author_image}\n          title={comment.author_name || 'Anonymous'}\n          color={getColor(comment.author_username)}\n        />\n        <Comment.Content>\n          <Comment.Author>{comment.author_name}</Comment.Author>\n          <Comment.Metadata>\n            <span>\n              {' '}\n              <span title={moment(comment.creation_date).format('LLLL')}>\n                {moment(comment.creation_date).fromNow()}\n              </span>\n            </span>\n          </Comment.Metadata>\n          <Comment.Text>\n            {' '}\n            {comment.text['mime-type'] === 'text/html' ? (\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: comment.text.data,\n                }}\n              />\n            ) : (\n              comment.text.data\n            )}\n          </Comment.Text>\n          <Comment.Actions>\n            <Comment.Action\n              as=\"a\"\n              aria-label={this.props.intl.formatMessage(messages.reply)}\n              onClick={() => this.setReplyTo(comment.comment_id)}\n            >\n              <FormattedMessage id=\"Reply\" defaultMessage=\"Reply\" />\n            </Comment.Action>\n            {comment.is_editable && (\n              <Comment.Action\n                onClick={() =>\n                  this.onEdit({\n                    id: flattenToAppURL(comment['@id']),\n                    text: comment.text.data,\n                  })\n                }\n                aria-label={this.props.intl.formatMessage(messages.edit)}\n                value={{\n                  id: flattenToAppURL(comment['@id']),\n                  text: comment.text.data,\n                }}\n              >\n                <FormattedMessage id=\"Edit\" defaultMessage=\"Edit\" />\n              </Comment.Action>\n            )}\n            {comment.is_deletable && (\n              <Comment.Action\n                aria-label={this.props.intl.formatMessage(messages.delete)}\n                onClick={() => this.onDelete(flattenToAppURL(comment['@id']))}\n                color=\"red\"\n              >\n                <Icon name=\"delete\" color=\"red\" />\n                <FormattedMessage\n                  id=\"Delete\"\n                  defaultMessage=\"Delete\"\n                  color=\"red\"\n                />\n              </Comment.Action>\n            )}\n            <Comment.Action\n              as=\"a\"\n              onClick={() => this.hideReply(comment.comment_id)}\n            >\n              {allCommentsWithCildren[comment.comment_id].children.length >\n              0 ? (\n                this.state.collapsedComments[comment.comment_id] ? (\n                  <>\n                    <Icon name=\"eye\" color=\"blue\" />\n                    <FormattedMessage\n                      id=\"Show Replies\"\n                      defaultMessage=\"Show Replies\"\n                    />\n                  </>\n                ) : (\n                  <>\n                    <Icon name=\"minus\" color=\"blue\" />\n                    <FormattedMessage\n                      id=\"Hide Replies\"\n                      defaultMessage=\"Hide Replies\"\n                    />\n                  </>\n                )\n              ) : null}\n            </Comment.Action>\n          </Comment.Actions>\n          <div id={`reply-place-${comment.comment_id}`}></div>\n        </Comment.Content>\n\n        {allCommentsWithCildren[comment.comment_id].children.length > 0\n          ? allCommentsWithCildren[comment.comment_id].children.map(\n              (child, index) => (\n                <Comment.Group\n                  collapsed={collapsedComments[comment.comment_id]}\n                  key={`group-${index}-${comment.comment_id}`}\n                >\n                  {commentElement(child)}\n                </Comment.Group>\n              ),\n            )\n          : null}\n      </Comment>\n    );\n\n    return (\n      <Container className=\"comments\">\n        <CommentEditModal\n          open={this.state.showEdit}\n          onCancel={this.onEditCancel}\n          onOk={this.onEditOk}\n          id={this.state.editId}\n          text={this.state.editText}\n        />\n        <div id=\"comment-add-id\">\n          <Form\n            onSubmit={this.onSubmit}\n            onCancel={this.onEditCancel}\n            submitLabel={this.props.intl.formatMessage(messages.comment)}\n            resetAfterSubmit\n            schema={makeFormSchema(this.props.intl)}\n          />\n        </div>\n\n        {/* all comments  */}\n        <Comment.Group threaded>\n          {allPrimaryComments.map((item) => commentElement(item))}\n        </Comment.Group>\n\n        {/* load more button */}\n        {this.props.items_total > this.props.items.length && (\n          <Button fluid basic color=\"blue\" onClick={this.loadMoreComments}>\n            <FormattedMessage id=\"Load more\" defaultMessage=\"Load more...\" />\n          </Button>\n        )}\n\n        {this.state.replyTo && (\n          <Portal\n            node={\n              document &&\n              document.getElementById(`reply-place-${this.state.replyTo}`)\n            }\n          >\n            <Form\n              onSubmit={this.onSubmit}\n              onCancel={this.onEditCancel}\n              submitLabel={this.props.intl.formatMessage(messages.comment)}\n              resetAfterSubmit\n              schema={makeFormSchema(this.props.intl)}\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['moment']),\n  connect(\n    (state) => ({\n      items: state.comments.items,\n      next: state.comments.next,\n      items_total: state.comments.items_total,\n      addRequest: state.comments.add,\n      deleteRequest: state.comments.delete,\n    }),\n    { addComment, deleteComment, listComments, listMoreComments },\n  ),\n)(Comments);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Comment","defaultMessage":"Comment"},{"id":"Comments","defaultMessage":"Comments"},{"id":"You can add a comment by filling out the form below. Plain text formatting.","defaultMessage":"You can add a comment by filling out the form below. Plain text formatting."},{"id":"Default","defaultMessage":"Default"},{"id":"Delete","defaultMessage":"Delete"},{"id":"Edit","defaultMessage":"Edit"},{"id":"Reply","defaultMessage":"Reply"},{"id":"Hide Replies","defaultMessage":"Hide Replies"},{"id":"Show Replies","defaultMessage":"Show Replies"},{"id":"Load more","defaultMessage":"Load more..."}]}},"sourceType":"module","externalDependencies":[]}