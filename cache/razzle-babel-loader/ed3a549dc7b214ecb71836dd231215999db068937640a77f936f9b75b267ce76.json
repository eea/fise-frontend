{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Comments/Comments.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n/**\n * Comments components.\n * @module components/theme/Comments/Comments\n */\n\nimport { addComment, deleteComment, listComments, listMoreComments } from '@plone/volto/actions';\nimport { Avatar, CommentEditModal, Form } from '@plone/volto/components';\nimport { flattenToAppURL, getBaseUrl, getColor } from '@plone/volto/helpers';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Button, Comment, Container, Icon } from 'semantic-ui-react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n// import { Button, Grid, Segment, Container } from 'semantic-ui-react';\n\nconst messages = defineMessages({\n  comment: {\n    \"id\": \"Comment\",\n    \"defaultMessage\": \"Comment\"\n  },\n  comments: {\n    \"id\": \"Comments\",\n    \"defaultMessage\": \"Comments\"\n  },\n  commentDescription: {\n    \"id\": \"You can add a comment by filling out the form below. Plain text formatting.\",\n    \"defaultMessage\": \"You can add a comment by filling out the form below. Plain text formatting.\"\n  },\n  default: {\n    \"id\": \"Default\",\n    \"defaultMessage\": \"Default\"\n  },\n  delete: {\n    \"id\": \"Delete\",\n    \"defaultMessage\": \"Delete\"\n  },\n  edit: {\n    \"id\": \"Edit\",\n    \"defaultMessage\": \"Edit\"\n  },\n  reply: {\n    \"id\": \"Reply\",\n    \"defaultMessage\": \"Reply\"\n  },\n  hideReplies: {\n    \"id\": \"Hide Replies\",\n    \"defaultMessage\": \"Hide Replies\"\n  },\n  showReplies: {\n    \"id\": \"Show Replies\",\n    \"defaultMessage\": \"Show Replies\"\n  },\n  loadMoreComments: {\n    \"id\": \"Load more\",\n    \"defaultMessage\": \"Load more...\"\n  }\n});\n/**\n * Schema for the Form components to show an input field with it's label\n * @param {Object} intl\n */\nconst makeFormSchema = intl => ({\n  fieldsets: [{\n    fields: ['comment'],\n    id: 'default',\n    title: intl.formatMessage(messages.default)\n  }],\n  properties: {\n    comment: {\n      title: intl.formatMessage(messages.comment),\n      type: 'string',\n      widget: 'textarea'\n    }\n  },\n  required: ['comment1']\n});\n\n/**\n * Comments container class.\n * @class Comments\n * @extends Component\n */\nclass Comments extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Comments\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onEditOk = this.onEditOk.bind(this);\n    this.onEditCancel = this.onEditCancel.bind(this);\n    this.setReplyTo = this.setReplyTo.bind(this);\n    this.loadMoreComments = this.loadMoreComments.bind(this);\n    this.state = {\n      showEdit: false,\n      editId: null,\n      editText: null,\n      replyTo: null,\n      collapsedComments: {}\n    };\n  }\n  componentDidMount() {\n    this.props.listComments(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.pathname !== this.props.pathname || this.props.addRequest.loading && nextProps.addRequest.loaded || this.props.deleteRequest.loading && nextProps.deleteRequest.loaded) {\n      this.props.listComments(getBaseUrl(nextProps.pathname));\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} formData Form data.\n   * @returns {undefined}\n   */\n  onSubmit(formData) {\n    this.props.addComment(getBaseUrl(this.props.pathname), formData.comment, this.state.replyTo);\n    this.setState({\n      replyTo: null\n    });\n  }\n\n  /**\n   * The id of the comment that will receive a reply\n   * @param {string} commentId\n   */\n  setReplyTo(commentId) {\n    this.setState({\n      replyTo: commentId\n    });\n  }\n\n  /**\n   * Calls the action listMoreComments passing the received url for next array of comments\n   */\n  loadMoreComments() {\n    this.props.listMoreComments(this.props.next);\n  }\n\n  /**\n   * Delete handler\n   * @method onDelete\n   * @param {Object} event Event object.\n   * @param {string} value Delete value.\n   * @returns {undefined}\n   */\n  onDelete(value) {\n    this.props.deleteComment(value);\n  }\n\n  /**\n   * Will hide all replies to the specific comment\n   * including replies to any of the replies\n   * @param {string} commentId\n   */\n  hideReply(commentId) {\n    this.setState(prevState => {\n      const hasComment = prevState.collapsedComments[commentId];\n      const {\n        collapsedComments\n      } = prevState;\n      return {\n        collapsedComments: _objectSpread(_objectSpread({}, collapsedComments), {}, {\n          [commentId]: !hasComment\n        })\n      };\n    });\n  }\n\n  /**\n   * Edit handler\n   * @method onEdit\n   * @param {Object} event Event object.\n   * @param {string} value Delete value.\n   * @returns {undefined}\n   */\n  onEdit(value) {\n    this.setState({\n      showEdit: true,\n      editId: value.id,\n      editText: value.text\n    });\n  }\n\n  /**\n   * On edit ok\n   * @method onEditOk\n   * @returns {undefined}\n   */\n  onEditOk() {\n    this.setState({\n      showEdit: false,\n      editId: null,\n      editText: null\n    });\n    this.props.listComments(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * On edit cancel\n   * @method onEditCancel\n   * @returns {undefined}\n   */\n  onEditCancel(ev) {\n    this.setState({\n      showEdit: false,\n      editId: null,\n      editText: null,\n      replyTo: null\n    });\n  }\n  addRepliesAsChildrenToComments(items) {\n    let initialValue = {};\n    const allCommentsWithCildren = items.reduce((accumulator, item) => {\n      return _objectSpread({\n        [item.comment_id]: {\n          comment: item,\n          children: []\n        }\n      }, accumulator);\n    }, initialValue);\n    items.forEach(comment => {\n      if (comment.in_reply_to) {\n        allCommentsWithCildren[comment.in_reply_to].children.push(comment);\n      }\n    });\n    return allCommentsWithCildren;\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const {\n      items,\n      permissions\n    } = this.props;\n    const moment = this.props.moment.default;\n    const {\n      collapsedComments\n    } = this.state;\n    // object with comment ids, to easily verify if any comment has children\n    const allCommentsWithCildren = this.addRepliesAsChildrenToComments(items);\n    // all comments that are not a reply will be shown in the first iteration\n    const allPrimaryComments = items.filter(comment => !comment.in_reply_to);\n\n    // recursively makes comments with their replies nested\n    // each iteration will show replies to the specific comment using allCommentsWithCildren\n    const commentElement = comment => __jsx(Comment, {\n      key: comment.comment_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 7\n      }\n    }, __jsx(Avatar, {\n      src: flattenToAppURL(comment.author_image),\n      title: comment.author_name || 'Anonymous',\n      color: getColor(comment.author_username),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }\n    }), __jsx(Comment.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }\n    }, __jsx(Comment.Author, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }\n    }, comment.author_name), __jsx(Comment.Metadata, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }\n    }, ' ', __jsx(\"span\", {\n      title: moment(comment.creation_date).format('LLLL'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }\n    }, moment(comment.creation_date).fromNow()))), __jsx(Comment.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }\n    }, ' ', comment.text['mime-type'] === 'text/html' ? __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: comment.text.data\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 15\n      }\n    }) : comment.text.data), __jsx(Comment.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }\n    }, comment.can_reply && __jsx(Comment.Action, {\n      as: \"a\",\n      \"aria-label\": this.props.intl.formatMessage(messages.reply),\n      onClick: () => this.setReplyTo(comment.comment_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Reply\",\n      defaultMessage: \"Reply\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }\n    })), comment.is_editable && __jsx(Comment.Action, {\n      onClick: () => this.onEdit({\n        id: flattenToAppURL(comment['@id']),\n        text: comment.text.data\n      }),\n      \"aria-label\": this.props.intl.formatMessage(messages.edit),\n      value: {\n        id: flattenToAppURL(comment['@id']),\n        text: comment.text.data\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 15\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Edit\",\n      defaultMessage: \"Edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }\n    })), comment.is_deletable && __jsx(Comment.Action, {\n      \"aria-label\": this.props.intl.formatMessage(messages.delete),\n      onClick: () => this.onDelete(flattenToAppURL(comment['@id'])),\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      name: \"delete\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }\n    }), __jsx(FormattedMessage, {\n      id: \"Delete\",\n      defaultMessage: \"Delete\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }\n    })), __jsx(Comment.Action, {\n      as: \"a\",\n      onClick: () => this.hideReply(comment.comment_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 13\n      }\n    }, allCommentsWithCildren[comment.comment_id].children.length > 0 ? this.state.collapsedComments[comment.comment_id] ? __jsx(React.Fragment, null, __jsx(Icon, {\n      name: \"eye\",\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 21\n      }\n    }), __jsx(FormattedMessage, {\n      id: \"Show Replies\",\n      defaultMessage: \"Show Replies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 21\n      }\n    })) : __jsx(React.Fragment, null, __jsx(Icon, {\n      name: \"minus\",\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 21\n      }\n    }), __jsx(FormattedMessage, {\n      id: \"Hide Replies\",\n      defaultMessage: \"Hide Replies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 21\n      }\n    })) : null)), __jsx(\"div\", {\n      id: `reply-place-${comment.comment_id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }\n    })), allCommentsWithCildren[comment.comment_id].children.length > 0 ? allCommentsWithCildren[comment.comment_id].children.map((child, index) => __jsx(Comment.Group, {\n      collapsed: collapsedComments[comment.comment_id],\n      key: `group-${index}-${comment.comment_id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }\n    }, commentElement(child))) : null);\n    if (!permissions.view_comments) return '';\n    return __jsx(Container, {\n      className: \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 7\n      }\n    }, __jsx(CommentEditModal, {\n      open: this.state.showEdit,\n      onCancel: this.onEditCancel,\n      onOk: this.onEditOk,\n      id: this.state.editId,\n      text: this.state.editText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }\n    }), permissions.can_reply && __jsx(\"div\", {\n      id: \"comment-add-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      onSubmit: this.onSubmit,\n      onCancel: this.onEditCancel,\n      submitLabel: this.props.intl.formatMessage(messages.comment),\n      resetAfterSubmit: true,\n      schema: makeFormSchema(this.props.intl),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 13\n      }\n    })), __jsx(Comment.Group, {\n      threaded: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }\n    }, allPrimaryComments.map(item => commentElement(item))), this.props.items_total > this.props.items.length && __jsx(Button, {\n      fluid: true,\n      basic: true,\n      color: \"blue\",\n      onClick: this.loadMoreComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Load more\",\n      defaultMessage: \"Load more...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 13\n      }\n    })), this.state.replyTo && __jsx(Portal, {\n      node: document && document.getElementById(`reply-place-${this.state.replyTo}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 11\n      }\n    }, __jsx(Form, {\n      onSubmit: this.onSubmit,\n      onCancel: this.onEditCancel,\n      submitLabel: this.props.intl.formatMessage(messages.comment),\n      resetAfterSubmit: true,\n      schema: makeFormSchema(this.props.intl),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n_defineProperty(Comments, \"propTypes\", {\n  addComment: PropTypes.func.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n  listComments: PropTypes.func.isRequired,\n  listMoreComments: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    author_name: PropTypes.string,\n    creation_date: PropTypes.string,\n    text: PropTypes.shape({\n      data: PropTypes.string,\n      'mime-type': PropTypes.string\n    }),\n    is_deletable: PropTypes.bool,\n    is_editable: PropTypes.bool\n  })).isRequired,\n  addRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired,\n  deleteRequest: PropTypes.shape({\n    loading: PropTypes.bool,\n    loaded: PropTypes.bool\n  }).isRequired\n});\nexport default compose(injectIntl, injectLazyLibs(['moment']), connect(state => ({\n  items: state.comments.items,\n  next: state.comments.next,\n  items_total: state.comments.items_total,\n  permissions: state.comments.permissions || {},\n  addRequest: state.comments.add,\n  deleteRequest: state.comments.delete\n}), {\n  addComment,\n  deleteComment,\n  listComments,\n  listMoreComments\n}))(Comments);","map":{"version":3,"names":["addComment","deleteComment","listComments","listMoreComments","Avatar","CommentEditModal","Form","flattenToAppURL","getBaseUrl","getColor","PropTypes","React","Component","defineMessages","FormattedMessage","injectIntl","Portal","connect","compose","Button","Comment","Container","Icon","injectLazyLibs","messages","comment","comments","commentDescription","default","delete","edit","reply","hideReplies","showReplies","loadMoreComments","makeFormSchema","intl","fieldsets","fields","id","title","formatMessage","properties","type","widget","required","Comments","constructor","props","onSubmit","bind","onDelete","onEdit","onEditOk","onEditCancel","setReplyTo","state","showEdit","editId","editText","replyTo","collapsedComments","componentDidMount","pathname","UNSAFE_componentWillReceiveProps","nextProps","addRequest","loading","loaded","deleteRequest","formData","setState","commentId","next","value","hideReply","prevState","hasComment","text","ev","addRepliesAsChildrenToComments","items","initialValue","allCommentsWithCildren","reduce","accumulator","item","comment_id","children","forEach","in_reply_to","push","render","permissions","moment","allPrimaryComments","filter","commentElement","author_image","author_name","author_username","creation_date","format","fromNow","__html","data","can_reply","is_editable","is_deletable","length","map","child","index","view_comments","items_total","document","getElementById","func","isRequired","string","arrayOf","shape","bool","add"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/theme/Comments/Comments.jsx"],"sourcesContent":["/**\n * Comments components.\n * @module components/theme/Comments/Comments\n */\n\nimport {\n  addComment,\n  deleteComment,\n  listComments,\n  listMoreComments,\n} from '@plone/volto/actions';\nimport { Avatar, CommentEditModal, Form } from '@plone/volto/components';\nimport { flattenToAppURL, getBaseUrl, getColor } from '@plone/volto/helpers';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { Portal } from 'react-portal';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Button, Comment, Container, Icon } from 'semantic-ui-react';\nimport { injectLazyLibs } from '@plone/volto/helpers/Loadable/Loadable';\n// import { Button, Grid, Segment, Container } from 'semantic-ui-react';\n\nconst messages = defineMessages({\n  comment: {\n    id: 'Comment',\n    defaultMessage: 'Comment',\n  },\n  comments: {\n    id: 'Comments',\n    defaultMessage: 'Comments',\n  },\n  commentDescription: {\n    id:\n      'You can add a comment by filling out the form below. Plain text formatting.',\n    defaultMessage:\n      'You can add a comment by filling out the form below. Plain text formatting.',\n  },\n  default: {\n    id: 'Default',\n    defaultMessage: 'Default',\n  },\n  delete: {\n    id: 'Delete',\n    defaultMessage: 'Delete',\n  },\n  edit: {\n    id: 'Edit',\n    defaultMessage: 'Edit',\n  },\n  reply: {\n    id: 'Reply',\n    defaultMessage: 'Reply',\n  },\n  hideReplies: {\n    id: 'Hide Replies',\n    defaultMessage: 'Hide Replies',\n  },\n  showReplies: {\n    id: 'Show Replies',\n    defaultMessage: 'Show Replies',\n  },\n  loadMoreComments: {\n    id: 'Load more',\n    defaultMessage: 'Load more...',\n  },\n});\n/**\n * Schema for the Form components to show an input field with it's label\n * @param {Object} intl\n */\nconst makeFormSchema = (intl) => ({\n  fieldsets: [\n    {\n      fields: ['comment'],\n      id: 'default',\n      title: intl.formatMessage(messages.default),\n    },\n  ],\n  properties: {\n    comment: {\n      title: intl.formatMessage(messages.comment),\n      type: 'string',\n      widget: 'textarea',\n    },\n  },\n  required: ['comment1'],\n});\n\n/**\n * Comments container class.\n * @class Comments\n * @extends Component\n */\nclass Comments extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    addComment: PropTypes.func.isRequired,\n    deleteComment: PropTypes.func.isRequired,\n    listComments: PropTypes.func.isRequired,\n    listMoreComments: PropTypes.func.isRequired,\n    pathname: PropTypes.string.isRequired,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        author_name: PropTypes.string,\n        creation_date: PropTypes.string,\n        text: PropTypes.shape({\n          data: PropTypes.string,\n          'mime-type': PropTypes.string,\n        }),\n        is_deletable: PropTypes.bool,\n        is_editable: PropTypes.bool,\n      }),\n    ).isRequired,\n    addRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n    deleteRequest: PropTypes.shape({\n      loading: PropTypes.bool,\n      loaded: PropTypes.bool,\n    }).isRequired,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs Comments\n   */\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onEditOk = this.onEditOk.bind(this);\n    this.onEditCancel = this.onEditCancel.bind(this);\n    this.setReplyTo = this.setReplyTo.bind(this);\n    this.loadMoreComments = this.loadMoreComments.bind(this);\n    this.state = {\n      showEdit: false,\n      editId: null,\n      editText: null,\n      replyTo: null,\n      collapsedComments: {},\n    };\n  }\n\n  componentDidMount() {\n    this.props.listComments(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * Component will receive props\n   * @method componentWillReceiveProps\n   * @param {Object} nextProps Next properties\n   * @returns {undefined}\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.pathname !== this.props.pathname ||\n      (this.props.addRequest.loading && nextProps.addRequest.loaded) ||\n      (this.props.deleteRequest.loading && nextProps.deleteRequest.loaded)\n    ) {\n      this.props.listComments(getBaseUrl(nextProps.pathname));\n    }\n  }\n\n  /**\n   * Submit handler\n   * @method onSubmit\n   * @param {Object} formData Form data.\n   * @returns {undefined}\n   */\n  onSubmit(formData) {\n    this.props.addComment(\n      getBaseUrl(this.props.pathname),\n      formData.comment,\n      this.state.replyTo,\n    );\n    this.setState({ replyTo: null });\n  }\n\n  /**\n   * The id of the comment that will receive a reply\n   * @param {string} commentId\n   */\n  setReplyTo(commentId) {\n    this.setState({ replyTo: commentId });\n  }\n\n  /**\n   * Calls the action listMoreComments passing the received url for next array of comments\n   */\n  loadMoreComments() {\n    this.props.listMoreComments(this.props.next);\n  }\n\n  /**\n   * Delete handler\n   * @method onDelete\n   * @param {Object} event Event object.\n   * @param {string} value Delete value.\n   * @returns {undefined}\n   */\n  onDelete(value) {\n    this.props.deleteComment(value);\n  }\n\n  /**\n   * Will hide all replies to the specific comment\n   * including replies to any of the replies\n   * @param {string} commentId\n   */\n  hideReply(commentId) {\n    this.setState((prevState) => {\n      const hasComment = prevState.collapsedComments[commentId];\n      const { collapsedComments } = prevState;\n\n      return {\n        collapsedComments: {\n          ...collapsedComments,\n          [commentId]: !hasComment,\n        },\n      };\n    });\n  }\n\n  /**\n   * Edit handler\n   * @method onEdit\n   * @param {Object} event Event object.\n   * @param {string} value Delete value.\n   * @returns {undefined}\n   */\n  onEdit(value) {\n    this.setState({\n      showEdit: true,\n      editId: value.id,\n      editText: value.text,\n    });\n  }\n\n  /**\n   * On edit ok\n   * @method onEditOk\n   * @returns {undefined}\n   */\n  onEditOk() {\n    this.setState({\n      showEdit: false,\n      editId: null,\n      editText: null,\n    });\n    this.props.listComments(getBaseUrl(this.props.pathname));\n  }\n\n  /**\n   * On edit cancel\n   * @method onEditCancel\n   * @returns {undefined}\n   */\n  onEditCancel(ev) {\n    this.setState({\n      showEdit: false,\n      editId: null,\n      editText: null,\n      replyTo: null,\n    });\n  }\n\n  addRepliesAsChildrenToComments(items) {\n    let initialValue = {};\n    const allCommentsWithCildren = items.reduce((accumulator, item) => {\n      return {\n        [item.comment_id]: { comment: item, children: [] },\n        ...accumulator,\n      };\n    }, initialValue);\n\n    items.forEach((comment) => {\n      if (comment.in_reply_to) {\n        allCommentsWithCildren[comment.in_reply_to].children.push(comment);\n      }\n    });\n    return allCommentsWithCildren;\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    const { items, permissions } = this.props;\n    const moment = this.props.moment.default;\n    const { collapsedComments } = this.state;\n    // object with comment ids, to easily verify if any comment has children\n    const allCommentsWithCildren = this.addRepliesAsChildrenToComments(items);\n    // all comments that are not a reply will be shown in the first iteration\n    const allPrimaryComments = items.filter((comment) => !comment.in_reply_to);\n\n    // recursively makes comments with their replies nested\n    // each iteration will show replies to the specific comment using allCommentsWithCildren\n    const commentElement = (comment) => (\n      <Comment key={comment.comment_id}>\n        <Avatar\n          src={flattenToAppURL(comment.author_image)}\n          title={comment.author_name || 'Anonymous'}\n          color={getColor(comment.author_username)}\n        />\n        <Comment.Content>\n          <Comment.Author>{comment.author_name}</Comment.Author>\n          <Comment.Metadata>\n            <span>\n              {' '}\n              <span title={moment(comment.creation_date).format('LLLL')}>\n                {moment(comment.creation_date).fromNow()}\n              </span>\n            </span>\n          </Comment.Metadata>\n          <Comment.Text>\n            {' '}\n            {comment.text['mime-type'] === 'text/html' ? (\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: comment.text.data,\n                }}\n              />\n            ) : (\n              comment.text.data\n            )}\n          </Comment.Text>\n          <Comment.Actions>\n            {comment.can_reply && (\n              <Comment.Action\n                as=\"a\"\n                aria-label={this.props.intl.formatMessage(messages.reply)}\n                onClick={() => this.setReplyTo(comment.comment_id)}\n              >\n                <FormattedMessage id=\"Reply\" defaultMessage=\"Reply\" />\n              </Comment.Action>\n            )}\n            {comment.is_editable && (\n              <Comment.Action\n                onClick={() =>\n                  this.onEdit({\n                    id: flattenToAppURL(comment['@id']),\n                    text: comment.text.data,\n                  })\n                }\n                aria-label={this.props.intl.formatMessage(messages.edit)}\n                value={{\n                  id: flattenToAppURL(comment['@id']),\n                  text: comment.text.data,\n                }}\n              >\n                <FormattedMessage id=\"Edit\" defaultMessage=\"Edit\" />\n              </Comment.Action>\n            )}\n            {comment.is_deletable && (\n              <Comment.Action\n                aria-label={this.props.intl.formatMessage(messages.delete)}\n                onClick={() => this.onDelete(flattenToAppURL(comment['@id']))}\n                color=\"red\"\n              >\n                <Icon name=\"delete\" color=\"red\" />\n                <FormattedMessage\n                  id=\"Delete\"\n                  defaultMessage=\"Delete\"\n                  color=\"red\"\n                />\n              </Comment.Action>\n            )}\n            <Comment.Action\n              as=\"a\"\n              onClick={() => this.hideReply(comment.comment_id)}\n            >\n              {allCommentsWithCildren[comment.comment_id].children.length >\n              0 ? (\n                this.state.collapsedComments[comment.comment_id] ? (\n                  <>\n                    <Icon name=\"eye\" color=\"blue\" />\n                    <FormattedMessage\n                      id=\"Show Replies\"\n                      defaultMessage=\"Show Replies\"\n                    />\n                  </>\n                ) : (\n                  <>\n                    <Icon name=\"minus\" color=\"blue\" />\n                    <FormattedMessage\n                      id=\"Hide Replies\"\n                      defaultMessage=\"Hide Replies\"\n                    />\n                  </>\n                )\n              ) : null}\n            </Comment.Action>\n          </Comment.Actions>\n          <div id={`reply-place-${comment.comment_id}`}></div>\n        </Comment.Content>\n\n        {allCommentsWithCildren[comment.comment_id].children.length > 0\n          ? allCommentsWithCildren[comment.comment_id].children.map(\n              (child, index) => (\n                <Comment.Group\n                  collapsed={collapsedComments[comment.comment_id]}\n                  key={`group-${index}-${comment.comment_id}`}\n                >\n                  {commentElement(child)}\n                </Comment.Group>\n              ),\n            )\n          : null}\n      </Comment>\n    );\n\n    if (!permissions.view_comments) return '';\n\n    return (\n      <Container className=\"comments\">\n        <CommentEditModal\n          open={this.state.showEdit}\n          onCancel={this.onEditCancel}\n          onOk={this.onEditOk}\n          id={this.state.editId}\n          text={this.state.editText}\n        />\n        {permissions.can_reply && (\n          <div id=\"comment-add-id\">\n            <Form\n              onSubmit={this.onSubmit}\n              onCancel={this.onEditCancel}\n              submitLabel={this.props.intl.formatMessage(messages.comment)}\n              resetAfterSubmit\n              schema={makeFormSchema(this.props.intl)}\n            />\n          </div>\n        )}\n        {/* all comments  */}\n        <Comment.Group threaded>\n          {allPrimaryComments.map((item) => commentElement(item))}\n        </Comment.Group>\n\n        {/* load more button */}\n        {this.props.items_total > this.props.items.length && (\n          <Button fluid basic color=\"blue\" onClick={this.loadMoreComments}>\n            <FormattedMessage id=\"Load more\" defaultMessage=\"Load more...\" />\n          </Button>\n        )}\n\n        {this.state.replyTo && (\n          <Portal\n            node={\n              document &&\n              document.getElementById(`reply-place-${this.state.replyTo}`)\n            }\n          >\n            <Form\n              onSubmit={this.onSubmit}\n              onCancel={this.onEditCancel}\n              submitLabel={this.props.intl.formatMessage(messages.comment)}\n              resetAfterSubmit\n              schema={makeFormSchema(this.props.intl)}\n            />\n          </Portal>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  injectLazyLibs(['moment']),\n  connect(\n    (state) => ({\n      items: state.comments.items,\n      next: state.comments.next,\n      items_total: state.comments.items_total,\n      permissions: state.comments.permissions || {},\n      addRequest: state.comments.add,\n      deleteRequest: state.comments.delete,\n    }),\n    { addComment, deleteComment, listComments, listMoreComments },\n  ),\n)(Comments);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Comment","defaultMessage":"Comment"},{"id":"Comments","defaultMessage":"Comments"},{"id":"You can add a comment by filling out the form below. Plain text formatting.","defaultMessage":"You can add a comment by filling out the form below. Plain text formatting."},{"id":"Default","defaultMessage":"Default"},{"id":"Delete","defaultMessage":"Delete"},{"id":"Edit","defaultMessage":"Edit"},{"id":"Reply","defaultMessage":"Reply"},{"id":"Hide Replies","defaultMessage":"Hide Replies"},{"id":"Show Replies","defaultMessage":"Show Replies"},{"id":"Load more","defaultMessage":"Load more..."}]}},"sourceType":"module","externalDependencies":[]}