{"ast":null,"code":"import _join from \"lodash/join\";\nvar _jsxFileName = \"/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Sidebar/ObjectBrowserBody.jsx\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { Input, Segment, Breadcrumb } from 'semantic-ui-react';\n// These absolute imports (without using the corresponding centralized index.js) are required\n// to cut circular import problems, this file should never use them. This is because of\n// the very nature of the functionality of the component and its relationship with others\nimport { searchContent } from '@plone/volto/actions/search/search';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers/Url/Url';\nimport config from '@plone/volto/registry';\nimport backSVG from '@plone/volto/icons/back.svg';\nimport folderSVG from '@plone/volto/icons/folder.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport searchSVG from '@plone/volto/icons/zoom.svg';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport homeSVG from '@plone/volto/icons/home.svg';\nimport ObjectBrowserNav from '@plone/volto/components/manage/Sidebar/ObjectBrowserNav';\nconst messages = defineMessages({\n  SearchInputPlaceholder: {\n    \"id\": \"Search content\",\n    \"defaultMessage\": \"Search content\"\n  },\n  SelectedItems: {\n    \"id\": \"Selected items\",\n    \"defaultMessage\": \"Selected items\"\n  },\n  back: {\n    \"id\": \"Back\",\n    \"defaultMessage\": \"Back\"\n  },\n  search: {\n    \"id\": \"Search SVG\",\n    \"defaultMessage\": \"Search SVG\"\n  },\n  of: {\n    \"id\": \"Selected items - x of y\",\n    \"defaultMessage\": \"of\"\n  }\n});\nfunction getParentURL(url) {\n  return flattenToAppURL(`${_join(url.split('/').slice(0, -1), '/')}`) || '/';\n}\n\n/**\n * ObjectBrowserBody container class.\n * @class ObjectBrowserBody\n * @extends Component\n */\nclass ObjectBrowserBody extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    var _this$props$data, _this$props$data2, _this$props$data3, _this$props$data4;\n    super(props);\n    _defineProperty(this, \"initialSearch\", mode => {\n      const currentSelected = mode === 'multiple' ? '' : mode === 'image' ? this.state.selectedImage : this.state.selectedHref;\n      if (currentSelected && isInternalURL(currentSelected)) {\n        this.props.searchContent(getParentURL(currentSelected), {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          b_size: 1000\n        }, `${this.props.block}-${mode}`);\n      } else {\n        this.props.searchContent(this.state.currentFolder, {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          b_size: 1000\n        }, `${this.props.block}-${mode}`);\n      }\n    });\n    _defineProperty(this, \"navigateTo\", id => {\n      this.props.searchContent(id, {\n        'path.depth': 1,\n        sort_on: 'getObjPositionInParent',\n        metadata_fields: '_all',\n        b_size: 1000\n      }, `${this.props.block}-${this.props.mode}`);\n      const parent = `${_join(id.split('/').slice(0, -1), '/')}` || '/';\n      this.setState(() => ({\n        parentFolder: parent,\n        currentFolder: id || '/'\n      }));\n    });\n    _defineProperty(this, \"toggleSearchInput\", () => this.setState(prevState => ({\n      showSearchInput: !prevState.showSearchInput\n    }), () => {\n      var _this$searchInputRef;\n      if ((_this$searchInputRef = this.searchInputRef) !== null && _this$searchInputRef !== void 0 && _this$searchInputRef.current) this.searchInputRef.current.focus();\n    }));\n    _defineProperty(this, \"onSearch\", e => {\n      const text = flattenToAppURL(e.target.value);\n      if (text.startsWith('/')) {\n        this.setState({\n          currentFolder: text\n        });\n        this.props.searchContent(text, {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          portal_type: this.state.searchableTypes\n        }, `${this.props.block}-${this.props.mode}`);\n      } else {\n        text.length > 2 ? this.props.searchContent('/', {\n          SearchableText: `${text}*`,\n          metadata_fields: '_all',\n          portal_type: this.state.searchableTypes\n        }, `${this.props.block}-${this.props.mode}`) : this.props.searchContent('/', {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          portal_type: this.state.searchableTypes\n        }, `${this.props.block}-${this.props.mode}`);\n      }\n    });\n    _defineProperty(this, \"onSelectItem\", item => {\n      const url = item['@id'];\n      const {\n        block,\n        data,\n        mode,\n        dataName,\n        onChangeBlock\n      } = this.props;\n      const updateState = mode => {\n        switch (mode) {\n          case 'image':\n            this.setState({\n              selectedImage: url,\n              currentImageFolder: getParentURL(url)\n            });\n            break;\n          case 'link':\n            this.setState({\n              selectedHref: url,\n              currentLinkFolder: getParentURL(url)\n            });\n            break;\n          default:\n            break;\n        }\n      };\n      if (dataName) {\n        onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n          [dataName]: url\n        }));\n      } else if (this.props.onSelectItem) {\n        this.props.onSelectItem(url, item);\n      } else if (mode === 'image') {\n        onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n          url: flattenToAppURL(item.getURL),\n          alt: ''\n        }));\n      } else if (mode === 'link') {\n        onChangeBlock(block, _objectSpread(_objectSpread({}, data), {}, {\n          href: flattenToAppURL(url)\n        }));\n      }\n      updateState(mode);\n    });\n    _defineProperty(this, \"onChangeBlockData\", (key, value) => {\n      this.props.onChangeBlock(this.props.block, _objectSpread(_objectSpread({}, this.props.data), {}, {\n        [key]: value\n      }));\n    });\n    _defineProperty(this, \"isSelectable\", item => {\n      return this.props.selectableTypes.length > 0 ? this.props.selectableTypes.indexOf(item['@type']) >= 0 : true;\n    });\n    _defineProperty(this, \"handleClickOnItem\", item => {\n      if (this.props.mode === 'image') {\n        if (item.is_folderish) {\n          this.navigateTo(item['@id']);\n        }\n        if (config.settings.imageObjects.includes(item['@type'])) {\n          this.onSelectItem(item);\n        }\n      } else {\n        if (this.isSelectable(item)) {\n          if (!this.props.maximumSelectionSize || this.props.mode === 'multiple' || !this.props.data || this.props.data.length < this.props.maximumSelectionSize) {\n            this.onSelectItem(item);\n            let length = this.props.data ? this.props.data.length : 0;\n            let stopSelecting = this.props.mode !== 'multiple' || this.props.maximumSelectionSize > 0 && length + 1 >= this.props.maximumSelectionSize;\n            if (stopSelecting) {\n              this.props.closeObjectBrowser();\n            }\n          } else {\n            this.props.closeObjectBrowser();\n          }\n        } else {\n          this.navigateTo(item['@id']);\n        }\n      }\n    });\n    _defineProperty(this, \"handleDoubleClickOnItem\", item => {\n      if (this.props.mode === 'image') {\n        if (item.is_folderish) {\n          this.navigateTo(item['@id']);\n        }\n        if (config.settings.imageObjects.includes(item['@type'])) {\n          this.onSelectItem(item);\n          this.props.closeObjectBrowser();\n        }\n      } else {\n        if (this.isSelectable(item)) {\n          if (this.props.data.length < this.props.maximumSelectionSize) {\n            this.onSelectItem(item);\n          }\n          this.props.closeObjectBrowser();\n        } else {\n          this.navigateTo(item['@id']);\n        }\n      }\n    });\n    this.state = {\n      currentFolder: this.props.mode === 'multiple' ? '/' : this.props.contextURL || '/',\n      currentImageFolder: this.props.mode === 'multiple' ? '/' : this.props.mode === 'image' && (_this$props$data = this.props.data) !== null && _this$props$data !== void 0 && _this$props$data.url ? getParentURL(this.props.data.url) : '/',\n      currentLinkFolder: this.props.mode === 'multiple' ? '/' : this.props.mode === 'link' && (_this$props$data2 = this.props.data) !== null && _this$props$data2 !== void 0 && _this$props$data2.href ? getParentURL(this.props.data.href) : '/',\n      parentFolder: '',\n      selectedImage: this.props.mode === 'multiple' ? '' : this.props.mode === 'image' && (_this$props$data3 = this.props.data) !== null && _this$props$data3 !== void 0 && _this$props$data3.url ? flattenToAppURL(this.props.data.url) : '',\n      selectedHref: this.props.mode === 'multiple' ? '' : this.props.mode === 'link' && (_this$props$data4 = this.props.data) !== null && _this$props$data4 !== void 0 && _this$props$data4.href ? flattenToAppURL(this.props.data.href) : '',\n      showSearchInput: false,\n      // In image mode, the searchable types default to the image types which\n      // can be overridden with the property if specified.\n      searchableTypes: this.props.mode === 'image' ? this.props.searchableTypes || config.settings.imageObjects : this.props.searchableTypes\n    };\n    this.searchInputRef = /*#__PURE__*/React.createRef();\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.initialSearch(this.props.mode);\n  }\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    var _this$props$data5;\n    return __jsx(Segment.Group, {\n      raised: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 7\n      }\n    }, __jsx(\"header\", {\n      className: \"header pulled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"vertical divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }\n    }), this.state.currentFolder === '/' ? __jsx(React.Fragment, null, this.props.mode === 'image' ? __jsx(Icon, {\n      name: folderSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }\n    }) : __jsx(Icon, {\n      name: linkSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }\n    })) : __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.back),\n      onClick: () => this.navigateTo(this.state.parentFolder),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }\n    }, __jsx(Icon, {\n      name: backSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 15\n      }\n    })), this.state.showSearchInput ? __jsx(Input, {\n      className: \"search\",\n      ref: this.searchInputRef,\n      onChange: this.onSearch,\n      placeholder: this.props.intl.formatMessage(messages.SearchInputPlaceholder),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 13\n      }\n    }) : this.props.mode === 'image' ? __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Choose Image\",\n      defaultMessage: \"Choose Image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 15\n      }\n    })) : __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"Choose Target\",\n      defaultMessage: \"Choose Target\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 15\n      }\n    })), __jsx(\"button\", {\n      \"aria-label\": this.props.intl.formatMessage(messages.search),\n      onClick: this.toggleSearchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }\n    }, __jsx(Icon, {\n      name: searchSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }\n    })), __jsx(\"button\", {\n      className: \"clearSVG\",\n      onClick: this.props.closeObjectBrowser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }\n    }, __jsx(Icon, {\n      name: clearSVG,\n      size: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 13\n      }\n    }))), __jsx(Segment, {\n      secondary: true,\n      className: \"breadcrumbs\",\n      vertical: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }\n    }, __jsx(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }\n    }, this.state.currentFolder !== '/' ? this.state.currentFolder.split('/').map((item, index, items) => {\n      return __jsx(React.Fragment, {\n        key: `divider-${item}-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 19\n        }\n      }, index === 0 ? __jsx(Breadcrumb.Section, {\n        onClick: () => this.navigateTo('/'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 23\n        }\n      }, __jsx(Icon, {\n        className: \"home-icon\",\n        name: homeSVG,\n        size: \"18px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 25\n        }\n      })) : __jsx(React.Fragment, null, __jsx(Breadcrumb.Divider, {\n        key: `divider-${item.url}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 25\n        }\n      }), __jsx(Breadcrumb.Section, {\n        onClick: () => this.navigateTo(items.slice(0, index + 1).join('/')),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 25\n        }\n      }, item)));\n    }) : __jsx(Breadcrumb.Section, {\n      onClick: () => this.navigateTo('/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 15\n      }\n    }, __jsx(Icon, {\n      className: \"home-icon\",\n      name: homeSVG,\n      size: \"18px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }\n    })))), this.props.mode === 'multiple' && __jsx(Segment, {\n      className: \"infos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }\n    }, this.props.intl.formatMessage(messages.SelectedItems), \":\", ' ', (_this$props$data5 = this.props.data) === null || _this$props$data5 === void 0 ? void 0 : _this$props$data5.length, this.props.maximumSelectionSize > 0 && __jsx(React.Fragment, null, ' ', this.props.intl.formatMessage(messages.of), ' ', this.props.maximumSelectionSize)), __jsx(ObjectBrowserNav, {\n      currentSearchResults: this.props.searchSubrequests[`${this.props.block}-${this.props.mode}`],\n      selected: this.props.mode === 'multiple' ? this.props.data : [{\n        '@id': this.props.mode === 'image' ? this.state.selectedImage : this.state.selectedHref\n      }],\n      handleClickOnItem: this.handleClickOnItem,\n      handleDoubleClickOnItem: this.handleDoubleClickOnItem,\n      mode: this.props.mode,\n      navigateTo: this.navigateTo,\n      isSelectable: this.isSelectable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n_defineProperty(ObjectBrowserBody, \"propTypes\", {\n  block: PropTypes.string.isRequired,\n  mode: PropTypes.string.isRequired,\n  data: PropTypes.any.isRequired,\n  searchSubrequests: PropTypes.objectOf(PropTypes.any).isRequired,\n  searchContent: PropTypes.func.isRequired,\n  closeObjectBrowser: PropTypes.func.isRequired,\n  onChangeBlock: PropTypes.func.isRequired,\n  onSelectItem: PropTypes.func,\n  dataName: PropTypes.string,\n  maximumSelectionSize: PropTypes.number,\n  contextURL: PropTypes.string,\n  searchableTypes: PropTypes.arrayOf(PropTypes.string)\n});\n_defineProperty(ObjectBrowserBody, \"defaultProps\", {\n  image: '',\n  href: '',\n  onSelectItem: null,\n  dataName: null,\n  selectableTypes: [],\n  searchableTypes: null,\n  maximumSelectionSize: null\n});\nexport default compose(injectIntl, connect(state => ({\n  searchSubrequests: state.search.subrequests\n}), {\n  searchContent\n}))(ObjectBrowserBody);","map":{"version":3,"names":["React","Component","PropTypes","compose","connect","defineMessages","FormattedMessage","injectIntl","Input","Segment","Breadcrumb","searchContent","Icon","flattenToAppURL","isInternalURL","config","backSVG","folderSVG","clearSVG","searchSVG","linkSVG","homeSVG","ObjectBrowserNav","messages","SearchInputPlaceholder","SelectedItems","back","search","of","getParentURL","url","split","slice","ObjectBrowserBody","constructor","props","mode","currentSelected","state","selectedImage","selectedHref","sort_on","metadata_fields","b_size","block","currentFolder","id","parent","setState","parentFolder","prevState","showSearchInput","searchInputRef","current","focus","e","text","target","value","startsWith","portal_type","searchableTypes","length","SearchableText","item","data","dataName","onChangeBlock","updateState","currentImageFolder","currentLinkFolder","onSelectItem","getURL","alt","href","key","selectableTypes","indexOf","is_folderish","navigateTo","settings","imageObjects","includes","isSelectable","maximumSelectionSize","stopSelecting","closeObjectBrowser","contextURL","createRef","componentDidMount","initialSearch","render","intl","formatMessage","onSearch","toggleSearchInput","map","index","items","join","searchSubrequests","handleClickOnItem","handleDoubleClickOnItem","string","isRequired","any","objectOf","func","number","arrayOf","image","subrequests"],"sources":["/home/tooler/code/work/forests-frontend/node_modules/@plone/volto/src/components/manage/Sidebar/ObjectBrowserBody.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { Input, Segment, Breadcrumb } from 'semantic-ui-react';\n\nimport { join } from 'lodash';\n\n// These absolute imports (without using the corresponding centralized index.js) are required\n// to cut circular import problems, this file should never use them. This is because of\n// the very nature of the functionality of the component and its relationship with others\nimport { searchContent } from '@plone/volto/actions/search/search';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport { flattenToAppURL, isInternalURL } from '@plone/volto/helpers/Url/Url';\nimport config from '@plone/volto/registry';\n\nimport backSVG from '@plone/volto/icons/back.svg';\nimport folderSVG from '@plone/volto/icons/folder.svg';\nimport clearSVG from '@plone/volto/icons/clear.svg';\nimport searchSVG from '@plone/volto/icons/zoom.svg';\nimport linkSVG from '@plone/volto/icons/link.svg';\nimport homeSVG from '@plone/volto/icons/home.svg';\n\nimport ObjectBrowserNav from '@plone/volto/components/manage/Sidebar/ObjectBrowserNav';\n\nconst messages = defineMessages({\n  SearchInputPlaceholder: {\n    id: 'Search content',\n    defaultMessage: 'Search content',\n  },\n  SelectedItems: {\n    id: 'Selected items',\n    defaultMessage: 'Selected items',\n  },\n  back: {\n    id: 'Back',\n    defaultMessage: 'Back',\n  },\n  search: {\n    id: 'Search SVG',\n    defaultMessage: 'Search SVG',\n  },\n  of: { id: 'Selected items - x of y', defaultMessage: 'of' },\n});\n\nfunction getParentURL(url) {\n  return flattenToAppURL(`${join(url.split('/').slice(0, -1), '/')}`) || '/';\n}\n\n/**\n * ObjectBrowserBody container class.\n * @class ObjectBrowserBody\n * @extends Component\n */\nclass ObjectBrowserBody extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    block: PropTypes.string.isRequired,\n    mode: PropTypes.string.isRequired,\n    data: PropTypes.any.isRequired,\n    searchSubrequests: PropTypes.objectOf(PropTypes.any).isRequired,\n    searchContent: PropTypes.func.isRequired,\n    closeObjectBrowser: PropTypes.func.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onSelectItem: PropTypes.func,\n    dataName: PropTypes.string,\n    maximumSelectionSize: PropTypes.number,\n    contextURL: PropTypes.string,\n    searchableTypes: PropTypes.arrayOf(PropTypes.string),\n  };\n\n  /**\n   * Default properties.\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    image: '',\n    href: '',\n    onSelectItem: null,\n    dataName: null,\n    selectableTypes: [],\n    searchableTypes: null,\n    maximumSelectionSize: null,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentFolder:\n        this.props.mode === 'multiple' ? '/' : this.props.contextURL || '/',\n      currentImageFolder:\n        this.props.mode === 'multiple'\n          ? '/'\n          : this.props.mode === 'image' && this.props.data?.url\n          ? getParentURL(this.props.data.url)\n          : '/',\n      currentLinkFolder:\n        this.props.mode === 'multiple'\n          ? '/'\n          : this.props.mode === 'link' && this.props.data?.href\n          ? getParentURL(this.props.data.href)\n          : '/',\n      parentFolder: '',\n      selectedImage:\n        this.props.mode === 'multiple'\n          ? ''\n          : this.props.mode === 'image' && this.props.data?.url\n          ? flattenToAppURL(this.props.data.url)\n          : '',\n      selectedHref:\n        this.props.mode === 'multiple'\n          ? ''\n          : this.props.mode === 'link' && this.props.data?.href\n          ? flattenToAppURL(this.props.data.href)\n          : '',\n      showSearchInput: false,\n      // In image mode, the searchable types default to the image types which\n      // can be overridden with the property if specified.\n      searchableTypes:\n        this.props.mode === 'image'\n          ? this.props.searchableTypes || config.settings.imageObjects\n          : this.props.searchableTypes,\n    };\n    this.searchInputRef = React.createRef();\n  }\n\n  /**\n   * Component did mount\n   * @method componentDidMount\n   * @returns {undefined}\n   */\n  componentDidMount() {\n    this.initialSearch(this.props.mode);\n  }\n\n  initialSearch = (mode) => {\n    const currentSelected =\n      mode === 'multiple'\n        ? ''\n        : mode === 'image'\n        ? this.state.selectedImage\n        : this.state.selectedHref;\n    if (currentSelected && isInternalURL(currentSelected)) {\n      this.props.searchContent(\n        getParentURL(currentSelected),\n        {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          b_size: 1000,\n        },\n        `${this.props.block}-${mode}`,\n      );\n    } else {\n      this.props.searchContent(\n        this.state.currentFolder,\n        {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          b_size: 1000,\n        },\n        `${this.props.block}-${mode}`,\n      );\n    }\n  };\n\n  navigateTo = (id) => {\n    this.props.searchContent(\n      id,\n      {\n        'path.depth': 1,\n        sort_on: 'getObjPositionInParent',\n        metadata_fields: '_all',\n        b_size: 1000,\n      },\n      `${this.props.block}-${this.props.mode}`,\n    );\n    const parent = `${join(id.split('/').slice(0, -1), '/')}` || '/';\n    this.setState(() => ({\n      parentFolder: parent,\n      currentFolder: id || '/',\n    }));\n  };\n\n  toggleSearchInput = () =>\n    this.setState(\n      (prevState) => ({\n        showSearchInput: !prevState.showSearchInput,\n      }),\n      () => {\n        if (this.searchInputRef?.current) this.searchInputRef.current.focus();\n      },\n    );\n\n  onSearch = (e) => {\n    const text = flattenToAppURL(e.target.value);\n    if (text.startsWith('/')) {\n      this.setState({ currentFolder: text });\n      this.props.searchContent(\n        text,\n        {\n          'path.depth': 1,\n          sort_on: 'getObjPositionInParent',\n          metadata_fields: '_all',\n          portal_type: this.state.searchableTypes,\n        },\n        `${this.props.block}-${this.props.mode}`,\n      );\n    } else {\n      text.length > 2\n        ? this.props.searchContent(\n            '/',\n            {\n              SearchableText: `${text}*`,\n              metadata_fields: '_all',\n              portal_type: this.state.searchableTypes,\n            },\n            `${this.props.block}-${this.props.mode}`,\n          )\n        : this.props.searchContent(\n            '/',\n            {\n              'path.depth': 1,\n              sort_on: 'getObjPositionInParent',\n              metadata_fields: '_all',\n              portal_type: this.state.searchableTypes,\n            },\n            `${this.props.block}-${this.props.mode}`,\n          );\n    }\n  };\n\n  onSelectItem = (item) => {\n    const url = item['@id'];\n    const { block, data, mode, dataName, onChangeBlock } = this.props;\n\n    const updateState = (mode) => {\n      switch (mode) {\n        case 'image':\n          this.setState({\n            selectedImage: url,\n            currentImageFolder: getParentURL(url),\n          });\n          break;\n        case 'link':\n          this.setState({\n            selectedHref: url,\n            currentLinkFolder: getParentURL(url),\n          });\n          break;\n        default:\n          break;\n      }\n    };\n\n    if (dataName) {\n      onChangeBlock(block, {\n        ...data,\n        [dataName]: url,\n      });\n    } else if (this.props.onSelectItem) {\n      this.props.onSelectItem(url, item);\n    } else if (mode === 'image') {\n      onChangeBlock(block, {\n        ...data,\n        url: flattenToAppURL(item.getURL),\n        alt: '',\n      });\n    } else if (mode === 'link') {\n      onChangeBlock(block, {\n        ...data,\n        href: flattenToAppURL(url),\n      });\n    }\n    updateState(mode);\n  };\n\n  onChangeBlockData = (key, value) => {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      [key]: value,\n    });\n  };\n\n  isSelectable = (item) => {\n    return this.props.selectableTypes.length > 0\n      ? this.props.selectableTypes.indexOf(item['@type']) >= 0\n      : true;\n  };\n\n  handleClickOnItem = (item) => {\n    if (this.props.mode === 'image') {\n      if (item.is_folderish) {\n        this.navigateTo(item['@id']);\n      }\n      if (config.settings.imageObjects.includes(item['@type'])) {\n        this.onSelectItem(item);\n      }\n    } else {\n      if (this.isSelectable(item)) {\n        if (\n          !this.props.maximumSelectionSize ||\n          this.props.mode === 'multiple' ||\n          !this.props.data ||\n          this.props.data.length < this.props.maximumSelectionSize\n        ) {\n          this.onSelectItem(item);\n          let length = this.props.data ? this.props.data.length : 0;\n\n          let stopSelecting =\n            this.props.mode !== 'multiple' ||\n            (this.props.maximumSelectionSize > 0 &&\n              length + 1 >= this.props.maximumSelectionSize);\n\n          if (stopSelecting) {\n            this.props.closeObjectBrowser();\n          }\n        } else {\n          this.props.closeObjectBrowser();\n        }\n      } else {\n        this.navigateTo(item['@id']);\n      }\n    }\n  };\n\n  handleDoubleClickOnItem = (item) => {\n    if (this.props.mode === 'image') {\n      if (item.is_folderish) {\n        this.navigateTo(item['@id']);\n      }\n      if (config.settings.imageObjects.includes(item['@type'])) {\n        this.onSelectItem(item);\n        this.props.closeObjectBrowser();\n      }\n    } else {\n      if (this.isSelectable(item)) {\n        if (this.props.data.length < this.props.maximumSelectionSize) {\n          this.onSelectItem(item);\n        }\n        this.props.closeObjectBrowser();\n      } else {\n        this.navigateTo(item['@id']);\n      }\n    }\n  };\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    return (\n      <Segment.Group raised>\n        <header className=\"header pulled\">\n          <div className=\"vertical divider\" />\n          {this.state.currentFolder === '/' ? (\n            <>\n              {this.props.mode === 'image' ? (\n                <Icon name={folderSVG} size=\"24px\" />\n              ) : (\n                <Icon name={linkSVG} size=\"24px\" />\n              )}\n            </>\n          ) : (\n            <button\n              aria-label={this.props.intl.formatMessage(messages.back)}\n              onClick={() => this.navigateTo(this.state.parentFolder)}\n            >\n              <Icon name={backSVG} size=\"24px\" />\n            </button>\n          )}\n          {this.state.showSearchInput ? (\n            <Input\n              className=\"search\"\n              ref={this.searchInputRef}\n              onChange={this.onSearch}\n              placeholder={this.props.intl.formatMessage(\n                messages.SearchInputPlaceholder,\n              )}\n            />\n          ) : this.props.mode === 'image' ? (\n            <h2>\n              <FormattedMessage\n                id=\"Choose Image\"\n                defaultMessage=\"Choose Image\"\n              />\n            </h2>\n          ) : (\n            <h2>\n              <FormattedMessage\n                id=\"Choose Target\"\n                defaultMessage=\"Choose Target\"\n              />\n            </h2>\n          )}\n\n          <button\n            aria-label={this.props.intl.formatMessage(messages.search)}\n            onClick={this.toggleSearchInput}\n          >\n            <Icon name={searchSVG} size=\"24px\" />\n          </button>\n          <button className=\"clearSVG\" onClick={this.props.closeObjectBrowser}>\n            <Icon name={clearSVG} size=\"24px\" />\n          </button>\n        </header>\n        <Segment secondary className=\"breadcrumbs\" vertical>\n          <Breadcrumb>\n            {this.state.currentFolder !== '/' ? (\n              this.state.currentFolder.split('/').map((item, index, items) => {\n                return (\n                  <React.Fragment key={`divider-${item}-${index}`}>\n                    {index === 0 ? (\n                      <Breadcrumb.Section onClick={() => this.navigateTo('/')}>\n                        <Icon\n                          className=\"home-icon\"\n                          name={homeSVG}\n                          size=\"18px\"\n                        />\n                      </Breadcrumb.Section>\n                    ) : (\n                      <>\n                        <Breadcrumb.Divider key={`divider-${item.url}`} />\n                        <Breadcrumb.Section\n                          onClick={() =>\n                            this.navigateTo(items.slice(0, index + 1).join('/'))\n                          }\n                        >\n                          {item}\n                        </Breadcrumb.Section>\n                      </>\n                    )}\n                  </React.Fragment>\n                );\n              })\n            ) : (\n              <Breadcrumb.Section onClick={() => this.navigateTo('/')}>\n                <Icon className=\"home-icon\" name={homeSVG} size=\"18px\" />\n              </Breadcrumb.Section>\n            )}\n          </Breadcrumb>\n        </Segment>\n        {this.props.mode === 'multiple' && (\n          <Segment className=\"infos\">\n            {this.props.intl.formatMessage(messages.SelectedItems)}:{' '}\n            {this.props.data?.length}\n            {this.props.maximumSelectionSize > 0 && (\n              <>\n                {' '}\n                {this.props.intl.formatMessage(messages.of)}{' '}\n                {this.props.maximumSelectionSize}\n              </>\n            )}\n          </Segment>\n        )}\n        <ObjectBrowserNav\n          currentSearchResults={\n            this.props.searchSubrequests[\n              `${this.props.block}-${this.props.mode}`\n            ]\n          }\n          selected={\n            this.props.mode === 'multiple'\n              ? this.props.data\n              : [\n                  {\n                    '@id':\n                      this.props.mode === 'image'\n                        ? this.state.selectedImage\n                        : this.state.selectedHref,\n                  },\n                ]\n          }\n          handleClickOnItem={this.handleClickOnItem}\n          handleDoubleClickOnItem={this.handleDoubleClickOnItem}\n          mode={this.props.mode}\n          navigateTo={this.navigateTo}\n          isSelectable={this.isSelectable}\n        />\n      </Segment.Group>\n    );\n  }\n}\n\nexport default compose(\n  injectIntl,\n  connect(\n    (state) => ({\n      searchSubrequests: state.search.subrequests,\n    }),\n    { searchContent },\n  ),\n)(ObjectBrowserBody);\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[{"id":"Search content","defaultMessage":"Search content"},{"id":"Selected items","defaultMessage":"Selected items"},{"id":"Back","defaultMessage":"Back"},{"id":"Search SVG","defaultMessage":"Search SVG"},{"id":"Selected items - x of y","defaultMessage":"of"},{"id":"Choose Image","defaultMessage":"Choose Image"},{"id":"Choose Target","defaultMessage":"Choose Target"}]}},"sourceType":"module","externalDependencies":[]}