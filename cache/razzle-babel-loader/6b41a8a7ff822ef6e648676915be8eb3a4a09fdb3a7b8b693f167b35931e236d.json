{"ast":null,"code":"var _jsxFileName = \"/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/editor/ui/SlateToolbar.jsx\",\n  _this = this;\nvar __jsx = React.createElement;\n/**\n * This is the main toolbar, which:\n *\n * - appears only when a range selection exists\n * - can be toggled between expanded and hovering state\n *\n */\n\nimport React from 'react';\nimport cx from 'classnames';\nimport toggleIcon from '@plone/volto/icons/more.svg';\nimport Toolbar from './Toolbar';\nimport ExpandedToolbar from './ExpandedToolbar';\nimport ToolbarButton from './ToolbarButton';\nimport config from '@plone/volto/registry';\nvar SlateToolbar = function SlateToolbar(props) {\n  var selected = props.selected,\n    showExpandedToolbar = props.showExpandedToolbar,\n    setShowExpandedToolbar = props.setShowExpandedToolbar,\n    className = props.className,\n    _props$enableExpando = props.enableExpando,\n    enableExpando = _props$enableExpando === void 0 ? false : _props$enableExpando,\n    show = props.show;\n  var slate = config.settings.slate;\n  var toolbarButtons = slate.toolbarButtons,\n    expandedToolbarButtons = slate.expandedToolbarButtons,\n    buttons = slate.buttons;\n  function renderButton(name, index) {\n    var Btn = buttons[name];\n    if (!Btn) {\n      // eslint-disable-next-line\n      console.warn('Button not found:', name);\n      return null;\n    }\n    // using also name because some buttons can be like \"Separator\"\n    return __jsx(Btn, {\n      key: \"\".concat(name, \"-\").concat(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    });\n  }\n  return __jsx(React.Fragment, null, !showExpandedToolbar && __jsx(Toolbar, {\n    show: show,\n    toggleButton: enableExpando && __jsx(ToolbarButton, {\n      title: \"More...\",\n      onMouseDown: function onMouseDown(event) {\n        setShowExpandedToolbar(!showExpandedToolbar);\n        event.preventDefault();\n      },\n      icon: toggleIcon,\n      active: showExpandedToolbar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }),\n    className: className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, toolbarButtons === null || toolbarButtons === void 0 ? void 0 : toolbarButtons.map(renderButton)), __jsx(\"div\", {\n    className: cx('toolbar-wrapper', {\n      active: showExpandedToolbar && selected\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, selected && showExpandedToolbar && __jsx(ExpandedToolbar, {\n    show: show,\n    toggleButton: __jsx(ToolbarButton, {\n      title: \"Less...\",\n      onMouseDown: function onMouseDown(event) {\n        setShowExpandedToolbar(!showExpandedToolbar);\n        event.preventDefault();\n      },\n      icon: toggleIcon,\n      active: showExpandedToolbar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, expandedToolbarButtons === null || expandedToolbarButtons === void 0 ? void 0 : expandedToolbarButtons.map(renderButton))));\n};\n_c = SlateToolbar;\nexport default SlateToolbar;\nvar _c;\n$RefreshReg$(_c, \"SlateToolbar\");","map":{"version":3,"names":["React","cx","toggleIcon","Toolbar","ExpandedToolbar","ToolbarButton","config","SlateToolbar","props","selected","showExpandedToolbar","setShowExpandedToolbar","className","enableExpando","show","slate","settings","toolbarButtons","expandedToolbarButtons","buttons","renderButton","name","index","Btn","console","warn","event","preventDefault","map","active"],"sources":["/home/tooler/code/work/forests-frontend/src/develop/volto-slate/src/editor/ui/SlateToolbar.jsx"],"sourcesContent":["/**\n * This is the main toolbar, which:\n *\n * - appears only when a range selection exists\n * - can be toggled between expanded and hovering state\n *\n */\n\nimport React from 'react';\nimport cx from 'classnames';\n\nimport toggleIcon from '@plone/volto/icons/more.svg';\n\nimport Toolbar from './Toolbar';\nimport ExpandedToolbar from './ExpandedToolbar';\nimport ToolbarButton from './ToolbarButton';\n\nimport config from '@plone/volto/registry';\n\nconst SlateToolbar = (props) => {\n  const {\n    selected,\n    showExpandedToolbar,\n    setShowExpandedToolbar,\n    className,\n    enableExpando = false,\n    show,\n  } = props;\n  const { slate } = config.settings;\n  const { toolbarButtons, expandedToolbarButtons, buttons } = slate;\n\n  function renderButton(name, index) {\n    const Btn = buttons[name];\n    if (!Btn) {\n      // eslint-disable-next-line\n      console.warn('Button not found:', name);\n      return null;\n    }\n    // using also name because some buttons can be like \"Separator\"\n    return <Btn key={`${name}-${index}`} />;\n  }\n\n  return (\n    <>\n      {!showExpandedToolbar && (\n        <Toolbar\n          show={show}\n          toggleButton={\n            enableExpando && (\n              <ToolbarButton\n                title=\"More...\"\n                onMouseDown={(event) => {\n                  setShowExpandedToolbar(!showExpandedToolbar);\n                  event.preventDefault();\n                }}\n                icon={toggleIcon}\n                active={showExpandedToolbar}\n              />\n            )\n          }\n          className={className}\n        >\n          {toolbarButtons?.map(renderButton)}\n        </Toolbar>\n      )}\n      <div\n        className={cx('toolbar-wrapper', {\n          active: showExpandedToolbar && selected,\n        })}\n      >\n        {selected && showExpandedToolbar && (\n          <ExpandedToolbar\n            show={show}\n            toggleButton={\n              <ToolbarButton\n                title=\"Less...\"\n                onMouseDown={(event) => {\n                  setShowExpandedToolbar(!showExpandedToolbar);\n                  event.preventDefault();\n                }}\n                icon={toggleIcon}\n                active={showExpandedToolbar}\n              />\n            }\n          >\n            {expandedToolbarButtons?.map(renderButton)}\n          </ExpandedToolbar>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default SlateToolbar;\n"],"mappings":"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"},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module","externalDependencies":[]}